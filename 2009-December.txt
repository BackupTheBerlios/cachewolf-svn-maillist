From araber95 at mail.berlios.de  Tue Dec  1 12:11:04 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Tue, 1 Dec 2009 12:11:04 +0100
Subject: [Cachewolf-svn] r2353 - trunk/src/CacheWolf/navi
Message-ID: <200912011111.nB1BB4V8006768@sheep.berlios.de>

Author: araber95
Date: 2009-12-01 12:11:02 +0100 (Tue, 01 Dec 2009)
New Revision: 2353

Modified:
   trunk/src/CacheWolf/navi/MovingMap.java
Log:
seems to prevent disappearing of (menu)icons in MovingMap.java

Modified: trunk/src/CacheWolf/navi/MovingMap.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMap.java	2009-11-30 20:21:00 UTC (rev 2352)
+++ trunk/src/CacheWolf/navi/MovingMap.java	2009-12-01 11:11:02 UTC (rev 2353)
@@ -418,7 +418,7 @@
 		running = true;
 
 		// to load maplist + place a map on screen otherwise no symbol can be placed
-		dontUpdatePos=true; // else overlay symbols are removed on started gps
+		ignoreGps=true; // else overlay symbols are removed on started gps
 		loadBestMap(centerTo);
 
 		// update cache symbols in map
@@ -442,7 +442,7 @@
 		}
 
 		repaint();
-		dontUpdatePos=false;
+		ignoreGps=false;
 		return ret;
 	}
 



From araber95 at mail.berlios.de  Tue Dec  1 22:27:04 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Tue, 1 Dec 2009 22:27:04 +0100
Subject: [Cachewolf-svn] r2354 - in trunk/src/CacheWolf: . exp imp
Message-ID: <200912012127.nB1LR4Vl004305@sheep.berlios.de>

Author: araber95
Date: 2009-12-01 22:26:58 +0100 (Tue, 01 Dec 2009)
New Revision: 2354

Modified:
   trunk/src/CacheWolf/CacheType.java
   trunk/src/CacheWolf/GuiImageBroker.java
   trunk/src/CacheWolf/exp/ExploristExporter.java
   trunk/src/CacheWolf/exp/GPXExporter.java
   trunk/src/CacheWolf/exp/GpxExportNg.java
   trunk/src/CacheWolf/exp/HTMLExporter.java
   trunk/src/CacheWolf/exp/KMLExporter.java
   trunk/src/CacheWolf/exp/MSARCSVExporter.java
   trunk/src/CacheWolf/exp/TPLExporter.java
   trunk/src/CacheWolf/imp/OCXMLImporterScreen.java
Log:
Doing some internal changes to representation of CacheType.java. Affecting also the exporters (and one importer)
Now the old gpx - exporter should work like he did for long time.
The Exporter NG should work as he did before.


Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-12-01 11:11:02 UTC (rev 2353)
+++ trunk/src/CacheWolf/CacheType.java	2009-12-01 21:26:58 UTC (rev 2354)
@@ -4,203 +4,152 @@
  * Handles all aspects of converting cache type information from
  * and to the various im- and exporters as well as for converting
  * legacy profiles to current standard
- * 
+ *
  * Do not instantiate this class, only use it in a static way
  */
 public final class CacheType {
-	
+
+	/** thou shallst not instantiate this object */
+	private CacheType() {
+		// Nothing to do
+	}
+
 	/** custom waypoint */
 	public static final byte CW_TYPE_CUSTOM = 0;
-	/** traditional cache (GC,OC) */
-	public static final byte CW_TYPE_TRADITIONAL = 2;
-	/** multi cache (GC,OC) */
-	public static final byte CW_TYPE_MULTI = 3;
-	/** virtual cache (GC) */
-	public static final byte CW_TYPE_VIRTUAL = 4;
-	/** letterbox cache (GC) */
-	public static final byte CW_TYPE_LETTERBOX = 5;
-	/** event cache (OC,GC) */
-	public static final byte CW_TYPE_EVENT = 6;
-	/** quiz cache (OC) */
-	public static final byte CW_TYPE_QUIZ = 7;
-	/** unknown cache (GC) */
-	public static final byte CW_TYPE_UNKNOWN = 8;
-	/** math cache (OC) */
-	public static final byte CW_TYPE_MATH = 108;
-	/** moving cache (OC) */
-	public static final byte CW_TYPE_MOVING = 9;
+	/** Project Ape cache (GC)*/
+	public static final byte CW_TYPE_APE = 102;
+	/** CITO cache (GC,OC)*/
+	public static final byte CW_TYPE_CITO = 13;
 	/** drive in cache (OC) */
 	public static final byte CW_TYPE_DRIVE_IN = 10;
-	/** webcam cache (GC,OC) */
-	public static final byte CW_TYPE_WEBCAM = 11;
+	/** Earth Cache (GC) */
+	public static final byte CW_TYPE_EARTH = 104;
+
+	/** event cache (OC,GC) */
+	public static final byte CW_TYPE_EVENT = 6;
+	/** Additional Waypoint Final (GC) */
+	public static final byte CW_TYPE_FINAL = 53;
+	/** letterbox cache (GC) */
+	public static final byte CW_TYPE_LETTERBOX = 5;
 	/** locationless cache (GC) */
 	public static final byte CW_TYPE_LOCATIONLESS = 12;
-	/** CITO cache (GC,OC)*/
-	public static final byte CW_TYPE_CITO = 13;
+	/** Adenture Maze Exhibit (GC)*/
+	public static final byte CW_TYPE_MAZE = 103;
+
+	/** Mega Event Cache (GC) */
+	public static final byte CW_TYPE_MEGA_EVENT = 100;
+	/** multi cache (GC,OC) */
+	public static final byte CW_TYPE_MULTI = 3;
 	/** Additional Waypoint Parking (GC) */
 	public static final byte CW_TYPE_PARKING = 50;
-	/** Additional Waypoint Stage of a Multi (GC) */
-	public static final byte CW_TYPE_STAGE = 51;
 	/** Additional Waypoint Question to answer (GC) */
 	public static final byte CW_TYPE_QUESTION = 52;
-	/** Additional Waypoint Final (GC) */
-	public static final byte CW_TYPE_FINAL = 53;
-	/** Additional Waypoint Trailhead (GC) */
-	public static final byte CW_TYPE_TRAILHEAD = 54;
 	/** Additional Waypoint Reference (GC) */
 	public static final byte CW_TYPE_REFERENCE = 55;
-	/** Mega Event Cache (GC) */
-	public static final byte CW_TYPE_MEGA_EVENT = 100;
+
+	/** Additional Waypoint Stage of a Multi (GC) */
+	public static final byte CW_TYPE_STAGE = 51;
+	/** traditional cache (GC,OC) */
+	public static final byte CW_TYPE_TRADITIONAL = 2;
+	/** Additional Waypoint Trailhead (GC) */
+	public static final byte CW_TYPE_TRAILHEAD = 54;
+	/** unknown cache (GC) */
+	public static final byte CW_TYPE_UNKNOWN = 8;
+	/** virtual cache (GC) */
+	public static final byte CW_TYPE_VIRTUAL = 4;
+
+	/** webcam cache (GC,OC) */
+	public static final byte CW_TYPE_WEBCAM = 11;
 	/** WhereIGo Cache (GC) */
 	public static final byte CW_TYPE_WHEREIGO = 101;
-	/** Project Ape cache (GC)*/
-	public static final byte CW_TYPE_APE = 102;
-	/** Adenture Maze Exhibit (GC)*/
-	public static final byte CW_TYPE_MAZE = 103;
-	/** Earth Cache (GC) */
-	public static final byte CW_TYPE_EARTH = 104;
+
+	/** quiz cache (OC) */
+	public static final byte CW_TYPE_QUIZ = 7;
+	/** math cache (OC) */
+	public static final byte CW_TYPE_MATH = 108;
+	/** moving cache (OC) */
+	public static final byte CW_TYPE_MOVING = 9;
+
 	/** unrecognized cache type or missing information, should throw IllegalArgumentExceptions when found */
 	public static final byte CW_TYPE_ERROR = -1;
-	
-	/** image for custom waypoints */
-	public static final String CW_GUIIMG_CUSTOM = "typeCustom.png";
-	/** image for traditional cache (GC,OC) */
-	public static final String CW_GUIIMG_TRADITIONAL = "typeTradi.png";
-	/** image for multi cache (GC,OC) */
-	public static final String CW_GUIIMG_MULTI = "typeMulti.png";
-	/** image for virtual cache (GC) */
-	public static final String CW_GUIIMG_VIRTUAL = "typeVirtual.png";
-	/** image for letterbox cache (GC) */
-	public static final String CW_GUIIMG_LETTERBOX = "typeLetterbox.png";
-	/** image for event cache (OC,GC) */
-	public static final String CW_GUIIMG_EVENT = "typeEvent.png";
-	/** image for quiz cache (OC) */
-	public static final String CW_GUIIMG_QUIZ = "typeUnknown.png";
-	/** image for unknown cache (GC) */
-	public static final String CW_GUIIMG_UNKNOWN = "typeUnknown.png";
-	/** image for math cache (OC) */
-	public static final String CW_GUIIMG_MATH = "typeMath.png";
-	/** image for moving cache (OC) */
-	public static final String CW_GUIIMG_MOVING = "typeMoving.png";
-	/** image for drive in cache (OC) */
-	public static final String CW_GUIIMG_DRIVE_IN = "typeDrivein.png";
-	/** image for webcam cache (GC,OC) */
-	public static final String CW_GUIIMG_WEBCAM = "typeWebcam.png";
-	/** image for locationless cache (GC) */
-	public static final String CW_GUIIMG_LOCATIONLESS = "typeLocless.png";
-	/** image for CITO cache (GC,OC)*/
-	public static final String CW_GUIIMG_CITO = "typeCito.png";
-	/** image for Additional Waypoint Parking (GC) */
-	public static final String CW_GUIIMG_PARKING = "typeParking.png";
-	/** image for Additional Waypoint Stage of a Multi (GC) */
-	public static final String CW_GUIIMG_STAGE = "typeStage.png";
-	/** image for Additional Waypoint Question to answer (GC) */
-	public static final String CW_GUIIMG_QUESTION = "typeQuestion.png";
-	/** image for Additional Waypoint Final (GC) */
-	public static final String CW_GUIIMG_FINAL = "typeFinal.png";
-	/** image for Additional Waypoint Trailhead (GC) */
-	public static final String CW_GUIIMG_TRAILHEAD = "typeTrailhead.png";
-	/** image for Additional Waypoint Reference Point (GC) */
-	public static final String CW_GUIIMG_REFERENCE = "typeReference.png";
-	/** image for Mega Event Cache (GC) */
-	public static final String CW_GUIIMG_MEGA_EVENT = "typeMegaevent.png";
-	/** image for WhereIGo Cache (GC) */
-	public static final String CW_GUIIMG_WHEREIGO = "typeWhereigo.png";
-	/** image for Project Ape cache (GC)*/
-	public static final String CW_GUIIMG_APE = "typeApe.png";
-	/** image for Adenture Maze Exhibit (GC)*/
-	public static final String CW_GUIIMG_MAZE = "typeMaze.png";
-	/** image for Earth Cache (GC) */
-	public static final String CW_GUIIMG_EARTH = "typeEarth.png";
-	
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_CUSTOM = "Custom";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_TRADI = "Traditional";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_MULTI = "Multi";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_VIRTUAL = "Virtual";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_LETTERBOX = "Letterbox";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_EVENT = "Event";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_MEGAEVENT = "Mega Event";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_WEBCAM = "Webcam";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_UNKNOWN = "Mystery";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_LOCATIONLESS = "Locationless";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_CITO = "CITO";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_EARTH = "Earthcache";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_WHEREIGO = "WherIGo";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_PARKING = "Addi: Parking";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_STAGE = "Addi: Stage";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_QUESTION = "Addi: Question";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_FINAL = "Addi: Final";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_TRAILHEAD = "Addi: Trailhead";
-	/** GUI string for custom waypoit */
-	public static final String CW_GUISTR_REFERENCE = "Addi: Reference";
-	
-	/** GPX identifier for Traditional caches */
-	public static final String GC_GPX_TRADITIONAL = "Traditional Cache";
-	/** GPX identifier for Multi caches */
-	public static final String GC_GPX_MULTI = "Multi-cache";
-	/** GPX identifier for virtual caches */
-	public static final String GC_GPX_VIRTUAL = "Virtual Cache";
-	/** GPX identifier for Letterbox hybrids */
-	public static final String GC_GPX_LETTERBOX = "Letterbox Hybrid";
-	/** GPX identifier for Event caches */
-	public static final String GC_GPX_EVENT = "Event Cache";
-	/** GPX identifier for Unknown or Mystery caches */ 
-	public static final String GC_GPX_UNKNOWN = "Unknown Cache";
-	/** GPX identifier for Webcam caches */
-	public static final String GC_GPX_WEBCAM = "Webcam Cache";
-	/** GPX identifier for Locationless caches */
-	public static final String GC_GPX_LOCATIONLESS = "Locationless (Reverse) Cache";
-	/** GPX identifier for CITO events */
-	public static final String GC_GPX_CITO = "Cache In Trash Out Event";
-	/** GPX identifier for Earth caches */
-	public static final String GC_GPX_EARTH = "Earthcache";
-	/** GPX identifier for Mega Events */
-	public static final String GC_GPX_MEGA_EVENT = "Mega-Event Cache";
-	/** GPX identifier for WhereIGo caches */
-	public static final String GC_GPX_WHEREIGO = "Wherigo Cache";
-	/** GPX identifier for additional waypoint Parking */
-	public static final String GC_GPX_PARKING = "Waypoint|Parking Area";
-	/** GPX identifier for additional waypoint Stage */
-	public static final String GC_GPX_STAGE = "Waypoint|Stages of a Multicache";
-	/** GPX identifier for additional waypoint QTA */
-	public static final String GC_GPX_QUESTION = "Waypoint|Question to Answer";
-	/** GPX identifier for additional waypoint Final */
-	public static final String GC_GPX_FINAL = "Waypoint|Final Location";
-	/** GPX identifier for additional waypoint Trailhead */
-	public static final String GC_GPX_TRAILHEAD = "Waypoint|Trailhead";
-	/** GPX identifier for additional waypoint Reference Point */
-	public static final String GC_GPX_REFERENCE = "Waypoint|Reference Point";
-	/** GPX identifier for additional waypoint Adventure Maze Exhibit Events */
-	public static final String GC_GPX_MAZE = "GPS Adventures Exhibit"; 
-	/** GPX identifier for additional waypoint Project Ape caches */
-	public static final String GC_GPX_APE = "Project APE Cache";
 
-	/** thou shallst not instantiate this object */
-	private CacheType() { 
-		// Nothing to do
+	static final byte[] CT={
+		CW_TYPE_CUSTOM, CW_TYPE_APE, CW_TYPE_CITO, CW_TYPE_DRIVE_IN, CW_TYPE_EARTH,
+		CW_TYPE_EVENT, CW_TYPE_FINAL, CW_TYPE_LETTERBOX, CW_TYPE_LOCATIONLESS, CW_TYPE_MAZE,
+		CW_TYPE_MEGA_EVENT, CW_TYPE_MULTI, CW_TYPE_PARKING, CW_TYPE_QUESTION, CW_TYPE_REFERENCE,
+		CW_TYPE_STAGE, CW_TYPE_TRADITIONAL, CW_TYPE_TRAILHEAD, CW_TYPE_UNKNOWN, CW_TYPE_VIRTUAL,
+		CW_TYPE_WEBCAM, CW_TYPE_WHEREIGO,
+		CW_TYPE_QUIZ, CW_TYPE_MATH, CW_TYPE_MOVING,
+		CW_TYPE_ERROR
+};
+	// 0=Custom - 1=APE ("Project APE Cache") - 2=CITO - 3=Drive_In - 4=Earthcache
+	// 5=Event - 6=Final - 7=Letterbox - 8=Locationless - 9=Maze ("Adventure Maze Exhibit")
+	// 10=Megaevent - 11=Multi - 12=Parking - 13=Question - 14=Reference
+	// 15=Stage - 16=Traditional - 17=Trailhead - 18=Unknown(Mysterie) - 19=Virtual
+	// 20=Webcam - 21=Wherigo
+	// 22=Quiz(Unknown) - 23=Math - 24=Moving
+	// 25=Error
+	/*
+	static final byte[] CTn= {
+			0,102,13,10,104,
+			6,53,5,12,103,
+			100,3,50,52,55,
+			51,2,54,8,4,
+			11,101,
+			7,108,9,
+			-1
+	};
+	*/
+	static final byte[] CT_Index = new byte[110];
+	static {
+	  for (byte i=0; i<CT.length; i++) {
+	    CT_Index[CT[i]+1]=i;
+	   }
 	}
-	
+	public static byte CT_Index(final byte type) {
+		return CT_Index[type+1];			
+	}
+		
+	static final String[] CT_FILENAME={
+		"typeCustom.png", "typeApe.png", "typeCito.png", "typeDrivein.png", "typeEarth.png",
+		"typeEvent.png", "typeFinal.png", "typeLetterbox.png", "typeLocless.png", "typeMaze.png",
+		"typeMegaevent.png", "typeMulti.png", "typeParking.png", "typeQuestion.png", "typeReference.png",
+		"typeStage.png", "typeTradi.png", "typeTrailhead.png", "typeUnknown.png", "typeVirtual.png",
+		"typeWebcam.png", "typeWhereigo.png",
+		"typeUnknown.png", "typeMath.png", "typeMoving.png",
+		"guiError.png"
+	};
+	static final String[] CT_GPXTYPE = {
+		"Geocache|Custom", "Geocache|Project APE Cache", "Geocache|Cache In Trash Out Event", "Geocache|DriveIn", "Geocache|Earthcache",
+		"Geocache|Event Cache", "Waypoint|Final Location", "Geocache|Letterbox Hybrid", "Geocache|Locationless (Reverse) Cache", "Geocache|GPS Adventures Exhibit",
+		"Geocache|Mega-Event Cache", "Geocache|Multi-cache", "Waypoint|Parking Area", "Waypoint|Question to Answer", "Waypoint|Reference Point",
+		"Waypoint|Stages of a Multicache", "Geocache|Traditional Cache", "Waypoint|Trailhead", "Geocache|Unknown Cache", "Geocache|Virtual Cache",
+		"Geocache|Webcam Cache", "Geocache|Wherigo Cache",
+		"Geocache|Unknown Cache", "Geocache|Math", "Geocache|Moving",
+		"Fehler"
+	};
+	static final String[] CT_GPXSYM = {
+		"Custom", "Project APE Cache", "Cache In Trash Out Event", "DriveIn", "Earthcache",
+		"Event Cache", "Final Location", "Letterbox Hybrid", "Locationless (Reverse) Cache", "GPS Adventures Exhibit",
+		"Mega-Event Cache", "Multi-cache", "Parking Area", "Question to Answer", "Reference Point",
+		"Stages of a Multicache", "Traditional Cache", "Trailhead", "Unknown Cache", "Virtual Cache",
+		"Webcam Cache", "Wherigo Cache",
+		"Unknown Cache", "Math", "Moving",
+		"Fehler"
+	};
+	//TODO: texts from mylocale ?
+	public static final String[] CT_GUI={
+		"Custom", "APE", "CITO", "DriveIn", "Earthcache",
+		"Event", "Addi: Final", "Letterbox", "Locationless", "MAZE",
+		"Mega Event", "Multi", "Addi: Parking", "Addi: Question", "Addi: Reference",
+		"Addi: Stage", "Traditional", "Addi: Trailhead", "Mystery", "Virtual",
+		"Webcam", "WherIGo",
+		"Quiz", "Math", "Moving",
+		"Fehler"
+	};
 
 	/**
-	 * translate cache type to a short version for compact exporters or "smart" cache names. 
+	 * translate cache type to a short version for compact exporters or "smart" cache names.
 	 * @param type CacheWolf internal type information
 	 * @return abbreviation of cache type
 	 * @throws IllegalArgumentException if <code>type</code> can not be mapped
@@ -231,7 +180,7 @@
 		default: throw new IllegalArgumentException("unmatched argument "+type+" in CacheSize getExportShortId()");
 		}
 	}
-	
+
 	/**
 	 * convert version1 type information to current values
 	 * @param type version1 cache type information
@@ -259,7 +208,7 @@
 		if (type.equals("453")) return CW_TYPE_MEGA_EVENT;
 		if (type.equals("1858")) return CW_TYPE_WHEREIGO;
 		if (type.equals("137")) return CW_TYPE_EARTH;
-		
+
 		throw new IllegalArgumentException("unmatched argument "+type+" in CacheSize v1Converter()");
 	}
 
@@ -298,10 +247,10 @@
 		default: throw new IllegalArgumentException("unmatched argument "+type+" in CacheSize v2Converter()");
 		}
 	}
-	
+
 	/**
 	 * check if a given waypoint type is an additional waypoint
-	 * @param type waypoint type to check 
+	 * @param type waypoint type to check
 	 * @return true if it is an additional waypint, false otherwise
 	 */
 	public static boolean isAddiWpt(final byte type) {
@@ -329,11 +278,11 @@
 		default: return !isAddiWpt(type);
 		}
 	}
-	
+
 	public static boolean isCustomWpt(final byte type) {
 		return type == CW_TYPE_CUSTOM;
 	}
-	
+
 	/**
 	 * create list of cache types to be shown in GUI drop down lists
 	 * @return list of cache types to be shown in GUI drop down list
@@ -343,28 +292,28 @@
 	//TODO: move to a class "closer" to the gui?
 	public static String[] guiTypeStrings() {
 		return new String[] {
-				CW_GUISTR_CUSTOM,
-				CW_GUISTR_TRADI,
-				CW_GUISTR_MULTI,
-				CW_GUISTR_VIRTUAL,
-				CW_GUISTR_LETTERBOX,
-				CW_GUISTR_EVENT,
-				CW_GUISTR_MEGAEVENT,
-				CW_GUISTR_WEBCAM,
-				CW_GUISTR_UNKNOWN,
-				CW_GUISTR_LOCATIONLESS,
-				CW_GUISTR_CITO,
-				CW_GUISTR_EARTH,
-				CW_GUISTR_WHEREIGO,
-				CW_GUISTR_PARKING,
-				CW_GUISTR_STAGE,
-				CW_GUISTR_QUESTION,
-				CW_GUISTR_FINAL,
-				CW_GUISTR_TRAILHEAD,
-				CW_GUISTR_REFERENCE
+				CT_GUI[CT_Index(CW_TYPE_CUSTOM)],
+				CT_GUI[CT_Index(CW_TYPE_TRADITIONAL)],
+				CT_GUI[CT_Index(CW_TYPE_MULTI)],
+				CT_GUI[CT_Index(CW_TYPE_VIRTUAL)],
+				CT_GUI[CT_Index(CW_TYPE_LETTERBOX)],
+				CT_GUI[CT_Index(CW_TYPE_EVENT)],
+				CT_GUI[CT_Index(CW_TYPE_MEGA_EVENT)],
+				CT_GUI[CT_Index(CW_TYPE_WEBCAM)],
+				CT_GUI[CT_Index(CW_TYPE_UNKNOWN)],
+				CT_GUI[CT_Index(CW_TYPE_LOCATIONLESS)],
+				CT_GUI[CT_Index(CW_TYPE_CITO)],
+				CT_GUI[CT_Index(CW_TYPE_EARTH)],
+				CT_GUI[CT_Index(CW_TYPE_WHEREIGO)],
+				CT_GUI[CT_Index(CW_TYPE_PARKING)],
+				CT_GUI[CT_Index(CW_TYPE_STAGE)],
+				CT_GUI[CT_Index(CW_TYPE_QUESTION)],
+				CT_GUI[CT_Index(CW_TYPE_FINAL)],
+				CT_GUI[CT_Index(CW_TYPE_TRAILHEAD)],
+				CT_GUI[CT_Index(CW_TYPE_REFERENCE)],
 			};
 	}
-	
+
 	/**
 	 * translate GUI drop down index selection back to internally stored type
 	 * @param selection index value from drop down list
@@ -399,9 +348,9 @@
 		default: throw new IllegalArgumentException("unmatched argument "+selection+" in CacheSize guiSelect2Cw()");
 		}
 	}
-	
+
 	/**
-	 * translate cache type to position of index to highlight in GUI cache type drop down list 
+	 * translate cache type to position of index to highlight in GUI cache type drop down list
 	 * @param typeId internal id of cache type
 	 * @return index of the cache type in GUI list
 	 * @throws IllegalArgumentException if <code>id</code> can not be matched
@@ -433,36 +382,29 @@
 		default: throw new IllegalArgumentException("unmatched argument "+typeId+" in CacheSize cw2GuiSelect()");
 		}
 	}
-	
+
 	/**
-	 * convert the strings found in import of GPX from GC, OC or TC to internal cache type 
+	 * convert the strings found in import of GPX from GC, OC or TC to internal cache type
 	 * @param gpxType type information found in GPX
 	 * @return internal cache type
 	 */
 	public static byte gpxType2CwType(final String gpxType) throws IllegalArgumentException {
-		if (gpxType.equals(GC_GPX_TRADITIONAL) || gpxType.equals("Traditional")|| gpxType.equals("Classic")) return CW_TYPE_TRADITIONAL;
-		if (gpxType.equals(GC_GPX_MULTI) || gpxType.equals("Multi") || gpxType.equals("Offset")) return CW_TYPE_MULTI;
-		if (gpxType.equals(GC_GPX_VIRTUAL) || gpxType.equals("Virtual")) return CW_TYPE_VIRTUAL;
-		if (gpxType.equals(GC_GPX_LETTERBOX)) return CW_TYPE_LETTERBOX;
-		if (gpxType.equals(GC_GPX_EVENT) || gpxType.equals("Event")) return CW_TYPE_EVENT;
-		if (gpxType.equals(GC_GPX_UNKNOWN) || gpxType.equals("Other") || gpxType.equals("Quiz")) return CW_TYPE_UNKNOWN;
-		if (gpxType.equals(GC_GPX_WEBCAM) || gpxType.equals("Webcam")) return CW_TYPE_WEBCAM;
-		if (gpxType.equals(GC_GPX_LOCATIONLESS)) return CW_TYPE_LOCATIONLESS;
-		if (gpxType.equals(GC_GPX_CITO)) return CW_TYPE_CITO;
-		if (gpxType.equals(GC_GPX_EARTH) || gpxType.equals("Earth")) return CW_TYPE_EARTH;
-		if (gpxType.equals(GC_GPX_MEGA_EVENT)) return CW_TYPE_MEGA_EVENT;
-		if (gpxType.equals(GC_GPX_WHEREIGO)) return CW_TYPE_WHEREIGO;
-		if (gpxType.equals(GC_GPX_PARKING)) return CW_TYPE_PARKING;
-		if (gpxType.equals(GC_GPX_STAGE)) return CW_TYPE_STAGE;
-		if (gpxType.equals(GC_GPX_QUESTION)) return CW_TYPE_QUESTION;
-		if (gpxType.equals(GC_GPX_FINAL)||gpxType.equals("Waypoint|Final Coordinates")) return CW_TYPE_FINAL;
-		if (gpxType.equals(GC_GPX_TRAILHEAD)) return CW_TYPE_TRAILHEAD;
-		if (gpxType.equals(GC_GPX_REFERENCE)) return CW_TYPE_REFERENCE;
-		if (gpxType.equals(GC_GPX_MAZE)) return CW_TYPE_MAZE;
-		if (gpxType.equals(GC_GPX_APE)) return CW_TYPE_APE;
-		return CW_TYPE_CUSTOM;
+		for (byte i=0; i<CT.length; i++) {
+			if (CT_GPXTYPE[i].equals(gpxType)) {return CT[i];};
+		}
+		for (byte i=0; i<CT.length; i++) {
+			if (CT_GPXSYM[i].equals(gpxType)) {return CT[i];};
+		}
+		if (gpxType.equals("Traditional")|| gpxType.equals("Classic")) return CW_TYPE_TRADITIONAL;
+		if (gpxType.equals("Multi") || gpxType.equals("Offset")) return CW_TYPE_MULTI;
+		if (gpxType.equals("Virtual")) return CW_TYPE_VIRTUAL;
+		if (gpxType.equals("Event")) return CW_TYPE_EVENT;
+		if (gpxType.equals("Other") || gpxType.equals("Quiz")) return CW_TYPE_UNKNOWN;
+		if (gpxType.equals("Webcam")) return CW_TYPE_WEBCAM;
+		if (gpxType.equals("Earth")) return CW_TYPE_EARTH;
+		return CW_TYPE_ERROR;
 	}
-	
+
 	/**
 	 * convert the cache type information from an OC XML import to internal cache type
 	 * @param ocType cache type found in OC XML
@@ -472,7 +414,7 @@
 	public static byte ocType2CwType(final String ocType) throws IllegalArgumentException {
 		if(ocType.equals("1")) return CW_TYPE_UNKNOWN;
 		if(ocType.equals("2")) return CW_TYPE_TRADITIONAL;
-		if(ocType.equals("3")) return CW_TYPE_MULTI;	
+		if(ocType.equals("3")) return CW_TYPE_MULTI;
 		if(ocType.equals("4")) return CW_TYPE_VIRTUAL;
 		if(ocType.equals("5")) return CW_TYPE_WEBCAM;
 		if(ocType.equals("6")) return CW_TYPE_EVENT;
@@ -482,7 +424,7 @@
 		if(ocType.equals("10")) return CW_TYPE_TRADITIONAL; // drive in
 		throw new IllegalArgumentException("unmatched argument "+ocType+" in CacheSize ocType2CwType()");
 	}
-	
+
 	/**
 	 * convert type information discovered by GC spider to internal type information
 	 * @param gcType type information from GC spider
@@ -506,95 +448,34 @@
 		if (gcType.equals("1858")) { return CW_TYPE_WHEREIGO; }
 		throw new IllegalArgumentException("unmatched argument "+gcType+" in CacheSize gcSpider2CwType()");
 	}
-	
+
 	/**
 	 * map cache types to images
 	 * @param typeId internal cache type id
 	 * @return non qualified name of image
-	 * @throws IllegalArgumentException if <code>id</code> can not be matched
 	 */
-	public static String typeImageForId(final byte typeId) throws IllegalArgumentException {
-		switch (typeId) {
-		case CW_TYPE_CUSTOM: return "CW_GUIIMG_CUSTOM";
-		case CW_TYPE_TRADITIONAL: return CW_GUIIMG_TRADITIONAL;
-		case CW_TYPE_MULTI: return CW_GUIIMG_MULTI;
-		case CW_TYPE_VIRTUAL: return CW_GUIIMG_VIRTUAL;
-		case CW_TYPE_LETTERBOX: return CW_GUIIMG_LETTERBOX;
-		case CW_TYPE_EVENT: return CW_GUIIMG_EVENT;
-		case CW_TYPE_WEBCAM: return CW_GUIIMG_WEBCAM;
-		case CW_TYPE_UNKNOWN: return CW_GUIIMG_UNKNOWN;
-		case CW_TYPE_LOCATIONLESS: return CW_GUIIMG_LOCATIONLESS;
-		case CW_TYPE_CITO: return CW_GUIIMG_CITO;
-		case CW_TYPE_EARTH: return CW_GUIIMG_EARTH;
-		case CW_TYPE_MEGA_EVENT: return CW_GUIIMG_MEGA_EVENT;
-		case CW_TYPE_WHEREIGO: return CW_GUIIMG_WHEREIGO;
-		case CW_TYPE_PARKING: return CW_GUIIMG_PARKING;
-		case CW_TYPE_STAGE: return CW_GUIIMG_STAGE;
-		case CW_TYPE_QUESTION: return CW_GUIIMG_QUESTION;
-		case CW_TYPE_FINAL: return CW_GUIIMG_FINAL;
-		case CW_TYPE_TRAILHEAD: return CW_GUIIMG_TRAILHEAD;
-		case CW_TYPE_REFERENCE: return CW_GUIIMG_REFERENCE;
-		case CW_TYPE_APE: return CW_GUIIMG_APE;
-		case CW_TYPE_MAZE: return CW_GUIIMG_MAZE;
-		default: throw new IllegalArgumentException("unmatched argument "+typeId+" in CacheSize typeImageForId()");
-		}
+	public static String typeImageForId(final byte typeId) {
+		return CT_FILENAME[CT_Index(typeId)];
 	}
-	
+
 	/**
 	 * generate type description matching those of GC for GPX export
 	 * @param typeId internal type id
-	 * @return type information in GC.com GPX format 
-	 * @throws IllegalArgumentException
+	 * @return type information in GC.com GPX format
 	 */
-	public static String id2GpxString(final byte typeId) throws IllegalArgumentException {
-		switch (typeId) {
-		case CW_TYPE_TRADITIONAL: return GC_GPX_TRADITIONAL;
-		case CW_TYPE_MULTI: return GC_GPX_MULTI;
-		case CW_TYPE_VIRTUAL: return GC_GPX_VIRTUAL;
-		case CW_TYPE_LETTERBOX: return GC_GPX_LETTERBOX;
-		case CW_TYPE_EVENT: return GC_GPX_EVENT;
-		case CW_TYPE_UNKNOWN: return GC_GPX_UNKNOWN;
-		case CW_TYPE_WEBCAM: return GC_GPX_WEBCAM;
-		case CW_TYPE_LOCATIONLESS: return GC_GPX_LOCATIONLESS;
-		case CW_TYPE_CITO: return GC_GPX_CITO;
-		case CW_TYPE_EARTH: return GC_GPX_EARTH;
-		case CW_TYPE_MEGA_EVENT: return GC_GPX_MEGA_EVENT;
-		case CW_TYPE_WHEREIGO: return GC_GPX_WHEREIGO;
-		case CW_TYPE_PARKING: return GC_GPX_PARKING;
-		case CW_TYPE_STAGE: return GC_GPX_STAGE;
-		case CW_TYPE_QUESTION: return GC_GPX_QUESTION;
-		case CW_TYPE_FINAL: return GC_GPX_FINAL;
-		case CW_TYPE_TRAILHEAD: return GC_GPX_TRAILHEAD;
-		case CW_TYPE_REFERENCE: return GC_GPX_REFERENCE;
-		case CW_TYPE_MAZE: return GC_GPX_MAZE;
-		case CW_TYPE_APE: return GC_GPX_APE;
-		case CW_TYPE_CUSTOM: return CW_GUISTR_CUSTOM;
-		default: throw new IllegalArgumentException("unmatched argument "+typeId+" in CacheSize id2GpxString()");
-		}
+	public static String type2GpxString(final byte typeId) {
+		return CT_GPXTYPE[CT_Index(typeId)];
 	}
-	
-	//TODO: do we actually need this one?
+
 	/**
-	 * generate human readable type description for exporters
+	 * generate type description matching those of GC for GPX export
 	 * @param typeId internal type id
-	 * @return human readable description of waypoint type for exporters  
-	 * @throws IllegalArgumentException if <code>id</code> is not a valid cache type
+	 * @return symb information in GC.com GPX format
 	 */
-	public static String cw2ExportString(final byte typeId) throws IllegalArgumentException {
-		String ret;
-		try {
-			ret = id2GpxString(typeId);
-			// check for | in additional waypoints and only use the string after |
-			final int pipePosistion = ret.indexOf('|');
-			if (pipePosistion > -1) {
-				ret = ret.substring(pipePosistion+1);
-			} //TODO: check for exceeding max length
-		} catch (IllegalArgumentException ex) {
-			ret = "";
-		}
-		return ret;
+	public static String sym2GpxString(final byte typeId) {
+		return CT_GPXSYM[CT_Index(typeId)];
 	}
-	
+
 	/**
 	 * checks if the given type would be valid for internal use in cachewolf
 	 * @param type type value to be checked

Modified: trunk/src/CacheWolf/GuiImageBroker.java
===================================================================
--- trunk/src/CacheWolf/GuiImageBroker.java	2009-12-01 11:11:02 UTC (rev 2353)
+++ trunk/src/CacheWolf/GuiImageBroker.java	2009-12-01 21:26:58 UTC (rev 2354)
@@ -23,53 +23,53 @@
 	 * @see CacheTypes
 	 */
 	private static final Image[] TYPEIMAGES = {
-		new Image(CacheType.CW_GUIIMG_CUSTOM),		// 0
-		new Image(CacheType.CW_GUIIMG_APE),			// 1
-		new Image(CacheType.CW_GUIIMG_CITO),		// 2
-		new Image(CacheType.CW_GUIIMG_DRIVE_IN),	// 3
-		new Image(CacheType.CW_GUIIMG_EARTH),		// 4
-		new Image(CacheType.CW_GUIIMG_EVENT),		// 5
-		new Image(CacheType.CW_GUIIMG_FINAL),		// 6
-		new Image(CacheType.CW_GUIIMG_LETTERBOX),	// 7
-		new Image(CacheType.CW_GUIIMG_LOCATIONLESS),// 8
-		new Image(CacheType.CW_GUIIMG_MAZE),		// 9
-		new Image(CacheType.CW_GUIIMG_MEGA_EVENT),	// 10
-		new Image(CacheType.CW_GUIIMG_MULTI),		// 11
-		new Image(CacheType.CW_GUIIMG_PARKING),		// 12
-		new Image(CacheType.CW_GUIIMG_QUESTION),	// 13
-		new Image(CacheType.CW_GUIIMG_REFERENCE),	// 14
-		new Image(CacheType.CW_GUIIMG_STAGE),		// 15
-		new Image(CacheType.CW_GUIIMG_TRADITIONAL),	// 16
-		new Image(CacheType.CW_GUIIMG_TRAILHEAD),	// 17
-		new Image(CacheType.CW_GUIIMG_UNKNOWN),		// 18
-		new Image(CacheType.CW_GUIIMG_VIRTUAL),		// 19
-		new Image(CacheType.CW_GUIIMG_WEBCAM),		// 20
-		new Image(CacheType.CW_GUIIMG_WHEREIGO)		// 21
+		new Image(CacheType.CT_FILENAME[0]),
+		new Image(CacheType.CT_FILENAME[1]),
+		new Image(CacheType.CT_FILENAME[2]),
+		new Image(CacheType.CT_FILENAME[3]),
+		new Image(CacheType.CT_FILENAME[4]),
+		new Image(CacheType.CT_FILENAME[5]),
+		new Image(CacheType.CT_FILENAME[6]),
+		new Image(CacheType.CT_FILENAME[7]),
+		new Image(CacheType.CT_FILENAME[8]),
+		new Image(CacheType.CT_FILENAME[9]),
+		new Image(CacheType.CT_FILENAME[10]),
+		new Image(CacheType.CT_FILENAME[11]),
+		new Image(CacheType.CT_FILENAME[12]),
+		new Image(CacheType.CT_FILENAME[13]),
+		new Image(CacheType.CT_FILENAME[14]),
+		new Image(CacheType.CT_FILENAME[15]),
+		new Image(CacheType.CT_FILENAME[16]),
+		new Image(CacheType.CT_FILENAME[17]),
+		new Image(CacheType.CT_FILENAME[18]),
+		new Image(CacheType.CT_FILENAME[19]),
+		new Image(CacheType.CT_FILENAME[20]),
+		new Image(CacheType.CT_FILENAME[21]),
 	};
 
 	private static final Image[] sizeImages = {
-		new Image(CacheType.CW_GUIIMG_CUSTOM),		// 0
-		new Image(CacheType.CW_GUIIMG_APE),			// 1
-		new Image(CacheType.CW_GUIIMG_CITO),		// 2
-		new Image(CacheType.CW_GUIIMG_DRIVE_IN),	// 3
-		new Image(CacheType.CW_GUIIMG_EARTH),		// 4
-		new Image(CacheType.CW_GUIIMG_EVENT),		// 5
-		new Image(CacheType.CW_GUIIMG_FINAL),		// 6
-		new Image(CacheType.CW_GUIIMG_LETTERBOX),	// 7
-		new Image(CacheType.CW_GUIIMG_LOCATIONLESS),// 8
-		new Image(CacheType.CW_GUIIMG_MAZE),		// 9
-		new Image(CacheType.CW_GUIIMG_MEGA_EVENT),	// 10
-		new Image(CacheType.CW_GUIIMG_MULTI),		// 11
-		new Image(CacheType.CW_GUIIMG_PARKING),		// 12
-		new Image(CacheType.CW_GUIIMG_QUESTION),	// 13
-		new Image(CacheType.CW_GUIIMG_REFERENCE),	// 14
-		new Image(CacheType.CW_GUIIMG_STAGE),		// 15
-		new Image(CacheType.CW_GUIIMG_TRADITIONAL),	// 16
-		new Image(CacheType.CW_GUIIMG_TRAILHEAD),	// 17
-		new Image(CacheType.CW_GUIIMG_UNKNOWN),		// 18
-		new Image(CacheType.CW_GUIIMG_VIRTUAL),		// 19
-		new Image(CacheType.CW_GUIIMG_WEBCAM),		// 20
-		new Image(CacheType.CW_GUIIMG_WHEREIGO)		// 21
+		new Image(CacheType.CT_FILENAME[0]),
+		new Image(CacheType.CT_FILENAME[1]),
+		new Image(CacheType.CT_FILENAME[2]),
+		new Image(CacheType.CT_FILENAME[3]),
+		new Image(CacheType.CT_FILENAME[4]),
+		new Image(CacheType.CT_FILENAME[5]),
+		new Image(CacheType.CT_FILENAME[6]),
+		new Image(CacheType.CT_FILENAME[7]),
+		new Image(CacheType.CT_FILENAME[8]),
+		new Image(CacheType.CT_FILENAME[9]),
+		new Image(CacheType.CT_FILENAME[10]),
+		new Image(CacheType.CT_FILENAME[11]),
+		new Image(CacheType.CT_FILENAME[12]),
+		new Image(CacheType.CT_FILENAME[13]),
+		new Image(CacheType.CT_FILENAME[14]),
+		new Image(CacheType.CT_FILENAME[15]),
+		new Image(CacheType.CT_FILENAME[16]),
+		new Image(CacheType.CT_FILENAME[17]),
+		new Image(CacheType.CT_FILENAME[18]),
+		new Image(CacheType.CT_FILENAME[19]),
+		new Image(CacheType.CT_FILENAME[20]),
+		new Image(CacheType.CT_FILENAME[21]),
 	};
 
 	/** thou shallst not instantiate this object */

Modified: trunk/src/CacheWolf/exp/ExploristExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/ExploristExporter.java	2009-12-01 11:11:02 UTC (rev 2353)
+++ trunk/src/CacheWolf/exp/ExploristExporter.java	2009-12-01 21:26:58 UTC (rev 2354)
@@ -96,7 +96,7 @@
 			doIt(null);
 		}
 	}
-	
+
 	/**
 	 * Does the most work for exporting data
 	 */
@@ -167,7 +167,7 @@
 
 	/**
 	 * uses a filechooser to get the name of the export file
-	 * 
+	 *
 	 * @return
 	 */
 	public File getOutputFile() {
@@ -187,7 +187,7 @@
 
 	/**
 	 * this method can be overided by an exporter class
-	 * 
+	 *
 	 * @param ch
 	 *            cachedata
 	 * @return formated cache data
@@ -223,28 +223,28 @@
 			} else if (ch.getType() == 51) {
 				add = "St:";
 			} else if (ch.getType() == 52) {
-				add = "Qu:"; 
-			} else if (ch.getType() == 53) {	
+				add = "Qu:";
+			} else if (ch.getType() == 53) {
 				add = "Fi:";
 			} else if (ch.getType() == 54) {
 				add = "Tr:";
-			} else if (ch.getType() == 55) {	
+			} else if (ch.getType() == 55) {
 				add = "Re:";
 			}
 			sb.append(add).append(removeCommas(ch.getCacheName()));
 		} else {
 			sb.append(removeCommas(ch.getCacheName()));
-		}		
+		}
 		sb.append(",");
 		sb.append(removeCommas(ch.getCacheOwner()));
 		sb.append(",");
 		sb.append(removeCommas(Common.rot13(det.Hints)));
 		sb.append(",");
-		
+
 		if (!add.equals("")) { // Set Picture in Explorist to Virtual
 			sb.append("Virtual Cache");
 		} else if (ch.getType() != CacheType.CW_TYPE_UNKNOWN) { // Rewrite Unknown Caches
-			sb.append(CacheType.cw2ExportString(ch.getType()));
+			sb.append(CacheType.sym2GpxString(ch.getType()));
 		} else {
 			sb.append("Mystery Cache");
 		}
@@ -257,7 +257,7 @@
 				lastFound = det.CacheLogs.getLog(i).getDate();
 			}
 		}
-		
+
 		sb.append(toGsDateFormat(lastFound)); // lastFound - DDMMYYY, YYY = year - 1900
 		sb.append(",");
 		sb.append(CacheTerrDiff.longDT(ch.getHard()));
@@ -269,13 +269,13 @@
 
 	/**
 	 * this method can be overided by an exporter class
-	 * 
+	 *
 	 * @return formated trailer data
 	 */
 	public String trailer() {
 		return "$PMGNCMD,END*3D\n";
 	}
-	
+
 	/**
 	 * Changes "," in "." in the input String
 	 * @param input
@@ -284,19 +284,19 @@
 	private String removeCommas(String input) {
 		return input.replace(',', '.');
 	}
-	
+
 	/**
-	 * change the Dateformat from "yyyy-mm-dd" to ddmmyyy, where yyy is years after 1900 
+	 * change the Dateformat from "yyyy-mm-dd" to ddmmyyy, where yyy is years after 1900
 	 * @param input Date in yyyy-mm-dd
  	 * @return Date in ddmmyyy
 	 */
 	private String toGsDateFormat(String input) {
 		if (input.length() >= 10) {
 			return input.substring(8, 10) + input.substring(5, 7) + "1" + input.substring(2, 4);
-		} 
+		}
 		else {
 			return "";
 		}
 	}
-	
+
 }

Modified: trunk/src/CacheWolf/exp/GPXExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/GPXExporter.java	2009-12-01 11:11:02 UTC (rev 2353)
+++ trunk/src/CacheWolf/exp/GPXExporter.java	2009-12-01 21:26:58 UTC (rev 2354)
@@ -10,11 +10,11 @@
 *	ClassID = 2000
 */
 public class GPXExporter extends Exporter{
-	
+
 	private final static String STRING_TRUE = "True";
 	private final static String STRING_FALSE = "False";
 	private final static String DEFAULT_DATE = "2000-01-01";
-	
+
 	public GPXExporter(){
 		super();
 		this.setMask("*.gpx");
@@ -22,7 +22,7 @@
 		this.setHowManyParams(LAT_LON|COUNT);
 		this.setTmpFileName(FileBase.getProgramDirectory() + "/temp.gpx");
 	}
-	
+
 	public GPXExporter(Preferences p, Profile prof){
 		super();
 		this.setMask("*.gpx");
@@ -30,11 +30,11 @@
 		this.setHowManyParams(LAT_LON|COUNT);
 		this.setTmpFileName(FileBase.getProgramDirectory() + "/temp.gpx");
 	}
-	
+
 	public String header() {
 		StringBuffer strBuf = new StringBuffer(200);
 		Time tim = new Time();
-		
+
 		strBuf.append("<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n");
 		strBuf.append("<gpx xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" version=\"1.0\" creator=\"Groundspeak Pocket Query\" xsi:schemaLocation=\"http://www.topografix.com/GPX/1/0 http://www.topografix.com/GPX/1/0/gpx.xsd http://www.groundspeak.com/cache/1/0 http://www.groundspeak.com/cache/1/0/cache.xsd\" xmlns=\"http://www.topografix.com/GPX/1/0\">\r\n");
 		if ( Global.getPref().exportGpxAsMyFinds ) {
@@ -49,13 +49,13 @@
 
 		return strBuf.toString();
 	}
-	
+
 	public String record(CacheHolder ch, String lat, String lon, int counter) {
 		StringBuffer strBuf = new StringBuffer(1000);
 		CacheHolderDetail det = ch.getExistingDetails();
 		try{
 			strBuf.append("  <wpt lat=\""+lat+"\" lon=\""+lon+"\">\r\n");
-		
+
 			String tim = ch.getDateHidden().length()>0 ? ch.getDateHidden() : DEFAULT_DATE;
 			strBuf.append("    <time>").append(tim.toString()).append("T00:00:00.0000000-07:00</time>\r\n");
 			strBuf.append("    <name>").append(ch.getWayPoint()).append("</name>\r\n");
@@ -67,11 +67,11 @@
 			strBuf.append("    <urlname>").append(SafeXML.cleanGPX(ch.getCacheName())).append(" by ").append(SafeXML.cleanGPX(ch.getCacheOwner())).append("</urlname>\r\n");
 			if (!ch.isAddiWpt()){
 				if ( ch.is_found() ) {
-					strBuf.append("    <sym>Geocache Found</sym>\r\n");					
+					strBuf.append("    <sym>Geocache Found</sym>\r\n");
 				} else {
 					strBuf.append("    <sym>Geocache</sym>\r\n");
 				}
-				strBuf.append("    <type>Geocache|").append(CacheType.id2GpxString(ch.getType())).append("</type>\r\n");
+				strBuf.append("    <type>").append(CacheType.type2GpxString(ch.getType())).append("</type>\r\n");
 				String dummyAvailable = ch.is_available() ? STRING_TRUE:STRING_FALSE;
 				String dummyArchived = ch.is_archived() ? STRING_TRUE:STRING_FALSE;
 				strBuf.append("    <groundspeak:cache id=\"").append( ch.GetCacheID() ).append( "\" available=\"" ).append( dummyAvailable ).append( "\" archived=\"" ).append( dummyArchived).append( "\" xmlns:groundspeak=\"http://www.groundspeak.com/cache/1/0\">\r\n");
@@ -79,18 +79,18 @@
 				strBuf.append("      <groundspeak:placed_by>").append(SafeXML.cleanGPX(ch.getCacheOwner())).append("</groundspeak:placed_by>\r\n");
 				//todo low prio: correct owner-id
 				strBuf.append("      <groundspeak:owner id=\"23\">").append(SafeXML.cleanGPX(ch.getCacheOwner())+"</groundspeak:owner>\r\n");
-				strBuf.append("      <groundspeak:type>").append(CacheType.id2GpxString(ch.getType())).append("</groundspeak:type>\r\n");
+				strBuf.append("      <groundspeak:type>").append(CacheType.sym2GpxString(ch.getType())).append("</groundspeak:type>\r\n");
 				strBuf.append("      <groundspeak:container>").append(CacheSize.cw2ExportString(ch.getCacheSize())).append("</groundspeak:container>\r\n");
 				//for Colorado/Oregon: 2.0 -> 2
 				String diffTerr = CacheTerrDiff.shortDT(ch.getHard());
-				
+
 				strBuf.append("      <groundspeak:difficulty>").append(diffTerr).append("</groundspeak:difficulty>\r\n");
 				diffTerr = CacheTerrDiff.shortDT(ch.getTerrain());
 				strBuf.append("      <groundspeak:terrain>").append(diffTerr).append("</groundspeak:terrain>\r\n");
-				
+
 				strBuf.append("      <groundspeak:country>").append(SafeXML.cleanGPX(det.Country)+"</groundspeak:country>\r\n");
 				strBuf.append("      <groundspeak:state>").append(SafeXML.cleanGPX(det.State)+"</groundspeak:state>\r\n");
-												
+
 				String dummyHTML = ch.is_HTML() ? STRING_TRUE:STRING_FALSE;
 				strBuf.append("      <groundspeak:long_description html=\"" ).append( dummyHTML ).append( "\">\r\n");
 				strBuf.append("      ").append(SafeXML.cleanGPX(det.LongDescription));
@@ -99,7 +99,7 @@
 				strBuf.append("      <groundspeak:logs>\r\n");
 				if ( Global.getPref().exportGpxAsMyFinds && ch.is_found() ) {
 					if ( det.OwnLogId.length() != 0 ) {
-						strBuf.append("        <groundspeak:log id=\"" ).append( det.OwnLogId ).append( "\">\r\n");						
+						strBuf.append("        <groundspeak:log id=\"" ).append( det.OwnLogId ).append( "\">\r\n");
 					} else {
 						strBuf.append("        <groundspeak:log id=\"" ).append( Integer.toString(counter) ).append( "\">\r\n");
 					}
@@ -113,7 +113,7 @@
 					if ( det.OwnLog != null ) {
 						strBuf.append("          <groundspeak:text encoded=\"False\">").append(SafeXML.cleanGPX(det.OwnLog.getMessage())).append("</groundspeak:text>\r\n");
 					} else {
-						strBuf.append("          <groundspeak:text encoded=\"False\"></groundspeak:text>\r\n");		
+						strBuf.append("          <groundspeak:text encoded=\"False\"></groundspeak:text>\r\n");
 					}
 					strBuf.append("        </groundspeak:log>\r\n");
 				} else {
@@ -135,17 +135,17 @@
 					for (int i = 0; i < det.Travelbugs.size(); i++) {
 						strBuf.append("        <groundspeak:travelbug id=\"").append(Integer.toString(i)).append("\" ref=\"TB\">\r\n");
 						strBuf.append("          <groundspeak:name>").append(SafeXML.cleanGPX(det.Travelbugs.getTB(i).getName())).append("</groundspeak:name>\r\n");
-						strBuf.append("        </groundspeak:travelbug>\r\n");						
+						strBuf.append("        </groundspeak:travelbug>\r\n");
 					}
-					strBuf.append("      </groundspeak:travelbugs>\r\n");					
+					strBuf.append("      </groundspeak:travelbugs>\r\n");
 				} else {
-					strBuf.append("      <groundspeak:travelbugs />\r\n");				
+					strBuf.append("      <groundspeak:travelbugs />\r\n");
 				}
 				strBuf.append("    </groundspeak:cache>\r\n");
 			}else {
 				// there is no HTML in the description of addi wpts
-				strBuf.append("    <sym>").append(CacheType.id2GpxString(ch.getType())).append("</sym>\r\n");
-				strBuf.append("    <type>").append(CacheType.id2GpxString(ch.getType())).append("</type>\r\n");
+				strBuf.append("    <sym>").append(CacheType.sym2GpxString(ch.getType())).append("</sym>\r\n");
+				strBuf.append("    <type>").append(CacheType.type2GpxString(ch.getType())).append("</type>\r\n");
 			}
 			strBuf.append("  </wpt>\r\n");
 		}catch(Exception e){
@@ -156,11 +156,11 @@
 
 		return strBuf.toString();
 	}
-	
+
 	public String trailer(int total) {
 		return "</gpx>\r\n";
 	}
-	
+
 	public static String image2TypeText(String image){
 		if (image.equals("icon_smile.gif")) return "Found it";
 		if (image.equals("icon_sad.gif")) return "Didn't find it";
@@ -181,5 +181,5 @@
 
 		return image;
 	}
-	
+
 }

Modified: trunk/src/CacheWolf/exp/GpxExportNg.java
===================================================================
--- trunk/src/CacheWolf/exp/GpxExportNg.java	2009-12-01 11:11:02 UTC (rev 2353)
+++ trunk/src/CacheWolf/exp/GpxExportNg.java	2009-12-01 21:26:58 UTC (rev 2354)
@@ -126,26 +126,26 @@
 
 	private static boolean customIcons;
 	private static boolean sendToGarmin;
-	
+
 	private static int exportIds;
 	private static int exportTarget;
 	private static int exportStyle;
-	
+
 	private static boolean hasBitmaps;
 	private static boolean hasGarminMap;
 	private static boolean hasGpsbabel;
-	
+
 	private static String bitmapFileName;
 	private static String garminMapFileName;
 
 	public GpxExportNg() {
 		garminMapFileName = FileBase.getProgramDirectory() + "/garminmap.xml";
 		bitmapFileName = FileBase.getProgramDirectory() + "/GarminPOI.zip";
-		
+
 		hasGarminMap = new File(garminMapFileName).exists();
 		hasBitmaps = new File(bitmapFileName).exists();
 		hasGpsbabel = Global.getPref().gpsbabel != null;
-		
+
 		finderid = Global.getPref().gcMemberId;
 		if (finderid.equals("")) Global.getPref().log("GPX Export: warning gcmemberid not set, check pref.xml");
 	}
@@ -166,7 +166,7 @@
 		exportTarget = exportOptions.getOutputTarget();
 		sendToGarmin = exportOptions.getSendToGarmin();
 		customIcons = exportOptions.getCustomIcons();
-		
+
 		if (exportTarget == OUTPUT_SEPARATE || exportTarget == OUTPUT_POI) {
 			final Hashtable fileHandles = new Hashtable();
 			final String outDir;
@@ -177,10 +177,10 @@
 			ZipFile poiZip = null;
 
 			if (exportTarget == OUTPUT_POI) {
-				fc = new FileChooser(FileChooserBase.DIRECTORY_SELECT, 
+				fc = new FileChooser(FileChooserBase.DIRECTORY_SELECT,
 						Global.getPref().getExportPath(expName + "-GPI"));
 			} else {
-				fc = new FileChooser(FileChooserBase.DIRECTORY_SELECT, 
+				fc = new FileChooser(FileChooserBase.DIRECTORY_SELECT,
 						Global.getPref().getExportPath(expName + "-POI"));
 			}
 
@@ -259,8 +259,8 @@
 								writer = (PrintWriter) fileHandles.get(poiId);
 							} else {
 								writer = new PrintWriter(new BufferedWriter(
-										new FileWriter(new File(tempDir	
-												+ FileBase.separator + prefix 
+										new FileWriter(new File(tempDir
+												+ FileBase.separator + prefix
 												+ poiId + ".gpx"))));
 								fileHandles.put(poiId, writer);
 								writer.print(formatHeader());
@@ -282,8 +282,8 @@
 				}
 
 				if (exportTarget == OUTPUT_POI) {
-					// only clean up output directory if user has chosen non empty prefix, 
-					// since otherwise all present POI would be deleted 
+					// only clean up output directory if user has chosen non empty prefix,
+					// since otherwise all present POI would be deleted
 					if (! prefix.equals("")) {
 						String tmp[] = new FileBugfix(outDir).list(
 								prefix + "*.gpi", ewe.io.FileBase.LIST_FILES_ONLY);
@@ -328,7 +328,7 @@
 							cmdStack[6]="garmin_gpi,sleep=1,category="+prefix + key+",bitmap="+tempDir + FileBase.separator + prefix + key	+ ".bmp";
 							cmdStack[7]="-F";
 							cmdStack[8]=outDir + FileBase.separator + prefix + key + ".gpi";
-		
+
 							Process babelProcess = startProcess(cmdStack);
 							StreamReader errorStream = new StreamReader(babelProcess.getErrorStream());
 							while (errorStream.isOpen()) {
@@ -387,7 +387,7 @@
 			}
 
 			final File file;
-			
+
 			if (!sendToGarmin) {
 				final FileChooser fc = new FileChooser(FileChooserBase.SAVE,
 						Global.getPref().getExportPath(expName + "-GPX"));
@@ -464,7 +464,7 @@
 					cmdStack[6]="garmin";
 					cmdStack[7]="-F";
 					cmdStack[8]=Global.getPref().garminConn.concat(":");
-					
+
 					Process babelProcess = this.startProcess(cmdStack);
 					if (babelProcess != null) {
 						StreamReader errorStream = new StreamReader(babelProcess.getErrorStream());
@@ -538,13 +538,13 @@
 	 * @return
 	 */
 	private String formatCompact(CacheHolder ch) {
-		
+
 		StringBuffer ret = new StringBuffer();
-		
+
 //			.concat("\t\t<desc>@@WPDESC@@</desc>\n")
-		
+
 		ret.append("  <wpt lat=\""+String.valueOf(ch.pos.latDec).replace(',', '.')+"\" lon=\""+String.valueOf(ch.pos.lonDec).replace(',', '.')+"\">\n");
-		
+
 		if (exportStyle != STYLE_GPX_COMPACT) {
 			if (ch.isAddiWpt()) {
 				try {
@@ -560,7 +560,7 @@
 				ret.append("    <time>"+ch.getDateHidden()+"T00:00:00</time>\n");
 			}
 		}
-		
+
 		if (exportIds == WPNAME_ID_SMART) {
 			if (ch.isAddiWpt()) {
 				ret.append("    <name>".concat(SafeXML.cleanGPX(ch.mainCache.getWayPoint().concat(" ").concat(ch.getWayPoint().substring(0, 2)))).concat("</name>\n"));
@@ -581,7 +581,7 @@
 		} else {
 			ret.append("    <name>".concat(SafeXML.cleanGPX(ch.getWayPoint())).concat("</name>\n"));
 		}
-		
+
 		// no <cmt> for custom
 		if (!ch.isCustomWpt()) {
 			if (exportIds == WPNAME_ID_SMART && exportStyle == STYLE_GPX_COMPACT) {
@@ -603,7 +603,7 @@
 			ret.append("    <desc>".concat(SafeXML.cleanGPX(ch.getCacheName())).concat("</desc>\n"));
 		} else {
 			ret.append("    <desc>".concat(SafeXML.cleanGPX(ch.getCacheName().concat(" by ").concat(ch.getCacheOwner()).concat(", ")
-					.concat(CacheType.cw2ExportString(ch.getType()))
+					.concat(CacheType.sym2GpxString(ch.getType()))
 					.concat(" (").concat(CacheTerrDiff.shortDT(ch.getHard()))
 					.concat("/").concat(CacheTerrDiff.shortDT(ch.getTerrain())).concat(")")))
 					.concat("</desc>\n"));
@@ -620,8 +620,7 @@
 			ret.append("    <sym>".concat(poiMapper.getIcon(ch)).concat("</sym>\n"));
 		} else {
 			if (ch.isAddiWpt()) {
-				ret.append("    <sym>".concat(CacheType.id2GpxString(ch.getType())
-						.substring(CacheType.id2GpxString(ch.getType()).indexOf("|") + 1)).concat("</sym>\n"));
+				ret.append("    <sym>".concat(CacheType.sym2GpxString(ch.getType())).concat("</sym>\n"));
 			} else if (ch.isCustomWpt()) {
 				ret.append("    <sym>Custom</sym>\n");
 			} else if (ch.is_found()) {
@@ -632,9 +631,9 @@
 		}
 
 		if (exportStyle != STYLE_GPX_COMPACT) {
-			ret.append("    <type>".concat(ch.isCacheWpt()?"Geocache|":"").concat(CacheType.id2GpxString(ch.getType())).concat("</type>\n"));
+			ret.append("    <type>".concat(CacheType.type2GpxString(ch.getType())).concat("</type>\n"));
 		}
-		
+
 		return ret.toString();
 	}
 
@@ -652,7 +651,7 @@
 		.concat("      <groundspeak:name>").concat(SafeXML.cleanGPX(ch.getCacheName())).concat("</groundspeak:name>\n")
 		.concat("      <groundspeak:placed_by>").concat(SafeXML.cleanGPX(ch.getCacheOwner())).concat("</groundspeak:placed_by>\n")
 		.concat("      <groundspeak:owner id=\"").concat("31415").concat("\">").concat(SafeXML.cleanGPX(ch.getCacheOwner())).concat("</groundspeak:owner>\n")
-		.concat("      <groundspeak:type>").concat(CacheType.id2GpxString(ch.getType())).concat("</groundspeak:type>\n")
+		.concat("      <groundspeak:type>").concat(CacheType.type2GpxString(ch.getType())).concat("</groundspeak:type>\n")
 		.concat("      <groundspeak:container>").concat(CacheSize.cw2ExportString(ch.getCacheSize())).concat("</groundspeak:container>\n")
 		.concat("      <groundspeak:difficulty>").concat(CacheTerrDiff.shortDT(ch.getHard())).concat("</groundspeak:difficulty>\n")
 		.concat("      <groundspeak:terrain>").concat(CacheTerrDiff.shortDT(ch.getTerrain())).concat("</groundspeak:terrain>\n")
@@ -681,10 +680,10 @@
 		LogList logs = ch.getFreshDetails().CacheLogs;
 		StringBuffer ret = new StringBuffer();
 		String fid = "";
-		
-		if (exportStyle == STYLE_GPX_MYFINDS) 
-			fid = finderid; 
 
+		if (exportStyle == STYLE_GPX_MYFINDS)
+			fid = finderid;
+
 		if (0 == logs.size())
 			return "";
 
@@ -703,7 +702,7 @@
 			if (exportStyle == STYLE_GPX_MYFINDS && !log.getLogger().equals(Global.getPref().myAlias))
 					continue;
 
-//			if (exportStyle == STYLE_GPX_MYFINDS) 
+//			if (exportStyle == STYLE_GPX_MYFINDS)
 //				logId = log.getLogId();
 
 //			ret.append("        <groundspeak:log id=\"".concat(log.getLogId()).concat("@@LOGID@@\">\n")
@@ -732,7 +731,7 @@
 	 * @return
 	 */
 	public String formatHeader() {
-		//FIXME: extend profile to add <bounds minlat=\"50.91695\" minlon=\"6.876383\" maxlat=\"50.935183\" maxlon=\"6.918817\" /> 
+		//FIXME: extend profile to add <bounds minlat=\"50.91695\" minlon=\"6.876383\" maxlat=\"50.935183\" maxlon=\"6.918817\" />
 		//Global.getProfile().getSourroundingArea(false);
 		Transformer trans = new Transformer(true);
 		trans.add(new Regex("@@CREATEDATE@@", new Date().setFormat("yyyy-MM-dd").toString()));
@@ -784,7 +783,7 @@
 	}
 
 	/**
-	 * generate a gc.com compatible string representation of log derived from the internally stored image 
+	 * generate a gc.com compatible string representation of log derived from the internally stored image
 	 * @param image name of the image to display
 	 * @return log type. will default to "Write note" for unknown logtypes
 	 */
@@ -828,7 +827,7 @@
 
 	/**
 	 * create a position information suitable for a gc.com PQlike export
-	 * 
+	 *
 	 * @param pos
 	 *            position
 	 * @return if position is valid return the cachewolf formatted position,
@@ -878,7 +877,7 @@
 		}
 		return true;
 	}
-	
+
 	/**
 	 * Execute the command defined by cmd
 	 * @param cmd command and options to execute. if command or options include a space quatation marks are added. this will not wirk with the java version on unix systems
@@ -891,14 +890,14 @@
 			Global.getPref().log("GPX Export: empty gpsbabel command");
 			return null;
 		}
-		
+
 		for (int i = 0; i < cmd.length; i++) {
 			if (cmd[i].indexOf(" ") > -1) {
 				cmd[i]="\""+cmd[i]+"\"";
 			}
 			command = command.concat(cmd[i]).concat(" ");
 		}
-		
+
 		try {
 			return Vm.exec(command);
 		} catch (IOException e) {
@@ -916,11 +915,11 @@
 		private mCheckBox cbCustomIcons, cbSendToGarmin, cbSeperateHints;
 		private mInput ibMaxLogs, ibPrefix;
 		private mButton btnOk, btnCancel;
-		
+
 		private boolean hasBitmapsFrm;
 		private boolean hasGarminMapFrm;
 		private boolean hasGpsbabelFrm;
-		
+
 		private mChoice chStyle, chTarget, chIds;
 		private int chosenStyle, chosenTarget, chosenIds;
 
@@ -932,7 +931,7 @@
 			this.hasBitmapsFrm = hasBitmaps;
 			this.hasGarminMapFrm = hasGarminMap;
 			this.hasGpsbabelFrm = hasGpsbabel;
-			
+
 			// TODO: get/set defaults from profile
 			chosenStyle = 0;
 			chosenTarget = 0;
@@ -940,10 +939,10 @@
 
 			this.setTitle("GPX Export");
 			this.resizable = false;
-			
+
 			btnOk = new mButton(MyLocale.getMsg(1605,"OK"));
 			btnCancel = new mButton(MyLocale.getMsg(1604,"Cancel"));
-			
+
 			chIds = new mChoice();
 			chIds.dontSearchForKeys = true;
 			// if you change the order of strings make sure to fix the event handler as well
@@ -951,7 +950,7 @@
 			chIds.addItem(MyLocale.getMsg(31415,"Smart IDs")); // index 1
 //			chIds.addItem(MyLocale.getMsg(31415,"Smart Names")); // index 2
 			chIds.select(chosenIds);
-			
+
 			chStyle = new mChoice();
 			chStyle.dontSearchForKeys = true;
 			// if you change the order of strings make sure to fix the event handler as well
@@ -959,53 +958,53 @@
 			chStyle.addItem(MyLocale.getMsg(31415,"PQ like")); // index 1
 			chStyle.addItem(MyLocale.getMsg(31415,"MyFinds")); // index 2
 			chStyle.select(chosenStyle);
-			
+
 			chTarget = new mChoice();
 			chTarget.dontSearchForKeys = true;
 			// if you change the order of strings make sure to fix the event handler as well
 			chTarget.addItem(MyLocale.getMsg(31415,"Single GPX")); // index 0
-			chTarget.addItem(MyLocale.getMsg(31415,"Separate GPX")); // index 1 
+			chTarget.addItem(MyLocale.getMsg(31415,"Separate GPX")); // index 1
 			if (hasBitmaps && hasGarminMap && hasGpsbabel) {
 				chTarget.addItem(MyLocale.getMsg(31415,"POI")); // index 2
 			}
 			chTarget.select(chosenTarget);
-			
+
 			ibPrefix = new mInput("GC-");
 			ibPrefix.modify(ControlConstants.Disabled, 0);
-			
+
 			ibMaxLogs = new mInput(String.valueOf(Global.getPref().numberOfLogsToExport));
 			ibMaxLogs.modify(ControlConstants.Disabled, 0);
-			
+
 			cbSeperateHints = new mCheckBox(MyLocale.getMsg(31415,"Separate Hints"));
 			cbSeperateHints.modify(ControlConstants.Disabled, 0);
-			
+
 			cbSendToGarmin = new mCheckBox(MyLocale.getMsg(31415,"send to Garmin"));
 			if (!hasGpsbabel) cbSendToGarmin.modify(ControlConstants.Disabled, 0);
-			
+
 			cbCustomIcons = new mCheckBox(MyLocale.getMsg(31415,"Custom Icons"));
 			if (!hasGarminMap) cbCustomIcons.modify(ControlConstants.Disabled, 0);
 
-			
+
 			addNext(new mLabel(MyLocale.getMsg(31415,"GPX Style")));
 			addLast(chStyle);
-			
+
 			addNext(new mLabel(MyLocale.getMsg(31415,"WP Names")));
 			addLast(chIds);
-			
+
 			addNext(new mLabel(MyLocale.getMsg(31415,"Output")));
 			addLast(chTarget);
-			
+
 			addNext(cbCustomIcons);
 			addLast(cbSendToGarmin);
-			
+
 //			addLast(cbSeperateHints);
-			
+
             addNext(new mLabel(MyLocale.getMsg(31415,"Prefix")));
             addLast(ibPrefix);
-            
+
             addNext(new mLabel(MyLocale.getMsg(31415,"Max Logs")));
             addLast(ibMaxLogs);
-			
+
 			addButton(btnOk);
 			addButton(btnCancel);
 		}
@@ -1021,52 +1020,52 @@
 						chIds.select(0);
 						if (chIds.change(ControlConstants.Disabled, 0))
 							chIds.repaint();
-						
+
 						chTarget.select(0);
 						if (chTarget.change(ControlConstants.Disabled, 0))
 							chTarget.repaint();
-						
+
 						if (ibPrefix.change(ControlConstants.Disabled, 0))
 							ibPrefix.repaint();
-						
+
 						if (ibMaxLogs.change(ControlConstants.Disabled, 0))
-							ibMaxLogs.repaint();							
+							ibMaxLogs.repaint();
 
 						cbSendToGarmin.state = false;
 						if (cbSendToGarmin.change(ControlConstants.Disabled, 0))
 							cbSendToGarmin.repaint();
-						
+
 						cbCustomIcons.state = false;
 						if (cbCustomIcons.change(ControlConstants.Disabled, 0))
 							cbCustomIcons.repaint();
-						
+
 						cbSeperateHints.state = false;
 						if (cbSeperateHints.change(ControlConstants.Disabled, 0))
 							cbSeperateHints.repaint();
-						
+
 						if (ibMaxLogs.change(ControlConstants.Disabled, 0))
 							ibMaxLogs.repaint();
-						
+
 						if (ibPrefix.change(ControlConstants.Disabled, 0))
 							ibPrefix.repaint();
 					} else if (chStyle.selectedIndex == 1) { // PQ like export
 						if (chIds.change(0, ControlConstants.Disabled))
 							chIds.repaint();
-						
+
 						chTarget.select(0);
 						if (chTarget.change(ControlConstants.Disabled, 0))
 							chTarget.repaint();
-						
+
 						if (hasGpsbabelFrm && cbSendToGarmin.change(0, ControlConstants.Disabled))
 							cbSendToGarmin.repaint();
-						
+
 						if (hasGarminMapFrm && cbCustomIcons.change(0, ControlConstants.Disabled))
 							cbCustomIcons.repaint();
-						
+
 						cbSeperateHints.state = false;
 						if (cbSeperateHints.change(ControlConstants.Disabled, 0))
 							cbSeperateHints.repaint();
-						
+
 						if (ibMaxLogs.change(0, ControlConstants.Disabled))
 							ibMaxLogs.repaint();
 
@@ -1075,20 +1074,20 @@
 					} else { // compact export
 						if (chIds.change(0, ControlConstants.Disabled))
 							chIds.repaint();
-						
+
 						if (chTarget.change(0, ControlConstants.Disabled))
 							chTarget.repaint();
-						
+
 						if (hasGpsbabelFrm && cbSendToGarmin.change(0, ControlConstants.Disabled))
 							cbSendToGarmin.repaint();
-						
+
 						if (hasGarminMapFrm && cbCustomIcons.change(0, ControlConstants.Disabled))
 							cbCustomIcons.repaint();
-						
+
 						cbSeperateHints.state = false;
 						if (cbSeperateHints.change(ControlConstants.Disabled, 0))
 							cbSeperateHints.repaint();
-						
+
 						if (ibMaxLogs.change(ControlConstants.Disabled, 0))
 							ibMaxLogs.repaint();
 					}
@@ -1098,40 +1097,40 @@
 						cbSendToGarmin.state = false;
 						if (cbSendToGarmin.change(ControlConstants.Disabled, 0))
 							cbSendToGarmin.repaint();
-						
+
 						cbCustomIcons.state = false;
 						if (cbCustomIcons.change(ControlConstants.Disabled, 0))
 							cbCustomIcons.repaint();
-						
+
 						if (cbSeperateHints.change(0, ControlConstants.Disabled))
 							cbSeperateHints.repaint();
-						
+
 						if (ibPrefix.change(0, ControlConstants.Disabled))
 							ibPrefix.repaint();
 					} else if (chTarget.selectedIndex == 1) { // Separate File
 						cbSendToGarmin.state = false;
 						if (cbSendToGarmin.change(ControlConstants.Disabled, 0))
 							cbSendToGarmin.repaint();
-						
+
 						if (hasBitmapsFrm && cbCustomIcons.change(0, ControlConstants.Disabled))
 							cbCustomIcons.repaint();
-						
+
 						if (cbSeperateHints.change(0, ControlConstants.Disabled))
 							cbSeperateHints.repaint();
-						
+
 						if (ibPrefix.change(0, ControlConstants.Disabled))
 							ibPrefix.repaint();
 					} else { // Single GPX
 						if (hasGpsbabelFrm && cbSendToGarmin.change(0, ControlConstants.Disabled))
 							cbSendToGarmin.repaint();
-						
+
 						if (hasGarminMapFrm && cbCustomIcons.change(0, ControlConstants.Disabled))
 							cbCustomIcons.repaint();
-						
+
 						cbSeperateHints.state=false;
 						if (cbSeperateHints.change(ControlConstants.Disabled, 0))
 							cbSeperateHints.repaint();
-						
+
 						if (ibPrefix.change(ControlConstants.Disabled, 0))
 							ibPrefix.repaint();
 					}
@@ -1175,7 +1174,7 @@
 		public int getExportStyle () {
 			return chosenStyle;
 		}
-		
+
 		/**
 		 * style of waypoint identifiers
 		 * @return 0 Classic IDs, 1 Smart IDs, 3 Smart Names (should only be used with gpsbabel)
@@ -1183,7 +1182,7 @@
 		public int getWpNameStyle() {
 			return chosenIds;
 		}
-		
+
 		/**
 		 * what kind of output should be generated
 		 * @return 0 single file, 1 separate files, 2 POI (GPI) files
@@ -1191,10 +1190,10 @@
 		public int getOutputTarget() {
 			return chosenTarget;
 		}
-		
+
 		/**
 		 * check if user wants to send output straight to a Garmin GPSr
-		 * 
+		 *
 		 * @return true for GPSr transfer, false otherwise
 		 */
 		public boolean getSendToGarmin() {
@@ -1203,7 +1202,7 @@
 
 		/**
 		 * check if user wants custom icons
-		 * 
+		 *
 		 * @return true if user wants custom icons, false otherwise
 		 */
 		public boolean getCustomIcons() {
@@ -1212,7 +1211,7 @@
 
 		/**
 		 * get the number of logs to export. used in PQlike export.
-		 * 
+		 *
 		 * @return number of logs to export
 		 */
 		public int getMaxLogs() {
@@ -1221,12 +1220,12 @@
 
 		/**
 		 * get prefix for separate file export
-		 * 
+		 *
 		 * @return prefix for separate file export
 		 */
 		public String getPrefix() {
 			return ibPrefix.getText();
 		}
-			    
+
 	}
 }

Modified: trunk/src/CacheWolf/exp/HTMLExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/HTMLExporter.java	2009-12-01 11:11:02 UTC (rev 2353)
+++ trunk/src/CacheWolf/exp/HTMLExporter.java	2009-12-01 21:26:58 UTC (rev 2354)
@@ -38,7 +38,7 @@
 		profile=prof;
 		cacheDB = profile.cacheDB;
 	}
-	
+
 	public void doIt(){
 		CacheHolderDetail det;
 		CacheHolder ch;
@@ -69,7 +69,7 @@
 
 			//Generate index page
 			int counter = cacheDB.countVisible();
-			
+
 			pbf.showMainTask = false;
 			pbf.setTask(h,"Exporting ...");
 			pbf.exec();
@@ -87,18 +87,18 @@
 					}
 					det=ch.getCacheDetails(false,false);
 					varParams = new Hashtable();
-					varParams.put("TYPE", CacheType.cw2ExportString(ch.getType()));
+					varParams.put("TYPE", CacheType.sym2GpxString(ch.getType()));
 					varParams.put("WAYPOINT", ch.getWayPoint());
 					varParams.put("NAME", ch.getCacheName());
 					varParams.put("OWNER", ch.getCacheOwner());
-					if (ch.isAddiWpt() || CacheType.CW_TYPE_CUSTOM == ch.getType()) {
+					if (ch.isAddiWpt() || ch.isCustomWpt()) {
 						varParams.put("SIZE", "");
 						varParams.put("DIFFICULTY", "");
 						varParams.put("TERRAIN", "");
 					} else {
 						varParams.put("SIZE", CacheSize.isValidSize(ch.getCacheSize())?
 								CacheSize.cw2ExportString(ch.getCacheSize()):"");
-						varParams.put("DIFFICULTY", CacheTerrDiff.isValidTD(ch.getHard())? 
+						varParams.put("DIFFICULTY", CacheTerrDiff.isValidTD(ch.getHard())?
 								CacheTerrDiff.longDT(ch.getHard()):"");
 						varParams.put("TERRAIN", CacheTerrDiff.isValidTD(ch.getTerrain())?
 								CacheTerrDiff.longDT(ch.getTerrain()):"");
@@ -132,7 +132,7 @@
 							}
 							page_tpl.setParam("HINTS", det.Hints);
 							page_tpl.setParam("DECRYPTEDHINTS", Common.rot13(det.Hints));
-							
+
 							StringBuffer sb=new StringBuffer(2000);
 							for(int j = 0; j<det.CacheLogs.size(); j++){
 								sb.append(STRreplace.replace(det.CacheLogs.getLog(j).toHtml(),"http://www.geocaching.com/images/icons/",null));
@@ -140,10 +140,10 @@
 								icon=det.CacheLogs.getLog(j).getIcon();
 								if (logIcons.find(icon)<0) logIcons.add(icon); // Add the icon to list of icons to copy to dest directory
 							}
-							
+
 							page_tpl.setParam("LOGS", sb.toString());
 							page_tpl.setParam("NOTES", STRreplace.replace(det.getCacheNotes(), "\n","<br>"));
-							
+
 							cacheImg.clear();
 							for(int j = 0; j<det.images.size(); j++){
 								imgParams = new Hashtable();
@@ -156,7 +156,7 @@
 									exportErrors++;
 							}
 							page_tpl.setParam("cacheImg", cacheImg);
-							
+
 							// Log images
 							logImg.clear();
 							for(int j = 0; j<det.logImages.size(); j++){
@@ -170,7 +170,7 @@
 									exportErrors++;
 							}
 							page_tpl.setParam("logImg", logImg);
-							
+
 							// User images
 							usrImg.clear();
 							for(int j = 0; j<det.userImages.size(); j++){
@@ -184,11 +184,11 @@
 									exportErrors++;
 							}
 							page_tpl.setParam("userImg", usrImg);
-							
+
 							// Map images
 							mapImg.clear();
 							mapImgParams = new Hashtable();
-							
+
 							String mapImgFile = new String(ch.getWayPoint() + "_map.gif");
 							// check if map file exists
 							File test = new File(profile.dataDir + mapImgFile);
@@ -200,7 +200,7 @@
 									mapImg.add(mapImgParams);
 								else
 									exportErrors++;
-								
+
 								mapImgParams = new Hashtable();
 								mapImgFile = ch.getWayPoint() + "_map_2.gif";
 								mapImgParams.put("FILE", mapImgFile);
@@ -209,7 +209,7 @@
 									mapImg.add(mapImgParams);
 								else
 									exportErrors++;
-		
+
 								page_tpl.setParam("mapImg", mapImg);
 							}
 						} else {
@@ -224,7 +224,7 @@
 							page_tpl.setParam("mapImg", ""); // ???
 							exportErrors++;
 						}
-						
+
 						PrintWriter pagefile = new PrintWriter(new BufferedWriter(new FileWriter(targetDir + ch.getWayPoint()+".html")));
 						pagefile.print(page_tpl.output());
 						pagefile.close();
@@ -244,15 +244,15 @@
 				icon=(String) logIcons.elementAt(j);
 				if (!DataMover.copy(FileBase.getProgramDirectory() + "/"+icon,targetDir + icon))
 					exportErrors++;
-				
+
 			}
 			if (!DataMover.copy(FileBase.getProgramDirectory() + "/recommendedlog.gif",targetDir + "recommendedlog.gif"))
 				exportErrors++;
-			
+
 			try{
 				Template tpl = new Template(template_init_index);
 				tpl.setParam("cache_index", cache_index);
-				PrintWriter detfile; 
+				PrintWriter detfile;
 				detfile = new PrintWriter(new BufferedWriter(new FileWriter(targetDir + "/index.html")));
 				detfile.print(tpl.output());
 				detfile.close();
@@ -270,16 +270,16 @@
 				Vm.debug("Problem writing HTML files\n");
 				e.printStackTrace();
 			}//try
-			
+
 		}//if
 		pbf.exit(0);
-		
+
 		if (exportErrors > 0) {
 			new MessageBox("Export Error", exportErrors+" errors during export. See log for details.", FormBase.OKB).execute();
 		}
 
 	}
-	
+
 	/**
 	 * Modify the image links in the long description so that they point to image files in the local directory
 	 * Also copy the image file to the target directory so that it can be displayed.
@@ -322,10 +322,10 @@
 		if (start>=0) s.append(chD.LongDescription.substring(start));
 		return s.toString();
 	}
-	
+
 	private void sortAndPrintIndex(Template tmpl, Vector list, String file, String field){
-		PrintWriter detfile; 
-		
+		PrintWriter detfile;
+
 		list.sort(new HTMLComparer(field),false);
 		try {
 			detfile = new PrintWriter(new BufferedWriter(new FileWriter(file)));
@@ -337,11 +337,11 @@
 		}
 	}
 
-	
+
 	private void sortAndPrintIndex(Template tmpl, Vector list, String file, String field, boolean fullCompare){
 		Vector navi_index;
-		PrintWriter detfile; 
-		
+		PrintWriter detfile;
+
 		list.sort(new HTMLComparer(field),false);
 		navi_index = addAnchorString(list,field, fullCompare);
 		if (navi_index != null){
@@ -356,11 +356,11 @@
 			e.printStackTrace();
 		}
 	}
-	
+
 	private void sortAndPrintIndex(Template tmpl, Vector list, String file, String field, double diff){
 		Vector navi_index;
-		PrintWriter detfile; 
-		
+		PrintWriter detfile;
+
 		list.sort(new HTMLComparer(field),false);
 		navi_index = addAnchorString(list,field, diff);
 		if (navi_index != null){
@@ -374,7 +374,7 @@
 			Vm.debug("Problem writing HTML files\n");
 			e.printStackTrace();
 		}
-		
+
 	}
 
 
@@ -382,14 +382,14 @@
 		Vector topIndex = new Vector();
 		Hashtable topIndexParms, currEntry;
 		String lastValue, currValue;
-		
+
 		if (list.size() == 0) return null;
-		
+
 		currEntry = (Hashtable) list.get(0);
 		lastValue = (String) currEntry.get(field);
 		if (lastValue == null || lastValue.length() == 0) lastValue = "  ";
 		lastValue = lastValue.toUpperCase();
-		
+
 		for (int i=1; i<list.size(); i++){
 			currEntry = (Hashtable) list.get(i);
 			currValue = (String) currEntry.get(field);
@@ -398,7 +398,7 @@
 			try {
 				if (fullCompare) {
 					if (lastValue.compareTo(currValue)!= 0){
-						// Values for navigation line 
+						// Values for navigation line
 						topIndexParms = new Hashtable();
 						topIndexParms.put("HREF", Convert.toString(i));
 						topIndexParms.put("TEXT", currValue);
@@ -415,7 +415,7 @@
 				}
 				else {
 					if (lastValue.charAt(0)!= currValue.charAt(0)){
-						// Values for navigation line 
+						// Values for navigation line
 						topIndexParms = new Hashtable();
 						topIndexParms.put("HREF", Convert.toString(i));
 						topIndexParms.put("TEXT", currValue.charAt(0)+ " ");
@@ -442,17 +442,17 @@
 		Vector topIndex = new Vector();
 		Hashtable topIndexParms, currEntry;
 		double lastValue, currValue;
-		
+
 		if (list.size() == 0) return null;
-		
+
 		currEntry = (Hashtable) list.get(0);
 		lastValue = Common.parseDouble((String) currEntry.get(field)) + diff;
-		
+
 		for (int i=1; i<list.size(); i++){
 			currEntry = (Hashtable) list.get(i);
 			currValue = Common.parseDouble((String) currEntry.get(field));
 			if (currValue >= lastValue ){
-				// Values for navigation line 
+				// Values for navigation line
 				topIndexParms = new Hashtable();
 				topIndexParms.put("HREF", Convert.toString(i));
 				topIndexParms.put("TEXT", Convert.toString(lastValue));
@@ -482,7 +482,7 @@
 		public HTMLComparer (String what){
 			this.compareWhat = what;
 		}
-		
+
 		public int compare(Object o1, Object o2){
 			Hashtable hash1 = (Hashtable)o1;
 			Hashtable hash2 = (Hashtable)o2;
@@ -491,12 +491,12 @@
 
 			str1 = hash1.get(compareWhat).toString().toLowerCase();
 			str2 = hash2.get(compareWhat).toString().toLowerCase();
-			
+
 			if (this.compareWhat.equals("WAYPOINT")){
 				str1 = hash1.get(compareWhat).toString().substring(2).toLowerCase();
 				str2 = hash2.get(compareWhat).toString().substring(2).toLowerCase();
 			}
-			
+
 			if (this.compareWhat.equals("DISTANCE")){
 				dbl1 = Common.parseDouble(str1.substring(0,str1.length()-3));
 				dbl2 = Common.parseDouble(str2.substring(0,str2.length()-3));
@@ -510,5 +510,5 @@
 		}
 	}
 
-	
+
 }

Modified: trunk/src/CacheWolf/exp/KMLExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/KMLExporter.java	2009-12-01 11:11:02 UTC (rev 2353)
+++ trunk/src/CacheWolf/exp/KMLExporter.java	2009-12-01 21:26:58 UTC (rev 2354)
@@ -28,12 +28,12 @@
 
 /**
 *	Class to export the cache database (index) to an KML-File
-*	which can be read by Google Earth   
-*   
+*	which can be read by Google Earth
+*
 */
 public class KMLExporter extends Exporter {
-	private static final String COLOR_FOUND = "ff98fb98"; 
-	private static final String COLOR_OWNED = "ffffaa55"; 
+	private static final String COLOR_FOUND = "ff98fb98";
+	private static final String COLOR_OWNED = "ffffaa55";
 	private static final String COLOR_AVAILABLE = "ffffffff";
 	private static final String COLOR_NOT_AVAILABLE = "ff0000ff";
 
@@ -43,8 +43,8 @@
 	static final int OWNED = 2;
 	static final int NOT_AVAILABLE = 3;
 	static final int UNKNOWN = 4;
-	
-	
+
+
 	String []categoryNames = {"Available","Found", "Owned", "Not Available", "UNKNOWN"};
 	Hashtable [] outCacheDB = new Hashtable[categoryNames.length];
 
@@ -54,7 +54,7 @@
 		this.setHowManyParams(LAT_LON);
 	}
 
-	
+
 	public KMLExporter(Preferences p, Profile prof){
 			super();
 			this.setMask("*.kml");
@@ -67,7 +67,7 @@
 		CacheHolder addiWpt;
 		ProgressBarForm pbf = new ProgressBarForm();
 		Handle h = new Handle();
-		
+
 		if (variant == ASK_FILE) {
 			outFile = getOutputFile();
 			if (outFile == null) return;
@@ -83,7 +83,7 @@
 		int expCount = 0;
 		copyIcons(outFile.getParent());
 		buildOutDB();
-		
+
 		try{
 			PrintWriter outp =  new PrintWriter(new BufferedWriter(new FileWriter(outFile)));
 			str = this.header();
@@ -96,13 +96,13 @@
 				outp.print(startFolder(categoryNames[cat]));
 
 				Vector tmp;
-				MapEntry entry; 
+				MapEntry entry;
 				while (outLoop.hasNext()){
 					entry = (MapEntry) outLoop.next();
 					tmp = (Vector)entry.getValue();
 					// skip over empty cachetypes
 					if (tmp.size() == 0) continue;
-					outp.print(startFolder(CacheType.cw2ExportString(new Integer((String)entry.getKey()).byteValue())));
+					outp.print(startFolder(CacheType.sym2GpxString(new Integer((String)entry.getKey()).byteValue())));
 
 					for(int i = 0; i<tmp.size(); i++){
 						ch = (CacheHolder) tmp.get(i);
@@ -110,7 +110,7 @@
 						expCount++;
 						h.progress = (float)expCount/(float)counter;
 						h.changed();
-						
+
 						if (ch.pos.isValid()){
 							str = record(ch, ch.pos.getLatDeg(CWPoint.DD).replace('.', this.decimalSeparator),
 								     ch.pos.getLonDeg(CWPoint.DD).replace('.', this.decimalSeparator));
@@ -130,7 +130,7 @@
 											addiWpt.pos.getLonDeg(CWPoint.DD).replace('.', this.decimalSeparator));
 									if (str != null) outp.print(str);
 								}
-								
+
 							}
 							if (createdAdditionalWaypointsFolder) {
 								outp.print(endFolder());// addi wpts
@@ -141,7 +141,7 @@
 				}
 				outp.print(endFolder());// category
 			}
-			
+
 			str = trailer();
 			if (str != null) outp.print(str);
 			outp.close();
@@ -152,14 +152,14 @@
 		//try
 
 	}
-	
+
 	private void buildOutDB(){
 		CacheHolder ch;
 		Vector tmp;
 		Iterator categoryLoop;
 		MapEntry entry;
 		boolean foundOne;
-		
+
 		// create the roots for the different categories
 		for (int i = 0; i < categoryNames.length; i++) {
 			outCacheDB[i] = new Hashtable();
@@ -179,11 +179,11 @@
 				else if (ch.is_archived() || !ch.is_available()){ tmp = (Vector) outCacheDB[NOT_AVAILABLE].get(String.valueOf(ch.getType()));}
 				else if (ch.is_available()){ tmp = (Vector) outCacheDB[AVAILABLE].get(String.valueOf(ch.getType()));}
 				else { tmp = (Vector) outCacheDB[UNKNOWN].get(String.valueOf(ch.getType()));}
-				
+
 				tmp.add(ch);
 			}
 		}
-		
+
 		//eleminate empty categories
 		for (int i = 0; i < categoryNames.length; i++) {
 			categoryLoop = outCacheDB[i].entries();
@@ -200,14 +200,14 @@
 			// set hashtable for that category to null
 			if (!foundOne)outCacheDB[i] = null;
 		}
-		
 
+
 	}
-	
+
 	private String startFolder(String name){
 		return startFolder(name, true);
 	}
-	
+
 	private String startFolder(String name, boolean open){
 		StringBuffer strBuf = new StringBuffer(200);
 		strBuf.append("<Folder>\r\n");
@@ -218,7 +218,7 @@
 	}
 
 	private String endFolder() {
-		
+
 		return "</Folder>\r\n";
 	}
 
@@ -227,7 +227,7 @@
 			ZipFile zif = new ZipFile (FileBase.getProgramDirectory() + FileBase.separator + "exporticons" + FileBase.separator + "GoogleEarth.zip");
 			ZipEntry zipEnt;
 			int len;
-			String fileName; 
+			String fileName;
 
 			for (int i = 0; i < CacheType.guiTypeStrings().length; i++) {
 				fileName = CacheType.typeImageForId(CacheType.guiSelect2Cw(i));
@@ -252,16 +252,16 @@
 			}
 	}
 
-	
+
 	public String header () {
 		StringBuffer strBuf = new StringBuffer(200);
-				
+
 		strBuf.append("<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n");
 		strBuf.append("<kml xmlns=\"http://earth.google.com/kml/2.0\">\r\n");
 		strBuf.append("<Folder>\r\n");
 		strBuf.append("<name>CacheWolf</name>\r\n");
 		strBuf.append("<open>1</open>\r\n");
-	
+
 		return strBuf.toString();
 	}
 
@@ -269,7 +269,7 @@
 	public String record(CacheHolder ch, String lat, String lon){
 		StringBuffer strBuf = new StringBuffer(200);
 		CacheHolderDetail det = ch.getExistingDetails();
-		
+
 		strBuf.append("   <Placemark>\r\n");
 		if (det.URL != null){
 			strBuf.append("      <description>"+SafeXML.clean(det.URL)+"</description>\r\n");
@@ -295,10 +295,10 @@
 		strBuf.append("      </LabelStyle>\r\n");
 		strBuf.append("      </Style>\r\n");
 		strBuf.append("   </Placemark>\r\n");
-	
+
 		return strBuf.toString();
 	}
-	
+
 	public String trailer(){
 		StringBuffer strBuf = new StringBuffer(50);
 
@@ -307,13 +307,13 @@
 
 		return strBuf.toString();
 	}
-	
+
 	private String getColor(CacheHolder ch){
 		if (ch.is_found()) return COLOR_FOUND;
 		if (ch.is_owned()) return COLOR_OWNED;
 		if (ch.is_archived() || !ch.is_available()) return COLOR_NOT_AVAILABLE;
-		
+
 		return COLOR_AVAILABLE;
 	}
-	
+
 }

Modified: trunk/src/CacheWolf/exp/MSARCSVExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/MSARCSVExporter.java	2009-12-01 11:11:02 UTC (rev 2353)
+++ trunk/src/CacheWolf/exp/MSARCSVExporter.java	2009-12-01 21:26:58 UTC (rev 2354)
@@ -6,7 +6,7 @@
  * Class to export the cache database (index) to an CSV File which can bei easy
  * importet bei MS AutoRoute (testet with AR 2001 German) Format of the file:
  * Name;Breitengrad;L?ngengrad;Typ1;Typ2;Waypoint;Datum;Hyperlink
- * 
+ *
  */
 public class MSARCSVExporter extends Exporter {
 
@@ -26,7 +26,7 @@
 		StringBuffer str = new StringBuffer(200);
 		str.append("\"" + ch.getWayPoint() + " - " + ch.getCacheName() + "\";");
 		str.append(lat + ";" + lon +";");
-		str.append("\"" + CacheType.cw2ExportString(ch.getType())+ "\";");
+		str.append("\"" + CacheType.sym2GpxString(ch.getType())+ "\";");
 		str.append("\"" + CacheSize.cw2ExportString(ch.getCacheSize()) + "\";");
 		str.append("\"" + ch.getWayPoint() + "\";");
 		str.append("\"" + ch.getDateHidden() + "\";");

Modified: trunk/src/CacheWolf/exp/TPLExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/TPLExporter.java	2009-12-01 11:11:02 UTC (rev 2353)
+++ trunk/src/CacheWolf/exp/TPLExporter.java	2009-12-01 21:26:58 UTC (rev 2354)
@@ -207,7 +207,7 @@
 						Regex dec = new Regex("[,.]",myFilter.decSep);
 						if (myFilter.badChars != null) rex = new Regex("["+myFilter.badChars+"]","");
 						varParams = new Hashtable();
-						varParams.put("TYPE", CacheType.cw2ExportString(ch.getType()));
+						varParams.put("TYPE", CacheType.sym2GpxString(ch.getType()));
 						varParams.put("SHORTTYPE", CacheType.getExportShortId(ch.getType()));
 						varParams.put("SIZE", CacheSize.cw2ExportString(ch.getCacheSize()));
 						varParams.put("SHORTSIZE", CacheSize.getExportShortId(ch.getCacheSize()));
@@ -217,6 +217,9 @@
 						else {
 							varParams.put("MAINWP", "");
 						}
+						if (ch.isCustomWpt()) {
+
+						}
 						String wp = ch.getWayPoint();
 						varParams.put("WAYPOINT", wp);
 						int wpl = wp.length();
@@ -224,15 +227,15 @@
 						varParams.put("SHORTWAYPOINT", wp.substring(wps, wpl));
 						varParams.put("OWNER", ch.getCacheOwner());
 						byte chGetHard=ch.getHard();
-						varParams.put("DIFFICULTY", (ch.isAddiWpt() || CacheType.CW_TYPE_CUSTOM == ch.getType() || chGetHard < 0)?"":dec.replaceAll(CacheTerrDiff.longDT(chGetHard)));
+						varParams.put("DIFFICULTY", (ch.isAddiWpt() || ch.isCustomWpt() || chGetHard < 0)?"":dec.replaceAll(CacheTerrDiff.longDT(chGetHard)));
 						String sHard = Byte.toString(chGetHard);
-						varParams.put("SHORTDIFFICULTY", (ch.isAddiWpt() || CacheType.CW_TYPE_CUSTOM == ch.getType() || chGetHard < 0)?"":sHard);
-						varParams.put("SHDIFFICULTY", (ch.isAddiWpt() || CacheType.CW_TYPE_CUSTOM == ch.getType() || chGetHard < 0)?"":sHard.substring(0,1));
+						varParams.put("SHORTDIFFICULTY", (ch.isAddiWpt() || ch.isCustomWpt() || chGetHard < 0)?"":sHard);
+						varParams.put("SHDIFFICULTY", (ch.isAddiWpt() || ch.isCustomWpt() || chGetHard < 0)?"":sHard.substring(0,1));
 						byte chGetTerrain=ch.getTerrain();
-						varParams.put("TERRAIN", (ch.isAddiWpt() || CacheType.CW_TYPE_CUSTOM == ch.getType() || chGetTerrain < 0)?"":dec.replaceAll(CacheTerrDiff.longDT(chGetTerrain)));
+						varParams.put("TERRAIN", (ch.isAddiWpt() || ch.isCustomWpt() || chGetTerrain < 0)?"":dec.replaceAll(CacheTerrDiff.longDT(chGetTerrain)));
 						String sTerrain = Byte.toString(chGetTerrain);
-						varParams.put("SHORTTERAIN", (ch.isAddiWpt() || CacheType.CW_TYPE_CUSTOM == ch.getType() || chGetTerrain < 0)?"":sTerrain);
-						varParams.put("SHTERRAIN", (ch.isAddiWpt() || CacheType.CW_TYPE_CUSTOM == ch.getType() || chGetTerrain < 0)?"":sTerrain.substring(0,1));
+						varParams.put("SHORTTERAIN", (ch.isAddiWpt() || ch.isCustomWpt() || chGetTerrain < 0)?"":sTerrain);
+						varParams.put("SHTERRAIN", (ch.isAddiWpt() || ch.isCustomWpt() || chGetTerrain < 0)?"":sTerrain.substring(0,1));
 						varParams.put("DISTANCE", dec.replaceAll(ch.getDistance()));
 						varParams.put("BEARING", ch.bearing);
 						varParams.put("LATLON", ch.LatLon);

Modified: trunk/src/CacheWolf/imp/OCXMLImporterScreen.java
===================================================================
--- trunk/src/CacheWolf/imp/OCXMLImporterScreen.java	2009-12-01 11:11:02 UTC (rev 2353)
+++ trunk/src/CacheWolf/imp/OCXMLImporterScreen.java	2009-12-01 21:26:58 UTC (rev 2354)
@@ -1,5 +1,5 @@
 /**
- * 
+ *
  */
 package CacheWolf.imp;
 
@@ -14,7 +14,7 @@
 
 /**
  * @author pfeffer
- * This Class is the Dialog for Download from Opencaching.de 
+ * This Class is the Dialog for Download from Opencaching.de
  * is called from OCXMLImporter
  * 20061209 Bugfix: Checking for uninitialised missingCheckBox
  */
@@ -43,36 +43,36 @@
 	public static final int TYPE = 256;
 	public static final int HOST = 512;
 
-	
+
 	public OCXMLImporterScreen(String title, int options) {
 		super();
 		pref = Global.getPref(); // myPreferences sollte sp?ter auch diese Einstellungen speichern
-		
+
 		isGC = ((options & ISGC) > 0);
-		
+
 		this.title = title;
-				
+
 		if((options & HOST) > 0){
 			String[] hosts = new String[] {OCXMLImporter.OPENCACHING_DE_HOST, OCXMLImporter.OPENCACHING_CZ_HOST, OCXMLImporter.OPENCACHING_PL_HOST, OCXMLImporter.OPENCACHING_UK_HOST};
 			domains = new mChoice(hosts,0);
 			domains.setTextSize(25, 1);
 			this.addLast(domains, CellConstants.DONTSTRETCH, CellConstants.DONTFILL|CellConstants.WEST);
 		}
-		
+
 		if ((options & TYPE) > 0) {
 			this.addLast( chcType = new mChoice(new String[] {
-					MyLocale.getMsg(1627,"All caches"),	
-					CacheType.CW_GUISTR_TRADI,
-					CacheType.CW_GUISTR_MULTI,
-					CacheType.CW_GUISTR_VIRTUAL,
-					CacheType.CW_GUISTR_LETTERBOX,
-					CacheType.CW_GUISTR_EVENT,
-					CacheType.CW_GUISTR_MEGAEVENT,
-					CacheType.CW_GUISTR_WEBCAM,
-					CacheType.CW_GUISTR_UNKNOWN,
-					CacheType.CW_GUISTR_CITO,
-					CacheType.CW_GUISTR_EARTH,
-					CacheType.CW_GUISTR_WHEREIGO
+					MyLocale.getMsg(1627,"All caches"),
+					CacheType.CT_GUI[CacheType.CT_Index(CacheType.CW_TYPE_TRADITIONAL)],
+					CacheType.CT_GUI[CacheType.CT_Index(CacheType.CW_TYPE_MULTI)],
+					CacheType.CT_GUI[CacheType.CT_Index(CacheType.CW_TYPE_VIRTUAL)],
+					CacheType.CT_GUI[CacheType.CT_Index(CacheType.CW_TYPE_LETTERBOX)],
+					CacheType.CT_GUI[CacheType.CT_Index(CacheType.CW_TYPE_EVENT)],
+					CacheType.CT_GUI[CacheType.CT_Index(CacheType.CW_TYPE_MEGA_EVENT)],
+					CacheType.CT_GUI[CacheType.CT_Index(CacheType.CW_TYPE_WEBCAM)],
+					CacheType.CT_GUI[CacheType.CT_Index(CacheType.CW_TYPE_UNKNOWN)],
+					CacheType.CT_GUI[CacheType.CT_Index(CacheType.CW_TYPE_CITO)],
+					CacheType.CT_GUI[CacheType.CT_Index(CacheType.CW_TYPE_EARTH)],
+					CacheType.CT_GUI[CacheType.CT_Index(CacheType.CW_TYPE_WHEREIGO)],
 				},0), CellConstants.STRETCH, (CellConstants.FILL|CellConstants.WEST));
 		}
 
@@ -95,7 +95,7 @@
 			this.addNext(distanceInput,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 			this.addLast(distUnit = new mLabel(" km/mi."),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 		}
-		
+
 		if ((options & MAXNUMBER) > 0) {
 			this.addNext(maxNumberLbl = new mLabel(MyLocale.getMsg(1623,"Max. number:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 			maxNumberInput = new mInput();
@@ -107,7 +107,7 @@
 			this.addNext(maxNumberInput,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 			this.addLast( new mLabel(MyLocale.getMsg(1624," caches")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 		}
-		
+
 		if ((options & MAXLOGS) > 0) {
 			this.addNext(new mLabel(MyLocale.getMsg(1626,"Max. logs:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 			maxLogsInput = new mInput();
@@ -128,7 +128,7 @@
 			travelbugsCheckBox.setState(pref.downloadTBs);
 			this.addLast(travelbugsCheckBox, CellConstants.DONTSTRETCH, CellConstants.DONTFILL|CellConstants.WEST);
 		}
-		
+
 		if((options & INCLUDEFOUND) > 0){
 			foundCheckBox = new mCheckBox();
 			foundCheckBox.setText(MyLocale.getMsg(1622,"Exclude found caches"));
@@ -168,7 +168,7 @@
 		}
 		super.onEvent(ev);
 	}
-	
+
 	public String getCacheTypeRestriction(SpiderProperties p){
 		String cacheTypeRestriction = "";
 
@@ -178,7 +178,7 @@
 				case  0:
 					cacheTypeRestriction = "";
 					break;
-				case  1: 
+				case  1:
 					cacheTypeRestriction = p.getProp("onlyTraditional");
 					break;
 				case  2:
@@ -219,7 +219,7 @@
 		}
 		return cacheTypeRestriction;
 	}
-	
+
 	public byte getRestrictedCacheType(SpiderProperties p){
 		byte RestrictedType = CacheType.CW_TYPE_ERROR;
 
@@ -229,7 +229,7 @@
 				case  0:
 					RestrictedType = CacheType.CW_TYPE_ERROR;
 					break;
-				case  1: 
+				case  1:
 					RestrictedType = CacheType.CW_TYPE_TRADITIONAL;
 					break;
 				case  2:



From araber95 at mail.berlios.de  Mon Dec  7 13:44:33 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Mon, 7 Dec 2009 13:44:33 +0100
Subject: [Cachewolf-svn] r2355 - trunk/src/CacheWolf
Message-ID: <200912071244.nB7CiX15000567@sheep.berlios.de>

Author: araber95
Date: 2009-12-07 13:44:32 +0100 (Mon, 07 Dec 2009)
New Revision: 2355

Modified:
   trunk/src/CacheWolf/RadarPanel.java
Log:
user defined symbols on RadarPanel. Same like on Map

Modified: trunk/src/CacheWolf/RadarPanel.java
===================================================================
--- trunk/src/CacheWolf/RadarPanel.java	2009-12-01 21:26:58 UTC (rev 2354)
+++ trunk/src/CacheWolf/RadarPanel.java	2009-12-07 12:44:32 UTC (rev 2355)
@@ -132,9 +132,9 @@
 							iActP.addImage(aImg);
 						}
 					}
-					Image imgCache=GuiImageBroker.getTypeImage(holder.getType());
+					Image imgCache=GuiImageBroker.getTypeImage(holder.getType(),true);
 					// If we have no image for the cache type use a question mark
-					if (imgCache==null) imgCache=GuiImageBroker.getTypeImage(CacheType.CW_TYPE_UNKNOWN); 
+					if (imgCache==null) imgCache=GuiImageBroker.getTypeImage(CacheType.CW_TYPE_UNKNOWN,true); 
 					rpi = new RadarPanelImage(imgCache);
 					rpi.wayPoint = holder.getWayPoint();
 					rpi.rownum = i;



From araber95 at mail.berlios.de  Mon Dec  7 19:46:23 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Mon, 7 Dec 2009 19:46:23 +0100
Subject: [Cachewolf-svn] r2356 - trunk/src/CacheWolf
Message-ID: <200912071846.nB7IkNAX021480@sheep.berlios.de>

Author: araber95
Date: 2009-12-07 19:46:21 +0100 (Mon, 07 Dec 2009)
New Revision: 2356

Modified:
   trunk/src/CacheWolf/RadarPanel.java
Log:
center user defined icons on radarpanel correct!

Modified: trunk/src/CacheWolf/RadarPanel.java
===================================================================
--- trunk/src/CacheWolf/RadarPanel.java	2009-12-07 12:44:32 UTC (rev 2355)
+++ trunk/src/CacheWolf/RadarPanel.java	2009-12-07 18:46:21 UTC (rev 2356)
@@ -138,7 +138,8 @@
 					rpi = new RadarPanelImage(imgCache);
 					rpi.wayPoint = holder.getWayPoint();
 					rpi.rownum = i;
-					rpi.setLocation(centerX+drX-7,centerY+drY-7);
+					int dxy = (imgCache.getHeight() - 2) / 2;
+					rpi.setLocation(centerX+drX-dxy,centerY+drY-dxy);
 					iActP.addImage(rpi);
 					if(holder == selectedWaypoint){ // Draw red circle around selected wpt
 						Image imgCircle = new Image(20, 20);



From araber95 at mail.berlios.de  Sat Dec 12 23:04:19 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Sat, 12 Dec 2009 23:04:19 +0100
Subject: [Cachewolf-svn] r2357 - trunk/src/CacheWolf
Message-ID: <200912122204.nBCM4Jwo019804@sheep.berlios.de>

Author: araber95
Date: 2009-12-12 23:04:17 +0100 (Sat, 12 Dec 2009)
New Revision: 2357

Modified:
   trunk/src/CacheWolf/RadarPanel.java
Log:
doing the right circle and reflecting not quadratic icons

Modified: trunk/src/CacheWolf/RadarPanel.java
===================================================================
--- trunk/src/CacheWolf/RadarPanel.java	2009-12-07 18:46:21 UTC (rev 2356)
+++ trunk/src/CacheWolf/RadarPanel.java	2009-12-12 22:04:17 UTC (rev 2357)
@@ -138,18 +138,20 @@
 					rpi = new RadarPanelImage(imgCache);
 					rpi.wayPoint = holder.getWayPoint();
 					rpi.rownum = i;
-					int dxy = (imgCache.getHeight() - 2) / 2;
-					rpi.setLocation(centerX+drX-dxy,centerY+drY-dxy);
+					int dx = imgCache.getWidth();
+					int dy = imgCache.getHeight();
+					rpi.setLocation(centerX+drX-dx/2,centerY+drY-dy/2);
 					iActP.addImage(rpi);
 					if(holder == selectedWaypoint){ // Draw red circle around selected wpt
-						Image imgCircle = new Image(20, 20);
+						int diag = (int) (java.lang.Math.sqrt(dx*dx+dy*dy)+0.5);
+						Image imgCircle = new Image(diag, diag);
 						Graphics gCircle = new Graphics(imgCircle);
 						gCircle.setColor(Color.Black);
-						gCircle.fillRect(0,0,20,20);
+						gCircle.fillRect(0,0,diag,diag);
 						gCircle.setColor(new Color(255,0,0));
-						gCircle.drawEllipse(0,0, 20,20);
+						gCircle.drawEllipse(0,0, diag,diag);
 						aImg = new AniImage(imgCircle);
-						aImg.setLocation(centerX+drX-9,centerY+drY-9);
+						aImg.setLocation(centerX+drX-diag/2,centerY+drY-diag/2);
 						aImg.transparentColor = new Color(0,0,0);
 						aImg.properties = mImage.IsNotHot;
 						iActP.addImage(aImg);



From araber95 at mail.berlios.de  Sat Dec 12 23:07:32 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Sat, 12 Dec 2009 23:07:32 +0100
Subject: [Cachewolf-svn] r2358 - trunk/src/CacheWolf
Message-ID: <200912122207.nBCM7Wjo020144@sheep.berlios.de>

Author: araber95
Date: 2009-12-12 23:07:30 +0100 (Sat, 12 Dec 2009)
New Revision: 2358

Modified:
   trunk/src/CacheWolf/CacheWolf.java
Log:
removing start parameter output (was there for debugging purposes i suppose)
i now use startparameters (-c preffile.xml) so its boring


Modified: trunk/src/CacheWolf/CacheWolf.java
===================================================================
--- trunk/src/CacheWolf/CacheWolf.java	2009-12-12 22:04:17 UTC (rev 2357)
+++ trunk/src/CacheWolf/CacheWolf.java	2009-12-12 22:07:30 UTC (rev 2358)
@@ -33,13 +33,15 @@
 		String configfile = null;
 		boolean debug = false;
 		if(args.length > 0){
+			/* 
 			if(args[0].equals("test")){
 				Test t=new Test(); 
 				t.testAll();
 			}
+			*/
 			for (int i=0; i < args.length ; i++) {
-				Vm.debug("prog: " + args[i]);
-				Vm.debug("vm: " + vmargs[i]);
+				// Vm.debug("prog: " + args[i]);
+				// Vm.debug("vm: " + vmargs[i]);
 				if (args[i] != null && args[i].length() > 1 &&
 						(args[i].startsWith("-") || args[i].startsWith("/")) ) {
 					String c = args[i].substring(1, args[i].length());
@@ -61,11 +63,12 @@
 				}
 			}
 		}
-		
+		/*
 		if (debug) {
 			Vm.debug("prg-args: " + args.length);
 			Vm.debug("vm-args: " + vmargs.length);
 		}
+		*/
 		
 		Editor mainF = new MainForm(debug, configfile);
 		Device.preventIdleState(true);



From araber95 at mail.berlios.de  Sat Dec 12 23:26:13 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Sat, 12 Dec 2009 23:26:13 +0100
Subject: [Cachewolf-svn] r2359 - in trunk: res_noewe/languages
	src/CacheWolf/exp
Message-ID: <200912122226.nBCMQDZ9022019@sheep.berlios.de>

Author: araber95
Date: 2009-12-12 23:26:10 +0100 (Sat, 12 Dec 2009)
New Revision: 2359

Modified:
   trunk/res_noewe/languages/DE.cfg
   trunk/res_noewe/languages/EN.cfg
   trunk/res_noewe/languages/FR.cfg
   trunk/res_noewe/languages/NL.cfg
   trunk/res_noewe/languages/PL.cfg
   trunk/src/CacheWolf/exp/GpxExportNg.java
Log:
changed Menupoint from mapsource to (NG development)
changed newline to crlf
lat/lon nr of decimals limit to 6
made Style export MyFinds work


Modified: trunk/res_noewe/languages/DE.cfg
===================================================================
--- trunk/res_noewe/languages/DE.cfg	2009-12-12 22:07:30 UTC (rev 2358)
+++ trunk/res_noewe/languages/DE.cfg	2009-12-12 22:26:10 UTC (rev 2359)
@@ -2,7 +2,7 @@
 	{LocalResources}
 		{de}
 		100=nach HTML
-		101=nach GPX Mapsource
+		101=nach GPX (NG Entwicklung)
 		102=nach TOP50 ASCII
 		103=nach GPX
 		104=nach CSV

Modified: trunk/res_noewe/languages/EN.cfg
===================================================================
--- trunk/res_noewe/languages/EN.cfg	2009-12-12 22:07:30 UTC (rev 2358)
+++ trunk/res_noewe/languages/EN.cfg	2009-12-12 22:26:10 UTC (rev 2359)
@@ -2,7 +2,7 @@
 	{LocalResources}
 		{en}
 		100=to HTML
-		101=to GPX Mapsource
+		101=to GPX (NG Development)
 		102=to TOP50 ASCII
 		103=to GPX
 		104=to ASC

Modified: trunk/res_noewe/languages/FR.cfg
===================================================================
--- trunk/res_noewe/languages/FR.cfg	2009-12-12 22:07:30 UTC (rev 2358)
+++ trunk/res_noewe/languages/FR.cfg	2009-12-12 22:26:10 UTC (rev 2359)
@@ -2,7 +2,7 @@
 	{LocalResources}
 		{fr}
 		100=vers HTML
-		101=vers GPX Mapsource
+		101=vers GPX (NG D%e9veloppement)
 		102=vers TOP50 ASCII
 		103=vers GPX
 		104=vers CSV

Modified: trunk/res_noewe/languages/NL.cfg
===================================================================
--- trunk/res_noewe/languages/NL.cfg	2009-12-12 22:07:30 UTC (rev 2358)
+++ trunk/res_noewe/languages/NL.cfg	2009-12-12 22:26:10 UTC (rev 2359)
@@ -2,7 +2,7 @@
 	{LocalResources}
 		{nl}
 		100=naar HTML
-		101=naar GPX MapSource
+		101=naar GPX Ontwikkeling
 		102=naar TOP50 ASCII
 		103=naar GPX
 		104=naar CSV

Modified: trunk/res_noewe/languages/PL.cfg
===================================================================
--- trunk/res_noewe/languages/PL.cfg	2009-12-12 22:07:30 UTC (rev 2358)
+++ trunk/res_noewe/languages/PL.cfg	2009-12-12 22:26:10 UTC (rev 2359)
@@ -2,7 +2,7 @@
         {LocalResources}
                 {pl}
                 100=HTML
-                101=GPX Mapsource
+                101=GPX Rozw%f6j
                 102=TOP50 ASCII
                 103=GPX
                 104=ASC

Modified: trunk/src/CacheWolf/exp/GpxExportNg.java
===================================================================
--- trunk/src/CacheWolf/exp/GpxExportNg.java	2009-12-12 22:07:30 UTC (rev 2358)
+++ trunk/src/CacheWolf/exp/GpxExportNg.java	2009-12-12 22:26:10 UTC (rev 2359)
@@ -59,7 +59,10 @@
  * can be accomplished with GPX
  */
 public class GpxExportNg {
-
+	/** new line */
+	final static String newLine="\r\n";
+	/** decimal separator for lat- and lon-String */
+	// final static char decimalSeparator='.';
 	/** export is in compact format */
 	final static int STYLE_GPX_COMPACT = 0;
 	/** export is PQ like */
@@ -94,30 +97,30 @@
 	private String finderid;
 
 	// we need to fake desc to make clients like GSAK accept additional waypoints together with caches
-	final static String GPXHEADER = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
-			.concat("<gpx xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" version=\"1.0\" creator=\"CacheWolf\" xsi:schemaLocation=\"http://www.topografix.com/GPX/1/0 http://www.topografix.com/GPX/1/0/gpx.xsd http://www.groundspeak.com/cache/1/0 http://www.groundspeak.com/cache/1/0/cache.xsd\" xmlns=\"http://www.topografix.com/GPX/1/0\">\n")
-			.concat("<name>Waypoints for Cache Listings, Generated by CacheWolf</name>\n")
-			.concat("<desc>This is an individual cache generated from Geocaching.com</desc>\n")
-			.concat("<author>Various users from geocaching.com and/or opencaching.de</author>\n")
-			.concat("<email>contact at cachewolf.de</email>\n")
-			.concat("<url>http://www.cachewolf.de/</url>\n")
-			.concat("<urlname>CacheWolf - Paperless Geocaching</urlname>\n")
-			.concat("<time>@@CREATEDATE@@T00:00:00Z</time>\n")
-			.concat("<keywords>cache, geocache, waypoints</keywords>\n")
+	final static String GPXHEADER = "<?xml version=\"1.0\" encoding=\"utf-8\"?>"+newLine
+			.concat("<gpx xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" version=\"1.0\" creator=\"CacheWolf\" xsi:schemaLocation=\"http://www.topografix.com/GPX/1/0 http://www.topografix.com/GPX/1/0/gpx.xsd http://www.groundspeak.com/cache/1/0 http://www.groundspeak.com/cache/1/0/cache.xsd\" xmlns=\"http://www.topografix.com/GPX/1/0\">".concat(newLine))
+			.concat("<name>@@NAME@@</name>".concat(newLine))
+			.concat("<desc>This is an individual cache generated from Geocaching.com</desc>".concat(newLine))
+			.concat("<author>Various users from geocaching.com and/or opencaching.de</author>".concat(newLine))
+			.concat("<email>contact at cachewolf.de</email>".concat(newLine))
+			.concat("<url>http://www.cachewolf.de/</url>".concat(newLine))
+			.concat("<urlname>CacheWolf - Paperless Geocaching</urlname>".concat(newLine))
+			.concat("<time>@@CREATEDATE@@T00:00:00.0000000-07:00</time>".concat(newLine))
+			.concat("<keywords>cache, geocache, waypoints</keywords>".concat(newLine))
 	// TODO: is it worth a second loop?
 	// .concat("<bounds minlat=\"50.91695\" minlon=\"6.876383\" maxlat=\"50.935183\" maxlon=\"6.918817\" />")
 	;
 
-	final static String GPXLOG = "\t\t\t\t<groundspeak:log id=\"@@LOGID@@\">\n"
-			.concat("\t\t\t\t\t<groundspeak:date>@@LOGDATE@@T00:00:00</groundspeak:date>\n")
-			.concat("\t\t\t\t\t<groundspeak:type>@@LOGTYPE@@</groundspeak:type>\n")
-			.concat("\t\t\t\t\t<groundspeak:finder id=\"@@LOGFINDERID@@\">@@LOGFINDER@@</groundspeak:finder>\n")
-			.concat("\t\t\t\t\t<groundspeak:text encoded=\"@@LOGENCODE@@\">@@LOGTEXT@@</groundspeak:text>\n")
-			.concat("\t\t\t\t</groundspeak:log>\n");
+	final static String GPXLOG = "\t\t\t\t<groundspeak:log id=\"@@LOGID@@\">".concat(newLine)
+			.concat("\t\t\t\t\t<groundspeak:date>@@LOGDATE@@T00:00:00</groundspeak:date>".concat(newLine))
+			.concat("\t\t\t\t\t<groundspeak:type>@@LOGTYPE@@</groundspeak:type>".concat(newLine))
+			.concat("\t\t\t\t\t<groundspeak:finder id=\"@@LOGFINDERID@@\">@@LOGFINDER@@</groundspeak:finder>".concat(newLine))
+			.concat("\t\t\t\t\t<groundspeak:text encoded=\"@@LOGENCODE@@\">@@LOGTEXT@@</groundspeak:text>".concat(newLine))
+			.concat("\t\t\t\t</groundspeak:log>".concat(newLine));
 
-	final static String GPXTB = "\t\t\t\t<groundspeak:travelbug id=\"@@TBID@@\" ref=\"@@TBREF@@\">\n"
-			.concat("\t\t\t\t\t<groundspeak:name>@@TBNAME@@</groundspeak:name>\n")
-			.concat("\t\t\t\t</groundspeak:travelbug>\n");
+	final static String GPXTB = "\t\t\t\t<groundspeak:travelbug id=\"@@TBID@@\" ref=\"@@TBREF@@\">".concat(newLine)
+			.concat("\t\t\t\t\t<groundspeak:name>@@TBNAME@@</groundspeak:name>".concat(newLine))
+			.concat("\t\t\t\t</groundspeak:travelbug>".concat(newLine));
 
 	// FIXME: don't use this until GPX import can strip this off as well
 	final static String GPXADDIINMAIN = "@@ADDIID@@ - @@ADDISHORT@@@@ADDIDELIM@@"
@@ -304,7 +307,7 @@
 					String key = (String) keys.nextElement();
 					PrintWriter writer = (PrintWriter) fileHandles.get(key);
 
-					writer.print("</gpx>\n");
+					writer.print("</gpx>".concat(newLine));
 					writer.close();
 					if (exportTarget == OUTPUT_POI) {
 						poiCounter++;
@@ -439,7 +442,7 @@
 
 				pbf.exit(0);
 
-				outp.print("</gpx>\n");
+				outp.print("</gpx>".concat(newLine));
 				outp.close();
 			} catch (Exception ex) {
 				exportErrors++;
@@ -517,7 +520,7 @@
 				ret.append(formatPqExtensions(ch));
 			}
 
-			ret.append("  </wpt>\n");
+			ret.append("  </wpt>".concat(newLine));
 		} catch (IllegalArgumentException e) {
 			exportErrors++;
 			ch.setIncomplete(true);
@@ -541,31 +544,31 @@
 
 		StringBuffer ret = new StringBuffer();
 
-//			.concat("\t\t<desc>@@WPDESC@@</desc>\n")
+//			.concat("\t\t<desc>@@WPDESC@@</desc>".concat(newLine))
 
-		ret.append("  <wpt lat=\""+String.valueOf(ch.pos.latDec).replace(',', '.')+"\" lon=\""+String.valueOf(ch.pos.lonDec).replace(',', '.')+"\">\n");
+		ret.append("  <wpt lat=\""+ch.pos.getLatDeg(CWPoint.DD)+"\" lon=\""+ch.pos.getLonDeg(CWPoint.DD)+"\">".concat(newLine));
 
 		if (exportStyle != STYLE_GPX_COMPACT) {
 			if (ch.isAddiWpt()) {
 				try {
-					ret.append("    <time>"+ch.mainCache.getDateHidden()+"T00:00:00</time>\n");
+					ret.append("    <time>"+ch.mainCache.getDateHidden()+"T00:00:00</time>".concat(newLine));
 				} catch (Exception e) {
 					Global.getPref().log(ch.getWayPoint() + " has no parent");
 					exportErrors++;
-					ret.append("    <time>1970-01-01T00:00:00</time>\n");
+					ret.append("    <time>1970-01-01T00:00:00</time>".concat(newLine));
 				}
 			} else if (ch.isCustomWpt()) {
-				ret.append("    <time>1970-01-01T00:00:00</time>\n");
+				ret.append("    <time>1970-01-01T00:00:00</time>".concat(newLine));
 			} else {
-				ret.append("    <time>"+ch.getDateHidden()+"T00:00:00</time>\n");
+				ret.append("    <time>"+ch.getDateHidden()+"T00:00:00</time>".concat(newLine));
 			}
 		}
 
 		if (exportIds == WPNAME_ID_SMART) {
 			if (ch.isAddiWpt()) {
-				ret.append("    <name>".concat(SafeXML.cleanGPX(ch.mainCache.getWayPoint().concat(" ").concat(ch.getWayPoint().substring(0, 2)))).concat("</name>\n"));
+				ret.append("    <name>".concat(SafeXML.cleanGPX(ch.mainCache.getWayPoint().concat(" ").concat(ch.getWayPoint().substring(0, 2)))).concat("</name>".concat(newLine)));
 			} else if (ch.isCustomWpt()) {
-				ret.append("    <name>".concat(SafeXML.cleanGPX(ch.getWayPoint())).concat("</name>\n"));
+				ret.append("    <name>".concat(SafeXML.cleanGPX(ch.getWayPoint())).concat("</name>".concat(newLine)));
 			} else {
 				ret.append("    <name>".concat(SafeXML.cleanGPX(ch.getWayPoint())
 						.concat(" ")
@@ -574,64 +577,64 @@
 						.concat(String.valueOf(ch.getTerrain()))
 						.concat(CacheSize.getExportShortId(ch.getCacheSize())))
 						.concat(String.valueOf(ch.getNoFindLogs()))
-						.concat("</name>\n"));
+						.concat("</name>".concat(newLine)));
 			}
 		} else if (exportIds == WPNAME_NAME_SMART) {
 			// TBD
 		} else {
-			ret.append("    <name>".concat(SafeXML.cleanGPX(ch.getWayPoint())).concat("</name>\n"));
+			ret.append("    <name>".concat(SafeXML.cleanGPX(ch.getWayPoint())).concat("</name>".concat(newLine)));
 		}
 
 		// no <cmt> for custom
 		if (!ch.isCustomWpt()) {
 			if (exportIds == WPNAME_ID_SMART && exportStyle == STYLE_GPX_COMPACT) {
 				if (ch.isAddiWpt()) {
-					ret.append("    <cmt>".concat(SafeXML.cleanGPX(ch.getCacheName() + " " + ch.getFreshDetails().LongDescription)).concat("</cmt>\n"));
+					ret.append("    <cmt>".concat(SafeXML.cleanGPX(ch.getCacheName() + " " + ch.getFreshDetails().LongDescription)).concat("</cmt>".concat(newLine)));
 				} else {
-					ret.append("    <cmt>".concat(SafeXML.cleanGPX(ch.getCacheName() + " " + Common.rot13(ch.getFreshDetails().Hints))).concat("</cmt>\n"));
+					ret.append("    <cmt>".concat(SafeXML.cleanGPX(ch.getCacheName() + " " + Common.rot13(ch.getFreshDetails().Hints))).concat("</cmt>".concat(newLine)));
 				}
 			} else if (exportIds == WPNAME_NAME_SMART) {
 				// TBD
 			} else {
 				if (ch.isAddiWpt()) {
-					ret.append("    <cmt>".concat(SafeXML.cleanGPX(ch.getFreshDetails().LongDescription)).concat("</cmt>\n"));
+					ret.append("    <cmt>".concat(SafeXML.cleanGPX(ch.getFreshDetails().LongDescription)).concat("</cmt>".concat(newLine)));
 				} // caches have no <cmt> in gc.com PQs
 			}
 		}
 
 		if (ch.isAddiWpt() || ch.isCustomWpt()) {
-			ret.append("    <desc>".concat(SafeXML.cleanGPX(ch.getCacheName())).concat("</desc>\n"));
+			ret.append("    <desc>".concat(SafeXML.cleanGPX(ch.getCacheName())).concat("</desc>".concat(newLine)));
 		} else {
 			ret.append("    <desc>".concat(SafeXML.cleanGPX(ch.getCacheName().concat(" by ").concat(ch.getCacheOwner()).concat(", ")
 					.concat(CacheType.sym2GpxString(ch.getType()))
 					.concat(" (").concat(CacheTerrDiff.shortDT(ch.getHard()))
 					.concat("/").concat(CacheTerrDiff.shortDT(ch.getTerrain())).concat(")")))
-					.concat("</desc>\n"));
+					.concat("</desc>".concat(newLine)));
 		}
 
 		if (exportStyle != STYLE_GPX_COMPACT) {
 			if (!ch.isCustomWpt()) {
-				ret.append("    <url>".concat(ch.details.URL).concat("</url>\n"));
-				ret.append("    <urlname>".concat(SafeXML.cleanGPX(ch.getCacheName())).concat("</urlname>\n"));
+				ret.append("    <url>".concat(ch.details.URL).concat("</url>".concat(newLine)));
+				ret.append("    <urlname>".concat(SafeXML.cleanGPX(ch.getCacheName())).concat("</urlname>".concat(newLine)));
 			}
 		}
 
 		if (customIcons) {
-			ret.append("    <sym>".concat(poiMapper.getIcon(ch)).concat("</sym>\n"));
+			ret.append("    <sym>".concat(poiMapper.getIcon(ch)).concat("</sym>".concat(newLine)));
 		} else {
 			if (ch.isAddiWpt()) {
-				ret.append("    <sym>".concat(CacheType.sym2GpxString(ch.getType())).concat("</sym>\n"));
+				ret.append("    <sym>".concat(CacheType.sym2GpxString(ch.getType())).concat("</sym>".concat(newLine)));
 			} else if (ch.isCustomWpt()) {
-				ret.append("    <sym>Custom</sym>\n");
+				ret.append("    <sym>Custom</sym>".concat(newLine));
 			} else if (ch.is_found()) {
-				ret.append("    <sym>Geocache found</sym>\n");
+				ret.append("    <sym>Geocache found</sym>".concat(newLine));
 			} else {
-				ret.append("    <sym>Geocache</sym>\n");
+				ret.append("    <sym>Geocache</sym>".concat(newLine));
 			}
 		}
 
 		if (exportStyle != STYLE_GPX_COMPACT) {
-			ret.append("    <type>".concat(CacheType.type2GpxString(ch.getType())).concat("</type>\n"));
+			ret.append("    <type>".concat(CacheType.type2GpxString(ch.getType())).concat("</type>".concat(newLine)));
 		}
 
 		return ret.toString();
@@ -647,26 +650,26 @@
 		if (ch.isCustomWpt() || ch.isAddiWpt())
 			return "";
 
-		return "    <groundspeak:cache id=\"".concat(ch.GetCacheID()).concat("\" available=\"").concat(ch.is_available() ? TRUE : FALSE).concat("\" archived=\"").concat(ch.is_archived() ? TRUE : FALSE).concat("\" xmlns:groundspeak=\"http://www.groundspeak.com/cache/1/0\">\n")
-		.concat("      <groundspeak:name>").concat(SafeXML.cleanGPX(ch.getCacheName())).concat("</groundspeak:name>\n")
-		.concat("      <groundspeak:placed_by>").concat(SafeXML.cleanGPX(ch.getCacheOwner())).concat("</groundspeak:placed_by>\n")
-		.concat("      <groundspeak:owner id=\"").concat("31415").concat("\">").concat(SafeXML.cleanGPX(ch.getCacheOwner())).concat("</groundspeak:owner>\n")
-		.concat("      <groundspeak:type>").concat(CacheType.type2GpxString(ch.getType())).concat("</groundspeak:type>\n")
-		.concat("      <groundspeak:container>").concat(CacheSize.cw2ExportString(ch.getCacheSize())).concat("</groundspeak:container>\n")
-		.concat("      <groundspeak:difficulty>").concat(CacheTerrDiff.shortDT(ch.getHard())).concat("</groundspeak:difficulty>\n")
-		.concat("      <groundspeak:terrain>").concat(CacheTerrDiff.shortDT(ch.getTerrain())).concat("</groundspeak:terrain>\n")
-		.concat("      <groundspeak:country>").concat(SafeXML.cleanGPX(ch.details.Country)).concat("</groundspeak:country>\n")
-		.concat("      <groundspeak:state>").concat(SafeXML.cleanGPX(ch.details.State)).concat("</groundspeak:state>\n")
-		.concat("      <groundspeak:short_description html=\"").concat(ch.is_HTML() ? TRUE : FALSE).concat("\"></groundspeak:short_description>\n")
-		.concat("      <groundspeak:long_description html=\"").concat(ch.is_HTML() ? TRUE : FALSE).concat("\">").concat(SafeXML.cleanGPX(formatLongDescription(ch))).concat("</groundspeak:long_description>\n")
-		.concat("      <groundspeak:encoded_hints>").concat(SafeXML.cleanGPX(Common.rot13(ch.details.Hints))).concat("</groundspeak:encoded_hints>\n")
-		.concat("      <groundspeak:logs>\n")
+		return "    <groundspeak:cache id=\"".concat(ch.GetCacheID()).concat("\" available=\"").concat(ch.is_available() ? TRUE : FALSE).concat("\" archived=\"").concat(ch.is_archived() ? TRUE : FALSE).concat("\" xmlns:groundspeak=\"http://www.groundspeak.com/cache/1/0\">".concat(newLine))
+		.concat("      <groundspeak:name>").concat(SafeXML.cleanGPX(ch.getCacheName())).concat("</groundspeak:name>".concat(newLine))
+		.concat("      <groundspeak:placed_by>").concat(SafeXML.cleanGPX(ch.getCacheOwner())).concat("</groundspeak:placed_by>".concat(newLine))
+		.concat("      <groundspeak:owner id=\"").concat("31415").concat("\">").concat(SafeXML.cleanGPX(ch.getCacheOwner())).concat("</groundspeak:owner>".concat(newLine))
+		.concat("      <groundspeak:type>").concat(CacheType.type2GpxString(ch.getType())).concat("</groundspeak:type>".concat(newLine))
+		.concat("      <groundspeak:container>").concat(CacheSize.cw2ExportString(ch.getCacheSize())).concat("</groundspeak:container>".concat(newLine))
+		.concat("      <groundspeak:difficulty>").concat(CacheTerrDiff.shortDT(ch.getHard())).concat("</groundspeak:difficulty>".concat(newLine))
+		.concat("      <groundspeak:terrain>").concat(CacheTerrDiff.shortDT(ch.getTerrain())).concat("</groundspeak:terrain>".concat(newLine))
+		.concat("      <groundspeak:country>").concat(SafeXML.cleanGPX(ch.details.Country)).concat("</groundspeak:country>".concat(newLine))
+		.concat("      <groundspeak:state>").concat(SafeXML.cleanGPX(ch.details.State)).concat("</groundspeak:state>".concat(newLine))
+		.concat("      <groundspeak:short_description html=\"").concat(ch.is_HTML() ? TRUE : FALSE).concat("\"></groundspeak:short_description>".concat(newLine))
+		.concat("      <groundspeak:long_description html=\"").concat(ch.is_HTML() ? TRUE : FALSE).concat("\">").concat(SafeXML.cleanGPX(formatLongDescription(ch))).concat("</groundspeak:long_description>".concat(newLine))
+		.concat("      <groundspeak:encoded_hints>").concat(SafeXML.cleanGPX(Common.rot13(ch.details.Hints))).concat("</groundspeak:encoded_hints>".concat(newLine))
+		.concat("      <groundspeak:logs>".concat(newLine))
 		.concat(formatLogs(ch))
-		.concat("      </groundspeak:logs>\n")
-		.concat("      <groundspeak:travelbugs>\n")
+		.concat("      </groundspeak:logs>".concat(newLine))
+		.concat("      <groundspeak:travelbugs>".concat(newLine))
 //		.concat(formatTbs(ch))
-		.concat("      </groundspeak:travelbugs>\n")
-		.concat("    </groundspeak:cache>\n");
+		.concat("      </groundspeak:travelbugs>".concat(newLine))
+		.concat("    </groundspeak:cache>".concat(newLine));
 
 	}
 
@@ -695,23 +698,15 @@
 			exportlogs = logs.size();
 		}
 
+		boolean logexported=false;
 		for (int i = 0; i < exportlogs; i++) {
 			String logId = Integer.toString(i);
 			Log log = logs.getLog(i);
 
-			if (exportStyle == STYLE_GPX_MYFINDS && !log.getLogger().equals(Global.getPref().myAlias))
-					continue;
-
-//			if (exportStyle == STYLE_GPX_MYFINDS)
-//				logId = log.getLogId();
-
-//			ret.append("        <groundspeak:log id=\"".concat(log.getLogId()).concat("@@LOGID@@\">\n")
-//			ret.append("        <groundspeak:log id=\"31415\">\n"
-//			.concat("          <groundspeak:date>").concat(log.getDate()).concat("</groundspeak:date>\n")
-//			.concat("          <groundspeak:type>").concat(image2TypeText(log.getIcon())).concat("</groundspeak:type>\n")
-//			.concat("          <groundspeak:finder id=\"@@LOGFINDERID@@\">@@LOGFINDER@@</groundspeak:finder>\n")
-//			.concat("          <groundspeak:text encoded=\"@@LOGENCODE@@\">@@LOGTEXT@@</groundspeak:text>\n")
-//			.concat("        </groundspeak:log>\n"));
+			if (exportStyle == STYLE_GPX_MYFINDS) {
+				if (!log.isOwnLog()) { continue; }
+				else {if (!log.isFoundLog()) { continue; } }
+			}
 			Transformer trans = new Transformer(true);
 			trans.add(new Regex("@@LOGID@@", logId));
 			trans.add(new Regex("@@LOGDATE@@", log.getDate()));
@@ -721,7 +716,21 @@
 			trans.add(new Regex("@@LOGENCODE@@", ""));
 			trans.add(new Regex("@@LOGTEXT@@", SafeXML.cleanGPX(log.getMessage())));
 			ret.append(trans.replaceAll(GPXLOG));
+			if (exportStyle == STYLE_GPX_MYFINDS ) {logexported = true; break;}
 		}
+		if (exportStyle == STYLE_GPX_MYFINDS && !logexported) {
+			// own log is not within the saved logs
+			Transformer trans = new Transformer(true);
+			trans.add(new Regex("@@LOGID@@", "0"));
+			trans.add(new Regex("@@LOGDATE@@", ch.GetStatusDate()+"T"+ch.GetStatusTime()+":00"));
+			trans.add(new Regex("@@LOGTYPE@@", "Found it"));
+			trans.add(new Regex("@@LOGFINDERID@@", fid));
+			trans.add(new Regex("@@LOGFINDER@@", SafeXML.cleanGPX(Global.getPref().myAlias)));
+			trans.add(new Regex("@@LOGENCODE@@", ""));
+			// trans.add(new Regex("@@LOGTEXT@@",ch.details == null ? "" : ch.details.OwnLog == null ? "" : SafeXML.cleanGPX(ch.details.OwnLog.getMessage())));
+			trans.add(new Regex("@@LOGTEXT@@","")); // who cares about the text ?
+			ret.append(trans.replaceAll(GPXLOG));
+		}
 
 		return ret.toString();
 	}
@@ -734,8 +743,18 @@
 		//FIXME: extend profile to add <bounds minlat=\"50.91695\" minlon=\"6.876383\" maxlat=\"50.935183\" maxlon=\"6.918817\" />
 		//Global.getProfile().getSourroundingArea(false);
 		Transformer trans = new Transformer(true);
-		trans.add(new Regex("@@CREATEDATE@@", new Date().setFormat("yyyy-MM-dd").toString()));
+		trans.add(new Regex("@@CREATEDATE@@", new Date().setToCurrentTime().setFormat("yyyy-MM-dd").toString()));
+		if (exportStyle==STYLE_GPX_MYFINDS)
+			 {trans.add(new Regex("@@NAME@@","My Finds Pocket Query"));}
+		else {trans.add(new Regex("@@NAME@@","Waypoints for Cache Listings, Generated by CacheWolf"));}
 		return trans.replaceFirst(GPXHEADER);
+		/*
+		String ret = STRreplace.replace(GPXHEADER,"@@CREATEDATE@@", new Date().setToCurrentTime().setFormat("yyyy-MM-dd").toString());
+		if (exportStyle==STYLE_GPX_MYFINDS)
+			 { ret=STRreplace.replace(ret,"@@NAME@@","My Finds Pocket Query");}
+		else { ret=STRreplace.replace(ret,"@@NAME@@","Waypoints for Cache Listings, Generated by CacheWolf");}
+		return ret;
+		*/
 	}
 
 	/**
@@ -753,15 +772,15 @@
 			if (ch.is_HTML()) {
 				delim = "<br />";
 			} else {
-				delim = "\n";
+				delim = newLine;
 			}
 			// FIXME: format is not quite right yet
 			// FIXME: cut Addis off in GPXimporter otherwise people who use GPX to feed CacheWolf have them doubled
 			if (ch.addiWpts.size() > 0 && exportStyle != STYLE_GPX_MYFINDS) {
 				if (ch.is_HTML()) {
-					ret.append("\n\n<p>Additional Waypoints</p>");
+					ret.append(newLine.concat(newLine)+"<p>Additional Waypoints</p>");
 				} else {
-					ret.append("\n\nAdditional Waypoints\n");
+					ret.append(newLine.concat(newLine)+"Additional Waypoints".concat(newLine));
 				}
 
 				Iterator iter = ch.addiWpts.iterator();
@@ -776,7 +795,7 @@
 					trans.add(new Regex("@@ADDILONG@@",addi.getFreshDetails().LongDescription));
 					ret.append(trans.replaceAll(GPXADDIINMAIN));
 				}
-				ret.append(delim).append("\n");
+				ret.append(delim).append(newLine);
 			}
 			return ret.toString();
 		}



From araber95 at mail.berlios.de  Sun Dec 13 16:34:30 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Sun, 13 Dec 2009 16:34:30 +0100
Subject: [Cachewolf-svn] r2360 - in trunk: lib src/CacheWolf
	src/CacheWolf/imp src/CacheWolf/navi
Message-ID: <200912131534.nBDFYUDF011745@sheep.berlios.de>

Author: araber95
Date: 2009-12-13 16:34:19 +0100 (Sun, 13 Dec 2009)
New Revision: 2360

Modified:
   trunk/lib/ewe.jar
   trunk/src/CacheWolf/Version.java
   trunk/src/CacheWolf/imp/SpiderGC.java
   trunk/src/CacheWolf/navi/MapLoader.java
   trunk/src/CacheWolf/navi/MapLoaderGui.java
   trunk/src/CacheWolf/navi/MapsList.java
Log:
doing some unnecessary things.

Modified: trunk/lib/ewe.jar
===================================================================
(Binary files differ)

Modified: trunk/src/CacheWolf/Version.java
===================================================================
--- trunk/src/CacheWolf/Version.java	2009-12-12 22:26:10 UTC (rev 2359)
+++ trunk/src/CacheWolf/Version.java	2009-12-13 15:34:19 UTC (rev 2360)
@@ -8,7 +8,7 @@
 
 /**
  * Class to hold and handle version information of the cachewolf project
- * language localisation string at at number 7000 
+ * language localisation string at at number 7000
  */
 
 public class Version {
@@ -18,12 +18,12 @@
 	static final int SVN_REVISION = Common.parseInt(VER_SVN.substring(VER_SVN.indexOf(" ")+1, VER_SVN.lastIndexOf(" ")));
 	static final int VERSION_TYPE = 3;
 	public static final String[] VERSION_TYPES = {
-		"Release", 
+		"Release",
 		"ReleaseCandidate",
 		"InDevelopmentStable",
 		"InDevelopmentNewest"
 	};
-	
+
 	/** only valid after calling checkForUpdates() */
 	static int[] updateavailabe = {0,0,0,0,0};
 	/** only valid after calling checkForUpdates() */
@@ -40,8 +40,8 @@
 	}
 
 	/**
-	 * Checks if newer versions of cachewolf are available 
-	 * @return [0] = recommended version type, [1]...[4]: 0: no update available, 1: newer version available, 2: version doesn't exists, 3: error 
+	 * Checks if newer versions of cachewolf are available
+	 * @return [0] = recommended version type, [1]...[4]: 0: no update available, 1: newer version available, 2: version doesn't exists, 3: error
 	 * @throws IOException
 	 */
 	public static void checkForUpdates() throws IOException {
@@ -96,20 +96,20 @@
 
 	private static int checkVersion(Properties curvers, String prefix, int t) {
 		try {
-			int curvmaj = Convert.toInt(curvers.getProperty(prefix + "VersionMajor", "0")); 
+			int curvmaj = Convert.toInt(curvers.getProperty(prefix + "VersionMajor", "0"));
 			int curvmin = Convert.toInt(curvers.getProperty(prefix + "VersionMinor", "0"));
 			String svnRString = curvers.getProperty(prefix + "SvnRevision","0");
 			if (svnRString.startsWith("http")) {
 				String tmp;
 				Regex s;
-				int i = svnRString.indexOf(' '); 
+				int i = svnRString.indexOf(' ');
 				if (i > 0) {
 					tmp = UrlFetcher.fetchString(svnRString.substring(0, i));
 					s = new Regex (svnRString.substring(i+1, svnRString.length())); // flyingfish works 3/2008 with ("(?i)Revision[\\s]*[:=][\\s]*[\\\\r]*[\\\\n]*[\\s]*([0-9]*)");
-				} else { versionnumbers[t] = "error: no RegEx"; return 3; } 
+				} else { versionnumbers[t] = "error: no RegEx"; return 3; }
 				s.search(tmp);
 				if (!s.didMatch()) { versionnumbers[t] = "error: RegEx didnot match"; return 3; }
-				svnRString = s.stringMatched(1); 
+				svnRString = s.stringMatched(1);
 			}
 			versionnumbers[t] = curvmaj + "." + curvmin + "." + svnRString;
 			if (curvmaj > VER_MAJOR) return 1;
@@ -119,7 +119,7 @@
 			if (Convert.toInt(svnRString) > SVN_REVISION) return 1;
 			return 0;
 		} catch (IOException e) {
-			versionnumbers[t] = "IO-error"; 
+			versionnumbers[t] = "IO-error";
 			return 3;
 		}
 	}

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2009-12-12 22:26:10 UTC (rev 2359)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2009-12-13 15:34:19 UTC (rev 2360)
@@ -85,9 +85,6 @@
 	private static Preferences pref;
 	private Profile profile;
 	private static String viewstate = "";
-	private static String viewstate1 = "";
-	//FIXME Field is never read. Needed?
-	//private static String eventvalidation = "";
 	private static String cookieID = "";
 	private static String cookieSession = "";
 	private static double distance = 0;
@@ -156,7 +153,7 @@
 		if (!localInfB.isClosed) { // If user has not aborted, we continue
 			Regex rexCookieID = new Regex("(?i)Set-Cookie: userid=(.*?);.*");
 			Regex rexViewstate = new Regex("id=\"__VIEWSTATE\" value=\"(.*?)\" />");
-			Regex rexViewstate1 = new Regex("id=\"__VIEWSTATE1\" value=\"(.*?)\" />");
+			// Regex rexViewstate1 = new Regex("id=\"__VIEWSTATE1\" value=\"(.*?)\" />");
 			Regex rexEventvalidation = new Regex("id=\"__EVENTVALIDATION\" value=\"(.*?)\" />");
 			Regex rexCookieSession = new Regex("(?i)Set-Cookie: ASP.NET_SessionId=(.*?);.*");
 			rexViewstate.search(start);
@@ -217,11 +214,12 @@
 			}
 			viewstate = rexViewstate.stringMatched(1);
 
+			/*
 			rexViewstate1.search(start);
 			if (!rexViewstate1.didMatch()) {
 				pref.log("[login]:Viewstate1 not found");
 			}
-			viewstate1 = rexViewstate1.stringMatched(1);
+			*/
 
 			rexCookieID.search(start);
 			if (!rexCookieID.didMatch()) {
@@ -353,7 +351,7 @@
 		}
 		String start = "";
 		Regex rexViewstate = new Regex("id=\"__VIEWSTATE\" value=\"(.*)\" />");
-		Regex rexViewstate1 = new Regex("id=\"__VIEWSTATE1\" value=\"(.*)\" />");
+		// Regex rexViewstate1 = new Regex("id=\"__VIEWSTATE1\" value=\"(.*)\" />");
 		Regex rexEventvalidation = new Regex("id=\"__EVENTVALIDATION\" value=\"(.*)\" />");
 		String doc = "";
 
@@ -498,15 +496,6 @@
 					pref.log("Viewstate not found");
 				}
 
-				rexViewstate1.search(start);
-				if(rexViewstate1.didMatch()){
-					viewstate1 = rexViewstate1.stringMatched(1);
-					//Vm.debug("ViewState: " + viewstate);
-				} else {
-					viewstate1 = "";
-					pref.log("Viewstate1 not found");
-				}
-
 				rexEventvalidation.search(start);
 				if(rexEventvalidation.didMatch()){
 					// eventvalidation = rexEventvalidation.stringMatched(1);
@@ -604,7 +593,7 @@
 					}
 					*/
 					strNextPage = "ctl00$ContentBody$pgrTop$ctl08";
-					
+
 					doc = URL.encodeURL("__EVENTTARGET",false) +"="+ URL.encodeURL(strNextPage,false)
 					    + "&" + URL.encodeURL("__EVENTARGUMENT",false) +"="+ URL.encodeURL("",false)
 //					    + "&" + URL.encodeURL("__VIEWSTATEFIELDCOUNT",false) +"=2"
@@ -1575,14 +1564,15 @@
 				pref.log("[fetch]:No Cookie found");
 			conn.setRequestorProperty("Connection", "close");
 			conn.documentIsEncoded = true;
-			if (pref.debug) pref.log("[fetch]:Connecting");
+			if (pref.debug) pref.log("[fetch]:Connecting "+address);
 			Socket sock = conn.connect();
-			if (pref.debug) pref.log("[fetch]:Connect ok!");
-			ByteArray daten = conn.readData(sock);
-			if (pref.debug) pref.log("[fetch]:Read data ok");
+			if (pref.debug) pref.log("[fetch]:Connect ok! "+address);
+			// ByteArray daten = conn.readData(sock);
 			JavaUtf8Codec codec = new JavaUtf8Codec();
-			c_data = codec.decodeText(daten.data, 0, daten.length, true, null);
+			// c_data = codec.decodeText(daten.data, 0, daten.length, true, null);
+			c_data = conn.readText(sock, codec);
 			sock.close();
+			if (pref.debug) pref.log("[fetch]:Read data ok "+address);
 			return getResponseHeaders(conn)+ c_data.toString();
 		}catch(IOException ioex){
 			pref.log("IOException in fetch", ioex);
@@ -1608,17 +1598,18 @@
 			conn.setRequestorProperty("Content-Type", "application/x-www-form-urlencoded");
 			if(cookieSession.length()>0){
 				conn.setRequestorProperty("Cookie", "ASP.NET_SessionId="+cookieSession+"; userid="+cookieID);
-				pref.log("[fetch]:Cookie Zeug: " + "Cookie: ASP.NET_SessionId="+cookieSession +"; userid="+cookieID);
+				pref.log("[fetch_post]:Cookie Zeug: " + "Cookie: ASP.NET_SessionId="+cookieSession +"; userid="+cookieID);
 			} else {
-				pref.log("[fetch]:No Cookie found");
+				pref.log("[fetch_post]:No Cookie found");
 			}
 			conn.setRequestorProperty("Connection", "close");
-			if (pref.debug) pref.log("[fetch]:Connecting");
+			if (pref.debug) pref.log("[fetch_post]:Connecting "+address);
 			Socket sock = conn.connect();
-			if (pref.debug) pref.log("[fetch]:Connect ok!");
-			ByteArray daten = conn.readData(sock);
-			if (pref.debug) pref.log("[fetch]:Read data ok");
-			CharArray c_data = codec.decodeText(daten.data, 0, daten.length, true, null);
+			if (pref.debug) pref.log("[fetch_post]:Connect ok! "+address);
+			// ByteArray daten = conn.readData(sock);
+			CharArray c_data = conn.readText(sock, codec);
+			if (pref.debug) pref.log("[fetch_post]:Read data ok "+address);
+			// CharArray c_data = codec.decodeText(daten.data, 0, daten.length, true, null);
 			sock.close();
 			return getResponseHeaders(conn)+c_data.toString();
 		} catch (Exception e) {

Modified: trunk/src/CacheWolf/navi/MapLoader.java
===================================================================
--- trunk/src/CacheWolf/navi/MapLoader.java	2009-12-12 22:26:10 UTC (rev 2359)
+++ trunk/src/CacheWolf/navi/MapLoader.java	2009-12-13 15:34:19 UTC (rev 2360)
@@ -7,7 +7,6 @@
 import CacheWolf.InfoBox;
 import CacheWolf.MyLocale;
 import CacheWolf.STRreplace;
-import CacheWolf.utils.CWWrapper;
 import CacheWolf.utils.FileBugfix;
 import ewe.ui.*;
 import ewe.io.*;

Modified: trunk/src/CacheWolf/navi/MapLoaderGui.java
===================================================================
--- trunk/src/CacheWolf/navi/MapLoaderGui.java	2009-12-12 22:26:10 UTC (rev 2359)
+++ trunk/src/CacheWolf/navi/MapLoaderGui.java	2009-12-13 15:34:19 UTC (rev 2360)
@@ -7,7 +7,6 @@
 import CacheWolf.Global;
 import CacheWolf.InfoBox;
 import CacheWolf.MyLocale;
-import CacheWolf.NewProfileForm;
 import CacheWolf.Preferences;
 import ewe.io.FileBase;
 import ewe.sys.Convert;

Modified: trunk/src/CacheWolf/navi/MapsList.java
===================================================================
--- trunk/src/CacheWolf/navi/MapsList.java	2009-12-12 22:26:10 UTC (rev 2359)
+++ trunk/src/CacheWolf/navi/MapsList.java	2009-12-13 15:34:19 UTC (rev 2360)
@@ -10,7 +10,6 @@
 import ewe.io.FileBase;
 import ewe.io.IOException;
 import ewe.sys.Time;
-import ewe.sys.Vm;
 import ewe.ui.FormBase;
 import ewe.ui.MessageBox;
 import ewe.util.Comparer;



From araber95 at mail.berlios.de  Mon Dec 14 00:55:57 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Mon, 14 Dec 2009 00:55:57 +0100
Subject: [Cachewolf-svn] r2361 - in trunk/src/CacheWolf: . exp
Message-ID: <200912132355.nBDNtvLW016556@sheep.berlios.de>

Author: araber95
Date: 2009-12-14 00:55:48 +0100 (Mon, 14 Dec 2009)
New Revision: 2361

Modified:
   trunk/src/CacheWolf/CacheType.java
   trunk/src/CacheWolf/exp/ExploristExporter.java
   trunk/src/CacheWolf/exp/GPXExporter.java
   trunk/src/CacheWolf/exp/GpxExportNg.java
   trunk/src/CacheWolf/exp/HTMLExporter.java
   trunk/src/CacheWolf/exp/KMLExporter.java
   trunk/src/CacheWolf/exp/MSARCSVExporter.java
   trunk/src/CacheWolf/exp/TPLExporter.java
Log:
getting pq compatible ( check the exporters )

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-12-13 15:34:19 UTC (rev 2360)
+++ trunk/src/CacheWolf/CacheType.java	2009-12-13 23:55:48 UTC (rev 2361)
@@ -107,9 +107,9 @@
 	   }
 	}
 	public static byte CT_Index(final byte type) {
-		return CT_Index[type+1];			
+		return CT_Index[type+1];
 	}
-		
+
 	static final String[] CT_FILENAME={
 		"typeCustom.png", "typeApe.png", "typeCito.png", "typeDrivein.png", "typeEarth.png",
 		"typeEvent.png", "typeFinal.png", "typeLetterbox.png", "typeLocless.png", "typeMaze.png",
@@ -119,7 +119,7 @@
 		"typeUnknown.png", "typeMath.png", "typeMoving.png",
 		"guiError.png"
 	};
-	static final String[] CT_GPXTYPE = {
+	static final String[] CT_TYPETAG = {
 		"Geocache|Custom", "Geocache|Project APE Cache", "Geocache|Cache In Trash Out Event", "Geocache|DriveIn", "Geocache|Earthcache",
 		"Geocache|Event Cache", "Waypoint|Final Location", "Geocache|Letterbox Hybrid", "Geocache|Locationless (Reverse) Cache", "Geocache|GPS Adventures Exhibit",
 		"Geocache|Mega-Event Cache", "Geocache|Multi-cache", "Waypoint|Parking Area", "Waypoint|Question to Answer", "Waypoint|Reference Point",
@@ -128,7 +128,16 @@
 		"Geocache|Unknown Cache", "Geocache|Math", "Geocache|Moving",
 		"Fehler"
 	};
-	static final String[] CT_GPXSYM = {
+	static final String[] CT_SYMTAG = {
+		"Custom", "Geocache", "Geocache", "Geocache", "Geocache",
+		"Geocache", "Final Location", "Geocache", "Geocache", "Geocache",
+		"Geocache", "Geocache", "Parking Area", "Question to Answer", "Reference Point",
+		"Stages of a Multicache", "Geocache", "Trailhead", "Geocache", "Geocache",
+		"Geocache", "Geocache",
+		"Geocache", "Geocache", "Geocache",
+		"Fehler"
+	};
+	static final String[] CT_GSTYPETAG = {
 		"Custom", "Project APE Cache", "Cache In Trash Out Event", "DriveIn", "Earthcache",
 		"Event Cache", "Final Location", "Letterbox Hybrid", "Locationless (Reverse) Cache", "GPS Adventures Exhibit",
 		"Mega-Event Cache", "Multi-cache", "Parking Area", "Question to Answer", "Reference Point",
@@ -390,11 +399,16 @@
 	 */
 	public static byte gpxType2CwType(final String gpxType) throws IllegalArgumentException {
 		for (byte i=0; i<CT.length; i++) {
-			if (CT_GPXTYPE[i].equals(gpxType)) {return CT[i];};
+			if (CT_TYPETAG[i].equals(gpxType)) {return CT[i];};
 		}
+		/*
 		for (byte i=0; i<CT.length; i++) {
-			if (CT_GPXSYM[i].equals(gpxType)) {return CT[i];};
+			if (CT_SYMTAG[i].equals(gpxType)) {return CT[i];};
 		}
+		 */
+		for (byte i=0; i<CT.length; i++) {
+			if (CT_GSTYPETAG[i].equals(gpxType)) {return CT[i];};
+		}
 		if (gpxType.equals("Traditional")|| gpxType.equals("Classic")) return CW_TYPE_TRADITIONAL;
 		if (gpxType.equals("Multi") || gpxType.equals("Offset")) return CW_TYPE_MULTI;
 		if (gpxType.equals("Virtual")) return CW_TYPE_VIRTUAL;
@@ -461,20 +475,27 @@
 	/**
 	 * generate type description matching those of GC for GPX export
 	 * @param typeId internal type id
-	 * @return type information in GC.com GPX format
+	 * @return type information in GC.com <type> GPX format
 	 */
-	public static String type2GpxString(final byte typeId) {
-		return CT_GPXTYPE[CT_Index(typeId)];
+	public static String type2TypeTag(final byte typeId) {
+		return CT_TYPETAG[CT_Index(typeId)];
 	}
-
 	/**
 	 * generate type description matching those of GC for GPX export
 	 * @param typeId internal type id
-	 * @return symb information in GC.com GPX format
+	 * @return symb information in GC.com <sym> GPX format
 	 */
-	public static String sym2GpxString(final byte typeId) {
-		return CT_GPXSYM[CT_Index(typeId)];
+	public static String type2SymTag(final byte typeId) {
+		return CT_SYMTAG[CT_Index(typeId)];
 	}
+	/**
+	 * generate type description matching those of GC for GPX export
+	 * @param typeId internal type id
+	 * @return type information in GC.com <groundspeak:type> GPX format
+	 */
+	public static String type2GSTypeTag(final byte typeId) {
+		return CT_GSTYPETAG[CT_Index(typeId)];
+	}
 
 	/**
 	 * checks if the given type would be valid for internal use in cachewolf

Modified: trunk/src/CacheWolf/exp/ExploristExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/ExploristExporter.java	2009-12-13 15:34:19 UTC (rev 2360)
+++ trunk/src/CacheWolf/exp/ExploristExporter.java	2009-12-13 23:55:48 UTC (rev 2361)
@@ -244,7 +244,7 @@
 		if (!add.equals("")) { // Set Picture in Explorist to Virtual
 			sb.append("Virtual Cache");
 		} else if (ch.getType() != CacheType.CW_TYPE_UNKNOWN) { // Rewrite Unknown Caches
-			sb.append(CacheType.sym2GpxString(ch.getType()));
+			sb.append(CacheType.type2GSTypeTag(ch.getType()));
 		} else {
 			sb.append("Mystery Cache");
 		}

Modified: trunk/src/CacheWolf/exp/GPXExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/GPXExporter.java	2009-12-13 15:34:19 UTC (rev 2360)
+++ trunk/src/CacheWolf/exp/GPXExporter.java	2009-12-13 23:55:48 UTC (rev 2361)
@@ -71,7 +71,7 @@
 				} else {
 					strBuf.append("    <sym>Geocache</sym>\r\n");
 				}
-				strBuf.append("    <type>").append(CacheType.type2GpxString(ch.getType())).append("</type>\r\n");
+				strBuf.append("    <type>").append(CacheType.type2TypeTag(ch.getType())).append("</type>\r\n");
 				String dummyAvailable = ch.is_available() ? STRING_TRUE:STRING_FALSE;
 				String dummyArchived = ch.is_archived() ? STRING_TRUE:STRING_FALSE;
 				strBuf.append("    <groundspeak:cache id=\"").append( ch.GetCacheID() ).append( "\" available=\"" ).append( dummyAvailable ).append( "\" archived=\"" ).append( dummyArchived).append( "\" xmlns:groundspeak=\"http://www.groundspeak.com/cache/1/0\">\r\n");
@@ -79,7 +79,7 @@
 				strBuf.append("      <groundspeak:placed_by>").append(SafeXML.cleanGPX(ch.getCacheOwner())).append("</groundspeak:placed_by>\r\n");
 				//todo low prio: correct owner-id
 				strBuf.append("      <groundspeak:owner id=\"23\">").append(SafeXML.cleanGPX(ch.getCacheOwner())+"</groundspeak:owner>\r\n");
-				strBuf.append("      <groundspeak:type>").append(CacheType.sym2GpxString(ch.getType())).append("</groundspeak:type>\r\n");
+				strBuf.append("      <groundspeak:type>").append(CacheType.type2GSTypeTag(ch.getType())).append("</groundspeak:type>\r\n");
 				strBuf.append("      <groundspeak:container>").append(CacheSize.cw2ExportString(ch.getCacheSize())).append("</groundspeak:container>\r\n");
 				//for Colorado/Oregon: 2.0 -> 2
 				String diffTerr = CacheTerrDiff.shortDT(ch.getHard());
@@ -144,8 +144,8 @@
 				strBuf.append("    </groundspeak:cache>\r\n");
 			}else {
 				// there is no HTML in the description of addi wpts
-				strBuf.append("    <sym>").append(CacheType.sym2GpxString(ch.getType())).append("</sym>\r\n");
-				strBuf.append("    <type>").append(CacheType.type2GpxString(ch.getType())).append("</type>\r\n");
+				strBuf.append("    <sym>").append(CacheType.type2SymTag(ch.getType())).append("</sym>\r\n");
+				strBuf.append("    <type>").append(CacheType.type2TypeTag(ch.getType())).append("</type>\r\n");
 			}
 			strBuf.append("  </wpt>\r\n");
 		}catch(Exception e){

Modified: trunk/src/CacheWolf/exp/GpxExportNg.java
===================================================================
--- trunk/src/CacheWolf/exp/GpxExportNg.java	2009-12-13 15:34:19 UTC (rev 2360)
+++ trunk/src/CacheWolf/exp/GpxExportNg.java	2009-12-13 23:55:48 UTC (rev 2361)
@@ -606,7 +606,7 @@
 			ret.append("    <desc>".concat(SafeXML.cleanGPX(ch.getCacheName())).concat("</desc>".concat(newLine)));
 		} else {
 			ret.append("    <desc>".concat(SafeXML.cleanGPX(ch.getCacheName().concat(" by ").concat(ch.getCacheOwner()).concat(", ")
-					.concat(CacheType.sym2GpxString(ch.getType()))
+					.concat(CacheType.type2GSTypeTag(ch.getType()))
 					.concat(" (").concat(CacheTerrDiff.shortDT(ch.getHard()))
 					.concat("/").concat(CacheTerrDiff.shortDT(ch.getTerrain())).concat(")")))
 					.concat("</desc>".concat(newLine)));
@@ -623,7 +623,7 @@
 			ret.append("    <sym>".concat(poiMapper.getIcon(ch)).concat("</sym>".concat(newLine)));
 		} else {
 			if (ch.isAddiWpt()) {
-				ret.append("    <sym>".concat(CacheType.sym2GpxString(ch.getType())).concat("</sym>".concat(newLine)));
+				ret.append("    <sym>".concat(CacheType.type2SymTag(ch.getType())).concat("</sym>".concat(newLine)));
 			} else if (ch.isCustomWpt()) {
 				ret.append("    <sym>Custom</sym>".concat(newLine));
 			} else if (ch.is_found()) {
@@ -634,7 +634,7 @@
 		}
 
 		if (exportStyle != STYLE_GPX_COMPACT) {
-			ret.append("    <type>".concat(CacheType.type2GpxString(ch.getType())).concat("</type>".concat(newLine)));
+			ret.append("    <type>".concat(CacheType.type2TypeTag(ch.getType())).concat("</type>".concat(newLine)));
 		}
 
 		return ret.toString();
@@ -654,7 +654,7 @@
 		.concat("      <groundspeak:name>").concat(SafeXML.cleanGPX(ch.getCacheName())).concat("</groundspeak:name>".concat(newLine))
 		.concat("      <groundspeak:placed_by>").concat(SafeXML.cleanGPX(ch.getCacheOwner())).concat("</groundspeak:placed_by>".concat(newLine))
 		.concat("      <groundspeak:owner id=\"").concat("31415").concat("\">").concat(SafeXML.cleanGPX(ch.getCacheOwner())).concat("</groundspeak:owner>".concat(newLine))
-		.concat("      <groundspeak:type>").concat(CacheType.type2GpxString(ch.getType())).concat("</groundspeak:type>".concat(newLine))
+		.concat("      <groundspeak:type>").concat(CacheType.type2GSTypeTag(ch.getType())).concat("</groundspeak:type>".concat(newLine))
 		.concat("      <groundspeak:container>").concat(CacheSize.cw2ExportString(ch.getCacheSize())).concat("</groundspeak:container>".concat(newLine))
 		.concat("      <groundspeak:difficulty>").concat(CacheTerrDiff.shortDT(ch.getHard())).concat("</groundspeak:difficulty>".concat(newLine))
 		.concat("      <groundspeak:terrain>").concat(CacheTerrDiff.shortDT(ch.getTerrain())).concat("</groundspeak:terrain>".concat(newLine))

Modified: trunk/src/CacheWolf/exp/HTMLExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/HTMLExporter.java	2009-12-13 15:34:19 UTC (rev 2360)
+++ trunk/src/CacheWolf/exp/HTMLExporter.java	2009-12-13 23:55:48 UTC (rev 2361)
@@ -87,7 +87,7 @@
 					}
 					det=ch.getCacheDetails(false,false);
 					varParams = new Hashtable();
-					varParams.put("TYPE", CacheType.sym2GpxString(ch.getType()));
+					varParams.put("TYPE", CacheType.type2TypeTag(ch.getType()));
 					varParams.put("WAYPOINT", ch.getWayPoint());
 					varParams.put("NAME", ch.getCacheName());
 					varParams.put("OWNER", ch.getCacheOwner());

Modified: trunk/src/CacheWolf/exp/KMLExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/KMLExporter.java	2009-12-13 15:34:19 UTC (rev 2360)
+++ trunk/src/CacheWolf/exp/KMLExporter.java	2009-12-13 23:55:48 UTC (rev 2361)
@@ -102,7 +102,7 @@
 					tmp = (Vector)entry.getValue();
 					// skip over empty cachetypes
 					if (tmp.size() == 0) continue;
-					outp.print(startFolder(CacheType.sym2GpxString(new Integer((String)entry.getKey()).byteValue())));
+					outp.print(startFolder(CacheType.type2SymTag(new Integer((String)entry.getKey()).byteValue())));
 
 					for(int i = 0; i<tmp.size(); i++){
 						ch = (CacheHolder) tmp.get(i);

Modified: trunk/src/CacheWolf/exp/MSARCSVExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/MSARCSVExporter.java	2009-12-13 15:34:19 UTC (rev 2360)
+++ trunk/src/CacheWolf/exp/MSARCSVExporter.java	2009-12-13 23:55:48 UTC (rev 2361)
@@ -26,7 +26,7 @@
 		StringBuffer str = new StringBuffer(200);
 		str.append("\"" + ch.getWayPoint() + " - " + ch.getCacheName() + "\";");
 		str.append(lat + ";" + lon +";");
-		str.append("\"" + CacheType.sym2GpxString(ch.getType())+ "\";");
+		str.append("\"" + CacheType.type2SymTag(ch.getType())+ "\";");
 		str.append("\"" + CacheSize.cw2ExportString(ch.getCacheSize()) + "\";");
 		str.append("\"" + ch.getWayPoint() + "\";");
 		str.append("\"" + ch.getDateHidden() + "\";");

Modified: trunk/src/CacheWolf/exp/TPLExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/TPLExporter.java	2009-12-13 15:34:19 UTC (rev 2360)
+++ trunk/src/CacheWolf/exp/TPLExporter.java	2009-12-13 23:55:48 UTC (rev 2361)
@@ -207,7 +207,7 @@
 						Regex dec = new Regex("[,.]",myFilter.decSep);
 						if (myFilter.badChars != null) rex = new Regex("["+myFilter.badChars+"]","");
 						varParams = new Hashtable();
-						varParams.put("TYPE", CacheType.sym2GpxString(ch.getType()));
+						varParams.put("TYPE", CacheType.type2TypeTag(ch.getType()));
 						varParams.put("SHORTTYPE", CacheType.getExportShortId(ch.getType()));
 						varParams.put("SIZE", CacheSize.cw2ExportString(ch.getCacheSize()));
 						varParams.put("SHORTSIZE", CacheSize.getExportShortId(ch.getCacheSize()));



From araber95 at mail.berlios.de  Mon Dec 14 12:03:57 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Mon, 14 Dec 2009 12:03:57 +0100
Subject: [Cachewolf-svn] r2362 - trunk/lib
Message-ID: <200912141103.nBEB3vQT022655@sheep.berlios.de>

Author: araber95
Date: 2009-12-14 12:03:46 +0100 (Mon, 14 Dec 2009)
New Revision: 2362

Modified:
   trunk/lib/CompileEwe.zip
Log:
testing an icon for cw.jar

Modified: trunk/lib/CompileEwe.zip
===================================================================
(Binary files differ)



From pfeffer at mail.berlios.de  Mon Dec 14 20:16:46 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Mon, 14 Dec 2009 20:16:46 +0100
Subject: [Cachewolf-svn] r2363 - trunk/src/CacheWolf/navi
Message-ID: <200912141916.nBEJGk4k000724@sheep.berlios.de>

Author: pfeffer
Date: 2009-12-14 20:16:44 +0100 (Mon, 14 Dec 2009)
New Revision: 2363

Modified:
   trunk/src/CacheWolf/navi/MovingMap.java
Log:
Bug fixed?: MovingMap caused (sometimes?) a "System could not create bitmap ewe.sys.SystemResourceException" when started with running GPS, see http://www.geoclub.de/viewtopic.php?f=40&t=37529&start=110

Modified: trunk/src/CacheWolf/navi/MovingMap.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMap.java	2009-12-14 11:03:46 UTC (rev 2362)
+++ trunk/src/CacheWolf/navi/MovingMap.java	2009-12-14 19:16:44 UTC (rev 2363)
@@ -431,8 +431,6 @@
 		showCachesOnMap();
 
 		addTrack(myNavigation.curTrack);
-		if (tracks != null && tracks.size() > 0 && ((Track)tracks.get(0)).num > 0)
-			rebuildOverlaySet(); // show points which where added when MavingMap was not running
 
 		if (myNavigation.destinationIsCache) {
 			destChanged(myNavigation.destinationCache);



From pfeffer at mail.berlios.de  Mon Dec 14 20:27:23 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Mon, 14 Dec 2009 20:27:23 +0100
Subject: [Cachewolf-svn] r2364 - trunk/src/CacheWolf/navi
Message-ID: <200912141927.nBEJRNFV001340@sheep.berlios.de>

Author: pfeffer
Date: 2009-12-14 20:27:21 +0100 (Mon, 14 Dec 2009)
New Revision: 2364

Modified:
   trunk/src/CacheWolf/navi/MovingMap.java
Log:
Add aditional debug information: in order to find the cause the the Bug: MovingMap caused (sometimes?) a "System could not create bitmap ewe.sys.SystemResourceException" when started with running GPS, see http://www.geoclub.de/viewtopic.php?f=40&t=37529&start=110

Modified: trunk/src/CacheWolf/navi/MovingMap.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMap.java	2009-12-14 19:16:44 UTC (rev 2363)
+++ trunk/src/CacheWolf/navi/MovingMap.java	2009-12-14 19:27:21 UTC (rev 2364)
@@ -523,6 +523,7 @@
 			for (int xi=0; xi<3; xi++) {
 				i = yi*3+xi;
 				if (TrackOverlays[i]==null) {
+					pref.log("addMissingOverlays: widht: " + width + ", height: " + height);
 					TrackOverlays[i]= new TrackOverlay(ScreenXY2LatLon(upperleftOf4.x+(xi-1)*width, upperleftOf4.y+(yi-1)*height), width, height, currentMap);
 					TrackOverlays[i].setLocation(width+1, height+1); // outside of the screen will hide it automatically it will get the correct position in upadteOverlayposition
 					TrackOverlays[i].tracks = this.tracks;



From araber95 at mail.berlios.de  Mon Dec 14 20:28:29 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Mon, 14 Dec 2009 20:28:29 +0100
Subject: [Cachewolf-svn] r2365 - in trunk/src/CacheWolf: . imp utils
Message-ID: <200912141928.nBEJSTMp001386@sheep.berlios.de>

Author: araber95
Date: 2009-12-14 20:28:27 +0100 (Mon, 14 Dec 2009)
New Revision: 2365

Modified:
   trunk/src/CacheWolf/ShowCacheInBrowser.java
   trunk/src/CacheWolf/imp/Rating.java
   trunk/src/CacheWolf/utils/CWWrapper.java
Log:
show cache offline in browser on pda did not show generated temp page.

Modified: trunk/src/CacheWolf/ShowCacheInBrowser.java
===================================================================
--- trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-12-14 19:27:21 UTC (rev 2364)
+++ trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-12-14 19:28:27 UTC (rev 2365)
@@ -210,7 +210,7 @@
 			//detfile.print(tpl.output());
 			detfile.close();
 			try {
-				CWWrapper.exec(Global.getPref().browser, "file://"+saveTo); // maybe this works on some PDAs?
+				CWWrapper.exec(Global.getPref().browser, "file://"+saveTo, false, false); // maybe this works on some PDAs?
 			} catch (IOException ex) {
 				(new MessageBox(MyLocale.getMsg(321,"Error"),
 						MyLocale.getMsg(1034,"Cannot start browser!") + "\n" + ex.toString() + "\n" +

Modified: trunk/src/CacheWolf/imp/Rating.java
===================================================================
--- trunk/src/CacheWolf/imp/Rating.java	2009-12-14 19:27:21 UTC (rev 2364)
+++ trunk/src/CacheWolf/imp/Rating.java	2009-12-14 19:28:27 UTC (rev 2365)
@@ -42,7 +42,7 @@
 				if (ch.isCacheWpt()) {
 					int rate;
 					try {
-						rate = CWWrapper.exec(rater, ch.getWayPoint(), true);
+						rate = CWWrapper.exec(rater, ch.getWayPoint(), true, true);
 						ch.setNumRecommended(rate);
 					} catch (Exception ex) {
 						ex.printStackTrace();

Modified: trunk/src/CacheWolf/utils/CWWrapper.java
===================================================================
--- trunk/src/CacheWolf/utils/CWWrapper.java	2009-12-14 19:27:21 UTC (rev 2364)
+++ trunk/src/CacheWolf/utils/CWWrapper.java	2009-12-14 19:28:27 UTC (rev 2365)
@@ -13,15 +13,15 @@
  * Win* VM: cmd may be quoted, arg are whitespace-split
  */
 public final class CWWrapper {
-	
+
 	/**
 	 * thou shallst not instantiate this object
 	 */
 	private CWWrapper() {
 		// Nothing to do
 	}
-	
-	
+
+
 	/**
 	 * Apply needed quotes around the command or the argument,
 	 * then call Vm.exec() appropriately.
@@ -29,13 +29,13 @@
 	 * @param arg (only one argument)
 	 * @throws ewe.io.IOException
 	 */
-	public static void exec(final String cmd, final String arg) throws ewe.io.IOException{
-		exec(cmd, arg, false);
+	public static int exec(final String cmd, final String arg) throws ewe.io.IOException{
+		return exec(cmd, arg, false, true);
 	}
-	
-	public static int exec(String cmd, String arg, final boolean wait) throws ewe.io.IOException {
-		if (Vm.getPlatform().equals("WinCE") ||
-			    Vm.getPlatform().equals("Win32")) {
+	public static int exec(String cmd, String arg, final boolean wait, final boolean surround) throws ewe.io.IOException {
+		if (surround) {
+			if (Vm.getPlatform().equals("WinCE") || Vm.getPlatform().equals("Win32"))
+			{
 				/* we need extra quotes here, see vm/nmwin32_c.c */
 				if (arg.indexOf(' ') > -1) {
 					arg = "\"" + arg + "\"";
@@ -48,11 +48,12 @@
 				if (cmd.indexOf(' ') > -1) {
 					cmd = "\"" + cmd + "\"";
 				}
-					
 				if (arg.indexOf(' ') > -1) {
 					arg = "\"" + arg + "\"";
 				}
 			}
+		}
+		// CacheWolf.Global.getPref().log(arg);
 		return Vm.exec(cmd, arg, 0, wait);
 	}
 



From araber95 at mail.berlios.de  Mon Dec 14 20:29:59 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Mon, 14 Dec 2009 20:29:59 +0100
Subject: [Cachewolf-svn] r2366 - trunk
Message-ID: <200912141929.nBEJTx8x001439@sheep.berlios.de>

Author: araber95
Date: 2009-12-14 20:29:58 +0100 (Mon, 14 Dec 2009)
New Revision: 2366

Modified:
   trunk/compile.bat
Log:
exp had been moved long time ago ( no longer needed)

Modified: trunk/compile.bat
===================================================================
--- trunk/compile.bat	2009-12-14 19:28:27 UTC (rev 2365)
+++ trunk/compile.bat	2009-12-14 19:29:58 UTC (rev 2366)
@@ -1,4 +1,3 @@
 if not exist bin\CacheWolf mkdir bin\CacheWolf
-if not exist bin\exp mkdir bin\exp
 javac -source 1.3 -target 1.1 -classpath ./lib/CompileEwe.zip;./lib/  -d ./bin/ -deprecation ./src/CacheWolf/*.java ./src/CacheWolf/imp/*.java ./src/CacheWolf/navi/*.java ./src/CacheWolf/exp/*.java ./src/CacheWolf/utils/*.java
 pause



From araber95 at mail.berlios.de  Thu Dec 17 22:27:34 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Thu, 17 Dec 2009 22:27:34 +0100
Subject: [Cachewolf-svn] r2367 - trunk/src/CacheWolf
Message-ID: <200912172127.nBHLRY8Y021093@sheep.berlios.de>

Author: araber95
Date: 2009-12-17 22:27:33 +0100 (Thu, 17 Dec 2009)
New Revision: 2367

Modified:
   trunk/src/CacheWolf/UrlFetcher.java
Log:
some small info for a little message!

Modified: trunk/src/CacheWolf/UrlFetcher.java
===================================================================
--- trunk/src/CacheWolf/UrlFetcher.java	2009-12-14 19:29:58 UTC (rev 2366)
+++ trunk/src/CacheWolf/UrlFetcher.java	2009-12-17 21:27:33 UTC (rev 2367)
@@ -34,9 +34,9 @@
 		try {
 		return fetchByteArray(url, realurl, hndl);
 		} catch ( InterruptedException e) {
-			throw new IOException("Error reading data.");
+			throw new IOException("Error reading data. i :"+url);
 		} catch ( HandleStoppedException e) {
-			throw new IOException("Error reading data.");
+			throw new IOException("Error reading data. s :"+url);
 		}
 	}
 



From araber95 at mail.berlios.de  Thu Dec 17 22:35:04 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Thu, 17 Dec 2009 22:35:04 +0100
Subject: [Cachewolf-svn] r2368 - trunk/src/CacheWolf
Message-ID: <200912172135.nBHLZ4Im021618@sheep.berlios.de>

Author: araber95
Date: 2009-12-17 22:35:00 +0100 (Thu, 17 Dec 2009)
New Revision: 2368

Modified:
   trunk/src/CacheWolf/DataMover.java
   trunk/src/CacheWolf/Rebuild.java
   trunk/src/CacheWolf/myTableControl.java
Log:
speedup some fileoperation like deleting, copying and moving Caches!

Modified: trunk/src/CacheWolf/DataMover.java
===================================================================
--- trunk/src/CacheWolf/DataMover.java	2009-12-17 21:27:33 UTC (rev 2367)
+++ trunk/src/CacheWolf/DataMover.java	2009-12-17 21:35:00 UTC (rev 2368)
@@ -11,26 +11,26 @@
 
 /**
 *	This class moves or copies the database files of selected caches from one directory to
-*   another. It provides also the possibility to delete cachefiles. 	
+*   another. It provides also the possibility to delete cachefiles.
 */
 public class DataMover {
 
 	private CacheDB srcDB;
 	private Preferences pref;
 	private Profile profile;
-	
+
 	public DataMover(){
 		pref = Global.getPref();
 		profile=Global.getProfile();
 		srcDB = profile.cacheDB;
 	}
 	public void deleteCaches(){
-		
+
 		int mode = showMessageBox(251,"All waypoints will be deleted");
 		if (mode == -1){
 			return;
 		}
-		
+
 		processCaches(new Deleter(MyLocale.getMsg(143, "Delete")), mode);
 		// write indexfiles
 		profile.saveIndex(pref,Profile.NO_SHOW_PROGRESS_BAR);
@@ -38,18 +38,18 @@
 
 	public void copyCaches(){
 		Profile dstProfile=new Profile();
-		
+
 		dstProfile.dataDir=selectTargetDir();
 		if (dstProfile.dataDir.equals(profile.dataDir) ||
 			dstProfile.dataDir.equals("")) return;
-		
+
 		//Von Andi P
 		int mode = showMessageBox(253,"All waypoints will be copied");
 		if (mode == -1){
 			return;
 		}
 		//Ende
-		
+
 		// Read indexfile of destination, if one exists
 		File ftest = new File(dstProfile.dataDir + "index.xml");
 		if(ftest.exists()){
@@ -67,7 +67,7 @@
 			}
 		}
 	}
-	
+
 	/**
 	 * Shows the messagebox before copying/moving/deleting waypoints.
 	 * It returns the mode selected by the user.
@@ -104,7 +104,7 @@
 			' ' + MyLocale.getMsg(257, "Main") + ", "+countAddiWP +
 			MyLocale.getMsg(258, " Addi") +')';
 	}
-	
+
 	private String makeVisibleText() {
 		int size=srcDB.size();
 		int countMainWP=0;
@@ -141,32 +141,32 @@
 		MyLocale.getMsg(258, " Addi") +')';
 	}
 
-	
+
 	public void moveCaches() {
 		Profile dstProfile=new Profile();
 		// Select destination directory
 		dstProfile.dataDir=selectTargetDir();
 		if (dstProfile.dataDir.equals(profile.dataDir) ||
 			dstProfile.dataDir.equals("")) return;
-		
+
 		int mode = showMessageBox(252, "All waypoints will be moved");
 		if (mode == -1){
 			return;
 		}
-				
+
 		// Read indexfile of destination, if one exists
 		File ftest = new File(dstProfile.dataDir + "index.xml");
 		if(ftest.exists()){
-			dstProfile.readIndex();		
+			dstProfile.readIndex();
 		}
 		processCaches(new Mover(MyLocale.getMsg(142, "Move"),dstProfile), mode);
 		// write indexfiles
-		dstProfile.saveIndex(pref, Profile.NO_SHOW_PROGRESS_BAR); 
+		dstProfile.saveIndex(pref, Profile.NO_SHOW_PROGRESS_BAR);
 		profile.saveIndex(pref,Profile.NO_SHOW_PROGRESS_BAR);
 	}
-	
+
 	 /**
-	  * This function carries out the copy/delete/move with a progress bar. 
+	  * This function carries out the copy/delete/move with a progress bar.
 	  * The Executor class defines what operation is to be carried out.
 	  * mode defines if visible/marked or visible and markes caches are be processed.
 	  * 0 means all visible
@@ -177,7 +177,7 @@
 	  */
 	 private void processCaches(Executor exec, int mode) {
 		// First empty the cache so that the correct cache details are on disk
-		CacheHolder.saveAllModifiedDetails(); 
+		CacheHolder.saveAllModifiedDetails();
 		int size=srcDB.size();
 		int count=0;
 		// Count the number of caches to move/delete/copy
@@ -209,7 +209,7 @@
 		Handle h = new Handle();
 		pbf.setTask(h,exec.title);
 		pbf.exec();
-		
+
 		int nProcessed=0;
 		// Now do the actual work
 		for(int i = size-1; i>=0; i--){
@@ -224,7 +224,7 @@
 		}
 		pbf.exit(0);
 	 }
-	
+
 	 class myProgressBarForm extends ProgressBarForm {
 		 boolean isClosed=false;
 		 protected boolean canExit(int exitCode) {
@@ -232,12 +232,12 @@
 			return true;
 		 }
 	 }
-	 
+
 	//////////////////////////////////////////////////////////////////////
 	// Utility functions
 	//////////////////////////////////////////////////////////////////////
-	
-	public String selectTargetDir() {
+
+	private String selectTargetDir() {
 		// Select destination directory
 		FileChooser fc = new FileChooser(FileChooserBase.DIRECTORY_SELECT, pref.absoluteBaseDir);
 		fc.setTitle(MyLocale.getMsg(148,"Select Target directory"));
@@ -246,29 +246,35 @@
 		}
 		else return "";
 	}
-	 
-	public void deleteCacheFiles(String wpt, String dir){
+
+	public void deleteCacheFiles(String wpt,String dir, String[] tmp ){
 		// delete files in dstDir to clean up trash
-		String tmp[] = new FileBugfix(dir).list(wpt + "*.*", ewe.io.FileBase.LIST_FILES_ONLY);
+		// String tmp[] = new FileBugfix(dir).list(wpt + "*.*", ewe.io.FileBase.LIST_FILES_ONLY);
 		for (int i=0; i < tmp.length;i++){
-			File tmpFile = new File(dir + tmp[i]);
-			tmpFile.delete();
+			if (tmp[i].substring(0, wpt.length()).equalsIgnoreCase(wpt)) {
+				File tmpFile = new File(dir + tmp[i]);
+				tmpFile.delete();
+			}
 		}
 	}
 
-	public void moveCacheFiles(String wpt, String srcDir, String dstDir){
-		String srcFiles[] = new FileBugfix(srcDir).list(wpt + "*.*", ewe.io.FileBase.LIST_FILES_ONLY);
+	private void moveCacheFiles(String wpt, String srcDir, String dstDir, String[] srcFiles){
+		// String srcFiles[] = new FileBugfix(srcDir).list(wpt + "*.*", ewe.io.FileBase.LIST_FILES_ONLY);
 		for (int i=0; i < srcFiles.length;i++){
-			File srcFile = new File(srcDir + srcFiles[i]);
-			File dstFile = new File(dstDir + srcFiles[i]);
-			srcFile.move(dstFile);
+			if (srcFiles[i].substring(0, wpt.length()).equalsIgnoreCase(wpt)) {
+				File srcFile = new File(srcDir + srcFiles[i]);
+				File dstFile = new File(dstDir + srcFiles[i]);
+				srcFile.move(dstFile);
+			}
 		}
 	}
 
-	public void copyCacheFiles(String wpt, String srcDir, String dstDir){
-		String srcFiles[] = new FileBugfix(srcDir).list(wpt + "*.*", ewe.io.FileBase.LIST_FILES_ONLY);
+	private void copyCacheFiles(String wpt, String srcDir, String dstDir, String[] srcFiles){
+		// String srcFiles[] = new FileBugfix(srcDir).list(wpt + "*.*", ewe.io.FileBase.LIST_FILES_ONLY);
 		for (int i=0; i < srcFiles.length;i++){
-			copy(srcDir + srcFiles[i],dstDir + srcFiles[i]);
+			if (srcFiles[i].substring(0, wpt.length()).equalsIgnoreCase(wpt)) {
+				copy(srcDir + srcFiles[i],dstDir + srcFiles[i]);
+			}
 		}
 	}
 
@@ -301,75 +307,87 @@
 	//////////////////////////////////////////////////////////////////////
 	// Executor
 	//////////////////////////////////////////////////////////////////////
-		
+
 	private abstract class Executor {
 		String title;
 		Profile dstProfile;
+		String[] destFileList;
+		String[] srcFileList;
 		public abstract void doIt(int i, CacheHolder srcHolder);
 	}
-	 
+
 	private class Deleter extends Executor {
 		 Deleter(String title) {
 			 this.title=title;
+			 FileBugfix destPath=new FileBugfix(profile.dataDir);
+			 destFileList= destPath.list(null,FileBase.LIST_FILES_ONLY);
 		 }
 		 public void doIt(int i,CacheHolder srcHolder) {
 			 srcDB.removeElementAt(i);
-			 deleteCacheFiles(srcHolder.getWayPoint(),profile.dataDir);
+			 deleteCacheFiles(srcHolder.getWayPoint(),profile.dataDir, destFileList);
 		 }
 	}
-	 
+
 	private class Copier extends Executor {
 		 Copier(String title, Profile dstProfile) {
 			 this.title=title;
 			 this.dstProfile=dstProfile;
+			 FileBugfix srcPath=new FileBugfix(profile.dataDir);
+			 srcFileList= srcPath.list(null,FileBase.LIST_FILES_ONLY);
+			 FileBugfix destPath=new FileBugfix(dstProfile.dataDir);
+			 destFileList= destPath.list(null,FileBase.LIST_FILES_ONLY);
 		 }
 		 public void doIt(int i,CacheHolder srcHolder) {
-				srcHolder.save();
-				deleteCacheFiles(srcHolder.getWayPoint(), dstProfile.dataDir);
-				copyCacheFiles(srcHolder.getWayPoint(),profile.dataDir, dstProfile.dataDir);
-				// does cache exists in destDB ?
-				// Update database
-				//*wall* when copying addis without their maincache, the maincache in the srcDB will be set to null on saving the dstProfile later.
-				//Therefore it will be shown twice in the cachelist.
-				//To prevent this, addis will be cloned and to save memory only addis will be clones.
-				//TODO clone addis only when the maincache will not be copied.
-//				if (srcHolder.isAddiWpt()){
-//					try {
-//						srcHolder = (CacheHolder) srcHolder.clone();
-//					} catch (CloneNotSupportedException e) {
-//						//ignore, CacheHolder implements Cloneable ensures this methods
-//					}
-//				}
-				int dstPos = dstProfile.getCacheIndex(srcHolder.getWayPoint());
-				if (dstPos >= 0){
-					dstProfile.cacheDB.set(dstPos,srcHolder);
-				}
-				else {
-					dstProfile.cacheDB.add(srcHolder);
-				}
-			 }		 
+			srcHolder.save();
+			deleteCacheFiles(srcHolder.getWayPoint(),dstProfile.dataDir, destFileList);
+			copyCacheFiles(srcHolder.getWayPoint(),profile.dataDir ,dstProfile.dataDir, srcFileList);
+			// does cache exists in destDB ?
+			// Update database
+			//*wall* when copying addis without their maincache, the maincache in the srcDB will be set to null on saving the dstProfile later.
+			//Therefore it will be shown twice in the cachelist.
+			//To prevent this, addis will be cloned and to save memory only addis will be clones.
+			//TODO clone addis only when the maincache will not be copied.
+			//			if (srcHolder.isAddiWpt()){
+			//			try {
+			//				srcHolder = (CacheHolder) srcHolder.clone();
+			//			} catch (CloneNotSupportedException e) {
+			//				//ignore, CacheHolder implements Cloneable ensures this methods
+			//			}
+			//		}
+			int dstPos = dstProfile.getCacheIndex(srcHolder.getWayPoint());
+			if (dstPos >= 0){
+				dstProfile.cacheDB.set(dstPos,srcHolder);
+			}
+			else {
+				dstProfile.cacheDB.add(srcHolder);
+			}
 		}
+	}
 
-		private class Mover extends Executor {
-			 Mover(String title, Profile dstProfile) {
-				 this.title=title;
-				 this.dstProfile=dstProfile;
-			 }
-			 public void doIt(int i,CacheHolder srcHolder) {
-				 srcDB.removeElementAt(i);
-				 deleteCacheFiles(srcHolder.getWayPoint(), dstProfile.dataDir);
-				 moveCacheFiles(srcHolder.getWayPoint(),profile.dataDir, dstProfile.dataDir);
-				// does cache exists in destDB ?
-				 // Update database
-				int dstPos = dstProfile.getCacheIndex(srcHolder.getWayPoint());
-				if (dstPos >= 0){
-					dstProfile.cacheDB.set(dstPos,srcHolder);
-				}
-				else {
-					// Update database
-					dstProfile.cacheDB.add(srcHolder);
-				}
-				i--;
-			 }		 
-		}
+	private class Mover extends Executor {
+		 Mover(String title, Profile dstProfile) {
+			 this.title=title;
+			 this.dstProfile=dstProfile;
+			 FileBugfix srcPath=new FileBugfix(profile.dataDir);
+			 srcFileList= srcPath.list(null,FileBase.LIST_FILES_ONLY);
+			 FileBugfix destPath=new FileBugfix(dstProfile.dataDir);
+			 destFileList= destPath.list(null,FileBase.LIST_FILES_ONLY);
+		 }
+		 public void doIt(int i,CacheHolder srcHolder) {
+			 srcDB.removeElementAt(i);
+			 deleteCacheFiles(srcHolder.getWayPoint(),dstProfile.dataDir, destFileList);
+			 moveCacheFiles(srcHolder.getWayPoint(),profile.dataDir ,dstProfile.dataDir, srcFileList);
+			// does cache exists in destDB ?
+			 // Update database
+			int dstPos = dstProfile.getCacheIndex(srcHolder.getWayPoint());
+			if (dstPos >= 0){
+				dstProfile.cacheDB.set(dstPos,srcHolder);
+			}
+			else {
+				// Update database
+				dstProfile.cacheDB.add(srcHolder);
+			}
+			i--;
+		 }
 	}
+}

Modified: trunk/src/CacheWolf/Rebuild.java
===================================================================
--- trunk/src/CacheWolf/Rebuild.java	2009-12-17 21:27:33 UTC (rev 2367)
+++ trunk/src/CacheWolf/Rebuild.java	2009-12-17 21:35:00 UTC (rev 2368)
@@ -37,7 +37,7 @@
 			else {
 				//ewe.sys.Vm.debug("Orphan: "+wayPoint);
 				orphans++;
-				int cacheIndex=prof.getCacheIndex(wayPoint); 
+				int cacheIndex=prof.getCacheIndex(wayPoint);
 				if (cacheIndex > -1) {
 					// In older Versions of CW the <CACHE... /> line was not stored in the cache.xml
 					// therefore get it from the index.xml (prof.cacheDB) and put it into the cache.xml
@@ -59,7 +59,7 @@
 					h.progress = ((float)nProcessed++)/(float)(orphans);
 					h.changed();
 					String details=getCacheDetails(prof.dataDir+xmlFiles[i]);
-					if (details!=null) { 
+					if (details!=null) {
 						CacheHolder ch=new CacheHolder(details, cacheXmlVersion);
 						prof.cacheDB.add(ch);
 						nAdded++;
@@ -82,6 +82,7 @@
 			pbf.setTask(h,MyLocale.getMsg(213,"Deleting orphans"));
 			DataMover dm=new DataMover();
 			int nDeleted=0;
+			String[] CacheFiles = new FileBugfix(prof.dataDir).list("*.*", ewe.io.FileBase.LIST_FILES_ONLY);
 			for (i=0; i<xmlFiles.length; i++) {
 				if (xmlFiles[i]!=null){
 					h.progress = ((float)nDeleted++)/(float)(orphans-nAdded);
@@ -90,7 +91,7 @@
 					if (dotPos > 0) {
 					    // This may appear when there are directories in the profile
 					    String wayPoint=xmlFiles[i].substring(0,dotPos);
-					    dm.deleteCacheFiles(wayPoint,prof.dataDir);
+					    dm.deleteCacheFiles(wayPoint,prof.dataDir,CacheFiles);
 					}
 				}
 			}

Modified: trunk/src/CacheWolf/myTableControl.java
===================================================================
--- trunk/src/CacheWolf/myTableControl.java	2009-12-17 21:27:33 UTC (rev 2367)
+++ trunk/src/CacheWolf/myTableControl.java	2009-12-17 21:35:00 UTC (rev 2368)
@@ -1,6 +1,7 @@
 package CacheWolf;
 
 import CacheWolf.utils.CWWrapper;
+import CacheWolf.utils.FileBugfix;
 import ewe.sys.*;
 import ewe.ui.*;
 import ewe.fx.*;
@@ -203,6 +204,7 @@
 					pbf.exec();
 					int nDeleted=0;
 					int size=cacheDB.size();
+					String[] CacheFiles = new FileBugfix(profile.dataDir).list("*.*", ewe.io.FileBase.LIST_FILES_ONLY);
 					for(int i = size-1; i >=0; i--){// Start Counting down, as the size decreases with each deleted cache
 						ch = cacheDB.get(i);
 						if(ch.is_Checked && (ch.isVisible() || deleteFiltered)) {
@@ -210,7 +212,7 @@
 							h.progress = ((float)nDeleted)/(float)allCount;
 							h.changed();
 							cacheDB.removeElementAt(i);
-							dm.deleteCacheFiles(ch.getWayPoint(),profile.dataDir);
+							dm.deleteCacheFiles(ch.getWayPoint(),profile.dataDir,CacheFiles);
 							ch=null;
 							if (pbf.isClosed) break;
 						}



From araber95 at mail.berlios.de  Fri Dec 18 00:37:36 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Fri, 18 Dec 2009 00:37:36 +0100
Subject: [Cachewolf-svn] r2369 - trunk
Message-ID: <200912172337.nBHNbapw008250@sheep.berlios.de>

Author: araber95
Date: 2009-12-18 00:37:33 +0100 (Fri, 18 Dec 2009)
New Revision: 2369

Added:
   trunk/cw-ppc2003.jnf
Modified:
   trunk/cw-pda.jnf
   trunk/fwrtsnapshot.sh
Log:
concerning memory problems. (you should test with the 2003-version, (and the older too))

Modified: trunk/cw-pda.jnf
===================================================================
--- trunk/cw-pda.jnf	2009-12-17 21:35:00 UTC (rev 2368)
+++ trunk/cw-pda.jnf	2009-12-17 23:37:33 UTC (rev 2369)
@@ -1 +1 @@
-command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D/Xmx%2B8M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DPocketPC%25252B2003%252526%25253DPocketPC%25252B-%25252BARM/XScale%252526%25253DPocketPC%25252B-%25252BMIPS%252526%25253DPocketPC%25252B-%25252BSH3&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntr!
 y%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D/Xmx%252B8M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico
+command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D/Xmx%2B6M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DPocketPC%25252B-%25252BARM/XScale%252526%25253DPocketPC%25252B-%25252BMIPS%252526%25253DPocketPC%25252B-%25252BSH3&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%2!
 5253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D/Xmx%252B6M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico

Added: trunk/cw-ppc2003.jnf
===================================================================
--- trunk/cw-ppc2003.jnf	2009-12-17 21:35:00 UTC (rev 2368)
+++ trunk/cw-ppc2003.jnf	2009-12-17 23:37:33 UTC (rev 2369)
@@ -0,0 +1 @@
+command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D/Xmx%2B24M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DPocketPC%25252B2003&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%26addCommandLine%3D!
 true%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D/Xmx%252B24M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico

Modified: trunk/fwrtsnapshot.sh
===================================================================
--- trunk/fwrtsnapshot.sh	2009-12-17 21:35:00 UTC (rev 2368)
+++ trunk/fwrtsnapshot.sh	2009-12-17 23:37:33 UTC (rev 2369)
@@ -21,6 +21,7 @@
     -cp lib/CompileEwe.zip:lib -d bin -deprecation -nowarn \
     src/CacheWolf/*.java src/CacheWolf/*/*.java
 $EWE programs/Jewel.ewe -c cw-pda.jnf
+$EWE programs/Jewel.ewe -c cw-ppc2003.jnf
 $EWE programs/Jewel.ewe -c cw-pc.jnf
 # Don?t change the order of the above Jewel commands because
 # the PC version has to overwrite the PDA version of the EWE file



From araber95 at mail.berlios.de  Sat Dec 19 15:50:04 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Sat, 19 Dec 2009 15:50:04 +0100
Subject: [Cachewolf-svn] r2370 - in trunk: res_noewe res_noewe/languages
	src/CacheWolf src/CacheWolf/imp
Message-ID: <200912191450.nBJEo4S2010653@sheep.berlios.de>

Author: araber95
Date: 2009-12-19 15:49:58 +0100 (Sat, 19 Dec 2009)
New Revision: 2370

Modified:
   trunk/res_noewe/languages/DE.cfg
   trunk/res_noewe/languages/EN.cfg
   trunk/res_noewe/languages/FR.cfg
   trunk/res_noewe/languages/NL.cfg
   trunk/res_noewe/languages/PL.cfg
   trunk/res_noewe/spider.def
   trunk/src/CacheWolf/Profile.java
   trunk/src/CacheWolf/imp/OCXMLImporter.java
   trunk/src/CacheWolf/imp/OCXMLImporterScreen.java
   trunk/src/CacheWolf/imp/SpiderGC.java
Log:
extended import selection possibilities with mindistance and direction

Modified: trunk/res_noewe/languages/DE.cfg
===================================================================
--- trunk/res_noewe/languages/DE.cfg	2009-12-17 23:37:33 UTC (rev 2369)
+++ trunk/res_noewe/languages/DE.cfg	2009-12-19 14:49:58 UTC (rev 2370)
@@ -30,9 +30,9 @@
 		126=nach TomTom OV2
 		127=Speichern
 		128=%fcber Template
-		129=Importiere GPX
-		130=Download von opencaching
-		131=Spider von geocaching.com
+		129=aus GPX Datei
+		130=von opencaching de,pl,cz,uk
+		131=von geocaching.com
 		132=nach Explorist
 		133=Suche alle
 		134=Gew%e4hlter Cache
@@ -106,7 +106,7 @@
 		214=Neuer Wegpunkt
 		215=nach LOC
 		216=Immer bei GC einloggen
-		217=Spider alle Funde von geocaching.com
+		217=alle Funde von geocaching.com
 		218=Auch in Beschreibung/Notizen
 		219=Suche...
 		220=Pr%fcfe Notizen und L%f6ser
@@ -460,9 +460,11 @@
 		1622=Gefundene Caches nicht laden
 		1623=Max. Anzahl:
 		1624=+Caches
-		1625=TBs downloaden
+		1625=TBs laden
 		1626=Max. Logs:
 		1627=Alle Caches
+		1628=min. Abstand:
+		1629=Richtung (leer,N,O,S,W):
 		1700=Fehler in Zeile:
 		1701=Spalte:
 		1702=Variable nicht definiert:

Modified: trunk/res_noewe/languages/EN.cfg
===================================================================
--- trunk/res_noewe/languages/EN.cfg	2009-12-17 23:37:33 UTC (rev 2369)
+++ trunk/res_noewe/languages/EN.cfg	2009-12-19 14:49:58 UTC (rev 2370)
@@ -30,9 +30,9 @@
 		126=to TomTom OV2
 		127=Save
 		128=via Template
-		129=Import GPX
-		130=Download from opencaching
-		131=Spider from geocaching.com
+		129=from GPX file
+		130=from opencaching de, pl, cz, uk
+		131=from geocaching.com
 		132=to Explorist
 		133=Search all
 		134=Selected Cache
@@ -106,7 +106,7 @@
 		214=New Waypoint
 		215=to LOC
 		216=Always login to GC
-		217=Spider all finds from geocaching.com
+		217=all finds from geocaching.com
 		218=Also in description/notes
 		219=Searching...
 		220=Check notes and solver
@@ -436,7 +436,7 @@
 		1513=Cannot start moving map without valid coordinates. Please enter coordinates as destination as center or in selected cache, or start GPS
 		1514=Cannot recalculate distances, because the GPS position is not set
 		1600=+Download
-		1601=Distance:
+		1601=max. Distance:
 		1602=Download images
 		1603=Download maps
 		1604=Cancel
@@ -463,6 +463,8 @@
 		1625=Download TBs
 		1626=Max. logs:
 		1627=All caches
+		1628=min. Distance:
+		1629=Direction (empty,N,E,S,W):
 		1700=Error on line:
 		1701= position:
 		1702=Variable not defined:

Modified: trunk/res_noewe/languages/FR.cfg
===================================================================
--- trunk/res_noewe/languages/FR.cfg	2009-12-17 23:37:33 UTC (rev 2369)
+++ trunk/res_noewe/languages/FR.cfg	2009-12-19 14:49:58 UTC (rev 2370)
@@ -30,9 +30,9 @@
 		126=vers TomTom OV2
 		127=Enregistrer
 		128=par Template
-		129=Importe GPX
-		130=T%e9l%e9chargement par opencaching
-		131=Spider par geocaching.com
+		129=de GPX Fichier
+		130=de opencaching de, pl, cz, uk
+		131=de geocaching.com
 		132=vers Explorist
 		133=Cherche toutes
 		134=Cache choisi
@@ -104,8 +104,9 @@
 		212=Effacer toutes les fichier .xml (et images) qui ne sont pas en index.xml
 		213=Effacer les fichier .xml orpheline
 		214=Nouveau waypoint
+		215=%e0 LOC
 		216=Toujours connecter
-		217=[retrouver les ?found de geocaching.com]
+		217=toutes les trouvailles de geocaching.com
 		218=Aussi dans description/notes
 		219=Cherchant...
 		220=V%e9rifier notes et resoudeur
@@ -432,7 +433,7 @@
 		1512=Waypoint
 		1513=Ne peut pas afficher carte sans coordonn%e9es valides - Merci d'entrer coordonn%e9es comme destination, centre ou dans le cache choisi et d%e9marrer GPS
 		1600=+T%e9l%e9chargement
-		1601=Distance maximum:
+		1601=max. Distance:
 		1602=T%e9l%e9charger images
 		1603=T%e9l%e9charger cartes
 		1604=Annuler
@@ -454,6 +455,13 @@
 		1620=t%e9l%e9chargement d'image integr%e8e:+
 		1621=Erreur d'interpretation du fichier mise %e0 jour.%0aC'est probablement un erreur d'opencaching.de%0aEssayez encore une fois plus tard.%0a Statut:
 		1622=Pas t%e9l%e9charger caches trouv%e9es
+		1623=Max Quantit%e9:
+		1624=+ caches
+		1625=Importe TBs
+		1626=Max Activit%e9:
+		1627=Tous les caches
+		1628=min. Distance:
+		1629=Direction (vide,N,E,S,W):
 		1700=Erreur en lingne:
 		1701=Colonne:
 		1702=Variable pas d%e9fini:

Modified: trunk/res_noewe/languages/NL.cfg
===================================================================
--- trunk/res_noewe/languages/NL.cfg	2009-12-17 23:37:33 UTC (rev 2369)
+++ trunk/res_noewe/languages/NL.cfg	2009-12-19 14:49:58 UTC (rev 2370)
@@ -30,9 +30,9 @@
 		126=Naar TomTom OV2
 		127=Opslaan
 		128=Via sjabloon
-		129=Importeren GPX
-		130=Download van opencaching
-		131=Werkgeheugen van geocaching.com
+		129=van GPX Bestand
+		130=van opencaching de, pl, cz, uk
+		131=van geocaching.com
 		132=Naar Explorist
 		133=Allen zoeken
 		134=Gekozen Cache
@@ -103,6 +103,9 @@
 		212=[Delete all .xml files not in index.xml and associated pictures]
 		213=[Deleting orphans]
 		214=Nieuwe Waypoint
+		215=aan LOC
+		216=Altijd aanmelden bij GC
+		217=alle vondsten uit geocaching.com
 		218=Ook in opmerkingen/beschrijving
 		219=Zoeken...
 		220=Onderzoek opmerkingen en oplosser
@@ -409,7 +412,7 @@
 		1513=Kan moving map niet draaien zonder geldige co%f6rdinaten. Geef Centrums- of Doelco%f6rdinaten of start het GPS AUB.
 		1514=Kan afstanden niet opnieuw berekenen doordat er geen GPS positie gegeven is (geen receptie is/was)
 		1600=+Download
-		1601=Afstand:
+		1601=max. Afstand:
 		1602=Download afbeeldingen
 		1603=Download kaarten
 		1604=Annuleren
@@ -430,6 +433,14 @@
 		1619=: kon de afbeelding van URL niet downloaden:+
 		1620=download bijgesloten afbeeldingen:+
 		1621=Fout tijdens interpreteren data%0a van Opencaching.de,%0aDit is vermoedelijk een fout bij Opencaching.de%0aprobeer later nogmaals%0aStatus:
+		1622=niet in staat om te laden caches gevonden
+		1623=Max Aantal:
+		1624=+ caches
+		1625=Import TBs:
+		1626=Max Logs:
+		1627=Alle caches
+		1628=max. Afstand:
+		1629=Richting (leeg,N,O,Z,W):
 		1700=Fout in lijn:
 		1701=Positie:
 		1702=Variabele niet gedefinieerd.

Modified: trunk/res_noewe/languages/PL.cfg
===================================================================
--- trunk/res_noewe/languages/PL.cfg	2009-12-17 23:37:33 UTC (rev 2369)
+++ trunk/res_noewe/languages/PL.cfg	2009-12-19 14:49:58 UTC (rev 2370)
@@ -30,9 +30,9 @@
                 126=TomTom OV2
                 127=Zapisz
                 128=Przez szablon
-                129=Importuj GPX
-                130=Sciagnij z opencaching.de
-                131=Sciagnij z geocaching.com
+                129=z GPX pliku
+                130=z Opencaching de, pl, cz, pl
+                131=z geocaching.com
                 132=Explorist
                 133=Szukaj wszystkich
                 134=Zaznaczony Cache
@@ -435,7 +435,7 @@
                 1513=Nie mozna poruszac mapy bez prawidlowych wspolrzednych.%0a Prosze Wprowadz Wspolrzedne srodka %0alub na wybrana skrzynke, lub pozycja GPS
                 1514=Nie mozna przeliczyc odleglosci, pozycja GPS nie ustawiona
                 1600=Opencahing Download
-                1601=Odleglosc:
+                1601=max. Odleglosc:
                 1602=Sciagnij obrazki
                 1603=Sciagnij mapy
                 1604=Anuluj
@@ -462,6 +462,8 @@
                 1625=Sciagnij TBs
                 1626=Max. logow:
                 1627=Wszystkie skrzynki
+                1628=min. Odleglosc:
+                1629=Kierunek (pusty,N,E,P,W):
                 1700=Blad on line:
                 1701= pozycja:
                 1702=Zmienna niezdefiniowana:

Modified: trunk/res_noewe/spider.def
===================================================================
--- trunk/res_noewe/spider.def	2009-12-17 23:37:33 UTC (rev 2369)
+++ trunk/res_noewe/spider.def	2009-12-19 14:49:58 UTC (rev 2370)
@@ -56,6 +56,7 @@
 # Regex to search for cachenames
 listBlockRex       = <table id="ctl00_ContentBody_dlResults"((?s).*?)</table>
 lineRex            = <tr\ bgcolor='#.{6}'>(?:(?s).*?)<td\ valign="top"\ align="left">((?s).*?)</tr>
+directionRex       = /compass/(.*?).gif" alt="
 distRex            = <br\ />(.*?)(?:km|mi)(?:\\s*)</td>
 waypointRex        = \\(GC(.*?)\\)<br\ />
 showOnlyFound      = &f=1

Modified: trunk/src/CacheWolf/Profile.java
===================================================================
--- trunk/src/CacheWolf/Profile.java	2009-12-17 23:37:33 UTC (rev 2369)
+++ trunk/src/CacheWolf/Profile.java	2009-12-19 14:49:58 UTC (rev 2370)
@@ -46,6 +46,9 @@
 
 	/** Distance for geocaching caches */
 	private String distGC = new String();
+	private String minDistGC = new String();
+	/** Direction for geocaching caches */
+	private String directionGC = new String();
 
 	/** path to the maps of the profile relative to the maps root */
 	private String relativeCustomMapsPath = new String();
@@ -115,6 +118,8 @@
 		setLast_sync_opencaching("");
 		setDistOC("");
 		setDistGC("");
+		setMinDistGC("");
+		setDirectionGC("");
 		setRelativeCustomMapsPath("");
 		resetUnsavedChanges();
 	}
@@ -185,7 +190,13 @@
 			if (getDistGC() == null || getDistGC().endsWith("null") || getDistGC().equals("")) {
 				setDistGC("0.0");
 			}
-
+			if (getMinDistGC() == null || getMinDistGC().endsWith("null") || getMinDistGC().equals("")) {
+				setMinDistGC("0.0");
+			}
+			if (getDirectionGC() == null || getDirectionGC().endsWith("null") || getDirectionGC().equals("")) {
+				setDirectionGC("");
+			}
+			
 			// If the current filter is a CacheTour filter, then save it as
 			// normal filter, because after loading there is no cache tour defined
 			// which could be used as filter criterium.
@@ -199,7 +210,7 @@
 					(isFilterInverted()?"T":"F")+"\" showBlacklist = \""+showBlacklisted()+"\" />\n");
 			detfile.print(this.getCurrentFilter().toXML(""));
 			detfile.print("    <SYNCOC date = \""+getLast_sync_opencaching()+"\" dist = \""+getDistOC()+"\"/>\n");
-			detfile.print("    <SPIDERGC dist = \"" + getDistGC() + "\"/>\n");
+			detfile.print("    <SPIDERGC dist = \"" + getDistGC() + "\" mindist = \"" + getMinDistGC() + "\" direction = \"" + getDirectionGC() + "\"/>\n");
 			detfile.print("    <mapspath relativeDir = \"" + SafeXML.clean(relativeCustomMapsPath) + "\"/>\n");
 			int size = cacheDB.size();
 			for (int i = 0; i < size; i++) {
@@ -304,6 +315,10 @@
 				} else if (text.indexOf("<SPIDERGC")>=0) {
 					int start=text.indexOf("dist = \"")+8;
 					setDistGC(text.substring(start,text.indexOf("\"",start)));
+					start=text.indexOf("mindist = \"")+11;
+					setMinDistGC(text.substring(start,text.indexOf("\"",start)));
+					start=text.indexOf("direction = \"")+13;
+					setDirectionGC(text.substring(start,text.indexOf("\"",start)));
 				} else if (indexXmlVersion <=2 && text.indexOf("<FILTER")>=0){
 					// Read filter data of file versions 1 and 2. (Legacy code)
 					ex.setSource(text.substring(text.indexOf("<FILTER")));
@@ -782,11 +797,32 @@
 		return distGC;
 	}
 
+	public String getMinDistGC() {
+		return minDistGC;
+	}
+
+	public String getDirectionGC() {
+		return directionGC;
+	}
+//
+	public void setMinDistGC(String minDistGC) {
+		this.notifyUnsavedChanges(!minDistGC.equals(this.minDistGC));
+		this.minDistGC = minDistGC;
+	}
+
 	public void setDistGC(String distGC) {
 		this.notifyUnsavedChanges(!distGC.equals(this.distGC));
 		this.distGC = distGC;
 	}
 
+	public void setDirectionGC(String directionGC) {
+		if (directionGC.length() > 2) {
+			directionGC=directionGC.substring(0,2);
+		}
+		this.notifyUnsavedChanges(!directionGC.equals(this.directionGC));
+		this.directionGC = directionGC;
+	}
+
 	public String getRelativeCustomMapsPath() {
 		return relativeCustomMapsPath;
 	}

Modified: trunk/src/CacheWolf/imp/OCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/OCXMLImporter.java	2009-12-17 23:37:33 UTC (rev 2369)
+++ trunk/src/CacheWolf/imp/OCXMLImporter.java	2009-12-19 14:49:58 UTC (rev 2370)
@@ -192,7 +192,7 @@
 																 | OCXMLImporterScreen.HOST);
 		if (importOpt.execute() == FormBase.IDCANCEL) {	return; }
 		Vm.showWait(true);
-		String dist = importOpt.distanceInput.getText();
+		String dist = importOpt.maxDistanceInput.getText();
 
 		if (importOpt.domains.getSelectedItem()!=null)
 			hostname = (String)importOpt.domains.getSelectedItem();

Modified: trunk/src/CacheWolf/imp/OCXMLImporterScreen.java
===================================================================
--- trunk/src/CacheWolf/imp/OCXMLImporterScreen.java	2009-12-17 23:37:33 UTC (rev 2369)
+++ trunk/src/CacheWolf/imp/OCXMLImporterScreen.java	2009-12-19 14:49:58 UTC (rev 2370)
@@ -22,7 +22,9 @@
 	mButton cancelB, okB;
 	Preferences pref;
 	mChoice chcType;
-	mInput distanceInput;
+	mInput maxDistanceInput;
+	mInput minDistanceInput;
+	mInput directionInput;
 	mInput maxNumberInput;
 	mInput maxLogsInput;
 	mCheckBox imagesCheckBox, /*mapsCheckBox, */ missingCheckBox, foundCheckBox, travelbugsCheckBox;
@@ -42,6 +44,8 @@
 	public static final int MAXLOGS = 128;
 	public static final int TYPE = 256;
 	public static final int HOST = 512;
+	public static final int MINDIST = 1024;
+	public static final int DIRECTION = 2048;
 
 
 	public OCXMLImporterScreen(String title, int options) {
@@ -76,9 +80,29 @@
 				},0), CellConstants.STRETCH, (CellConstants.FILL|CellConstants.WEST));
 		}
 
+		if ((options & MINDIST) > 0) {
+			this.addNext(distLbl = new mLabel(MyLocale.getMsg(1628,"min. Distance:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
+			minDistanceInput = new mInput();
+			String dist1="0";
+			String dist2="0";
+			if (isGC) {
+				dist1 = Global.getProfile().getMinDistGC();
+				dist2 = Global.getProfile().getDistOC();
+			} else {
+				dist1 = Global.getProfile().getDistOC();
+				dist2 = Global.getProfile().getMinDistGC();
+			}
+			if ( dist1.equals("") || dist1.equals("0") || dist1.equals("0.0") ) {
+				dist1 = dist2;
+			}
+			minDistanceInput.setText(dist1);
+			this.addNext(minDistanceInput,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
+			this.addLast(new mLabel(" km/mi."),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
+		}
+
 		if ((options & DIST) > 0) {
 			this.addNext(distLbl = new mLabel(MyLocale.getMsg(1601,"Distance:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
-			distanceInput = new mInput();
+			maxDistanceInput = new mInput();
 			String dist1;
 			String dist2;
 			if (isGC) {
@@ -91,11 +115,18 @@
 			if ( dist1.equals("") || dist1.equals("0") || dist1.equals("0.0") ) {
 				dist1 = dist2;
 			}
-			distanceInput.setText(dist1);
-			this.addNext(distanceInput,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
+			maxDistanceInput.setText(dist1);
+			this.addNext(maxDistanceInput,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 			this.addLast(distUnit = new mLabel(" km/mi."),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 		}
 
+		if ((options & DIRECTION) > 0) {
+			this.addNext(new mLabel(MyLocale.getMsg(1629,"Richtung (leer,N,O,S,W):")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
+			directionInput = new mInput();
+			directionInput.setText(Global.getProfile().getDirectionGC());
+			this.addLast(directionInput,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
+		}
+
 		if ((options & MAXNUMBER) > 0) {
 			this.addNext(maxNumberLbl = new mLabel(MyLocale.getMsg(1623,"Max. number:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 			maxNumberInput = new mInput();

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2009-12-17 23:37:33 UTC (rev 2369)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2009-12-19 14:49:58 UTC (rev 2370)
@@ -87,7 +87,9 @@
 	private static String viewstate = "";
 	private static String cookieID = "";
 	private static String cookieSession = "";
-	private static double distance = 0;
+	private static double minDistance = 0;
+	private static double maxDistance = 0;
+	private static String direction = "";
 	private Regex inRex = new Regex();
 	private CacheDB cacheDB;
 	private Vector cachesToLoad = new Vector();
@@ -365,21 +367,35 @@
 		if (spiderAllFinds) {
 			options = new OCXMLImporterScreen(MyLocale.getMsg(5510,"Spider Options"), OCXMLImporterScreen.MAXNUMBER|OCXMLImporterScreen.IMAGES| OCXMLImporterScreen.ISGC| OCXMLImporterScreen.TRAVELBUGS| OCXMLImporterScreen.MAXLOGS| OCXMLImporterScreen.TYPE);
 			if (options.execute() == FormBase.IDCANCEL) {return; }
-
-			distance = 1;
+			maxDistance = 1;
+			minDistance = 0;
+			direction="";
 		} else {
-			options = new OCXMLImporterScreen(MyLocale.getMsg(5510,"Spider Options"),	OCXMLImporterScreen.MAXNUMBER|OCXMLImporterScreen.INCLUDEFOUND | OCXMLImporterScreen.DIST| OCXMLImporterScreen.IMAGES| OCXMLImporterScreen.ISGC| OCXMLImporterScreen.TRAVELBUGS| OCXMLImporterScreen.MAXLOGS| OCXMLImporterScreen.TYPE);
+			options = new OCXMLImporterScreen(MyLocale.getMsg(5510,"Spider Options"),	OCXMLImporterScreen.MAXNUMBER|OCXMLImporterScreen.INCLUDEFOUND | OCXMLImporterScreen.MINDIST| OCXMLImporterScreen.DIST| OCXMLImporterScreen.DIRECTION| OCXMLImporterScreen.IMAGES| OCXMLImporterScreen.ISGC| OCXMLImporterScreen.TRAVELBUGS| OCXMLImporterScreen.MAXLOGS| OCXMLImporterScreen.TYPE);
 			if (options.execute() == FormBase.IDCANCEL) {return; }
-			String dist = options.distanceInput.getText();
-			if (dist.length()== 0) return;
-			distance = Common.parseDouble(dist);
 
-			//save last radius to profile
+			String minDist = options.minDistanceInput.getText();
+			if (minDist.length() == 0) minDist="0";
+			minDistance = Common.parseDouble(minDist);
 			Double distDouble = new Double();
-			distDouble.value = distance;
-			dist = distDouble.toString(0, 1, 0).replace(',', '.');
-			profile.setDistGC(dist);
+			distDouble.value = minDistance;
+			minDist = distDouble.toString(0, 1, 0).replace(',', '.');
+			profile.setMinDistGC(minDist);
 
+			String maxDist = options.maxDistanceInput.getText();
+			if (maxDist.length()== 0) return;
+			maxDistance = Common.parseDouble(maxDist);
+			//save last radius to profile
+			distDouble.value = maxDistance;
+			maxDist = distDouble.toString(0, 1, 0).replace(',', '.');
+			profile.setDistGC(maxDist);
+
+			direction=options.directionInput.getText().toUpperCase();
+			profile.setDirectionGC(direction);
+			direction.replace('O', 'E');
+			direction.replace('Z', 'S');
+			direction.replace('P', 'S');
+
 			doNotgetFound = options.foundCheckBox.getState();
 		}
 
@@ -403,9 +419,9 @@
 		options.close(0);
 
 		//max distance in miles for URL, so we can get more than 80km
-		double saveDistanceInMiles = distance;
+		double saveDistanceInMiles = maxDistance;
 		if ( Global.getPref().metricSystem != Metrics.IMPERIAL ) {
-			saveDistanceInMiles = Metrics.convertUnit(distance, Metrics.KILOMETER, Metrics.MILES);
+			saveDistanceInMiles = Metrics.convertUnit(maxDistance, Metrics.KILOMETER, Metrics.MILES);
 		}
 		// add a mile to be save from different distance calculations in CW and at GC
 		saveDistanceInMiles = java.lang.Math.ceil(saveDistanceInMiles) + 1;
@@ -413,10 +429,15 @@
 		Hashtable cachesToUpdate = new Hashtable(cacheDB.size());
 
 		if (pref.spiderUpdates != Preferences.NO) {
-			double distanceInKm = distance;
+			double distanceInKm = maxDistance;
 			if ( Global.getPref().metricSystem == Metrics.IMPERIAL ) {
-				distanceInKm = Metrics.convertUnit(distance, Metrics.MILES, Metrics.KILOMETER);
+				distanceInKm = Metrics.convertUnit(maxDistance, Metrics.MILES, Metrics.KILOMETER);
 			}
+			double minDistanceInKm = minDistance;
+			if ( Global.getPref().metricSystem == Metrics.IMPERIAL ) {
+				minDistanceInKm = Metrics.convertUnit(minDistance, Metrics.MILES, Metrics.KILOMETER);
+			}
+
 			byte restrictedCacheType = options.getRestrictedCacheType(p);
 			for(int i = 0; i<cacheDB.size();i++){
 				ch = cacheDB.get(i);
@@ -428,7 +449,7 @@
 					}
 				} else {
 					if ( (!ch.is_archived())
-						 && (ch.kilom <= distanceInKm)
+						 && (ch.kilom <= distanceInKm) && (ch.kilom >= minDistanceInKm)
 						 && !(doNotgetFound && (ch.is_found() || ch.is_owned()))
 						 && (ch.getWayPoint().substring(0,2).equalsIgnoreCase("GC"))
 						 && ( (restrictedCacheType == CacheType.CW_TYPE_ERROR) || (ch.getType() == restrictedCacheType) )
@@ -479,7 +500,7 @@
 		int found_on_page = 0;
 		try {
 			//Loop till maximum distance has been found or no more caches are in the list
-			while(distance > 0){
+			while(maxDistance > 0){
 				if (infB.isClosed){
 					//don't update existing caches, because list is not correct when aborting
 					cachesToUpdate.clear();
@@ -514,65 +535,75 @@
 				}catch(NullPointerException nex){
 					Global.getPref().log("Ignored Exception", nex, true);
 				}
-				while(lineRex.didMatch()){
+				String oneCacheDesc="";
+				String gotDirection="";
+				while ( maxDistance>0 && lineRex.didMatch()){
 					//Vm.debug(getDist(lineRex.stringMatched(1)) + " / " +getWP(lineRex.stringMatched(1)));
 					found_on_page++;
-					if(getDist(lineRex.stringMatched(1)) <= distance){
-						String waypoint=getWP(lineRex.stringMatched(1));
-						CacheHolder existingCache;
-						if((existingCache=cacheDB.get(waypoint)) == null){
-							if ( (maxNumber > 0) && (cachesToLoad.size() >= maxNumber) ) {
-								maxNumberAbort = true;
-
-								//add no more caches
-								distance = 0;
-
-								//don't update existing caches, because list is not correct when aborting
-								cachesToUpdate.clear();
-							} else {
-								cachesToLoad.add(waypoint);
-
-								//if we don't want to update caches, we can stop directly after adding the maximum of new caches.
-								if ( (pref.spiderUpdates == Preferences.NO) && (maxNumber > 0) && (cachesToLoad.size() >= maxNumber)) {
+					oneCacheDesc=lineRex.stringMatched(1);
+					double gotDistance=getDist(oneCacheDesc);
+					gotDirection=getDirection(oneCacheDesc);
+					if(gotDistance <= maxDistance){
+						if ( gotDistance >= minDistance &&
+							 gotDirection.startsWith(direction) ){
+							String waypoint=getWP(oneCacheDesc);
+							CacheHolder existingCache;
+							if((existingCache=cacheDB.get(waypoint)) == null){
+								if ( (maxNumber > 0) && (cachesToLoad.size() >= maxNumber) ) {
 									maxNumberAbort = true;
 
 									//add no more caches
-									distance = 0;
+									maxDistance = 0;
 
 									//don't update existing caches, because list is not correct when aborting
 									cachesToUpdate.clear();
+								} else {
+									pref.log(waypoint+" added to load!");
+									cachesToLoad.add(waypoint);
+
+									//if we don't want to update caches, we can stop directly after adding the maximum of new caches.
+									if ( (pref.spiderUpdates == Preferences.NO) && (maxNumber > 0) && (cachesToLoad.size() >= maxNumber)) {
+										maxNumberAbort = true;
+
+										//add no more caches
+										maxDistance = 0;
+
+										//don't update existing caches, because list is not correct when aborting
+										cachesToUpdate.clear();
+									}
 								}
-							}
-						} else {
-							pref.log(waypoint+" already in DB");
-							ch=existingCache;
-							// If the <strike> tag is used, the cache is marked as unavailable or archived
-							boolean is_archived_GC=lineRex.stringMatched(1).indexOf("<strike><font color=\"red\">")!=-1;
-							boolean is_available_GC=lineRex.stringMatched(1).indexOf("<strike>")==-1;
-							if (ch.is_archived()!=is_archived_GC) { // Update the database with the cache status
-								pref.log("Updating status of "+waypoint+" to "+(is_archived_GC?"archived":"not archived"));
-								if ( ch.is_archived() ) {
-									cachesToUpdate.put(ch.getWayPoint(), ch);
+							} else {
+								pref.log(waypoint+" already in DB");
+								ch=existingCache;
+								// If the <strike> tag is used, the cache is marked as unavailable or archived
+								boolean is_archived_GC=oneCacheDesc.indexOf("<strike><font color=\"red\">")!=-1;
+								boolean is_available_GC=oneCacheDesc.indexOf("<strike>")==-1;
+								if (ch.is_archived()!=is_archived_GC) { // Update the database with the cache status
+									pref.log("Updating status of "+waypoint+" to "+(is_archived_GC?"archived":"not archived"));
+									if ( ch.is_archived() ) {
+										cachesToUpdate.put(ch.getWayPoint(), ch);
+									}
+									ch.setArchived(is_archived_GC);
+								} else if (ch.is_available()!=is_available_GC) { // Update the database with the cache status
+									pref.log("Updating status of "+waypoint+" to "+(is_available_GC?"available":"not available"));
+									ch.setAvailable(is_available_GC);
+								} else if (spiderAllFinds && !ch.is_found()) { // Update the database with the cache status
+									pref.log("Updating status of "+waypoint+" to found");
+									ch.setFound(true);
+								} else {
+									cachesToUpdate.remove( ch.getWayPoint() );
 								}
-								ch.setArchived(is_archived_GC);
-							} else if (ch.is_available()!=is_available_GC) { // Update the database with the cache status
-								pref.log("Updating status of "+waypoint+" to "+(is_available_GC?"available":"not available"));
-								ch.setAvailable(is_available_GC);
-							} else if (spiderAllFinds && !ch.is_found()) { // Update the database with the cache status
-								pref.log("Updating status of "+waypoint+" to found");
-								ch.setFound(true);
-							} else {
-								cachesToUpdate.remove( ch.getWayPoint() );
 							}
 						}
-					} else distance = 0;
+					} else maxDistance = 0;
+					// next Cache Description of this page
 					lineRex.searchFrom(dummy, lineRex.matchedTo());
 				}
 
 				page++;
 				infB.setInfo(MyLocale.getMsg(5521,"Page ") + page + "\n" + MyLocale.getMsg(5511,"Found ") + cachesToLoad.size() + MyLocale.getMsg(5512," caches"));
 
-				if(found_on_page < 20) distance = 0;
+				if(found_on_page < 20) maxDistance = 0;
 				if (spiderAllFinds) {
 					postStr = p.getProp("firstLine");
 				} else {
@@ -581,7 +612,7 @@
 					if(doNotgetFound) postStr = postStr + p.getProp("showOnlyFound");
 				}
 				postStr = postStr + cacheTypeRestriction;
-				if(distance > 0){
+				if(maxDistance > 0){
 					page_number++;
 					String strNextPage;
 					/*
@@ -944,6 +975,18 @@
 	}
 
 	/**
+	 * Get the direction
+	 * @param doc A previously fetched cachepage
+	 * @return direction String
+	 */
+	private String getDirection(String doc) throws Exception {
+		inRex = new Regex(p.getProp("directionRex"));
+		inRex.search(doc);
+		if (!inRex.didMatch()) return "";
+		return inRex.stringMatched(1);
+	}
+
+	/**
 	 * Get the waypoint name
 	 * @param doc A previously fetched cachepage
 	 * @return Name of waypoint to add to list



From araber95 at mail.berlios.de  Sat Dec 19 17:43:04 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Sat, 19 Dec 2009 17:43:04 +0100
Subject: [Cachewolf-svn] r2371 - in trunk: res_noewe/languages src/CacheWolf
	src/CacheWolf/imp
Message-ID: <200912191643.nBJGh4Ji017406@sheep.berlios.de>

Author: araber95
Date: 2009-12-19 17:42:58 +0100 (Sat, 19 Dec 2009)
New Revision: 2371

Modified:
   trunk/res_noewe/languages/DE.cfg
   trunk/res_noewe/languages/EN.cfg
   trunk/res_noewe/languages/FR.cfg
   trunk/res_noewe/languages/NL.cfg
   trunk/res_noewe/languages/PL.cfg
   trunk/src/CacheWolf/Profile.java
   trunk/src/CacheWolf/imp/OCXMLImporterScreen.java
   trunk/src/CacheWolf/imp/SpiderGC.java
Log:
little enhancement for new import functions

Modified: trunk/res_noewe/languages/DE.cfg
===================================================================
--- trunk/res_noewe/languages/DE.cfg	2009-12-19 14:49:58 UTC (rev 2370)
+++ trunk/res_noewe/languages/DE.cfg	2009-12-19 16:42:58 UTC (rev 2371)
@@ -464,7 +464,8 @@
 		1626=Max. Logs:
 		1627=Alle Caches
 		1628=min. Abstand:
-		1629=Richtung (leer,N,O,S,W):
+		1629=Richtung (leer/N/N*/N,NE,E):
+		1630=z.B. leer oder N oder N* oder N,NE,E
 		1700=Fehler in Zeile:
 		1701=Spalte:
 		1702=Variable nicht definiert:

Modified: trunk/res_noewe/languages/EN.cfg
===================================================================
--- trunk/res_noewe/languages/EN.cfg	2009-12-19 14:49:58 UTC (rev 2370)
+++ trunk/res_noewe/languages/EN.cfg	2009-12-19 16:42:58 UTC (rev 2371)
@@ -464,7 +464,8 @@
 		1626=Max. logs:
 		1627=All caches
 		1628=min. Distance:
-		1629=Direction (empty,N,E,S,W):
+		1629=Direction (empty/N/N*/N,NE,E):
+		1630=e.g. blank or N or N* or N,NE,E
 		1700=Error on line:
 		1701= position:
 		1702=Variable not defined:

Modified: trunk/res_noewe/languages/FR.cfg
===================================================================
--- trunk/res_noewe/languages/FR.cfg	2009-12-19 14:49:58 UTC (rev 2370)
+++ trunk/res_noewe/languages/FR.cfg	2009-12-19 16:42:58 UTC (rev 2371)
@@ -461,7 +461,8 @@
 		1626=Max Activit%e9:
 		1627=Tous les caches
 		1628=min. Distance:
-		1629=Direction (vide,N,E,S,W):
+		1629=Direction (vide/N/N*/N,NE,E):
+		1630=par exemple nulle ou N ou N* ou N,NE,E
 		1700=Erreur en lingne:
 		1701=Colonne:
 		1702=Variable pas d%e9fini:

Modified: trunk/res_noewe/languages/NL.cfg
===================================================================
--- trunk/res_noewe/languages/NL.cfg	2009-12-19 14:49:58 UTC (rev 2370)
+++ trunk/res_noewe/languages/NL.cfg	2009-12-19 16:42:58 UTC (rev 2371)
@@ -440,7 +440,8 @@
 		1626=Max Logs:
 		1627=Alle caches
 		1628=max. Afstand:
-		1629=Richting (leeg,N,O,Z,W):
+		1629=Richting (leeg/N/N*/N,NE,E):
+		1630=bv. blanco of N of N* of N,NE,E
 		1700=Fout in lijn:
 		1701=Positie:
 		1702=Variabele niet gedefinieerd.

Modified: trunk/res_noewe/languages/PL.cfg
===================================================================
--- trunk/res_noewe/languages/PL.cfg	2009-12-19 14:49:58 UTC (rev 2370)
+++ trunk/res_noewe/languages/PL.cfg	2009-12-19 16:42:58 UTC (rev 2371)
@@ -463,7 +463,8 @@
                 1626=Max. logow:
                 1627=Wszystkie skrzynki
                 1628=min. Odleglosc:
-                1629=Kierunek (pusty,N,E,P,W):
+                1629=Kierunek (pusty/N/N*/N,NE,E):
+                1630=np. puste lub N lub N* lub N,S,E
                 1700=Blad on line:
                 1701= pozycja:
                 1702=Zmienna niezdefiniowana:

Modified: trunk/src/CacheWolf/Profile.java
===================================================================
--- trunk/src/CacheWolf/Profile.java	2009-12-19 14:49:58 UTC (rev 2370)
+++ trunk/src/CacheWolf/Profile.java	2009-12-19 16:42:58 UTC (rev 2371)
@@ -816,9 +816,6 @@
 	}
 
 	public void setDirectionGC(String directionGC) {
-		if (directionGC.length() > 2) {
-			directionGC=directionGC.substring(0,2);
-		}
 		this.notifyUnsavedChanges(!directionGC.equals(this.directionGC));
 		this.directionGC = directionGC;
 	}

Modified: trunk/src/CacheWolf/imp/OCXMLImporterScreen.java
===================================================================
--- trunk/src/CacheWolf/imp/OCXMLImporterScreen.java	2009-12-19 14:49:58 UTC (rev 2370)
+++ trunk/src/CacheWolf/imp/OCXMLImporterScreen.java	2009-12-19 16:42:58 UTC (rev 2371)
@@ -121,9 +121,10 @@
 		}
 
 		if ((options & DIRECTION) > 0) {
-			this.addNext(new mLabel(MyLocale.getMsg(1629,"Richtung (leer,N,O,S,W):")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
+			this.addNext(new mLabel(MyLocale.getMsg(1629,"Richtung:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 			directionInput = new mInput();
 			directionInput.setText(Global.getProfile().getDirectionGC());
+			directionInput.toolTip=MyLocale.getMsg(1630,"z.B. leer oder N oder N* oder N,NE,E");
 			this.addLast(directionInput,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 		}
 

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2009-12-19 14:49:58 UTC (rev 2370)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2009-12-19 16:42:58 UTC (rev 2371)
@@ -90,6 +90,7 @@
 	private static double minDistance = 0;
 	private static double maxDistance = 0;
 	private static String direction = "";
+	private static String[] directions;
 	private Regex inRex = new Regex();
 	private CacheDB cacheDB;
 	private Vector cachesToLoad = new Vector();
@@ -391,10 +392,13 @@
 			profile.setDistGC(maxDist);
 
 			direction=options.directionInput.getText().toUpperCase();
+			direction=direction.replace(' ',','); // separator blank to ,
+			direction=direction.replace(';',','); // separator ; to ,
 			profile.setDirectionGC(direction);
-			direction.replace('O', 'E');
-			direction.replace('Z', 'S');
-			direction.replace('P', 'S');
+			direction=direction.replace('O', 'E'); // synonym for East
+			direction=direction.replace('Z', 'S'); // synonym for South
+			direction=direction.replace('P', 'S'); // synonym for South
+			directions=mString.split(direction, ',');
 
 			doNotgetFound = options.foundCheckBox.getState();
 		}
@@ -536,16 +540,14 @@
 					Global.getPref().log("Ignored Exception", nex, true);
 				}
 				String oneCacheDesc="";
-				String gotDirection="";
 				while ( maxDistance>0 && lineRex.didMatch()){
 					//Vm.debug(getDist(lineRex.stringMatched(1)) + " / " +getWP(lineRex.stringMatched(1)));
 					found_on_page++;
 					oneCacheDesc=lineRex.stringMatched(1);
 					double gotDistance=getDist(oneCacheDesc);
-					gotDirection=getDirection(oneCacheDesc);
 					if(gotDistance <= maxDistance){
 						if ( gotDistance >= minDistance &&
-							 gotDirection.startsWith(direction) ){
+							 directionOK(directions,getDirection(oneCacheDesc)) ){
 							String waypoint=getWP(oneCacheDesc);
 							CacheHolder existingCache;
 							if((existingCache=cacheDB.get(waypoint)) == null){
@@ -729,6 +731,22 @@
 		Global.getProfile().restoreFilter();
 		Global.getProfile().saveIndex(Global.getPref(),true);
 	}
+	
+	private boolean directionOK(String[] directions, String gotDirection) {
+		if (directions.length==0) return true; // nothing means all
+		for (int i = 0; i < directions.length; i++) {
+			if (directions[i].equals(gotDirection)) {
+				return true;
+			}
+			int j=directions[i].indexOf("*");
+			if (j>0){
+				if (gotDirection.startsWith(directions[i].substring(0, 1))) {
+					return true;
+				}
+			}
+		}
+		return false;
+	}
 
 	/**
 	 * Read a complete cachepage from geocaching.com including all logs. This is used both when



From araber95 at mail.berlios.de  Sat Dec 19 17:43:39 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Sat, 19 Dec 2009 17:43:39 +0100
Subject: [Cachewolf-svn] r2372 - trunk/src/CacheWolf
Message-ID: <200912191643.nBJGhdeY017485@sheep.berlios.de>

Author: araber95
Date: 2009-12-19 17:43:38 +0100 (Sat, 19 Dec 2009)
New Revision: 2372

Modified:
   trunk/src/CacheWolf/Preferences.java
Log:
perhaps more speed

Modified: trunk/src/CacheWolf/Preferences.java
===================================================================
--- trunk/src/CacheWolf/Preferences.java	2009-12-19 16:42:58 UTC (rev 2371)
+++ trunk/src/CacheWolf/Preferences.java	2009-12-19 16:43:38 UTC (rev 2372)
@@ -1000,24 +1000,25 @@
 	 * @param text to log
 	 */
 	public void log(String text){
-		Time dtm = new Time();
-		dtm.getTime();
-		dtm.setFormat("dd.MM.yyyy'/'HH:mm:ss.SSS");
-		text = dtm.toString()+ ": "+ text;
-		if (debug) Vm.debug(text);
-		text=text+"\n";
-		FileWriter logFile = null;
-		try{
-			logFile = new FileWriter(LOGFILENAME, true);
-			//Stream strout = null;
-			//strout = logFile.toWritableStream(true);
-			logFile.println(text);
-			//Vm.debug(text); Not needed - put <debug value="true"> into pref.xml
-		}catch(Exception ex){
-			Vm.debug("Error writing to log file!");
-		}finally{
-			if (logFile != null) try {logFile.close(); } catch (IOException ioe) {
-				Global.getPref().log("Ignored Exception", ioe, true);
+		if (debug) {
+			Vm.debug(text);
+			Time dtm = new Time();
+			dtm.getTime();
+			dtm.setFormat("dd.MM.yyyy'/'HH:mm:ss.SSS");
+			text = dtm.toString()+ ": "+ text;
+			FileWriter logFile = null;
+			try{
+				logFile = new FileWriter(LOGFILENAME, true);
+				//Stream strout = null;
+				//strout = logFile.toWritableStream(true);
+				logFile.println(text);
+				//Vm.debug(text); Not needed - put <debug value="true"> into pref.xml
+			}catch(Exception ex){
+				Vm.debug("Error writing to log file!");
+			}finally{
+				if (logFile != null) try {logFile.close(); } catch (IOException ioe) {
+					log("Ignored Exception", ioe, true);
+				}
 			}
 		}
 	}



From salzkammergut at mail.berlios.de  Sun Dec 20 11:55:55 2009
From: salzkammergut at mail.berlios.de (salzkammergut at mail.berlios.de)
Date: Sun, 20 Dec 2009 11:55:55 +0100
Subject: [Cachewolf-svn] r2373 - trunk/src/CacheWolf
Message-ID: <200912201055.nBKAtts0014954@sheep.berlios.de>

Author: salzkammergut
Date: 2009-12-20 11:55:53 +0100 (Sun, 20 Dec 2009)
New Revision: 2373

Modified:
   trunk/src/CacheWolf/ShowCacheInBrowser.java
Log:
Bugfix: ShowCacheInBrowser
Reverted part of Rev 2365 (which does not work under Windows if path to temp file contains spaces)

Modified: trunk/src/CacheWolf/ShowCacheInBrowser.java
===================================================================
--- trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-12-19 16:43:38 UTC (rev 2372)
+++ trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-12-20 10:55:53 UTC (rev 2373)
@@ -21,7 +21,7 @@
 	static Hashtable diff=null;
 	static Hashtable terr=null;
 	static Hashtable args=null;
-	
+
 	ShowCacheInBrowser() {
 		if (diff==null) {
 			diff=new Hashtable(15);
@@ -36,7 +36,7 @@
 			diff.put("4",y+y+y+y);
 			diff.put("4.5",y+y+y+y+y2);
 			diff.put("5",y+y+y+y+y);
-	
+
 			terr=new Hashtable(15);
 			String g="<img src=\"file://" + pd + "/g.png\" border=0>";
 			String g2="<img src=\"file://" + pd + "/g2.png\" border=0>";
@@ -49,7 +49,7 @@
 			terr.put("4",g+g+g+g);
 			terr.put("4.5",g+g+g+g+g2);
 			terr.put("5",g+g+g+g+g);
-			
+
 			args = new Hashtable();
 			args.put("filename", pd+"/GCTemplate.html");
 			args.put("case_sensitive", "true");
@@ -57,7 +57,7 @@
 			args.put("max_includes", new Integer(5));
 		}
 	}
-	
+
 	public void showCache(CacheHolder chD) {
 		if (chD == null) return;
 		try {
@@ -67,7 +67,7 @@
 				try {
 //					if (chD.getWayPoint().startsWith("OC"))
 //						tpl.setParam("TYPE", "\"file://"+FileBase.getProgramDirectory()+"/"+CacheType.transOCType(chD.getType())+".gif\"");
-//					else	
+//					else
 						tpl.setParam("TYPE", "\"file://"+FileBase.getProgramDirectory()+"/"+chD.getType()+".gif\"");
 					tpl.setParam("SIZE", CacheSize.cw2ExportString(chD.getCacheSize()));
 					tpl.setParam("WAYPOINT", chD.getWayPoint());
@@ -87,7 +87,7 @@
 						tpl.setParam("STATUS",MyLocale.getMsg(318,"Found")+" "+chD.getCacheStatus());
 					else
 						tpl.setParam("STATUS", chD.getCacheStatus());
-					
+
 					// Cache attributes
 					if (chD.getExistingDetails().attributes.getCount()>0) {
 						Vector attVect=new Vector(chD.getExistingDetails().attributes.getCount()+1);
@@ -96,7 +96,7 @@
 							atts.put("IMAGE","<img src=\"file://"+
 									   Attribute.getImageDir()+chD.getExistingDetails().attributes.getName(i)+
 									   "\" border=0 alt=\""+chD.getExistingDetails().attributes.getInfo(i)+"\">");
-							if (i % 5 ==4) 
+							if (i % 5 ==4)
 								atts.put("BR","<br/>");
 							else
 								atts.put("BR","");
@@ -105,14 +105,14 @@
 						}
 						tpl.setParam("ATTRIBUTES",attVect);
 					}
-					
+
 					tpl.setParam("DATE", chD.getDateHidden());
 					tpl.setParam("URL", chD.getExistingDetails().URL);
 					if (chD.getExistingDetails().Travelbugs.size()>0) tpl.setParam("BUGS",chD.getExistingDetails().Travelbugs.toHtml());
 					if (chD.getExistingDetails().getCacheNotes().trim().length()>0) tpl.setParam("NOTES", STRreplace.replace(chD.getExistingDetails().getCacheNotes(),"\n","<br/>\n"));
 					if (chD.getExistingDetails().getSolver()!=null && chD.getExistingDetails().getSolver().trim().length()>0) tpl.setParam("SOLVER", STRreplace.replace(chD.getExistingDetails().getSolver(),"\n","<br/>\n"));
 					// Look for images
-					
+
 					StringBuffer s=new StringBuffer(chD.getExistingDetails().LongDescription.length());
 					int start=0;
 					int pos;
@@ -138,7 +138,7 @@
 					}
 					if (start>=0) s.append(chD.getExistingDetails().LongDescription.substring(start));
 					tpl.setParam("DESCRIPTION", s.toString());
-					
+
 					// Do the remaining pictures which are not included in main body of text
 					// They will be hidden initially and can be displayed by clicking on a link
 					if (imageNo<chD.getExistingDetails().images.size()) {
@@ -157,7 +157,7 @@
 						}
 						tpl.setParam("IMAGES",imageVect);
 					}
-					
+
 					Vector logVect=new Vector(chD.getExistingDetails().CacheLogs.size());
 					for (int i=0; i<chD.getExistingDetails().CacheLogs.size(); i++) {
 						Hashtable logs=new Hashtable();
@@ -167,7 +167,7 @@
 							logs.put("LOG",log);
 							logs.put("LOGTYPE","");
 						} else {
-							int posBr=log.indexOf("<br>"); 
+							int posBr=log.indexOf("<br>");
 							if(posBr<0) {
 								logs.put("LOG",log);
 								logs.put("LOGTYPE","");
@@ -182,7 +182,7 @@
 					tpl.setParam("LOGS",logVect);
 					if (!chD.is_available()) tpl.setParam("UNAVAILABLE","1");
 					if (!chD.getExistingDetails().Hints.equals("null"))tpl.setParam("HINT",Common.rot13(chD.getExistingDetails().Hints));
-					
+
 					if (chD.hasAddiWpt()) {
 						Vector addiVect=new Vector(chD.addiWpts.size());
 						for (int i=0; i<chD.addiWpts.size(); i++) {
@@ -203,14 +203,14 @@
 					e.printStackTrace();
 				}
 			}
-			PrintWriter detfile; 
+			PrintWriter detfile;
 			FileWriter fw = new FileWriter(saveTo);
 			detfile = new PrintWriter(new BufferedWriter(fw));
 			tpl.printTo(detfile);
 			//detfile.print(tpl.output());
 			detfile.close();
 			try {
-				CWWrapper.exec(Global.getPref().browser, "file://"+saveTo, false, false); // maybe this works on some PDAs?
+				CWWrapper.exec(Global.getPref().browser, "file://"+saveTo);
 			} catch (IOException ex) {
 				(new MessageBox(MyLocale.getMsg(321,"Error"),
 						MyLocale.getMsg(1034,"Cannot start browser!") + "\n" + ex.toString() + "\n" +
@@ -218,7 +218,7 @@
 						MyLocale.getMsg(1036,"A bug in ewe VM, please be") + "\n" +
 						MyLocale.getMsg(1037,"patient for an update"),FormBase.OKB)).execute();
 			}
-			
+
 		} catch(Exception e) {
 			e.printStackTrace();
 			Global.getPref().log("Error in ShowCache "+e.toString());



From araber95 at mail.berlios.de  Sun Dec 20 16:19:13 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Sun, 20 Dec 2009 16:19:13 +0100
Subject: [Cachewolf-svn] r2374 - trunk/src/CacheWolf/imp
Message-ID: <200912201519.nBKFJDri023847@sheep.berlios.de>

Author: araber95
Date: 2009-12-20 16:19:12 +0100 (Sun, 20 Dec 2009)
New Revision: 2374

Modified:
   trunk/src/CacheWolf/imp/OCXMLImporterScreen.java
Log:
minDistanceGC is not depending on OC (maxDistance).  Thanks to skg

Modified: trunk/src/CacheWolf/imp/OCXMLImporterScreen.java
===================================================================
--- trunk/src/CacheWolf/imp/OCXMLImporterScreen.java	2009-12-20 10:55:53 UTC (rev 2373)
+++ trunk/src/CacheWolf/imp/OCXMLImporterScreen.java	2009-12-20 15:19:12 UTC (rev 2374)
@@ -83,19 +83,7 @@
 		if ((options & MINDIST) > 0) {
 			this.addNext(distLbl = new mLabel(MyLocale.getMsg(1628,"min. Distance:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 			minDistanceInput = new mInput();
-			String dist1="0";
-			String dist2="0";
-			if (isGC) {
-				dist1 = Global.getProfile().getMinDistGC();
-				dist2 = Global.getProfile().getDistOC();
-			} else {
-				dist1 = Global.getProfile().getDistOC();
-				dist2 = Global.getProfile().getMinDistGC();
-			}
-			if ( dist1.equals("") || dist1.equals("0") || dist1.equals("0.0") ) {
-				dist1 = dist2;
-			}
-			minDistanceInput.setText(dist1);
+			minDistanceInput.setText(Global.getProfile().getMinDistGC());
 			this.addNext(minDistanceInput,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 			this.addLast(new mLabel(" km/mi."),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 		}



From araber95 at mail.berlios.de  Mon Dec 21 09:22:30 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Mon, 21 Dec 2009 09:22:30 +0100
Subject: [Cachewolf-svn] r2375 - trunk/src/CacheWolf
Message-ID: <200912210822.nBL8MUXC022384@sheep.berlios.de>

Author: araber95
Date: 2009-12-21 09:22:27 +0100 (Mon, 21 Dec 2009)
New Revision: 2375

Modified:
   trunk/src/CacheWolf/DataMover.java
   trunk/src/CacheWolf/Rebuild.java
   trunk/src/CacheWolf/myTableControl.java
Log:
some more speed

Modified: trunk/src/CacheWolf/DataMover.java
===================================================================
--- trunk/src/CacheWolf/DataMover.java	2009-12-20 15:19:12 UTC (rev 2374)
+++ trunk/src/CacheWolf/DataMover.java	2009-12-21 08:22:27 UTC (rev 2375)
@@ -320,7 +320,7 @@
 		 Deleter(String title) {
 			 this.title=title;
 			 FileBugfix destPath=new FileBugfix(profile.dataDir);
-			 destFileList= destPath.list(null,FileBase.LIST_FILES_ONLY);
+			 destFileList= destPath.list(null,FileBase.LIST_FILES_ONLY|FileBase.LIST_DONT_SORT);
 		 }
 		 public void doIt(int i,CacheHolder srcHolder) {
 			 srcDB.removeElementAt(i);
@@ -333,9 +333,9 @@
 			 this.title=title;
 			 this.dstProfile=dstProfile;
 			 FileBugfix srcPath=new FileBugfix(profile.dataDir);
-			 srcFileList= srcPath.list(null,FileBase.LIST_FILES_ONLY);
+			 srcFileList= srcPath.list(null,FileBase.LIST_FILES_ONLY|FileBase.LIST_DONT_SORT);
 			 FileBugfix destPath=new FileBugfix(dstProfile.dataDir);
-			 destFileList= destPath.list(null,FileBase.LIST_FILES_ONLY);
+			 destFileList= destPath.list(null,FileBase.LIST_FILES_ONLY|FileBase.LIST_DONT_SORT);
 		 }
 		 public void doIt(int i,CacheHolder srcHolder) {
 			srcHolder.save();
@@ -369,9 +369,9 @@
 			 this.title=title;
 			 this.dstProfile=dstProfile;
 			 FileBugfix srcPath=new FileBugfix(profile.dataDir);
-			 srcFileList= srcPath.list(null,FileBase.LIST_FILES_ONLY);
+			 srcFileList= srcPath.list(null,FileBase.LIST_FILES_ONLY|FileBase.LIST_DONT_SORT);
 			 FileBugfix destPath=new FileBugfix(dstProfile.dataDir);
-			 destFileList= destPath.list(null,FileBase.LIST_FILES_ONLY);
+			 destFileList= destPath.list(null,FileBase.LIST_FILES_ONLY|FileBase.LIST_DONT_SORT);
 		 }
 		 public void doIt(int i,CacheHolder srcHolder) {
 			 srcDB.removeElementAt(i);

Modified: trunk/src/CacheWolf/Rebuild.java
===================================================================
--- trunk/src/CacheWolf/Rebuild.java	2009-12-20 15:19:12 UTC (rev 2374)
+++ trunk/src/CacheWolf/Rebuild.java	2009-12-21 08:22:27 UTC (rev 2375)
@@ -1,6 +1,7 @@
 package CacheWolf;
 
 import CacheWolf.utils.FileBugfix;
+import ewe.io.FileBase;
 import ewe.io.FileReader;
 import ewe.sys.Handle;
 import ewe.ui.FormBase;
@@ -82,7 +83,7 @@
 			pbf.setTask(h,MyLocale.getMsg(213,"Deleting orphans"));
 			DataMover dm=new DataMover();
 			int nDeleted=0;
-			String[] CacheFiles = new FileBugfix(prof.dataDir).list("*.*", ewe.io.FileBase.LIST_FILES_ONLY);
+			String[] CacheFiles = new FileBugfix(prof.dataDir).list(null, FileBase.LIST_FILES_ONLY|FileBase.LIST_DONT_SORT);
 			for (i=0; i<xmlFiles.length; i++) {
 				if (xmlFiles[i]!=null){
 					h.progress = ((float)nDeleted++)/(float)(orphans-nAdded);

Modified: trunk/src/CacheWolf/myTableControl.java
===================================================================
--- trunk/src/CacheWolf/myTableControl.java	2009-12-20 15:19:12 UTC (rev 2374)
+++ trunk/src/CacheWolf/myTableControl.java	2009-12-21 08:22:27 UTC (rev 2375)
@@ -6,6 +6,7 @@
 import ewe.ui.*;
 import ewe.fx.*;
 import ewe.io.File;
+import ewe.io.FileBase;
 import ewe.io.IOException;
 
 /**
@@ -204,7 +205,7 @@
 					pbf.exec();
 					int nDeleted=0;
 					int size=cacheDB.size();
-					String[] CacheFiles = new FileBugfix(profile.dataDir).list("*.*", ewe.io.FileBase.LIST_FILES_ONLY);
+					String[] CacheFiles = new FileBugfix(profile.dataDir).list(null, FileBase.LIST_FILES_ONLY|FileBase.LIST_DONT_SORT);
 					for(int i = size-1; i >=0; i--){// Start Counting down, as the size decreases with each deleted cache
 						ch = cacheDB.get(i);
 						if(ch.is_Checked && (ch.isVisible() || deleteFiltered)) {



From araber95 at mail.berlios.de  Mon Dec 21 09:51:21 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Mon, 21 Dec 2009 09:51:21 +0100
Subject: [Cachewolf-svn] r2376 - trunk/src/CacheWolf
Message-ID: <200912210851.nBL8pL29024708@sheep.berlios.de>

Author: araber95
Date: 2009-12-21 09:51:20 +0100 (Mon, 21 Dec 2009)
New Revision: 2376

Modified:
   trunk/src/CacheWolf/ShowCacheInBrowser.java
Log:
should now work on PDAs and Windows (and others) in all cases!

Modified: trunk/src/CacheWolf/ShowCacheInBrowser.java
===================================================================
--- trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-12-21 08:22:27 UTC (rev 2375)
+++ trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-12-21 08:51:20 UTC (rev 2376)
@@ -210,7 +210,8 @@
 			//detfile.print(tpl.output());
 			detfile.close();
 			try {
-				CWWrapper.exec(Global.getPref().browser, "file://"+saveTo);
+				// on pda surrounding quotes " will be converted to %22 (and a %22file:// does not work)
+				CWWrapper.exec(Global.getPref().browser, "file://"+STRreplace.replace(saveTo," ","%20"),false,false);
 			} catch (IOException ex) {
 				(new MessageBox(MyLocale.getMsg(321,"Error"),
 						MyLocale.getMsg(1034,"Cannot start browser!") + "\n" + ex.toString() + "\n" +



From araber95 at mail.berlios.de  Tue Dec 22 11:04:08 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Tue, 22 Dec 2009 11:04:08 +0100
Subject: [Cachewolf-svn] r2377 - in trunk: res_noewe/languages src/CacheWolf
Message-ID: <200912221004.nBMA48Ob016660@sheep.berlios.de>

Author: araber95
Date: 2009-12-22 11:04:03 +0100 (Tue, 22 Dec 2009)
New Revision: 2377

Modified:
   trunk/res_noewe/languages/DE.cfg
   trunk/res_noewe/languages/EN.cfg
   trunk/res_noewe/languages/FR.cfg
   trunk/res_noewe/languages/NL.cfg
   trunk/res_noewe/languages/PL.cfg
   trunk/src/CacheWolf/Rebuild.java
Log:
deleting caches not in profile is no longer necessary like before
(alternative move to a new profile to see remaining files)

Modified: trunk/res_noewe/languages/DE.cfg
===================================================================
--- trunk/res_noewe/languages/DE.cfg	2009-12-21 08:51:20 UTC (rev 2376)
+++ trunk/res_noewe/languages/DE.cfg	2009-12-22 10:04:03 UTC (rev 2377)
@@ -834,6 +834,7 @@
 		5519=Information
 		5520=Nur das eingestellte Maximum an Caches wurde geladen.%0aWiederholen sie das Spidern sp%e4ter um weitere Caches zu laden.%0aEs wurden keine vorhandenen Caches aktualisiert.
 		5521=Seite+
+		5522=Pr%fcfen auf %e4ltere XML-Dateien ( ohne <CACHE... /> ) ?
 		6000=Guid
 		6001=Name
 		6002=Track#
@@ -924,15 +925,15 @@
 		7121=Daten per GPSD empfangen von
 		7122=Die GPS-Daten werden per GPSD von einem anderen Server oder localhost empfangen (statt per seriellem Port)
 		7200=Aufruf: CacheWolf [-c <Pfad zur Einstellungsdatei>] [-debug]
-        7300=Stra%dfe/POI
-        7301=Stadt
-        7302=Suchen
-        7303=Abbr.
-        7304=berlin, deutschland
-        7305=Hauptbahnhof
-        7306=suche...
-        7307=abgebrochen durch Nutzer
-        7308=Fehler bei der online Verbindung
+        	7300=Stra%dfe/POI
+        	7301=Stadt
+        	7302=Suchen
+        	7303=Abbr.
+        	7304=berlin, deutschland
+        	7305=Hauptbahnhof
+        	7306=suche...
+        	7307=abgebrochen durch Nutzer
+        	7308=Fehler bei der online Verbindung
 		{..}
 	{..}
 {..}

Modified: trunk/res_noewe/languages/EN.cfg
===================================================================
--- trunk/res_noewe/languages/EN.cfg	2009-12-21 08:51:20 UTC (rev 2376)
+++ trunk/res_noewe/languages/EN.cfg	2009-12-22 10:04:03 UTC (rev 2377)
@@ -822,6 +822,7 @@
 		5519=Information
 		5520=Only the given maximum of caches were loaded.%0aRepeat spidering later to load more caches.%0aNo already existing caches were updated.
 		5521=Page+
+		5522=Check for older xml-Files ( without <CACHE... /> )?
 		6000=Guid
 		6001=Name
 		6002=track#
@@ -831,7 +832,7 @@
 		6006=From Date
 		6007=From Log
 		6008=To Prof
-	  6009=To Wpt
+	  	6009=To Wpt
 		6010=To Date
 		6011=To Log
 		6015=*** OTHER ***
@@ -907,15 +908,15 @@
 		7121=Receive GPS from gpsd host
 		7122=GPS data will be received from a gpsd server, not from a serial port
 		7200=Usage: CacheWolf [-c <path to pref.xml>] [-debug]
-        7300=Street/POI
-        7301=City
-        7302=Search
-        7303=Cancel
-        7304=new york, usa
-        7305=wallstreet
-        7306=searching...
-        7307=Canceled by user
-        7308=Could not connect
+        	7300=Street/POI
+        	7301=City
+        	7302=Search
+        	7303=Cancel
+        	7304=new york, usa
+        	7305=wallstreet
+        	7306=searching...
+        	7307=Canceled by user
+        	7308=Could not connect
 		{..}
 	{..}
 {..}

Modified: trunk/res_noewe/languages/FR.cfg
===================================================================
--- trunk/res_noewe/languages/FR.cfg	2009-12-21 08:51:20 UTC (rev 2376)
+++ trunk/res_noewe/languages/FR.cfg	2009-12-22 10:04:03 UTC (rev 2377)
@@ -820,6 +820,13 @@
 		5513=Chargeant:+
 		5514=%0aTravel Bug:+
 		5515=Erreur en chargeant la cache.%0aMerci de v%e9rifier votre connexion internet..%0aContinuer d'essayer?
+		5516=+descriptions cache%0ane pouvait pas %eatre charg%e9.
+		5517=Spider mises %e0 jour?
+		5518=+caches en base de donn%e9es ont besoin d'une mise %e0 jour. Mettre %e0 jour maintenant?
+		5519=Information
+		5520=Seulement le maximum compte tenu des caches ont %e9t%e9 charg%e9s.%0aR%e9p%e9tez spidering plus tard %e0 la charge des caches plus.%0aNo caches d%e9j%e0 existants ont %e9t%e9 mis %e0 jour.
+		5521=Page+
+		5522=V%e9rifier les plus %e2g%e9s fichiers XML (sans <CACHE... />)?
 		6000=Guid
 		6001=Nom
 		6002=Track#
@@ -886,14 +893,14 @@
 		7021=Ce type de version
 		7022=Type de version
 		7023=Erreur en t%e9l%e9chargeant les informations de version
-        7300=Street / POI
-        7301=Ville
-        7302=Recherche
-        7303=Annuler
-        7304=paris
-        7305=avenue des champs-elysees
-        7306=Recherche en cours...
-        7307=Annul%e9 par l'utilisateur
-        7308=Impossible de se connecter		{..}
+        	7300=Street / POI
+        	7301=Ville
+        	7302=Recherche
+        	7303=Annuler
+        	7304=paris
+        	7305=avenue des champs-elysees
+        	7306=Recherche en cours...
+        	7307=Annul%e9 par l'utilisateur
+        	7308=Impossible de se connecter		{..}
 	{..}
 {..}

Modified: trunk/res_noewe/languages/NL.cfg
===================================================================
--- trunk/res_noewe/languages/NL.cfg	2009-12-21 08:51:20 UTC (rev 2376)
+++ trunk/res_noewe/languages/NL.cfg	2009-12-22 10:04:03 UTC (rev 2377)
@@ -332,8 +332,8 @@
 		1025=Kan middelpunt niet toepassen (verkeerde GPS co%f6rdinaten).
 		1028=)?
 		1029=Er zijn verwinkte maar niet zichtbare Waypoints.%0a(Caches:+
-        1030=, additionele Waypoints:+
-        1031=Deeze ook verwijdern?
+		1030=, additionele Waypoints:+
+		1031=Deeze ook verwijdern?
 		1032=Path to browser:
 		1033=is incorrect!
 		1034=Cannot start browser!
@@ -627,6 +627,14 @@
 		5512=+caches
 		5513=Bezig met laden:+
 		5514=%0aTravelbug
+		5515=Failed to load-cache.%0aPlease Controleer je internetverbinding.%0aRetry?
+		5516=+cache beschrijvingen%0acould niet worden geladen.
+		5517=Spider updates?
+		5518=+caches in de database moet een update. Update nu?
+		5519=Informatie
+		5520=Alleen de gegeven maximum van caches waren geladen.%0aRepeat spideren later meer caches te laden.%0aNo reeds bestaande caches zijn bijgewerkt.
+		5521=Page+
+		5522=Controleer voor oudere xml-bestanden (zonder <CACHE... />)?
 		6000=Guid
 		6001=Naam
 		6002=Track#
@@ -676,15 +684,15 @@
 		6104=Cassiopeia
 		6105=Zwaan
 		6106=Zuiderkruis
-    7300=Straat / POI
-    7301=Stad
-    7302=Zoeken
-    7303=Annuleren
-    7304=Amsterdam
-    7305=centraal station
-    7306=zoeken...
-    7307=geannuleerd door gebruiker
-    7308=Kan geen verbinding
+		7300=Straat / POI
+		7301=Stad
+		7302=Zoeken
+		7303=Annuleren
+		7304=Amsterdam
+		7305=centraal station
+		7306=zoeken...
+		7307=geannuleerd door gebruiker
+		7308=Kan geen verbinding
     {..}
 	{..}
 {..}

Modified: trunk/res_noewe/languages/PL.cfg
===================================================================
--- trunk/res_noewe/languages/PL.cfg	2009-12-21 08:51:20 UTC (rev 2376)
+++ trunk/res_noewe/languages/PL.cfg	2009-12-22 10:04:03 UTC (rev 2377)
@@ -818,6 +818,7 @@
                 5519=Informacje
                 5520=Tylko zadane maksimum zostalo wczytane.%0aPowtorz pozniej by znalezc inne skrzynki.%0aZadna z dotychczasowych skrzynek nie zostala updateowana.
                 5521=Strona+
+                5522=Sprawdz starszych plik%f3w XML (bez <CACHE... />)?
                 6000=Przewodnik
                 6001=Nazwa
                 6002=sciezka#

Modified: trunk/src/CacheWolf/Rebuild.java
===================================================================
--- trunk/src/CacheWolf/Rebuild.java	2009-12-21 08:51:20 UTC (rev 2376)
+++ trunk/src/CacheWolf/Rebuild.java	2009-12-22 10:04:03 UTC (rev 2377)
@@ -9,7 +9,6 @@
 import ewe.ui.ProgressBarForm;
 
 public class Rebuild {
-	String [] xmlFiles;
 	private int cacheXmlVersion;
 	private int startOfCacheDetails;
 
@@ -22,81 +21,68 @@
 
 		myProgressBarForm pbf = new myProgressBarForm();
 		Handle h = new Handle();
-		pbf.setTask(h,MyLocale.getMsg(209,"Rebuilding index"));
-		pbf.exec();
 
-		FileBugfix file=new FileBugfix(Global.getProfile().dataDir);
-		xmlFiles=file.list("*.xml",0);
 		int orphans=0; // xml Files without entry in database : Changed to all entries!!!
 		int nAdded=0;  // caches added to database
-		for (i=0; i<xmlFiles.length; i++) {
-			int pos=xmlFiles[i].lastIndexOf('.');
-			if (pos<0) continue;
-			String wayPoint=xmlFiles[i].substring(0,pos).toUpperCase();
-			if (wayPoint.equalsIgnoreCase("index"))	// Check for index.xml and index.bak
-				xmlFiles[i]=null;   				// Remove (existing caches) or index.xml
-			else {
-				//ewe.sys.Vm.debug("Orphan: "+wayPoint);
-				orphans++;
-				int cacheIndex=prof.getCacheIndex(wayPoint);
-				if (cacheIndex > -1) {
-					// In older Versions of CW the <CACHE... /> line was not stored in the cache.xml
-					// therefore get it from the index.xml (prof.cacheDB) and put it into the cache.xml
-					getCacheDetails(prof.dataDir+xmlFiles[i]);
-					if (startOfCacheDetails < 0) {
-						CacheHolder ch=prof.cacheDB.get(cacheIndex);
-						ch.save();
+		boolean checkOlder;
+		MessageBox mBox = new MessageBox("", MyLocale.getMsg(5522,"Check for older Versions xml-Files ( without <CACHE... /> )") , FormBase.IDYES |FormBase.IDNO);
+		if (mBox.execute() == FormBase.IDOK){checkOlder=true;}
+		else {checkOlder=false;}
+		// still time consuming the list files
+		pbf.setTask(h, "Reading Directory, be patient");
+		pbf.exec();
+		h.progress=(float) 0.5;
+		h.changed();
+		String[] CacheFiles = new FileBugfix(prof.dataDir).list("*.xml", FileBase.LIST_FILES_ONLY|FileBase.LIST_DONT_SORT);
+		pbf.setTask(h,"checking XML-files");
+		for (i=0; i<CacheFiles.length; i++) {
+				int pos=CacheFiles[i].lastIndexOf('.');
+				if (pos<0) continue;
+				String wayPoint=CacheFiles[i].substring(0,pos).toUpperCase();
+				if (wayPoint.equalsIgnoreCase("index"))	// Check for index.xml and index.bak
+					CacheFiles[i]=null;   				// Remove (existing caches) or index.xml
+				else {
+					//ewe.sys.Vm.debug("Orphan: "+wayPoint);
+					orphans++;
+					h.progress = ((float)(orphans)/(float)CacheFiles.length);
+					h.changed();
+					if (checkOlder) {
+						int cacheIndex=prof.getCacheIndex(wayPoint);
+						if (cacheIndex > -1) {
+							// In older Versions of CW the <CACHE... /> line was not stored in the cache.xml
+							// therefore get it from the index.xml (prof.cacheDB) and put it into the cache.xml
+							getCacheDetails(prof.dataDir+CacheFiles[i]);
+							if (startOfCacheDetails < 0) {
+								CacheHolder ch=prof.cacheDB.get(cacheIndex);
+								ch.save();
+							}
+							// prof.cacheDB.removeElementAt(cacheIndex);
+						}
 					}
-					// prof.cacheDB.removeElementAt(cacheIndex);
 				}
-			}
 		}
 		prof.cacheDB.clear(); //easier than removeElementAt
+		pbf.setTask(h,MyLocale.getMsg(209,"Rebuilding index"));
 		if (orphans>0) { // At least one cache not in database
 			int nProcessed=0;
 			// Now do the actual work
-			for(i = 0; i<xmlFiles.length; i++){
-				if (xmlFiles[i]!=null) {
+			for(i = 0; i<CacheFiles.length; i++){
+				if (CacheFiles[i]!=null) {
 					h.progress = ((float)nProcessed++)/(float)(orphans);
 					h.changed();
-					String details=getCacheDetails(prof.dataDir+xmlFiles[i]);
+					String details=getCacheDetails(prof.dataDir+CacheFiles[i]);
 					if (details!=null) {
 						CacheHolder ch=new CacheHolder(details, cacheXmlVersion);
 						prof.cacheDB.add(ch);
 						nAdded++;
-						xmlFiles[i]=null;
-					} else Global.getPref().log("File "+xmlFiles[i]+" not in index.xml");
+						CacheFiles[i]=null;
+					} else Global.getPref().log("File "+CacheFiles[i]+" not in index.xml");
 				}
 				if (pbf.isClosed) break;
 			}
-			(new MessageBox(MyLocale.getMsg(327, "Information"),
-					  MyLocale.getMsg(210,"Caches deleted: ")+orphans+
-					  MyLocale.getMsg(211,"\nCaches added: ")+nAdded
-					, FormBase.OKB)).execute();
 			prof.buildReferences();
 			prof.saveIndex(Global.getPref(),true);
 		}
-		if (orphans!=nAdded && (new MessageBox(MyLocale.getMsg(327, "Information"),
-					MyLocale.getMsg(212,"Delete all .xml files not in index.xml and associated pictures"),
-					FormBase.YESB | FormBase.NOB)).execute()==FormBase.YESB) {
-			h = new Handle();
-			pbf.setTask(h,MyLocale.getMsg(213,"Deleting orphans"));
-			DataMover dm=new DataMover();
-			int nDeleted=0;
-			String[] CacheFiles = new FileBugfix(prof.dataDir).list(null, FileBase.LIST_FILES_ONLY|FileBase.LIST_DONT_SORT);
-			for (i=0; i<xmlFiles.length; i++) {
-				if (xmlFiles[i]!=null){
-					h.progress = ((float)nDeleted++)/(float)(orphans-nAdded);
-					h.changed();
-					int dotPos = xmlFiles[i].indexOf('.');
-					if (dotPos > 0) {
-					    // This may appear when there are directories in the profile
-					    String wayPoint=xmlFiles[i].substring(0,dotPos);
-					    dm.deleteCacheFiles(wayPoint,prof.dataDir,CacheFiles);
-					}
-				}
-			}
-		}
 		pbf.exit(0);
 	}
 



From araber95 at mail.berlios.de  Tue Dec 22 19:24:34 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Tue, 22 Dec 2009 19:24:34 +0100
Subject: [Cachewolf-svn] r2378 - in trunk: res_noewe/languages src/CacheWolf
	src/CacheWolf/imp
Message-ID: <200912221824.nBMIOYSr013103@sheep.berlios.de>

Author: araber95
Date: 2009-12-22 19:24:14 +0100 (Tue, 22 Dec 2009)
New Revision: 2378

Modified:
   trunk/res_noewe/languages/DE.cfg
   trunk/res_noewe/languages/EN.cfg
   trunk/res_noewe/languages/FR.cfg
   trunk/res_noewe/languages/NL.cfg
   trunk/res_noewe/languages/PL.cfg
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/imp/OCXMLImporter.java
Log:
updating archived if available
changing some denglish loads

Modified: trunk/res_noewe/languages/DE.cfg
===================================================================
--- trunk/res_noewe/languages/DE.cfg	2009-12-22 10:04:03 UTC (rev 2377)
+++ trunk/res_noewe/languages/DE.cfg	2009-12-22 18:24:14 UTC (rev 2378)
@@ -435,27 +435,27 @@
 		1512=Wegpunkt
 		1513=Kann Karte nicht ohne g%fcltige Koordinaten anzeigen - Bitte Koordinaten als Ziel, Zentrum oder im gew%e4hlten Cache eingeben oder GPS starten
 		1514=Kann Entfernungen nicht neuberechnen, weil keine GPS-Position gesetzt ist (kein GPS-Empfang ist/war)
-		1600=+Download
+		1600=Laden von%20
 		1601=max. Abstand:
-		1602=Bilder downloaden
-		1603=Karten downloaden
+		1602=Bilder laden
+		1603=Karten laden
 		1604=Abbrechen
 		1605=OK
-		1606=OC Alle neu downloaden
+		1606=OC ignoriere Akt.Datum
 		1607=Update von opencaching erfolgreich
-		1608=Daten von opencaching downloaden...
+		1608=Daten von opencaching laden...
 		1609=Importiere Cache:
-		1610=download der fehlenden Karte
+		1610=fehlenden Karte laden
 		1611=Importiere Cachebeschreibung:
 		1612=Importiere Log:
 		1613=Importiere Bild:
 		1614=Fehler beim Entpacken der Update-Datei
 		1615=Fehler beim Interpretieren der Update-Datei, Status:
-		1616=Fehler: Konnte Update-Datei von opencaching.de nicht downloaden
+		1616=Fehler: Konnte Update-Datei von opencaching.de nicht laden
 		1617=Ignoriere Fehler in html-Cache-Beschreibung: "<img" ohne "src=" in cache+
 		1618=Ignoriere Fehler in Cache:+
-		1619=: konnte Bild von folgender URL nicht downloaden:+
-		1620=download eingebundener Bilder:+
+		1619=: konnte Bild von folgender URL nicht laden:+
+		1620=laden eingebundener Bilder:+
 		1621=Fehler beim Interpretieren%0a der Update-Datei,%0aDies ist vermutlich ein Fehler bei Opencaching.de%0aSp%e4ter erneut versuchen%0a Status:
 		1622=Gefundene Caches nicht laden
 		1623=Max. Anzahl:
@@ -511,7 +511,7 @@
 		1744=Kreuzpeilung mit identischen Peilungswinkeln nicht m?glich
 		1800=Georeferenzierte Karten herunterladen
 		1801=Kacheln herunterladen
-		1802=Download georeferenzierter Karten%0a W%e4hle Onlinedienst:
+		1802=Laden georeferenzierter Karten%0a W%e4hle Onlinedienst:
 		1803=f%fcr
 		1804=alle
 		1805=selektierte
@@ -643,7 +643,7 @@
 		2589=Taschenlampe notwendig
 		3000=Schlie%dfen
 		4000=Geladene Caches:+
-		4001=GPX-Dateien von Opencaching enthalten keine Informationen zu Bildern, sie werden nicht heruntergeladen. Am besten Caches von Opencaching holen per Men%fc /Anwendung/Import/Download von Opencaching
+		4001=GPX-Dateien von Opencaching enthalten keine Informationen zu Bildern, sie werden nicht heruntergeladen. Am besten Caches von Opencaching holen per Men%fc /Anwendung/Import/von Opencaching
 		4100=Verzeichnis w%e4hlen:
 		4101=Karten
 		4102=Kalibrierte Karten
@@ -773,8 +773,8 @@
 		4804= Spalte
 		4805=Kachel
 		4806=: Ignoriere Fehler:
-		4807=loadTo: Karte laden fehlgeschlagen: Kein http-redirect erhalten
-		4808=downloadImage: content-type:
+		4807=Karte laden fehlgeschlagen: Kein http-redirect erhalten
+		4808=Bild: Type:
 		4809= ist kein Bild, Anfang des Inhalts:
 		4810=Fehler beim Laden oder Speichern der Karte:%0a
 		4811=OnlineMapService: getMapInfoObjectInternal(Area maparea, Point pixelsize):%0a Diese Methode muss %fcberladen werden um sie zu nutzen
@@ -900,7 +900,7 @@
 		7020=Empfohlener Versionstyp
 		7021=Dieser Versiontyp
 		7022=Versionstyp
-		7023=Fehler beim Download der aktuellen Versionsinformationen
+		7023=Fehler beim Laden der aktuellen Versionsinformationen
 		7100=Einstellungen serieller Port
 		7101=Ports auflisten
 		7102=Baud:$b

Modified: trunk/res_noewe/languages/EN.cfg
===================================================================
--- trunk/res_noewe/languages/EN.cfg	2009-12-22 10:04:03 UTC (rev 2377)
+++ trunk/res_noewe/languages/EN.cfg	2009-12-22 18:24:14 UTC (rev 2378)
@@ -441,7 +441,7 @@
 		1603=Download maps
 		1604=Cancel
 		1605=OK
-		1606=OC redownload all
+		1606=OC ignore act.date
 		1607=Update from opencaching successful
 		1608=Downloading data from opencaching...
 		1609=Importing Cache:

Modified: trunk/res_noewe/languages/FR.cfg
===================================================================
--- trunk/res_noewe/languages/FR.cfg	2009-12-22 10:04:03 UTC (rev 2377)
+++ trunk/res_noewe/languages/FR.cfg	2009-12-22 18:24:14 UTC (rev 2378)
@@ -438,7 +438,7 @@
 		1603=T%e9l%e9charger cartes
 		1604=Annuler
 		1605=OK
-		1606=OC Ret%e9l%e9charger toutes
+		1606=OC ignorer mise %e0 jour
 		1607=Mise %e0 jour par opencaching r%e9ussi
 		1608=T%e9l%e9chargant donn%e9es par opencaching...
 		1609=Importe Cache:

Modified: trunk/res_noewe/languages/NL.cfg
===================================================================
--- trunk/res_noewe/languages/NL.cfg	2009-12-22 10:04:03 UTC (rev 2377)
+++ trunk/res_noewe/languages/NL.cfg	2009-12-22 18:24:14 UTC (rev 2378)
@@ -417,7 +417,7 @@
 		1603=Download kaarten
 		1604=Annuleren
 		1605=OK
-		1606=OC Redownload alles
+		1606=OC negeren actueel
 		1607=Update van Opencaching.de is gelukt.
 		1608=Download data van Opencaching.de.
 		1609=Importeren cache

Modified: trunk/res_noewe/languages/PL.cfg
===================================================================
--- trunk/res_noewe/languages/PL.cfg	2009-12-22 10:04:03 UTC (rev 2377)
+++ trunk/res_noewe/languages/PL.cfg	2009-12-22 18:24:14 UTC (rev 2378)
@@ -440,7 +440,7 @@
                 1603=Sciagnij mapy
                 1604=Anuluj
                 1605=OK
-                1606=Sciagnij ponownie wszystko
+                1606=OC ignorowac Data aktualizacji
                 1607=Update Z opencaching udany
                 1608=Sciagam dane Z opencaching...
                 1609=Importuje Skrzynke:

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-12-22 10:04:03 UTC (rev 2377)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-12-22 18:24:14 UTC (rev 2378)
@@ -1212,8 +1212,9 @@
     }
 
 	public void setAvailable(boolean is_available) {
-		Global.getProfile().notifyUnsavedChanges(is_available != this.available);		
+		Global.getProfile().notifyUnsavedChanges(is_available != this.available);
     	this.available = is_available;
+		if (this.available) {this.archived=false;}
     }
 
 	public boolean is_owned() {

Modified: trunk/src/CacheWolf/imp/OCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/OCXMLImporter.java	2009-12-22 10:04:03 UTC (rev 2377)
+++ trunk/src/CacheWolf/imp/OCXMLImporter.java	2009-12-22 18:24:14 UTC (rev 2378)
@@ -187,7 +187,7 @@
 			(new MessageBox("Error", "Coordinates for centre must be set", FormBase.OKB)).execute();
 			return;
 		}
-		OCXMLImporterScreen importOpt = new OCXMLImporterScreen( MyLocale.getMsg(1600, hostname + " Download"),
+		OCXMLImporterScreen importOpt = new OCXMLImporterScreen( MyLocale.getMsg(1600," Download") + hostname,
 																 OCXMLImporterScreen.ALL | OCXMLImporterScreen.DIST | OCXMLImporterScreen.IMAGES
 																 | OCXMLImporterScreen.HOST);
 		if (importOpt.execute() == FormBase.IDCANCEL) {	return; }
@@ -267,6 +267,7 @@
 		picCnt = 0;
 		try{
 			holder = null;
+			pref.log(url+"fetching");
 			file = fetch(url, "dummy");
 
 			//parse



From araber95 at mail.berlios.de  Tue Dec 22 21:01:07 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Tue, 22 Dec 2009 21:01:07 +0100
Subject: [Cachewolf-svn] r2379 - trunk/src/CacheWolf/imp
Message-ID: <200912222001.nBMK1730032503@sheep.berlios.de>

Author: araber95
Date: 2009-12-22 21:01:06 +0100 (Tue, 22 Dec 2009)
New Revision: 2379

Modified:
   trunk/src/CacheWolf/imp/SpiderGC.java
Log:
checking for updates break if max nr of caches reached

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2009-12-22 18:24:14 UTC (rev 2378)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2009-12-22 20:01:06 UTC (rev 2379)
@@ -548,53 +548,40 @@
 					if(gotDistance <= maxDistance){
 						if ( gotDistance >= minDistance &&
 							 directionOK(directions,getDirection(oneCacheDesc)) ){
-							String waypoint=getWP(oneCacheDesc);
-							CacheHolder existingCache;
-							if((existingCache=cacheDB.get(waypoint)) == null){
-								if ( (maxNumber > 0) && (cachesToLoad.size() >= maxNumber) ) {
+							String chWaypoint=getWP(oneCacheDesc);
+							ch=cacheDB.get(chWaypoint);
+							if(ch == null){
+								pref.log(chWaypoint+" added to load!");
+								cachesToLoad.add(chWaypoint);
+								if ((maxNumber > 0) && (cachesToLoad.size() >= maxNumber)) {
 									maxNumberAbort = true;
-
-									//add no more caches
-									maxDistance = 0;
-
-									//don't update existing caches, because list is not correct when aborting
-									cachesToUpdate.clear();
-								} else {
-									pref.log(waypoint+" added to load!");
-									cachesToLoad.add(waypoint);
-
-									//if we don't want to update caches, we can stop directly after adding the maximum of new caches.
-									if ( (pref.spiderUpdates == Preferences.NO) && (maxNumber > 0) && (cachesToLoad.size() >= maxNumber)) {
-										maxNumberAbort = true;
-
-										//add no more caches
-										maxDistance = 0;
-
-										//don't update existing caches, because list is not correct when aborting
-										cachesToUpdate.clear();
-									}
+									maxDistance = 0; //add no more caches
+									cachesToUpdate.clear(); //don't update existing caches, because list is not correct when aborting
 								}
 							} else {
-								pref.log(waypoint+" already in DB");
-								ch=existingCache;
-								// If the <strike> tag is used, the cache is marked as unavailable or archived
-								boolean is_archived_GC=oneCacheDesc.indexOf("<strike><font color=\"red\">")!=-1;
-								boolean is_available_GC=oneCacheDesc.indexOf("<strike>")==-1;
-								if (ch.is_archived()!=is_archived_GC) { // Update the database with the cache status
-									pref.log("Updating status of "+waypoint+" to "+(is_archived_GC?"archived":"not archived"));
-									if ( ch.is_archived() ) {
-										cachesToUpdate.put(ch.getWayPoint(), ch);
+								// if (pref.spiderUpdates != Preferences.NO) {
+									pref.log(chWaypoint+" already in DB");
+									// If the <strike> tag is used, the cache is marked as unavailable or archived
+									boolean is_archived_GC=oneCacheDesc.indexOf("<strike><font color=\"red\">")!=-1;
+									boolean is_available_GC=oneCacheDesc.indexOf("<strike>")==-1;
+									// CacheHolderDetail det = ch.getCacheDetails(true);
+									if (ch.is_archived()!=is_archived_GC) { // Update the database with the cache status
+										pref.log("Updating status of "+chWaypoint+" to "+(is_archived_GC?"archived":"not archived"));
+										if ( ch.is_archived() ) {
+											// is not yet in updateList
+											cachesToUpdate.put(chWaypoint, ch);
+										}
+										ch.setArchived(is_archived_GC);
+									} else if (ch.is_available()!=is_available_GC) { // Update the database with the cache status
+										pref.log("Updating status of "+chWaypoint+" to "+(is_available_GC?"available":"not available"));
+										ch.setAvailable(is_available_GC);
+									} else if (spiderAllFinds && !ch.is_found()) { // Update the database with the cache status
+										pref.log("Updating status of "+chWaypoint+" to found");
+										ch.setFound(true);
+									} else {
+										cachesToUpdate.remove( chWaypoint );
 									}
-									ch.setArchived(is_archived_GC);
-								} else if (ch.is_available()!=is_available_GC) { // Update the database with the cache status
-									pref.log("Updating status of "+waypoint+" to "+(is_available_GC?"available":"not available"));
-									ch.setAvailable(is_available_GC);
-								} else if (spiderAllFinds && !ch.is_found()) { // Update the database with the cache status
-									pref.log("Updating status of "+waypoint+" to found");
-									ch.setFound(true);
-								} else {
-									cachesToUpdate.remove( ch.getWayPoint() );
-								}
+								// }
 							}
 						}
 					} else maxDistance = 0;
@@ -1698,9 +1685,7 @@
 		return "";
 	}
 
-
 	final static String hex = ewe.util.TextEncoder.hex;
-
 	public String encodeUTF8URL(byte[] what) {
 		int max = what.length;
 		char [] dest = new char[6*max]; // Assume each char is a UTF char and encoded into 6 chars



From araber95 at mail.berlios.de  Wed Dec 23 21:22:22 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Wed, 23 Dec 2009 21:22:22 +0100
Subject: [Cachewolf-svn] r2380 - trunk
Message-ID: <200912232022.nBNKMMPf018988@sheep.berlios.de>

Author: araber95
Date: 2009-12-23 21:21:26 +0100 (Wed, 23 Dec 2009)
New Revision: 2380

Modified:
   trunk/cw-ppc2003.jnf
Log:
changing from /Xmx 24M to /Xmx 12M for WM2003 Version.

Modified: trunk/cw-ppc2003.jnf
===================================================================
--- trunk/cw-ppc2003.jnf	2009-12-22 20:01:06 UTC (rev 2379)
+++ trunk/cw-ppc2003.jnf	2009-12-23 20:21:26 UTC (rev 2380)
@@ -1 +1 @@
-command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D/Xmx%2B24M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DPocketPC%25252B2003&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%26addCommandLine%3D!
 true%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D/Xmx%252B24M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico
+command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D/Xmx%2B12M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DPocketPC%25252B2003&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%26addCommandLine%3D!
 true%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D/Xmx%252B12M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico



From araber95 at mail.berlios.de  Thu Dec 24 10:59:08 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Thu, 24 Dec 2009 10:59:08 +0100
Subject: [Cachewolf-svn] r2381 - trunk/src/CacheWolf/imp
Message-ID: <200912240959.nBO9x8jO013358@sheep.berlios.de>

Author: araber95
Date: 2009-12-24 10:59:06 +0100 (Thu, 24 Dec 2009)
New Revision: 2381

Modified:
   trunk/src/CacheWolf/imp/SpiderGC.java
Log:
bugfix  for load all finds

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2009-12-23 20:21:26 UTC (rev 2380)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2009-12-24 09:59:06 UTC (rev 2381)
@@ -398,10 +398,10 @@
 			direction=direction.replace('O', 'E'); // synonym for East
 			direction=direction.replace('Z', 'S'); // synonym for South
 			direction=direction.replace('P', 'S'); // synonym for South
-			directions=mString.split(direction, ',');
 
 			doNotgetFound = options.foundCheckBox.getState();
 		}
+		directions=mString.split(direction, ',');
 
 		int maxNumber = -1;
 		String maxNumberString = options.maxNumberInput.getText();



