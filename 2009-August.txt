From araber95 at mail.berlios.de  Tue Aug  4 10:28:11 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Tue, 4 Aug 2009 10:28:11 +0200
Subject: [Cachewolf-svn] r2069 - trunk/res_noewe/webmapservices
Message-ID: <200908040828.n748SBc0027589@sheep.berlios.de>

Author: araber95
Date: 2009-08-04 10:28:07 +0200 (Tue, 04 Aug 2009)
New Revision: 2069

Removed:
   trunk/res_noewe/webmapservices/de-st_photo.wms
   trunk/res_noewe/webmapservices/de-st_topo_10.wms
   trunk/res_noewe/webmapservices/de-st_topo_50.wms
Log:
Sachsen-Anhalt wms-server no longer exists. / I d'nt have a new address.

Deleted: trunk/res_noewe/webmapservices/de-st_photo.wms
===================================================================
--- trunk/res_noewe/webmapservices/de-st_photo.wms	2009-07-31 21:46:09 UTC (rev 2068)
+++ trunk/res_noewe/webmapservices/de-st_photo.wms	2009-08-04 08:28:07 UTC (rev 2069)
@@ -1,19 +0,0 @@
-TakenFromUrl:	http://www.lvermgeo.sachsen-anhalt.de/de/geoservice/viewer/main.htm
-GetCapabilitiesUrl:	http://lsa-st317.sachsen-anhalt.de/geodatenportal/servlet/gtEntryPoint?REQUEST=GetCapabilities&VERSION=1.1.1&SERVICE=WMS
-Name:	de.Sachsen-Anhalt photo
-MapType:	photo
-MainUrl:	http://lsa-st317.sachsen-anhalt.de/geodatenportal/servlet/gtEntryPoint?
-ServiceTypeUrlPart:	SERVICE=WMS 
-VersionUrlPart:	VERSION=1.1.1 
-CoordinateReferenceSystemCacheWolf:   31468
-CoordinateReferenceSystemUrlPart:   SRS=EPSG:31468
-RequestUrlPart:   REQUEST=GetMap
-LayersUrlPart:   LAYERS=layer_601
-StylesUrlPart:   STYLES=
-ImageFormatUrlPart:   FORMAT=image/png
-BoundingBoxTopLeftWGS84:   N 53.222636 E 10.5012
-BoundingBoxButtomRightWGS84:   N 50.5272 E 13.4957
-MinScale:   0.00001
-MaxScale:   24.95
-RecommendedScale:	1.0
-ImageFileExtension: .png 

Deleted: trunk/res_noewe/webmapservices/de-st_topo_10.wms
===================================================================
--- trunk/res_noewe/webmapservices/de-st_topo_10.wms	2009-07-31 21:46:09 UTC (rev 2068)
+++ trunk/res_noewe/webmapservices/de-st_topo_10.wms	2009-08-04 08:28:07 UTC (rev 2069)
@@ -1,20 +0,0 @@
-TakenFromUrl:	http://www.lvermgeo.sachsen-anhalt.de/de/geoservice/viewer/main.htm
-GetCapabilitiesUrl:	http://lsa-st317.sachsen-anhalt.de/geodatenportal/servlet/gtEntryPoint?REQUEST=GetCapabilities&VERSION=1.1.1&SERVICE=WMS
-Name:	de.Sachsen-Anhalt topo 10
-MapType:	topo
-MainUrl:	http://lsa-st317.sachsen-anhalt.de/geodatenportal/servlet/gtEntryPoint?
-#MainUrl:            http://geoportal.geodaten.sachsen-anhalt.de/geodatenportal/servlet/gtEntryPoint?
-ServiceTypeUrlPart:	SERVICE=WMS 
-VersionUrlPart:	VERSION=1.1.1 
-CoordinateReferenceSystemCacheWolf:   31468
-CoordinateReferenceSystemUrlPart:   SRS=EPSG:31468
-RequestUrlPart:   REQUEST=GetMap
-LayersUrlPart:   LAYERS=layer_603
-StylesUrlPart:   STYLES=
-ImageFormatUrlPart:   FORMAT=image/png
-BoundingBoxTopLeftWGS84:   N 53.2226 E 10.5012
-BoundingBoxButtomRightWGS84:   N 50.5272 E 13.4957
-MinScale:   0.000499
-MaxScale:   249.451559
-RecommendedScale:	1.0
-ImageFileExtension: .png 

Deleted: trunk/res_noewe/webmapservices/de-st_topo_50.wms
===================================================================
--- trunk/res_noewe/webmapservices/de-st_topo_50.wms	2009-07-31 21:46:09 UTC (rev 2068)
+++ trunk/res_noewe/webmapservices/de-st_topo_50.wms	2009-08-04 08:28:07 UTC (rev 2069)
@@ -1,20 +0,0 @@
-TakenFromUrl:	http://www.lvermgeo.sachsen-anhalt.de/de/geoservice/viewer/main.htm
-GetCapabilitiesUrl:	http://lsa-st317.sachsen-anhalt.de/geodatenportal/servlet/gtEntryPoint?REQUEST=GetCapabilities&VERSION=1.1.1&SERVICE=WMS
-Name:	de.Sachsen-Anhalt topo 50
-MapType:	topo
-MainUrl:	http://lsa-st317.sachsen-anhalt.de/geodatenportal/servlet/gtEntryPoint?
-#MainUrl:            http://geoportal.geodaten.sachsen-anhalt.de/geodatenportal/servlet/gtEntryPoint?
-ServiceTypeUrlPart:	SERVICE=WMS 
-VersionUrlPart:	VERSION=1.1.1 
-CoordinateReferenceSystemCacheWolf:   31468
-CoordinateReferenceSystemUrlPart:   SRS=EPSG:31468
-RequestUrlPart:   REQUEST=GetMap
-LayersUrlPart:   LAYERS=layer_607
-StylesUrlPart:   STYLES=
-ImageFormatUrlPart:   FORMAT=image/png
-BoundingBoxTopLeftWGS84:   N 53.2226 E 10.5012
-BoundingBoxButtomRightWGS84:   N 50.5272 E 13.4957
-MinScale:   4.989031
-MaxScale:   124.725779
-RecommendedScale:	5.0
-ImageFileExtension: .png 



From mik77 at mail.berlios.de  Wed Aug  5 11:08:35 2009
From: mik77 at mail.berlios.de (mik77 at mail.berlios.de)
Date: Wed, 5 Aug 2009 11:08:35 +0200
Subject: [Cachewolf-svn] r2070 - in trunk: res_noewe src/CacheWolf/imp
Message-ID: <200908050908.n7598ZhF026270@sheep.berlios.de>

Author: mik77
Date: 2009-08-05 11:08:22 +0200 (Wed, 05 Aug 2009)
New Revision: 2070

Modified:
   trunk/res_noewe/spider.def
   trunk/src/CacheWolf/imp/SpiderGC.java
Log:
- more specific unavailability detection
- better handling of owned caches for update detection
- todo: correct update detection when spidering only one type 

Modified: trunk/res_noewe/spider.def
===================================================================
--- trunk/res_noewe/spider.def	2009-08-04 08:28:07 UTC (rev 2069)
+++ trunk/res_noewe/spider.def	2009-08-05 09:08:22 UTC (rev 2070)
@@ -29,6 +29,7 @@
 # Version 4.5 - 20090315 strings for spidering country/state/logId
 # Version 4.6 - 20090406 Fix for country/state (did not work with US caches)
 # Version 4.7 - 20090521 Strings for single cache types added
+# Version 4.8 - 20090805 More specific unavailability detection
 #============================================================
 # A suffix of Rex indicates a regular expression
 # A suffix of ExStart indicates the start of an Extractor search pattern
@@ -78,7 +79,7 @@
 #--------------------------------------
 getPageByName      = http://www.geocaching.com/seek/cache_details.aspx?wp=
 fetchAllLogs       = &log=y
-cacheUnavailable   = This\ cache\ is\ temporarily\ unavailable
+cacheUnavailable   = <ul><font\ color="red"><li>This\ cache\ is\ temporarily\ unavailable.\ Read\ the\ logs\ below\ to\ read\ the\ status\ for\ this\ cache.</li></font></ul>
 cacheArchived      = This cache\ has\ been\ archived
 latLonRex          = <span\ id="LatLon"\ style="font-weight:bold;">((?s).*?)</span>
 shortDescRex       = <span\ id="ShortDescription">((?s).*?)</span>

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2009-08-04 08:28:07 UTC (rev 2069)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2009-08-05 09:08:22 UTC (rev 2070)
@@ -424,7 +424,7 @@
   					cachesToUpdate.put(ch.getWayPoint(), ch);
   				}
   			} else {
-  				if ( (!ch.is_archived()) && (ch.kilom <= distanceInKm) && !(doNotgetFound && ch.is_found()) && (ch.getWayPoint().substring(0,2).equalsIgnoreCase("GC")) ) {
+  				if ( (!ch.is_archived()) && (ch.kilom <= distanceInKm) && !(doNotgetFound && (ch.is_found() || ch.is_owned())) && (ch.getWayPoint().substring(0,2).equalsIgnoreCase("GC")) ) {
   					cachesToUpdate.put(ch.getWayPoint(), ch);
   				}
   			}



From greiol at mail.berlios.de  Wed Aug  5 23:30:04 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Wed, 5 Aug 2009 23:30:04 +0200
Subject: [Cachewolf-svn] r2071 - trunk/src/CacheWolf
Message-ID: <200908052130.n75LU4SP029007@sheep.berlios.de>

Author: greiol
Date: 2009-08-05 23:30:01 +0200 (Wed, 05 Aug 2009)
New Revision: 2071

Modified:
   trunk/src/CacheWolf/DetailsPanel.java
Log:
DetailsPanel:
- documented properties
- sorted imports
- rewrote constructor

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-08-05 09:08:22 UTC (rev 2070)
+++ trunk/src/CacheWolf/DetailsPanel.java	2009-08-05 21:30:01 UTC (rev 2071)
@@ -1,179 +1,313 @@
 package CacheWolf;
 
-import ewe.ui.*;
-import ewe.fx.*;
-import ewe.sys.*;
+import ewe.fx.Color;
+import ewe.fx.Dimension;
+import ewe.fx.Point;
+import ewe.fx.mImage;
+import ewe.sys.Convert;
+import ewe.sys.Time;
+import ewe.sys.Vm;
+import ewe.ui.CellConstants;
+import ewe.ui.CellPanel;
+import ewe.ui.Control;
+import ewe.ui.ControlConstants;
+import ewe.ui.ControlEvent;
+import ewe.ui.DataChangeEvent;
+import ewe.ui.DateChooser;
+import ewe.ui.Event;
+import ewe.ui.Form;
+import ewe.ui.FormBase;
+import ewe.ui.Gui;
+import ewe.ui.HtmlDisplay;
+import ewe.ui.Menu;
+import ewe.ui.MenuItem;
+import ewe.ui.MessageBox;
+import ewe.ui.ScrollBarPanel;
+import ewe.ui.ScrollablePanel;
+import ewe.ui.mButton;
+import ewe.ui.mChoice;
+import ewe.ui.mComboBox;
+import ewe.ui.mInput;
+import ewe.ui.mLabel;
+import ewe.ui.mTextPad;
 
 /**
- * Class to create the panel to show the cache details.<br>
- * Also allows for creation of a custom waypoint.<br>
+ * Class to create the panel to show the way point details.<br>
+ * Also allows for creation and editing of way points
  */
 public class DetailsPanel extends CellPanel {
 
-	mInput inpWaypoint = new mInput();
-	mInput inpName = new mInput();
-	mButton btnWayLoc = new mButton();
-	mInput inpHidden = new mInput();
-	mInput inpOwner = new mInput();
-	mButton btnDelete, btnCenter, btnAddDateTime;
-	mChoice chcType = new mChoice(CacheType.guiTypeStrings(), 0);
-	mChoice chcSize = new mChoice(CacheSize.guiSizeStrings(), 0);
+    // ===== GUI elements =====
+	/** way point id */
+	private static mInput inpWaypoint;
+	/** way point name */
+	private static mInput inpName;
+	/** way point hidden date */
+	private static mInput inpHidden;
+	/** way point owner */
+	private static mInput inpOwner;
+	/** way point coordinates, open change coordinates dialog */
+	private static mButton btnCoordinates;
+	/** set center to current way point */
+	private static mButton btnCenter;
+	/** add time stamp to notes */
+	private static mButton btnAddDateTime;
+	/** create a new way point */
+	private static mButton btnNewWpt;
+	/** show details for travel bus in way point */
+	private static mButton btnShowBug;
+	/** switch to moving map and center on way point coordinates */
+	private static mButton btnShowMap;
+	/** set way point as destination and switch to goto ppanel */
+	private static mButton btnGoto;
+	/** add a user picture to way point */
+	private static mButton btnAddPicture;
+	/** toggle blacklist status */
+	private static mButton btnBlack;
+	/** add or edit notes for way point */
+	private static mButton btnNotes;
+	/** set found date */
+	private static mButton btnFoundDate;
+	/** set hidden date */
+	private static mButton btnHiddenDate;
+	/** set terrain value */
+	private static mButton btnTerr;
+	/** set difficulty value */
+	private static mButton btnDiff;
+	/** drop down list with cache types */
+	private static mChoice chcType;
+	/** drop down list with container sizes */
+	private static mChoice chcSize;
+	/** select way point status */
+	private static mComboBox chcStatus;
+	/** toolbar panel */
+	private static CellPanel pnlTools;
+	/** notes for way point */
+	private static mTextPad waypointNotes;
+	/** shows number of additional way points */
+	private static mLabel lblAddiCount;
+	/** FIXME move to image broker? */
+	private static mImage imgBlack, imgBlackNo, imgShowBug, imgShowBugNo, imgNewWpt, imgGoto, imgNotes;
+	/** FIXME: what are they for? */
+	private static mImage imgShowMaps, imgAddImages;
 
-	mComboBox chcStatus = new mComboBox(new String[] { "",
-			MyLocale.getMsg(313, "Flag 1"), MyLocale.getMsg(314, "Flag 2"),
-			MyLocale.getMsg(315, "Flag 3"), MyLocale.getMsg(316, "Flag 4"),
-			MyLocale.getMsg(317, "Search"), MyLocale.getMsg(318, "Found"),
-			MyLocale.getMsg(319, "Not Found"), MyLocale.getMsg(320, "Owner") },
-			0);
+	// ===== data handles =====
+	/** FIXME: never used? */
+	private static CacheDB cacheDB;
+	/** waypoint to be displayed */
+	private static CacheHolder ch;
+	/** FIXME: never used? */
+	private static int dbIndex = -1;
+	/** panel to display waypoint attributes */
+	private static AttributesViewer attViewer;
+	/** preferences object */
+	private static Preferences pref;
+	/** waypoint profile */
+	private static Profile profile;
 
-	mButton btnNewWpt, btnShowBug, btnShowMap, btnGoto, btnAddPicture,
-			btnBlack, btnNotes, btnSave, btnCancel;
-	mButton btnFoundDate, btnHiddenDate;
-	CellPanel pnlTools = new CellPanel();
-	mTextPad mNotes;
+	// ===== flags =====
+	/** notes have changes */
+	private boolean dirty_notes;
+	/** details have changed FIXME: make this obsolete */
+	private boolean dirty_details;
+	/** cache is blacklisted FIXME: make this obsolete */
+	private boolean blackStatus;
+	/** blacklist status was changed by user FIXME: make this obsolete */
+	private boolean blackStatusChanged;
+	/** FIXME */
+	private boolean needsTableUpdate;
+	/** screen is VGA or better */
+	private boolean isBigScreen;
+	/** use big icons */
+	private boolean useBigIcons;
 
-	mImage imgBlack;
-	mImage imgBlackNo;
-	mImage imgShowBug, imgShowBugNo, imgNewWpt, imgGoto;
-	mImage imgShowMaps, imgAddImages, imgNotes;
-	mLabel lblAddiCount;
-	mButton btnTerr, btnDiff;
+    // TODO: move images to image broker
+    //mImage imgBlack, imgBlackNo, imgShowBug, imgShowBugNo, imgNewWpt, imgGoto, imgShowMaps, imgAddImages, imgNotes;
 
-	CacheDB cacheDB;
+	//FIXME: remove
 	CacheHolder thisCache;
-	int dbIndex = -1;
+	
+	/**
+	 * public constructor for detail panels. should only be called from main tab.
+	 */
+	public DetailsPanel() {
+        // ===== local objects =====
+		/** helper panels to organize layout */
+		CellPanel helperPanel1, helperPanel2, helperPanel3, helperPanel4, helperPanel5;
 
-	AttributesViewer attV;
+		// ===== initialize data handles =====
+		pref = Global.getPref();
+		profile = Global.getProfile();
+		cacheDB = profile.cacheDB;
 
-	private boolean dirty_notes = false;
-	private boolean dirty_details = false;
-	private boolean blackStatus = false;
-	private boolean blackStatusChanged = false;
-	private boolean needsTableUpdate = false;
-	private boolean isBigScreen = false;
+		// ===== initialize flags =====
+		dirty_notes = false;
+		dirty_details = false;
+		blackStatus = false;
+		blackStatusChanged = false;
+		needsTableUpdate = false;
+		isBigScreen = pref.isBigScreen;
+		useBigIcons = pref.useBigIcons;
 
-	Preferences pref; // Test
-	Profile profile;
+		// ===== initialize GUI objects =====
 
-	public DetailsPanel() {
-		pref = Global.getPref();
-		profile = Global.getProfile();
-		cacheDB = profile.cacheDB;
-		// //////////////////
-		// Tools
-		// //////////////////
-		String imagesize = "";
-		if (pref.useBigIcons)
-			imagesize = "_vga";
-		// Button 1: New Waypoint
-		pnlTools.addNext(btnNewWpt = new mButton(imgNewWpt = new mImage(
-				"newwpt" + imagesize + ".png")));
+		// ----- tools panel ------
+		pnlTools = new CellPanel();
+		btnNewWpt = new mButton(imgNewWpt = new mImage(useBigIcons ? "newwpt_vga.png" : "newwpt.png"));
+		// FIXME: get an image with proper transparency
+		imgNewWpt.transparentColor = new Color(255, 0, 0);
 		btnNewWpt.setToolTip(MyLocale.getMsg(311, "Create Waypoint"));
-		PenEvent.wantPenMoved(btnNewWpt, PenEvent.WANT_PEN_MOVED_ONOFF, true);
-		imgNewWpt.transparentColor = new Color(255, 0, 0);
-		// Button 2: Goto
-		pnlTools.addNext(btnGoto = new mButton(imgGoto = new mImage("goto" + imagesize + ".png")));// Goto.gif
-		// funzt
-		// manchmal
-		// nicht
+
+		btnGoto = new mButton(imgGoto = new mImage(useBigIcons ? "goto_vga.png"	: "goto.png"));
+		// FIXME: get an image with proper transparency
 		imgGoto.transparentColor = Color.White;
 		btnGoto.setToolTip(MyLocale.getMsg(345, "Goto these coordinates"));
-		// Button 3: Travelbugs
-		imgShowBug = new mImage("bug" + imagesize + ".gif");
-		imgShowBugNo = new mImage("bug_no" + imagesize + ".gif");
-		pnlTools.addNext(btnShowBug = new mButton(imgShowBugNo));
-		// btnShowBug.modify(Control.Disabled,0);
+
+		btnShowBug = new mButton(new mImage(useBigIcons ? "bug_no_vga.gif" : "bug_no.gif"));
 		btnShowBug.setToolTip(MyLocale.getMsg(346, "Show travelbugs"));
-		// Button 4: Show Map
-		pnlTools.addNext(btnShowMap = new mButton(imgShowMaps = new mImage("globe_small" + imagesize + ".gif")));
+
+		btnShowMap = new mButton(new mImage(useBigIcons ? "globe_small_vga.gif" : "globe_small.gif"));
 		btnShowMap.setToolTip(MyLocale.getMsg(347, "Show map"));
-		// Button 5: Add images
-		pnlTools.addNext(btnAddPicture = new mButton(imgAddImages = new mImage("images" + imagesize + ".gif")));
+
+		btnAddPicture = new mButton(imgAddImages = new mImage(useBigIcons ? "images_vga.gif" : "images.gif"));
 		btnAddPicture.setToolTip(MyLocale.getMsg(348, "Add user pictures"));
-		// Button 6: Toggle blacklist status
-		imgBlackNo = new mImage("no_black" + imagesize + ".png");
-		imgBlackNo.transparentColor = Color.Black;
-		imgBlack = new mImage("is_black" + imagesize + ".png");
-		imgBlack.transparentColor = Color.White;
-		pnlTools.addNext(btnBlack = new mButton(imgBlackNo));
+
+		btnBlack = new mButton(imgBlack = new mImage(useBigIcons ? "no_black_vga.png" : "no_black.png"));
+		// FIXME: get an image with proper transparency
+		imgBlack.transparentColor = Color.Black;
 		btnBlack.setToolTip(MyLocale.getMsg(349, "Toggle Blacklist status"));
-		// Button 7: Notes
-		pnlTools.addNext(btnNotes = new mButton(imgNotes = new mImage("notes" + imagesize + ".gif")));
+
+		btnNotes = new mButton(imgNotes = new mImage(useBigIcons ? "notes_vga.gif" : "notes.gif"));
+		// FIXME: get an image with proper transparency
 		imgNotes.transparentColor = Color.DarkBlue;
 		btnNotes.setToolTip(MyLocale.getMsg(351, "Add/Edit notes"));
-		// Button 8: Date/time stamp
-		pnlTools.addLast(btnAddDateTime = new mButton(new mImage("date_time" + imagesize + ".gif")));
+
+		btnAddDateTime = new mButton(new mImage(useBigIcons ? "date_time_vga.gif" : "date_time.gif"));
 		btnAddDateTime.setToolTip(MyLocale.getMsg(350, "Add timestamp to notes"));
-		// showMap.modify(Control.Disabled,0);
-		pnlTools.stretchFirstRow = true;
-		this.addLast(pnlTools, CellConstants.DONTSTRETCH, CellConstants.WEST).setTag(SPAN, new Dimension(3, 1));
-		;
+		
+        // ----- main body -----
 
-		// //////////////////
-		// Main body of screen
-		// //////////////////
+		helperPanel1 = new CellPanel();
+		helperPanel2 = new CellPanel();
+		helperPanel3 = new CellPanel();
+		helperPanel4 = new CellPanel();
+		helperPanel5 = new CellPanel();
+		attViewer = new AttributesViewer();
 
-		this.addNext(new mLabel(MyLocale.getMsg(300, "Type:")),	CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.NORTHWEST));
-		CellPanel line1Panel = new CellPanel();
+		chcType = new mChoice(CacheType.guiTypeStrings(), 0);
 		chcType.alwaysDrop = true;
-		line1Panel.addNext(chcType, CellConstants.HSTRETCH,	(CellConstants.HFILL | CellConstants.WEST));
+		chcSize = new mChoice(CacheSize.guiSizeStrings(), 0);
+		chcSize.alwaysDrop = true;
+		chcStatus = new mComboBox(new String[] { "",
+				MyLocale.getMsg(313, "Flag 1"), MyLocale.getMsg(314, "Flag 2"),
+				MyLocale.getMsg(315, "Flag 3"), MyLocale.getMsg(316, "Flag 4"),
+				MyLocale.getMsg(317, "Search"), MyLocale.getMsg(318, "Found"),
+				MyLocale.getMsg(319, "Not Found"),
+				MyLocale.getMsg(320, "Owner") }, 0);
+		inpWaypoint = new mInput();
+		inpName = new mInput();
 
-		line1Panel.addLast(btnDiff = new mButton(MyLocale.getMsg(1000, "D")	+ ": 5.5"), CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.EAST));
-		btnDiff.setPreferredSize(pref.fontSize * 3, chcSize.getPreferredSize(null).height);
+		btnCoordinates = new mButton();
+		btnCoordinates.setToolTip(MyLocale.getMsg(31415, "Edit coordinates"));
 
-		this.addLast(line1Panel, DONTSTRETCH, HFILL).setTag(CellConstants.SPAN,	new Dimension(2, 1));
+		inpOwner = new mInput();
+		inpHidden = new mInput();
+		inpHidden.modifyAll(DisplayOnly, 0);
 
-		this.addNext(new mLabel(MyLocale.getMsg(301, "Size:")),	CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.WEST));
-		CellPanel line2Panel = new CellPanel();
-		chcSize.alwaysDrop = true;
-		line2Panel.addNext(chcSize, CellConstants.HSTRETCH,	(CellConstants.HFILL | CellConstants.WEST));
+		// ===== put the controls onto the GUI =====
+		// ----- tools panel ------
+		pnlTools.addNext(btnNewWpt);
+		pnlTools.addNext(btnGoto);
+		pnlTools.addNext(btnShowBug);
+		pnlTools.addNext(btnShowMap);
+		pnlTools.addNext(btnAddPicture);
+		pnlTools.addNext(btnBlack);
+		pnlTools.addNext(btnNotes);
+		pnlTools.addLast(btnAddDateTime);
 
-		line2Panel.addLast(btnTerr = new mButton(MyLocale.getMsg(1001, "T")	+ ": 5.5"), CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.EAST));
+		pnlTools.stretchFirstRow = true;
+
+        // ----- helper panels -----
+
+		btnDiff = new mButton(MyLocale.getMsg(1000, "D") + ": 5.5");
+		btnDiff.setPreferredSize(pref.fontSize * 3, chcSize.getPreferredSize(null).height);
+		btnDiff.setToolTip(MyLocale.getMsg(31415, "Edit difficulty"));
+
+		btnTerr = new mButton(MyLocale.getMsg(1001, "T") + ": 5.5");
 		btnTerr.setPreferredSize(pref.fontSize * 3, chcSize.getPreferredSize(null).height);
-		this.addLast(line2Panel, DONTSTRETCH, HFILL).setTag(CellConstants.SPAN,	new Dimension(2, 1));
+		btnTerr.setToolTip(MyLocale.getMsg(31415, "Edit terrain"));
 
-		this.addNext(new mLabel(MyLocale.getMsg(302, "Waypoint:")),	CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.WEST));
-		line2Panel = new CellPanel();
-		line2Panel.addNext(inpWaypoint, CellConstants.HSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
-		line2Panel.addLast(lblAddiCount = new mLabel(MyLocale.getMsg(1044, "Addis") + ": 888"), CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.EAST));
-		this.addLast(line2Panel, DONTSTRETCH, HFILL).setTag(CellConstants.SPAN,	new Dimension(2, 1));
+		lblAddiCount = new mLabel(MyLocale.getMsg(1044, "Addis") + ": 888");
 
-		this.addNext(new mLabel(MyLocale.getMsg(303, "Name:")),	CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.WEST));
-		this.addLast(inpName.setTag(CellConstants.SPAN, new Dimension(2, 1)), CellConstants.DONTSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
+		btnFoundDate = new mButton(new mImage(useBigIcons ? "calendar_vga.png" : "calendar.png"));
+		btnFoundDate.setToolTip(MyLocale.getMsg(31415, "Set found date / time"));
 
-		this.addNext(new mLabel(MyLocale.getMsg(304, "Location:")),	CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.WEST));
-		this.addLast(btnWayLoc.setTag(CellConstants.SPAN, new Dimension(2, 1)), CellConstants.HSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
+		btnHiddenDate = new mButton(new mImage(useBigIcons ? "calendar_vga.png"	: "calendar.png"));
+		btnHiddenDate.setToolTip(MyLocale.getMsg(31415, "Set hidden date"));
 
-		this.addNext(new mLabel(MyLocale.getMsg(307, "Status:")), CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.WEST));
-		CellPanel cp = new CellPanel();
-		cp.addNext(chcStatus, CellConstants.HSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
-		cp.addLast(btnFoundDate = new mButton(new mImage("calendar" + imagesize + ".png")), DONTSTRETCH, DONTFILL);
-		this.addLast(cp, DONTSTRETCH, HFILL).setTag(CellConstants.SPAN,	new Dimension(2, 1));
+		helperPanel1.addNext(chcType, CellConstants.HSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
+		helperPanel1.addLast(btnDiff, CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.EAST));
 
-		this.addNext(new mLabel(MyLocale.getMsg(306, "Owner:")), CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.WEST));
-		this.addLast(inpOwner.setTag(CellConstants.SPAN, new Dimension(2, 1)), CellConstants.DONTSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
+		helperPanel2.addNext(chcSize, CellConstants.HSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
+		helperPanel2.addLast(btnTerr, CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.EAST));
 
-		this.addNext(new mLabel(MyLocale.getMsg(305, "Hidden on:")), CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.WEST));
-		CellPanel ip = new CellPanel();
-		ip.addNext(inpHidden, CellConstants.HSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
-		ip.addLast(btnHiddenDate = new mButton(new mImage("calendar" + imagesize + ".png")), DONTSTRETCH, DONTFILL);
-		this.addLast(ip, DONTSTRETCH, HFILL).setTag(CellConstants.SPAN, new Dimension(2, 1));
-		inpHidden.modifyAll(DisplayOnly, 0);
+		helperPanel3.addNext(inpWaypoint, CellConstants.HSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
+		helperPanel3.addLast(lblAddiCount, CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.EAST));
 
-		attV = new AttributesViewer();
-		this.addLast(attV);
+		helperPanel4.addNext(chcStatus, CellConstants.HSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
+		helperPanel4.addLast(btnFoundDate, DONTSTRETCH, DONTFILL);
 
-		if ((MyLocale.getScreenWidth() >= 400) && (MyLocale.getScreenHeight() >= 600)) {
-			isBigScreen = true;
-			this.addLast(new mLabel(MyLocale.getMsg(308, "Notes:")), CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.WEST));
-			mNotes = new mTextPad();
-			mNotes.modify(ControlConstants.NotEditable, 0);
-			this.addLast(new MyScrollBarPanel(mNotes));
+		helperPanel5.addNext(inpHidden, CellConstants.HSTRETCH,	(CellConstants.HFILL | CellConstants.WEST));
+		helperPanel5.addLast(btnHiddenDate, DONTSTRETCH, DONTFILL);
+
+		// ----- main body -----
+		addLast(pnlTools, CellConstants.DONTSTRETCH, CellConstants.WEST).setTag(SPAN, new Dimension(3, 1));
+
+		addNext(new mLabel(MyLocale.getMsg(300, "Type:")), CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.NORTHWEST));
+		addLast(helperPanel1, DONTSTRETCH, HFILL).setTag(CellConstants.SPAN, new Dimension(2, 1));
+
+		addNext(new mLabel(MyLocale.getMsg(301, "Size:")), CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.NORTHWEST));
+		addLast(helperPanel2, DONTSTRETCH, HFILL).setTag(CellConstants.SPAN, new Dimension(2, 1));
+
+		addNext(new mLabel(MyLocale.getMsg(302, "Waypoint:")), CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.WEST));
+		addLast(helperPanel3, DONTSTRETCH, HFILL).setTag(CellConstants.SPAN, new Dimension(2, 1));
+
+		addNext(new mLabel(MyLocale.getMsg(303, "Name:")), CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.WEST));
+		addLast(inpName.setTag(CellConstants.SPAN, new Dimension(2, 1)), CellConstants.DONTSTRETCH,	(CellConstants.HFILL | CellConstants.WEST));
+
+		addNext(new mLabel(MyLocale.getMsg(304, "Coordinates:")), CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.WEST));
+		addLast(btnCoordinates.setTag(CellConstants.SPAN, new Dimension(2, 1)),	CellConstants.HSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
+
+		addNext(new mLabel(MyLocale.getMsg(307, "Status:")), CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.WEST));
+		addLast(helperPanel4, DONTSTRETCH, HFILL).setTag(CellConstants.SPAN, new Dimension(2, 1));
+
+		addNext(new mLabel(MyLocale.getMsg(306, "Owner:")), CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.WEST));
+		addLast(inpOwner.setTag(CellConstants.SPAN, new Dimension(2, 1)), CellConstants.DONTSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
+
+		addNext(new mLabel(MyLocale.getMsg(305, "Hidden on:")), CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.WEST));
+		addLast(helperPanel5, DONTSTRETCH, HFILL).setTag(CellConstants.SPAN, new Dimension(2, 1));
+
+		addLast(attViewer);
+
+		//TODO: decide whether to still use the object without display on small screens to handle notes
+		if (isBigScreen) {
+			addLast(new mLabel(MyLocale.getMsg(308, "Notes:")), CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.WEST));
+			waypointNotes = new mTextPad();
+			waypointNotes.modify(ControlConstants.NotEditable, 0);
+			addLast(new MyScrollBarPanel(waypointNotes));
 		}
+
+		//FIXME: get rid of this
+		imgBlack = new mImage(useBigIcons?"is_black_vga.png":"is_black.png");
+		imgBlack.transparentColor = Color.White;
+		imgBlackNo = new mImage(useBigIcons ? "no_black_vga.png" : "no_black.png");
+		imgBlackNo.transparentColor = Color.Black;
+		imgShowBug = new mImage(useBigIcons ? "bug_vga.gif":"bug.gif");
+		imgShowBugNo = new mImage(useBigIcons ? "bug_no_vga.gif":"bug_no.gif");
 	}
 
 	public void clear() {
-		attV.clear();
+		attViewer.clear();
 	}
 
 	public void setNeedsTableUpdate(boolean tableUpdate) {
@@ -198,7 +332,7 @@
 		dirty_details = false;
 		inpWaypoint.setText(ch.getWayPoint());
 		inpName.setText(ch.getCacheName());
-		btnWayLoc.setText(ch.pos.toString());
+		btnCoordinates.setText(ch.pos.toString());
 		inpHidden.setText(ch.getDateHidden());
 		inpOwner.setText(ch.getCacheOwner());
 		if (ch.getCacheStatus().length() >= 10 && ch.getCacheStatus().charAt(4) == '-') {
@@ -231,7 +365,7 @@
 		btnShowBug.repaintNow();
 		chcSize.setInt(ch.getCacheSize());
 
-		attV.showImages(ch.getCacheDetails(true).attributes);
+		attViewer.showImages(ch.getCacheDetails(true).attributes);
 		if (ch.isAddiWpt() || ch.isCustomWpt()) {
 			btnTerr.setText(MyLocale.getMsg(1001, "T")+": -.-");
 			btnDiff.setText(MyLocale.getMsg(1000, "D")+": -.-");
@@ -277,7 +411,7 @@
 		lblAddiCount.setText(MyLocale.getMsg(1044, "Addis") + ": " + String.valueOf(addiCount));
 
 		if (isBigScreen)
-			mNotes.setText(ch.getExistingDetails().getCacheNotes());
+			waypointNotes.setText(ch.getExistingDetails().getCacheNotes());
 	}
 
 	/**
@@ -348,7 +482,7 @@
 						.getCacheDetails(true));
 				nsc.execute(this.getFrame(), Gui.CENTER_FRAME);
 				if (isBigScreen)
-					mNotes.setText(thisCache.getCacheDetails(true).getCacheNotes());
+					waypointNotes.setText(thisCache.getCacheDetails(true).getCacheNotes());
 			} else if (ev.target == btnShowMap) {
 				Global.mainTab.SwitchToMovingMap(thisCache.pos, true);
 				/*
@@ -419,8 +553,8 @@
 			} else if (ev.target == btnGoto) {
 				// FIXME: if something changed saveDirtyWaypoint();
 				Global.mainTab.gotoP.setDestinationAndSwitch(thisCache);
-			} else if (ev.target == btnWayLoc) {
-				CWPoint coords = new CWPoint(btnWayLoc.getText(), CWPoint.CW);
+			} else if (ev.target == btnCoordinates) {
+				CWPoint coords = new CWPoint(btnCoordinates.getText(), CWPoint.CW);
 				CoordsScreen cs = new CoordsScreen(true);
 				cs.setFields(coords, CWPoint.CW);
 				if (cs.execute() == FormBase.IDOK) {
@@ -428,7 +562,7 @@
 					coords = cs.getCoords();
 					Global.getProfile().notifyUnsavedChanges(!thisCache.pos.toString().equals(coords.toString()));
 					thisCache.pos.set(coords);
-					btnWayLoc.setText(coords.toString());
+					btnCoordinates.setText(coords.toString());
 					thisCache.LatLon = coords.toString();
 					// If the current centre is valid, calculate the distance and bearing to it
 					CWPoint centre = Global.getPref().curCentrePt;
@@ -486,7 +620,7 @@
 					dirty_details = true;
 					// profile.hasUnsavedChanges=true;
 				}
-			} else if (ev.target == this.btnTerr) {
+			} else if (ev.target == btnTerr) {
 				int returnValue;
 				TerrDiffForm tdf = new TerrDiffForm(true, 
 						decodeTerrDiff(btnTerr, 
@@ -495,12 +629,11 @@
 							)
 						);
 				returnValue = tdf.execute();
-				Vm.debug(returnValue+"");
 				if (returnValue == 1) {
 					btnTerr.setText(MyLocale.getMsg(1001, "T") + ": " + CacheTerrDiff.longDT(tdf.getDT()));
 					dirty_details = true;
 				}
-			} else if (ev.target == this.btnDiff) {
+			} else if (ev.target == btnDiff) {
 				int returnValue;
 				TerrDiffForm tdf = new TerrDiffForm(false, 
 						decodeTerrDiff(btnDiff, 
@@ -620,8 +753,8 @@
 			// set status also on addi wpts
 			thisCache.setAttributesToAddiWpts();
 		}
-		thisCache.setHard(decodeTerrDiff(this.btnDiff,MyLocale.getMsg(1000, "D"),thisCache.isCacheWpt()));
-		thisCache.setTerrain(decodeTerrDiff(this.btnTerr,MyLocale.getMsg(1001, "T"),thisCache.isCacheWpt()));
+		thisCache.setHard(decodeTerrDiff(btnDiff,MyLocale.getMsg(1000, "D"),thisCache.isCacheWpt()));
+		thisCache.setTerrain(decodeTerrDiff(btnTerr,MyLocale.getMsg(1001, "T"),thisCache.isCacheWpt()));
 		dirty_notes = false;
 		dirty_details = false;
 		setNeedsTableUpdate(false);



From engywuck at mail.berlios.de  Thu Aug  6 19:30:46 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Thu, 6 Aug 2009 19:30:46 +0200
Subject: [Cachewolf-svn] r2072 - trunk/src/CacheWolf
Message-ID: <200908061730.n76HUkx6022024@sheep.berlios.de>

Author: engywuck
Date: 2009-08-06 19:30:44 +0200 (Thu, 06 Aug 2009)
New Revision: 2072

Modified:
   trunk/src/CacheWolf/ImagePanel.java
Log:
Calculation of rows in imagePanel wasn't correct when user pictures have been involved. Therefore it could happen that not all picture were displayed.

Modified: trunk/src/CacheWolf/ImagePanel.java
===================================================================
--- trunk/src/CacheWolf/ImagePanel.java	2009-08-05 21:30:01 UTC (rev 2071)
+++ trunk/src/CacheWolf/ImagePanel.java	2009-08-06 17:30:44 UTC (rev 2072)
@@ -50,8 +50,17 @@
 			clearImages();
 			thumb_size = ((pref.myAppWidth-2*padding) / 3);
 			thumb_size = thumb_size - padding;
-			int rowCounter = cache.images.getDisplayImages(cache.getParent().getWayPoint()).size() + cache.userImages.size();
-			rowCounter = (rowCounter/3)+1;
+			int rowCounter1 = 0;
+			if (cache.images.getDisplayImages(cache.getParent().getWayPoint()).size()>0) {
+				rowCounter1 = cache.images.getDisplayImages(cache.getParent().getWayPoint()).size();
+				rowCounter1 = (rowCounter1/3)+1;
+			}
+			int rowCounter2 = 0;
+			if (cache.userImages.size()>0){
+				rowCounter2 = cache.userImages.size();
+				rowCounter2 = (rowCounter2/3)+1;
+			}
+			int rowCounter = rowCounter1 + rowCounter2;
 			Rect r = new Rect(0, 0, pref.myAppWidth, rowCounter*thumb_size+rowCounter*padding+padding);
 			this.virtualSize = r;
 			//this.setPreferredSize(pref.myAppWidth, rowCounter*thumb_size+rowCounter*padding+40);



From greiol at mail.berlios.de  Thu Aug  6 21:09:51 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Thu, 6 Aug 2009 21:09:51 +0200
Subject: [Cachewolf-svn] r2073 - in trunk/src: CacheWolf exp
Message-ID: <200908061909.n76J9pXi018950@sheep.berlios.de>

Author: greiol
Date: 2009-08-06 21:09:49 +0200 (Thu, 06 Aug 2009)
New Revision: 2073

Modified:
   trunk/src/CacheWolf/CacheType.java
   trunk/src/exp/GpxExportNg.java
Log:


Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-08-06 17:30:44 UTC (rev 2072)
+++ trunk/src/CacheWolf/CacheType.java	2009-08-06 19:09:49 UTC (rev 2073)
@@ -562,25 +562,25 @@
 	public static final String id2GpxString(byte id) throws IllegalArgumentException {
 		switch (id) {
 		case CW_TYPE_TRADITIONAL: return "Geocache|".concat(GC_GPX_TRADITIONAL);
-		case CW_TYPE_MULTI: return "Geocache|".concat(GC_GPX_MULTI);
-		case CW_TYPE_VIRTUAL: return "Geocache|".concat(GC_GPX_VIRTUAL);
-		case CW_TYPE_LETTERBOX: return "Geocache|".concat(GC_GPX_LETTERBOX);
-		case CW_TYPE_EVENT: return "Geocache|".concat(GC_GPX_EVENT);
-		case CW_TYPE_UNKNOWN: return "Geocache|".concat(GC_GPX_UNKNOWN);
-		case CW_TYPE_WEBCAM: return "Geocache|".concat(GC_GPX_WEBCAM);
-		case CW_TYPE_LOCATIONLESS: return "Geocache|".concat(GC_GPX_LOCATIONLESS);
-		case CW_TYPE_CITO: return "Geocache|".concat(GC_GPX_CITO);
-		case CW_TYPE_EARTH: return "Geocache|".concat(GC_GPX_EARTH);
-		case CW_TYPE_MEGA_EVENT: return "Geocache|".concat(GC_GPX_MEGA_EVENT);
-		case CW_TYPE_WHEREIGO: return "Geocache|".concat(GC_GPX_WHEREIGO);
+		case CW_TYPE_MULTI: return GC_GPX_MULTI;
+		case CW_TYPE_VIRTUAL: return GC_GPX_VIRTUAL;
+		case CW_TYPE_LETTERBOX: return GC_GPX_LETTERBOX;
+		case CW_TYPE_EVENT: return GC_GPX_EVENT;
+		case CW_TYPE_UNKNOWN: return GC_GPX_UNKNOWN;
+		case CW_TYPE_WEBCAM: return GC_GPX_WEBCAM;
+		case CW_TYPE_LOCATIONLESS: return GC_GPX_LOCATIONLESS;
+		case CW_TYPE_CITO: return GC_GPX_CITO;
+		case CW_TYPE_EARTH: return GC_GPX_EARTH;
+		case CW_TYPE_MEGA_EVENT: return GC_GPX_MEGA_EVENT;
+		case CW_TYPE_WHEREIGO: return GC_GPX_WHEREIGO;
 		case CW_TYPE_PARKING: return GC_GPX_PARKING;
 		case CW_TYPE_STAGE: return GC_GPX_STAGE;
 		case CW_TYPE_QUESTION: return GC_GPX_QUESTION;
 		case CW_TYPE_FINAL: return GC_GPX_FINAL;
 		case CW_TYPE_TRAILHEAD: return GC_GPX_TRAILHEAD;
 		case CW_TYPE_REFERENCE: return GC_GPX_REFERENCE;
-		case CW_TYPE_MAZE: return "Geocache|".concat(GC_GPX_MAZE);
-		case CW_TYPE_APE: return "Geocache|".concat(GC_GPX_APE);
+		case CW_TYPE_MAZE: return GC_GPX_MAZE;
+		case CW_TYPE_APE: return GC_GPX_APE;
 		case CW_TYPE_CUSTOM: return CW_GUISTR_CUSTOM;
 		default: throw new IllegalArgumentException("unmatched argument "+id+" in CacheSize id2GpxString()");
 		}

Modified: trunk/src/exp/GpxExportNg.java
===================================================================
--- trunk/src/exp/GpxExportNg.java	2009-08-06 17:30:44 UTC (rev 2072)
+++ trunk/src/exp/GpxExportNg.java	2009-08-06 19:09:49 UTC (rev 2073)
@@ -633,7 +633,7 @@
 		}
 
 		if (exportStyle != STYLE_GPX_COMPACT) {
-			ret.append("    <type>".concat(CacheType.id2GpxString(ch.getType())).concat("</type>\n"));
+			ret.append("    <type>".concat(ch.isCacheWpt()?"Geocache|":"").concat(CacheType.id2GpxString(ch.getType())).concat("</type>\n"));
 		}
 		
 		return ret.toString();



From greiol at mail.berlios.de  Thu Aug  6 21:18:05 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Thu, 6 Aug 2009 21:18:05 +0200
Subject: [Cachewolf-svn] r2074 - trunk/src/CacheWolf
Message-ID: <200908061918.n76JI5gI020097@sheep.berlios.de>

Author: greiol
Date: 2009-08-06 21:18:04 +0200 (Thu, 06 Aug 2009)
New Revision: 2074

Modified:
   trunk/src/CacheWolf/CacheType.java
Log:
fixed cache type for gpx export

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-08-06 19:09:49 UTC (rev 2073)
+++ trunk/src/CacheWolf/CacheType.java	2009-08-06 19:18:04 UTC (rev 2074)
@@ -561,7 +561,7 @@
 	 */
 	public static final String id2GpxString(byte id) throws IllegalArgumentException {
 		switch (id) {
-		case CW_TYPE_TRADITIONAL: return "Geocache|".concat(GC_GPX_TRADITIONAL);
+		case CW_TYPE_TRADITIONAL: return GC_GPX_TRADITIONAL;
 		case CW_TYPE_MULTI: return GC_GPX_MULTI;
 		case CW_TYPE_VIRTUAL: return GC_GPX_VIRTUAL;
 		case CW_TYPE_LETTERBOX: return GC_GPX_LETTERBOX;



From greiol at mail.berlios.de  Fri Aug  7 18:29:17 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Fri, 7 Aug 2009 18:29:17 +0200
Subject: [Cachewolf-svn] r2075 - trunk/src/exp
Message-ID: <200908071629.n77GTHbf028615@sheep.berlios.de>

Author: greiol
Date: 2009-08-07 18:29:16 +0200 (Fri, 07 Aug 2009)
New Revision: 2075

Modified:
   trunk/src/exp/GpxExportNg.java
Log:
change header so gsak will recognize additional waypoints together with caches in one file

Modified: trunk/src/exp/GpxExportNg.java
===================================================================
--- trunk/src/exp/GpxExportNg.java	2009-08-06 19:18:04 UTC (rev 2074)
+++ trunk/src/exp/GpxExportNg.java	2009-08-07 16:29:16 UTC (rev 2075)
@@ -94,10 +94,11 @@
 	/**  */
 	private String finderid;
 
+	// we need to fake desc to make clients like GSAK accept additional waypoints together with caches
 	final static String GPXHEADER = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
 			.concat("<gpx xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" version=\"1.0\" creator=\"CacheWolf\" xsi:schemaLocation=\"http://www.topografix.com/GPX/1/0 http://www.topografix.com/GPX/1/0/gpx.xsd http://www.groundspeak.com/cache/1/0 http://www.groundspeak.com/cache/1/0/cache.xsd\" xmlns=\"http://www.topografix.com/GPX/1/0\">\n")
 			.concat("<name>Waypoints for Cache Listings, Generated by CacheWolf</name>\n")
-			.concat("<desc>This is a list of waypoints for geocaches generated by CacheWolf</desc>\n")
+			.concat("<desc>This is an individual cache generated from Geocaching.com</desc>\n")
 			.concat("<author>Various users from geocaching.com and/or opencaching.de</author>\n")
 			.concat("<email>contact at cachewolf.de</email>\n")
 			.concat("<url>http://www.cachewolf.de/</url>\n")
@@ -743,6 +744,8 @@
 	 * @return
 	 */
 	public String formatHeader() {
+		//FIXME: extend profile to add <bounds minlat=\"50.91695\" minlon=\"6.876383\" maxlat=\"50.935183\" maxlon=\"6.918817\" /> 
+		//Global.getProfile().getSourroundingArea(false);
 		Transformer trans = new Transformer(true);
 		trans.add(new Regex("@@CREATEDATE@@", new Date().setFormat("yyyy-MM-dd").toString()));
 		return trans.replaceFirst(GPXHEADER);



From greiol at mail.berlios.de  Sat Aug  8 14:21:12 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Sat, 8 Aug 2009 14:21:12 +0200
Subject: [Cachewolf-svn] r2076 - trunk/src/CacheWolf
Message-ID: <200908081221.n78CLCeU008904@sheep.berlios.de>

Author: greiol
Date: 2009-08-08 14:21:10 +0200 (Sat, 08 Aug 2009)
New Revision: 2076

Modified:
   trunk/src/CacheWolf/SolverPanel.java
Log:
- declare all properties not accessed from outside as private
- remove unused properties
- remove disabled but remaining methods from old solver panel

Modified: trunk/src/CacheWolf/SolverPanel.java
===================================================================
--- trunk/src/CacheWolf/SolverPanel.java	2009-08-07 16:29:16 UTC (rev 2075)
+++ trunk/src/CacheWolf/SolverPanel.java	2009-08-08 12:21:10 UTC (rev 2076)
@@ -1,10 +1,24 @@
 package CacheWolf;
 
 
-import ewe.ui.*;
-import ewe.io.*;
-import ewe.fx.*;
-import ewe.util.*;
+import ewe.fx.Color;
+import ewe.fx.Dimension;
+import ewe.fx.Point;
+import ewe.ui.CellConstants;
+import ewe.ui.CellPanel;
+import ewe.ui.ControlConstants;
+import ewe.ui.ControlEvent;
+import ewe.ui.DataChangeEvent;
+import ewe.ui.Event;
+import ewe.ui.Gui;
+import ewe.ui.InputBox;
+import ewe.ui.Menu;
+import ewe.ui.MenuItem;
+import ewe.ui.PanelSplitter;
+import ewe.ui.SplittablePanel;
+import ewe.ui.mButton;
+import ewe.ui.mTextPad;
+import ewe.util.Vector;
 
 /**
 * Class to create the solver panel. Calls the parser and tokeniser and handles
@@ -13,19 +27,19 @@
 *	@see Tokenizer
 */
 public class SolverPanel extends CellPanel{
-	mButton mBtSolve;
-	mButton btnLoad, btnSave, btnSaveAs,btnWolfLang;
+	private mButton mBtSolve;
+	private mButton btnWolfLang;
+	//FIXME: encapsulate
 	mTextPad mText;
+	//FIXME: encapsulate
 	OutputPanel mOutput;
-	Preferences pref;
-	Profile profile;
-	String currFile;
-	Tokenizer tokeniser = new Tokenizer();
-	Parser parser = new Parser();
-	Vector msgFIFO = new Vector();
-	Menu mnuContext;
+	private Preferences pref;
+	private Tokenizer tokeniser = new Tokenizer();
+	private Parser parser = new Parser();
+	private Vector msgFIFO = new Vector();
+	private Menu mnuContext;
 	private String originalInstructions="";
-	mButton btnDegRad;
+	private mButton btnDegRad;
 	private CacheHolder ch; 
 	
 	public boolean isDirty() {
@@ -109,7 +123,6 @@
 	
 	public SolverPanel (Preferences p, Profile prof){
 		pref = p;
-		profile = prof;
 		SplittablePanel split = new SplittablePanel(PanelSplitter.VERTICAL);
 
 		programPanel = split.getNextPanel();
@@ -127,10 +140,7 @@
 		pnlButtons.equalWidths=true;
 		pnlStatButtons.addLast(pnlButtons,CellConstants.HSTRETCH,CellConstants.HFILL);
 		programPanel.addLast(pnlStatButtons,HSTRETCH,HFILL);
-		/*programPanel.addNext(btnLoad= new mButton(MyLocale.getMsg(1736,"Load")),CellConstants.DONTSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
-		programPanel.addNext(btnSave= new mButton(MyLocale.getMsg(1737,"Save")),CellConstants.DONTSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
-		programPanel.addLast(btnSaveAs= new mButton(MyLocale.getMsg(1738,"SaveAs")),CellConstants.DONTSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
-		*/
+
 		outputPanel.addLast(new MyScrollBarPanel(mOutput = new OutputPanel()));
 
 		this.addLast(split);
@@ -176,52 +186,6 @@
 				Global.getPref().solverDegMode=!Global.getPref().solverDegMode;
 				btnDegRad.setText(getSolverDegMode());
 			}
-/*			if(ev.target == btnLoad){
-				FileChooser fc = new FileChooser(FileChooser.OPEN, profile.dataDir);
-				
-				fc.addMask(currCh.wayPoint + ".wl");
-				fc.addMask("*.wl");
-				fc.setTitle("Select File");
-				if(fc.execute() != FileChooser.IDCANCEL){
-					currFile = fc.getChosen();
-					mText.setText("");
-					try {
-						InputStreamReader inp = new InputStreamReader( new FileInputStream(currFile));
-						mText.setText(inp.readAll());
-						inp.close();
-
-					} catch (Exception e) {
-						Vm.debug("Error reading file " + e.toString());
-					}
-				}
-			}
-			if((ev.target == btnSave) && (currFile != null)){
-				try {
-					OutputStreamWriter outp = new OutputStreamWriter( new FileOutputStream(currFile));
-					outp.write(mText.getText());
-					outp.close();
-				} catch (Exception e) {
-					Vm.debug("Error writing file ");
-				}
-			}
-			if((ev.target == btnSaveAs)||((ev.target == btnSave) && (currFile == null))){
-				FileChooser fc = new FileChooser(FileChooser.SAVE, profile.dataDir);
-				fc.addMask(currCh.wayPoint + ".wl");
-				fc.addMask("*.wl");
-				fc.setTitle("Select File");
-				if(fc.execute() != FileChooser.IDCANCEL){
-					File saveFile = fc.getChosenFile();
-					currFile = fc.getChosen();
-					try {
-						OutputStreamWriter outp = new OutputStreamWriter( new FileOutputStream(saveFile));
-						outp.write(mText.getText());
-						outp.close();
-					} catch (Exception e) {
-						Vm.debug("Error writing file ");
-					}
-				}
-			}
-*/			
 		}
 	}
 	



From engywuck at mail.berlios.de  Sat Aug  8 14:29:07 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Sat, 8 Aug 2009 14:29:07 +0200
Subject: [Cachewolf-svn] r2077 - trunk/src/CacheWolf
Message-ID: <200908081229.n78CT7sG009975@sheep.berlios.de>

Author: engywuck
Date: 2009-08-08 14:29:06 +0200 (Sat, 08 Aug 2009)
New Revision: 2077

Modified:
   trunk/src/CacheWolf/MainTab.java
   trunk/src/CacheWolf/RadarPanel.java
Log:
Fixing NullPointerException when entering radar panel from an empty list.

Modified: trunk/src/CacheWolf/MainTab.java
===================================================================
--- trunk/src/CacheWolf/MainTab.java	2009-08-08 12:21:10 UTC (rev 2076)
+++ trunk/src/CacheWolf/MainTab.java	2009-08-08 12:29:06 UTC (rev 2077)
@@ -239,7 +239,7 @@
 			break;
 		case 8:  // Cache Radar Panel
 			MyLocale.setSIPOff();
-			radarP.setParam(pref, cacheDB, ch.getWayPoint());
+			radarP.setParam(pref, cacheDB, ch);
 			radarP.drawThePanel();
 			break;
 		}

Modified: trunk/src/CacheWolf/RadarPanel.java
===================================================================
--- trunk/src/CacheWolf/RadarPanel.java	2009-08-08 12:21:10 UTC (rev 2076)
+++ trunk/src/CacheWolf/RadarPanel.java	2009-08-08 12:29:06 UTC (rev 2077)
@@ -21,7 +21,7 @@
 	int scaleKm = 30;
 	int centerX, centerY;
 	int height, width;
-	String selectedWaypoint = new String();
+	CacheHolder selectedWaypoint = null;
 	MainTab mt;
 	boolean penMoving = false;
 	int x1,y1,x2,y2 = 0;
@@ -50,7 +50,7 @@
 	* database. It also calculates the maximum size available for drawing 
 	* the radar.
 	*/
-	public void setParam(Preferences p, CacheDB db, String sWp){
+	public void setParam(Preferences p, CacheDB db, CacheHolder sWp){
 		selectedWaypoint = sWp;
 		pref = p;
 		cacheDB = db;
@@ -140,7 +140,7 @@
 					rpi.rownum = i;
 					rpi.setLocation(centerX+drX-7,centerY+drY-7);
 					iActP.addImage(rpi);
-					if(holder.getWayPoint().equals(selectedWaypoint)){ // Draw red circle around selected wpt
+					if(holder == selectedWaypoint){ // Draw red circle around selected wpt
 						Image imgCircle = new Image(20, 20);
 						Graphics gCircle = new Graphics(imgCircle);
 						gCircle.setColor(Color.Black);



From greiol at mail.berlios.de  Sat Aug  8 21:57:02 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Sat, 8 Aug 2009 21:57:02 +0200
Subject: [Cachewolf-svn] r2078 - trunk/src/CacheWolf
Message-ID: <200908081957.n78Jv2Rj015209@sheep.berlios.de>

Author: greiol
Date: 2009-08-08 21:57:01 +0200 (Sat, 08 Aug 2009)
New Revision: 2078

Modified:
   trunk/src/CacheWolf/DataMover.java
   trunk/src/CacheWolf/DataMoverForm.java
Log:
reduce visibility of properties
remove unreferenced properties
set forms text properties via constructor

Modified: trunk/src/CacheWolf/DataMover.java
===================================================================
--- trunk/src/CacheWolf/DataMover.java	2009-08-08 12:29:06 UTC (rev 2077)
+++ trunk/src/CacheWolf/DataMover.java	2009-08-08 19:57:01 UTC (rev 2078)
@@ -15,9 +15,9 @@
 */
 public class DataMover {
 
-	CacheDB srcDB, dstDB;
-	Preferences pref;
-	Profile profile;
+	private CacheDB srcDB;
+	private Preferences pref;
+	private Profile profile;
 	
 	public DataMover(){
 		pref = Global.getPref();
@@ -78,11 +78,7 @@
 	 * @return mode selected by the user
 	 */
 	private int showMessageBox(int actionTextNr, String defaultValue) {
-		DataMoverForm cpf = new DataMoverForm ();
-		cpf.setTickedText(makeTickedText ());
-		cpf.setVisibleText(makeVisibleText ());
-		cpf.setTickedVisibleText(makeVisibleTickedText ());
-		cpf.setFirstLineText(MyLocale.getMsg(actionTextNr, defaultValue));
+		DataMoverForm cpf = new DataMoverForm (makeTickedText (), makeVisibleText (),makeVisibleTickedText (), MyLocale.getMsg(actionTextNr, defaultValue) );
 		int dialogResult = cpf.execute(null, Gui.CENTER_FRAME);
 		if (dialogResult != FormBase.IDOK){
 			return -1;

Modified: trunk/src/CacheWolf/DataMoverForm.java
===================================================================
--- trunk/src/CacheWolf/DataMoverForm.java	2009-08-08 12:29:06 UTC (rev 2077)
+++ trunk/src/CacheWolf/DataMoverForm.java	2009-08-08 19:57:01 UTC (rev 2078)
@@ -5,18 +5,15 @@
 import ewe.ui.Event;
 import ewe.ui.Form;
 import ewe.ui.FormBase;
-import ewe.ui.mButton;
 import ewe.ui.mCheckBox;
 import ewe.ui.mLabel;
 
 public class DataMoverForm extends Form {
-	mCheckBox ticked, visible, tickedVisible;
-	CheckBoxGroup chkFormat = new CheckBoxGroup();
-	mButton yesButton;
-	mButton noButton;
-	mLabel firstLine;
+	private mCheckBox ticked, visible, tickedVisible;
+	private CheckBoxGroup chkFormat = new CheckBoxGroup();
+	private mLabel firstLine;
 	
-	public DataMoverForm ()
+	public DataMoverForm (String tickedText, String visibleText, String tickedVisibleText, String firstLineText)
 	{
 		title = MyLocale.getMsg(144,"Warning");
 		ticked = new mCheckBox (MyLocale.getMsg(254, "All visible"));
@@ -36,6 +33,10 @@
 		addLast (continueQuestion);
 		doButtons(FormBase.YESB|FormBase.CANCELB);
 		setModefromPref();
+		ticked.text = tickedText;
+		visible.text = visibleText;
+		tickedVisible.text = tickedVisibleText;
+		firstLine.text = firstLineText;
 	}
 
 	/**
@@ -62,22 +63,6 @@
 		super.onEvent(ev);
 	}
 	
-	public void setTickedText(String value) {
-		ticked.text = value;
-	}
-
-	public void setVisibleText(String value) {
-		visible.text = value;
-	}
-
-	public void setTickedVisibleText(String value) {
-		tickedVisible.text = value;
-	}
-	
-	public void setFirstLineText (String value){
-		firstLine.text = value;
-	}
-	
 	public int getMode (){
 		if (visible.getState()){
 			return 0;



From greiol at mail.berlios.de  Sun Aug  9 11:56:30 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Sun, 9 Aug 2009 11:56:30 +0200
Subject: [Cachewolf-svn] r2079 - trunk/src/CacheWolf
Message-ID: <200908090956.n799uUQT008074@sheep.berlios.de>

Author: greiol
Date: 2009-08-09 11:56:28 +0200 (Sun, 09 Aug 2009)
New Revision: 2079

Modified:
   trunk/src/CacheWolf/HttpConnection.java
   trunk/src/CacheWolf/StatusBar.java
Log:
organize imports
reduce visibility of properties and methods
remove unreferenced properties
comment out unreferenced methods

Modified: trunk/src/CacheWolf/HttpConnection.java
===================================================================
--- trunk/src/CacheWolf/HttpConnection.java	2009-08-08 19:57:01 UTC (rev 2078)
+++ trunk/src/CacheWolf/HttpConnection.java	2009-08-09 09:56:28 UTC (rev 2079)
@@ -1,4 +1,5 @@
 package CacheWolf;
+
 import ewe.data.Property;
 import ewe.data.PropertyList;
 import ewe.io.AsciiCodec;
@@ -53,31 +54,31 @@
 /**
 * The host to connect to.
 **/
-public String host;
+private String host;
 /**
 * The port to connect to.
 **/
-public int port;
+private int port;
 /**
 * The document to fetch/submit.
 **/
-public String document;
+private String document;
 /**
 * This is the command to be sent to the server. By default it is "GET". If you call
 * setPostData() and command is "GET" then the command will be replaced by "POST".
 **/
-public String command = "GET";
+private String command = "GET";
 /**
 * This is the version sent to the server. By default it is "HTTP/1.1". You could
 * change it to something else if necessary.
 **/
-public String requestVersion = "HTTP/1.1";
+private String requestVersion = "HTTP/1.1";
 /**
 * These are the properties that will be sent to the WebServer. These are sent after the
 * initial GET/POST line. This is initially null, so you will have to create a new PropertyList
 * for it, or use one of the setRequestorProperty() or addRequestorProperty() methods.
 **/
-public ewe.data.PropertyList requestorProperties;
+private ewe.data.PropertyList requestorProperties;
 /**
 * This is the list of properties for the server and document. It is only valid after a connection has
 * been made since it is sent by the server to the requestor. One properties that will always be in
@@ -98,19 +99,19 @@
 /**
 * Set this to true for keep alive mode requests.
 **/
-public boolean keepAliveMode;
+private boolean keepAliveMode;
 /**
 * This is the length of the document <b>read in</b>, valid after a connection call. If it is -1, then the
 * web server has not provided the length of the document.
 **/
-public int contentLength = -1;
+private int contentLength = -1;
 /**
 * This is the codec used when sending data to the server. 
 **/
-public TextCodec textCodec;
+private TextCodec textCodec;
 
-Stream bytesToPost;
-Object originalPostData;
+private Stream bytesToPost;
+private Object originalPostData;
 
 /**
  * Set these when the class is instantiated the first time.
@@ -121,6 +122,7 @@
 private static int proxyPort = Common.parseInt(Global.getPref().myproxyport);
 private static boolean useProxy = Global.getPref().proxyActive;
 
+//FIXME: why is this called immediately from preferences screen? shouldn't we read it from preferences instead?
 public static void setProxy(String proxyi, int proxyporti, boolean useproxyi) {
 	proxy = proxyi;
 	proxyPort = proxyporti;
@@ -129,11 +131,12 @@
 
 /**
  * This returns true if post data has been set for this connection.
+ * FIXME: unreferenced!
  */
-public boolean hasPostData()
-{
-	return bytesToPost != null;
-}
+//public boolean hasPostData()
+//{
+//	return bytesToPost != null;
+//}
 /**
  * Get a new HttpConnection whose parameters are copied from this HttpConnection
  * but which directs its request to a different host/document as directed by
@@ -165,7 +168,7 @@
 addRequestorProperty();
  */
 //===================================================================
-public PropertyList getRequestorProperties()
+private PropertyList getRequestorProperties()
 //===================================================================
 {
 	if (requestorProperties == null) requestorProperties = new PropertyList();
@@ -210,13 +213,14 @@
 /**
  * This sets the "Content-Length" requestor property to be the specified length.
  * @param length the number of bytes to be posted.
+ * FIXME: not referenced
  */
 //===================================================================
-public void setPostDataLength(int length)
-//===================================================================
-{
-	getRequestorProperties().set("Content-Length",Convert.toString(length));
-}
+//public void setPostDataLength(int length)
+////===================================================================
+//{
+//	getRequestorProperties().set("Content-Length",Convert.toString(length));
+//}
 /**
  * Set an exclusive requestor property. These are sent to the web server after the initial request line.
  * @param name The name of the property.
@@ -232,23 +236,25 @@
  * Add a non-exclusive requestor property. These are sent to the web server after the initial request line.
  * @param name The name of the property.
  * @param property The value of the property.
+ * FIXME: not referenced
  */
-//===================================================================
-public void addRequestorProperty(String name, String property)
-//===================================================================
-{
-	getRequestorProperties().add(name,property);
-}
+////===================================================================
+//public void addRequestorProperty(String name, String property)
+////===================================================================
+//{
+//	getRequestorProperties().add(name,property);
+//}
 /**
  * Set the default value of a requestor property. If the value is already set
  * this will have no effect. Otherwise the value will be set to defaultValue.
  * @param name the name of the property.
  * @param defaultValue the value to default to.
+ * FIXME: not referenced
  */
-public void defaultRequestorProperty(String name, String defaultValue)
-{
-	getRequestorProperties().defaultTo(name,defaultValue);
-}
+//public void defaultRequestorProperty(String name, String defaultValue)
+//{
+//	getRequestorProperties().defaultTo(name,defaultValue);
+//}
 protected Socket openSocket;
 protected Socket connectedSocket;
 
@@ -256,28 +262,30 @@
 * If a connection has already been made to the server, then you can call
 * this method and the HttpConnection protocol will be done over this Socket.
 * @param sock The already connected socket.
+* FIXME: not referenced
 */
-//===================================================================
-public void setAlreadyOpenSocket(Socket sock)
-//===================================================================
-{	
-	openSocket = sock;
-}
+////===================================================================
+//public void setAlreadyOpenSocket(Socket sock)
+////===================================================================
+//{	
+//	openSocket = sock;
+//}
 
 /**
  * Create a new HttpConnection to the specified host and port to fetch the specified document.
  * @param host The host to connect to.
  * @param port The port to connect on.
  * @param document the document to get.
+ * FIXME: not referenced
  */
-//===================================================================
-public HttpConnection(String host, int port, String document)
-//===================================================================
-{
-	this.host = host;
-	this.port = port;
-	this.document = document;
-}
+////===================================================================
+//public HttpConnection(String host, int port, String document)
+////===================================================================
+//{
+//	this.host = host;
+//	this.port = port;
+//	this.document = document;
+//}
 /**
  * Create an HttpConnection with an http:// URL.
  * @param url The full url, starting with http://
@@ -313,30 +321,32 @@
 	}
 }
 
-//===================================================================
-public HttpConnection(URL url)
-//===================================================================
-{
-	this(url.toString());
-	documentIsEncoded = true;
-}
-static char [] space = {' '}, percentSpace = {'%','2','0'};
+//FIXME: never referenced
+////===================================================================
+//public HttpConnection(URL url)
+////===================================================================
+//{
+//	this(url.toString());
+//	documentIsEncoded = true;
+//}
+//private static char [] space = {' '}, percentSpace = {'%','2','0'};
 
+// FIXME: never referenced
+////===================================================================
+//public String toURLString()
+////===================================================================
+//{
+//	return "http://"+host+":"+port+document;
+//}
 //===================================================================
-public String toURLString()
+private String getEncodedDocument()
 //===================================================================
 {
-	return "http://"+host+":"+port+document;
-}
-//===================================================================
-public String getEncodedDocument()
-//===================================================================
-{
 	if (documentIsEncoded) return document;
 	else return URL.encodeURL(document,false);
 }
 //===================================================================
-Object waitOnIO(Handle h,String errorMessage) throws IOException
+private Object waitOnIO(Handle h,String errorMessage) throws IOException
 //===================================================================
 {
 	try{
@@ -347,14 +357,15 @@
 		else throw new IOException(errorMessage);
 	}
 }
-public static final int SocketConnected = 0x1;
-public static final int DataReady = 0x2;
+private static final int SocketConnected = 0x1;
+// never referenced
+//private static final int DataReady = 0x2;
 
-static Vector lines;
-static SubString data;
+private static Vector lines;
+private static SubString data;
 
 //===================================================================
-int makeRequest(Socket sock,TextCodec td) throws IOException
+private int makeRequest(Socket sock,TextCodec td) throws IOException
 //===================================================================
 {
 	responseCode = -1;
@@ -441,8 +452,8 @@
 	return responseCode;
 }
 
-static final String [] encodings = {"transfer-coding","transfer-encoding"};
-byte [] buffer;
+private static final String [] encodings = {"transfer-coding","transfer-encoding"};
+private byte [] buffer;
 
 
 
@@ -453,16 +464,18 @@
  * Alternatively you could also call getRedirectTo() and then if that returns a non-null
  * String, you can call getRedirectedConnection() to get copies.
  * If there is no redirection required or possible the method will return this same HttpConnection.
+ * 
+ * FIXME: never referenced
  */
-//===================================================================
-public HttpConnection redirectTo()
-//===================================================================
-{
-	if (responseCode < 300 || responseCode > 399) return this;
-	String newURL = documentProperties.getString("location",null);
-	if (newURL == null) return this;
-	return new HttpConnection(newURL);
-}					
+////===================================================================
+//public HttpConnection redirectTo()
+////===================================================================
+//{
+//	if (responseCode < 300 || responseCode > 399) return this;
+//	String newURL = documentProperties.getString("location",null);
+//	if (newURL == null) return this;
+//	return new HttpConnection(newURL);
+//}					
 
 /**
  * Call this after a success connection. If it returns a non-null String then
@@ -478,7 +491,7 @@
 	return documentProperties.getString("location",null);
 }
 //===================================================================
-int readInChunkedHeader(Socket connection,ByteArray buff,CharArray chBuff) throws IOException
+private int readInChunkedHeader(Socket connection,ByteArray buff,CharArray chBuff) throws IOException
 //===================================================================
 {
  	if (buffer == null) buffer = new byte[10240];
@@ -588,7 +601,7 @@
 	object that holds the data read in.
  */
 //===================================================================
-public Handle readInData(final Socket connection) 
+private Handle readInData(final Socket connection) 
 //===================================================================
 {
 	int length = documentProperties.getInt("content-length",-1);
@@ -602,29 +615,31 @@
  * @return A Handle with which you can monitor the connection. When the Handle
 	reports Success, then the returnValue of the Handle will be a ewe.util.ByteArray
 	object that holds the data read in.
+	
+	FIXME: never referenced
  */
-//===================================================================
-public Handle readInData() 
-//===================================================================
-{
-	return readInData(connectedSocket);
-}
+////===================================================================
+//public Handle readInData() 
+////===================================================================
+//{
+//	return readInData(connectedSocket);
+//}
 /**
 * Get an InputStream to read in the data. This is a very important method as it is used by
 * the readInData() method.
 **/
 //===================================================================
-public InputStream getInputStream()
+private InputStream getInputStream()
 //===================================================================
 {
 	//ewe.sys.Vm.debug(documentProperties.toString());
 	int length = documentProperties.getInt("content-length",-1);
 	if ("chunked".equals(documentProperties.getValue(encodings,null)))
 		return new MemoryStream(true){
-			byte[] buff = new byte[10240];
-			int leftInBlock = 0;
-			ByteArray ba = new ByteArray();
-			CharArray ca = new CharArray();
+			private byte[] buff = new byte[10240];
+			private int leftInBlock = 0;
+			private ByteArray ba = new ByteArray();
+			private CharArray ca = new CharArray();
 			//-------------------------------------------------------------------
 			protected boolean loadAndPutDataBlock() throws IOException
 			//-------------------------------------------------------------------
@@ -676,7 +691,7 @@
 	object that holds the text read in.
  */
 //===================================================================
-public Handle readInText(final Socket connection,TextCodec documentTextDecoder)
+private Handle readInText(final Socket connection,TextCodec documentTextDecoder)
 //===================================================================
 {
 	if (documentTextDecoder == null) documentTextDecoder = new AsciiCodec();
@@ -718,7 +733,7 @@
  * Success, then the returnValue of the IOHandle will hold the connected socket.
  */
 //===================================================================
-public Handle connectAsync()
+private Handle connectAsync()
 //===================================================================
 {
 	return connectAsync(new AsciiCodec());
@@ -732,7 +747,7 @@
  * Success, then the returnValue of the Handle will hold the connected socket.
  */
 //===================================================================
-public Handle connectAsync(final TextCodec serverTextDecoder)
+private Handle connectAsync(final TextCodec serverTextDecoder)
 //===================================================================
 {
 	return new ewe.sys.TaskObject(){
@@ -788,16 +803,17 @@
  * Connect to the server and save the socket for later use as the "connectedSocket" field.
  * @return the connected socket - before any data is sent or read.
  * @exception IOException if a connection could not be made.
+ * FIXME: never referenced
  */
-//===================================================================
-public Socket connectSocketOnly() throws IOException
-//===================================================================
-{
-	//if (connectedSocket != null) return connectedSocket;
-	//return connectedSocket = new Socket(host,port);
-	if (openSocket != null) return openSocket;
-	return openSocket = new Socket(host,port);
-}
+////===================================================================
+//public Socket connectSocketOnly() throws IOException
+////===================================================================
+//{
+//	//if (connectedSocket != null) return connectedSocket;
+//	//return connectedSocket = new Socket(host,port);
+//	if (openSocket != null) return openSocket;
+//	return openSocket = new Socket(host,port);
+//}
 
 /*
 //===================================================================

Modified: trunk/src/CacheWolf/StatusBar.java
===================================================================
--- trunk/src/CacheWolf/StatusBar.java	2009-08-08 19:57:01 UTC (rev 2078)
+++ trunk/src/CacheWolf/StatusBar.java	2009-08-09 09:56:28 UTC (rev 2079)
@@ -1,8 +1,15 @@
 package CacheWolf;
 
-import ewe.sys.Vm;
-import ewe.ui.*;
-import ewe.fx.*;
+import ewe.fx.Color;
+import ewe.fx.mImage;
+import ewe.ui.CellConstants;
+import ewe.ui.CellPanel;
+import ewe.ui.ControlConstants;
+import ewe.ui.ControlEvent;
+import ewe.ui.Event;
+import ewe.ui.Gui;
+import ewe.ui.mButton;
+import ewe.ui.mLabel;
 
 /**
  * Class ID = 4500
@@ -10,14 +17,14 @@
  *
  */
 public class StatusBar extends CellPanel{
-	DBStats stats;
-	mLabel disp,lblFlt,lblCenter;
-	Preferences pref;
-	mButton btnFlt;
-	mImage imgFlt;
-	mButton btnCacheTour;
-	mImage imgCacheTour;
-	boolean MobileVGA;
+	private DBStats stats;
+	private mLabel disp,lblCenter;
+	private Preferences pref;
+	private mButton btnFlt;
+	private mImage imgFlt;
+	private mButton btnCacheTour;
+	private mImage imgCacheTour;
+	private boolean MobileVGA;
 	
 	public StatusBar(Preferences p, CacheDB db){
 		pref=p;
@@ -40,13 +47,11 @@
 			btnFlt.setPreferredSize(20,13);
 		btnFlt.borderWidth=0; imgFlt.transparentColor=Color.White;
 		btnFlt.setToolTip("Filter status");
-//		addNext(lblFlt= new mLabel("Flt"),CellConstants.DONTSTRETCH, CellConstants.DONTFILL); lblFlt.backGround=new ewe.fx.Color(0,255,0);
 		stats = new DBStats(db);
 		addNext(disp = new mLabel(""),CellConstants.DONTSTRETCH, CellConstants.FILL);
 		disp.setToolTip(MyLocale.getMsg(196,"Total # of caches (GC&OC)\nTotal # visible\nTotal # found"));
 		addLast(lblCenter=new mLabel(""),CellConstants.STRETCH, WEST|CellConstants.FILL);
 		lblCenter.setToolTip(MyLocale.getMsg(195,"Current centre"));
-//		updateDisplay();
 	}
 	
 	public void updateDisplay(){



From greiol at mail.berlios.de  Sun Aug  9 22:10:57 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Sun, 9 Aug 2009 22:10:57 +0200
Subject: [Cachewolf-svn] r2080 - trunk/src/CacheWolf
Message-ID: <200908092010.n79KAvLF012846@sheep.berlios.de>

Author: greiol
Date: 2009-08-09 22:10:54 +0200 (Sun, 09 Aug 2009)
New Revision: 2080

Modified:
   trunk/src/CacheWolf/AttributesSelector.java
   trunk/src/CacheWolf/HintLogPanel.java
   trunk/src/CacheWolf/ProfileDataForm.java
Log:
reduce visibility of properties and methods
organize imports

Modified: trunk/src/CacheWolf/AttributesSelector.java
===================================================================
--- trunk/src/CacheWolf/AttributesSelector.java	2009-08-09 09:56:28 UTC (rev 2079)
+++ trunk/src/CacheWolf/AttributesSelector.java	2009-08-09 20:10:54 UTC (rev 2080)
@@ -1,8 +1,15 @@
 package CacheWolf;
 
-import ewe.fx.*;
-import ewe.graphics.*;
-import ewe.ui.*;
+import ewe.fx.Image;
+import ewe.fx.Point;
+import ewe.fx.Rect;
+import ewe.fx.mImage;
+import ewe.graphics.AniImage;
+import ewe.graphics.InteractivePanel;
+import ewe.ui.CellConstants;
+import ewe.ui.DataChangeEvent;
+import ewe.ui.Panel;
+import ewe.ui.mLabel;
 
 public class AttributesSelector extends Panel {
 	protected static int TILESIZE=22; // Here we always use the small icons thus tilesize=22
@@ -24,15 +31,18 @@
 		showAttributePalette();
 	}
 
+	//FIXME: explain the usefulness of animated images in this context since it is not obvious
 	protected class attAniImage extends AniImage {
-		public String info;
-		public String attrName;
-		public String value;
-		public int attrNr;
-		public long bitMask;
+		private String info;
+		private String attrName;
+		private String value;
+		private int attrNr;
+		private long bitMask;
+		
 		attAniImage (mImage img) {
 			super(img);
 		}
+		
 		attAniImage (attAniImage cp, String val) {
 			//super(null);
 			mImage rawImg=new mImage(Attribute.getImageDir() + cp.attrName + val );
@@ -47,7 +57,7 @@
 	}
 	
 	protected class attInteractivePanel extends InteractivePanel {
-				public boolean imageMovedOn(AniImage which) {
+		public boolean imageMovedOn(AniImage which) {
 			if (!((attAniImage)which).info.startsWith("*")) { // If text starts with * we have no explanation yet
 				mInfo.setText(((attAniImage)which).info);
 				mInfo.repaintNow();
@@ -88,7 +98,7 @@
 	}
 	protected InteractivePanel iap=new attInteractivePanel();
 
-	public void showAttributePalette() {
+	private void showAttributePalette() {
 		iap.images.clear();
 		int myWidth = 170;
 		int myX = 2; int myY = 2;

Modified: trunk/src/CacheWolf/HintLogPanel.java
===================================================================
--- trunk/src/CacheWolf/HintLogPanel.java	2009-08-09 09:56:28 UTC (rev 2079)
+++ trunk/src/CacheWolf/HintLogPanel.java	2009-08-09 20:10:54 UTC (rev 2080)
@@ -1,40 +1,54 @@
 package CacheWolf;
 
-import ewe.ui.*;
 import ewe.fx.Dimension;
 import ewe.fx.Graphics;
+import ewe.fx.Image;
 import ewe.fx.Point;
+import ewe.fx.Rect;
 import ewe.fx.mImage;
 import ewe.graphics.AniImage;
 import ewe.graphics.ImageDragContext;
 import ewe.graphics.InteractivePanel;
 import ewe.io.FileBase;
-import ewe.sys.*;
-import ewe.fx.Image;
-import ewe.fx.Rect;
+import ewe.sys.Vm;
+import ewe.ui.CellConstants;
+import ewe.ui.CellPanel;
+import ewe.ui.ControlConstants;
+import ewe.ui.ControlEvent;
+import ewe.ui.Event;
+import ewe.ui.HtmlDisplay;
+import ewe.ui.IKeys;
+import ewe.ui.IScroll;
+import ewe.ui.KeyEvent;
+import ewe.ui.PanelSplitter;
+import ewe.ui.ScrollBarPanel;
+import ewe.ui.ScrollablePanel;
+import ewe.ui.SplittablePanel;
+import ewe.ui.mButton;
+import ewe.ui.mTextPad;
 
 /**
  *	Class to create the panel that holds hints and logs.
  *	It holds a method to cryt and decrypt hints.
  *	Two buttons allow for navigation through the logs. 5 logs are displayed at
- *   together. This was implemented to allow for better performance on the
+ *  a time. This was implemented to allow for better performance on the
  *	PocketPC. This number can be changed in the preferences.
  *	Class ID=400
  */
 public class HintLogPanel extends CellPanel{
-	int crntLogPosition = 0;
-	CacheHolderDetail currCache;
+	private int crntLogPosition = 0;
+	private CacheHolderDetail currCache;
 	private final int DEFAULT_STRINGBUFFER_SIZE=8000;
-	mTextPad hint = new mTextPad();
+	private mTextPad hint = new mTextPad();
 	//mTextPad logs = new mTextPad();
-	HtmlDisplay logs = new HtmlDisplay();
-	AniImage htmlTxtImage;
-	fastScrollText htmlImagDisp = new fastScrollText();
+	private HtmlDisplay logs = new HtmlDisplay();
+	private AniImage htmlTxtImage;
+	private fastScrollText htmlImagDisp = new fastScrollText();
 	private String decodeCaption = MyLocale.getMsg(400, "Decode");
 	private String encodeCaption = MyLocale.getMsg(401, "Encode");
-	mButton decodeButton = new mButton(this.decodeCaption);
-	mButton moreBt = new mButton(">>");
-	mButton prevBt = new mButton("<<");
+	private mButton decodeButton = new mButton(this.decodeCaption);
+	private mButton moreBt = new mButton(">>");
+	private mButton prevBt = new mButton("<<");
 	private MyScrollBarPanel sbplog;
 	private int lastScrollbarWidth = 0;
 	private boolean hintIsDecoded = false;
@@ -75,17 +89,20 @@
 			prevBt.modify(0,ControlConstants.Disabled);
 		}
 	}
+	
 	public void clear() {
 	    clearOutput();
 	    currCache = null;
 	}
+	
 	private void clearOutput() {
 		if (htmlTxtImage != null) {
 			htmlImagDisp.removeImage(htmlTxtImage);
 			htmlTxtImage.free();
 		}
 	}
-	void setLogs(int crntLogPosition) {
+
+	private void setLogs(int crntLogPosition) {
 		Vm.showWait(true);
 		StringBuffer dummy = new StringBuffer(DEFAULT_STRINGBUFFER_SIZE);
 		int counter = 0;
@@ -203,8 +220,8 @@
 }
 
 class fastScrollText extends InteractivePanel { // TODO extend this class in a way that text can be marked and copied
-	public boolean scrollVertical = true;
-	public boolean scrollHorizontal = false;
+	private boolean scrollVertical = true;
+	private boolean scrollHorizontal = false;
 	public boolean imageNotDragged(ImageDragContext drag,Point where) {
 		if (drag == null || drag.image == null) return super.imageNotDragged(drag, where);
 		getDim(null);
@@ -282,7 +299,4 @@
 			}
 		}
 	}
-
-
-
 }

Modified: trunk/src/CacheWolf/ProfileDataForm.java
===================================================================
--- trunk/src/CacheWolf/ProfileDataForm.java	2009-08-09 09:56:28 UTC (rev 2079)
+++ trunk/src/CacheWolf/ProfileDataForm.java	2009-08-09 20:10:54 UTC (rev 2080)
@@ -1,8 +1,14 @@
 package CacheWolf;
 
+import ewe.ui.CellPanel;
+import ewe.ui.ControlEvent;
+import ewe.ui.Event;
+import ewe.ui.Form;
+import ewe.ui.FormBase;
+import ewe.ui.UIConstants;
+import ewe.ui.mButton;
+import ewe.ui.mLabel;
 
-import ewe.ui.*;
-
 /**
 *	This form displays profile specific data.
 *	It allows the copying of the current centre to the profile centre
@@ -10,12 +16,10 @@
 public class ProfileDataForm extends Form {
 
 	private mButton btnOK, btnCurrentCentre, btnProfileCentre, btnCur2Prof, btnProf2Cur;
-	Preferences pref;
-	Profile profile;
-	CellPanel content = new CellPanel();
+	private Preferences pref;
+	private Profile profile;
+	private CellPanel content = new CellPanel();
 
-	/**
-	*/
 	public ProfileDataForm(Preferences p, Profile prof){
 		super();
 		pref=p;



From greiol at mail.berlios.de  Thu Aug 13 00:14:15 2009
From: greiol at mail.berlios.de (greiol at BerliOS)
Date: Thu, 13 Aug 2009 00:14:15 +0200
Subject: [Cachewolf-svn] r2081 - trunk/src/exp
Message-ID: <200908122214.n7CMEFDv029867@sheep.berlios.de>

Author: greiol
Date: 2009-08-13 00:14:15 +0200 (Thu, 13 Aug 2009)
New Revision: 2081

Modified:
   trunk/src/exp/GpxExportNg.java
Log:
added rot13 call to hints

Modified: trunk/src/exp/GpxExportNg.java
===================================================================
--- trunk/src/exp/GpxExportNg.java	2009-08-09 20:10:54 UTC (rev 2080)
+++ trunk/src/exp/GpxExportNg.java	2009-08-12 22:14:15 UTC (rev 2081)
@@ -662,7 +662,7 @@
 		.concat("      <groundspeak:state>").concat(SafeXML.cleanGPX(ch.details.State)).concat("</groundspeak:state>\n")
 		.concat("      <groundspeak:short_description html=\"").concat(ch.is_HTML() ? TRUE : FALSE).concat("\"></groundspeak:short_description>\n")
 		.concat("      <groundspeak:long_description html=\"").concat(ch.is_HTML() ? TRUE : FALSE).concat("\">").concat(SafeXML.cleanGPX(formatLongDescription(ch))).concat("</groundspeak:long_description>\n")
-		.concat("      <groundspeak:encoded_hints>").concat(SafeXML.cleanGPX(ch.details.Hints)).concat("</groundspeak:encoded_hints>\n")
+		.concat("      <groundspeak:encoded_hints>").concat(SafeXML.cleanGPX(Common.rot13(ch.details.Hints))).concat("</groundspeak:encoded_hints>\n")
 		.concat("      <groundspeak:logs>\n")
 		.concat(formatLogs(ch))
 		.concat("      </groundspeak:logs>\n")



From pfeffer at mail.berlios.de  Fri Aug 14 01:09:36 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Fri, 14 Aug 2009 01:09:36 +0200
Subject: [Cachewolf-svn] r2082 - in trunk: res_noewe/webmapservices
	src/CacheWolf src/CacheWolf/navi
Message-ID: <200908132309.n7DN9aMP031514@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-14 01:09:30 +0200 (Fri, 14 Aug 2009)
New Revision: 2082

Added:
   trunk/src/CacheWolf/navi/GkProjection.java
   trunk/src/CacheWolf/navi/LambertProjection.java
   trunk/src/CacheWolf/navi/ProjectedPoint.java
   trunk/src/CacheWolf/navi/Projection.java
Removed:
   trunk/src/CacheWolf/navi/GkPoint.java
Modified:
   trunk/res_noewe/webmapservices/readme_wms.txt
   trunk/src/CacheWolf/CWPoint.java
   trunk/src/CacheWolf/navi/MapLoader.java
   trunk/src/CacheWolf/navi/TransformCoordinates.java
   trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java
Log:
TransformCoordinates / MapLoader: Support Austrian Lambert (EPSG:31287 and EPSG:3416)

Modified: trunk/res_noewe/webmapservices/readme_wms.txt
===================================================================
--- trunk/res_noewe/webmapservices/readme_wms.txt	2009-08-12 22:14:15 UTC (rev 2081)
+++ trunk/res_noewe/webmapservices/readme_wms.txt	2009-08-13 23:09:30 UTC (rev 2082)
@@ -33,66 +33,74 @@
 # taken from getCapabilieties answer: <HTTP><GET><OnlineResource xlink:href=
 # note: if it doesn't work, please try adding an "?" to the URL got from there
 MainUrl:	http://www.gis2.nrw.de/wmsconnector/wms/luftbild? 
-# if this service delivers topografical maps, fill in here "topo"
+# if this service delivers topografic maps, fill in here "topo"
 # if it delivers aerial photographs fill in "photo".
 # Please use only lower case letters and no special characters
 # in order to avoid problems using this file on different platforms
 # CacheWolf will store all maps of the same Type in the same 
 # directory.
 MapType: photo
-# this is fix, dont change it
+# this is fix, don't change it
 ServiceTypeUrlPart:	SERVICE=WMS 
 # taken from the getCapabilities request: <WMT_MS_Capabilities version=
 VersionUrlPart:	VERSION=1.1.0 
-# The EPSG-Code, supported by cachewolf: german gau?-kr?ger (31466, 31467, 31468, 
-# 31469), italian Gau?-Boaga (3003 and 3004) and WGS84 (4326)
+# The EPSG-Code, supported by cachewolf: German Gau?-Kr?ger (31466, 31467, 31468, 
+# 31469), Italian Gau?-Boaga (3003 and 3004), Austrian Lambert old (31287) and
+# new (31287) and WGS84 (4326)
 # You get a list of supported coordinate systems from the WMS in the getCapabilieties 
 # answer under <Layer><SRS> or <CRS>
-# Plases feel free to ask for another coordinate system to be supported by cachewolf 
+# Please feel free to ask for another coordinate system to be supported by cachewolf 
 # if you need it
-# In case the wms server accepts coordinates in more than one Gau?-Kr?ger stripe
-# you can list the epsg codes here, seperated by a space. CacheWolf will
-# automatically make use of the correct stripe. 
-# The sequens of strings in the UrlPart must match sequence of the corresponding numbers here.
+# Many servers say they support several EPSG codes. My experience is
+# that usually the projection which was used for the scanned analog material
+# offer the best calibration and image quality. That's why you should test 
+# the calibration especially when using epsg:4326 (WGS84) [there is no printed
+# map in that format].
+# In countries which cover a big area of the world (like Germany, unlike Austria)
+# we have zones (or stripes) which each has its own epsg code. But they all
+# belong to the same local system. In this case
+# put all the EPSG codes which (a) belong to the same local system and 
+# which (b) are supported by the server here, separated by a space. 
+# CacheWolf will automatically make use of the correct zone and according epsg code. 
+# The sequence of strings in the UrlPart must match sequence of the corresponding numbers here.
 # Sometimes the wms-Server provides only one stripe, in spite of the fact, that
 # the map it provides is not completely within this stripe. In this case
 # just list only this epsg code. CacheWolf will automatically calculate the
-# Gau?-Kr?ger coordinates for that stripe.
-# The automatic for the stripe selection only works if a german EPSG code
-# is the first one in the space seperated list
+# local system for that zone (e.g. Gau?-Kr?ger coordinates for that stripe).
 # remark: some WMS offer WGS84 (EPSG 4326), but they are sometimes working not
 # correctly (for example the WMS of the Landesvermessungsamt NRW as of nov. 2007)
 # In this case don't list it.
+# don't mix different local systems.
 CoordinateReferenceSystemCacheWolf:	31466 31467
 # this usually will match the number above
 CoordinateReferenceSystemUrlPart:	SRS=EPSG:31466 SRS=EPSG:31467
-# Post not supported by Cachewolf --> dont change this
+# Post not supported by Cachewolf --> don't change this
 RequestUrlPart:	REQUEST=GetMap
-# comma seperated (without spaces) list of layers to combine
+# comma separated (without spaces) list of layers to combine
 # all of supported layers you get from the getCapabilities request <Layer><Name>
 # these names are to be used. Special characters must be URL-encode
 LayersUrlPart:	LAYERS=Orthophoto%20Str.%202,Orthophoto%20Str.%203
 # if the WMS supports different rendering styles, select the one you need here
-# comma seperated (without spaces) list of style commands for map rendering (do not delete this item even if it is empty
+# comma separated (without spaces) list of style commands for map rendering (do not delete this item even if it is empty
 StylesUrlPart:	STYLES=
-# format, dont forget to set ImageFileExtension accordingly
+# format, don't forget to set ImageFileExtension accordingly
 # you get a list of supported image formats from getCapabilieties answer: <GetMap><Format>
 ImageFormatUrlPart:	FORMAT=image/png
 # Limits of the service in WGS84 coordinates. 
 # You can use any format here, which is accepted by the input coordinates dialog in cachewolf
-# remark: more than 8 digits after the decimal seperator will cause the
+# remark: more than 8 digits after the decimal separator will cause the
 # program to not recognize it
-# taken from getCapabilieties answer: <BoundingBox SRS="EPSG:4326", dont forget to add "N"/"S" and "E"/"W"
+# taken from getCapabilieties answer: <BoundingBox SRS="EPSG:4326", don't forget to add "N"/"S" and "E"/"W"
 BoundingBoxTopLeftWGS84:	N 52.7691 E 5.673
 BoundingBoxButtomRightWGS84:	N 49.9944 E 10.142
 # scale range that the service supports in meters per pixel (measured diagonal)
-# Please don't wonder that they do mot match the scale given in
+# Please don't wonder that they do not match the scale given in
 # the map download dialog as that scale is measured vertically 
-# (multiply it ba sqrt(2) and you get the scale used here
+# (multiply it by sqrt(2)=1.41 and you get the scale used here
 # taken from the getCapabilities request "<Layer><ScaleHint min="
 MinScale:	0.17957836
 MaxScale:	5.61182372
-# Plaes recommend a scale for this WMS. This scale will appear in the
+# Please recommend a scale for this WMS. This scale will appear in the
 # map download dialog as default. Scale is measured in meters per pixel
 # vertical, so, multiply it by 1.41 (=sqrt(2)) to get the scale as measured
 # above in MinScale and MaxScale

Modified: trunk/src/CacheWolf/CWPoint.java
===================================================================
--- trunk/src/CacheWolf/CWPoint.java	2009-08-12 22:14:15 UTC (rev 2081)
+++ trunk/src/CacheWolf/CWPoint.java	2009-08-13 23:09:30 UTC (rev 2082)
@@ -1,8 +1,8 @@
 package CacheWolf;
 
 import ewe.sys.Convert;
+import CacheWolf.navi.ProjectedPoint;
 import CacheWolf.navi.TrackPoint;
-import CacheWolf.navi.GkPoint;
 import CacheWolf.navi.TransformCoordinates;
 import CacheWolf.navi.GeodeticCalculator;
 
@@ -326,11 +326,9 @@
 	 * @param strNorthing Northing component
 	 */
 	public void set ( String strEasting, String strNorthing ){
-		GkPoint gk = new GkPoint(Common.parseDouble(strEasting), Common.parseDouble(strNorthing), GkPoint.GERMAN_GK);
-		
-		this. latDec = TransformCoordinates.germanGkToWgs84(gk).latDec;
-		this. lonDec = TransformCoordinates.germanGkToWgs84(gk).lonDec;
-		this.utmValid = false;
+		CWPoint pp = new CWPoint(Common.parseDouble(strEasting), Common.parseDouble(strNorthing));
+		ProjectedPoint gk = new ProjectedPoint(pp, ProjectedPoint.LOCALSYSTEM_DEFAULT, true, true);
+		set(TransformCoordinates.ProjectedToWgs84(gk, ProjectedPoint.LOCALSYSTEM_DEFAULT, true));
 	}
 
 	/**
@@ -484,7 +482,7 @@
 	 * Get GK northing
 	 */
 	public String getGKNorthing(int decimalplaces){
-		double gkNorthing = TransformCoordinates.wgs84ToGermanGk(this).getNorthing();
+		double gkNorthing = TransformCoordinates.wgs84ToLocalsystem(this, ProjectedPoint.LOCALSYSTEM_DEFAULT).getNorthing();
 		
 		ewe.sys.Double n = new ewe.sys.Double();
 		n.set(gkNorthing);
@@ -496,7 +494,7 @@
 	 * Get GK easting
 	 */
 	public String getGKEasting(int decimalplaces) {
-		double gkEasting = TransformCoordinates.wgs84ToGermanGk(this).getGkEasting(GkPoint.GERMAN_GK);
+		double gkEasting = TransformCoordinates.wgs84ToLocalsystem(this, ProjectedPoint.LOCALSYSTEM_DEFAULT).getEasting();
 		
 		ewe.sys.Double e = new ewe.sys.Double();
 		e.set(gkEasting);
@@ -505,12 +503,9 @@
 	}
 	
 	public String getGermanGkCoordinates() {
-		return TransformCoordinates.wgs84ToGermanGk(this).toString(0, "R:", " H:", GkPoint.GERMAN_GK);
+		return TransformCoordinates.wgs84ToLocalsystem(this, ProjectedPoint.LOCALSYSTEM_DEFAULT).toString(0, "R:", " H:");
 	}
 
-	public String getGermanGkCoordinates(int decimalplaces, String pref, String seperator, int region) {
-		return TransformCoordinates.wgs84ToGermanGk(this).toString(decimalplaces, pref, seperator, region);
-	}
 	
 	/**
 	 * Method to calculate a projected waypoint

Deleted: trunk/src/CacheWolf/navi/GkPoint.java
===================================================================
--- trunk/src/CacheWolf/navi/GkPoint.java	2009-08-12 22:14:15 UTC (rev 2081)
+++ trunk/src/CacheWolf/navi/GkPoint.java	2009-08-13 23:09:30 UTC (rev 2082)
@@ -1,158 +0,0 @@
-package CacheWolf.navi;
-
-/**
- * Point in Gau?-Kr?ger Format
- * @author Robert Arnold
- *
- */
-public class GkPoint {
-	double northing; // TODO make these private
-	private double easting; // because it is not clear for routines from outside if the stripe number is included, make this available only through methods
-	int stripe;
-	int stripewidth;
-	float lengthOfStripe0; // e.g. in italien GK stripe 1 is at 9 degree
-
-	public GkPoint() { super(); }
-	
-	public GkPoint(GkPoint p) {
-		set(p.easting, p.northing, p.stripe, p.stripewidth, p.lengthOfStripe0);
-	}
-	
-	/**
-	 * e containing the number of the stripe
-	 * @param e
-	 * @param n
-	 */
-	public GkPoint(double e, double n, int stripewidthi, float degreeOfStripeZero) {
-		stripe = (int) Math.floor(e / 1000000);
-		set(e - 1000000 * stripe - 500000, n, stripe, stripewidthi, degreeOfStripeZero);
-	}
-	
-	/**
-	 * use this to set normal german Gau?-Kr?ger coordinates
-	 * (they contain the stripe numer in the easting value and
-	 * have a stripe with of 3 degrees)
-	 * @param e
-	 * @param n
-	 */
-	public GkPoint(double e, double n, int region) {
-		switch (region) {
-		case GERMAN_GK:	set(e, n, 3, 0); break;
-		case ITALIAN_GB:	set(e, n, 6, 3); break;
-		default: throw new IllegalArgumentException("GkPoint (double, double, int): region: " + region + " not supported");
-		}
-	}
-	
-	public GkPoint(double e, double n, int stripei, int stripewidthi, float degreeOfStripeZero) {
-		set(e, n, stripei, stripewidthi, degreeOfStripeZero);
-	}
-		
-	/**
-	 * 
-	 * @param e containing the stripe number
-	 * @param n
-	 * @param stripewidthi
-	 */
-	public void set(double e, double n, int stripewidthi, float degreeOfStripeZero) {
-		double stripei = Math.floor(e / 1000000);
-		set(e - 1000000 * stripei - 500000, n, (int) stripei, stripewidthi, degreeOfStripeZero);
-	}
-	
-	/**
-	 * @param e in meters from center of stripe, it may not contain the stripenumber
-	 */
-	public void set(double e, double n, int stripei, int stripewidthi, float lenthOfStripeZero_) {
-		stripe = stripei;
-		stripewidth = stripewidthi;
-		easting = e;
-		northing = n;
-		lengthOfStripe0 = lenthOfStripeZero_;
-	}
-	
-	public double getStripeLon() {
-		return stripe * stripewidth + lengthOfStripe0; // TODO + stripeoffset
-	}
-	
-	public int getStripe() {
-		return stripe;
-	}
-
-	public TrackPoint toTrackPoint(int region) {
-		return new TrackPoint(northing, getGkEasting(region));
-		}
-	
-	/**
-	 * This will give you the normal Gau?-Kr?ger easting value
-	 * (that means including the stripe number)
-	 * @return
-	 */
-	public static final int GERMAN_GK = 4900;
-	public static final int ITALIAN_GB = 3900; 
-	public static final int DEFAULT_GK = GERMAN_GK;
-	
-
-	/**
-	 * 
-	 * @param region international telephone area code * 100  
-	 * @return
-	 * @throws IllegalArgumentException if region is not supported
-	 */
-	public double getGkEasting(int region) {
-		double e;
-		switch (region) {
-		case GERMAN_GK: e = easting + 500000 + stripe * 1000000; break;
-		case ITALIAN_GB:	
-			e = easting + 500000 + stripe * 1000000;
-			if (stripe == 2) e += 20000; // because of an unknown reason the second stripe in EPSG:3004 has an false easting of 2520000
-		break;
-		default: throw new IllegalArgumentException("getGkEasting: area code " + region + "not supported");
-		}
-		return e;
-	}
-
-	/**
-	 * easting measured in meters from stripe middle
-	 * @return
-	 */
-	public double getRawEasting() {
-		return easting;
-	}
-	
-	/**
-	 * easting measured in meters from stripe middle
-	 * @return
-	 */
-	public double getNorthing() {
-		return northing;
-	}
-	
-	/**
-	 * assumes _German_ Gau?-Kr?ger
-	 */
-	/*public String toString() {
-		return toString(0, "R: ", " H: ", GERMAN_GK);
-	}*/
-
-	
-	public String toString(int decimalplaces, String prefix, String seperator, int region) {
-		ewe.sys.Double n = new ewe.sys.Double();
-		ewe.sys.Double e = new ewe.sys.Double();
-		n.set(northing);
-		e.set(getGkEasting(region));
-		n.decimalPlaces = decimalplaces;
-		e.decimalPlaces = decimalplaces;
-		return prefix + e.toString().replace(',', '.') + seperator + n.toString().replace(',', '.');
-	}
-	
-	/**
-	 * shift the point
-	 * @param meters positiv to north (east), negativ to south (west)
-	 * @param direction 0 north-south, 1 east-west
-	 */
-	public void shift(double meters, int direction) {
-		switch (direction) { // TODO this works corectly only within an 3 degrees stripe
-			case 0: northing += meters; return;
-			case 1: easting += meters; return;
-		}
-	}
-}

Added: trunk/src/CacheWolf/navi/GkProjection.java
===================================================================
--- trunk/src/CacheWolf/navi/GkProjection.java	2009-08-12 22:14:15 UTC (rev 2081)
+++ trunk/src/CacheWolf/navi/GkProjection.java	2009-08-13 23:09:30 UTC (rev 2082)
@@ -0,0 +1,145 @@
+package CacheWolf.navi;
+
+import CacheWolf.CWPoint;
+
+public class GkProjection extends Projection{
+	double falseEasting;
+	double falseNorthing;
+	double degreeOfStripe0;
+	double stripeWidth;
+	double stripeFactor;
+	double scale;
+	Ellipsoid ellip;
+
+	public GkProjection(int startEpsg_, double falseNorthing_, double falseEasting_, 
+			double stripeWidth_, double stripeFactor_, double lonOfStripe0,
+			double scale_,
+			Ellipsoid ellip_) {
+		epsgCode = startEpsg_;
+		falseNorthing = falseNorthing_;
+		falseEasting = falseEasting_;
+		stripeWidth = stripeWidth_;
+		degreeOfStripe0 = lonOfStripe0;
+		stripeFactor = stripeFactor_;
+		scale = scale_;
+		ellip = ellip_;
+	}
+
+	public double getEasting(ProjectedPoint pp) {
+		return pp.easting + falseEasting + pp.zone * stripeFactor;
+	}
+
+
+	public double getNorthing(ProjectedPoint pp) {
+		return pp.northing + falseNorthing;
+	}
+
+	/**
+	 * Project latlon to Gau?-Kr?ger-Coordinates on ellipsoid
+	 * @param latlon
+	 * @param ellipsoid
+	 * @return
+	 */
+	public ProjectedPoint project(CWPoint ll, ProjectedPoint pp) {
+		double lonDec = ll.lonDec - degreeOfStripe0 + stripeWidth / 2;
+		if (lonDec < 0) lonDec += 360;
+		int stripe = (int)Math.floor(lonDec / stripeWidth);
+		if (pp == null) pp = new ProjectedPoint(this);
+		pp.setzone(stripe);
+		return project(ll, ellip, stripeWidth, stripe, degreeOfStripe0, scale, pp);
+	}
+	
+	public ProjectedPoint project(CWPoint ll, ProjectedPoint pp, int epsg) {
+		if (pp == null) pp = new ProjectedPoint(this);
+		pp.setzone(epsg-epsgCode);
+		return project(ll, ellip, stripeWidth, epsg-epsgCode, degreeOfStripe0, scale, pp);
+	}
+
+
+	public ProjectedPoint set(double northing, double easting, ProjectedPoint pp) {
+		double stripei = Math.floor(easting / stripeFactor);
+		pp.setzone((int)stripei);
+		pp.setRaw(northing - falseNorthing, easting - stripeFactor * stripei - falseEasting);
+		return pp;
+	}
+
+	/**
+	 * Converts Gau?-Kr?ger-coordinates into lat/lon on the respective ellipsoid
+	 * @param gkp
+	 * @param ellipsoid
+	 * @param stripewidth width in degree of the stripe of the Gau?-Kr?ger-System (3 degreee usually used in Gau?-Kr?ger, 6 degree usually in UTM)
+	 * @return
+	 */
+	public CWPoint unproject(ProjectedPoint gkp) {
+		double L0 = gkp.zone * stripeWidth + degreeOfStripe0; // decimal degree of the center of the stripe
+		return unproject(gkp, L0, ellip, scale);
+	}
+	/**
+	 * Converts Gau?-Kr?ger-coordinates into lat/lon on the respective ellipsoid
+	 * @param gkp
+	 * @param stripelon: Lon of the center of the stripe
+	 * @param ellipsoid
+	 * @param stripewidth width in degree of the stripe of the Gau?-Kr?ger-System (3 degreee usually used in Gau?-Kr?ger, 6 degree usually in UTM)
+	 * @return
+	 */
+	private static CWPoint unproject(ProjectedPoint gkp, double stripelon, Ellipsoid ellipsoid, double scale) {
+		double L0 = stripelon; // decimal degree of the center of the stripe
+		double y = gkp.getRawEasting()/scale;
+
+		double e2 = (ellipsoid.a * ellipsoid.a - ellipsoid.b * ellipsoid.b)/(ellipsoid.a * ellipsoid.a);
+		// note: n1-n6 are similiar to the n1-n6 in projectLatlon2GK, but some term have different factors
+		double n1 = (ellipsoid.a-ellipsoid.b)/(ellipsoid.a+ellipsoid.b);
+		double n2 = (ellipsoid.a+ellipsoid.b)/2 * (1+ Math.pow(n1, 2)/4 + Math.pow(n1, 4)/64);
+		double n3 = n1 * 3/2 - Math.pow(n1, 3) * 27/32  + Math.pow(n1, 5) * 269/32;
+		double n4 = Math.pow(n1, 2) * 21/16 - Math.pow(n1, 4) * 55/32;
+		double n5 = Math.pow(n1, 3) * 151/96 - Math.pow(n1, 5) * 417/128;
+		double n6 = Math.pow(n1, 4) * 1097/512;
+
+		double B0 = (gkp.getRawNorthing() / scale) / n2;
+		double Bf = B0 + n3 * Math.sin(B0*2) + n4 * Math.sin(B0*4) + n5 * Math.sin(B0*6) + n6 * Math.sin(B0*8);
+
+		double Nf = ellipsoid.a / Math.sqrt (1- e2 * Math.pow(Math.sin(Bf), 2));
+		double nuef = Math.sqrt(ellipsoid.a * ellipsoid.a / ellipsoid.b / ellipsoid.b * e2 * Math.pow(Math.cos(Bf), 2));
+		double tf = Math.tan(Bf);
+
+		double la1 = tf / 2 / Nf/Nf * (-1-nuef*nuef) * y*y;
+		double la2 = tf /24 / Math.pow(Nf, 4) * (5 + 3*tf*tf + 6*nuef*nuef - 6*tf*tf * nuef*nuef - 4*Math.pow(nuef, 4) - 9*tf*tf*Math.pow(nuef, 4)) * Math.pow(y, 4);
+		// these deal with less than the overall calculation precision: double la3 = tf /720 / Math.pow(Nf, 6) * (-61 - 90*tf*tf - 45*Math.pow(tf,4) - 107*nuef*nuef + 162*tf*tf * Math.pow(nuef, 2) + 45*Math.pow(tf,4)*tf*Math.pow(nuef, 2)) * Math.pow(y, 6);
+		// these deal with less than the overall calculation precision: double la4 = tf /40320 / Math.pow(Nf, 8) * (1385+3663*tf*tf - 4095*Math.pow(tf,4) + 1575*Math.pow(nuef, 6)) * Math.pow(y, 8);
+		double lat = (Bf + la1 + la2) * 180 / Math.PI;
+
+		double lo1 = 1 / Nf / Math.cos(Bf) * y;
+		double lo2 = 1 / Math.pow(Nf, 3) / Math.cos(Bf) *  (-1 -tf*tf*2 - nuef*nuef) * Math.pow(y, 3) / 6;
+		double lon = L0 + (lo1 + lo2) * 180/Math.PI;
+		return new CWPoint(lat, lon);
+	}
+	
+	private static ProjectedPoint project(CWPoint latlon, Ellipsoid ellipsoid, double stripewidth, int stripe, double degreeOfStripe0, double scale, ProjectedPoint gkp) {
+		double e2 = (ellipsoid.a * ellipsoid.a - ellipsoid.b * ellipsoid.b)/(ellipsoid.a * ellipsoid.a);
+		double l = (latlon.lonDec - degreeOfStripe0 - stripe * stripewidth) /180*Math.PI;
+		double B = latlon.latDec /180*Math.PI;
+		double N = ellipsoid.a/ Math.sqrt(1- e2 * Math.pow(Math.sin(B),2));
+		double nue = Math.sqrt(Math.pow(ellipsoid.a, 2) / Math.pow(ellipsoid.b, 2)* e2 * Math.pow(Math.cos(B), 2));
+		double t = Math.tan(B);
+
+		double n1 = (ellipsoid.a-ellipsoid.b)/(ellipsoid.a+ellipsoid.b);
+		double n2 = (ellipsoid.a+ellipsoid.b)/2 * (1+ Math.pow(n1, 2)/4 + Math.pow(n1, 4)/64);
+		double n3 = n1 * -3/2 + Math.pow(n1, 3) * 9/16  - Math.pow(n1, 5) * 3/32;
+		double n4 = Math.pow(n1, 2) * 15/16 - Math.pow(n1, 4) * 15/32;
+		double n5 = Math.pow(n1, 3) * -35/48 + Math.pow(n1, 5) * 105/256;
+		double n6 = Math.pow(n1, 4) * 315/512;
+		double arclength = n2 * (B + n3 * Math.sin(B*2) + n4 * Math.sin(B*4) + n5 * Math.sin(B*6) + n6 * Math.sin(B*8));
+
+		double h1 = t/2 * N * Math.pow(Math.cos(B), 2) * l*l;
+		double h2 = t/24 * N * Math.pow(Math.cos(B),4) * (5 - t*t + 9 * nue*nue + 4*Math.pow(nue, 4)) * Math.pow(l,4);
+		double northing = (arclength + h1 + h2) * scale;
+
+		double r1 = N * Math.cos(B) * l;
+		double r2 = N/6 * Math.pow(Math.cos(B), 3) * (1-t*t+nue*nue)*l*l*l;
+		double easting = (r1 + r2) * scale;		//+ stripe / stripewidth * 1000000 + 500000;
+		gkp.setRaw(northing, easting);
+		return gkp;
+	}
+
+
+}

Added: trunk/src/CacheWolf/navi/LambertProjection.java
===================================================================
--- trunk/src/CacheWolf/navi/LambertProjection.java	2009-08-12 22:14:15 UTC (rev 2081)
+++ trunk/src/CacheWolf/navi/LambertProjection.java	2009-08-13 23:09:30 UTC (rev 2082)
@@ -0,0 +1,119 @@
+package CacheWolf.navi;
+
+import ewe.sys.Vm;
+import CacheWolf.CWPoint;
+public class LambertProjection extends Projection{
+	
+	double falseNorthing;
+	double falseEasting;
+	//double firstStandardParallel;
+	//double secondSandardParallel;
+	double centralLat;
+	double centralLon;
+	Ellipsoid ellip;
+	
+	double e, n, F0, Rb;
+	
+	/**
+	 * 
+	 * @param falseNorthing: in meters
+	 * @param falseEasting
+	 * @param firstStandardParallel: in decimal degrees
+	 * @param secondSandardParallel
+	 * @param centralLat: in decimal degrees
+	 * @param centralLon
+	 */
+	public LambertProjection(int epsgcode_, double falseNorthing_, double falseEasting_, 
+			double firstStandardParallel_, double secondSandardParallel_,	
+			double centralLat_,	double centralLon_, Ellipsoid ellip_) {
+		epsgCode = epsgcode_;
+		falseNorthing = falseEasting_;
+		falseEasting = falseEasting_;
+		double firstStandardParallel = firstStandardParallel_ * java.lang.Math.PI / 180;
+		double secondSandardParallel = secondSandardParallel_* java.lang.Math.PI / 180;
+		centralLat = centralLat_ * java.lang.Math.PI / 180;
+		centralLon = centralLon_ * java.lang.Math.PI / 180;
+		ellip = ellip_;
+		
+
+		double f = ellip.getFlattening();
+		e = java.lang.Math.sqrt(2.0 * f - f*f);
+		double m1 = java.lang.Math.cos(firstStandardParallel) / java.lang.Math.sqrt(1.0 - e*e * java.lang.Math.pow(java.lang.Math.sin(firstStandardParallel),2));
+		double m2 = java.lang.Math.cos(secondSandardParallel) / java.lang.Math.sqrt(1.0 - e*e * java.lang.Math.pow(java.lang.Math.sin(secondSandardParallel),2));
+		double t0 = java.lang.Math.tan(java.lang.Math.PI/4 - centralLat / 2) / java.lang.Math.pow((1.0 - (e * java.lang.Math.sin(centralLat))) / (1.0 + (e * java.lang.Math.sin(centralLat))), e/2);
+		double t1 = java.lang.Math.tan(java.lang.Math.PI/4 - firstStandardParallel/ 2) / java.lang.Math.pow((1.0 - (e * java.lang.Math.sin(firstStandardParallel ))) / (1.0 + (e * java.lang.Math.sin(firstStandardParallel ))), e/2);
+		double t2 = java.lang.Math.tan(java.lang.Math.PI/4 - secondSandardParallel/ 2) / java.lang.Math.pow((1.0 - (e * java.lang.Math.sin(secondSandardParallel))) / (1.0 + (e * java.lang.Math.sin(secondSandardParallel))), e/2);
+		n = (java.lang.Math.log(m1) - java.lang.Math.log(m2)) / (java.lang.Math.log(t1) - java.lang.Math.log(t2));
+		double nsin = java.lang.Math.sin(centralLat);
+		Vm.debug("n-log: " + n+ " n-sin phi: " + nsin);
+		F0 = m1 / (n * java.lang.Math.pow(t1, n)); // pow(t2???, n)
+		Rb = ellip.a * F0 * java.lang.Math.pow(t0, n);
+	}
+
+	public ProjectedPoint project(CWPoint ll, ProjectedPoint pp, int epsg) {
+		return project(ll, pp);
+	}
+	/**
+	 * 
+	 * @param ll
+	 * @param pp: pp will be filled with the projected ll. If null, a new ProjectedPoint will be created
+	 * @return
+	 */
+	public ProjectedPoint project(CWPoint ll, ProjectedPoint pp) {
+		// formulas taken from http://surveying.wb.psu.edu/psu-surv/Projects/PASingleZone.pdf page 7-9 (Appendix I), see also http://www.geoclub.de/viewtopic.php?f=54&t=23912 (German)
+		
+		double lat = ll.latDec * java.lang.Math.PI / 180;
+		double lon = ll.lonDec * java.lang.Math.PI / 180;
+		double t = java.lang.Math.tan(java.lang.Math.PI /4 - lat / 2) / java.lang.Math.pow((1.0 - (e * java.lang.Math.sin(lat))) / (1.0 + (e * java.lang.Math.sin(lat))), e/2);
+		// double m = java.lang.Math.cos(lat) / java.lang.Math.sqrt(1.0 - e*e * java.lang.Math.pow(java.lang.Math.sin(lat), 2));
+		double R = ellip.a * F0 * java.lang.Math.pow(t, n);
+
+		/* Solution */
+		double gamma = n * (lon - centralLon);
+		double easting = R * java.lang.Math.sin(gamma); //+ @False_Easting
+		double northing = Rb - R * java.lang.Math.cos(gamma); // + @False_Northing
+		if (pp == null) pp = new ProjectedPoint(this);
+		pp.setRaw(northing, easting);
+		//Vm.debug("project erg: "+ret.toString(0, "", " ", AUSTRIAN_LAMBERT));
+		//Vm.debug("project: ll: " + unproject(TransformCoordinates.BESSEL).toString(CWPoint.DD));
+		return pp;
+	}
+
+	public CWPoint unproject(ProjectedPoint pp) {
+		//Vm.debug("unproject: "+pp.toString(0, "", " ", AUSTRIAN_LAMBERT));
+		
+		double ns = Rb - pp.northing;
+		double es = pp.easting;
+		double R = java.lang.Math.sqrt(es*es + ns*ns);
+		double t = java.lang.Math.pow(R/(ellip.a*F0), 1/n);
+		double gamma = java.lang.Math.atan2(es, ns); // TODO unsure, whether always the correct sign is produced
+		double lambda = centralLon + gamma/n;
+		double phi0 = java.lang.Math.PI / 2 - 2* java.lang.Math.atan(t); // TODO unsure, whether always the correct sign is produced
+		double phi1;
+		boolean iterate;
+		do {
+		  phi1 = java.lang.Math.PI / 2 - 2* java.lang.Math.atan(t*java.lang.Math.pow((1-e*java.lang.Math.sin(phi0))/(1+e*java.lang.Math.sin(phi0)),e/2));
+		  iterate = (java.lang.Math.abs(phi1 - phi0) > 0.000001);
+		  phi0 = phi1;
+		} while (iterate);
+		
+		CWPoint ret = new CWPoint(phi1 * 180 / java.lang.Math.PI, lambda * 180 / java.lang.Math.PI);
+		//Vm.debug("unproject: ret: " + ret.toString(CWPoint.DD));
+		return ret;
+	}
+	
+	public double getNorthing(ProjectedPoint pp) {
+		return pp.northing + falseNorthing;
+	}
+	public double getEasting(ProjectedPoint pp) {
+		return pp.easting + falseEasting;
+	}
+	
+	public ProjectedPoint set(double northing_, double easting_, ProjectedPoint pp) {
+		if (pp == null) {pp = new ProjectedPoint(); pp.projection = this; }
+		pp.setRaw(northing_ - falseNorthing, easting_ - falseEasting);
+		return pp;
+	}
+
+}
+

Modified: trunk/src/CacheWolf/navi/MapLoader.java
===================================================================
--- trunk/src/CacheWolf/navi/MapLoader.java	2009-08-12 22:14:15 UTC (rev 2081)
+++ trunk/src/CacheWolf/navi/MapLoader.java	2009-08-13 23:09:30 UTC (rev 2082)
@@ -486,16 +486,18 @@
 	 * @param maparea
 	 * @return [0] = topleft, [1] = buttomright, [2] = topright, [3] = buttomleft
 	 */
-	private GkPoint[] getGkArea(Area maparea) {
-		GkPoint[] ret = new GkPoint[4];
+	private ProjectedPoint[] getGkArea(Area maparea) {
+		ProjectedPoint[] ret = new ProjectedPoint[4];
 	//	CWPoint topright = new CWPoint(maparea.topleft.latDec, maparea.buttomright.lonDec);
 	//	CWPoint buttomleft = new CWPoint(maparea.buttomright.latDec, maparea.topleft.lonDec);
 		int crs = getCrs(maparea.getCenter());
-		int region = TransformCoordinates.getGkRegion(coordinateReferenceSystem[crs]);
-		ret[TOPLEFT_INDEX] = TransformCoordinates.wgs84ToGaussKrueger(maparea.topleft, coordinateReferenceSystem[crs]);
-		ret[BUTTOMRIGHT_INDEX] = TransformCoordinates.wgs84ToGaussKrueger(maparea.buttomright, coordinateReferenceSystem[crs]);
-		ret[TOPRIGHT_INDEX] = new GkPoint(ret[BUTTOMRIGHT_INDEX].getGkEasting(region), ret[TOPLEFT_INDEX].northing, ret[TOPLEFT_INDEX].stripewidth, ret[TOPLEFT_INDEX].lengthOfStripe0);
-		ret[BUTTOMLEFT_INDEX] = new GkPoint(ret[TOPLEFT_INDEX].getGkEasting(region), ret[BUTTOMRIGHT_INDEX].northing, ret[TOPLEFT_INDEX].stripewidth, ret[TOPLEFT_INDEX].lengthOfStripe0);
+		int region = TransformCoordinates.getLocalProjectionSystem(coordinateReferenceSystem[crs]);
+		ret[TOPLEFT_INDEX] = TransformCoordinates.wgs84ToEpsg(maparea.topleft, coordinateReferenceSystem[crs]);
+		ret[BUTTOMRIGHT_INDEX] = TransformCoordinates.wgs84ToEpsg(maparea.buttomright, coordinateReferenceSystem[crs]);
+		ret[TOPRIGHT_INDEX] =  ret[BUTTOMRIGHT_INDEX].cloneIt();
+		ret[TOPRIGHT_INDEX].shift(ret[TOPLEFT_INDEX].getNorthing() - ret[BUTTOMRIGHT_INDEX].getNorthing(), 0); // was: new GkPoint(ret[BUTTOMRIGHT_INDEX].getEasting(region), ret[TOPLEFT_INDEX].northing, ret[TOPLEFT_INDEX].stripewidth, ret[TOPLEFT_INDEX].lengthOfStripe0);
+		ret[BUTTOMLEFT_INDEX] = ret[BUTTOMRIGHT_INDEX].cloneIt(); 
+		ret[BUTTOMLEFT_INDEX].shift(ret[TOPLEFT_INDEX].getEasting() - ret[BUTTOMRIGHT_INDEX].getEasting(), 1); // was: new GkPoint(ret[TOPLEFT_INDEX].getEasting(region), ret[BUTTOMRIGHT_INDEX].northing, ret[TOPLEFT_INDEX].stripewidth, ret[TOPLEFT_INDEX].lengthOfStripe0);
 		//Vm.debug("rot left direkt: " + TransformCoordinates.GkToWgs84(ret[TOPLEFT_INDEX], region).getBearing(TransformCoordinates.GkToWgs84(ret[BUTTOMLEFT_INDEX], region)));
 		//Vm.debug("rot right direkt: " + TransformCoordinates.GkToWgs84(ret[TOPRIGHT_INDEX], region).getBearing(TransformCoordinates.GkToWgs84(ret[BUTTOMRIGHT_INDEX], region)));
 		//ret[2] = TransformCoordinates.wgs84ToGermanGk(topright, coordinateReferenceSystem[crs]);
@@ -504,17 +506,18 @@
 	}
 	public Area CenterScaleToArea(CWPoint center, float scale, Point pixelsize) {
 		Area bbox = new Area();
-		int region = TransformCoordinates.getGkRegion(coordinateReferenceSystem[0]);
+		int region = TransformCoordinates.getLocalProjectionSystem(coordinateReferenceSystem[0]);
 		if (region > 0 ) {
-			GkPoint cgk = TransformCoordinates.wgs84ToGaussKrueger(center, coordinateReferenceSystem[getCrs(center)]);
-			GkPoint tlgk = new GkPoint(cgk);
+			int epsg = coordinateReferenceSystem[getCrs(center)];
+			ProjectedPoint cgk = TransformCoordinates.wgs84ToEpsg(center, epsg);
+			ProjectedPoint tlgk = cgk.cloneIt();
 			tlgk.shift(- pixelsize.x * scale / 2, 1);
 			tlgk.shift(pixelsize.y * scale / 2, 0);
-			GkPoint brgk = new GkPoint(cgk);
+			ProjectedPoint brgk = cgk.cloneIt();
 			brgk.shift(pixelsize.x * scale / 2, 1);
 			brgk.shift(-pixelsize.y * scale / 2, 0);
-			bbox.topleft = TransformCoordinates.GkToWgs84(tlgk, region);
-			bbox.buttomright = TransformCoordinates.GkToWgs84(brgk, region);
+			bbox.topleft = TransformCoordinates.ProjectedEpsgToWgs84(tlgk, epsg); // old: (tlgk, region);
+			bbox.buttomright = TransformCoordinates.ProjectedEpsgToWgs84(brgk, epsg); // TransformCoordinates.GkToWgs84(brgk, region);
 		} else {
 			switch (coordinateReferenceSystem[0]) {
 			case TransformCoordinates.EPSG_ETRS89:
@@ -543,14 +546,14 @@
 		if ( scale < minscaleWMS || scale > maxscaleWMS ) throw new IllegalArgumentException(MyLocale.getMsg(4825, "scale")+" " + scale / Math.sqrt(2)+ MyLocale.getMsg(4826, " not supported by online map service, supported scale range:")+" " + minscale + " - " + maxscale + MyLocale.getMsg(4827, " (measured in meters per pixel vertically)"));
 		int crs = 0;
 		String bbox = "BBOX=";
-		int region = TransformCoordinates.getGkRegion(coordinateReferenceSystem[0]); 
-		if (region > 0) {
+		int localsystem = TransformCoordinates.getLocalProjectionSystem(coordinateReferenceSystem[0]); 
+		if (localsystem > 0) {
 			crs = getCrs(maparea.getCenter());
-			GkPoint[] gk = getGkArea(maparea);
-			buttomleft = TransformCoordinates.GkToWgs84(gk[BUTTOMLEFT_INDEX], region);
-			topright = TransformCoordinates.GkToWgs84(gk[TOPRIGHT_INDEX], region);
-			bbox += TransformCoordinates.wgs84ToGaussKrueger(buttomleft, coordinateReferenceSystem[crs]).toString(2, "", ",", region);
-			bbox += "," + TransformCoordinates.wgs84ToGaussKrueger(topright, coordinateReferenceSystem[crs]).toString(2, "", ",", region);
+			ProjectedPoint[] gk = getGkArea(maparea);
+			buttomleft = TransformCoordinates.ProjectedEpsgToWgs84(gk[BUTTOMLEFT_INDEX], coordinateReferenceSystem[crs]);
+			topright = TransformCoordinates.ProjectedEpsgToWgs84(gk[TOPRIGHT_INDEX], coordinateReferenceSystem[crs]);
+			bbox += TransformCoordinates.wgs84ToEpsg(buttomleft, coordinateReferenceSystem[crs]).toString(2, "", ",");
+			bbox += "," + TransformCoordinates.wgs84ToEpsg(topright, coordinateReferenceSystem[crs]).toString(2, "", ",");
 		} else if (coordinateReferenceSystem[0] == TransformCoordinates.EPSG_WGS84) 
 			bbox += buttomleft.toString(CWPoint.LON_LAT)  + "," + topright.toString(CWPoint.LON_LAT);
 		else throw new IllegalArgumentException(MyLocale.getMsg(4828, "Coordinate system not supported by cachewolf:")+" " + coordinateReferenceSystem.toString());
@@ -563,22 +566,32 @@
 	}
 
 	/**
-	 * This method gives the number in the arrays of coordinateReferenceSystems, which should be used
+	 * This method gives the number in the array of coordinateReferenceSystems, which should be used
 	 * a) if only one is in the array 0 is returned
-	 * b) if there are more, find out which one matches the correct Gau?-K?ger stripe
+	 * b) if there are more, find out which one matches the correct zone (e.g. Gau?-K?ger stripe)
 	 * Call this routine with center of the area (use Area.getcenter()) 
 	 * @param p Point for which the epsg code is searched for
 	 * @return
 	 */
 	private int getCrs(TrackPoint p) {
-		int crs = 0;
+		int crsindex = 0;
 		if (coordinateReferenceSystem.length > 1) {
-			int region = TransformCoordinates.getGkRegion(coordinateReferenceSystem[0]);
-			GkPoint gkbl = TransformCoordinates.wgs84ToGk(p, region); // TODO: think / read about what to do if buttom left and top right ae not in the same Gau?-Kr?ger stripe?
-			crs = TransformCoordinates.whichEpsg(coordinateReferenceSystem, gkbl);
-			if (crs < 0) throw new IllegalArgumentException(MyLocale.getMsg(4829, "getUrlForBoundingBox: Point:")+" " + gkbl.toString() + MyLocale.getMsg(4830, "no matching Gau?-Kr?ger-Stripe in the EPSG-code list in the .wms"));
+			int ls = TransformCoordinates.getLocalProjectionSystem(coordinateReferenceSystem[0]);
+			ProjectedPoint gkbl = TransformCoordinates.wgs84ToLocalsystem(p, ls); // TODO: think / read about what to do if buttom left and top right are not in the same Gau?-Kr?ger stripe?
+			int wantepsg = gkbl.getEpsgCode();
+			for (crsindex = 0; crsindex < coordinateReferenceSystem.length; crsindex++) {
+				if (coordinateReferenceSystem[crsindex] == wantepsg) break; 
+			}
+			if (crsindex >= coordinateReferenceSystem.length) { // not match
+				for (crsindex = 0; crsindex < coordinateReferenceSystem.length; crsindex++) {
+					if (Math.abs(coordinateReferenceSystem[crsindex] - wantepsg) == 1) break; // accept 1 zone deviation 
+				}
+				if (crsindex >= coordinateReferenceSystem.length) crsindex = -1;
+				
+			}
+			if (crsindex < 0) throw new IllegalArgumentException(MyLocale.getMsg(4829, "getUrlForBoundingBox: Point:")+" " + gkbl.toString() + MyLocale.getMsg(4830, "no matching Gau?-Kr?ger-Stripe in the EPSG-code list in the .wms"));
 		}
-		return crs;
+		return crsindex;
 	}
 
 	protected MapInfoObject getMapInfoObjectInternal(Area maparea, Point pixelsize) {
@@ -592,9 +605,9 @@
 		CWPoint buttomright = new CWPoint(maparea.buttomright);
 		double metersperpixalhorizontal = ( buttomright.getDistance(buttomleft) + topleft.getDistance(topright))/2 * 1000 / pixelsize.x; 
 		double metersperpixalvertical = ( buttomright.getDistance(topright) + topleft.getDistance(buttomleft))/2 * 1000 / pixelsize.y;
-		int region = TransformCoordinates.getGkRegion(coordinateReferenceSystem[0]); 
+		int region = TransformCoordinates.getLocalProjectionSystem(coordinateReferenceSystem[0]); 
 		if ( region > 0) {
-			GkPoint[] gk = getGkArea(maparea);
+			ProjectedPoint[] gk = getGkArea(maparea);
 			// bounding box in WMS is defined around the pixels, not exactly on the pixels --> the bounding box must be reduced on all edges by half a pixel
 			gk[TOPLEFT_INDEX].shift(metersperpixalhorizontal / 2, 1);
 			gk[TOPLEFT_INDEX].shift(-metersperpixalvertical / 2, 0);
@@ -607,10 +620,10 @@
 
 			Vm.debug("\n" + maparea.topleft.toString(CWPoint.LAT_LON));
 			//Vm.debug(TransformCoordinates.germanGkToWgs84(TransformCoordinates.wgs84ToGermanGk(maparea.topleft)).toString(CWPoint.LAT_LON));
-			topleft.set(gk[TOPLEFT_INDEX].northing, gk[TOPLEFT_INDEX].getGkEasting(region));
-			buttomright.set(gk[BUTTOMRIGHT_INDEX].northing, gk[BUTTOMRIGHT_INDEX].getGkEasting(region));
-			topright.set(gk[TOPRIGHT_INDEX].northing, gk[TOPRIGHT_INDEX].getGkEasting(region));
-			buttomleft.set(gk[BUTTOMLEFT_INDEX].northing, gk[BUTTOMLEFT_INDEX].getGkEasting(region));
+			topleft.set(gk[TOPLEFT_INDEX].getNorthing(), gk[TOPLEFT_INDEX].getEasting());
+			buttomright.set(gk[BUTTOMRIGHT_INDEX].getNorthing(), gk[BUTTOMRIGHT_INDEX].getEasting());
+			topright.set(gk[TOPRIGHT_INDEX].getNorthing(), gk[TOPRIGHT_INDEX].getEasting());
+			buttomleft.set(gk[BUTTOMLEFT_INDEX].getNorthing(), gk[BUTTOMLEFT_INDEX].getEasting());
 		} else if (coordinateReferenceSystem[0] == TransformCoordinates.EPSG_WGS84) {
 			// bounding box in WMS is defined around the pixels, not exactly on the pixels --> the bounding box must be reduced on all edges by half a pixel
 			topleft.shift(metersperpixalhorizontal / 2, 1);

Added: trunk/src/CacheWolf/navi/ProjectedPoint.java
===================================================================
--- trunk/src/CacheWolf/navi/ProjectedPoint.java	2009-08-12 22:14:15 UTC (rev 2081)
+++ trunk/src/CacheWolf/navi/ProjectedPoint.java	2009-08-13 23:09:30 UTC (rev 2082)
@@ -0,0 +1,202 @@
+package CacheWolf.navi;
+
+import CacheWolf.CWPoint;
+
+public class ProjectedPoint {
+	public final static int GK = 1;
+	public final static int LAMBERT = 2;
+
+	public static final int LOCALSYSTEM_GERMAN_GK            = 4900;
+	public static final int LOCALSYSTEM_ITALIAN_GB           = 3900; 
+	public static final int LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD = 4300;
+	public static final int LOCALSYSTEM_AUSTRIAN_LAMBERT_NEW = 4301;
+	public static final int LOCALSYSTEMFRANCE_LAMBERT_I2IV   = 3300; // France not yet implemented
+	public static final int LOCALSYSTEM_DEFAULT = LOCALSYSTEM_GERMAN_GK;
+
+	public static final LambertProjection PJ_AUSTRIAN_LAMBERT_OLD = new LambertProjection(TransformCoordinates.EPSG_AUSTRIAN_LAMBERT_OLD, 400000, 400000, 49.0, 46.0, 47.5, 13.333333, TransformCoordinates.BESSEL); 
+	public static final LambertProjection PJ_AUSTRIAN_LAMBERT_NEW = new LambertProjection(TransformCoordinates.EPSG_AUSTRIAN_LAMBERT_OLD, 400000, 400000, 49.0, 46.0, 47.5, 13.333333, TransformCoordinates.WGS84);
+	public static final GkProjection PJ_GERMAN_GK  = new GkProjection(TransformCoordinates.EPSG_GK2 -2           , 0, 500000, 3, 1000000, 0, 1     , TransformCoordinates.BESSEL);
+	public static final GkProjection PJ_ITALIAN_GB = new GkProjection(TransformCoordinates.EPSG_ITALIAN_GB_EW1 -1, 0, 500000, 6, 1000000, 0, 0.9996, TransformCoordinates.HAYFORD1909);
+
+	protected double northing; // TODO make these private
+	protected double easting; // because it is not clear for routines from outside if the stripe number is included, make this available only through methods
+	protected int zone;
+	public Projection projection;
+
+	public ProjectedPoint() { super(); }
+
+	public ProjectedPoint(Projection p) {
+		projection = p;
+	}
+
+	public ProjectedPoint(ProjectedPoint pp) {
+		northing   = pp.northing;
+		easting    = pp.easting;
+		zone       = pp.zone;
+		projection = pp.projection;
+	}
+
+	public ProjectedPoint(CWPoint wgs84, Projection projection_) {
+		projection = projection_;
+		projection.project(wgs84, this);
+	}
+
+
+	/** 
+	 * automatically projects wgs84 onto epsg OR
+	 * creates an ProjectedPoint with <br>
+	 * lat/lon = northin/easting (in local notaion)
+	 * 
+	 * @param p Point to be projected OR lat/lon = northing/easting
+	 * @param epsg_localsystem EPSG-Code OR ProjecetPoint.LOCALSYSTEM_XXX
+	 * @param isProjected if true, p contains northing in lat and easting in lon <br>
+	 * if false p will be projected to epsg
+	 */
+	public ProjectedPoint(CWPoint p, int epsg_localsystem, boolean isProjected, boolean isLocalsystem) {
+		if (isProjected) set(p, epsg_localsystem, isLocalsystem); 
+		else {
+			projection = (isLocalsystem ? getProjectionFromLs(epsg_localsystem) : getProjection(epsg_localsystem) );
+			if (isLocalsystem)	projection.project(p, this);
+			else				projection.project(p, this, epsg_localsystem); // the epsg is requiered here because each zone has a different epsg, so the zone is already fixed
+		}
+	}
+
+
+
+	public static Projection getProjection(int epsg) {
+		switch (epsg) {
+		case TransformCoordinates.EPSG_AUSTRIAN_LAMBERT_OLD: return PJ_AUSTRIAN_LAMBERT_OLD;
+		case TransformCoordinates.EPSG_AUSTRIAN_LAMBERT_NEW: return PJ_AUSTRIAN_LAMBERT_NEW;
+		case TransformCoordinates.EPSG_GK2: 
+		case TransformCoordinates.EPSG_GK3: 
+		case TransformCoordinates.EPSG_GK4: return PJ_GERMAN_GK;
+		case TransformCoordinates.EPSG_ITALIAN_GB_EW1:
+		case TransformCoordinates.EPSG_ITALIAN_GB_EW2: return PJ_ITALIAN_GB;
+		default: throw new IllegalArgumentException("ProjectedPoint.getProjection: epsg-code: " + epsg + "not supported");
+		}
+	}
+	
+	public static Projection getProjectionFromLs(int localsystem) {
+		switch (localsystem) {
+		case LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD:	return PJ_AUSTRIAN_LAMBERT_OLD;
+		case LOCALSYSTEM_AUSTRIAN_LAMBERT_NEW:	return PJ_AUSTRIAN_LAMBERT_NEW;
+		case LOCALSYSTEM_GERMAN_GK:	          	return PJ_GERMAN_GK; 
+		case LOCALSYSTEM_ITALIAN_GB:			return PJ_ITALIAN_GB;	
+		default: throw new IllegalArgumentException("ProjectedPoint(CWPoint, int): region "+localsystem+" not supported");
+		}
+	}
+
+
+	/**
+	 * 
+	 * @param northing: raw, without false northing, e.g. can be negative
+	 * @param easting
+	 * @param pj
+	 */
+
+	/*	
+	public ProjectedPoint(double northing_, double easting_, Projection pj) {
+		northing = northing_;
+		easting = easting_;
+		projection = pj;
+	}
+	 */
+	public double getNorthing() {
+		return projection.getNorthing(this);
+	}
+	public double getEasting() {
+		return projection.getEasting(this);
+	}
+
+	public ProjectedPoint cloneIt() {
+		return new ProjectedPoint(this);
+	}
+
+
+	/**
+	 * This will give you the normal projected (e.g.Gau?-Kr?ger) easting value
+	 * (that means including the stripe number)
+	 * @return
+	 */
+	public TrackPoint toTrackPoint(int region) {
+		return new TrackPoint(getNorthing(), getEasting());
+	}
+
+	/**
+	 * easting measured in meters from stripe middle
+	 * @return
+	 */
+	public double getRawEasting() {
+		return easting;
+	}
+
+	/**
+	 * easting measured in meters from stripe middle
+	 * @return
+	 */
+	public double getRawNorthing() {
+		return northing;
+	}
+
+	public void setRaw(double northing_, double easting_) {
+		northing = northing_;
+		easting = easting_;
+	}
+
+	public void setzone(int z){
+		zone = z;
+	}
+
+	public int getZone() {
+		return zone;
+	}
+	
+	public int getEpsgCode() {
+		return projection.getEpsgcode(this);
+	}
+
+	/**
+	 * Set with local notation, incl. falsenorthing and -easting
+	 * @param northing_ 
+	 * @param easting_
+	 */
+	public void set(double northing_, double easting_) {
+		projection.set(northing_, easting_, this);
+	}
+
+	public void set(CWPoint projected, int epsg_localsystem, boolean isLocalsystem) {
+		projection = (isLocalsystem ? getProjectionFromLs(epsg_localsystem) : getProjection(epsg_localsystem) );
+		set(projected.latDec, projected.lonDec);
+	}
+
+	public String toString() {
+		return toString(2, "", " ");
+	}
+
+	public CWPoint unproject() {
+		return projection.unproject(this);
+	}
+
+	public String toString(int decimalplaces, String prefix, String seperator) {
+		ewe.sys.Double n = new ewe.sys.Double();
+		ewe.sys.Double e = new ewe.sys.Double();
+		n.set(projection.getNorthing(this));
+		e.set(projection.getEasting(this));
+		n.decimalPlaces = decimalplaces;
+		e.decimalPlaces = decimalplaces;
+		return prefix + e.toString().replace(',', '.') + seperator + n.toString().replace(',', '.');
+	}
+
+	/**
+	 * shift the point
+	 * @param meters positive to north (east), negative to south (west)
+	 * @param direction 0 north-south, 1 east-west
+	 */
+	public void shift(double meters, int direction) {
+		switch (direction) { // TODO this works correctly only within a stripe/zone
+		case 0: northing += meters; return;
+		case 1: easting += meters; return;
+		}
+	}
+}
+

Added: trunk/src/CacheWolf/navi/Projection.java
===================================================================
--- trunk/src/CacheWolf/navi/Projection.java	2009-08-12 22:14:15 UTC (rev 2081)
+++ trunk/src/CacheWolf/navi/Projection.java	2009-08-13 23:09:30 UTC (rev 2082)
@@ -0,0 +1,43 @@
+package CacheWolf.navi;
+
+import CacheWolf.CWPoint;
+
+abstract class Projection{
+	/** when implemented: <br>
+	 * a) if the projection covers only one epsgCode here it should be written <br>
+	 * b) if the projection covers several zones which have different epsg codes
+	 * put here the figure which must be added to the zone number to get the 
+	 * corresponding epsg-codes (see method getEpsgcode)
+	 */
+	public int epsgCode;
+
+	/**
+	 * The zone is automatically determined
+	 * rember to set the zone in pp when you implement this method 
+	 * @param ll
+	 * @param pp: pp will be filled with the projected ll. If null, a new ProjectedPoint will be created
+	 * @return
+	 */
+	public abstract ProjectedPoint project(CWPoint wgs84, ProjectedPoint pp);
+
+	/**
+	 * Zone is fixed by epsg-code
+	 * @param ll
+	 * @param pp
+	 * @param epsg
+	 * @return
+	 */
+	public abstract ProjectedPoint project(CWPoint ll, ProjectedPoint pp, int epsg);
+	public abstract CWPoint unproject(ProjectedPoint pp);
+	/**
+	 * Returns the projected Northing in local notation
+	 * @param pp
+	 * @return
+	 */
+	public abstract double getNorthing(ProjectedPoint pp);
+	public abstract double getEasting(ProjectedPoint pp);
+	public int getEpsgcode(ProjectedPoint pp) {
+		return epsgCode + pp.zone;
+	}
+	public abstract ProjectedPoint set(double northing, double easting, ProjectedPoint pp);
+}

Modified: trunk/src/CacheWolf/navi/TransformCoordinates.java
===================================================================
--- trunk/src/CacheWolf/navi/TransformCoordinates.java	2009-08-12 22:14:15 UTC (rev 2081)
+++ trunk/src/CacheWolf/navi/TransformCoordinates.java	2009-08-13 23:09:30 UTC (rev 2082)
@@ -6,6 +6,8 @@
 
 import java.lang.Math;
 
+import ewe.sys.Vm;
+
 /**
  * Class to transform coordinates and shift datums
  * it uses the 7 parameter Helmert Transformation
@@ -26,7 +28,7 @@
  * @author Pfeffer
  *
  */
-public class TransformCoordinates {
+public final class TransformCoordinates {
 
 	public static final int EPSG_WGS84 = 4326; 
 	public static final int EPSG_ETRS89 = 25832; // TODO support it anyhow 
@@ -37,146 +39,129 @@
 	/** Gau?-Boaga, Monte Mario, Roma 1940, IT_ROMA1940 */
 	public static final int EPSG_ITALIAN_GB_EW1 = 3003; 
 	public static final int EPSG_ITALIAN_GB_EW2 = 3004;
-	
-	private static final Ellipsoid BESSEL = new Ellipsoid(6377397.155, 6356078.962, true);
-	public static final Ellipsoid WGS84 = new Ellipsoid(6378137.000, 6356752.314, true);
-	public static final Ellipsoid HAYFORD1909 = new Ellipsoid(6378388, 297, false);
-	
-	//	 taken from http://crs.bkg.bund.de/crs-eu/ click on "national CRS" -> germany -> DE_DHDN / GK_3 -> DE_DHDN (North) to ETRS89
-	//	 they are the same as http://www.geoclub.de/files/GK_nach_GPS.xls "Parametersatz 4 = Deutschland Nord"
-	private static final TransformParameters GK_NORD_GERMANY_TO_WGS84 = new TransformParameters(590.5, 69.5, 411.6, 0.796, 0.052, 3.601, 8.300);
+	/** Austrian Lambert, Bessel 1841, Hermannskogel */
+	public static final int EPSG_AUSTRIAN_LAMBERT_OLD = 31287;
+	/** Austrian Lambert, ETRS89 */
+	public static final int EPSG_AUSTRIAN_LAMBERT_NEW = 3416;
+
+	public static final Ellipsoid BESSEL      = new Ellipsoid(6377397.155, 6356078.962, true);
+	public static final Ellipsoid WGS84       = new Ellipsoid(6378137.000, 6356752.314, true);
+	public static final Ellipsoid HAYFORD1909 = new Ellipsoid(6378388    , 297        , false);
+
+	//	 taken from http://www.crs-geo.eu/crseu/EN/Home/homepage__node.html?__nnn=true click on "national CRS" -> germany -> DE_DHDN / GK_3 -> DE_DHDN (North) to ETRS89
+	//	 they are the same as http://www.geoclub.de/files/GK_nach_GPS.xls "Parametersatz 4 = Deutschland Nord" (rotation *-1)
 	/** use this for nord Germany, maximum deviation sub meter, valid in the former BRD (west germany) in 52?20' N ... 55?00' N */
-	public static final TransformParameters GK_NORD_GERMANY =  GK_NORD_GERMANY_TO_WGS84; 
+	private static final TransformParameters GK_NORD_GERMANY_TO_WGS84 = new TransformParameters(590.5, 69.5, 411.6, 0.796, 0.052, 3.601, 8.300, BESSEL);
 
-	//	 taken from http://crs.bkg.bund.de/crs-eu/ click on "national CRS" -> germany -> DE_DHDN / GK_3 -> DE_DHDN (Middle) to ETRS89
-	private static final TransformParameters GK_MID_GERMANY_TO_WGS84 = new TransformParameters(584.8, 67.0, 400.3, -0.105, -0.013, 2.378, 10.290);
+	//	 taken from http://crs.bkg.bund.de/crs-eu/ click on "national CRS" -> germany -> DE_DHDN / GK_3 -> DE_DHDN (Middle) to ETRS89 (rotation *-1)
 	/** use this for mid-Germany, maximum deviation sub meter, valid in the former BRD (west germany) in 50?20' N ... 52?20' N */
-	public static final TransformParameters GK_MID_GERMANY =  GK_MID_GERMANY_TO_WGS84; 
+	private static final TransformParameters GK_MID_GERMANY_TO_WGS84 = new TransformParameters(584.8, 67.0, 400.3, -0.105, -0.013, 2.378, 10.290, BESSEL);
 
-	//	 taken from http://crs.bkg.bund.de/crs-eu/ click on "national CRS" -> germany -> DE_DHDN / GK_3 -> DE_DHDN (South) to ETRS89
-	private static final TransformParameters GK_SOUTH_GERMANY_TO_WGS84 = new TransformParameters(597.1, 71.4, 412.1, -0.894, -0.068, 1.563, 7.580);
+	//	 taken from http://crs.bkg.bund.de/crs-eu/ click on "national CRS" -> germany -> DE_DHDN / GK_3 -> DE_DHDN (South) to ETRS89 (rotation *-1)
 	/** use this for south Germany, maximum deviation sub meter, valid in the former BRD (west germany) in 47?00' N ... 50?20' N */
-	public static final TransformParameters GK_SOUTH_GERMANY =  GK_SOUTH_GERMANY_TO_WGS84; 
+	private static final TransformParameters GK_SOUTH_GERMANY_TO_WGS84 = new TransformParameters(597.1, 71.4, 412.1, -0.894, -0.068, 1.563, -7.580, BESSEL);
 
 	public static Area FORMER_GDR = new Area(new CWPoint(54.923414, 10.503013), new CWPoint(50.402578, 14.520637)); 
-	
+
 	// taken from http://www.lverma.nrw.de/produkte/druckschriften/verwaltungsvorschriften/images/gps/TrafopsNRW.pdf for NRW this transform has deviations lower than 34cm.
-	private static final TransformParameters GK_NRW_GERMANY_TO_WGS84 = new TransformParameters(566.1, 116.3, 390.1, -1.11, -0.24, 3.76, 12.6);
 	/** use this for NRW in Germany. Deviations less than 34 cm */
-	public static final TransformParameters GK_NRW_GERMANY =  GK_NRW_GERMANY_TO_WGS84; 
+	private static final TransformParameters GK_NRW_GERMANY_TO_WGS84 = new TransformParameters(566.1, 116.3, 390.1, -1.11, -0.24, 3.76, -12.6, BESSEL);
 
 	// taken from http://www.lverma.nrw.de/produkte/druckschriften/verwaltungsvorschriften/images/gps/TrafopsNRW.pdf for NRW this transform has deviations lower than 113cm.
 	// these matches to  http://www.geoclub.de/files/GK_nach_GPS.xls "Parametersatz 3 = Deutschland 1995"
-	private static final TransformParameters GK_GERMANY_1995_TO_WGS84 = new TransformParameters(582, 105, 414, -1.04, -0.35, +3.08, 8.3);
 	/** Use this for Germany if there is no more specific available. Deviations less than 113 cm */
-	public static final TransformParameters GK_GERMANY_1995 =  GK_GERMANY_1995_TO_WGS84; 
+	private static final TransformParameters GK_GERMANY_1995_TO_WGS84 = new TransformParameters(582, 105, 414, -1.04, -0.35, +3.08, -8.3, BESSEL);
 
 	// taken from http://www.geodatenzentrum.de/geodaten/gdz_home1.gdz_home_start?gdz_home_para1=Technische%A0Hinweise&gdz_home_para2=Technische%A0Hinweise&gdz_home_menu_nr=10&gdz_home_menu_nr2=1&gdz_home_para3=/auftrag/html/gdz_tech_geo_deu.htm&gdz_home_spr=deu&gdz_home_para0=0
-	private static final TransformParameters GK_GERMANY_BKG_TO_WGS84 = new TransformParameters(586, 87, 409, -0.52, -0.15, 2.82, 9);
 	/** Use this for Germany if there is no more specific available. Deviations unknown. Data source: Bundesamt f?r Kartographie und Geod?sie, taken from website on: 1-11-2007 */
-	public static final TransformParameters GK_GERMANY_BKG =  GK_GERMANY_BKG_TO_WGS84; 
+	private static final TransformParameters GK_GERMANY_BKG_TO_WGS84 = new TransformParameters(586, 87, 409, -0.52, -0.15, 2.82, -9, BESSEL);
 
-	// take from http://www.geoclub.de/files/GK_nach_GPS.xls "Parametersatz 2 = Deutschland 2001"
-	private static final TransformParameters GK_GERMANY_2001_TO_WGS84 = new TransformParameters(598.1, 73.7, 418.2, -0.202, -0.045, 2.455, 6.700);
+	// take from http://www.geoclub.de/files/GK_nach_GPS.xls "Parametersatz 2 = Deutschland 2001" (rotation *-1)
 	/** Use this for Germany if there is no more specific available. maximal deviations unknown */
-	public static final TransformParameters GK_GERMANY_2001 =  GK_GERMANY_2001_TO_WGS84;
+	private static final TransformParameters GK_GERMANY_2001_TO_WGS84 = new TransformParameters(598.1, 73.7, 418.2, -0.202, -0.045, 2.455, 6.700, BESSEL);
 
-	/** The italian variant of Gau?-Kr?ger (Gau?-Boaga) */
 	// taken from http://crs.bkg.bund.de/crs-eu/ -> italy -> ROMA40 (change the sign of the rotation parameters!)
-	public static final TransformParameters GB_ITALIAN_PENINSULAR_TO_WGS84 =  new TransformParameters(-104.1, -49.1, -9.9, -0.971, 2.917, -0.714, -11.68);
+	/** The italian variant of Gau?-Kr?ger (Gau?-Boaga) */
+	public static final TransformParameters GB_ITALIAN_PENINSULAR_TO_WGS84 =  new TransformParameters(-104.1, -49.1, -9.9, -0.971, 2.917, -0.714, -11.68, HAYFORD1909);
 	//static final Area ITALY_PENINSULAR = new Area(new CWPoint());
-	public static final TransformParameters GB_ITALIAN_SARDINIA_TO_WGS84 =  new TransformParameters(-168.6, -34.0, 38.6, 0.374, 0.679, 1.379, -9.48);
+	public static final TransformParameters GB_ITALIAN_SARDINIA_TO_WGS84 =  new TransformParameters(-168.6, -34.0, 38.6, 0.374, 0.679, 1.379, 9.48, HAYFORD1909);
 	static final Area ITALY_SARDINIA = new Area(new CWPoint(42, 6), new CWPoint(38, 11));
-	static final Area ITALY_SARDINIA_GK = new Area(wgs84ToGaussKrueger(ITALY_SARDINIA.topleft, EPSG_ITALIAN_GB_EW1).toTrackPoint(GkPoint.ITALIAN_GB),
-			wgs84ToGaussKrueger(ITALY_SARDINIA.buttomright, EPSG_ITALIAN_GB_EW1).toTrackPoint(GkPoint.ITALIAN_GB));
+	static final Area ITALY_SARDINIA_GK = new Area(wgs84ToEpsg(ITALY_SARDINIA.topleft, EPSG_ITALIAN_GB_EW1).toTrackPoint(ProjectedPoint.LOCALSYSTEM_ITALIAN_GB),
+			wgs84ToEpsg(ITALY_SARDINIA.buttomright, EPSG_ITALIAN_GB_EW1).toTrackPoint(ProjectedPoint.LOCALSYSTEM_ITALIAN_GB));
 
-	public static final TransformParameters GB_ITALIAN_SICILIA_TO_WGS84 =  new TransformParameters(-50.2, -50.4, 84.8, 0.690, 2.012, -0.459, -28.08);
+	public static final TransformParameters GB_ITALIAN_SICILIA_TO_WGS84 =  new TransformParameters(-50.2, -50.4, 84.8, 0.690, 2.012, -0.459, 28.08, HAYFORD1909);
 	static final Area ITALY_SICILIA = new Area(new CWPoint(39, 12), new CWPoint(36.3, 15.6));
-	static final Area ITALY_SICILIA_GK = new Area(wgs84ToGaussKrueger(ITALY_SICILIA.topleft, EPSG_ITALIAN_GB_EW2).toTrackPoint(GkPoint.ITALIAN_GB),
-			wgs84ToGaussKrueger(ITALY_SICILIA.buttomright, EPSG_ITALIAN_GB_EW2).toTrackPoint(GkPoint.ITALIAN_GB));
+	static final Area ITALY_SICILIA_GK = new Area(wgs84ToEpsg(ITALY_SICILIA.topleft, EPSG_ITALIAN_GB_EW2).toTrackPoint(ProjectedPoint.LOCALSYSTEM_ITALIAN_GB),
+			wgs84ToEpsg(ITALY_SICILIA.buttomright, EPSG_ITALIAN_GB_EW2).toTrackPoint(ProjectedPoint.LOCALSYSTEM_ITALIAN_GB));
 
+	// see also http://hal.gis.univie.ac.at/karto/lehr/fachbereiche/geoinfo/givi0304/tutorials/ersteschritte/projectionen.htm#ParMGIWGS84 
+	// taken from taken from http://www.crs-geo.eu/crseu/EN/Home/homepage__node.html?__nnn=true click on "national CRS" -> Austria -> AT (translation *-1 as of 11-8-2009)
+	/** Austria Datum Hermannskogel, AT_MGI accuracy about 1.5m */
+	public static final TransformParameters LAMBERT_AUSTRIAN_OLD_TO_WGS84 = new TransformParameters(577.326, 90.129, 463.919, -5.136599, -1.4742, -5.297044, 2.4232, BESSEL);
+	public static final TransformParameters LAMBERT_AUSTRIAN_NEW_TO_WGS84 = new TransformParameters(0      ,0      ,0       ,0         ,0       ,0         ,0      , WGS84);
+	// ?bersicht ?ber alle Transformparameter und EPSG-COdes und Projektionenm (PORJ4):
+	// http://svn.osgeo.org/metacrs/proj/trunk/proj/nad/epsg
+	//public static final TransformParameters WGS72_TO_WGS84 =  new TransformParameters(0, 0, 4.5, 0, 0, -0.554, 0.219);
+
 	private TransformCoordinates() {
 		// as all members are static, so avoid instantiation
 	} 
 
-	/* replaced by getGkRegion
-	public static boolean isGermanGk(int epsgcode) {
-		boolean ret = false;
-		switch (epsgcode) {
-		case EPSG_GK2:
-		case EPSG_GK3:
-		case EPSG_GK4:
-		case EPSG_GK5: ret = true; 
-		}
-		return ret;
-	}
-	*/
-	
+
 	/**
 	 * 
 	 * @param epsgcode
 	 * @return region code as needed for GkPoint, -1 if not Gau?-Kr?ger or not supported
+	 * Inside one ProjectedRegion the epsg-code (zone / stripe) can be automatically choosen
+	 * depending on lat / lon.
 	 */
-	public static int getGkRegion(int epsgcode) {
+	public static int getLocalProjectionSystem(int epsgcode) {
 		int ret;
 		switch (epsgcode) {
 		case EPSG_GK2:
 		case EPSG_GK3:
 		case EPSG_GK4:
-		case EPSG_GK5: ret = GkPoint.GERMAN_GK; break;
+		case EPSG_GK5: 					ret = ProjectedPoint.LOCALSYSTEM_GERMAN_GK; break;
 		case EPSG_ITALIAN_GB_EW1:
-		case EPSG_ITALIAN_GB_EW2: ret = GkPoint.ITALIAN_GB; break;
+		case EPSG_ITALIAN_GB_EW2:       ret = ProjectedPoint.LOCALSYSTEM_ITALIAN_GB; break;
+		case EPSG_AUSTRIAN_LAMBERT_OLD: ret = ProjectedPoint.LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD; break;
+		case EPSG_AUSTRIAN_LAMBERT_NEW: ret = ProjectedPoint.LOCALSYSTEM_AUSTRIAN_LAMBERT_NEW; break;
 		default: ret = -1;
 		}
 		return ret;
 	}
-	
+
 	public static boolean isSupported(int epsgcode) {
-		boolean ret = false;
-		switch (epsgcode) {
-		case EPSG_WGS84:
-		case EPSG_GK2:
-		case EPSG_GK3:
-		case EPSG_GK4:
-		case EPSG_GK5: 
-		case EPSG_ITALIAN_GB_EW1:
-		case EPSG_ITALIAN_GB_EW2:
-			ret = true; 
-		}
-		return ret;
+		if ((epsgcode == EPSG_WGS84) || epsgcode == EPSG_ETRS89) return true;
+		return (getLocalProjectionSystem(epsgcode) >= 0);
 	}
-		
-	/**
-	 * This is the most abstract method: If you don't know 
-	 * when to use another one (if you are in need to do so, you will
-	 * know), use this one.
-	 * @param gk
-	 * @return
-	 */
-	public static CWPoint germanGkToWgs84(GkPoint gk) {
-		if (gk.northing <= 6089288.064 && gk.northing >= 5585291.767 && // these coordinates are transformed ones from the invers routine
-				( gk.getStripe() == 4 && gk.getGkEasting(GkPoint.GERMAN_GK) >= 4404124.247 && gk.getGkEasting(GkPoint.GERMAN_GK) <= 4679300.398) ||
-				( gk.getStripe() == 5 && gk.getGkEasting(GkPoint.GERMAN_GK) >= 5211904.597 && gk.getGkEasting(GkPoint.GERMAN_GK) <= 5466056.603)
-			) return gkToWgs84(gk, BESSEL, GK_GERMANY_2001, 1);
-		if (gk.northing <= 6097247.910 && gk.northing >= 5800464.725 )return gkToWgs84(gk, BESSEL, GK_NORD_GERMANY, 1);
-		if (gk.northing <= 5800464.725 && gk.northing >= 5577963.555 )return gkToWgs84(gk, BESSEL, GK_MID_GERMANY, 1);
-		if (gk.northing <= 5577963.555 && gk.northing >= 5207294.028 )return gkToWgs84(gk, BESSEL, GK_SOUTH_GERMANY, 1);
-		return  gkToWgs84(gk, BESSEL, GK_GERMANY_2001, 1);
+
+
+	public static CWPoint ProjectedEpsgToWgs84(ProjectedPoint lp, int epsg) {
+		return ProjectedToWgs84(lp, epsg, false);
 	}
-	public static CWPoint italianGkToWgs84(GkPoint gk) {
-		if (ITALY_SARDINIA_GK.isInBound(gk.toTrackPoint(GkPoint.ITALIAN_GB))) return gkToWgs84(gk, HAYFORD1909, GB_ITALIAN_SARDINIA_TO_WGS84, 0.9996);
-		if (ITALY_SICILIA_GK.isInBound(gk.toTrackPoint(GkPoint.ITALIAN_GB))) return gkToWgs84(gk, HAYFORD1909, GB_ITALIAN_SICILIA_TO_WGS84, 0.9996);
-		else return gkToWgs84(gk, HAYFORD1909, GB_ITALIAN_PENINSULAR_TO_WGS84, 0.9996);
-	}
 
-	public static CWPoint GkToWgs84(GkPoint gk, int region) {
-		switch (region) {
-		case GkPoint.GERMAN_GK: return germanGkToWgs84(gk);
-		case GkPoint.ITALIAN_GB: return italianGkToWgs84(gk);
+	public static CWPoint ProjectedToWgs84(ProjectedPoint lp, int epsg_localsystem, boolean isLocalSystem) {
+		CWPoint ll = lp.unproject();
+		int ls = (isLocalSystem ? epsg_localsystem : getLocalProjectionSystem(epsg_localsystem));
+		TransformParameters transparams;
+		switch (ls) {
+		case ProjectedPoint.LOCALSYSTEM_GERMAN_GK:
+			transparams = getGermanTransformParams(lp);  break;
+		case ProjectedPoint.LOCALSYSTEM_ITALIAN_GB: 
+			transparams = getItalianTransformParams(lp); break;
+		case ProjectedPoint.LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD:	
+			transparams = LAMBERT_AUSTRIAN_OLD_TO_WGS84; break; 
+		case ProjectedPoint.LOCALSYSTEM_AUSTRIAN_LAMBERT_NEW: 	
+			transparams = LAMBERT_AUSTRIAN_NEW_TO_WGS84; break;
+		default: throw new IllegalArgumentException("ProjectedToWGS84: EPSG-code: " + epsg_localsystem + " not supported");
 		}
-		throw new IllegalArgumentException("GkToWgs84: region: " + region + " not supported");
+		XyzCoordinates xyzorig = latLon2xyz(ll, 0, transparams.ellip);
+		XyzCoordinates xyzwgs84 = transform(xyzorig, transparams);
+		return xyz2Latlon(xyzwgs84, WGS84);
 	}
-	
+
+
 	/**
 	 * This is the most abstract method: If you don't know 
 	 * when to use another one (if you are in need to do so, you will
@@ -187,120 +172,84 @@
 	 * @param gk
 	 * @return
 	 */
-	public static GkPoint wgs84ToGermanGk(CWPoint ll) {
-		return  wgs84ToGk(ll, GkPoint.GERMAN_GK); 	
-	}
 
-	/**
-	 * 
-	 * @param ll
-	 * @param region e.g. GkPoint.GERMAN_GK 
-	 * @return
-	 */
-	public static GkPoint wgs84ToGk(TrackPoint ll, int region) {
-		switch (region) {
-		case GkPoint.GERMAN_GK:	return  wgs84ToGk(ll, BESSEL, getGermanGkTransformParameters(ll), -1, 3, 0, 1); 	
-		case GkPoint.ITALIAN_GB:return  wgs84ToGk(ll, HAYFORD1909, getItalianGkTransformParameters(ll), -1, 6, 3, 0.9996); 	
-		default: throw new IllegalArgumentException("wgs84ToGk(CWPoint, int): region: " + region + "not supported");
-		}
-	}
-	
+
 	public static TransformParameters getGermanGkTransformParameters(TrackPoint ll) {
-		if (FORMER_GDR.isInBound(ll)) return GK_GERMANY_2001; // exlcude former GDR from the splitting germany in north/middel/south
-		if (ll.latDec <= 55 && ll.latDec >= 52.33333334 ) return  GK_NORD_GERMANY;
-		if (ll.latDec <= 52.33333334  && ll.latDec >= 50.33333334 ) return  GK_MID_GERMANY;
-		if (ll.latDec <= 50.33333334  && ll.latDec >= 47) return  GK_SOUTH_GERMANY;
-		return GK_GERMANY_2001;
+		if (FORMER_GDR.isInBound(ll)) return GK_GERMANY_2001_TO_WGS84; // exlcude former GDR from the splitting germany in north/middel/south
+		if (ll.latDec <= 55 && ll.latDec >= 52.33333334 ) return  GK_NORD_GERMANY_TO_WGS84;
+		if (ll.latDec <= 52.33333334  && ll.latDec >= 50.33333334 ) return  GK_MID_GERMANY_TO_WGS84;
+		if (ll.latDec <= 50.33333334  && ll.latDec >= 47) return  GK_SOUTH_GERMANY_TO_WGS84;
+		return GK_GERMANY_2001_TO_WGS84;
 	}
+	public static TransformParameters getGermanTransformParams(ProjectedPoint gk) {
+		double n = gk.getNorthing();
+		if (n <= 6089288.064 && n >= 5585291.767 && // these coordinates are transformed ones from the invers routine
+				( gk.zone == 4 && gk.getEasting() >= 4404124.247 && gk.getEasting() <= 4679300.398) ||
+				( gk.zone == 5 && gk.getEasting() >= 5211904.597 && gk.getEasting() <= 5466056.603)
+		) return GK_GERMANY_2001_TO_WGS84;
+		if (n <= 6097247.910 && n >= 5800464.725 )return GK_NORD_GERMANY_TO_WGS84;
+		if (n <= 5800464.725 && n >= 5577963.555 )return GK_MID_GERMANY_TO_WGS84;
+		if (n <= 5577963.555 && n >= 5207294.028 )return GK_SOUTH_GERMANY_TO_WGS84;
+		return GK_GERMANY_2001_TO_WGS84;
+	}
 
 	public static TransformParameters getItalianGkTransformParameters(TrackPoint ll) {
 		if (ITALY_SARDINIA.isInBound(ll)) return GB_ITALIAN_SARDINIA_TO_WGS84;
 		if (ITALY_SICILIA.isInBound(ll)) return GB_ITALIAN_SICILIA_TO_WGS84;
 		else return GB_ITALIAN_PENINSULAR_TO_WGS84;
 	}
-	
-	/**
-	 * This function returns the position in the list of the given epsg code list
-	 * which corresondes to the stripe used in Gau?-Kr?ger Point gk
-	 * @param epsgcodes list of epsgcodes
-	 * @param gk
-	 * @return postion in array of epsgcodes, -1 if not found
-	 */
-	public static int whichEpsg(int[] epsgcodes, GkPoint gk) {
-		int stripe = gk.getStripe();
-		int i;
-		for (i = 0; i < epsgcodes.length; i++) {
-			if (getGkStripeEpsg(epsgcodes[i]) == stripe) break;
-		}
-		if (i >= epsgcodes.length) return -1;
-		return i;
+	public static TransformParameters getItalianTransformParams(ProjectedPoint gk) {
+		if (ITALY_SARDINIA_GK.isInBound(gk.toTrackPoint(ProjectedPoint.LOCALSYSTEM_ITALIAN_GB))) return GB_ITALIAN_SARDINIA_TO_WGS84;
+		if (ITALY_SICILIA_GK.isInBound(gk.toTrackPoint(ProjectedPoint.LOCALSYSTEM_ITALIAN_GB))) return GB_ITALIAN_SICILIA_TO_WGS84;
+		else return GB_ITALIAN_PENINSULAR_TO_WGS84;
 	}
-	
-	/**
-	 * Call this routine to convert from wgs84 into German Gau?-Kr?ger-Coordinates 
-	 * using the Gau?-Kr?ger Projection and the ellipsoid forgk
-	 * If you want the Gau?-Kr?ger-Coordinates in a certain stripe, provide the
-	 * stripe and stripe width, otherwise set stripe to -1, then the stripe 
-	 * will be automatically determined
-	 * @param ll
-	 * @param Gau?-Kr?ger-to-WGS84 transformation parameters, they will be automatically inverted
-	 * @param stripe stripe to force to, otherwise -1 will determine the stripe automatically
-	 * @return
-	 */ // TODO find out what about the Krassowski in former GDR?
-	public static GkPoint wgs84ToGk(TrackPoint ll, Ellipsoid forgk, TransformParameters gk2wgs84, int stripe, int stripewidth, int degreeOfStripe0, double scale) {
-		XyzCoordinates wgsxyz = latLon2xyz(ll, 0, WGS84);
-		XyzCoordinates gkxyz = transform(wgsxyz, gk2wgs84.inverted); 
-		CWPoint gkll = xyz2Latlon(gkxyz, forgk);
-		//ewe.sys.Vm.debug("wgs84-ll: " + new CWPoint(ll).toString(CWPoint.DMS));
-		//ewe.sys.Vm.debug("gkll: " + gkll.toString(CWPoint.DMS));
-		if (stripe == -1)	return projectLatlon2GkStripeauto(gkll, forgk, stripewidth, degreeOfStripe0, scale);
-		else return projectLatlon2GK(gkll, forgk, stripewidth, stripe, degreeOfStripe0, scale); 
+
+
+	public static ProjectedPoint wgs84ToEpsg(TrackPoint wgs84, int epsg) throws IllegalArgumentException {
+		return wgs84ToEpsgLocalsystem(wgs84, epsg, false);
 	}
-	/**
-	 * Call this method to convert any Gau?-Kr?ger coordinates into
-	 * wgs84.
-	 * @param gk point to convert
-	 * @param GK2WGS84 Gau?-Kr?ger-to-WGS84 transformation parameters
-	 * @return
-	 */
-	public static CWPoint gkToWgs84(GkPoint gk, Ellipsoid gkon, TransformParameters gk2wgs84, double scale) {
-		CWPoint gkll = gk2LatLon(gk, gkon, scale);
-		XyzCoordinates wgsxyz = latLon2xyz(gkll, 0, gkon);
-		XyzCoordinates wgs84xyz = transform(wgsxyz, gk2wgs84);
-		CWPoint wgsll = xyz2Latlon(wgs84xyz, WGS84);
-		return wgsll;
+
+	public static ProjectedPoint wgs84ToLocalsystem(TrackPoint wgs84, int localsystem) throws IllegalArgumentException {
+		return wgs84ToEpsgLocalsystem(wgs84, localsystem, true);
 	}
-	
+
 	/**
 	 * this routine gives the correct Gau?-Kr?ger coordinates
 	 * in the stripe specified by EPSG-Code
 	 * @param wgs84
-	 * @param epsgcode
+	 * @param epsg_localsystem
 	 * @return
 	 * @throws IllegalArgumentException if EPSG code is not supported GK or unsupported
 	 */
-	public static GkPoint wgs84ToGaussKrueger(TrackPoint wgs84, int epsgcode) throws IllegalArgumentException {
-		switch (getGkRegion(epsgcode)) {
-		case GkPoint.GERMAN_GK: return wgs84ToGk(wgs84, BESSEL, getGermanGkTransformParameters(wgs84), getGkStripeEpsg(epsgcode), 3, 0, 1);
-		case GkPoint.ITALIAN_GB: return wgs84ToGk(wgs84, HAYFORD1909, getItalianGkTransformParameters(wgs84), getGkStripeEpsg(epsgcode), 6, 3, 0.9996);
-		}
-		throw new IllegalArgumentException("wgs84ToGaussKrueger: epsg-code: " + epsgcode + "not supported");
+	private static ProjectedPoint wgs84ToEpsgLocalsystem(TrackPoint wgs84, int epsg_localsystem, boolean isLocalsystem) throws IllegalArgumentException {
+		//wgs84.latDec = 47.07472; // Testkoordinaten von http://www.geoclub.de/viewtopic.php?f=54&t=23912&start=30 
+		//wgs84.lonDec = 12.69417;
+		// xyzWgs.x = 3657660.66; // test case http://www.epsg.org/ p. 109 WGS72_TO_WGS84
+		// xyzWgs.y =  255768.55;
+		// xyzWgs.z = 5201382.11; 
+		XyzCoordinates xyzWgs = latLon2xyz(wgs84, 0, WGS84);
+		int lps = (isLocalsystem ? epsg_localsystem : getLocalProjectionSystem(epsg_localsystem));
+		TransformParameters transparams = getTransParams(wgs84, lps);
+		XyzCoordinates xyztarget = transform(xyzWgs, transparams.inverted);
+		CWPoint tll = xyz2Latlon(xyztarget, transparams.ellip);
+		ProjectedPoint ret = new ProjectedPoint(tll, epsg_localsystem, false, isLocalsystem);
+		Vm.debug("wgs84: " + wgs84.latDec + " lon: " + wgs84.lonDec + ", Projected: " + ret.toString());
+		return ret;
 	}
-	
-	private static int getGkStripeEpsg(int epsgcode) {
-		int stripe;
-		switch (epsgcode) {
-		case EPSG_GK2: stripe = 2; break;
-		case EPSG_GK3: stripe = 3; break;
-		case EPSG_GK4: stripe = 4; break;
-		case EPSG_GK5: stripe = 5; break;
-		case EPSG_ITALIAN_GB_EW1: stripe = 1; break;
-		case EPSG_ITALIAN_GB_EW2: stripe = 2; break;
-		default: throw new IllegalArgumentException("wgs84ToGermanGk: epsgcode: " + epsgcode + MyLocale.getMsg(4900, " is not a german Gauss-Krueger coordinate"));
+
+	private static TransformParameters getTransParams(TrackPoint wgs84, int localsystem) {
+		switch(localsystem) {
+		case ProjectedPoint.LOCALSYSTEM_GERMAN_GK: 
+			return getGermanGkTransformParameters(wgs84); 
+		case ProjectedPoint.LOCALSYSTEM_ITALIAN_GB: 
+			return getItalianGkTransformParameters(wgs84);
+		case ProjectedPoint.LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD:
+			return LAMBERT_AUSTRIAN_OLD_TO_WGS84;
+		default: 
+			throw new IllegalArgumentException("getTransParams: localsystem: " + localsystem + "not supported");
 		}
-		return stripe; 
 	}
-	
+
 	private static XyzCoordinates latLon2xyz(TrackPoint ll, double alt, Ellipsoid ellipsoid) {
 		if (!ll.isValid()) throw new IllegalArgumentException("latLon2xyz: invalid lat-lon");
 		double e2 = (ellipsoid.a * ellipsoid.a - ellipsoid.b * ellipsoid.b)/(ellipsoid.a * ellipsoid.a);
@@ -313,6 +262,7 @@
 	}
 
 	private static XyzCoordinates transform(XyzCoordinates from, TransformParameters transParams) {
+
 		Matrix coos = new Matrix(3, 1);
 		coos.matrix[0][0] = from.x;
 		coos.matrix[1][0] = from.y;
@@ -323,22 +273,17 @@
 		shift.matrix[1][0] = transParams.dy;
 		shift.matrix[2][0] = transParams.dz;
 
-		coos.add(shift);
 
 		Matrix rotate = new Matrix(3,3);
-		rotate.matrix[0][0] = 1;
-		rotate.matrix[1][1] = 1;
-		rotate.matrix[2][2] = 1;
-		rotate.matrix[0][1] = transParams.ez; 
-		rotate.matrix[0][2] = - transParams.ey;
-		rotate.matrix[1][0] = - rotate.matrix[0][1];
-		rotate.matrix[1][2] = transParams.ex;
-		rotate.matrix[2][0] = - rotate.matrix[0][2];
-		rotate.matrix[2][1] = - rotate.matrix[1][2];
+		rotate.matrix[0][0] = 1;						rotate.matrix[0][1] = transParams.ez;			rotate.matrix[0][2] = - transParams.ey;
+		rotate.matrix[1][0] = - rotate.matrix[0][1];	rotate.matrix[1][1] = 1;						rotate.matrix[1][2] = transParams.ex;
+		rotate.matrix[2][0] = - rotate.matrix[0][2];	rotate.matrix[2][1] = - rotate.matrix[1][2];	rotate.matrix[2][2] = 1;
 
+		rotate.MultiplyByScalar(transParams.s); // scale
+
 		rotate.Multiply(coos);
 		coos = rotate;
-		coos.MultiplyByScalar(transParams.s); // scale
+		coos.add(shift);
 
 		return new XyzCoordinates(coos.matrix[0][0], coos.matrix[1][0], coos.matrix[2][0]);
 	}
@@ -358,91 +303,7 @@
 		return ret;
 	}
 
-	private static GkPoint projectLatlon2GkStripeauto(CWPoint latlon, Ellipsoid ellipsoid, int stripewidth, float degreeOfStripe0, double scale) {
-		if (!latlon.isValid()) throw new IllegalArgumentException("projectLatlon2GK: lat-lon not valid");
-		double lonDec = latlon.lonDec;
-		lonDec -= degreeOfStripe0;
-		if (lonDec < 0) lonDec += 360;
-		int stripe;
-		for (stripe = 0; stripe <= 360; stripe += stripewidth) {
-			if (Math.abs(lonDec - stripe) <= ((float)stripewidth) / 2) break;
-		}
-		return projectLatlon2GK(latlon, ellipsoid, stripewidth, stripe / stripewidth, degreeOfStripe0, scale);
-	}
 
-	/**
-	 * Project latlon to Gau?-Kr?ger-Coordinates on ellipsoid
-	 * @param latlon
-	 * @param ellipsoid
-	 * @return
-	 */
-	private static GkPoint projectLatlon2GK(CWPoint latlon, Ellipsoid ellipsoid, int stripewidth, int stripe, float degreeOfStripe0, double scale) {
-		double e2 = (ellipsoid.a * ellipsoid.a - ellipsoid.b * ellipsoid.b)/(ellipsoid.a * ellipsoid.a);
-		double l = (latlon.lonDec - degreeOfStripe0 - stripe * stripewidth) /180*Math.PI;
-		double B = latlon.latDec /180*Math.PI;
-		double N = ellipsoid.a/ Math.sqrt(1- e2 * Math.pow(Math.sin(B),2));
-		double nue = Math.sqrt(Math.pow(ellipsoid.a, 2) / Math.pow(ellipsoid.b, 2)* e2 * Math.pow(Math.cos(B), 2));
-		double t = Math.tan(B);
-
-		double n1 = (ellipsoid.a-ellipsoid.b)/(ellipsoid.a+ellipsoid.b);
-		double n2 = (ellipsoid.a+ellipsoid.b)/2 * (1+ Math.pow(n1, 2)/4 + Math.pow(n1, 4)/64);
-		double n3 = n1 * -3/2 + Math.pow(n1, 3) * 9/16  - Math.pow(n1, 5) * 3/32;
-		double n4 = Math.pow(n1, 2) * 15/16 - Math.pow(n1, 4) * 15/32;
-		double n5 = Math.pow(n1, 3) * -35/48 + Math.pow(n1, 5) * 105/256;
-		double n6 = Math.pow(n1, 4) * 315/512;
-		double arclength = n2 * (B + n3 * Math.sin(B*2) + n4 * Math.sin(B*4) + n5 * Math.sin(B*6) + n6 * Math.sin(B*8));
-
-		double h1 = t/2 * N * Math.pow(Math.cos(B), 2) * l*l;
-		double h2 = t/24 * N * Math.pow(Math.cos(B),4) * (5 - t*t + 9 * nue*nue + 4*Math.pow(nue, 4)) * Math.pow(l,4);
-		double northing = (arclength + h1 + h2) * scale;
-
-		double r1 = N * Math.cos(B) * l;
-		double r2 = N/6 * Math.pow(Math.cos(B), 3) * (1-t*t+nue*nue)*l*l*l;
-		double easting = (r1 + r2) * scale;		//+ stripe / stripewidth * 1000000 + 500000;
-		GkPoint ret = new GkPoint();
-		ret.set(easting, northing, stripe, stripewidth, degreeOfStripe0);
-		return ret;
-	}
-
-	/**
-	 * Converts Gau?-Kr?ger-coordinates into lat/lon on the respective ellipsoid
-	 * @param gkp
-	 * @param ellipsoid
-	 * @param stripewidth width in degree of the stripe of the Gau?-Kr?ger-System (3 degreee usually used in Gau?-Kr?ger, 6 degree usually in UTM)
-	 * @return
-	 */
-	private static CWPoint gk2LatLon (GkPoint gkp, Ellipsoid ellipsoid, double scale) {
-		double L0 = gkp.getStripeLon(); // decimal degree of the center of the stripe
-		double y = gkp.getRawEasting()/scale;
-
-		double e2 = (ellipsoid.a * ellipsoid.a - ellipsoid.b * ellipsoid.b)/(ellipsoid.a * ellipsoid.a);
-		// note: n1-n6 are similiar to the n1-n6 in projectLatlon2GK, but some term have different factors
-		double n1 = (ellipsoid.a-ellipsoid.b)/(ellipsoid.a+ellipsoid.b);
-		double n2 = (ellipsoid.a+ellipsoid.b)/2 * (1+ Math.pow(n1, 2)/4 + Math.pow(n1, 4)/64);
-		double n3 = n1 * 3/2 - Math.pow(n1, 3) * 27/32  + Math.pow(n1, 5) * 269/32;
-		double n4 = Math.pow(n1, 2) * 21/16 - Math.pow(n1, 4) * 55/32;
-		double n5 = Math.pow(n1, 3) * 151/96 - Math.pow(n1, 5) * 417/128;
-		double n6 = Math.pow(n1, 4) * 1097/512;
-
-		double B0 = (gkp.northing / scale) / n2;
-		double Bf = B0 + n3 * Math.sin(B0*2) + n4 * Math.sin(B0*4) + n5 * Math.sin(B0*6) + n6 * Math.sin(B0*8);
-
-		double Nf = ellipsoid.a / Math.sqrt (1- e2 * Math.pow(Math.sin(Bf), 2));
-		double nuef = Math.sqrt(ellipsoid.a * ellipsoid.a / ellipsoid.b / ellipsoid.b * e2 * Math.pow(Math.cos(Bf), 2));
-		double tf = Math.tan(Bf);
-
-		double la1 = tf / 2 / Nf/Nf * (-1-nuef*nuef) * y*y;
-		double la2 = tf /24 / Math.pow(Nf, 4) * (5 + 3*tf*tf + 6*nuef*nuef - 6*tf*tf * nuef*nuef - 4*Math.pow(nuef, 4) - 9*tf*tf*Math.pow(nuef, 4)) * Math.pow(y, 4);
-		// these deal with less than the overall calculation precision: double la3 = tf /720 / Math.pow(Nf, 6) * (-61 - 90*tf*tf - 45*Math.pow(tf,4) - 107*nuef*nuef + 162*tf*tf * Math.pow(nuef, 2) + 45*Math.pow(tf,4)*tf*Math.pow(nuef, 2)) * Math.pow(y, 6);
-		// these deal with less than the overall calculation precision: double la4 = tf /40320 / Math.pow(Nf, 8) * (1385+3663*tf*tf - 4095*Math.pow(tf,4) + 1575*Math.pow(nuef, 6)) * Math.pow(y, 8);
-		double lat = (Bf + la1 + la2) * 180 / Math.PI;
-
-		double lo1 = 1 / Nf / Math.cos(Bf) * y;
-		double lo2 = 1 / Math.pow(Nf, 3) / Math.cos(Bf) *  (-1 -tf*tf*2 - nuef*nuef) * Math.pow(y, 3) / 6;
-		double lon = L0 + (lo1 + lo2) * 180/Math.PI;
-		return new CWPoint(lat, lon);
-	}
-
 }
 
 class XyzCoordinates {
@@ -462,6 +323,7 @@
 	ex, ey, ez,
 	// scale as multiplicator
 	s;
+	Ellipsoid ellip;
 
 	/**
 	 * 
@@ -470,26 +332,28 @@
 	 * @param si deviation of scale multiplied by 10^6 
 	 * @param addinverted
 	 */
-	public TransformParameters(double dxi, double dyi, double dzi, double exi, double eyi, double ezi, double si) {
+	public TransformParameters(double dxi, double dyi, double dzi, double exi, double eyi, double ezi, double si, Ellipsoid ellip_) {
 		set (dxi, dyi, dzi, exi, eyi, ezi, si, true);
+		ellip = ellip_;
 	}
-		
+
 	protected void set(double dxi, double dyi, double dzi, double exi, double eyi, double ezi, double si, boolean addinverted) {
 		dx = dxi; dy = dyi; dz = dzi; 
 		ex = exi * Math.PI/180/3600;
 		ey = eyi * Math.PI/180/3600; 
 		ez = ezi * Math.PI/180/3600;
-		s = 1/(1 - si * Math.pow(10, -6));
+		s = 1 + si* Math.pow(10, -6); // 1/(1 - si * Math.pow(10, -6));
 		if (addinverted) {
 			inverted = new TransformParameters(this, false);
 			inverted.invert();
 		} else inverted = null;
 	}
-	
+
 	public TransformParameters(TransformParameters tp, boolean invert) {
 		dx = tp.dx;	dy = tp.dy;	dz = tp.dz;
 		ex = tp.ex;	ey = tp.ey;	ez = tp.ez;
 		s = tp.s;
+		ellip = tp.ellip;
 		if (invert) invert();
 	}
 

Modified: trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java
===================================================================
--- trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java	2009-08-12 22:14:15 UTC (rev 2081)
+++ trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java	2009-08-13 23:09:30 UTC (rev 2082)
@@ -20,22 +20,6 @@
  */
 public class TransformCoordinatesProperties extends Properties {
 	public int epsgCode;
-	
-	public TransformCoordinatesProperties(InputStream is) throws IOException {
-		super();
-		load(is);
-		epsgCode = Convert.toInt(getProperty("EpsgCode", "-1"));
-		if (epsgCode == -1) throw new IllegalArgumentException(MyLocale.getMsg(4922, "EPSG code missing in: ") + is.getName());
-	}
-	
-	public TransformCoordinatesProperties(int epsgcodei) {
-		if (!TransformCoordinates.isSupported(epsgcodei)) throw new IllegalArgumentException(
-				MyLocale.getMsg(4920, "EPSG code ") 
-				+ epsgcodei 
-				+ MyLocale.getMsg(4921, " not supported"));
-		epsgCode = epsgcodei;
-	}
-
 	/**
 	 * return ll transformed into the desired coordinate reference system
 	 * if the prjection is Gau?-Kr?ger, easting will be put in lonDec and
@@ -51,10 +35,10 @@
 			ret = ll;
 		}
 		if (ret == null) {
-			int region = TransformCoordinates.getGkRegion(epsgCode);
-			if (region > 0) {
-				GkPoint xy = TransformCoordinates.wgs84ToGaussKrueger(ll, epsgCode);
-				ret = xy.toTrackPoint(region);
+			int localsystem = TransformCoordinates.getLocalProjectionSystem(epsgCode);
+			if (localsystem > 0) {
+				ProjectedPoint xy = TransformCoordinates.wgs84ToEpsg(ll, epsgCode);
+				ret = xy.toTrackPoint(localsystem);
 			} else {
 				throw new IllegalArgumentException(
 						MyLocale.getMsg(4923, "fromWgs84: EPSG code ") 
@@ -80,16 +64,8 @@
 			break;
 		}
 		if (ret == null) {
-			int region = TransformCoordinates.getGkRegion(epsgCode);
-			if (region > 0) {
-				GkPoint xy = new GkPoint(p.lonDec, p.latDec, TransformCoordinates.getGkRegion(epsgCode));
-				ret = TransformCoordinates.GkToWgs84(xy, region);
-			} else {
-				throw new IllegalArgumentException(
-						MyLocale.getMsg(4924, "ToWgs84: EPSG code ")
-						+ epsgCode
-						+ MyLocale.getMsg(4921, " not supported"));
-			}
+			ProjectedPoint xy = new ProjectedPoint(p, epsgCode, true, false);
+			ret = TransformCoordinates.ProjectedEpsgToWgs84(xy, epsgCode);
 		}
 		return ret;
 	}



From greiol at mail.berlios.de  Fri Aug 14 19:06:07 2009
From: greiol at mail.berlios.de (greiol at BerliOS)
Date: Fri, 14 Aug 2009 19:06:07 +0200
Subject: [Cachewolf-svn] r2083 - trunk/src/CacheWolf
Message-ID: <200908141706.n7EH67rp031782@sheep.berlios.de>

Author: greiol
Date: 2009-08-14 19:05:59 +0200 (Fri, 14 Aug 2009)
New Revision: 2083

Modified:
   trunk/src/CacheWolf/DetailsPanel.java
   trunk/src/CacheWolf/MainTab.java
   trunk/src/CacheWolf/Profile.java
   trunk/src/CacheWolf/myTableModel.java
Log:
hopefully fixed the miracle of vanishing addtional waypoints without parents

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-08-13 23:09:30 UTC (rev 2082)
+++ trunk/src/CacheWolf/DetailsPanel.java	2009-08-14 17:05:59 UTC (rev 2083)
@@ -420,10 +420,11 @@
 	 */
 	public void createWptName() {
 		String wpt = inpWaypoint.getText().toUpperCase();
-		if (CacheType.isAddiWpt(CacheType.guiSelect2Cw(chcType.getInt())) && 
-				(Global.mainTab.mainCache.startsWith("GC") || 
-					Global.mainTab.mainCache.startsWith("OC") || 
-					Global.mainTab.mainCache.startsWith("CW")) 
+		if (CacheType.isAddiWpt(CacheType.guiSelect2Cw(chcType.getInt())) 
+				&& Global.mainTab.mainCache != null 
+				&& (Global.mainTab.mainCache.startsWith("GC") 
+						|| Global.mainTab.mainCache.startsWith("OC") 
+						|| Global.mainTab.mainCache.startsWith("CW")) 
 				&& wpt.startsWith("CW")) {
 			// for what was this?:
 			Global.mainTab.lastselected = Global.mainTab.mainCache; // I don't know exactly, but it's needed for creating a series of Addis
@@ -743,6 +744,7 @@
 						.isAddiWpt(oldType)) && !thisCache.getWayPoint()
 						.equals(oldWaypoint))) {
 			// If we changed the type to addi, check that a parent exists
+			//FIXME: if cache was renamed we need to rebuild CacheDB.hashDB first
 			if (CacheType.isAddiWpt(thisCache.getType())) {
 				profile.setAddiRef(thisCache);
 			} else {

Modified: trunk/src/CacheWolf/MainTab.java
===================================================================
--- trunk/src/CacheWolf/MainTab.java	2009-08-13 23:09:30 UTC (rev 2082)
+++ trunk/src/CacheWolf/MainTab.java	2009-08-14 17:05:59 UTC (rev 2083)
@@ -4,9 +4,16 @@
 import CacheWolf.navi.MapImage;
 import CacheWolf.navi.MovingMap;
 import CacheWolf.navi.Navigate;
-import ewe.sys.Vm;
-import ewe.ui.*;
-import ewe.fx.*;
+import ewe.fx.Color;
+import ewe.fx.Image;
+import ewe.fx.mImage;
+import ewe.ui.Card;
+import ewe.ui.Event;
+import ewe.ui.FormBase;
+import ewe.ui.MessageBox;
+import ewe.ui.MultiPanelEvent;
+import ewe.ui.TableEvent;
+import ewe.ui.mTabbedPanel;
 
 /**
  *	This class creates the tabbed panel and sets the tabs to the respective
@@ -294,7 +301,11 @@
 		if (selectedIndex >= 0) {
 			CacheHolder selectedCache = profile.cacheDB.get( selectedIndex );
 			if ( selectedCache.isAddiWpt() ) {
-				mainCache = selectedCache.mainCache.getWayPoint();
+				if (selectedCache.mainCache != null) {
+					mainCache = selectedCache.mainCache.getWayPoint();
+				} else {
+					mainCache = null;
+				}
 			}			
 		}
 		if (CacheType.isAddiWpt(pCh.getType()) && mainCache!=null && mainCache.length()>2) {
@@ -302,10 +313,6 @@
 			profile.setAddiRef(pCh);
 		} else { 
 			pCh.setWayPoint(profile.getNewWayPointName());
-			pCh.setType(CacheType.CW_TYPE_CUSTOM);
-			pCh.setHard(CacheTerrDiff.CW_DT_UNSET);
-			pCh.setTerrain(CacheTerrDiff.CW_DT_UNSET);
-			pCh.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
 			lastselected=pCh.getWayPoint();
 		}
 		pCh.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);

Modified: trunk/src/CacheWolf/Profile.java
===================================================================
--- trunk/src/CacheWolf/Profile.java	2009-08-13 23:09:30 UTC (rev 2082)
+++ trunk/src/CacheWolf/Profile.java	2009-08-14 17:05:59 UTC (rev 2083)
@@ -442,17 +442,21 @@
 	public void setAddiRef(CacheHolder ch) {
 		String mainwpt = ch.getWayPoint().substring(2);
 		int mainindex = getCacheIndex("GC" + mainwpt);
-		if (mainindex < 0)
+		if (mainindex < 0 || !cacheDB.get(mainindex).isCacheWpt())
 			mainindex = getCacheIndex("OC" + mainwpt);
-		if (mainindex < 0)
+		if (mainindex < 0 || !cacheDB.get(mainindex).isCacheWpt())
 			mainindex = getCacheIndex("CW" + mainwpt);
-		if (mainindex < 0) {
+		if (mainindex < 0 || !cacheDB.get(mainindex).isCacheWpt()) {
 			ch.setIncomplete(true);
 		} else {
 			CacheHolder mainch = cacheDB.get(mainindex);
-			mainch.addiWpts.add(ch);
-			ch.mainCache = mainch;
-			ch.setAttributesFromMainCache();
+			if (mainch.getWayPoint().equals(ch.getWayPoint())) {
+				ch.setIncomplete(true);
+			} else {
+				mainch.addiWpts.add(ch);
+				ch.mainCache = mainch;
+				ch.setAttributesFromMainCache();
+			}
 		}
 	}
 

Modified: trunk/src/CacheWolf/myTableModel.java
===================================================================
--- trunk/src/CacheWolf/myTableModel.java	2009-08-13 23:09:30 UTC (rev 2082)
+++ trunk/src/CacheWolf/myTableModel.java	2009-08-14 17:05:59 UTC (rev 2083)
@@ -1,11 +1,20 @@
 package CacheWolf;
 
-import ewe.ui.*;
-import ewe.sys.*;
-import ewe.util.*;
-import ewe.fx.*;
+import ewe.fx.Color;
+import ewe.fx.FontMetrics;
+import ewe.fx.IconAndText;
+import ewe.fx.Image;
+import ewe.fx.Point;
+import ewe.fx.mImage;
+import ewe.sys.Convert;
+import ewe.sys.Time;
+import ewe.sys.Vm;
+import ewe.ui.CellConstants;
+import ewe.ui.IKeys;
+import ewe.ui.TableCellAttributes;
+import ewe.ui.TableModel;
+import ewe.util.Vector;
 
-
 /**
 *	Table model used to display the cache list.
 * 	Used by the table control in the first panel of
@@ -161,6 +170,9 @@
 						if (! ch.mainCache.isVisible())
 							sortDB.add(ch); // Unfiltered Addi Wpt with filtered Main Wpt, show it on its own
 						// else Main cache is not filtered, Addi will be added below main cache further down
+						else
+							//FIXME: is there anything useful we can do about this?
+							Global.getPref().log("Huston, we have a problem with "+ch.getWayPoint()+" in myTableModel.updateRows()");
 					} else { //Addi without main Cache
 						sortDB.add(ch);
 					}



From greiol at mail.berlios.de  Sat Aug 15 22:23:33 2009
From: greiol at mail.berlios.de (greiol at BerliOS)
Date: Sat, 15 Aug 2009 22:23:33 +0200
Subject: [Cachewolf-svn] r2084 - in trunk/src/CacheWolf: . imp
Message-ID: <200908152023.n7FKNX6O024612@sheep.berlios.de>

Author: greiol
Date: 2009-08-15 22:23:32 +0200 (Sat, 15 Aug 2009)
New Revision: 2084

Added:
   trunk/src/CacheWolf/imp/LOCXMLImporter.java
Removed:
   trunk/src/CacheWolf/LOCXMLImporter.java
Modified:
   trunk/src/CacheWolf/MainMenu.java
   trunk/src/CacheWolf/imp/GPXImporter.java
Log:
- move loc importer to imp packge 
- only ask once for picture download when importing multiple gpx files

Deleted: trunk/src/CacheWolf/LOCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/LOCXMLImporter.java	2009-08-14 17:05:59 UTC (rev 2083)
+++ trunk/src/CacheWolf/LOCXMLImporter.java	2009-08-15 20:23:32 UTC (rev 2084)
@@ -1,146 +0,0 @@
-/*
-CacheWolf is a software for PocketPC, Win and Linux that 
-enables paperless caching. 
-It supports the sites geocaching.com and opencaching.de
-
-Copyright (C) 2006  CacheWolf development team
-See http://developer.berlios.de/projects/cachewolf/
-for more information.
-Contact: 	bilbowolf at users.berlios.de
-			kalli at users.berlios.de
-
-This program is free software; you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation; either version 2 of the License, or
-(at your option) any later version.
-
-This program is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
-
-You should have received a copy of the GNU General Public License
-along with this program; if not, write to the Free Software
-Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
- */
-
-package CacheWolf;
-
-//TODO: move to CacheWOlf.imp
-
-import ewe.sys.Vm;
-import ewe.io.*;
-import ewesoft.xml.MinML;
-import ewesoft.xml.sax.AttributeList;
-
-/**
- * @author Kalle
- * 
- */
-public class LOCXMLImporter extends MinML {
-	boolean debugXML = false;
-	CacheDB cacheDB;
-	Preferences pref;
-	Profile profile;
-	String file;
-	CacheHolder holder;
-
-	String strData = new String();
-
-	public LOCXMLImporter(Preferences pf, Profile prof, String f) {
-		pref = pf;
-		profile = prof;
-		cacheDB = profile.cacheDB;
-		file = f;
-	}
-
-	public void doIt() {
-		try {
-			Reader r;
-			Vm.showWait(true);
-			// Test for zip.file
-			r = new FileReader(file);
-			parse(r);
-			r.close();
-			// save Index
-			profile.saveIndex(pref, Profile.NO_SHOW_PROGRESS_BAR);
-			Vm.showWait(false);
-		} catch (Exception e) {
-			// Vm.debug(e.toString());
-			Vm.showWait(false);
-		}
-	}
-
-	public void startElement(String name, AttributeList atts) {
-		if (debugXML) {
-			for (int i = 0; i < atts.getLength(); i++) {
-				Vm.debug(" Name: " + atts.getName(i) + " Value: "
-						+ atts.getValue(i));
-			}
-		}
-		strData = "";
-		if (name.equals("name")) {
-			holder = getHolder(atts.getValue("id"));
-			return;
-		}
-		if (name.equals("coord")) {
-			holder.pos.set(Common.parseDouble(atts.getValue("lat")), Common
-					.parseDouble(atts.getValue("lon")));
-			holder.LatLon = holder.pos.toString();
-			return;
-		}
-	}
-
-	public void endElement(String name) {
-		if (name.equals("name")) {
-			holder.setCacheName(strData);
-		}
-
-		if (name.equals("waypoint")) {
-			int index;
-			index = cacheDB.getIndex(holder.getWayPoint());
-			if (index == -1) {
-				holder.setNew(true);
-				cacheDB.add(holder);
-			}
-			// update (overwrite) data
-			else {
-				holder.setNew(false);
-			}
-			// save all (after each cache???)
-			holder.save();
-			profile.saveIndex(pref, Profile.NO_SHOW_PROGRESS_BAR);
-			return;
-		}
-
-		if (name.equals("link")) {
-			holder.getFreshDetails().URL = strData;
-			return;
-		}
-	}
-
-	public void characters(char[] ch, int start, int length) {
-		String chars = new String(ch, start, length);
-		strData += chars;
-		if (debugXML)
-			Vm.debug(strData);
-	}
-
-	private CacheHolder getHolder(String wpt) {// See also OCXMLImporter
-		CacheHolder ch;
-
-		ch = cacheDB.get(wpt);
-		if (ch == null) {
-			ch = new CacheHolder();
-			// TODO: once the cleanup is done, this should be move to
-			// CacheHolder constructor
-			ch.setType(CacheType.CW_TYPE_CUSTOM);
-			ch.setTerrain(CacheTerrDiff.CW_DT_UNSET);
-			ch.setHard(CacheTerrDiff.CW_DT_UNSET);
-			ch.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
-			ch.setWayPoint(wpt);
-		}
-		return ch;
-	}
-
-}

Modified: trunk/src/CacheWolf/MainMenu.java
===================================================================
--- trunk/src/CacheWolf/MainMenu.java	2009-08-14 17:05:59 UTC (rev 2083)
+++ trunk/src/CacheWolf/MainMenu.java	2009-08-15 20:23:32 UTC (rev 2084)
@@ -1,6 +1,7 @@
 package CacheWolf;
 
 import CacheWolf.imp.GPXImporter;
+import CacheWolf.imp.LOCXMLImporter;
 import CacheWolf.imp.OCXMLImporter;
 import CacheWolf.imp.OCXMLImporterScreen;
 import CacheWolf.imp.Rating;
@@ -11,7 +12,6 @@
 import ewe.filechooser.FileChooser;
 import ewe.filechooser.FileChooserBase;
 import ewe.fx.Font;
-import ewe.io.File;
 import ewe.io.FileBase;
 import ewe.io.IOException;
 import ewe.sys.Vm;
@@ -348,6 +348,8 @@
 							else how = GPXImporter.DOIT_NOSPOILER;
 					}
 					 */
+					
+					int how = GPXImporter.DOIT_ASK;
 					for (int i = 0; i < files.length; i++){ 
 						String file = dir + "/" + files[i];
 						if (file.endsWith("loc")){
@@ -356,7 +358,8 @@
 						}
 						else {
 							GPXImporter gpx = new GPXImporter(pref, profile, file);
-							gpx.doIt(0);
+							gpx.doIt(how);
+							how = gpx.getHow();
 						}
 					}
 				}

Modified: trunk/src/CacheWolf/imp/GPXImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/GPXImporter.java	2009-08-14 17:05:59 UTC (rev 2083)
+++ trunk/src/CacheWolf/imp/GPXImporter.java	2009-08-15 20:23:32 UTC (rev 2084)
@@ -59,6 +59,7 @@
 	boolean getMaps = false;
 	SpiderGC imgSpider;
 	StringBuffer strBuf;
+	private int doitHow;
 	
 	public GPXImporter(Preferences p, Profile prof, String f )
 	{
@@ -73,6 +74,7 @@
 		inCache = false;
 		inLogs = false;
 		inBug = false;
+		doitHow = DOIT_ASK;
 	}
 /*	skg: This Constructor is not referenced, therefore commented out 
 	public GPXImporter(Vector DB, String[] f,String d, Preferences p)
@@ -99,25 +101,29 @@
 	}
 */	
 	public void doIt(int how){
+		doitHow = how;
 		Filter flt = new Filter();
 		boolean wasFiltered = (profile.getFilterActive()==Filter.FILTER_ACTIVE);
 		flt.clearFilter();
 		try{
 			ewe.io.Reader r;
 			String file;
-			
-			OCXMLImporterScreen options = new OCXMLImporterScreen(MyLocale.getMsg(5510,"Spider Options"), OCXMLImporterScreen.IMAGES| OCXMLImporterScreen.ISGC);
-			if (options.execute() == FormBase.IDCANCEL) {	return; }
-			//String dist = options.distanceInput.getText();
-			//if (dist.length()== 0) return;
-			//getMaps = options.mapsCheckBox.getState();
-			boolean getImages = options.imagesCheckBox.getState();
-			doSpider = false;
-			if(getImages){
+			if (how == DOIT_ASK) {
+				OCXMLImporterScreen options = new OCXMLImporterScreen(MyLocale.getMsg(5510,"Spider Options"), OCXMLImporterScreen.IMAGES| OCXMLImporterScreen.ISGC);
+				if (options.execute() == FormBase.IDCANCEL) { return; }
+				doSpider = options.imagesCheckBox.getState();
+				options.close(0);
+			} else if (how == DOIT_NOSPOILER) {
+				doSpider = false;
+			} else {
 				doSpider = true;
+			}
+			if (doSpider) {
 				imgSpider = new SpiderGC(pref, profile, false);
+				doitHow = DOIT_WITHSPOILER;
+			} else {
+				doitHow = DOIT_NOSPOILER;
 			}
-			options.close(0);
 			
 			//Vm.debug("State of: " + doSpider);
 			Vm.showWait(true);
@@ -597,4 +603,8 @@
 		}
 		else return "";
 	}
+	
+	public int getHow() {
+		return doitHow;
+	}
 }

Copied: trunk/src/CacheWolf/imp/LOCXMLImporter.java (from rev 2083, trunk/src/CacheWolf/LOCXMLImporter.java)
===================================================================
--- trunk/src/CacheWolf/LOCXMLImporter.java	2009-08-14 17:05:59 UTC (rev 2083)
+++ trunk/src/CacheWolf/imp/LOCXMLImporter.java	2009-08-15 20:23:32 UTC (rev 2084)
@@ -0,0 +1,154 @@
+/*
+CacheWolf is a software for PocketPC, Win and Linux that 
+enables paperless caching. 
+It supports the sites geocaching.com and opencaching.de
+
+Copyright (C) 2006  CacheWolf development team
+See http://developer.berlios.de/projects/cachewolf/
+for more information.
+Contact: 	bilbowolf at users.berlios.de
+			kalli at users.berlios.de
+
+This program is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program; if not, write to the Free Software
+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+package CacheWolf.imp;
+
+//TODO: move to CacheWOlf.imp
+
+import CacheWolf.CacheDB;
+import CacheWolf.CacheHolder;
+import CacheWolf.CacheSize;
+import CacheWolf.CacheTerrDiff;
+import CacheWolf.CacheType;
+import CacheWolf.Common;
+import CacheWolf.Preferences;
+import CacheWolf.Profile;
+import ewe.sys.Vm;
+import ewe.io.*;
+import ewesoft.xml.MinML;
+import ewesoft.xml.sax.AttributeList;
+
+/**
+ * @author Kalle
+ * 
+ */
+public class LOCXMLImporter extends MinML {
+	boolean debugXML = false;
+	CacheDB cacheDB;
+	Preferences pref;
+	Profile profile;
+	String file;
+	CacheHolder holder;
+
+	String strData = new String();
+
+	public LOCXMLImporter(Preferences pf, Profile prof, String f) {
+		pref = pf;
+		profile = prof;
+		cacheDB = profile.cacheDB;
+		file = f;
+	}
+
+	public void doIt() {
+		try {
+			Reader r;
+			Vm.showWait(true);
+			// Test for zip.file
+			r = new FileReader(file);
+			parse(r);
+			r.close();
+			// save Index
+			profile.saveIndex(pref, Profile.NO_SHOW_PROGRESS_BAR);
+			Vm.showWait(false);
+		} catch (Exception e) {
+			// Vm.debug(e.toString());
+			Vm.showWait(false);
+		}
+	}
+
+	public void startElement(String name, AttributeList atts) {
+		if (debugXML) {
+			for (int i = 0; i < atts.getLength(); i++) {
+				Vm.debug(" Name: " + atts.getName(i) + " Value: "
+						+ atts.getValue(i));
+			}
+		}
+		strData = "";
+		if (name.equals("name")) {
+			holder = getHolder(atts.getValue("id"));
+			return;
+		}
+		if (name.equals("coord")) {
+			holder.pos.set(Common.parseDouble(atts.getValue("lat")), Common
+					.parseDouble(atts.getValue("lon")));
+			holder.LatLon = holder.pos.toString();
+			return;
+		}
+	}
+
+	public void endElement(String name) {
+		if (name.equals("name")) {
+			holder.setCacheName(strData);
+		}
+
+		if (name.equals("waypoint")) {
+			int index;
+			index = cacheDB.getIndex(holder.getWayPoint());
+			if (index == -1) {
+				holder.setNew(true);
+				cacheDB.add(holder);
+			}
+			// update (overwrite) data
+			else {
+				holder.setNew(false);
+			}
+			// save all (after each cache???)
+			holder.save();
+			profile.saveIndex(pref, Profile.NO_SHOW_PROGRESS_BAR);
+			return;
+		}
+
+		if (name.equals("link")) {
+			holder.getFreshDetails().URL = strData;
+			return;
+		}
+	}
+
+	public void characters(char[] ch, int start, int length) {
+		String chars = new String(ch, start, length);
+		strData += chars;
+		if (debugXML)
+			Vm.debug(strData);
+	}
+
+	private CacheHolder getHolder(String wpt) {// See also OCXMLImporter
+		CacheHolder ch;
+
+		ch = cacheDB.get(wpt);
+		if (ch == null) {
+			ch = new CacheHolder();
+			// TODO: once the cleanup is done, this should be move to
+			// CacheHolder constructor
+			ch.setType(CacheType.CW_TYPE_CUSTOM);
+			ch.setTerrain(CacheTerrDiff.CW_DT_UNSET);
+			ch.setHard(CacheTerrDiff.CW_DT_UNSET);
+			ch.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
+			ch.setWayPoint(wpt);
+		}
+		return ch;
+	}
+
+}


Property changes on: trunk/src/CacheWolf/imp/LOCXMLImporter.java
___________________________________________________________________
Name: svn:mergeinfo
   + 



From greiol at mail.berlios.de  Sun Aug 16 08:34:00 2009
From: greiol at mail.berlios.de (greiol at BerliOS)
Date: Sun, 16 Aug 2009 08:34:00 +0200
Subject: [Cachewolf-svn] r2085 - trunk/src/utils
Message-ID: <200908160634.n7G6Y0NO013877@sheep.berlios.de>

Author: greiol
Date: 2009-08-16 08:33:59 +0200 (Sun, 16 Aug 2009)
New Revision: 2085

Modified:
   trunk/src/utils/CWWrapper.java
   trunk/src/utils/MessageBoxFixed.java
   trunk/src/utils/MutableInteger.java
Log:
organize imports
reduce visibility of properties, methods and parameters

Modified: trunk/src/utils/CWWrapper.java
===================================================================
--- trunk/src/utils/CWWrapper.java	2009-08-15 20:23:32 UTC (rev 2084)
+++ trunk/src/utils/CWWrapper.java	2009-08-16 06:33:59 UTC (rev 2085)
@@ -1,6 +1,7 @@
 package utils;
-import ewe.sys.*;
 
+import ewe.sys.Vm;
+
 /**
  * Class built as a wrapper for the buggy^Winconsistent Vm.exec
  * in EWE Version 1.49
@@ -11,34 +12,65 @@
  * Unix VM: cmd must not be quoted, arg can be only one
  * Win* VM: cmd may be quoted, arg are whitespace-split
  */
-public class CWWrapper {
+public final class CWWrapper {
+	
+	/** reference to this object */
+	private static CWWrapper ref;
+	
 	/**
+	 * thou shallst not instantiate this object
+	 */
+	private CWWrapper() {}
+	
+	/**
+	 * give a singleton reference to this object to whoever needs one. create one, if not done so already.
+	 * @return reference to CWWrapper
+	 */
+	public static synchronized CWWrapper getCWWrapper() {
+		if (ref == null) {
+			ref = new CWWrapper();
+		}
+		return ref;
+	}
+	
+	/**
 	 * Apply needed quotes around the command or the argument,
 	 * then call Vm.exec() appropriately.
 	 * @param cmd
 	 * @param arg (only one argument)
 	 * @throws ewe.io.IOException
 	 */
-	public static void exec(String cmd, String arg) throws ewe.io.IOException{
+	public static void exec(final String cmd, final String arg) throws ewe.io.IOException{
 		exec(cmd, arg, false);
 	}
 	
-	public static int exec(String cmd, String arg, boolean wait) throws ewe.io.IOException {
+	public static int exec(String cmd, String arg, final boolean wait) throws ewe.io.IOException {
 		if (Vm.getPlatform().equals("WinCE") ||
 			    Vm.getPlatform().equals("Win32")) {
 				/* we need extra quotes here, see vm/nmwin32_c.c */
-				if (arg.indexOf(" ") > -1)
+				if (arg.indexOf(' ') > -1) {
 					arg = "\"" + arg + "\"";
+				}
 			} else if (Vm.getPlatform().equals("Java")) {
 				/* on win32 we need extra quotes here to support filenames whith spaces
 				 * (see ewe/sys/Vm.java)			 *
 				 * on linux (and os x?) we must not have extra quotes, filenames with spaces are unsupported
 				 * */
-				if (cmd.indexOf(" ") > -1)
+				if (cmd.indexOf(' ') > -1) {
 					cmd = "\"" + cmd + "\"";
-				if (arg.indexOf(" ") > -1)
+				}
+					
+				if (arg.indexOf(' ') > -1) {
 					arg = "\"" + arg + "\"";
+				}
 			}
 		return Vm.exec(cmd, arg, 0, wait);
 	}
+
+	/**
+	 * just make sure no one tries funny things with us
+	 */
+	public Object clone() throws CloneNotSupportedException {
+		throw new CloneNotSupportedException(); 
+	}
 }

Modified: trunk/src/utils/MessageBoxFixed.java
===================================================================
--- trunk/src/utils/MessageBoxFixed.java	2009-08-15 20:23:32 UTC (rev 2084)
+++ trunk/src/utils/MessageBoxFixed.java	2009-08-16 06:33:59 UTC (rev 2085)
@@ -14,37 +14,31 @@
  * you get in the ewe-vm the exception: ewe.sys Event Direction Exception: This Task cannot be done within a timer tick <br>
  * when you use the normal MessageBox
  * @author pfeffer
+ * 
+ * FIXME: add javadoc!
  *
  */
 public class MessageBoxFixed {
-	String title, text;
-	int type;
-	int ret;
-	boolean done;
-	static int debug = 0;
-	public MessageBoxFixed(String title_, String text_, int type_) {
+	private String title, text;
+	private int type;
+	private int ret;
+	private boolean done;
+
+	public MessageBoxFixed(final String title_, final String text_, final int type_) {
 		set(title_, text_, type_);
 	}
-	public void set(String title_, String text_, int type_) {
+
+	public void set(final String title_, final String text_, final int type_) {
 		title = title_;
 		text = text_;
 		type = type_;
 	}
 
 	public int execute() {
-		//Vm.debug("aufruf: " + debug);
-		//debug++;
-/*	// this code is a beginning of code to determine, if a new mThread is needed
- 		Vm.debug("t ." + mThread.inThread());
-		MessageBox mb = new MessageBox(title,  text, type);
-		ret = mb.execute();
-*/
-		MBThread t = new MBThread();  // start a new thread is necessary because the simple ewe v1.49 threading model doesn't allow displaying of a messageBox in this kind of thread
+		final MBThread t = new MBThread();  // start a new thread is necessary because the simple ewe v1.49 threading model doesn't allow displaying of a messageBox in this kind of thread
 		t.start();
 		done = false;
 		while (!done) {
-			//Vm.debug("A");
-			//mThread.yield(100); // this seem to be without effect in ewe-vm v1.49
 			try { mThread.sleep(100); } catch (InterruptedException e) {
 		//		Vm.debug("interrupted"); // never reached, even if interrupted is explicitly called
 			}

Modified: trunk/src/utils/MutableInteger.java
===================================================================
--- trunk/src/utils/MutableInteger.java	2009-08-15 20:23:32 UTC (rev 2084)
+++ trunk/src/utils/MutableInteger.java	2009-08-16 06:33:59 UTC (rev 2085)
@@ -1,6 +1,3 @@
-/**
- * 
- */
 package utils;
 
 import ewe.util.Intable;
@@ -11,12 +8,13 @@
  */
 public class MutableInteger implements Intable {
 
-	int value;
+	private int value;
+	
 	public MutableInteger() {
 		value = -1;
 	}
 	
-	public MutableInteger(int initialValue) {
+	public MutableInteger(final int initialValue) {
 		value = initialValue;
 	}
 
@@ -24,8 +22,8 @@
 		return value;
 	}
 	
-	public void setInt(int value) {
-		this.value = value;
+	public void setInt(final int newValue) {
+		value = newValue;
 	}
 
 }



From greiol at mail.berlios.de  Sun Aug 16 11:28:00 2009
From: greiol at mail.berlios.de (greiol at BerliOS)
Date: Sun, 16 Aug 2009 11:28:00 +0200
Subject: [Cachewolf-svn] r2086 - trunk/src/CacheWolf
Message-ID: <200908160928.n7G9S0rx028803@sheep.berlios.de>

Author: greiol
Date: 2009-08-16 11:27:59 +0200 (Sun, 16 Aug 2009)
New Revision: 2086

Modified:
   trunk/src/CacheWolf/CacheSize.java
   trunk/src/CacheWolf/CacheTerrDiff.java
   trunk/src/CacheWolf/CacheType.java
Log:
reduced visibility of parameters
added reference for singleton objects

Modified: trunk/src/CacheWolf/CacheSize.java
===================================================================
--- trunk/src/CacheWolf/CacheSize.java	2009-08-16 06:33:59 UTC (rev 2085)
+++ trunk/src/CacheWolf/CacheSize.java	2009-08-16 09:27:59 UTC (rev 2086)
@@ -113,26 +113,36 @@
 	public static final byte CW_FILTER_ALL = CW_FILTER_MICRO
 			| CW_FILTER_SMALL | CW_FILTER_NORMAL | CW_FILTER_LARGE
 			| CW_FILTER_NONPHYSICAL | CW_FILTER_VERYLARGE;
+	
+	/** reference to singleton CacheSize object */
+	private static CacheSize ref;
 
+	/** thou shallst not instantiate this object */
+	private CacheSize() { }
+	
 	/**
-	 * the constructor does nothing
+	 * give a singleton reference to this object to whoever needs one. create one, if not done so already.
+	 * @return reference to CacheSize object
 	 */
-	public CacheSize() {
-		// do nothing
+	public static synchronized CacheSize getCacheSize() {
+		if (ref == null) {
+			ref = new CacheSize();
+		}
+		return ref;
 	}
 
 	/**
 	 * map filenames of images for the different sizes to the ids used array
 	 * index for sizePics[] in TableModel
 	 * 
-	 * @param id
+	 * @param size
 	 *            size identifier matching the CW_GUIIMGID_ constants
 	 * @return filename of image to be displayed for id
 	 * @throws IllegalArgumentException
 	 *             if there is no image associated to the <code>id</code>
 	 */
-	public static String sizeImageForId(byte id) throws IllegalArgumentException {
-		switch (id) {
+	public static String sizeImageForId(final byte size) throws IllegalArgumentException {
+		switch (size) {
 			case CW_GUIIMGID_MICRO:
 				return CW_GUIIMG_MICRO;
 			case CW_GUIIMGID_SMALL:
@@ -146,7 +156,7 @@
 			case CW_GUIIMGID_VERYLARGE:
 				return CW_GUIIMG_VERYLARGE;
 			default:
-				throw (new IllegalArgumentException("unmatched argument " + id + " in CacheSize cw2ExportString()"));
+				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize cw2ExportString()"));
 		}
 	}
 
@@ -160,7 +170,7 @@
 	 * @throws IllegalArgumentException
 	 *             if <code>cwsize</code> can not be mapped to a CW_SIZE constant
 	 */
-	public static String cw2ExportString(byte size) throws IllegalArgumentException {
+	public static String cw2ExportString(final byte size) throws IllegalArgumentException {
 		switch (size) {
 			case CW_SIZE_MICRO:
 				return GC_SIZE_MICRO;
@@ -197,7 +207,7 @@
 	 *             (CW_SIZE_*)
 	 */
 
-	public static byte tcGpxString2Cw(String tcstring) throws IllegalArgumentException {
+	public static byte tcGpxString2Cw(final String tcstring) throws IllegalArgumentException {
 		if (tcstring.equals(TC_SIZE_MICRO)) {
 			return CW_SIZE_MICRO;
 		} else if (tcstring.equals(TC_SIZE_MEDIUM)) {
@@ -225,7 +235,7 @@
 	 *             (CW_SIZE_*)
 	 */
 
-	public static byte gcGpxString2Cw(String gcstring) throws IllegalArgumentException {
+	public static byte gcGpxString2Cw(final String gcstring) throws IllegalArgumentException {
 		if (gcstring.equals(GC_SIZE_MICRO)) {
 			return CW_SIZE_MICRO;
 		} else if (gcstring.equals(GC_SIZE_SMALL)) {
@@ -259,7 +269,7 @@
 	 *             if <code>spiderstring</code> can not be mapped to internal representation
 	 *             (CW_SIZE_*)
 	 */
-	public static byte gcSpiderString2Cw(String spiderstring) throws IllegalArgumentException {
+	public static byte gcSpiderString2Cw(final String spiderstring) throws IllegalArgumentException {
 		// at the moment both sources use the same strings
 		return gcGpxString2Cw(spiderstring);
 	}
@@ -274,7 +284,7 @@
 	 * @trows IllegalArgumentException if <code>ocxmlstring</code> can not be mapped to a
 	 *        CW_SIZE_*
 	 */
-	public static byte ocXmlString2Cw(String ocxmlstring) throws IllegalArgumentException {
+	public static byte ocXmlString2Cw(final String ocxmlstring) throws IllegalArgumentException {
 		if (ocxmlstring.equals(OC_SIZE_OTHER)) {
 			return CW_SIZE_OTHER;
 		} else if (ocxmlstring.equals(OC_SIZE_MICRO)) {
@@ -303,7 +313,7 @@
 	 * @throws IllegalArgumentException
 	 *             if <code>size</code> can not be mapped
 	 */
-	public static byte guiSizeImageId(byte size) throws IllegalArgumentException {
+	public static byte guiSizeImageId(final byte size) throws IllegalArgumentException {
 		switch (size) {
 			case CW_SIZE_MICRO:
 				return CW_GUIIMGID_MICRO;
@@ -337,7 +347,7 @@
 	 * @throws IllegalArgumentException if <code>v1Size</code> can not be mapped
 	 * @deprecated remove once v1 file version compatibility is abandoned
 	 */
-	public static final byte v1Converter(String v1Size) throws IllegalArgumentException {
+	public static final byte v1Converter(final String v1Size) throws IllegalArgumentException {
 		if (v1Size.equals(GC_SIZE_MICRO)) {
 			return CW_SIZE_MICRO;
 		} else if (v1Size.equals(GC_SIZE_SMALL)) {
@@ -346,7 +356,7 @@
 			return CW_SIZE_REGULAR;
 		} else if (v1Size.equals(GC_SIZE_LARGE)) {
 			return CW_SIZE_LARGE;
-		} else if (v1Size.toLowerCase().equals(GC_SIZE_NOTCHOSEN.toLowerCase())) {
+		} else if (v1Size.equalsIgnoreCase(GC_SIZE_NOTCHOSEN)) {
 			return CW_SIZE_NOTCHOSEN;
 		} else if (v1Size.equals(GC_SIZE_OTHER)) {
 			return CW_SIZE_OTHER;
@@ -358,7 +368,7 @@
 			return CW_SIZE_VERYLARGE;
 		} else if (v1Size.equals("")) {
 			return CW_SIZE_NOTCHOSEN;
-		} else if (v1Size.equals(null)) {
+		} else if (v1Size == null) {
 			return CW_SIZE_NOTCHOSEN;
 		} else {
 			throw (new IllegalArgumentException("unmatched argument " + v1Size + " in v1Converter()"));
@@ -374,7 +384,7 @@
 	 * @throws IllegalArgumentException
 	 *             if <code>size</code> can not be mapped to a bit mask
 	 */
-	public static byte getFilterPattern(byte size) throws IllegalArgumentException {
+	public static byte getFilterPattern(final byte size) throws IllegalArgumentException {
 		switch (size) {
 			case CW_SIZE_MICRO:
 				return CW_FILTER_MICRO;
@@ -409,7 +419,7 @@
 	 *             if <code>size</code> can not be mapped
 	 */
 
-	public static String getExportShortId(byte size) throws IllegalArgumentException {
+	public static String getExportShortId(final byte size) throws IllegalArgumentException {
 		switch (size) {
 			case CW_SIZE_MICRO:
 				return "m";
@@ -443,7 +453,7 @@
 	 */
 	public static String[] guiSizeStrings() {
 		// make sure strings appear in ascending order for CW_SIZE_*
-		String ret[] = new String[] { 
+		final String ret[] = new String[] { 
 				GC_SIZE_NOTCHOSEN, 
 				GC_SIZE_OTHER,
 				GC_SIZE_MICRO, 
@@ -461,35 +471,35 @@
 	 * map a string chosen from the DetailsPanel Size drop down list back to
 	 * internal representation
 	 * 
-	 * @param id string selected in the list
+	 * @param size string selected in the list
 	 * @return cw type information
 	 * @throws IllegalArgumentException
 	 *             if <code>id</code> can not be mapped
 	 * @see cwSizeId2GuiSizeId
 	 * @see guiSizeStrings
 	 */
-	public static byte guiSizeStrings2CwSize(String id) throws IllegalArgumentException {
+	public static byte guiSizeStrings2CwSize(final String size) throws IllegalArgumentException {
 		// map the strings in guiSizeStrings() back to cw byte types
-		if (id.equals(GC_SIZE_NOTCHOSEN)) {
+		if (size.equals(GC_SIZE_NOTCHOSEN)) {
 			return CW_SIZE_NOTCHOSEN;
-		} else if (id.equals(GC_SIZE_OTHER)) {
+		} else if (size.equals(GC_SIZE_OTHER)) {
 			return CW_SIZE_OTHER;
-		} else if (id.equals(GC_SIZE_SMALL)) {
+		} else if (size.equals(GC_SIZE_SMALL)) {
 			return CW_SIZE_SMALL;
-		} else if (id.equals(GC_SIZE_REGULAR)) {
+		} else if (size.equals(GC_SIZE_REGULAR)) {
 			return CW_SIZE_REGULAR;
-		} else if (id.equals(GC_SIZE_LARGE)) {
+		} else if (size.equals(GC_SIZE_LARGE)) {
 			return CW_SIZE_LARGE;
-		} else if (id.equals(OCTC_SIZE_VERYLARGE)) {
+		} else if (size.equals(OCTC_SIZE_VERYLARGE)) {
 			return CW_SIZE_VERYLARGE;
-		} else if (id.equals(OCTC_SIZE_NONE)) {
+		} else if (size.equals(OCTC_SIZE_NONE)) {
 			return CW_SIZE_NONE;
-		} else if (id.equals(GC_SIZE_MICRO)) {
+		} else if (size.equals(GC_SIZE_MICRO)) {
 			return CW_SIZE_MICRO;
-		} else if (id.equals(GC_SIZE_VIRTUAL)) {
+		} else if (size.equals(GC_SIZE_VIRTUAL)) {
 			return CW_SIZE_VIRTUAL;
 		} else {
-			throw (new IllegalArgumentException("unmatched argument " + id + " in guiSizeStrings2CwSize()"));
+			throw (new IllegalArgumentException("unmatched argument " + size + " in guiSizeStrings2CwSize()"));
 		}
 	}
 
@@ -497,7 +507,7 @@
 	 * map internal representation to index used in the the DetailsPanel Size
 	 * drop down list
 	 * 
-	 * @param id
+	 * @param size
 	 *            internal id to be mapped
 	 * @return index of internal size in array
 	 * @throws IllegalArgumentException
@@ -505,8 +515,8 @@
 	 * @see guiSizeStrings2CwSize
 	 * @see cwSizeId2GuiSizeId
 	 */
-	public static int cwSizeId2GuiSizeId(byte id) throws IllegalArgumentException {
-		switch (id) {
+	public static int cwSizeId2GuiSizeId(final byte size) throws IllegalArgumentException {
+		switch (size) {
 		case CW_SIZE_NOTCHOSEN:
 			return 0;
 		case CW_SIZE_OTHER:
@@ -526,7 +536,7 @@
 		case CW_SIZE_VIRTUAL:
 			return 8;
 		default:
-			throw (new IllegalArgumentException("unmatched argument " + id + " in CacheSize ()"));
+			throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize ()"));
 		}
 
 	}
@@ -538,7 +548,7 @@
 	 * @param size size information to check
 	 * @return true if size is valid, false otherwise
 	 */
-	public static boolean isValidSize(byte size) {
+	public static boolean isValidSize(final byte size) {
 		switch (size) {
 		case CW_SIZE_NOTCHOSEN: return true;
 		case CW_SIZE_OTHER: return true;

Modified: trunk/src/CacheWolf/CacheTerrDiff.java
===================================================================
--- trunk/src/CacheWolf/CacheTerrDiff.java	2009-08-16 06:33:59 UTC (rev 2085)
+++ trunk/src/CacheWolf/CacheTerrDiff.java	2009-08-16 09:27:59 UTC (rev 2086)
@@ -7,7 +7,7 @@
  * 
  * Only use the class in a static way, do not instantiate it
  */
-public class CacheTerrDiff {
+public final class CacheTerrDiff {
 	
 	/** terrain or difficulty 1.0 */
 	public static final byte CW_DT_10 = 10;
@@ -31,9 +31,21 @@
 	public static final byte CW_DT_ERROR = -1;
 	/** terrain or difficulty for additional/custom waypoints */
 	public static final byte CW_DT_UNSET = 0;
+	/** reference to singleton CacheTerrDiff object */
+	private static CacheTerrDiff ref;
 
 	/** constructor dies nothing */
-	private CacheTerrDiff() { // no instantiation needed 
+	private CacheTerrDiff() { }
+	
+	/**
+	 * give a singleton reference to this object to whoever needs one. create one, if not done so already.
+	 * @return reference to CacheTerrDiff object
+	 */
+	public static synchronized CacheTerrDiff getCacheTerrDiff() {
+		if (ref == null) {
+			ref = new CacheTerrDiff();
+		}
+		return ref;
 	}
 	
 	/**
@@ -44,33 +56,33 @@
 	 * @return internal representation of terrain or difficulty
 	 * @throws IllegalArgumentException if <code>v1TerrDiff</code> can not be mapped
 	 */
-	public static final byte v1Converter(String v1TerrDiff) throws IllegalArgumentException {
+	public static byte v1Converter(String v1TerrDiff) throws IllegalArgumentException {
 		if (v1TerrDiff == null) {
 			throw new IllegalArgumentException("error mapping terrain or difficulty");
 		}
 		v1TerrDiff = v1TerrDiff.replace(',', '.');
-		if (v1TerrDiff.equals("1") || v1TerrDiff.equals("1.0")) return CW_DT_10;
-		if (v1TerrDiff.equals("2") || v1TerrDiff.equals("2.0")) return CW_DT_20;
-		if (v1TerrDiff.equals("3") || v1TerrDiff.equals("3.0")) return CW_DT_30;
-		if (v1TerrDiff.equals("4") || v1TerrDiff.equals("4.0")) return CW_DT_40;
-		if (v1TerrDiff.equals("5") || v1TerrDiff.equals("5.0")) return CW_DT_50;
+		if (v1TerrDiff.equals("1") || v1TerrDiff.equals("1.0")) { return CW_DT_10; }
+		if (v1TerrDiff.equals("2") || v1TerrDiff.equals("2.0")) { return CW_DT_20; }
+		if (v1TerrDiff.equals("3") || v1TerrDiff.equals("3.0")) { return CW_DT_30; }
+		if (v1TerrDiff.equals("4") || v1TerrDiff.equals("4.0")) { return CW_DT_40; }
+		if (v1TerrDiff.equals("5") || v1TerrDiff.equals("5.0")) { return CW_DT_50; }
 		
-		if (v1TerrDiff.equals("1.5")) return CW_DT_15;
-		if (v1TerrDiff.equals("2.5")) return CW_DT_25;
-		if (v1TerrDiff.equals("3.5")) return CW_DT_35;
-		if (v1TerrDiff.equals("4.5")) return CW_DT_45;
+		if (v1TerrDiff.equals("1.5")) { return CW_DT_15; }
+		if (v1TerrDiff.equals("2.5")) { return CW_DT_25; }
+		if (v1TerrDiff.equals("3.5")) { return CW_DT_35; }
+		if (v1TerrDiff.equals("4.5")) { return CW_DT_45; }
 		
 		throw new IllegalArgumentException("error mapping terrain or difficulty");
 	}
 	
 	/**
 	 * generate strings of terrain and difficulty for general use
-	 * @param td internal terrain or difficulty value
+	 * @param terrdiff internal terrain or difficulty value
 	 * @return long version of terrain or difficulty (including .0)
 	 * @throws IllegalArgumentException
 	 */
-	public static final String longDT(byte td) throws IllegalArgumentException {
-		switch(td) {
+	public static String longDT(final byte terrdiff) throws IllegalArgumentException {
+		switch(terrdiff) {
 		case CW_DT_10: return "1.0";
 		case CW_DT_15: return "1.5";
 		case CW_DT_20: return "2.0";
@@ -80,18 +92,18 @@
 		case CW_DT_40: return "4.0";
 		case CW_DT_45: return "4.5";
 		case CW_DT_50: return "5.0";
-		default: throw new IllegalArgumentException("unmapped terrain or diffulty "+td);
+		default: throw new IllegalArgumentException("unmapped terrain or diffulty "+terrdiff);
 		}
 	}
 
 	/**
 	 * generate strings of terrain and difficulty information for GC.com-like GPX exports
-	 * @param td internal terrain or difficulty value
+	 * @param terrdiff internal terrain or difficulty value
 	 * @return short version of terrain or difficulty (omit .0)
 	 * @throws IllegalArgumentException
 	 */
-	public static final String shortDT(byte td) throws IllegalArgumentException {
-		switch(td) {
+	public static String shortDT(final byte terrdiff) throws IllegalArgumentException {
+		switch(terrdiff) {
 		case CW_DT_10: return "1";
 		case CW_DT_15: return "1.5";
 		case CW_DT_20: return "2";
@@ -101,7 +113,7 @@
 		case CW_DT_40: return "4";
 		case CW_DT_45: return "4.5";
 		case CW_DT_50: return "5";
-		default: throw new IllegalArgumentException("unmapped terrain or diffulty "+td);
+		default: throw new IllegalArgumentException("unmapped terrain or diffulty "+terrdiff);
 		}
 	}
 	
@@ -109,11 +121,11 @@
 	 * check if a given difficulty or terrain is valid
 	 * takes about 1/20th of the time a try {} catch{} block needs
 	 * so use this function instead
-	 * @param td terrain or difficulty to check
+	 * @param terrdiff terrain or difficulty to check
 	 * @return true if terrain or difficulty is valid, false otherwise
 	 */
-	public static final boolean isValidTD(byte td) {
-		switch (td) {
+	public static boolean isValidTD(final byte terrdiff) {
+		switch (terrdiff) {
 		case CW_DT_10: return true;
 		case CW_DT_15: return true;
 		case CW_DT_20: return true;

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-08-16 06:33:59 UTC (rev 2085)
+++ trunk/src/CacheWolf/CacheType.java	2009-08-16 09:27:59 UTC (rev 2086)
@@ -191,11 +191,22 @@
 	/** GPX identifier for additional waypoint Adventure Maze Exhibit Events */
 	public static final String GC_GPX_MAZE = "GPS Adventures Exhibit"; 
 	/** GPX identifier for additional waypoint Project Ape caches */
-	public static final String GC_GPX_APE = "Project APE Cache"; 
+	public static final String GC_GPX_APE = "Project APE Cache";
+	/** reference to singleton CacheType object */
+	private static CacheType ref;
+
+	/** thou shallst not instantiate this object */
+	private CacheType() { }
 	
-	/**  constructor does nothing */
-	private CacheType() { // no instantiation needed
-
+	/**
+	 * give a singleton reference to this object to whoever needs one. create one, if not done so already.
+	 * @return reference to CacheType object
+	 */
+	public static synchronized CacheType getCacheType() {
+		if (ref == null) {
+			ref = new CacheType();
+		}
+		return ref;
 	}
 	
 	/**
@@ -204,7 +215,7 @@
 	 * @return abbreviation of cache type
 	 * @throws IllegalArgumentException if <code>type</code> can not be mapped
 	 */
-	public static String getExportShortId(byte type) throws IllegalArgumentException {
+	public static String getExportShortId(final byte type) throws IllegalArgumentException {
 		switch (type){
 		case CW_TYPE_CUSTOM: return "C";
 		case CW_TYPE_TRADITIONAL: return "T";
@@ -238,7 +249,7 @@
 	 * @throws IllegalArgumentException if <code>size</code> can not be mapped to internal representation
 	 * @deprecated remove once v1 file version compatibility is abandoned
 	 */
-	public static final byte v1Converter(String type) throws IllegalArgumentException  {
+	public static byte v1Converter(final String type) throws IllegalArgumentException  {
 		if (type.equals("0")) return CW_TYPE_CUSTOM;
 		if (type.equals("2")) return CW_TYPE_TRADITIONAL;
 		if (type.equals("3")) return CW_TYPE_MULTI;
@@ -269,7 +280,7 @@
 	 * @throws IllegalArgumentException if <code>size</code> can not be mapped to internal representation
 	 * @deprecated remove once v2 file version compatibility is abandoned
 	 */
-	public static final byte v2Converter(byte type) throws IllegalArgumentException  {
+	public static byte v2Converter(final byte type) throws IllegalArgumentException  {
 		switch (type) {
 		case -128: return CW_TYPE_CUSTOM;
 		case -126: return CW_TYPE_TRADITIONAL;
@@ -303,7 +314,7 @@
 	 * @param type waypoint type to check 
 	 * @return true if it is an additional waypint, false otherwise
 	 */
-	public static final boolean isAddiWpt(byte type) {
+	public static boolean isAddiWpt(final byte type) {
 		switch (type) {
 		case CW_TYPE_PARKING: // fall through
 		case CW_TYPE_STAGE: // fall through
@@ -316,7 +327,7 @@
 		
 	}
 	
-	public static final boolean isCacheWpt(byte type) {
+	public static boolean isCacheWpt(final byte type) {
 		switch (type) {
 		case CW_TYPE_TRADITIONAL: // fall through
 		case CW_TYPE_MULTI: // fall through
@@ -339,11 +350,8 @@
 		}
 	}
 	
-	public static final boolean isCustomWpt(byte type) {
-		if (type == CW_TYPE_CUSTOM)
-			return true;
-		else
-			return false;
+	public static boolean isCustomWpt(final byte type) {
+		return type == CW_TYPE_CUSTOM;
 	}
 	
 	/**
@@ -353,8 +361,8 @@
 	 * @see cw2GuiSelect
 	 */
 	//TODO: move to a class "closer" to the gui?
-	public static final String[] guiTypeStrings() {
-		String ret[] = new String[] {
+	public static String[] guiTypeStrings() {
+		return new String[] {
 				CW_GUISTR_CUSTOM,
 				CW_GUISTR_TRADI,
 				CW_GUISTR_MULTI,
@@ -375,7 +383,6 @@
 				CW_GUISTR_TRAILHEAD,
 				CW_GUISTR_REFERENCE
 			};
-		return ret;
 	}
 	
 	/**
@@ -387,7 +394,7 @@
 	 * @see cw2GuiSelect
 	 */
 	//TODO: move to a class "closer" to the gui?
-	public static final byte guiSelect2Cw(int selection) throws IllegalArgumentException {
+	public static byte guiSelect2Cw(final int selection) throws IllegalArgumentException {
 		// make sure to reflect the order of guiTypeStrings()
 		switch (selection) {
 		case  0: return CW_TYPE_CUSTOM;
@@ -415,15 +422,15 @@
 	
 	/**
 	 * translate cache type to position of index to highlight in GUI cache type drop down list 
-	 * @param id internal id of cache type
+	 * @param typeId internal id of cache type
 	 * @return index of the cache type in GUI list
 	 * @throws IllegalArgumentException if <code>id</code> can not be matched
 	 * @see guiTypeStrings
 	 * @see guiSelect2Cw
 	 */
 	//TODO: move to a class "closer" to the gui?
-	public static final int cw2GuiSelect(byte id) throws IllegalArgumentException {
-		switch (id) {
+	public static int cw2GuiSelect(final byte typeId) throws IllegalArgumentException {
+		switch (typeId) {
 		case CW_TYPE_CUSTOM: return 0;
 		case CW_TYPE_TRADITIONAL: return 1;
 		case CW_TYPE_MULTI: return 2;
@@ -443,7 +450,7 @@
 		case CW_TYPE_FINAL: return 16;
 		case CW_TYPE_TRAILHEAD: return 17;
 		case CW_TYPE_REFERENCE: return 18;
-		default: throw new IllegalArgumentException("unmatched argument "+id+" in CacheSize cw2GuiSelect()");
+		default: throw new IllegalArgumentException("unmatched argument "+typeId+" in CacheSize cw2GuiSelect()");
 		}
 	}
 	
@@ -452,7 +459,7 @@
 	 * @param gpxType type information found in GPX
 	 * @return internal cache type
 	 */
-	public static final byte gpxType2CwType(String gpxType) throws IllegalArgumentException {
+	public static byte gpxType2CwType(final String gpxType) throws IllegalArgumentException {
 		if (gpxType.equals(GC_GPX_TRADITIONAL) || gpxType.equals("Traditional")|| gpxType.equals("Classic")) return CW_TYPE_TRADITIONAL;
 		if (gpxType.equals(GC_GPX_MULTI) || gpxType.equals("Multi") || gpxType.equals("Offset")) return CW_TYPE_MULTI;
 		if (gpxType.equals(GC_GPX_VIRTUAL) || gpxType.equals("Virtual")) return CW_TYPE_VIRTUAL;
@@ -482,7 +489,7 @@
 	 * @return internal cache type
 	 * @throws IllegalArgumentException if <code>ocType</code> can not be matched
 	 */
-	public static final byte ocType2CwType(String ocType) throws IllegalArgumentException {
+	public static byte ocType2CwType(final String ocType) throws IllegalArgumentException {
 		if(ocType.equals("1")) return CW_TYPE_UNKNOWN;
 		if(ocType.equals("2")) return CW_TYPE_TRADITIONAL;
 		if(ocType.equals("3")) return CW_TYPE_MULTI;	
@@ -502,7 +509,7 @@
 	 * @return internal representation of cache type
 	 * @throws IllegalArgumentException if <code>gcType</code> can not be matched
 	 */
-	public static final byte gcSpider2CwType(String gcType) throws IllegalArgumentException {
+	public static byte gcSpider2CwType(final String gcType) throws IllegalArgumentException {
 		if (gcType.equals("2")) { return CW_TYPE_TRADITIONAL; }
 		if (gcType.equals("3")) { return CW_TYPE_MULTI; }
 		if (gcType.equals("4")) { return CW_TYPE_VIRTUAL; }
@@ -522,12 +529,12 @@
 	
 	/**
 	 * map cache types to images
-	 * @param id internal cache type id
+	 * @param typeId internal cache type id
 	 * @return non qualified name of image
 	 * @throws IllegalArgumentException if <code>id</code> can not be matched
 	 */
-	public static final String typeImageForId(byte id) throws IllegalArgumentException {
-		switch (id) {
+	public static String typeImageForId(final byte typeId) throws IllegalArgumentException {
+		switch (typeId) {
 		case CW_TYPE_CUSTOM: return "CW_GUIIMG_CUSTOM";
 		case CW_TYPE_TRADITIONAL: return CW_GUIIMG_TRADITIONAL;
 		case CW_TYPE_MULTI: return CW_GUIIMG_MULTI;
@@ -549,18 +556,18 @@
 		case CW_TYPE_REFERENCE: return CW_GUIIMG_REFERENCE;
 		case CW_TYPE_APE: return CW_GUIIMG_APE;
 		case CW_TYPE_MAZE: return CW_GUIIMG_MAZE;
-		default: throw new IllegalArgumentException("unmatched argument "+id+" in CacheSize typeImageForId()");
+		default: throw new IllegalArgumentException("unmatched argument "+typeId+" in CacheSize typeImageForId()");
 		}
 	}
 	
 	/**
 	 * generate type description matching those of GC for GPX export
-	 * @param id internal type id
+	 * @param typeId internal type id
 	 * @return type information in GC.com GPX format 
 	 * @throws IllegalArgumentException
 	 */
-	public static final String id2GpxString(byte id) throws IllegalArgumentException {
-		switch (id) {
+	public static String id2GpxString(final byte typeId) throws IllegalArgumentException {
+		switch (typeId) {
 		case CW_TYPE_TRADITIONAL: return GC_GPX_TRADITIONAL;
 		case CW_TYPE_MULTI: return GC_GPX_MULTI;
 		case CW_TYPE_VIRTUAL: return GC_GPX_VIRTUAL;
@@ -582,23 +589,23 @@
 		case CW_TYPE_MAZE: return GC_GPX_MAZE;
 		case CW_TYPE_APE: return GC_GPX_APE;
 		case CW_TYPE_CUSTOM: return CW_GUISTR_CUSTOM;
-		default: throw new IllegalArgumentException("unmatched argument "+id+" in CacheSize id2GpxString()");
+		default: throw new IllegalArgumentException("unmatched argument "+typeId+" in CacheSize id2GpxString()");
 		}
 	}
 	
 	//TODO: do we actually need this one?
 	/**
 	 * generate human readable type description for exporters
-	 * @param id internal type id
+	 * @param typeId internal type id
 	 * @return human readable description of waypoint type for exporters  
 	 * @throws IllegalArgumentException if <code>id</code> is not a valid cache type
 	 */
-	public static final String cw2ExportString(byte id) throws IllegalArgumentException {
+	public static String cw2ExportString(final byte typeId) throws IllegalArgumentException {
 		String ret;
 		try {
-			ret = id2GpxString(id);
+			ret = id2GpxString(typeId);
 			// check for | in additional waypoints and only use the string after |
-			int pipePosistion = ret.indexOf("|");
+			final int pipePosistion = ret.indexOf('|');
 			if (pipePosistion > -1) {
 				ret = ret.substring(pipePosistion+1);
 			} //TODO: check for exceeding max length
@@ -613,7 +620,7 @@
 	 * @param type type value to be checked
 	 * @return true if <code>type</code> matches on of the CacheWolf types, false otherwise
 	 */
-	public static final boolean isValidType(byte type) {
+	public static boolean isValidType(final byte type) {
 		switch (type) {
 		case CW_TYPE_TRADITIONAL: return true;
 		case CW_TYPE_MULTI: return true;



From pfeffer at mail.berlios.de  Sun Aug 16 13:42:56 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Sun, 16 Aug 2009 13:42:56 +0200
Subject: [Cachewolf-svn] r2087 - trunk/src/CacheWolf/navi
Message-ID: <200908161142.n7GBguNd029536@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-16 13:42:52 +0200 (Sun, 16 Aug 2009)
New Revision: 2087

Modified:
   trunk/src/CacheWolf/navi/LambertProjection.java
   trunk/src/CacheWolf/navi/MapLoader.java
   trunk/src/CacheWolf/navi/TransformCoordinates.java
Log:
Maploader: remove output to console

Modified: trunk/src/CacheWolf/navi/LambertProjection.java
===================================================================
--- trunk/src/CacheWolf/navi/LambertProjection.java	2009-08-16 09:27:59 UTC (rev 2086)
+++ trunk/src/CacheWolf/navi/LambertProjection.java	2009-08-16 11:42:52 UTC (rev 2087)
@@ -44,8 +44,8 @@
 		double t1 = java.lang.Math.tan(java.lang.Math.PI/4 - firstStandardParallel/ 2) / java.lang.Math.pow((1.0 - (e * java.lang.Math.sin(firstStandardParallel ))) / (1.0 + (e * java.lang.Math.sin(firstStandardParallel ))), e/2);
 		double t2 = java.lang.Math.tan(java.lang.Math.PI/4 - secondSandardParallel/ 2) / java.lang.Math.pow((1.0 - (e * java.lang.Math.sin(secondSandardParallel))) / (1.0 + (e * java.lang.Math.sin(secondSandardParallel))), e/2);
 		n = (java.lang.Math.log(m1) - java.lang.Math.log(m2)) / (java.lang.Math.log(t1) - java.lang.Math.log(t2));
-		double nsin = java.lang.Math.sin(centralLat);
-		Vm.debug("n-log: " + n+ " n-sin phi: " + nsin);
+		// double nsin = java.lang.Math.sin(centralLat); // nsin and n should be equal
+		// Vm.debug("n-log: " + n+ " n-sin phi: " + nsin);
 		F0 = m1 / (n * java.lang.Math.pow(t1, n)); // pow(t2???, n)
 		Rb = ellip.a * F0 * java.lang.Math.pow(t0, n);
 	}

Modified: trunk/src/CacheWolf/navi/MapLoader.java
===================================================================
--- trunk/src/CacheWolf/navi/MapLoader.java	2009-08-16 09:27:59 UTC (rev 2086)
+++ trunk/src/CacheWolf/navi/MapLoader.java	2009-08-16 11:42:52 UTC (rev 2087)
@@ -2,6 +2,7 @@
 
 import CacheWolf.CWPoint;
 import CacheWolf.Common;
+import CacheWolf.Global;
 import CacheWolf.HttpConnection;
 import CacheWolf.InfoBox;
 import CacheWolf.MyLocale;
@@ -561,7 +562,7 @@
 		coordinateReferenceSystemUrlPart[crs] + "&" + bbox + 
 		"&WIDTH=" + pixelsize.x + "&HEIGHT=" + pixelsize.y + "&" + 
 		layersUrlPart + "&" + stylesUrlPart + "&" + imageFormatUrlPart;
-		Vm.debug(ret);
+		Global.getPref().log(ret + " WGS84: Buttom left: " + buttomleft.toString(CWPoint.DD) + "top right: " + topright.toString(CWPoint.DD));
 		return ret;
 	}
 
@@ -618,7 +619,7 @@
 			gk[BUTTOMLEFT_INDEX].shift(metersperpixalhorizontal / 2, 1);
 			gk[BUTTOMLEFT_INDEX].shift(metersperpixalvertical / 2, 0);
 
-			Vm.debug("\n" + maparea.topleft.toString(CWPoint.LAT_LON));
+			//Vm.debug("\n" + maparea.topleft.toString(CWPoint.LAT_LON));
 			//Vm.debug(TransformCoordinates.germanGkToWgs84(TransformCoordinates.wgs84ToGermanGk(maparea.topleft)).toString(CWPoint.LAT_LON));
 			topleft.set(gk[TOPLEFT_INDEX].getNorthing(), gk[TOPLEFT_INDEX].getEasting());
 			buttomright.set(gk[BUTTOMRIGHT_INDEX].getNorthing(), gk[BUTTOMRIGHT_INDEX].getEasting());

Modified: trunk/src/CacheWolf/navi/TransformCoordinates.java
===================================================================
--- trunk/src/CacheWolf/navi/TransformCoordinates.java	2009-08-16 09:27:59 UTC (rev 2086)
+++ trunk/src/CacheWolf/navi/TransformCoordinates.java	2009-08-16 11:42:52 UTC (rev 2087)
@@ -233,7 +233,7 @@
 		XyzCoordinates xyztarget = transform(xyzWgs, transparams.inverted);
 		CWPoint tll = xyz2Latlon(xyztarget, transparams.ellip);
 		ProjectedPoint ret = new ProjectedPoint(tll, epsg_localsystem, false, isLocalsystem);
-		Vm.debug("wgs84: " + wgs84.latDec + " lon: " + wgs84.lonDec + ", Projected: " + ret.toString());
+		//Vm.debug("wgs84: " + wgs84.latDec + " lon: " + wgs84.lonDec + ", Projected: " + ret.toString());
 		return ret;
 	}
 



From pfeffer at mail.berlios.de  Tue Aug 18 03:50:42 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Tue, 18 Aug 2009 03:50:42 +0200
Subject: [Cachewolf-svn] r2088 - trunk/src/CacheWolf
Message-ID: <200908180150.n7I1og2V028088@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-18 03:50:40 +0200 (Tue, 18 Aug 2009)
New Revision: 2088

Modified:
   trunk/src/CacheWolf/CWPoint.java
Log:
CWPoint / Mapslist: make CWPoint use the more fast and less accurate method of distance calculation if only this is needed

Modified: trunk/src/CacheWolf/CWPoint.java
===================================================================
--- trunk/src/CacheWolf/CWPoint.java	2009-08-16 11:42:52 UTC (rev 2087)
+++ trunk/src/CacheWolf/CWPoint.java	2009-08-18 01:50:40 UTC (rev 2088)
@@ -585,7 +585,7 @@
 	}
 	
 	public double getDistanceRad (CWPoint ll) {
-		return getDistance(ll.latDec, ll.lonDec);
+		return getDistanceRad(ll.latDec, ll.lonDec);
 	}
 
 	



From pfeffer at mail.berlios.de  Tue Aug 18 03:53:31 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Tue, 18 Aug 2009 03:53:31 +0200
Subject: [Cachewolf-svn] r2089 - trunk/src/CacheWolf/navi
Message-ID: <200908180153.n7I1rVbk028196@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-18 03:53:29 +0200 (Tue, 18 Aug 2009)
New Revision: 2089

Modified:
   trunk/src/CacheWolf/navi/MapInfoObject.java
Log:
MapsList: performance: avoid unnecessary instantiation of CWPoint

Modified: trunk/src/CacheWolf/navi/MapInfoObject.java
===================================================================
--- trunk/src/CacheWolf/navi/MapInfoObject.java	2009-08-18 01:50:40 UTC (rev 2088)
+++ trunk/src/CacheWolf/navi/MapInfoObject.java	2009-08-18 01:53:29 UTC (rev 2089)
@@ -270,7 +270,7 @@
 		try {
 			topleft.set(calcLatLon(0, 0));
 			center.set((buttomright.latDec + topleft.latDec)/2,(buttomright.lonDec + topleft.lonDec)/2);
-			sizeKm = java.lang.Math.abs((float)center.getDistance(buttomright.latDec, buttomright.lonDec)) *2;
+			sizeKm = java.lang.Math.abs((float)center.getDistance(buttomright)) *2;
 
 			//calculate reverse affine
 			double nenner=(-affine[1]*affine[2]+affine[0]*affine[3]);



From pfeffer at mail.berlios.de  Wed Aug 19 02:08:18 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Wed, 19 Aug 2009 02:08:18 +0200
Subject: [Cachewolf-svn] r2090 - trunk/src/CacheWolf
Message-ID: <200908190008.n7J08IFb028605@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-19 02:08:16 +0200 (Wed, 19 Aug 2009)
New Revision: 2090

Modified:
   trunk/src/CacheWolf/CWPoint.java
   trunk/src/CacheWolf/CoordsScreen.java
   trunk/src/CacheWolf/Version.java
Log:
CoordsScreen: CWPoint / Gau?-Kr?ger: bug fixed: northing and easting was swaped. Now consistantly the first parameter is lat or northing.

Modified: trunk/src/CacheWolf/CWPoint.java
===================================================================
--- trunk/src/CacheWolf/CWPoint.java	2009-08-18 01:53:29 UTC (rev 2089)
+++ trunk/src/CacheWolf/CWPoint.java	2009-08-19 00:08:16 UTC (rev 2090)
@@ -237,7 +237,7 @@
 				} else if (rex.stringMatched(17) != null){ // UTM
 					set(rex.stringMatched(17),rex.stringMatched(19),rex.stringMatched(18)); //parse sequence is E N, but set needs N E
 				} else if (rex.stringMatched(20) != null){ // GK
-					set(rex.stringMatched(20),rex.stringMatched(21));
+					set(rex.stringMatched(21),rex.stringMatched(20));
 				}
 				//else Vm.debug("CWPoint: "+coord+" could not be parsed");
 			}	/**
@@ -325,8 +325,8 @@
 	 * @param strEasting  Easting component
 	 * @param strNorthing Northing component
 	 */
-	public void set ( String strEasting, String strNorthing ){
-		CWPoint pp = new CWPoint(Common.parseDouble(strEasting), Common.parseDouble(strNorthing));
+	public void set (String strNorthing, String strEasting){
+		CWPoint pp = new CWPoint(Common.parseDouble(strNorthing),Common.parseDouble(strEasting));
 		ProjectedPoint gk = new ProjectedPoint(pp, ProjectedPoint.LOCALSYSTEM_DEFAULT, true, true);
 		set(TransformCoordinates.ProjectedToWgs84(gk, ProjectedPoint.LOCALSYSTEM_DEFAULT, true));
 	}

Modified: trunk/src/CacheWolf/CoordsScreen.java
===================================================================
--- trunk/src/CacheWolf/CoordsScreen.java	2009-08-18 01:53:29 UTC (rev 2089)
+++ trunk/src/CacheWolf/CoordsScreen.java	2009-08-19 00:08:16 UTC (rev 2090)
@@ -163,7 +163,7 @@
 			coords.set(inpUTMZone.getText(), 
 					   inpUTMNorthing.getText(), inpUTMEasting.getText());
 		else if (format == CWPoint.GK) {
-			coords.set(inpUTMEasting.getText(), inpUTMNorthing.getText());			
+			coords.set(inpUTMNorthing.getText(), inpUTMEasting.getText());			
 		}
 		else {
 			NS = chcNS.getInt()== 0?"N":"S";

Modified: trunk/src/CacheWolf/Version.java
===================================================================
--- trunk/src/CacheWolf/Version.java	2009-08-18 01:53:29 UTC (rev 2089)
+++ trunk/src/CacheWolf/Version.java	2009-08-19 00:08:16 UTC (rev 2090)
@@ -15,7 +15,7 @@
 	static final int VER_MAJOR = 1;
 	static final int VER_MINOR = 1;
 	static final String VER_SVN ="$LastChangedRevision$"; // the number is automatically replaced by subversion to the latest versionnumer of this file (svn:keywords LastChangedRevision)
-	static final int SVN_REVISION = Common.parseInt(VER_SVN.substring(VER_SVN.indexOf(" ")+1, VER_SVN.lastIndexOf(" ")));
+	static final int SVN_REVISION = 20090818;
 	static final int VERSION_TYPE = 3;
 	public static final String[] VERSION_TYPES = {
 		"Release", 



From pfeffer at mail.berlios.de  Wed Aug 19 02:10:44 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Wed, 19 Aug 2009 02:10:44 +0200
Subject: [Cachewolf-svn] r2091 - trunk/src/CacheWolf
Message-ID: <200908190010.n7J0Ai8C029193@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-19 02:10:43 +0200 (Wed, 19 Aug 2009)
New Revision: 2091

Modified:
   trunk/src/CacheWolf/Version.java
Log:
Version: revoke my previous unintended commit on Version.java

Modified: trunk/src/CacheWolf/Version.java
===================================================================
--- trunk/src/CacheWolf/Version.java	2009-08-19 00:08:16 UTC (rev 2090)
+++ trunk/src/CacheWolf/Version.java	2009-08-19 00:10:43 UTC (rev 2091)
@@ -15,7 +15,7 @@
 	static final int VER_MAJOR = 1;
 	static final int VER_MINOR = 1;
 	static final String VER_SVN ="$LastChangedRevision$"; // the number is automatically replaced by subversion to the latest versionnumer of this file (svn:keywords LastChangedRevision)
-	static final int SVN_REVISION = 20090818;
+	static final int SVN_REVISION = Common.parseInt(VER_SVN.substring(VER_SVN.indexOf(" ")+1, VER_SVN.lastIndexOf(" ")));
 	static final int VERSION_TYPE = 3;
 	public static final String[] VERSION_TYPES = {
 		"Release", 



From pfeffer at mail.berlios.de  Wed Aug 19 02:35:56 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Wed, 19 Aug 2009 02:35:56 +0200
Subject: [Cachewolf-svn] r2092 - trunk/src/CacheWolf/navi
Message-ID: <200908190035.n7J0ZuXm003836@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-19 02:35:54 +0200 (Wed, 19 Aug 2009)
New Revision: 2092

Modified:
   trunk/src/CacheWolf/navi/GkProjection.java
Log:
Gau?-Kr?ger Projection: now also works west of Greenwich

Modified: trunk/src/CacheWolf/navi/GkProjection.java
===================================================================
--- trunk/src/CacheWolf/navi/GkProjection.java	2009-08-19 00:10:43 UTC (rev 2091)
+++ trunk/src/CacheWolf/navi/GkProjection.java	2009-08-19 00:35:54 UTC (rev 2092)
@@ -116,7 +116,9 @@
 	
 	private static ProjectedPoint project(CWPoint latlon, Ellipsoid ellipsoid, double stripewidth, int stripe, double degreeOfStripe0, double scale, ProjectedPoint gkp) {
 		double e2 = (ellipsoid.a * ellipsoid.a - ellipsoid.b * ellipsoid.b)/(ellipsoid.a * ellipsoid.a);
-		double l = (latlon.lonDec - degreeOfStripe0 - stripe * stripewidth) /180*Math.PI;
+		double l = latlon.lonDec;
+		if (l<0) l+=360;
+		l = (l - degreeOfStripe0 - stripe * stripewidth) /180*Math.PI;
 		double B = latlon.latDec /180*Math.PI;
 		double N = ellipsoid.a/ Math.sqrt(1- e2 * Math.pow(Math.sin(B),2));
 		double nue = Math.sqrt(Math.pow(ellipsoid.a, 2) / Math.pow(ellipsoid.b, 2)* e2 * Math.pow(Math.cos(B), 2));



From greiol at mail.berlios.de  Wed Aug 19 22:09:24 2009
From: greiol at mail.berlios.de (greiol at BerliOS)
Date: Wed, 19 Aug 2009 22:09:24 +0200
Subject: [Cachewolf-svn] r2093 - trunk/src/CacheWolf
Message-ID: <200908192009.n7JK9Oi0018069@sheep.berlios.de>

Author: greiol
Date: 2009-08-19 22:09:23 +0200 (Wed, 19 Aug 2009)
New Revision: 2093

Modified:
   trunk/src/CacheWolf/DetailsPanel.java
   trunk/src/CacheWolf/GuiImageBroker.java
   trunk/src/CacheWolf/MainTab.java
Log:
- reduced visibility of properties and parameters
- added curly braces to if statements
- replaced string appending with string buffers
- added calls to super() in internal classes
- removed setNeedsTabelUpdate()

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-08-19 00:35:54 UTC (rev 2092)
+++ trunk/src/CacheWolf/DetailsPanel.java	2009-08-19 20:09:23 UTC (rev 2093)
@@ -38,53 +38,51 @@
 public class DetailsPanel extends CellPanel {
 
     // ===== GUI elements =====
-	/** way point id */
+	/** way point id. */
 	private static mInput inpWaypoint;
-	/** way point name */
+	/** way point name. */
 	private static mInput inpName;
-	/** way point hidden date */
+	/** way point hidden date. */
 	private static mInput inpHidden;
-	/** way point owner */
+	/** way point owner. */
 	private static mInput inpOwner;
-	/** way point coordinates, open change coordinates dialog */
+	/** way point coordinates, open change coordinates dialog. */
 	private static mButton btnCoordinates;
-	/** set center to current way point */
+	/** set center to current way point. */
 	private static mButton btnCenter;
-	/** add time stamp to notes */
+	/** add time stamp to notes. */
 	private static mButton btnAddDateTime;
-	/** create a new way point */
+	/** create a new way point. */
 	private static mButton btnNewWpt;
-	/** show details for travel bus in way point */
+	/** show details for travel bus in way point. */
 	private static mButton btnShowBug;
-	/** switch to moving map and center on way point coordinates */
+	/** switch to moving map and center on way point coordinates. */
 	private static mButton btnShowMap;
-	/** set way point as destination and switch to goto ppanel */
+	/** set way point as destination and switch to goto panel. */
 	private static mButton btnGoto;
-	/** add a user picture to way point */
+	/** add a user picture to way point. */
 	private static mButton btnAddPicture;
-	/** toggle blacklist status */
+	/** toggle blacklist status. */
 	private static mButton btnBlack;
-	/** add or edit notes for way point */
+	/** add or edit notes for way point. */
 	private static mButton btnNotes;
-	/** set found date */
+	/** set found date. */
 	private static mButton btnFoundDate;
-	/** set hidden date */
+	/** set hidden date. */
 	private static mButton btnHiddenDate;
-	/** set terrain value */
+	/** set terrain value. */
 	private static mButton btnTerr;
-	/** set difficulty value */
+	/** set difficulty value. */
 	private static mButton btnDiff;
-	/** drop down list with cache types */
+	/** drop down list with cache types. */
 	private static mChoice chcType;
-	/** drop down list with container sizes */
+	/** drop down list with container sizes. */
 	private static mChoice chcSize;
-	/** select way point status */
+	/** select way point status. */
 	private static mComboBox chcStatus;
-	/** toolbar panel */
-	private static CellPanel pnlTools;
-	/** notes for way point */
+	/** notes for way point. */
 	private static mTextPad waypointNotes;
-	/** shows number of additional way points */
+	/** shows number of additional way points. */
 	private static mLabel lblAddiCount;
 	/** FIXME move to image broker? */
 	private static mImage imgBlack, imgBlackNo, imgShowBug, imgShowBugNo, imgNewWpt, imgGoto, imgNotes;
@@ -94,22 +92,22 @@
 	// ===== data handles =====
 	/** FIXME: never used? */
 	private static CacheDB cacheDB;
-	/** waypoint to be displayed */
-	private static CacheHolder ch;
+	/** waypoint to be displayed. */
+	public CacheHolder cache;
 	/** FIXME: never used? */
 	private static int dbIndex = -1;
 	/** panel to display waypoint attributes */
 	private static AttributesViewer attViewer;
-	/** preferences object */
+	/** preferences object. */
 	private static Preferences pref;
-	/** waypoint profile */
+	/** waypoint profile. */
 	private static Profile profile;
 
 	// ===== flags =====
 	/** notes have changes */
-	private boolean dirty_notes;
+	private boolean dirtyNotes;
 	/** details have changed FIXME: make this obsolete */
-	private boolean dirty_details;
+	private boolean dirtyDetails;
 	/** cache is blacklisted FIXME: make this obsolete */
 	private boolean blackStatus;
 	/** blacklist status was changed by user FIXME: make this obsolete */
@@ -117,20 +115,20 @@
 	/** FIXME */
 	private boolean needsTableUpdate;
 	/** screen is VGA or better */
-	private boolean isBigScreen;
+	private final boolean isBigScreen;
 	/** use big icons */
-	private boolean useBigIcons;
+	private final boolean useBigIcons;
+	/** String to display for invalid or not applicable terrain or difficulty values.*/
+	private final static String DTINVALID = ": -.-";
 
     // TODO: move images to image broker
     //mImage imgBlack, imgBlackNo, imgShowBug, imgShowBugNo, imgNewWpt, imgGoto, imgShowMaps, imgAddImages, imgNotes;
 
-	//FIXME: remove
-	CacheHolder thisCache;
-	
 	/**
 	 * public constructor for detail panels. should only be called from main tab.
 	 */
 	public DetailsPanel() {
+		super();
         // ===== local objects =====
 		/** helper panels to organize layout */
 		CellPanel helperPanel1, helperPanel2, helperPanel3, helperPanel4, helperPanel5;
@@ -141,8 +139,8 @@
 		cacheDB = profile.cacheDB;
 
 		// ===== initialize flags =====
-		dirty_notes = false;
-		dirty_details = false;
+		dirtyNotes = false;
+		dirtyDetails = false;
 		blackStatus = false;
 		blackStatusChanged = false;
 		needsTableUpdate = false;
@@ -150,41 +148,6 @@
 		useBigIcons = pref.useBigIcons;
 
 		// ===== initialize GUI objects =====
-
-		// ----- tools panel ------
-		pnlTools = new CellPanel();
-		btnNewWpt = new mButton(imgNewWpt = new mImage(useBigIcons ? "newwpt_vga.png" : "newwpt.png"));
-		// FIXME: get an image with proper transparency
-		imgNewWpt.transparentColor = new Color(255, 0, 0);
-		btnNewWpt.setToolTip(MyLocale.getMsg(311, "Create Waypoint"));
-
-		btnGoto = new mButton(imgGoto = new mImage(useBigIcons ? "goto_vga.png"	: "goto.png"));
-		// FIXME: get an image with proper transparency
-		imgGoto.transparentColor = Color.White;
-		btnGoto.setToolTip(MyLocale.getMsg(345, "Goto these coordinates"));
-
-		btnShowBug = new mButton(new mImage(useBigIcons ? "bug_no_vga.gif" : "bug_no.gif"));
-		btnShowBug.setToolTip(MyLocale.getMsg(346, "Show travelbugs"));
-
-		btnShowMap = new mButton(new mImage(useBigIcons ? "globe_small_vga.gif" : "globe_small.gif"));
-		btnShowMap.setToolTip(MyLocale.getMsg(347, "Show map"));
-
-		btnAddPicture = new mButton(imgAddImages = new mImage(useBigIcons ? "images_vga.gif" : "images.gif"));
-		btnAddPicture.setToolTip(MyLocale.getMsg(348, "Add user pictures"));
-
-		btnBlack = new mButton(imgBlack = new mImage(useBigIcons ? "no_black_vga.png" : "no_black.png"));
-		// FIXME: get an image with proper transparency
-		imgBlack.transparentColor = Color.Black;
-		btnBlack.setToolTip(MyLocale.getMsg(349, "Toggle Blacklist status"));
-
-		btnNotes = new mButton(imgNotes = new mImage(useBigIcons ? "notes_vga.gif" : "notes.gif"));
-		// FIXME: get an image with proper transparency
-		imgNotes.transparentColor = Color.DarkBlue;
-		btnNotes.setToolTip(MyLocale.getMsg(351, "Add/Edit notes"));
-
-		btnAddDateTime = new mButton(new mImage(useBigIcons ? "date_time_vga.gif" : "date_time.gif"));
-		btnAddDateTime.setToolTip(MyLocale.getMsg(350, "Add timestamp to notes"));
-		
         // ----- main body -----
 
 		helperPanel1 = new CellPanel();
@@ -215,18 +178,7 @@
 		inpHidden.modifyAll(DisplayOnly, 0);
 
 		// ===== put the controls onto the GUI =====
-		// ----- tools panel ------
-		pnlTools.addNext(btnNewWpt);
-		pnlTools.addNext(btnGoto);
-		pnlTools.addNext(btnShowBug);
-		pnlTools.addNext(btnShowMap);
-		pnlTools.addNext(btnAddPicture);
-		pnlTools.addNext(btnBlack);
-		pnlTools.addNext(btnNotes);
-		pnlTools.addLast(btnAddDateTime);
 
-		pnlTools.stretchFirstRow = true;
-
         // ----- helper panels -----
 
 		btnDiff = new mButton(MyLocale.getMsg(1000, "D") + ": 5.5");
@@ -261,7 +213,7 @@
 		helperPanel5.addLast(btnHiddenDate, DONTSTRETCH, DONTFILL);
 
 		// ----- main body -----
-		addLast(pnlTools, CellConstants.DONTSTRETCH, CellConstants.WEST).setTag(SPAN, new Dimension(3, 1));
+		addLast(createToolsPanel(), CellConstants.DONTSTRETCH, CellConstants.WEST).setTag(SPAN, new Dimension(3, 1));
 
 		addNext(new mLabel(MyLocale.getMsg(300, "Type:")), CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.NORTHWEST));
 		addLast(helperPanel1, DONTSTRETCH, HFILL).setTag(CellConstants.SPAN, new Dimension(2, 1));
@@ -305,31 +257,77 @@
 		imgShowBug = new mImage(useBigIcons ? "bug_vga.gif":"bug.gif");
 		imgShowBugNo = new mImage(useBigIcons ? "bug_no_vga.gif":"bug_no.gif");
 	}
+	
+	private CellPanel createToolsPanel() {
+		final CellPanel pnlTools = new CellPanel();
+		
+		btnNewWpt = new mButton(imgNewWpt = new mImage(useBigIcons ? "newwpt_vga.png" : "newwpt.png"));
+		// FIXME: get an image with proper transparency
+		imgNewWpt.transparentColor = new Color(255, 0, 0);
+		btnNewWpt.setToolTip(MyLocale.getMsg(311, "Create Waypoint"));
 
+		btnGoto = new mButton(imgGoto = new mImage(useBigIcons ? "goto_vga.png"	: "goto.png"));
+		// FIXME: get an image with proper transparency
+		imgGoto.transparentColor = Color.White;
+		btnGoto.setToolTip(MyLocale.getMsg(345, "Goto these coordinates"));
+
+		btnShowBug = new mButton(new mImage(useBigIcons ? "bug_no_vga.gif" : "bug_no.gif"));
+		btnShowBug.setToolTip(MyLocale.getMsg(346, "Show travelbugs"));
+
+		btnShowMap = new mButton(new mImage(useBigIcons ? "globe_small_vga.gif" : "globe_small.gif"));
+		btnShowMap.setToolTip(MyLocale.getMsg(347, "Show map"));
+
+		btnAddPicture = new mButton(imgAddImages = new mImage(useBigIcons ? "images_vga.gif" : "images.gif"));
+		btnAddPicture.setToolTip(MyLocale.getMsg(348, "Add user pictures"));
+
+		btnBlack = new mButton(imgBlack = new mImage(useBigIcons ? "no_black_vga.png" : "no_black.png"));
+		// FIXME: get an image with proper transparency
+		imgBlack.transparentColor = Color.Black;
+		btnBlack.setToolTip(MyLocale.getMsg(349, "Toggle Blacklist status"));
+
+		btnNotes = new mButton(imgNotes = new mImage(useBigIcons ? "notes_vga.gif" : "notes.gif"));
+		// FIXME: get an image with proper transparency
+		imgNotes.transparentColor = Color.DarkBlue;
+		btnNotes.setToolTip(MyLocale.getMsg(351, "Add/Edit notes"));
+
+		btnAddDateTime = new mButton(new mImage(useBigIcons ? "date_time_vga.gif" : "date_time.gif"));
+		btnAddDateTime.setToolTip(MyLocale.getMsg(350, "Add timestamp to notes"));
+		
+		pnlTools.addNext(btnNewWpt);
+		pnlTools.addNext(btnGoto);
+		pnlTools.addNext(btnShowBug);
+		pnlTools.addNext(btnShowMap);
+		pnlTools.addNext(btnAddPicture);
+		pnlTools.addNext(btnBlack);
+		pnlTools.addNext(btnNotes);
+		pnlTools.addLast(btnAddDateTime);
+
+		pnlTools.stretchFirstRow = true;
+		
+		return pnlTools;
+	}
+
 	public void clear() {
 		attViewer.clear();
 	}
 
-	public void setNeedsTableUpdate(boolean tableUpdate) {
-		needsTableUpdate = tableUpdate;
-	}
-
-	public boolean needsTableUpdate() {
+	public boolean getNeedsTableUpdate() {
 		return needsTableUpdate;
 	}
 
 	public boolean isDirty() {
-		return dirty_notes || dirty_details || needsTableUpdate;
+		return dirtyNotes || dirtyDetails || needsTableUpdate;
 	}
 
 	public boolean hasBlackStatusChanged() {
 		return blackStatusChanged;
 	}
 
-	public void setDetails(CacheHolder ch) {
-		thisCache = ch;
-		dirty_notes = false;
-		dirty_details = false;
+	public void setDetails(final CacheHolder ch, boolean isNew) {
+		needsTableUpdate = isNew;
+		cache = ch;
+		dirtyNotes = false;
+		dirtyDetails = false;
 		inpWaypoint.setText(ch.getWayPoint());
 		inpName.setText(ch.getCacheName());
 		btnCoordinates.setText(ch.pos.toString());
@@ -341,8 +339,9 @@
 			chcStatus.setText(ch.getCacheStatus());
 			// If the cache status contains a date, do not overwrite it with
 			// 'found' message
-			if (ch.is_found() == true)
+			if (ch.is_found()) {
 				chcStatus.setText(MyLocale.getMsg(318, "Found"));
+			}
 		}
 		chcType.setInt(CacheType.cw2GuiSelect(ch.getType()));
 		if (ch.is_black()) {
@@ -353,9 +352,10 @@
 		blackStatus = ch.is_black();
 		blackStatusChanged = false;
 		btnBlack.repaintNow();
-		if (inpWaypoint.getText().length() == 0)
+		if (inpWaypoint.getText().length() == 0) {
 			createWptName();
-		if (ch.has_bugs() == true) {
+		}
+		if (ch.has_bugs()) {
 			// btnShowBug.modify(Control.Disabled,1);
 			btnShowBug.image = imgShowBug;
 		} else {
@@ -367,8 +367,8 @@
 
 		attViewer.showImages(ch.getCacheDetails(true).attributes);
 		if (ch.isAddiWpt() || ch.isCustomWpt()) {
-			btnTerr.setText(MyLocale.getMsg(1001, "T")+": -.-");
-			btnDiff.setText(MyLocale.getMsg(1000, "D")+": -.-");
+			btnTerr.setText(MyLocale.getMsg(1001, "T") + DTINVALID);
+			btnDiff.setText(MyLocale.getMsg(1000, "D") + DTINVALID);
 			deactivateControl(btnTerr);
 			deactivateControl(btnDiff);
 			deactivateControl(chcSize);
@@ -390,16 +390,18 @@
 			} else {
 				btnTerr.setText("T: -.-");
 				ch.setIncomplete(true);
-				if (Global.getPref().debug)
+				if (Global.getPref().debug) {
 					Global.getPref().log(ch.getWayPoint() + " has wrong terrain " + ch.getTerrain());
+				}
 			}
 			if (CacheTerrDiff.isValidTD(ch.getHard())) {
 				btnDiff.setText(MyLocale.getMsg(1000, "D") + ": " + CacheTerrDiff.longDT(ch.getHard()));
 			} else {
 				btnDiff.setText("D: -.-");
 				ch.setIncomplete(true);
-				if (Global.getPref().debug)
+				if (Global.getPref().debug) {
 					Global.getPref().log(ch.getWayPoint() + " has wrong difficulty " + ch.getHard());
+				}
 			}
 		}
 		int addiCount = 0;
@@ -408,10 +410,11 @@
 		} else {
 			addiCount = ch.mainCache.addiWpts.size();
 		}
-		lblAddiCount.setText(MyLocale.getMsg(1044, "Addis") + ": " + String.valueOf(addiCount));
+		lblAddiCount.setText(MyLocale.getMsg(1044, "Addis") + ": " + addiCount);
 
-		if (isBigScreen)
+		if (isBigScreen) {
 			waypointNotes.setText(ch.getExistingDetails().getCacheNotes());
+		}
 	}
 
 	/**
@@ -419,7 +422,7 @@
 	 * respective MainWpt
 	 */
 	public void createWptName() {
-		String wpt = inpWaypoint.getText().toUpperCase();
+		final String wpt = inpWaypoint.getText().toUpperCase();
 		if (CacheType.isAddiWpt(CacheType.guiSelect2Cw(chcType.getInt())) 
 				&& Global.mainTab.mainCache != null 
 				&& (Global.mainTab.mainCache.startsWith("GC") 
@@ -442,7 +445,7 @@
 	/**
 	 * Method to react to a user input.
 	 */
-	public void onEvent(Event ev) {
+	public void onEvent(final Event ev) {
 		if (ev instanceof DataChangeEvent) {
 			if (ev.target == inpWaypoint) {
 				// If user used lower case -> convert directly to upper case
@@ -467,25 +470,26 @@
 					deactivateControl(btnShowBug);
 					deactivateControl(btnBlack);
 					chcSize.select(0);
-					btnTerr.setText(MyLocale.getMsg(1001, "T")+": -.-");
-					btnDiff.setText(MyLocale.getMsg(1000, "D")+": -.-");
+					btnTerr.setText(MyLocale.getMsg(1001, "T") + DTINVALID);
+					btnDiff.setText(MyLocale.getMsg(1000, "D") + DTINVALID);
 				}
 			}
 			//FIXME: check if something was actually changed, since datacachnge events also occur if you just hop through the fileds with the tab key (Why? don't know!)
-			dirty_details = true;
+			dirtyDetails = true;
 			needsTableUpdate = true;
 		}
 		if (ev instanceof ControlEvent && ev.type == ControlEvent.PRESSED) {
 			if (ev.target == btnNotes) {
-				dirty_notes = true; // TODO I think this is redundant, because
+				dirtyNotes = true; // TODO I think this is redundant, because
 									// the notes are saved separately by the notes screen itself
-				NotesScreen nsc = new NotesScreen(thisCache
+				final NotesScreen nsc = new NotesScreen(cache
 						.getCacheDetails(true));
 				nsc.execute(this.getFrame(), Gui.CENTER_FRAME);
-				if (isBigScreen)
-					waypointNotes.setText(thisCache.getCacheDetails(true).getCacheNotes());
+				if (isBigScreen) {
+					waypointNotes.setText(cache.getCacheDetails(true).getCacheNotes());
+				}
 			} else if (ev.target == btnShowMap) {
-				Global.mainTab.SwitchToMovingMap(thisCache.pos, true);
+				Global.mainTab.SwitchToMovingMap(cache.pos, true);
 				/*
 				 * try { MapDetailForm mdf = new
 				 * MapDetailForm(thisCache.wayPoint, pref, profile);
@@ -499,53 +503,58 @@
 				// "Travelbugs",
 				// false, pref);
 				// is.execute();
-				TravelbugInCacheScreen ts = new TravelbugInCacheScreen(thisCache.getCacheDetails(true).Travelbugs.toHtml(),	"Travelbugs");
+				final TravelbugInCacheScreen ts = new TravelbugInCacheScreen(cache.getCacheDetails(true).Travelbugs.toHtml(),	"Travelbugs");
 				ts.execute(this.getFrame(), Gui.CENTER_FRAME);
 			} else if (ev.target == btnCenter) {
-				CWPoint cp = new CWPoint(thisCache.LatLon);
-				if (!cp.isValid()) {
-					MessageBox tmpMB = new MessageBox(
+				final CWPoint cp = new CWPoint(cache.LatLon);
+				if (cp.isValid()) {
+					pref.curCentrePt.set(cp);
+					Global.mainTab.updateBearDist();
+				} else {
+					final MessageBox tmpMB = new MessageBox(
 							MyLocale.getMsg(312, "Error"),
 							MyLocale.getMsg(4111, "Coordinates must be entered in the format N DD MM.MMM E DDD MM.MMM"),
 							FormBase.OKB);
 					tmpMB.exec();
-				} else {
-					pref.curCentrePt.set(cp);
-					Global.mainTab.updateBearDist();
 				}
+
 			} else if (ev.target == btnAddDateTime) {
-				dirty_notes = true;
-				String note = thisCache.getCacheDetails(true).getCacheNotes();
-				Time dtm = new Time();
+				dirtyNotes = true;
+				
+				final StringBuffer newNote = new StringBuffer();
+				newNote.append(cache.getCacheDetails(true).getCacheNotes());
+				
+				final Time dtm = new Time();
 				dtm.getTime();
 				dtm.setFormat("E dd.MM.yyyy '/' HH:mm");
-				if (note.length() > 0)
-					note = note + "\n" + dtm.toString();
-				else
-					note = note + dtm.toString();
-				note = note + "\n";
-				thisCache.getCacheDetails(true).setCacheNotes(note);
+				
+				if (newNote.length() > 0) {
+					newNote.append('\n');
+				}
+				newNote.append(dtm.toString()).append('\n');
+				
+				cache.getCacheDetails(true).setCacheNotes(newNote.toString());
 				//FIXME: better use saveDirtyWaypoint()?
-				thisCache.save();
+				cache.save();
 			} else if (ev.target == btnAddPicture) {
-				thisCache.getCacheDetails(true).addUserImage(profile);
+				cache.getCacheDetails(true).addUserImage(profile);
 			} else if (ev.target == btnBlack) {
-				if (thisCache.is_black()) {
-					thisCache.setBlack(false);
+				if (cache.is_black()) {
+					cache.setBlack(false);
 					btnBlack.image = imgBlackNo;
 				} else {
-					thisCache.setBlack(true);
+					cache.setBlack(true);
 					btnBlack.image = imgBlack;
 				}
-				blackStatus = thisCache.is_black();
-				thisCache.setAttributesToAddiWpts();
+				blackStatus = cache.is_black();
+				cache.setAttributesToAddiWpts();
 				btnBlack.repaintNow();
-				dirty_details = true;
+				dirtyDetails = true;
 				blackStatusChanged = true;
 			} else if (ev.target == btnNewWpt) {
-				CacheHolder ch = new CacheHolder();
-				ch.LatLon = thisCache.LatLon;
-				ch.pos = new CWPoint(thisCache.pos);
+				final CacheHolder ch = new CacheHolder();
+				ch.LatLon = cache.LatLon;
+				ch.pos = new CWPoint(cache.pos);
 				ch.setType(CacheType.CW_TYPE_STAGE);
 				ch.setHard(CacheTerrDiff.CW_DT_UNSET);
 				ch.setTerrain(CacheTerrDiff.CW_DT_UNSET);
@@ -553,42 +562,44 @@
 				Global.mainTab.newWaypoint(ch);
 			} else if (ev.target == btnGoto) {
 				// FIXME: if something changed saveDirtyWaypoint();
-				Global.mainTab.gotoP.setDestinationAndSwitch(thisCache);
+				Global.mainTab.gotoP.setDestinationAndSwitch(cache);
 			} else if (ev.target == btnCoordinates) {
 				CWPoint coords = new CWPoint(btnCoordinates.getText(), CWPoint.CW);
-				CoordsScreen cs = new CoordsScreen(true);
+				final CoordsScreen cs = new CoordsScreen(true);
 				cs.setFields(coords, CWPoint.CW);
 				if (cs.execute() == FormBase.IDOK) {
-					dirty_details = true;
+					dirtyDetails = true;
 					coords = cs.getCoords();
-					Global.getProfile().notifyUnsavedChanges(!thisCache.pos.toString().equals(coords.toString()));
-					thisCache.pos.set(coords);
+					Global.getProfile().notifyUnsavedChanges(!cache.pos.toString().equals(coords.toString()));
+					cache.pos.set(coords);
 					btnCoordinates.setText(coords.toString());
-					thisCache.LatLon = coords.toString();
+					cache.LatLon = coords.toString();
 					// If the current centre is valid, calculate the distance and bearing to it
-					CWPoint centre = Global.getPref().curCentrePt;
-					if (centre.isValid())
-						thisCache.calcDistance(centre);
+					final CWPoint centre = Global.getPref().curCentrePt;
+					if (centre.isValid()) {
+						cache.calcDistance(centre);
+					}
 				}
 			} else if (ev.target == btnFoundDate) {
 				// DateChooser.dayFirst=true;
-				DateTimeChooser dc = new DateTimeChooser(Vm.getLocale());
+				final DateTimeChooser dc = new DateTimeChooser(Vm.getLocale());
 				dc.title = MyLocale.getMsg(328, "Date found");
 				dc.setPreferredSize(240, 240);
 				String foundDate = chcStatus.getText();
-				if (foundDate.startsWith(MyLocale.getMsg(318, "Found") + " "))
+				if (foundDate.startsWith(MyLocale.getMsg(318, "Found") + " ")) {
 					foundDate = foundDate.substring(MyLocale.getMsg(318, "Found").length() + 1);
-				Time t = new Time();
+				}
+				final Time t = new Time();
 				try {
 					t.parse(foundDate, "y-M-d H:m");
 				} catch (IllegalArgumentException e) {
 					try {
 						t.parse(foundDate, "y-M-d");
 					} catch (IllegalArgumentException e1) {
-						// No parsable date given - should not appear
+						Global.getPref().log("No parsable date given - should not appear", e1, true);
 					}
 				}
-				;
+
 				dc.reset(t);
 				if (dc.execute() == ewe.ui.FormBase.IDOK) {
 					chcStatus.setText(MyLocale.getMsg(318, "Found") + " "
@@ -596,12 +607,12 @@
 									+ MyLocale.formatLong(dc.month, "00") + "-"
 									+ MyLocale.formatLong(dc.day, "00") + " "
 									+ dc.time);
-					dirty_details = true;
+					dirtyDetails = true;
 					// profile.hasUnsavedChanges=true;
 				}
 			} else if (ev.target == btnHiddenDate) {
 				DateChooser.dayFirst = true;
-				DateChooser dc = new DateChooser(Vm.getLocale());
+				final DateChooser dc = new DateChooser(Vm.getLocale());
 				dc.title = MyLocale.getMsg(329, "Hidden date");
 				dc.setPreferredSize(240, 240);
 				if (inpHidden.getText().length() == 10)
@@ -618,12 +629,12 @@
 					inpHidden.setText(Convert.toString(dc.year) + "-"
 							+ MyLocale.formatLong(dc.month, "00") + "-"
 							+ MyLocale.formatLong(dc.day, "00"));
-					dirty_details = true;
+					dirtyDetails = true;
 					// profile.hasUnsavedChanges=true;
 				}
 			} else if (ev.target == btnTerr) {
 				int returnValue;
-				TerrDiffForm tdf = new TerrDiffForm(true, 
+				final TerrDiffForm tdf = new TerrDiffForm(true, 
 						decodeTerrDiff(btnTerr, 
 								MyLocale.getMsg(1001, "T"), 
 								CacheType.isCacheWpt(CacheType.guiSelect2Cw(chcType.getInt()))
@@ -632,11 +643,11 @@
 				returnValue = tdf.execute();
 				if (returnValue == 1) {
 					btnTerr.setText(MyLocale.getMsg(1001, "T") + ": " + CacheTerrDiff.longDT(tdf.getDT()));
-					dirty_details = true;
+					dirtyDetails = true;
 				}
 			} else if (ev.target == btnDiff) {
 				int returnValue;
-				TerrDiffForm tdf = new TerrDiffForm(false, 
+				final TerrDiffForm tdf = new TerrDiffForm(false, 
 						decodeTerrDiff(btnDiff, 
 								MyLocale.getMsg(1001, "D"), 
 								CacheType.isCacheWpt(CacheType.guiSelect2Cw(chcType.getInt()))
@@ -647,7 +658,7 @@
 				if (returnValue == 1) {
 					btnDiff.setText(MyLocale.getMsg(1000, "D") + ": "
 							+ CacheTerrDiff.longDT(tdf.getDT()));
-					dirty_details = true;
+					dirtyDetails = true;
 				}
 			}
 			ev.consumed = true;
@@ -655,13 +666,13 @@
 	}
 	
 	/** allow user input on control item */
-	private void activateControl(Control ctrl) {
+	private void activateControl(final Control ctrl) {
 		if (ctrl.change(0, ControlConstants.Disabled))
 			ctrl.repaint();
 	}
 
 	/** block user input on control item */
-	private void deactivateControl(Control ctrl) {
+	private void deactivateControl(final Control ctrl) {
 		if (ctrl.change(ControlConstants.Disabled, 0))
 			ctrl.repaint();
 	}
@@ -682,85 +693,85 @@
 		if (chcStatus.getText().startsWith(MyLocale.getMsg(318, "Found"))
 				&& chcStatus.getText().length() >= MyLocale
 						.getMsg(318, "Found").length() + 11) {
-			thisCache.setCacheStatus(chcStatus.getText().substring(
+			cache.setCacheStatus(chcStatus.getText().substring(
 					MyLocale.getMsg(318, "Found").length() + 1));
 		} else {
-			thisCache.setCacheStatus(chcStatus.getText());
+			cache.setCacheStatus(chcStatus.getText());
 		}
-		if (!thisCache.is_found() && thisCache.getCacheStatus().length() >= 10
-				&& thisCache.getCacheStatus().charAt(4) == '-') {
+		if (!cache.is_found() && cache.getCacheStatus().length() >= 10
+				&& cache.getCacheStatus().charAt(4) == '-') {
 			// Use same heuristic condition as in setDetails(CacheHolder) to
 			// determine, if this
 			// cache
 			// has to considered as found.
-			thisCache.setFound(true);
+			cache.setFound(true);
 		} else {
-			thisCache.setFound(chcStatus.getText().startsWith(
+			cache.setFound(chcStatus.getText().startsWith(
 					MyLocale.getMsg(318, "Found")));
 		}
-		thisCache.setCacheOwner(inpOwner.getText().trim());
-		thisCache.setOwned(thisCache.getCacheStatus().equals(
+		cache.setCacheOwner(inpOwner.getText().trim());
+		cache.setOwned(cache.getCacheStatus().equals(
 				MyLocale.getMsg(320, "Owner")));
 		// Avoid setting is_owned if alias is empty and username is empty
-		if (thisCache.is_owned() == false) {
-			thisCache.setOwned((!pref.myAlias.equals("") && pref.myAlias
-					.equals(thisCache.getCacheOwner()))
+		if (!cache.is_owned()) {
+			cache.setOwned((!pref.myAlias.equals("") && pref.myAlias
+					.equals(cache.getCacheOwner()))
 					|| (!pref.myAlias2.equals("") && pref.myAlias2
-							.equals(thisCache.getCacheOwner())));
+							.equals(cache.getCacheOwner())));
 		}
-		thisCache.setBlack(blackStatus);
-		String oldWaypoint = thisCache.getWayPoint();
-		thisCache.setWayPoint(inpWaypoint.getText().toUpperCase().trim());
-		thisCache.setCacheSize(CacheSize.guiSizeStrings2CwSize(chcSize
+		cache.setBlack(blackStatus);
+		final String oldWaypoint = cache.getWayPoint();
+		cache.setWayPoint(inpWaypoint.getText().toUpperCase().trim());
+		cache.setCacheSize(CacheSize.guiSizeStrings2CwSize(chcSize
 				.getText()));
 		// If the waypoint does not have a name, give it one
-		if (thisCache.getWayPoint().equals("")) {
-			thisCache.setWayPoint(profile.getNewWayPointName());
+		if (cache.getWayPoint().equals("")) {
+			cache.setWayPoint(profile.getNewWayPointName());
 		}
 		// Don't allow single letter names=> Problems in updateBearingDistance
 		// This is a hack but faster than slowing down the loop in
 		// updateBearingDistance
-		if (thisCache.getWayPoint().length() < 2)
-			thisCache.setWayPoint(thisCache.getWayPoint() + " ");
-		thisCache.setCacheName(inpName.getText().trim());
-		thisCache.LatLon = thisCache.pos.toString();
-		thisCache.setDateHidden(inpHidden.getText().trim());
-		byte oldType = thisCache.getType();
-		thisCache.setType(CacheType.guiSelect2Cw(chcType.getInt()));
+		if (cache.getWayPoint().length() < 2)
+			cache.setWayPoint(cache.getWayPoint() + " ");
+		cache.setCacheName(inpName.getText().trim());
+		cache.LatLon = cache.pos.toString();
+		cache.setDateHidden(inpHidden.getText().trim());
+		final byte oldType = cache.getType();
+		cache.setType(CacheType.guiSelect2Cw(chcType.getInt()));
 		// thisCache.saveCacheDetails(profile.dataDir); // this is redundant,
 		// because all changes
 		// affecting the details are immediately saved
 		// Now update the table
 		
-		thisCache.checkIncomplete();
+		cache.checkIncomplete();
 		
 		/*
 		 * The references have to be rebuilt if: - the cachetype changed from
 		 * addi->normal or normal->addi - the old cachetype or the new cachetype
 		 * were 'addi' and the waypointname has changed
 		 */
-		if (CacheType.isAddiWpt(thisCache.getType()) != CacheType.isAddiWpt(oldType)
-				|| ((CacheType.isAddiWpt(thisCache.getType()) || CacheType
-						.isAddiWpt(oldType)) && !thisCache.getWayPoint()
+		if (CacheType.isAddiWpt(cache.getType()) != CacheType.isAddiWpt(oldType)
+				|| ((CacheType.isAddiWpt(cache.getType()) || CacheType
+						.isAddiWpt(oldType)) && !cache.getWayPoint()
 						.equals(oldWaypoint))) {
 			// If we changed the type to addi, check that a parent exists
 			//FIXME: if cache was renamed we need to rebuild CacheDB.hashDB first
-			if (CacheType.isAddiWpt(thisCache.getType())) {
-				profile.setAddiRef(thisCache);
+			if (CacheType.isAddiWpt(cache.getType())) {
+				profile.setAddiRef(cache);
 			} else {
 				// rebuild links between caches
 				profile.buildReferences();
 			}
 		} else {
 			// set status also on addi wpts
-			thisCache.setAttributesToAddiWpts();
+			cache.setAttributesToAddiWpts();
 		}
-		thisCache.setHard(decodeTerrDiff(btnDiff,MyLocale.getMsg(1000, "D"),thisCache.isCacheWpt()));
-		thisCache.setTerrain(decodeTerrDiff(btnTerr,MyLocale.getMsg(1001, "T"),thisCache.isCacheWpt()));
-		dirty_notes = false;
-		dirty_details = false;
-		setNeedsTableUpdate(false);
-		thisCache.getFreshDetails().hasUnsavedChanges = true;
+		cache.setHard(decodeTerrDiff(btnDiff,MyLocale.getMsg(1000, "D"),cache.isCacheWpt()));
+		cache.setTerrain(decodeTerrDiff(btnTerr,MyLocale.getMsg(1001, "T"),cache.isCacheWpt()));
+		dirtyNotes = false;
+		dirtyDetails = false;
+		needsTableUpdate = false;
+		cache.getFreshDetails().hasUnsavedChanges = true;
 	}
 	
 	/**
@@ -772,7 +783,7 @@
 	 * @return 0 for additional or custum waypoints, -1 for caches if td is not valid, parsed byte otherwise
 	 */
 	private byte decodeTerrDiff(mButton button, String td, boolean isCache) {
-		StringBuffer tdv = new StringBuffer(2);
+		final StringBuffer tdv = new StringBuffer(2);
 		
 		// terrain and difficulty are always unset for non cache waypoints
 		if (! isCache) return CacheTerrDiff.CW_DT_UNSET;
@@ -785,22 +796,23 @@
 		buttonText=tdv.append(buttonText.charAt(0)).append(buttonText.charAt(2)).toString();
 
 		// unset value is invalid
-		if (buttonText.equals("--")) return CacheTerrDiff.CW_DT_ERROR;
+		if ("--".equals(buttonText)) return CacheTerrDiff.CW_DT_ERROR;
 		
 		return Byte.parseByte(buttonText);
 	}
 
 	private class TravelbugInCacheScreen extends Form {
 
-		private DispPanel disp = new DispPanel();
-		private mButton btCancel;
-		private TravelbugJourneyList tbjList;
+		private final DispPanel disp = new DispPanel();
+		private final mButton btCancel;
+		
 
 		TravelbugInCacheScreen(String text, String title) {
+			super();
 			this.setTitle(title);
 			this.setPreferredSize(pref.myAppWidth, pref.myAppHeight);
 			disp.setHtml(text);
-			ScrollBarPanel sbp = new MyScrollBarPanel(disp,
+			final ScrollBarPanel sbp = new MyScrollBarPanel(disp,
 					ScrollablePanel.NeverShowHorizontalScrollers);
 			this.addLast(sbp);
 			this.addLast(
@@ -818,16 +830,17 @@
 
 		// Subclassed HtmlDisplay with Pop-up menu
 		private class DispPanel extends HtmlDisplay {
-			MenuItem mnuPickupTB, mnuDropTB;
-			MenuItem[] TBMenuItems = new MenuItem[2];
-			Menu mnuPopup;
+			private final MenuItem mnuPickupTB, mnuDropTB;
+			private final MenuItem[] tbMenuItems = new MenuItem[2];
+			private final Menu mnuPopup;
 
 			DispPanel() {
-				TBMenuItems[0] = mnuPickupTB = new MenuItem(MyLocale.getMsg(
+				super();
+				tbMenuItems[0] = mnuPickupTB = new MenuItem(MyLocale.getMsg(
 						6016, "Pick up Travelbug"));
-				TBMenuItems[1] = mnuDropTB = new MenuItem(MyLocale.getMsg(6017,
+				tbMenuItems[1] = mnuDropTB = new MenuItem(MyLocale.getMsg(6017,
 						"Drop Travelbug"));
-				mnuPopup = new Menu(TBMenuItems, "");
+				mnuPopup = new Menu(tbMenuItems, "");
 			}
 
 			public void penRightReleased(Point p) {
@@ -843,23 +856,24 @@
 			}
 
 			public void popupMenuEvent(Object selectedItem) {
-				if (selectedItem == mnuPickupTB) {
-					Travelbug tb = TravelbugPickup.pickupTravelbug(thisCache.getCacheDetails(true).Travelbugs);
+				if (selectedItem.equals(mnuPickupTB)) {
+					final Travelbug tb = TravelbugPickup.pickupTravelbug(cache.getCacheDetails(true).Travelbugs);
+					TravelbugJourneyList tbjList;
 					if (tb != null) {
-						dirty_details = true;
+						dirtyDetails = true;
 						// Get the list of my travelbugs
 						tbjList = new TravelbugJourneyList();
 						tbjList.readTravelbugsFile();
 						// Add the tb to this list
 						tbjList.addTbPickup(tb, Global.getProfile().name,
-								thisCache.getWayPoint());
+								cache.getWayPoint());
 						tbjList.saveTravelbugsFile();
-						tbjList = null;
-						setHtml(thisCache.getCacheDetails(true).Travelbugs.toHtml());
+						setHtml(cache.getCacheDetails(true).Travelbugs.toHtml());
 						repaint();
-						thisCache.setHas_bugs(thisCache.getCacheDetails(true).Travelbugs.size() > 0);
+						cache.setHas_bugs(cache.getCacheDetails(true).Travelbugs.size() > 0);
 					}
-				} else if (selectedItem == mnuDropTB) {
+				} else if (selectedItem.equals(mnuDropTB)) {
+					TravelbugJourneyList tbjList;
 					tbjList = new TravelbugJourneyList();
 					tbjList.readTravelbugsFile();
 					TravelbugList tbl = tbjList.getMyTravelbugs();
@@ -868,28 +882,29 @@
 					tbs.execute();
 					if (tbs.selectedItem >= 0) {
 						Travelbug tb = tbl.getTB(tbs.selectedItem);
-						thisCache.getCacheDetails(true).Travelbugs.add(tb);
+						cache.getCacheDetails(true).Travelbugs.add(tb);
 						tbjList.addTbDrop(tb, Global.getProfile().name,
-								thisCache.getWayPoint());
+								cache.getWayPoint());
 					}
 					tbjList.saveTravelbugsFile();
-					tbjList = null;
-					thisCache.setHas_bugs(thisCache.getCacheDetails(true).Travelbugs.size() > 0);
-					setHtml(thisCache.getCacheDetails(true).Travelbugs.toHtml());
+					cache.setHas_bugs(cache.getCacheDetails(true).Travelbugs.size() > 0);
+					setHtml(cache.getCacheDetails(true).Travelbugs.toHtml());
 					repaint();
-					dirty_details = true;
-				} else
+					dirtyDetails = true;
+				} else {
 					super.popupMenuEvent(selectedItem);
+				}
 			}
 		}
 	}
 
 	private class TerrDiffForm extends Form {
-		private mChoice mcDT;
-		private mButton btnOk, btnCancel;
-		private String[] DT = new String[] { "1.0", "1.5", "2.0", "2.5", "3.0", "3.5", "4.0", "4.5", "5.0" };
+		private final mChoice mcDT;
+		private final mButton btnOk, btnCancel;
+		private final String[] DT = new String[] { "1.0", "1.5", "2.0", "2.5", "3.0", "3.5", "4.0", "4.5", "5.0" };
 
 		public TerrDiffForm(boolean terrain, int startVal) {
+			super();
 			mcDT = new mChoice(DT, (startVal > 0) ? (startVal - 10) / 5 : 0);
 			btnOk = new mButton(MyLocale.getMsg(1605, "OK"));
 			btnCancel = new mButton(MyLocale.getMsg(1604, "Cancel"));

Modified: trunk/src/CacheWolf/GuiImageBroker.java
===================================================================
--- trunk/src/CacheWolf/GuiImageBroker.java	2009-08-19 00:35:54 UTC (rev 2092)
+++ trunk/src/CacheWolf/GuiImageBroker.java	2009-08-19 20:09:23 UTC (rev 2093)
@@ -16,13 +16,16 @@
 
 	/** image to be displayed in case of error */
 	public static Image imageError = new Image("guiError.png");
+	
+	/** reference to this object */
+	private static GuiImageBroker ref;
 
 	/**
 	 * images to be displayed for cache types in GUI
 	 * @see getTypeImage
 	 * @see CacheTypes
 	 */
-	private static final Image[] typeImages = {
+	private static final Image[] TYPEIMAGES = {
 		new Image(CacheType.CW_GUIIMG_CUSTOM),		// 0
 		new Image(CacheType.CW_GUIIMG_APE),			// 1
 		new Image(CacheType.CW_GUIIMG_CITO),		// 2
@@ -48,48 +51,58 @@
 	};
 
 	// TODO: move size images here
-	private static final Image[] sizeImages = {
+//	private static final Image[] sizeImages = {
 //		new Image(CacheSize.CW_GUIIMG_NONPHYSICAL),
 //		new Image(CacheSize.CW_GUIIMG_MICRO),
 //		new Image(CacheSize.CW_GUIIMG_SMALL),
 //		new Image(CacheSize.CW_GUIIMG_NORMAL),
 //		new Image(CacheSize.CW_GUIIMG_LARGE),
 //		new Image(CacheSize.CW_GUIIMG_VERYLARGE)
-	};
+//	};
 
-	/** constructor does nothing */
-	private GuiImageBroker() { // no instantiation needed
+	/** thou shallst not instantiate this object */
+	private GuiImageBroker() { }
+	
+	/**
+	 * give a singleton reference to this object to whoever needs one. create one, if not done so already.
+	 * @return reference to CWWrapper
+	 */
+	public static synchronized GuiImageBroker getGuiImageBroker() {
+		if (ref == null) {
+			ref = new GuiImageBroker();
+		}
+		return ref;
 	}
 
 	/**
 	 * select image to be displayed for a given cache type
-	 * @param id internal cache type id
+	 * @param type internal cache type id
 	 * @return <code>Image</code> object to be displayed
 	 */
-	public static Image getTypeImage(byte id) {
-		switch (id) {
-		case CacheType.CW_TYPE_CUSTOM: return typeImages[0];
-		case CacheType.CW_TYPE_APE: return typeImages[1];
-		case CacheType.CW_TYPE_CITO: return typeImages[2];
-		case CacheType.CW_TYPE_DRIVE_IN: return typeImages[3];
-		case CacheType.CW_TYPE_EARTH: return typeImages[4];
-		case CacheType.CW_TYPE_EVENT: return typeImages[5];
-		case CacheType.CW_TYPE_FINAL: return typeImages[6];
-		case CacheType.CW_TYPE_LETTERBOX: return typeImages[7];
-		case CacheType.CW_TYPE_LOCATIONLESS: return typeImages[8];
-		case CacheType.CW_TYPE_MAZE: return typeImages[9];
-		case CacheType.CW_TYPE_MEGA_EVENT: return typeImages[10];
-		case CacheType.CW_TYPE_MULTI: return typeImages[11];
-		case CacheType.CW_TYPE_PARKING: return typeImages[12];
-		case CacheType.CW_TYPE_QUESTION: return typeImages[13];
-		case CacheType.CW_TYPE_REFERENCE: return typeImages[14];
-		case CacheType.CW_TYPE_STAGE: return typeImages[15];
-		case CacheType.CW_TYPE_TRADITIONAL: return typeImages[16];
-		case CacheType.CW_TYPE_TRAILHEAD: return typeImages[17];
-		case CacheType.CW_TYPE_UNKNOWN: return typeImages[18];
-		case CacheType.CW_TYPE_VIRTUAL: return typeImages[19];
-		case CacheType.CW_TYPE_WEBCAM: return typeImages[20];
-		case CacheType.CW_TYPE_WHEREIGO: return typeImages[21];
+	public static Image getTypeImage(final byte type) {
+		switch (type) {
+		case CacheType.CW_TYPE_CUSTOM: return TYPEIMAGES[0];
+		case CacheType.CW_TYPE_APE: return TYPEIMAGES[1];
+		case CacheType.CW_TYPE_CITO: return TYPEIMAGES[2];
+		case CacheType.CW_TYPE_DRIVE_IN: return TYPEIMAGES[3];
+		case CacheType.CW_TYPE_EARTH: return TYPEIMAGES[4];
+		case CacheType.CW_TYPE_EVENT: return TYPEIMAGES[5];
+		case CacheType.CW_TYPE_FINAL: return TYPEIMAGES[6];
+		case CacheType.CW_TYPE_LETTERBOX: return TYPEIMAGES[7];
+		case CacheType.CW_TYPE_LOCATIONLESS: return TYPEIMAGES[8];
+		case CacheType.CW_TYPE_MAZE: return TYPEIMAGES[9];
+		case CacheType.CW_TYPE_MEGA_EVENT: return TYPEIMAGES[10];
+		case CacheType.CW_TYPE_MULTI: return TYPEIMAGES[11];
+		case CacheType.CW_TYPE_PARKING: return TYPEIMAGES[12];
+		case CacheType.CW_TYPE_QUESTION: return TYPEIMAGES[13];
+		case CacheType.CW_TYPE_REFERENCE: return TYPEIMAGES[14];
+		case CacheType.CW_TYPE_STAGE: return TYPEIMAGES[15];
+		case CacheType.CW_TYPE_TRADITIONAL: return TYPEIMAGES[16];
+		case CacheType.CW_TYPE_TRAILHEAD: return TYPEIMAGES[17];
+		case CacheType.CW_TYPE_UNKNOWN: return TYPEIMAGES[18];
+		case CacheType.CW_TYPE_VIRTUAL: return TYPEIMAGES[19];
+		case CacheType.CW_TYPE_WEBCAM: return TYPEIMAGES[20];
+		case CacheType.CW_TYPE_WHEREIGO: return TYPEIMAGES[21];
 		default: return imageError;
 		}
 	}
@@ -103,24 +116,23 @@
 	 * replaced by the image in x.png.
 	 * Images are NOT checked for size etc.
 	 */
-	public static void customizedSymbols()
-	{
-		FileBugfix dir=new FileBugfix(FileBase.getProgramDirectory()+"/symbols");
+	public static void customizedSymbols() {
+		final FileBugfix dir = new FileBugfix(FileBase.getProgramDirectory()+"/symbols");
 		if (dir.isDirectory()){
-			int id;
+			int type;
 			String name = "";
 			String [] pngFiles;
 			pngFiles=dir.list("*.png",0);
-			for (int i=0; i<pngFiles.length; i++) {
+			for (int i=0; i < pngFiles.length; i++) {
 				name = pngFiles[i].substring(0,pngFiles[i].length()-4);
 				try {
-					id = Integer.parseInt (name);
+					type = Integer.parseInt(name);
 				}
 				catch (Exception E){
-					id = -1; //filename invalid for symbols
+					type = -1; //filename invalid for symbols
 				}
-				if (0<=id && id<=typeImages.length){
-					typeImages[id]= new Image(FileBase.getProgramDirectory()+"/symbols/"+pngFiles[i]);
+				if (0<=type && type<=TYPEIMAGES.length){
+					TYPEIMAGES[type] = new Image(FileBase.getProgramDirectory()+"/symbols/"+pngFiles[i]);
 				}
 			}
 		}

Modified: trunk/src/CacheWolf/MainTab.java
===================================================================
--- trunk/src/CacheWolf/MainTab.java	2009-08-19 00:35:54 UTC (rev 2092)
+++ trunk/src/CacheWolf/MainTab.java	2009-08-19 20:09:23 UTC (rev 2093)
@@ -156,11 +156,11 @@
 			// Update chD with Details
 			if(detP.isDirty()) {
 				cacheDirty=true;
-				boolean needTableUpdate = detP.needsTableUpdate();
+				boolean needTableUpdate = detP.getNeedsTableUpdate();
 				detP.saveDirtyWaypoint();
 				if (needTableUpdate) {
 					tbP.myMod.updateRows();// This sorts the waypoint (if it is new) into the right position
-					tbP.selectRow(profile.getCacheIndex(detP.thisCache.getWayPoint()));
+					tbP.selectRow(profile.getCacheIndex(detP.cache.getWayPoint()));
 				}
 				//was tbP.refreshTable();
 				tbP.tc.update(true); // Update and repaint
@@ -202,11 +202,13 @@
 			}
 			break;
 		case 1:  // DetailsPanel
+			boolean newCache = false;
 			if (chD==null) { // Empty DB - show a dummy detail
-				newWaypoint(ch=new CacheHolder()); 
+				newWaypoint(ch=new CacheHolder());
+				newCache = true;
 			}
 			MyLocale.setSIPOff();
-			detP.setDetails(ch);
+			detP.setDetails(ch, newCache);
 			break;
 		case 2: // Description Panel
 			MyLocale.setSIPOff();
@@ -321,11 +323,10 @@
 		cacheDB.add(pCh);
 		Global.getProfile().notifyUnsavedChanges(true); // Just to be sure 
 		tbP.myMod.numRows++;
-		detP.setDetails(pCh);
+		detP.setDetails(pCh, true);
 		oldCard=1;
 		if (this.cardPanel.selectedItem != 1) select(detP);
 		solverP.setInstructions(pCh);
-		detP.setNeedsTableUpdate(true);
 		//tbP.refreshTable(); // moved this instruction to onLeavingPanel
 
 	}



From greiol at mail.berlios.de  Fri Aug 21 22:39:04 2009
From: greiol at mail.berlios.de (greiol at BerliOS)
Date: Fri, 21 Aug 2009 22:39:04 +0200
Subject: [Cachewolf-svn] r2094 - in trunk: . src src/CacheWolf
	src/CacheWolf/exp src/CacheWolf/imp src/CacheWolf/navi
	src/CacheWolf/utils
Message-ID: <200908212039.n7LKd4HC030485@sheep.berlios.de>

Author: greiol
Date: 2009-08-21 22:39:00 +0200 (Fri, 21 Aug 2009)
New Revision: 2094

Added:
   trunk/src/CacheWolf/exp/
   trunk/src/CacheWolf/utils/
Removed:
   trunk/src/exp/
   trunk/src/utils/
Modified:
   trunk/
   trunk/build.xml
   trunk/buildexe.sh
   trunk/compile.bat
   trunk/compile.sh
   trunk/cw-pc.jnf
   trunk/cw-pda.jnf
   trunk/fwrtsnapshot.sh
   trunk/src/CacheWolf/CacheDB.java
   trunk/src/CacheWolf/CacheHolderDetail.java
   trunk/src/CacheWolf/CacheImages.java
   trunk/src/CacheWolf/Common.java
   trunk/src/CacheWolf/DataMover.java
   trunk/src/CacheWolf/GuiImageBroker.java
   trunk/src/CacheWolf/ImagePanel.java
   trunk/src/CacheWolf/Legacy.java
   trunk/src/CacheWolf/MainMenu.java
   trunk/src/CacheWolf/MyLocale.java
   trunk/src/CacheWolf/NewProfileForm.java
   trunk/src/CacheWolf/Preferences.java
   trunk/src/CacheWolf/PreferencesScreen.java
   trunk/src/CacheWolf/ProfilesForm.java
   trunk/src/CacheWolf/Rebuild.java
   trunk/src/CacheWolf/ShowCacheInBrowser.java
   trunk/src/CacheWolf/TravelbugJourneyScreen.java
   trunk/src/CacheWolf/exp/ASCExporter.java
   trunk/src/CacheWolf/exp/DistanceComparer.java
   trunk/src/CacheWolf/exp/ExploristExporter.java
   trunk/src/CacheWolf/exp/Exporter.java
   trunk/src/CacheWolf/exp/GPXExporter.java
   trunk/src/CacheWolf/exp/GarminMap.java
   trunk/src/CacheWolf/exp/GpxExportNg.java
   trunk/src/CacheWolf/exp/HTMLExporter.java
   trunk/src/CacheWolf/exp/KMLExporter.java
   trunk/src/CacheWolf/exp/LocExporter.java
   trunk/src/CacheWolf/exp/MSARCSVExporter.java
   trunk/src/CacheWolf/exp/OVLExporter.java
   trunk/src/CacheWolf/exp/OziExporter.java
   trunk/src/CacheWolf/exp/TPLExporter.java
   trunk/src/CacheWolf/exp/TomTomExporter.java
   trunk/src/CacheWolf/exp/TomTomExporterScreen.java
   trunk/src/CacheWolf/imp/OCXMLImporter.java
   trunk/src/CacheWolf/imp/Rating.java
   trunk/src/CacheWolf/myTableControl.java
   trunk/src/CacheWolf/navi/MapInfoObject.java
   trunk/src/CacheWolf/navi/MapLoader.java
   trunk/src/CacheWolf/navi/MapsList.java
   trunk/src/CacheWolf/navi/SelectMap.java
   trunk/src/CacheWolf/utils/CWWrapper.java
   trunk/src/CacheWolf/utils/FileBugfix.java
   trunk/src/CacheWolf/utils/MessageBoxFixed.java
   trunk/src/CacheWolf/utils/MutableInteger.java
Log:
- moved exp and utils to CacheWolf package hierarchy (we should rename that to cachewolf at the next oppotunity)
- adjusted build tools to new directories
- ignore work directory in svn


Property changes on: trunk
___________________________________________________________________
Name: svn:ignore
   - published
.project
.settings

   + published
.project
.settings
work


Modified: trunk/build.xml
===================================================================
--- trunk/build.xml	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/build.xml	2009-08-21 20:39:00 UTC (rev 2094)
@@ -228,7 +228,7 @@
 
 	<target name="compile" depends="fixreleasenumber" description="compile sources with java">
 		<mkdir dir="${classes.dir}" />
-		<javac source="1.3" target="1.1" encoding="windows-1252" classpath="./lib/CompileEwe.zip:./lib/" destdir="${classes.dir}" deprecation="off" nowarn="on" srcdir="src" includes="CacheWolf/*.java,CacheWolf/*/*.java,exp/*.java,utils/*.java" />
+		<javac source="1.3" target="1.1" encoding="windows-1252" classpath="./lib/CompileEwe.zip:./lib/" destdir="${classes.dir}" deprecation="off" nowarn="on" srcdir="src" includes="CacheWolf/*.java,CacheWolf/*/*.java" />
 
 	</target>
 

Modified: trunk/buildexe.sh
===================================================================
--- trunk/buildexe.sh	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/buildexe.sh	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
 #!/bin/sh
-java -cp lib/ewe.jar Ewe programs/Jewel.ewe -c cw-pda.jnf
-java -cp lib/ewe.jar Ewe programs/Jewel.ewe -c cw-pc.jnf
+programs/ewecl programs/Jewel.ewe -c cw-pda.jnf
+programs/ewecl programs/Jewel.ewe -c cw-pc.jnf
 # Dont change the order above because the PC version has to overwrite the PDA version of the EWE-file

Modified: trunk/compile.bat
===================================================================
--- trunk/compile.bat	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/compile.bat	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
 if not exist bin\CacheWolf mkdir bin\CacheWolf
 if not exist bin\exp mkdir bin\exp
-javac -source 1.3 -target 1.1 -classpath ./lib/CompileEwe.zip;./lib/  -d ./bin/ -deprecation ./src/CacheWolf/*.java ./src/CacheWolf/imp/*.java ./src/CacheWolf/navi/*.java ./src/exp/*.java ./src/utils/*.java
-pause
\ No newline at end of file
+javac -source 1.3 -target 1.1 -classpath ./lib/CompileEwe.zip;./lib/  -d ./bin/ -deprecation ./src/CacheWolf/*.java ./src/CacheWolf/imp/*.java ./src/CacheWolf/navi/*.java ./src/CacheWolf/exp/*.java ./src/CacheWolf/utils/*.java
+pause

Modified: trunk/compile.sh
===================================================================
--- trunk/compile.sh	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/compile.sh	2009-08-21 20:39:00 UTC (rev 2094)
@@ -11,6 +11,4 @@
 	-deprecation \
 	-nowarn \
 	./src/CacheWolf/*.java \
-	./src/CacheWolf/*/*.java \
-	./src/exp/*.java \
-	./src/utils/*.java
+	./src/CacheWolf/*/*.java 

Modified: trunk/cw-pc.jnf
===================================================================
--- trunk/cw-pc.jnf	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/cw-pc.jnf	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1 +1 @@
-command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DJar%25252B-%25252BJava%25252B1.2%252526%25253Dx86%25252B-%25252BWin32%25252B-%25252BStatic%25252BLinked&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/exp%252526mask%25253D*.class%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253Dexp/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico!
 %252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/utils%252526mask%25253D*.class%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253Dutils/%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/Cach!
 eWolf.ico
+command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DJar%25252B-%25252BJava%25252B1.2%252526%25253Dx86%25252B-%25252BWin32%25252B-%25252BStatic%25252BLinked&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526i!
 ncludeSubdirectories%25253Dtrue%252526pathInEwe%25253D%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico

Modified: trunk/cw-pda.jnf
===================================================================
--- trunk/cw-pda.jnf	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/cw-pda.jnf	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1 +1 @@
-command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D/Xmx%2B12M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DPocketPC%25252B2003%252526%25253DPocketPC%25252B-%25252BARM/XScale%252526%25253DPocketPC%25252B-%25252BMIPS%252526%25253DPocketPC%25252B-%25252BSH3&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/exp%252526mask%25253D*.class%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253Dexp/%2526ewesoft/apps/jewel/EweDirEntry%253Dp!
 ath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/utils%252526mask%25253D*.class%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253Dutils/%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D/Xmx%252B12M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3D!
 false%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/!
 CacheWol
f.ico
+command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D/Xmx%2B12M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DPocketPC%25252B2003%252526%25253DPocketPC%25252B-%25252BARM/XScale%252526%25253DPocketPC%25252B-%25252BMIPS%252526%25253DPocketPC%25252B-%25252BSH3&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEnt!
 ry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D/Xmx%252B12M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico

Modified: trunk/fwrtsnapshot.sh
===================================================================
--- trunk/fwrtsnapshot.sh	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/fwrtsnapshot.sh	2009-08-21 20:39:00 UTC (rev 2094)
@@ -19,7 +19,7 @@
 mkdir -p bin/CacheWolf
 javac -source 1.3 -target 1.1 -encoding windows-1252 \
     -cp lib/CompileEwe.zip:lib -d bin -deprecation -nowarn \
-    src/CacheWolf/*.java src/CacheWolf/*/*.java src/exp/*.java src/utils/*.java
+    src/CacheWolf/*.java src/CacheWolf/*/*.java 
 $EWE programs/Jewel.ewe -c cw-pda.jnf
 $EWE programs/Jewel.ewe -c cw-pc.jnf
 # Don?t change the order of the above Jewel commands because

Modified: trunk/src/CacheWolf/CacheDB.java
===================================================================
--- trunk/src/CacheWolf/CacheDB.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/CacheDB.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,6 +1,6 @@
 package CacheWolf;
 
-import utils.MutableInteger;
+import CacheWolf.utils.MutableInteger;
 import ewe.util.Comparer;
 import ewe.util.Hashtable;
 import ewe.util.Iterator;

Modified: trunk/src/CacheWolf/CacheHolderDetail.java
===================================================================
--- trunk/src/CacheWolf/CacheHolderDetail.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/CacheHolderDetail.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,6 +1,6 @@
 package CacheWolf;
 
-import utils.FileBugfix;
+import CacheWolf.utils.FileBugfix;
 import ewe.filechooser.FileChooser;
 import ewe.filechooser.FileChooserBase;
 import ewe.io.BufferedWriter;

Modified: trunk/src/CacheWolf/CacheImages.java
===================================================================
--- trunk/src/CacheWolf/CacheImages.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/CacheImages.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -3,7 +3,7 @@
  */
 package CacheWolf;
 
-import utils.FileBugfix;
+import CacheWolf.utils.FileBugfix;
 import ewe.io.File;
 import ewe.util.Vector;
 

Modified: trunk/src/CacheWolf/Common.java
===================================================================
--- trunk/src/CacheWolf/Common.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/Common.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,6 +1,6 @@
 package CacheWolf;
 
-import utils.FileBugfix;
+import CacheWolf.utils.FileBugfix;
 import ewe.io.File;
 import ewe.sys.Convert;
 

Modified: trunk/src/CacheWolf/DataMover.java
===================================================================
--- trunk/src/CacheWolf/DataMover.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/DataMover.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,6 +1,6 @@
 package CacheWolf;
 
-import utils.FileBugfix;
+import CacheWolf.utils.FileBugfix;
 import ewe.filechooser.FileChooser;
 import ewe.filechooser.FileChooserBase;
 import ewe.io.*;

Modified: trunk/src/CacheWolf/GuiImageBroker.java
===================================================================
--- trunk/src/CacheWolf/GuiImageBroker.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/GuiImageBroker.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,8 +1,8 @@
 package CacheWolf;
 
+import CacheWolf.utils.FileBugfix;
 import ewe.fx.Image;
 import ewe.io.FileBase;
-import utils.FileBugfix;
 
 /**
  * hold preloaded versions of GUI images in a single place

Modified: trunk/src/CacheWolf/ImagePanel.java
===================================================================
--- trunk/src/CacheWolf/ImagePanel.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/ImagePanel.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,5 +1,5 @@
 package CacheWolf;
-import utils.FileBugfix;
+import CacheWolf.utils.FileBugfix;
 import ewe.graphics.*;
 import ewe.sys.*;
 import ewe.fx.*;

Modified: trunk/src/CacheWolf/Legacy.java
===================================================================
--- trunk/src/CacheWolf/Legacy.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/Legacy.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -3,7 +3,7 @@
  */
 package CacheWolf;
 
-import utils.MutableInteger;
+import CacheWolf.utils.MutableInteger;
 
 /**
  * Utility class for converting data from old version files to current version files. This class

Modified: trunk/src/CacheWolf/MainMenu.java
===================================================================
--- trunk/src/CacheWolf/MainMenu.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/MainMenu.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,5 +1,17 @@
 package CacheWolf;
 
+import CacheWolf.exp.ASCExporter;
+import CacheWolf.exp.ExploristExporter;
+import CacheWolf.exp.GPXExporter;
+import CacheWolf.exp.GpxExportNg;
+import CacheWolf.exp.HTMLExporter;
+import CacheWolf.exp.KMLExporter;
+import CacheWolf.exp.LocExporter;
+import CacheWolf.exp.MSARCSVExporter;
+import CacheWolf.exp.OVLExporter;
+import CacheWolf.exp.OziExporter;
+import CacheWolf.exp.TPLExporter;
+import CacheWolf.exp.TomTomExporter;
 import CacheWolf.imp.GPXImporter;
 import CacheWolf.imp.LOCXMLImporter;
 import CacheWolf.imp.OCXMLImporter;
@@ -29,18 +41,6 @@
 import ewe.ui.PullDownMenu;
 import ewe.ui.mApp;
 import ewe.util.Vector;
-import exp.ASCExporter;
-import exp.ExploristExporter;
-import exp.GPXExporter;
-import exp.GpxExportNg;
-import exp.HTMLExporter;
-import exp.KMLExporter;
-import exp.LocExporter;
-import exp.MSARCSVExporter;
-import exp.OVLExporter;
-import exp.OziExporter;
-import exp.TPLExporter;
-import exp.TomTomExporter;
 
 /**
  *	This class creates the menu for cachewolf. It is also responsible

Modified: trunk/src/CacheWolf/MyLocale.java
===================================================================
--- trunk/src/CacheWolf/MyLocale.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/MyLocale.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -4,7 +4,7 @@
  * 
  */
 
-import utils.FileBugfix;
+import CacheWolf.utils.FileBugfix;
 import ewe.fx.Rect;
 import ewe.io.File;
 import ewe.io.FileBase;

Modified: trunk/src/CacheWolf/NewProfileForm.java
===================================================================
--- trunk/src/CacheWolf/NewProfileForm.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/NewProfileForm.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,6 +1,6 @@
 package CacheWolf;
 
-import utils.FileBugfix;
+import CacheWolf.utils.FileBugfix;
 import ewe.io.File;
 import ewe.ui.*;
 

Modified: trunk/src/CacheWolf/Preferences.java
===================================================================
--- trunk/src/CacheWolf/Preferences.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/Preferences.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -2,7 +2,7 @@
 
 import CacheWolf.imp.SpiderGC;
 import CacheWolf.navi.Metrics;
-import utils.FileBugfix;
+import CacheWolf.utils.FileBugfix;
 import ewe.io.*;
 import ewe.sys.*;
 import ewe.ui.*;

Modified: trunk/src/CacheWolf/PreferencesScreen.java
===================================================================
--- trunk/src/CacheWolf/PreferencesScreen.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/PreferencesScreen.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -2,7 +2,7 @@
 
 import CacheWolf.imp.SpiderGC;
 import CacheWolf.navi.Metrics;
-import utils.FileBugfix;
+import CacheWolf.utils.FileBugfix;
 import ewe.ui.*;
 import ewe.io.*;
 import ewe.fx.*;

Modified: trunk/src/CacheWolf/ProfilesForm.java
===================================================================
--- trunk/src/CacheWolf/ProfilesForm.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/ProfilesForm.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,6 +1,6 @@
 package CacheWolf;
 
-import utils.FileBugfix;
+import CacheWolf.utils.FileBugfix;
 import ewe.ui.*;
 import ewe.io.*;
 import ewe.fx.*;

Modified: trunk/src/CacheWolf/Rebuild.java
===================================================================
--- trunk/src/CacheWolf/Rebuild.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/Rebuild.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,11 +1,11 @@
 package CacheWolf;
 
+import CacheWolf.utils.FileBugfix;
 import ewe.io.FileReader;
 import ewe.sys.Handle;
 import ewe.ui.FormBase;
 import ewe.ui.MessageBox;
 import ewe.ui.ProgressBarForm;
-import utils.FileBugfix;
 
 public class Rebuild {
 	String [] xmlFiles;

Modified: trunk/src/CacheWolf/ShowCacheInBrowser.java
===================================================================
--- trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,5 +1,4 @@
 package CacheWolf;
-import utils.CWWrapper;
 
 import com.stevesoft.ewe_pat.Regex;
 
@@ -12,6 +11,7 @@
 import ewe.ui.FormBase;
 import ewe.ui.MessageBox;
 import ewe.util.*;
+import CacheWolf.utils.CWWrapper;
 import HTML.Template;
 
 

Modified: trunk/src/CacheWolf/TravelbugJourneyScreen.java
===================================================================
--- trunk/src/CacheWolf/TravelbugJourneyScreen.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/TravelbugJourneyScreen.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -12,7 +12,7 @@
  */
 
 import CacheWolf.imp.SpiderGC;
-import utils.CWWrapper;
+import CacheWolf.utils.CWWrapper;
 import ewe.sys.Convert;
 import ewe.sys.Time;
 import ewe.sys.Vm;

Copied: trunk/src/CacheWolf/exp (from rev 2093, trunk/src/exp)


Property changes on: trunk/src/CacheWolf/exp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Modified: trunk/src/CacheWolf/exp/ASCExporter.java
===================================================================
--- trunk/src/exp/ASCExporter.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/exp/ASCExporter.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
-package exp;
+package CacheWolf.exp;
 import CacheWolf.*;
 
 /**

Modified: trunk/src/CacheWolf/exp/DistanceComparer.java
===================================================================
--- trunk/src/exp/DistanceComparer.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/exp/DistanceComparer.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
-package exp;
+package CacheWolf.exp;
 
 import CacheWolf.CWPoint;
 import CacheWolf.CacheHolder;

Modified: trunk/src/CacheWolf/exp/ExploristExporter.java
===================================================================
--- trunk/src/exp/ExploristExporter.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/exp/ExploristExporter.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
-package exp;
+package CacheWolf.exp;
 
 import CacheWolf.*;
 import ewe.sys.*;

Modified: trunk/src/CacheWolf/exp/Exporter.java
===================================================================
--- trunk/src/exp/Exporter.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/exp/Exporter.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
-package exp;
+package CacheWolf.exp;
 
 import CacheWolf.*;
 import ewe.sys.*;

Modified: trunk/src/CacheWolf/exp/GPXExporter.java
===================================================================
--- trunk/src/exp/GPXExporter.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/exp/GPXExporter.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
-package exp;
+package CacheWolf.exp;
 import ewe.sys.*;
 import ewe.io.FileBase;
 import CacheWolf.*;

Modified: trunk/src/CacheWolf/exp/GarminMap.java
===================================================================
--- trunk/src/exp/GarminMap.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/exp/GarminMap.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
-package exp;
+package CacheWolf.exp;
 
 import CacheWolf.CacheHolder;
 import CacheWolf.CacheSize;

Modified: trunk/src/CacheWolf/exp/GpxExportNg.java
===================================================================
--- trunk/src/exp/GpxExportNg.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/exp/GpxExportNg.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,6 +1,5 @@
-package exp;
+package CacheWolf.exp;
 
-import utils.FileBugfix;
 import CacheWolf.CWPoint;
 import CacheWolf.CacheHolder;
 import CacheWolf.CacheSize;
@@ -12,6 +11,7 @@
 import CacheWolf.LogList;
 import CacheWolf.MyLocale;
 import CacheWolf.SafeXML;
+import CacheWolf.utils.FileBugfix;
 
 import com.stevesoft.ewe_pat.Regex;
 import com.stevesoft.ewe_pat.Transformer;

Modified: trunk/src/CacheWolf/exp/HTMLExporter.java
===================================================================
--- trunk/src/exp/HTMLExporter.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/exp/HTMLExporter.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
-package exp;
+package CacheWolf.exp;
 import com.stevesoft.ewe_pat.Regex;
 
 import CacheWolf.*;

Modified: trunk/src/CacheWolf/exp/KMLExporter.java
===================================================================
--- trunk/src/exp/KMLExporter.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/exp/KMLExporter.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
-package exp;
+package CacheWolf.exp;
 
 import CacheWolf.CWPoint;
 import CacheWolf.CacheHolder;

Modified: trunk/src/CacheWolf/exp/LocExporter.java
===================================================================
--- trunk/src/exp/LocExporter.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/exp/LocExporter.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
-package exp;
+package CacheWolf.exp;
 import CacheWolf.*;
 import ewe.io.File;
 import ewe.io.FileBase;

Modified: trunk/src/CacheWolf/exp/MSARCSVExporter.java
===================================================================
--- trunk/src/exp/MSARCSVExporter.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/exp/MSARCSVExporter.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
-package exp;
+package CacheWolf.exp;
 
 import CacheWolf.*;
 

Modified: trunk/src/CacheWolf/exp/OVLExporter.java
===================================================================
--- trunk/src/exp/OVLExporter.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/exp/OVLExporter.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
-package exp;
+package CacheWolf.exp;
 import CacheWolf.*;
 import ewe.sys.*;
 

Modified: trunk/src/CacheWolf/exp/OziExporter.java
===================================================================
--- trunk/src/exp/OziExporter.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/exp/OziExporter.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
-package exp;
+package CacheWolf.exp;
 import ewe.io.File;
 import ewe.io.FileBase;
 import CacheWolf.*;

Modified: trunk/src/CacheWolf/exp/TPLExporter.java
===================================================================
--- trunk/src/exp/TPLExporter.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/exp/TPLExporter.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -23,7 +23,7 @@
     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
     */
 
-package exp;
+package CacheWolf.exp;
 
 import CacheWolf.CWPoint;
 import CacheWolf.CacheDB;

Modified: trunk/src/CacheWolf/exp/TomTomExporter.java
===================================================================
--- trunk/src/exp/TomTomExporter.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/exp/TomTomExporter.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
-package exp;
+package CacheWolf.exp;
 
 import CacheWolf.*;
 import ewe.ui.*;

Modified: trunk/src/CacheWolf/exp/TomTomExporterScreen.java
===================================================================
--- trunk/src/exp/TomTomExporterScreen.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/exp/TomTomExporterScreen.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
-package exp;
+package CacheWolf.exp;
 
 import CacheWolf.MyLocale;
 import ewe.ui.*;

Modified: trunk/src/CacheWolf/imp/OCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/OCXMLImporter.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/imp/OCXMLImporter.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,6 +1,5 @@
 package CacheWolf.imp;
 
-import utils.FileBugfix;
 
 import CacheWolf.CWPoint;
 import CacheWolf.CacheDB;
@@ -17,6 +16,7 @@
 import CacheWolf.Profile;
 import CacheWolf.SafeXML;
 import CacheWolf.UrlFetcher;
+import CacheWolf.utils.FileBugfix;
 
 import com.stevesoft.ewe_pat.Regex;
 

Modified: trunk/src/CacheWolf/imp/Rating.java
===================================================================
--- trunk/src/CacheWolf/imp/Rating.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/imp/Rating.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,9 +1,9 @@
 package CacheWolf.imp;
 
-import utils.CWWrapper;
 import CacheWolf.CacheHolder;
 import CacheWolf.CacheType;
 import CacheWolf.Global;
+import CacheWolf.utils.CWWrapper;
 import ewe.sys.Handle;
 import ewe.ui.ProgressBarForm;
 

Modified: trunk/src/CacheWolf/myTableControl.java
===================================================================
--- trunk/src/CacheWolf/myTableControl.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/myTableControl.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,6 +1,6 @@
 package CacheWolf;
 
-import utils.CWWrapper;
+import CacheWolf.utils.CWWrapper;
 import ewe.sys.*;
 import ewe.ui.*;
 import ewe.fx.*;

Modified: trunk/src/CacheWolf/navi/MapInfoObject.java
===================================================================
--- trunk/src/CacheWolf/navi/MapInfoObject.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/navi/MapInfoObject.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -4,6 +4,7 @@
 import CacheWolf.Common;
 import CacheWolf.Matrix;
 import CacheWolf.MyLocale;
+import CacheWolf.utils.FileBugfix;
 import ewe.fx.Point;
 import ewe.io.BufferedWriter;
 import ewe.io.FileInputStream;
@@ -15,7 +16,6 @@
 import ewe.sys.*;
 import java.lang.Math;
 
-import utils.FileBugfix;
 
 /**
  * class to read, save and do the calculations for calibrated and 

Modified: trunk/src/CacheWolf/navi/MapLoader.java
===================================================================
--- trunk/src/CacheWolf/navi/MapLoader.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/navi/MapLoader.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -7,6 +7,7 @@
 import CacheWolf.InfoBox;
 import CacheWolf.MyLocale;
 import CacheWolf.STRreplace;
+import CacheWolf.utils.FileBugfix;
 import ewe.ui.*;
 import ewe.io.*;
 import ewe.fx.*;
@@ -15,7 +16,6 @@
 import ewe.net.*;
 import java.lang.Math;
 
-import utils.FileBugfix;
 
 /**
  *

Modified: trunk/src/CacheWolf/navi/MapsList.java
===================================================================
--- trunk/src/CacheWolf/navi/MapsList.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/navi/MapsList.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -5,7 +5,7 @@
 import CacheWolf.Global;
 import CacheWolf.InfoBox;
 import CacheWolf.MyLocale;
-import utils.FileBugfix;
+import CacheWolf.utils.FileBugfix;
 import ewe.io.File;
 import ewe.io.FileBase;
 import ewe.io.IOException;

Modified: trunk/src/CacheWolf/navi/SelectMap.java
===================================================================
--- trunk/src/CacheWolf/navi/SelectMap.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/navi/SelectMap.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -3,7 +3,7 @@
 import CacheWolf.Global;
 import CacheWolf.InfoBox;
 import CacheWolf.MyLocale;
-import utils.FileBugfix;
+import CacheWolf.utils.FileBugfix;
 import ewe.io.*;
 import ewe.ui.*;
 

Copied: trunk/src/CacheWolf/utils (from rev 2093, trunk/src/utils)


Property changes on: trunk/src/CacheWolf/utils
___________________________________________________________________
Name: svn:mergeinfo
   + 

Modified: trunk/src/CacheWolf/utils/CWWrapper.java
===================================================================
--- trunk/src/utils/CWWrapper.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/utils/CWWrapper.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
-package utils;
+package CacheWolf.utils;
 
 import ewe.sys.Vm;
 

Modified: trunk/src/CacheWolf/utils/FileBugfix.java
===================================================================
--- trunk/src/utils/FileBugfix.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/utils/FileBugfix.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,7 +1,7 @@
 /**
  * 
  */
-package utils;
+package CacheWolf.utils;
 
 import CacheWolf.STRreplace;
 import ewe.io.*;

Modified: trunk/src/CacheWolf/utils/MessageBoxFixed.java
===================================================================
--- trunk/src/utils/MessageBoxFixed.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/utils/MessageBoxFixed.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,6 +1,6 @@
 /* $Id$ */
 
-package utils;
+package CacheWolf.utils;
 
 import ewe.sys.mThread;
 import ewe.ui.MessageBox;

Modified: trunk/src/CacheWolf/utils/MutableInteger.java
===================================================================
--- trunk/src/utils/MutableInteger.java	2009-08-19 20:09:23 UTC (rev 2093)
+++ trunk/src/CacheWolf/utils/MutableInteger.java	2009-08-21 20:39:00 UTC (rev 2094)
@@ -1,4 +1,4 @@
-package utils;
+package CacheWolf.utils;
 
 import ewe.util.Intable;
 



From engywuck at mail.berlios.de  Sat Aug 22 12:34:22 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Sat, 22 Aug 2009 12:34:22 +0200
Subject: [Cachewolf-svn] r2095 - trunk/src/CacheWolf
Message-ID: <200908221034.n7MAYM2b012992@sheep.berlios.de>

Author: engywuck
Date: 2009-08-22 12:34:19 +0200 (Sat, 22 Aug 2009)
New Revision: 2095

Modified:
   trunk/src/CacheWolf/ImagePanel.java
Log:
Computing correct number of image rows in the image panel.

Modified: trunk/src/CacheWolf/ImagePanel.java
===================================================================
--- trunk/src/CacheWolf/ImagePanel.java	2009-08-21 20:39:00 UTC (rev 2094)
+++ trunk/src/CacheWolf/ImagePanel.java	2009-08-22 10:34:19 UTC (rev 2095)
@@ -53,12 +53,12 @@
 			int rowCounter1 = 0;
 			if (cache.images.getDisplayImages(cache.getParent().getWayPoint()).size()>0) {
 				rowCounter1 = cache.images.getDisplayImages(cache.getParent().getWayPoint()).size();
-				rowCounter1 = (rowCounter1/3)+1;
+				rowCounter1 = (int) java.lang.Math.ceil(rowCounter1/3);
 			}
 			int rowCounter2 = 0;
 			if (cache.userImages.size()>0){
 				rowCounter2 = cache.userImages.size();
-				rowCounter2 = (rowCounter2/3)+1;
+				rowCounter2 = (int) java.lang.Math.ceil(rowCounter2/3);
 			}
 			int rowCounter = rowCounter1 + rowCounter2;
 			Rect r = new Rect(0, 0, pref.myAppWidth, rowCounter*thumb_size+rowCounter*padding+padding);



From engywuck at mail.berlios.de  Sat Aug 22 12:59:45 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Sat, 22 Aug 2009 12:59:45 +0200
Subject: [Cachewolf-svn] r2096 - in trunk/src/CacheWolf: . exp imp navi utils
Message-ID: <200908221059.n7MAxjD8008607@sheep.berlios.de>

Author: engywuck
Date: 2009-08-22 12:59:32 +0200 (Sat, 22 Aug 2009)
New Revision: 2096

Modified:
   trunk/src/CacheWolf/CacheSize.java
   trunk/src/CacheWolf/CacheTerrDiff.java
   trunk/src/CacheWolf/CacheType.java
   trunk/src/CacheWolf/DetailsPanel.java
   trunk/src/CacheWolf/GuiImageBroker.java
   trunk/src/CacheWolf/MyLocale.java
   trunk/src/CacheWolf/Parser.java
   trunk/src/CacheWolf/exp/GpxExportNg.java
   trunk/src/CacheWolf/exp/LocExporter.java
   trunk/src/CacheWolf/imp/Rating.java
   trunk/src/CacheWolf/imp/SpiderGC.java
   trunk/src/CacheWolf/navi/LambertProjection.java
   trunk/src/CacheWolf/navi/MapLoader.java
   trunk/src/CacheWolf/navi/TransformCoordinates.java
   trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java
   trunk/src/CacheWolf/utils/CWWrapper.java
Log:
Removing compiler warnings and unnecessary code.

Modified: trunk/src/CacheWolf/CacheSize.java
===================================================================
--- trunk/src/CacheWolf/CacheSize.java	2009-08-22 10:34:19 UTC (rev 2095)
+++ trunk/src/CacheWolf/CacheSize.java	2009-08-22 10:59:32 UTC (rev 2096)
@@ -114,23 +114,11 @@
 			| CW_FILTER_SMALL | CW_FILTER_NORMAL | CW_FILTER_LARGE
 			| CW_FILTER_NONPHYSICAL | CW_FILTER_VERYLARGE;
 	
-	/** reference to singleton CacheSize object */
-	private static CacheSize ref;
-
 	/** thou shallst not instantiate this object */
-	private CacheSize() { }
-	
-	/**
-	 * give a singleton reference to this object to whoever needs one. create one, if not done so already.
-	 * @return reference to CacheSize object
-	 */
-	public static synchronized CacheSize getCacheSize() {
-		if (ref == null) {
-			ref = new CacheSize();
-		}
-		return ref;
+	private CacheSize() { // Nothing to do
 	}
 
+	
 	/**
 	 * map filenames of images for the different sizes to the ids used array
 	 * index for sizePics[] in TableModel
@@ -368,8 +356,6 @@
 			return CW_SIZE_VERYLARGE;
 		} else if (v1Size.equals("")) {
 			return CW_SIZE_NOTCHOSEN;
-		} else if (v1Size == null) {
-			return CW_SIZE_NOTCHOSEN;
 		} else {
 			throw (new IllegalArgumentException("unmatched argument " + v1Size + " in v1Converter()"));
 		}

Modified: trunk/src/CacheWolf/CacheTerrDiff.java
===================================================================
--- trunk/src/CacheWolf/CacheTerrDiff.java	2009-08-22 10:34:19 UTC (rev 2095)
+++ trunk/src/CacheWolf/CacheTerrDiff.java	2009-08-22 10:59:32 UTC (rev 2096)
@@ -31,21 +31,9 @@
 	public static final byte CW_DT_ERROR = -1;
 	/** terrain or difficulty for additional/custom waypoints */
 	public static final byte CW_DT_UNSET = 0;
-	/** reference to singleton CacheTerrDiff object */
-	private static CacheTerrDiff ref;
 
-	/** constructor dies nothing */
-	private CacheTerrDiff() { }
-	
-	/**
-	 * give a singleton reference to this object to whoever needs one. create one, if not done so already.
-	 * @return reference to CacheTerrDiff object
-	 */
-	public static synchronized CacheTerrDiff getCacheTerrDiff() {
-		if (ref == null) {
-			ref = new CacheTerrDiff();
-		}
-		return ref;
+	private CacheTerrDiff() { 
+		// Nothing to do
 	}
 	
 	/**

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-08-22 10:34:19 UTC (rev 2095)
+++ trunk/src/CacheWolf/CacheType.java	2009-08-22 10:59:32 UTC (rev 2096)
@@ -192,23 +192,13 @@
 	public static final String GC_GPX_MAZE = "GPS Adventures Exhibit"; 
 	/** GPX identifier for additional waypoint Project Ape caches */
 	public static final String GC_GPX_APE = "Project APE Cache";
-	/** reference to singleton CacheType object */
-	private static CacheType ref;
 
 	/** thou shallst not instantiate this object */
-	private CacheType() { }
-	
-	/**
-	 * give a singleton reference to this object to whoever needs one. create one, if not done so already.
-	 * @return reference to CacheType object
-	 */
-	public static synchronized CacheType getCacheType() {
-		if (ref == null) {
-			ref = new CacheType();
-		}
-		return ref;
+	private CacheType() { 
+		// Nothing to do
 	}
 	
+
 	/**
 	 * translate cache type to a short version for compact exporters or "smart" cache names. 
 	 * @param type CacheWolf internal type information

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-08-22 10:34:19 UTC (rev 2095)
+++ trunk/src/CacheWolf/DetailsPanel.java	2009-08-22 10:59:32 UTC (rev 2096)
@@ -86,16 +86,10 @@
 	private static mLabel lblAddiCount;
 	/** FIXME move to image broker? */
 	private static mImage imgBlack, imgBlackNo, imgShowBug, imgShowBugNo, imgNewWpt, imgGoto, imgNotes;
-	/** FIXME: what are they for? */
-	private static mImage imgShowMaps, imgAddImages;
 
 	// ===== data handles =====
-	/** FIXME: never used? */
-	private static CacheDB cacheDB;
 	/** waypoint to be displayed. */
 	public CacheHolder cache;
-	/** FIXME: never used? */
-	private static int dbIndex = -1;
 	/** panel to display waypoint attributes */
 	private static AttributesViewer attViewer;
 	/** preferences object. */
@@ -136,7 +130,6 @@
 		// ===== initialize data handles =====
 		pref = Global.getPref();
 		profile = Global.getProfile();
-		cacheDB = profile.cacheDB;
 
 		// ===== initialize flags =====
 		dirtyNotes = false;
@@ -277,7 +270,7 @@
 		btnShowMap = new mButton(new mImage(useBigIcons ? "globe_small_vga.gif" : "globe_small.gif"));
 		btnShowMap.setToolTip(MyLocale.getMsg(347, "Show map"));
 
-		btnAddPicture = new mButton(imgAddImages = new mImage(useBigIcons ? "images_vga.gif" : "images.gif"));
+		btnAddPicture = new mButton(new mImage(useBigIcons ? "images_vga.gif" : "images.gif"));
 		btnAddPicture.setToolTip(MyLocale.getMsg(348, "Add user pictures"));
 
 		btnBlack = new mButton(imgBlack = new mImage(useBigIcons ? "no_black_vga.png" : "no_black.png"));

Modified: trunk/src/CacheWolf/GuiImageBroker.java
===================================================================
--- trunk/src/CacheWolf/GuiImageBroker.java	2009-08-22 10:34:19 UTC (rev 2095)
+++ trunk/src/CacheWolf/GuiImageBroker.java	2009-08-22 10:59:32 UTC (rev 2096)
@@ -17,9 +17,6 @@
 	/** image to be displayed in case of error */
 	public static Image imageError = new Image("guiError.png");
 	
-	/** reference to this object */
-	private static GuiImageBroker ref;
-
 	/**
 	 * images to be displayed for cache types in GUI
 	 * @see getTypeImage
@@ -61,18 +58,10 @@
 //	};
 
 	/** thou shallst not instantiate this object */
-	private GuiImageBroker() { }
-	
-	/**
-	 * give a singleton reference to this object to whoever needs one. create one, if not done so already.
-	 * @return reference to CWWrapper
-	 */
-	public static synchronized GuiImageBroker getGuiImageBroker() {
-		if (ref == null) {
-			ref = new GuiImageBroker();
-		}
-		return ref;
+	private GuiImageBroker() { 
+		// Noting to do
 	}
+	
 
 	/**
 	 * select image to be displayed for a given cache type

Modified: trunk/src/CacheWolf/MyLocale.java
===================================================================
--- trunk/src/CacheWolf/MyLocale.java	2009-08-22 10:34:19 UTC (rev 2095)
+++ trunk/src/CacheWolf/MyLocale.java	2009-08-22 10:59:32 UTC (rev 2096)
@@ -314,12 +314,12 @@
 	 * @return
 	 */
 	public static String getLocalizedFile (String basename){
-		String language = MyLocale.getLocaleLanguage();
+		String lang = MyLocale.getLocaleLanguage();
 		String programmDirectory = FileBase.getProgramDirectory() + "/";
 		int index = basename.lastIndexOf('.');
 		String prefix = basename.substring(0,index);
 		String suffix = basename.substring(index);
-		File f = new File (programmDirectory, prefix+'_'+language+suffix);
+		File f = new File (programmDirectory, prefix+'_'+lang+suffix);
 		if (f.exists()){
 			return f.toString();
 		}

Modified: trunk/src/CacheWolf/Parser.java
===================================================================
--- trunk/src/CacheWolf/Parser.java	2009-08-22 10:34:19 UTC (rev 2095)
+++ trunk/src/CacheWolf/Parser.java	2009-08-22 10:59:32 UTC (rev 2096)
@@ -46,7 +46,6 @@
 
 import CacheWolf.navi.Metrics;
 import CacheWolf.navi.Navigate;
-import CacheWolf.navi.TransformCoordinates;
 
 import com.stevesoft.ewe_pat.Regex;
 

Modified: trunk/src/CacheWolf/exp/GpxExportNg.java
===================================================================
--- trunk/src/CacheWolf/exp/GpxExportNg.java	2009-08-22 10:34:19 UTC (rev 2095)
+++ trunk/src/CacheWolf/exp/GpxExportNg.java	2009-08-22 10:59:32 UTC (rev 2096)
@@ -34,7 +34,6 @@
 import ewe.sys.Process;
 import ewe.sys.Time;
 import ewe.sys.Vm;
-import ewe.ui.Control;
 import ewe.ui.ControlConstants;
 import ewe.ui.ControlEvent;
 import ewe.ui.DataChangeEvent;
@@ -127,7 +126,6 @@
 
 	private static boolean customIcons;
 	private static boolean sendToGarmin;
-	private static boolean separateHints;
 	
 	private static int exportIds;
 	private static int exportTarget;
@@ -673,16 +671,6 @@
 
 	}
 
-	/**
-	 * format TB information as found in a gc.com GPX file
-	 * @param ch cacheholder containing TB information
-	 * @return
-	 */
-	public String formatTbs(CacheHolder ch) {
-		Transformer trans = new Transformer(true);
-		return "";
-		// return trans.replaceFirst(GPXTB);
-	}
 
 	/**
 	 * format cache logs as found in a gc.com GPX file
@@ -929,9 +917,9 @@
 		private mInput ibMaxLogs, ibPrefix;
 		private mButton btnOk, btnCancel;
 		
-		private boolean hasBitmaps;
-		private boolean hasGarminMap;
-		private boolean hasGpsbabel;
+		private boolean hasBitmapsFrm;
+		private boolean hasGarminMapFrm;
+		private boolean hasGpsbabelFrm;
 		
 		private mChoice chStyle, chTarget, chIds;
 		private int chosenStyle, chosenTarget, chosenIds;
@@ -941,9 +929,9 @@
 		 */
 		public GpxExportNgForm(boolean hasGarminMap, boolean hasBitmaps, boolean hasGpsbabel) {
 
-			this.hasBitmaps = hasBitmaps;
-			this.hasGarminMap = hasGarminMap;
-			this.hasGpsbabel = hasGpsbabel;
+			this.hasBitmapsFrm = hasBitmaps;
+			this.hasGarminMapFrm = hasGarminMap;
+			this.hasGpsbabelFrm = hasGpsbabel;
 			
 			// TODO: get/set defaults from profile
 			chosenStyle = 0;
@@ -1069,10 +1057,10 @@
 						if (chTarget.change(ControlConstants.Disabled, 0))
 							chTarget.repaint();
 						
-						if (hasGpsbabel && cbSendToGarmin.change(0, ControlConstants.Disabled))
+						if (hasGpsbabelFrm && cbSendToGarmin.change(0, ControlConstants.Disabled))
 							cbSendToGarmin.repaint();
 						
-						if (hasGarminMap && cbCustomIcons.change(0, ControlConstants.Disabled))
+						if (hasGarminMapFrm && cbCustomIcons.change(0, ControlConstants.Disabled))
 							cbCustomIcons.repaint();
 						
 						cbSeperateHints.state = false;
@@ -1091,10 +1079,10 @@
 						if (chTarget.change(0, ControlConstants.Disabled))
 							chTarget.repaint();
 						
-						if (hasGpsbabel && cbSendToGarmin.change(0, ControlConstants.Disabled))
+						if (hasGpsbabelFrm && cbSendToGarmin.change(0, ControlConstants.Disabled))
 							cbSendToGarmin.repaint();
 						
-						if (hasGarminMap && cbCustomIcons.change(0, ControlConstants.Disabled))
+						if (hasGarminMapFrm && cbCustomIcons.change(0, ControlConstants.Disabled))
 							cbCustomIcons.repaint();
 						
 						cbSeperateHints.state = false;
@@ -1125,7 +1113,7 @@
 						if (cbSendToGarmin.change(ControlConstants.Disabled, 0))
 							cbSendToGarmin.repaint();
 						
-						if (hasBitmaps && cbCustomIcons.change(0, ControlConstants.Disabled))
+						if (hasBitmapsFrm && cbCustomIcons.change(0, ControlConstants.Disabled))
 							cbCustomIcons.repaint();
 						
 						if (cbSeperateHints.change(0, ControlConstants.Disabled))
@@ -1134,10 +1122,10 @@
 						if (ibPrefix.change(0, ControlConstants.Disabled))
 							ibPrefix.repaint();
 					} else { // Single GPX
-						if (hasGpsbabel && cbSendToGarmin.change(0, ControlConstants.Disabled))
+						if (hasGpsbabelFrm && cbSendToGarmin.change(0, ControlConstants.Disabled))
 							cbSendToGarmin.repaint();
 						
-						if (hasGarminMap && cbCustomIcons.change(0, ControlConstants.Disabled))
+						if (hasGarminMapFrm && cbCustomIcons.change(0, ControlConstants.Disabled))
 							cbCustomIcons.repaint();
 						
 						cbSeperateHints.state=false;
@@ -1239,17 +1227,6 @@
 		public String getPrefix() {
 			return ibPrefix.getText();
 		}
-		
-		/** set control to accept user interaction */
-		private void activateControl(Control ctrl) {
-			if (ctrl.change(0, ControlConstants.Disabled))
-				ctrl.repaint();
-		}
-		
-		/** set control to deny user interaction */
-		private void deactivatControl(Control ctrl) {
-			if (ctrl.change(ControlConstants.Disabled, 0))
-				ctrl.repaint();
-		}
+			    
 	}
 }

Modified: trunk/src/CacheWolf/exp/LocExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/LocExporter.java	2009-08-22 10:34:19 UTC (rev 2095)
+++ trunk/src/CacheWolf/exp/LocExporter.java	2009-08-22 10:59:32 UTC (rev 2096)
@@ -2,9 +2,6 @@
 import CacheWolf.*;
 import ewe.io.File;
 import ewe.io.FileBase;
-import ewesoft.xml.*;
-import ewesoft.xml.sax.*;
-import ewe.util.Vector;
 
 
 /**

Modified: trunk/src/CacheWolf/imp/Rating.java
===================================================================
--- trunk/src/CacheWolf/imp/Rating.java	2009-08-22 10:34:19 UTC (rev 2095)
+++ trunk/src/CacheWolf/imp/Rating.java	2009-08-22 10:59:32 UTC (rev 2096)
@@ -1,7 +1,6 @@
 package CacheWolf.imp;
 
 import CacheWolf.CacheHolder;
-import CacheWolf.CacheType;
 import CacheWolf.Global;
 import CacheWolf.utils.CWWrapper;
 import ewe.sys.Handle;

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2009-08-22 10:34:19 UTC (rev 2095)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2009-08-22 10:59:32 UTC (rev 2096)
@@ -85,6 +85,7 @@
 	private Profile profile;
 	private static String viewstate = "";
 	private static String viewstate1 = "";
+	//FIXME Field is never read. Needed?
 	private static String eventvalidation = "";
 	private static String cookieID = "";
 	private static String cookieSession = "";

Modified: trunk/src/CacheWolf/navi/LambertProjection.java
===================================================================
--- trunk/src/CacheWolf/navi/LambertProjection.java	2009-08-22 10:34:19 UTC (rev 2095)
+++ trunk/src/CacheWolf/navi/LambertProjection.java	2009-08-22 10:59:32 UTC (rev 2096)
@@ -1,6 +1,5 @@
 package CacheWolf.navi;
 
-import ewe.sys.Vm;
 import CacheWolf.CWPoint;
 public class LambertProjection extends Projection{
 	

Modified: trunk/src/CacheWolf/navi/MapLoader.java
===================================================================
--- trunk/src/CacheWolf/navi/MapLoader.java	2009-08-22 10:34:19 UTC (rev 2095)
+++ trunk/src/CacheWolf/navi/MapLoader.java	2009-08-22 10:59:32 UTC (rev 2096)
@@ -492,6 +492,7 @@
 	//	CWPoint topright = new CWPoint(maparea.topleft.latDec, maparea.buttomright.lonDec);
 	//	CWPoint buttomleft = new CWPoint(maparea.buttomright.latDec, maparea.topleft.lonDec);
 		int crs = getCrs(maparea.getCenter());
+		// FIXME region is never read. Needed?
 		int region = TransformCoordinates.getLocalProjectionSystem(coordinateReferenceSystem[crs]);
 		ret[TOPLEFT_INDEX] = TransformCoordinates.wgs84ToEpsg(maparea.topleft, coordinateReferenceSystem[crs]);
 		ret[BUTTOMRIGHT_INDEX] = TransformCoordinates.wgs84ToEpsg(maparea.buttomright, coordinateReferenceSystem[crs]);

Modified: trunk/src/CacheWolf/navi/TransformCoordinates.java
===================================================================
--- trunk/src/CacheWolf/navi/TransformCoordinates.java	2009-08-22 10:34:19 UTC (rev 2095)
+++ trunk/src/CacheWolf/navi/TransformCoordinates.java	2009-08-22 10:59:32 UTC (rev 2096)
@@ -2,11 +2,9 @@
 
 import CacheWolf.CWPoint;
 import CacheWolf.Matrix;
-import CacheWolf.MyLocale;
 
 import java.lang.Math;
 
-import ewe.sys.Vm;
 
 /**
  * Class to transform coordinates and shift datums

Modified: trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java
===================================================================
--- trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java	2009-08-22 10:34:19 UTC (rev 2095)
+++ trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java	2009-08-22 10:59:32 UTC (rev 2096)
@@ -1,8 +1,5 @@
 package CacheWolf.navi;
 
-import ewe.io.IOException;
-import ewe.io.InputStream;
-import ewe.sys.Convert;
 import ewe.util.Properties;
 import CacheWolf.CWPoint;
 import CacheWolf.MyLocale;

Modified: trunk/src/CacheWolf/utils/CWWrapper.java
===================================================================
--- trunk/src/CacheWolf/utils/CWWrapper.java	2009-08-22 10:34:19 UTC (rev 2095)
+++ trunk/src/CacheWolf/utils/CWWrapper.java	2009-08-22 10:59:32 UTC (rev 2096)
@@ -14,25 +14,14 @@
  */
 public final class CWWrapper {
 	
-	/** reference to this object */
-	private static CWWrapper ref;
-	
 	/**
 	 * thou shallst not instantiate this object
 	 */
-	private CWWrapper() {}
-	
-	/**
-	 * give a singleton reference to this object to whoever needs one. create one, if not done so already.
-	 * @return reference to CWWrapper
-	 */
-	public static synchronized CWWrapper getCWWrapper() {
-		if (ref == null) {
-			ref = new CWWrapper();
-		}
-		return ref;
+	private CWWrapper() {
+		// Nothing to do
 	}
 	
+	
 	/**
 	 * Apply needed quotes around the command or the argument,
 	 * then call Vm.exec() appropriately.
@@ -67,10 +56,4 @@
 		return Vm.exec(cmd, arg, 0, wait);
 	}
 
-	/**
-	 * just make sure no one tries funny things with us
-	 */
-	public Object clone() throws CloneNotSupportedException {
-		throw new CloneNotSupportedException(); 
-	}
 }



From engywuck at mail.berlios.de  Sat Aug 22 13:06:02 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Sat, 22 Aug 2009 13:06:02 +0200
Subject: [Cachewolf-svn] r2097 - in trunk/src/CacheWolf: . utils
Message-ID: <200908221106.n7MB62kp015938@sheep.berlios.de>

Author: engywuck
Date: 2009-08-22 13:06:00 +0200 (Sat, 22 Aug 2009)
New Revision: 2097

Removed:
   trunk/src/CacheWolf/Legacy.java
Modified:
   trunk/src/CacheWolf/utils/MutableInteger.java
Log:
Removing unwanted/unneeded class; removing interface from MutableInteger, as it is not needed and may slow down usage. 

Deleted: trunk/src/CacheWolf/Legacy.java
===================================================================
--- trunk/src/CacheWolf/Legacy.java	2009-08-22 10:59:32 UTC (rev 2096)
+++ trunk/src/CacheWolf/Legacy.java	2009-08-22 11:06:00 UTC (rev 2097)
@@ -1,95 +0,0 @@
-/**
- * 
- */
-package CacheWolf;
-
-import CacheWolf.utils.MutableInteger;
-
-/**
- * Utility class for converting data from old version files to current version files. This class
- * is used to keep legacy support for old formats out of the "current" classes, so that they are
- * not cluttered with old stuff which is seldom needed.
- *
- */
-public final class Legacy {
-	
-	private static final MutableInteger mInt = new MutableInteger(0);
-	
-	public static final int TYPE_CACHESIZE=0;
-	public static final int TYPE_CACHETYPE=1;
-	
-	/**
-	 * General purpose method to convert old version integer values to new version byte values.
-	 * To distinguish the different purposes the parameter <code>type</code> is used.
-	 * @param value Integer value to convert to new value
-	 * @param type Constant to distinguish the different purposes of the method
-	 * @param oldVersion Version number of the file the value is taken from
-	 * @param newVersion Version number of the file the converted number is intended for. Nearly  
-	 *   always this number should be the last supported version - unless we decide to support
-	 *   older version files also for writing.
-	 * @return The converted byte value
-	 */
-	public static byte toByte(int value, int type, int oldVersion, int newVersion) {
-		mInt.setInt(value);
-		return toByte(mInt, type, oldVersion, newVersion);
-	}
-
-	/**
-	 * General purpose method to convert old version String values to new version byte values.
-	 * To distinguish the different purposes the parameter <code>type</code> is used.
-	 * @param value String value to convert to new value
-	 * @param type Constant to distinguish the different purposes of the method
-	 * @param oldVersion Version number of the file the value is taken from
-	 * @param newVersion Version number of the file the converted number is intended for. Nearly  
-	 *   always this number should be the last supported version - unless we decide to support
-	 *   older version files also for writing.
-	 * @return The converted byte value
-	 */
-	public static byte toByte(String value, int type, int oldVersion, int newVersion) {
-		return toByte(value, type, oldVersion, newVersion);
-	}
-
-	private static byte toByte(Object obj, int type, int oldVersion, int newVersion) {
-		switch (type) {
-		case TYPE_CACHESIZE:
-			// For CacheSizes: The object is a plain string.
-			String oldS = (String)obj;
-			if (oldVersion == 1 && newVersion==3) {
-				if (oldS.equals("Micro")) return CacheSize.CW_SIZE_MICRO;
-				else if (oldS.equals("Small")) return CacheSize.CW_SIZE_SMALL;
-				else if (oldS.equals("Regular")) return CacheSize.CW_SIZE_REGULAR;
-				else if (oldS.equals("Large")) return CacheSize.CW_SIZE_LARGE;
-				else if (oldS.equals("Very large")) return CacheSize.CW_FILTER_VERYLARGE;
-				else if (oldS.equals("Other")) return CacheSize.CW_SIZE_OTHER;
-				else if (oldS.equals("Virtual")) return CacheSize.CW_SIZE_VIRTUAL;
-				else if (oldS.equals("Not chosen")) return CacheSize.CW_SIZE_NOTCHOSEN;
-				else if (oldS.equals("None")) return CacheSize.CW_SIZE_NONE;
-				else throw new IllegalArgumentException("Can't convert size '"+oldS+
-						"' from version 1 to 3"+String.valueOf(oldVersion)+" to version "+
-						String.valueOf(newVersion)+".");
-			}
-			else throw new IllegalArgumentException("Can't convert any size from version "+
-					String.valueOf(oldVersion)+" to version "+String.valueOf(newVersion)+".");
-		case TYPE_CACHETYPE:
-			// For CacheTypes: The object is a MutableInteger
-			int oldI = ((MutableInteger)obj).getInt();
-			if (oldVersion == 1 && newVersion==3) {
-				// TODO Depends, has to be filled
-			} else if (oldVersion == 2 && newVersion==3) {
-				// There is an easy mapping to convert cache type values of version 2 to 
-				// cache type values of version 1. This conversion is done and then the values
-				// are treated as if they were of version 1. 
-				int versionOneValue;
-				switch (oldI) {
-					case 100: versionOneValue = 1848; break;
-					case 101: versionOneValue = 453; break;
-					default: versionOneValue = type + 128;
-				}
-				return toByte(versionOneValue, TYPE_CACHETYPE, 1, 3);
-			} else throw new IllegalArgumentException("Can't convert any type from version "+
-				String.valueOf(oldVersion)+" to version "+String.valueOf(newVersion)+".");
-		default: 
-			throw new IllegalArgumentException("Can't convert type "+String.valueOf(type)+".");
-		}
-    }
-}

Modified: trunk/src/CacheWolf/utils/MutableInteger.java
===================================================================
--- trunk/src/CacheWolf/utils/MutableInteger.java	2009-08-22 10:59:32 UTC (rev 2096)
+++ trunk/src/CacheWolf/utils/MutableInteger.java	2009-08-22 11:06:00 UTC (rev 2097)
@@ -1,27 +1,40 @@
 package CacheWolf.utils;
 
-import ewe.util.Intable;
-
 /**
  * Mutable Integer class, in case we need several integer Values
  * which could be reused in order to decrease object creation. 
  */
-public class MutableInteger implements Intable {
+public class MutableInteger {
 
 	private int value;
 	
+	/**
+	 * Creates a MutableInteger Object with value -1
+	 */
 	public MutableInteger() {
 		value = -1;
 	}
 	
+	/**
+	 * Creates a MutableInteger Object with specified value
+	 * @param initialValue You have to guess.
+	 */
 	public MutableInteger(final int initialValue) {
 		value = initialValue;
 	}
 
+	/**
+	 * Gets the value
+	 * @return value
+	 */
 	public int getInt(){
 		return value;
 	}
 	
+	/**
+	 * Sets the value
+	 * @param newValue value
+	 */
 	public void setInt(final int newValue) {
 		value = newValue;
 	}



From engywuck at mail.berlios.de  Sat Aug 22 17:54:39 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Sat, 22 Aug 2009 17:54:39 +0200
Subject: [Cachewolf-svn] r2098 - in trunk: res_noewe/languages src/CacheWolf
Message-ID: <200908221554.n7MFsdKQ012104@sheep.berlios.de>

Author: engywuck
Date: 2009-08-22 17:54:35 +0200 (Sat, 22 Aug 2009)
New Revision: 2098

Modified:
   trunk/res_noewe/languages/DE.cfg
   trunk/res_noewe/languages/EN.cfg
   trunk/res_noewe/languages/FR.cfg
   trunk/res_noewe/languages/NL.cfg
   trunk/src/CacheWolf/Profile.java
   trunk/src/CacheWolf/myTableModel.java
Log:
- Optimizing the reference building by supressing lots of object creations
- Displaying reference building step in the info box
- Removing questionable logging

Modified: trunk/res_noewe/languages/DE.cfg
===================================================================
--- trunk/res_noewe/languages/DE.cfg	2009-08-22 11:06:00 UTC (rev 2097)
+++ trunk/res_noewe/languages/DE.cfg	2009-08-22 15:54:35 UTC (rev 2098)
@@ -780,6 +780,7 @@
 		5001=Hilfswegpunkte k%f6nnnen nicht direkt gespidert werden.%0aBitte zus%e4tzlich den Vater anhaken.
 		5002=: Diese Funktion steht gegenw%e4rtig nur f%fcr Geocaching.com und Opencaching.de zur Verf%fcgung.
 		5003=Optionen
+		5004=Erstelle Beziehungen f%fcr zus%e4tzliche Wegpunkte...
 		5497=Fehler: Ein Tag in spider.def fehlt
 		5498=Login nicht m%f6glich. Fehler beim Laden der Seite nach Login.
 		5499=Fehler beim Laden der Login Seite.%0aBitte %fcberpr%fcfen Sie Ihre Internetverbindung.

Modified: trunk/res_noewe/languages/EN.cfg
===================================================================
--- trunk/res_noewe/languages/EN.cfg	2009-08-22 11:06:00 UTC (rev 2097)
+++ trunk/res_noewe/languages/EN.cfg	2009-08-22 15:54:35 UTC (rev 2098)
@@ -770,6 +770,7 @@
 		5001=Can't spider additional waypoint directly.%0aPlease check main cache.
 		5002=: At the moment this function is only applicable for geocaching.com and opencaching.de.
 		5003=Options
+		5004=Building references for additional waypoints...
 		5497=Error missing tag in spider.def
 		5500=Error
 		5501=Login failed! Wrong account or password?

Modified: trunk/res_noewe/languages/FR.cfg
===================================================================
--- trunk/res_noewe/languages/FR.cfg	2009-08-22 11:06:00 UTC (rev 2097)
+++ trunk/res_noewe/languages/FR.cfg	2009-08-22 15:54:35 UTC (rev 2098)
@@ -756,6 +756,8 @@
 		5000=Chargeant liste de caches
 		5001=Ne peut pas spider waypoints suppletif.%0aCochez le parent, svp..
 		5002=: Cette fonction n'est disponible que pour Geocaching.com et Opencaching.de momentan%e9ment.
+		5003=Options
+		5004=Cr%e9ant r%e9f%e9rences pour les waypoints additionelles...
 		5497=Erreur: Une balise manque en spider.def
 		5498=Login pas possible. Erreur en chargeant la page suivante.
 		5499=Erreur en chargeant la page Login.%0aMerci de v%e9rifier votre connexion internet.

Modified: trunk/res_noewe/languages/NL.cfg
===================================================================
--- trunk/res_noewe/languages/NL.cfg	2009-08-22 11:06:00 UTC (rev 2097)
+++ trunk/res_noewe/languages/NL.cfg	2009-08-22 15:54:35 UTC (rev 2098)
@@ -548,6 +548,7 @@
 		4502=Fnd:
 		4600=Sommige caches kunnen niet worden getoond door verkeerde blacklist status.
 		5000=Laad cache lijst
+		5004=
 		5497=Fout, verdwenen tag in spider.def.
 		5498=Login fout. Fout bij het laden van de pagina na login.
 		5499=Fout bij het laden van de login pagina.

Modified: trunk/src/CacheWolf/Profile.java
===================================================================
--- trunk/src/CacheWolf/Profile.java	2009-08-22 11:06:00 UTC (rev 2097)
+++ trunk/src/CacheWolf/Profile.java	2009-08-22 15:54:35 UTC (rev 2098)
@@ -358,6 +358,9 @@
 			//Vm.debug("Start:"+startT.format("H:mm:ss.SSS"));
 			//Vm.debug("End  :"+endT.format("H:mm:ss.SSS"));	
 			// Build references between caches and addi wpts
+			if (infoBox!=null) {
+				infoBox.setInfo(MyLocale.getMsg(5004,"Building references..."));
+			}
 			buildReferences();
 			if (indexXmlVersion < CURRENTFILEFORMAT) {
 				saveIndex(Global.getPref(), true);
@@ -538,6 +541,7 @@
 	 */
 	public void buildReferences(){
 		CacheHolder ch;
+		MyComparer myComparer = new MyComparer();
 
 		// Build index for faster search and clear all references
 		for (int i = cacheDB.size() - 1; i >= 0; i--) {
@@ -557,12 +561,7 @@
 		for (int i = 0; i < max; i++) {
 			ch = cacheDB.get(i);
 			if (ch.hasAddiWpt() && (ch.addiWpts.size() > 1)) {
-				ch.addiWpts.sort(new ewe.util.Comparer() {
-					public int compare(Object o1, Object o2) {
-						return ((CacheHolder) o1).getWayPoint().compareTo(
-						        ((CacheHolder) o2).getWayPoint());
-					}
-				}, false);
+				ch.addiWpts.sort(myComparer, false);
 			}
 		}
 
@@ -763,4 +762,13 @@
 	public void setCurrentFilter(FilterData currentFilter) {
     	this.currentFilter = currentFilter;
     }
+	
+	private class MyComparer implements ewe.util.Comparer {
+
+		public int compare(Object o1, Object o2) {
+			return ((CacheHolder) o1).getWayPoint().compareTo(
+			        ((CacheHolder) o2).getWayPoint());
+		}
+		
+	}
 }

Modified: trunk/src/CacheWolf/myTableModel.java
===================================================================
--- trunk/src/CacheWolf/myTableModel.java	2009-08-22 11:06:00 UTC (rev 2097)
+++ trunk/src/CacheWolf/myTableModel.java	2009-08-22 15:54:35 UTC (rev 2098)
@@ -169,10 +169,10 @@
 					if(ch.mainCache != null) { // parent exists
 						if (! ch.mainCache.isVisible())
 							sortDB.add(ch); // Unfiltered Addi Wpt with filtered Main Wpt, show it on its own
-						// else Main cache is not filtered, Addi will be added below main cache further down
-						else
-							//FIXME: is there anything useful we can do about this?
-							Global.getPref().log("Huston, we have a problem with "+ch.getWayPoint()+" in myTableModel.updateRows()");
+						// else 
+						// Main cache is not filtered, Addi will be added below main cache further down
+						// This case doesn't seem to be a problem. It occurs regularly, when
+						// filtered addis are unfiltered, so there is not need to log this case.
 					} else { //Addi without main Cache
 						sortDB.add(ch);
 					}



From greiol at web.de  Sat Aug 22 22:06:13 2009
From: greiol at web.de (greiol)
Date: Sat, 22 Aug 2009 22:06:13 +0200
Subject: [Cachewolf-svn] Cachewolf-svn Digest, Vol 36, Issue 18
In-Reply-To: <mailman.2914.1250956480.5449.cachewolf-svn@lists.berlios.de>
References: <mailman.2914.1250956480.5449.cachewolf-svn@lists.berlios.de>
Message-ID: <4A904FB5.3060306@web.de>

bye bye


From engywuck at mail.berlios.de  Sun Aug 23 09:19:33 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Sun, 23 Aug 2009 09:19:33 +0200
Subject: [Cachewolf-svn] r2099 - trunk/docs
Message-ID: <200908230719.n7N7JX6c023884@sheep.berlios.de>

Author: engywuck
Date: 2009-08-23 09:19:31 +0200 (Sun, 23 Aug 2009)
New Revision: 2099

Removed:
   trunk/docs/Konzept_Imperiales_System.txt
Log:
Document no longer needed.

Deleted: trunk/docs/Konzept_Imperiales_System.txt
===================================================================
--- trunk/docs/Konzept_Imperiales_System.txt	2009-08-22 15:54:35 UTC (rev 2098)
+++ trunk/docs/Konzept_Imperiales_System.txt	2009-08-23 07:19:31 UTC (rev 2099)
@@ -1,47 +0,0 @@
-Konzept zur Meilenunterst?tzung
-===============================
-
-1. Verankerung in Preferences
-CW bekommt eine zentrale Variable, die speichert, ob Entfernungen imperial
-oder metrisch angegeben sind. Diese wird ?ber die Preferences gesetzt und
-gespeichert. 
-
-2. Interne Rechnungen
-Alle internen Berechnungen verwenden das metrische System. D.h.: Funktionen,
-die Entferungen als Argumente entgegennehmen, tun dies in km bzw. m. 
-Funktionsergebnisse sind stets in km  bzw. m. Ausnahmen siehe 4.
-
-3. Darstellung
-Werden Entferungen auf der Oberfl?che ausgegeben, so werden sie ggf. 
-in Meilen/Feet umgerechnet(*). Werden Entferungsdaten in der Oberfl?che
-eingegeben, so erfolgt vor der Verwendung ggf. eine Umrechnung in km
-bzw. m.
-Werden in der Oberfl?che km verwendet, so werden im imperialen System
-Meilen verwendet, analog m <-> Fu?.
-(*) Dies erfordert die Identifikation aller Stellen, wo Entferungs-
-angaben auf der Oberfl?che aus- oder eingegeben werden.
-
-4. Solver-Funktionen
-L?uft CW im imperialen Modus, so erwartet der Anwender auch im Solver,
-dass er Argumente als Meilen bzw. Fu? angeben kann.
-Daher erwarten die vom Solver aufgerufenen Prim?rfunktionen (z.B. 
-Parser.funcProject() ) ggf. Entferungen in Meilen. Die dahinter 
-liegenden Arbeitsfunktionen verwenden Daten wie gehabt; die 
-Umrechnung findet in der Prim?rfunktion statt.
-
-5. Rechner
-Ist das imperiale System eingestellt, so ist "Fu?" der Vorgabewert
-f?r die Einheit.
-
-6. Moving Map
-Da ich die Map nicht nutze, habe ich keine Erfahrung, was dort an
-Entferungen aus- oder eingegeben wird und ob irgendwelche Spezialit?ten
-zu beachten sind.
-
-7. Anpassung der Oberfl?che
-Teilweise erscheinen auf der Oberfl?che Einheiten, z.b. beim
-Spiderradius. Diese Einheit muss entsprechend angepasst werden.
-Kann man das im laufenden Betrieb (d.h. nach Erzeugen der Form) 
-noch ?ndern? Sonst w?re 1. ein Fall f?r "?nderungen werden
-erst nach Neustart wirksam."
-  
\ No newline at end of file



From apreisser at mail.berlios.de  Sat Aug 29 12:48:28 2009
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Sat, 29 Aug 2009 12:48:28 +0200
Subject: [Cachewolf-svn] r2100 - trunk/res_noewe/languages
Message-ID: <200908291048.n7TAmS72030516@sheep.berlios.de>

Author: apreisser
Date: 2009-08-29 12:47:31 +0200 (Sat, 29 Aug 2009)
New Revision: 2100

Modified:
   trunk/res_noewe/languages/DE.cfg
   trunk/res_noewe/languages/EN.cfg
   trunk/res_noewe/languages/FR.cfg
   trunk/res_noewe/languages/NL.cfg
Log:
Menuitems for moving map (fill white areas) added

Modified: trunk/res_noewe/languages/DE.cfg
===================================================================
--- trunk/res_noewe/languages/DE.cfg	2009-08-23 07:19:31 UTC (rev 2099)
+++ trunk/res_noewe/languages/DE.cfg	2009-08-29 10:47:31 UTC (rev 2100)
@@ -697,6 +697,8 @@
 		4263=Karte zum GPS verschieben
 		4264=Karte zum Zentrum verschieben
 		4265=Karte zum Zentrum verschieben
+		4266=Weisse Fl%e4chen f%fcllen
+		4267=Weisse Fl%e4chen anzeigen
 		4270=%d6ffne
 		4271=Karten
 		4272=--- Karten von akt. Position und Ziel ---

Modified: trunk/res_noewe/languages/EN.cfg
===================================================================
--- trunk/res_noewe/languages/EN.cfg	2009-08-23 07:19:31 UTC (rev 2099)
+++ trunk/res_noewe/languages/EN.cfg	2009-08-29 10:47:31 UTC (rev 2100)
@@ -686,6 +686,8 @@
 		4263=Move map to GPS position
 		4264=Move map to centre
 		4265=Move map to centre
+		4266=Fill white areas
+		4267=Show white areas
 		4270=Open
 		4271=--- Maps containing GPS and goto pos. ---
 		4273=--- Maps containing curr. position ---

Modified: trunk/res_noewe/languages/FR.cfg
===================================================================
--- trunk/res_noewe/languages/FR.cfg	2009-08-23 07:19:31 UTC (rev 2099)
+++ trunk/res_noewe/languages/FR.cfg	2009-08-29 10:47:31 UTC (rev 2100)
@@ -678,6 +678,8 @@
 		4263=D%e9placer carte vers GPS
 		4264=D%e9placer carte vers centre
 		4265=D%e9placer carte vers centre
+		4266=[Fill white areas]
+		4267=[Show white areas]
 		4270=Ouvre
 		4271=Cartes
 		4272=--- Cartes de la pos. actuelle et de la dest. ---

Modified: trunk/res_noewe/languages/NL.cfg
===================================================================
--- trunk/res_noewe/languages/NL.cfg	2009-08-23 07:19:31 UTC (rev 2099)
+++ trunk/res_noewe/languages/NL.cfg	2009-08-29 10:47:31 UTC (rev 2100)
@@ -543,6 +543,8 @@
 		4110=Bezig met laden
 		4111=Co%f6rdinaten moeten in dit formaat worden ingegeven N XX XX.XXX E XXX XX.XXX.
 		4200=Kies kaarten map
+		4266=[Fill white areas]
+		4267=[Show white areas]
 		4500=Tot:
 		4501=Vis:
 		4502=Fnd:



From apreisser at mail.berlios.de  Sat Aug 29 12:52:18 2009
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Sat, 29 Aug 2009 12:52:18 +0200
Subject: [Cachewolf-svn] r2101 - trunk/src/CacheWolf
Message-ID: <200908291052.n7TAqIWB001323@sheep.berlios.de>

Author: apreisser
Date: 2009-08-29 12:52:15 +0200 (Sat, 29 Aug 2009)
New Revision: 2101

Modified:
   trunk/src/CacheWolf/MainTab.java
Log:
Repaint added to avoid problems with white areas filled

Modified: trunk/src/CacheWolf/MainTab.java
===================================================================
--- trunk/src/CacheWolf/MainTab.java	2009-08-29 10:47:31 UTC (rev 2100)
+++ trunk/src/CacheWolf/MainTab.java	2009-08-29 10:52:15 UTC (rev 2101)
@@ -358,6 +358,8 @@
 					if (i >= 10*60) {(new MessageBox("Error", "MovingMap cannot be displayed - this is most likely a bug - plaese report it on www.geoclub.de", FormBase.OKB)).execute(); return;}
 					mm.setCenterOfScreen(centerTo, false); // this can only be executed if mm knows its window size that's why myExec must be executed before
 					mm.updatePosition(centerTo);
+					//If white Areas are filled there is a problem with painting the image. We force painting here.
+					mm.repaint ();
 					/*			if(!mm.posCircle.isOnScreen()) { // TODO this doesn't work because lat lon is set to the wished pos and not to gps anymore
 				mm.setGpsStatus(MovingMap.noGPS); // disconnect movingMap from GPS if GPS-pos is not on the screen
 				mm.setResModus(MovingMap.HIGHEST_RESOLUTION);



From apreisser at mail.berlios.de  Sat Aug 29 12:52:56 2009
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Sat, 29 Aug 2009 12:52:56 +0200
Subject: [Cachewolf-svn] r2102 - trunk/src/CacheWolf
Message-ID: <200908291052.n7TAqu3U001581@sheep.berlios.de>

Author: apreisser
Date: 2009-08-29 12:52:53 +0200 (Sat, 29 Aug 2009)
New Revision: 2102

Modified:
   trunk/src/CacheWolf/MyLocale.java
Log:
typo in comment fixed

Modified: trunk/src/CacheWolf/MyLocale.java
===================================================================
--- trunk/src/CacheWolf/MyLocale.java	2009-08-29 10:52:15 UTC (rev 2101)
+++ trunk/src/CacheWolf/MyLocale.java	2009-08-29 10:52:53 UTC (rev 2102)
@@ -126,17 +126,17 @@
 	}
 
 	/**
-	 * Return a localised string
+	 * Return a localized string
 	 * 
-	 * The localised strings are stored in the configuration file (relative to
+	 * The localized strings are stored in the configuration file (relative to
 	 *  executable:<br>
 	 *  	_config/cachewolf.Languages.cfg
 	 * If the configuration file does not exist or a string cannot be found in
-	 * the file, the defaultValue is resurned.
+	 * the file, the defaultValue is returned.
 	 *   
 	 * @param resourceID   The unique number of the resource
-	 * @param defaultValue The default value of the string (if not found in the config file)
-	 * @return The localised string 
+	 * @param defaultValue The default value of the string (if not found in the configuration file)
+	 * @return The localized string 
 	 */
 	public static String getMsg(int resourceID, String defaultValue) {
 		if (l==null) 



From apreisser at mail.berlios.de  Sat Aug 29 12:53:37 2009
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Sat, 29 Aug 2009 12:53:37 +0200
Subject: [Cachewolf-svn] r2103 - trunk/src/CacheWolf
Message-ID: <200908291053.n7TArbiv001775@sheep.berlios.de>

Author: apreisser
Date: 2009-08-29 12:53:28 +0200 (Sat, 29 Aug 2009)
New Revision: 2103

Modified:
   trunk/src/CacheWolf/Preferences.java
Log:
Element for white-area-filling added

Modified: trunk/src/CacheWolf/Preferences.java
===================================================================
--- trunk/src/CacheWolf/Preferences.java	2009-08-29 10:52:53 UTC (rev 2102)
+++ trunk/src/CacheWolf/Preferences.java	2009-08-29 10:53:28 UTC (rev 2103)
@@ -243,6 +243,9 @@
 	/** keep own logs even when excessing <code>maxLogsToKeep</code> */
 	public boolean alwaysKeepOwnLogs = true;
 
+	/** Determines whether to fill the white areas on the map */
+	public boolean fillWhiteArea=false;
+
 	//////////////////////////////////////////////
 	/** The debug switch (Can be used to activate dormant code) by adding
 	 * the line: <pre><debug value="true" /></pre>
@@ -491,6 +494,10 @@
 			if (tmp != null)
 				alwaysKeepOwnLogs = Boolean.valueOf(tmp).booleanValue();  
 		}
+		else if (name.equals("fillWhiteArea")){
+			tmp = atts.getValue("on");
+			fillWhiteArea = tmp != null && tmp.equalsIgnoreCase("true");
+		}
 	}
 
 	public void characters( char ch[], int start, int length ) {
@@ -575,6 +582,7 @@
 			}
 			if (rater != null) outp.print("    <rater tool=\"".concat(SafeXML.strxmlencode(rater)).concat("\"/>\n"));
 			outp.print("    <logkeeping maximum=\""+SafeXML.strxmlencode(maxLogsToKeep)+"\" keepown=\""+SafeXML.strxmlencode(alwaysKeepOwnLogs)+"\" />\n");
+			outp.print("    <fillWhiteArea on=\""+SafeXML.strxmlencode(fillWhiteArea)+"\"/>\n");
 			outp.print("</preferences>");
 			outp.close();
 		} catch (Exception e) {



From apreisser at mail.berlios.de  Sat Aug 29 12:54:50 2009
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Sat, 29 Aug 2009 12:54:50 +0200
Subject: [Cachewolf-svn] r2104 - trunk/src/CacheWolf/navi
Message-ID: <200908291054.n7TAso9a002939@sheep.berlios.de>

Author: apreisser
Date: 2009-08-29 12:54:36 +0200 (Sat, 29 Aug 2009)
New Revision: 2104

Added:
   trunk/src/CacheWolf/navi/MovingMapCache.java
Log:
Tile-Cache for maps. Used by white-area-filling

Added: trunk/src/CacheWolf/navi/MovingMapCache.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMapCache.java	2009-08-29 10:53:28 UTC (rev 2103)
+++ trunk/src/CacheWolf/navi/MovingMapCache.java	2009-08-29 10:54:36 UTC (rev 2104)
@@ -0,0 +1,154 @@
+package CacheWolf.navi;
+
+import ewe.fx.Dimension;
+import ewe.fx.Rect;
+import ewe.util.Hashtable;
+import ewe.util.Iterator;
+import ewe.util.Map;
+import ewe.util.Vector;
+import ewe.util.Map.MapEntry;
+
+public class MovingMapCache {
+
+	/**
+	 * Implements singleton pattern
+	 */
+		private static MovingMapCache singleton;
+		
+		/**
+		 * Map<Key,Value> holding map-parts
+		 */
+		private Map cache;
+		
+		/**
+		 * Map<String,Dimension> holding dimensions of the images
+		 */
+		private Map dimensions;
+		
+		/**
+		 * private Xtor for singleton pattern
+		 *
+		 */
+		private MovingMapCache (){
+			cache = new Hashtable ();
+			dimensions = new Hashtable ();
+		}
+		
+		public static MovingMapCache getCache (){
+			if(singleton==null){
+				singleton = new MovingMapCache();
+			}
+			
+			return singleton;
+		}
+		
+		public MapImage get(String filename, int row, int column) {
+			// TODO Auto-generated method stub
+			Key key = new Key ();
+			key.filename = filename;
+			key.row = row;
+			key.column = column;
+			
+			Value v = (Value) cache.get(key);
+			if ( v != null){
+				v.used = true;
+				return v.image;
+			}
+			else{
+				return null;
+			}
+		}
+		
+		public  void put(String filename, int row, int column, MapImage im) {
+			// TODO Auto-generated method stub
+			Key key = new Key ();
+			key.filename = filename;
+			key.row = row;
+			key.column = column;
+			
+			cache.put(key, new Value (im));
+		}
+
+		public void clearUsedFlags() {
+			for (Iterator i = cache.entries(); i.hasNext();) {
+				MapEntry element =  (MapEntry) i.next();
+				Value v = (Value) element.getValue();
+				v.used = false;
+			}
+			
+		}
+
+		public void cleanCache() {
+			//EWE does not suport the remove-operation on Hashtables.
+			Vector keysToRemove = new Vector (); 
+			for (Iterator i = cache.entries(); i.hasNext();) {
+				MapEntry element =  (MapEntry) i.next();
+				Value v = (Value) element.getValue();
+				if (!v.used){
+					keysToRemove.add(element.getKey());
+				}
+			}
+			for (Iterator i = keysToRemove.iterator();i.hasNext();){
+				Object element = i.next();
+				cache.remove(element);
+			}
+		}
+
+
+		private class Key{
+			private String filename;
+			private int row;
+			private int column;
+
+			public int hashCode() {
+				final int PRIME = 31;
+				int result = 1;
+				result = PRIME * result + column;
+				result = PRIME * result + ((filename == null) ? 0 : filename.hashCode());
+				result = PRIME * result + row;
+				return result;
+			}
+
+			public boolean equals(Object obj) {
+				if (this == obj)
+					return true;
+				if (obj == null)
+					return false;
+				if (getClass() != obj.getClass())
+					return false;
+				final Key other = (Key) obj;
+				if (column != other.column)
+					return false;
+				if (filename == null) {
+					if (other.filename != null)
+						return false;
+				} else if (!filename.equals(other.filename))
+					return false;
+				if (row != other.row)
+					return false;
+				return true;
+			}
+			
+		}
+
+	private class Value {
+		MapImage image;
+
+		boolean used;
+
+		public Value(MapImage im) {
+			image = im;
+			used = true;
+		}
+
+	}
+
+	public Dimension getDimension(String filename) {
+		return (Dimension) dimensions.get(filename);
+	}
+
+	public void putDimension(String filename, Dimension rect2) {
+		dimensions.put(filename, rect2);
+	}
+
+}


Property changes on: trunk/src/CacheWolf/navi/MovingMapCache.java
___________________________________________________________________
Name: svn:mime-type
   + text/plain



From apreisser at mail.berlios.de  Sat Aug 29 12:58:28 2009
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Sat, 29 Aug 2009 12:58:28 +0200
Subject: [Cachewolf-svn] r2105 - trunk/src/CacheWolf/navi
Message-ID: <200908291058.n7TAwSSa007364@sheep.berlios.de>

Author: apreisser
Date: 2009-08-29 12:58:24 +0200 (Sat, 29 Aug 2009)
New Revision: 2105

Modified:
   trunk/src/CacheWolf/navi/MapsList.java
Log:
getBestMap returns map with different scale even if forceScale is true

Modified: trunk/src/CacheWolf/navi/MapsList.java
===================================================================
--- trunk/src/CacheWolf/navi/MapsList.java	2009-08-29 10:54:36 UTC (rev 2104)
+++ trunk/src/CacheWolf/navi/MapsList.java	2009-08-29 10:58:24 UTC (rev 2105)
@@ -142,8 +142,10 @@
 				screenArea = getAreaForScreen(screen, ll, mi.scale, mi);
 				lastscale = mi.scale;
 			}
+//			if(forceScale && java.lang.Math.abs (scale- mi.scale) > 0.0001) continue;
+			
 			if (screenArea.isOverlapping(mi) ) { // is on screen
-				if (!forceScale || (forceScale && !scaleEquals(scale, mi))) { // different scale?
+				if (!forceScale || (forceScale && scaleEquals(scale, mi))) { // different scale?
 					if (!forceScale && (mi.isInBound(ll) && (bestMap == null || scaleNearer(mi.scale, bestMap.scale, scale) || !bestMap.isInBound(ll)))) 
 						better = true; // inbound and resolution nearer at wanted resolution or old one is on screen but lat/long not inbound-> better
 					else {
@@ -153,7 +155,9 @@
 							if ( latNearer && lonNearer) better = true; // for faster processing: if lat and lon are nearer then the distancance doesn't need to be calculated
 							else {
 								if ( (latNearer || lonNearer )) { 
-									if (bestMap == null || mi.center.getDistanceRad(ll) < bestMap.center.getDistanceRad(ll) ) better = true;
+									if (bestMap == null || mi.center.getDistanceRad(ll) < bestMap.center.getDistanceRad(ll) ){
+										better = true;
+									}
 								}
 							}
 						}



From apreisser at mail.berlios.de  Sat Aug 29 12:59:11 2009
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Sat, 29 Aug 2009 12:59:11 +0200
Subject: [Cachewolf-svn] r2106 - trunk/src/CacheWolf/navi
Message-ID: <200908291059.n7TAxBGR007860@sheep.berlios.de>

Author: apreisser
Date: 2009-08-29 12:59:06 +0200 (Sat, 29 Aug 2009)
New Revision: 2106

Modified:
   trunk/src/CacheWolf/navi/MapsList.java
Log:
Unused code removed

Modified: trunk/src/CacheWolf/navi/MapsList.java
===================================================================
--- trunk/src/CacheWolf/navi/MapsList.java	2009-08-29 10:58:24 UTC (rev 2105)
+++ trunk/src/CacheWolf/navi/MapsList.java	2009-08-29 10:59:06 UTC (rev 2106)
@@ -142,7 +142,6 @@
 				screenArea = getAreaForScreen(screen, ll, mi.scale, mi);
 				lastscale = mi.scale;
 			}
-//			if(forceScale && java.lang.Math.abs (scale- mi.scale) > 0.0001) continue;
 			
 			if (screenArea.isOverlapping(mi) ) { // is on screen
 				if (!forceScale || (forceScale && scaleEquals(scale, mi))) { // different scale?



From apreisser at mail.berlios.de  Sat Aug 29 13:02:29 2009
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Sat, 29 Aug 2009 13:02:29 +0200
Subject: [Cachewolf-svn] r2107 - trunk/src/CacheWolf/navi
Message-ID: <200908291102.n7TB2TjV011876@sheep.berlios.de>

Author: apreisser
Date: 2009-08-29 13:02:17 +0200 (Sat, 29 Aug 2009)
New Revision: 2107

Modified:
   trunk/src/CacheWolf/navi/MovingMap.java
Log:
Optionally the moving map fills the areas not covered by the current map.

Modified: trunk/src/CacheWolf/navi/MovingMap.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMap.java	2009-08-29 10:59:06 UTC (rev 2106)
+++ trunk/src/CacheWolf/navi/MovingMap.java	2009-08-29 11:02:17 UTC (rev 2107)
@@ -17,6 +17,7 @@
 import ewe.filechooser.FileChooser;
 import ewe.filechooser.FileChooserBase;
 import ewe.fx.*;
+import ewe.util.Iterator;
 import ewe.util.Vector;
 
 /**
@@ -81,6 +82,17 @@
 	
 	float lastHighestResolutionGPSDestScale = -1;
 
+	public static final int tileWidth = 150;
+	public static final int tileHeight = 150;
+
+	public boolean isFillWhiteArea() {
+		return pref.fillWhiteArea;
+	}
+
+	public void setFillWhiteArea(boolean fillWhiteArea) {
+		pref.fillWhiteArea = fillWhiteArea;
+	}
+
 	public MovingMap(Navigate nav, CacheDB cacheDB){
 		this.cacheDB = cacheDB;
 		this.myNavigation = nav;
@@ -959,6 +971,43 @@
 			return;
 		}
 		updateOnlyPosition(where, true);
+		
+		//Clean up any additional images, tiles will removed and any other item be added again later
+		Vector icons = new Vector ();
+		for (Iterator i = mmp.images.iterator(); i.hasNext();) {
+			AniImage im = (AniImage) i.next();
+			if (im.getClass().equals(MapImage.class)&& mmp.mapImage != im) {
+				i.remove();
+			}
+			else{
+				icons.add(im);
+				i.remove();
+			}
+		}
+		//Mark all tiles as dirty
+		MovingMapCache.getCache().clearUsedFlags ();
+		
+		Point mapPosx = getMapPositionOnScreen();
+		//Holds areas not filled by currentmap and/or used tiles
+		Vector rectangles = new Vector();
+		//calculate areas which will not drawn
+		Rect whiteArea = new Rect (0,0,width,height);
+		Rect blackArea = new Rect (mapPosx.x, mapPosx.y, 1000, 1000);
+		calculateRectangles(blackArea, whiteArea,rectangles);
+		//I've somtimes experincied an endless which might be caused by a bug in getBestMap. Therefore i will stop the loop after 30 runs
+		int count=0;
+		while (isFillWhiteArea() && currentMap.zoomFactor == 1.0 && !mapHidden && !rectangles.isEmpty() && count < 30){
+			count++;
+			updateTileForWhiteArea(rectangles);
+		}		
+		//Remove all tiles not needed from the cache to reduce memory
+		MovingMapCache.getCache().cleanCache ();
+		//At Last redraw all icons on the map
+		for(Iterator i = icons.iterator(); i.hasNext();){
+			AniImage im = (AniImage) i.next();
+			mmp.addImage(im);
+		}
+		
 		if (!autoSelectMap) return;
 		Point mapPos = getMapPositionOnScreen();
 		boolean screenNotCompletlyCovered =  mmp.mapImage == null || (mmp.mapImage != null && ( mapPos.y > 0 || mapPos.x > 0 || mapPos.y+mmp.mapImage.getHeight()<this.height	|| mapPos.x+mmp.mapImage.getWidth()<this.width));
@@ -974,6 +1023,175 @@
 		}
 	}
 
+	private void updateTileForWhiteArea(Vector rectangles) {
+		Rect blackArea;
+		Rect r = (Rect) rectangles.get(0);
+		rectangles.removeElementAt(0);
+		//calculate the center of the rectangle and try to get an map for it
+		int middlewidth = r.x + (r.width)/2;
+		int middleheight = r.y + (r.height)/2;
+		CWPoint centerPoint = ScreenXY2LatLon(middlewidth, middleheight);
+		Rect screen = new Rect ();
+		screen.height = r.height - r.y; 
+		screen.width = r.width - r.x;
+		MapInfoObject bestMap = maps.getBestMap(centerPoint, screen, currentMap.scale, true);
+		if (bestMap == null){
+			//No map found, area must be left white
+			return;
+		}
+		//A map was found, but it does not contain the previously calculated center
+		if (!(bestMap.buttomright.latDec <= centerPoint.latDec && centerPoint.latDec <= bestMap.topleft.latDec)){
+			return;
+		}
+		if (!(bestMap.topleft.lonDec <= centerPoint.lonDec && centerPoint.lonDec <= bestMap.buttomright.lonDec)){
+			return;
+		}
+		if (!bestMap.getImageFilename().equals(currentMap.getImageFilename())) {
+			String filename = bestMap.getImageFilename();
+			if (filename.length() > 0) {
+				//calculate position of the new map on the screen
+				Point mapPos = new Point();
+				Point mapposint = bestMap.calcMapXY(posCircle.where);
+				mapPos.x = posCircleX - mapposint.x;
+				mapPos.y = posCircleY - mapposint.y;
+				Point mapDimension = bestMap.calcMapXY(bestMap.buttomright);
+				blackArea = new Rect (mapPos.x, mapPos.y, mapDimension.x, mapDimension.y);
+				//Are there any white areas left?
+				calculateRectangles(blackArea, r, rectangles);
+				//Not all maps have the dimension 1000x1000 Pixels, we cache this information:
+				Dimension rect2 = MovingMapCache.getCache().getDimension (filename);
+				MapImage fullImage = null;
+				if (rect2 == null){
+					fullImage = new MapImage(filename);
+					rect2 = new Dimension (fullImage.getHeight(), fullImage.getWidth());
+					MovingMapCache.getCache ().putDimension (filename, rect2);
+				}
+				generateTiles(blackArea, filename, mapPos, rect2, fullImage);
+			}
+		}
+	}
+
+	private void generateTiles(Rect blackArea, String filename, Point mapPos,
+			Dimension rect2, MapImage fullImage) {
+		//Generate tiles from the map
+		int numRows = ((rect2.height-1)/tileHeight)+1;
+		int numCols = ((rect2.width-1)/tileWidth)+1;
+		for (int row = 0; row < numRows; row++) {
+			for (int column = 0; column < numCols; column++) {
+				//Tile is not needed, don't process
+				if (!isCoveredByBlackArea(mapPos, row, column, blackArea, rect2)) {
+					continue;
+				}
+				//Get tile from cache or if not found, put all tiles for this image into the cache. 
+				MapImage im = MovingMapCache.getCache().get(filename, row, column);
+				if (im == null) {
+					if (fullImage == null){
+						fullImage = new MapImage(filename);
+					}
+					putImageIntoCache(filename, fullImage, mapPos, blackArea);
+					im = MovingMapCache.getCache().get(filename, row, column);
+				}
+				//If a tile has been found, draw it on the screen
+				if (im != null) {
+					im.setLocation(mapPos.x + (column * tileWidth), mapPos.y + (row * tileHeight));
+					mmp.addImage(im);
+				}
+			}
+		}
+	}
+
+	private void putImageIntoCache(String filename, MapImage fullImage, Point mapPos, Rect blackArea) {
+		MapImage im;
+		int numRows = (fullImage.getHeight()-1)/tileHeight + 1;
+		int numCols = (fullImage.getWidth()-1)/tileWidth + 1;
+		for (int row2 = 0; row2 < numRows; row2++) {
+			for (int column2 = 0; column2 < numCols; column2++) {
+				int realWidth = java.lang.Math.min(tileWidth, (fullImage.getWidth() - tileWidth*column2));
+				int realHeight = java.lang.Math.min(tileHeight, (fullImage.getHeight() - tileHeight*row2));
+				if (!isCoveredByBlackArea(mapPos, row2, column2, blackArea, new Dimension(fullImage.getWidth(), fullImage.getHeight()))){
+					continue;
+				}
+				Image image2 = new Image(realWidth, realHeight);
+				int[] pixels = new int[realWidth * realHeight];
+				fullImage.getPixels(pixels, 0, tileWidth * column2, tileHeight * row2, realWidth, realHeight, 0);
+				image2.setPixels(pixels, 0, 0, 0, realWidth, realHeight, 0);
+				im = new MapImage();
+				im.setImage(image2);
+
+				MovingMapCache.getCache().put(filename, row2, column2, im);
+			}
+		}
+	}
+
+	private boolean isCoveredByBlackArea (Point mapPos, int row,int column,Rect blackArea, Dimension mapDimension){
+		int realWidth = java.lang.Math.min(tileWidth, (mapDimension.width - tileWidth*column));
+		int realHeight = java.lang.Math.min(tileHeight, (mapDimension.height - tileHeight*row));
+		int left = mapPos.x + column * tileWidth;
+		int right = left + realWidth;
+		int top = mapPos.y + row * tileHeight;
+		int bottom = top +realHeight;
+		if (right < blackArea.x || bottom < blackArea.y){
+			return false;
+		}
+		if (left > blackArea.x + blackArea.width || top > blackArea.y + blackArea.height){
+			return false;
+		}
+		return true;
+	}
+	
+	private void calculateRectangles(Rect blackArea, Rect whiteArea, Vector rectangles) {
+		if (width == 0 || height == 0) return;
+		if (whiteArea.x >= width || whiteArea.y >= height) return;
+		
+		if (blackArea.x < 0){
+			blackArea.width += blackArea.x; 
+			blackArea.x =0;
+		}
+		if (blackArea.y < 0){
+			blackArea.height += blackArea.y; 
+			blackArea.y =0;
+		}
+		if (blackArea.x + blackArea.width > width){
+			blackArea.width = width - blackArea.x;
+		}
+		if (blackArea.y + blackArea.height > height){
+			blackArea.height = height - blackArea.y;
+		}
+		
+		if (blackArea.x > whiteArea.x) {
+			Rect r= new Rect ();
+			r.x = 0;
+			r.y = 0;
+			r.width = blackArea.x;
+			r.height = whiteArea.height;
+			rectangles.add(r);
+		}
+		if (blackArea.y > whiteArea.y) {
+			Rect r= new Rect ();
+			r.x = 0;
+			r.y = 0;
+			r.width = whiteArea.width;
+			r.height = blackArea.y;
+			rectangles.add(r);
+		}
+		if ((blackArea.y + blackArea.height) <  whiteArea.y + whiteArea.height) {
+			Rect r= new Rect ();
+			r.x = whiteArea.x;
+			r.y = blackArea.y + blackArea.height;
+			r.width = whiteArea.width;
+			r.height = (whiteArea.y + whiteArea.height) - r.y;
+			rectangles.add(r);
+		}
+		if ((blackArea.x + blackArea.width)<  whiteArea.x + whiteArea.width) {
+			Rect r= new Rect ();
+			r.x = blackArea.x + blackArea.width;
+			r.y = whiteArea.y;
+			r.width = (whiteArea.x + whiteArea.width) - r.x;
+			r.height = whiteArea.height;
+			rectangles.add(r);
+		}
+	}
+
 	public void updateGps(int fix) {
 		if (!running || ignoreGps) return;
 		// runMovingMap neccessary in case of multi-threaded Java-VM: ticked could be called during load of mmp 
@@ -1517,6 +1735,8 @@
 	MenuItem changeMapDirMI = new MenuItem(MyLocale.getMsg(4236, "Change map directory$c"), new IconAndText(new mImage("map_cd.png"), MyLocale.getMsg(4237, "Change map directory"), null, CellConstants.RIGHT));
 	MenuItem showMapMI = new MenuItem(MyLocale.getMsg(4238, "Show map"), new IconAndText(new mImage("map_on.png"), MyLocale.getMsg(4239, "Show map"), null, CellConstants.RIGHT));
 	MenuItem hideMapMI = new MenuItem(MyLocale.getMsg(4240, "Hide map"), new IconAndText(new mImage("map_off.png"), MyLocale.getMsg(4241, "Hide map"), null, CellConstants.RIGHT));
+	MenuItem fillMapMI = new MenuItem(MyLocale.getMsg(4267, "Show white areas"), new IconAndText(new mImage("map_off.png"), MyLocale.getMsg(4267, "Show white areas"), null, CellConstants.RIGHT));
+	MenuItem noFillMapMI = new MenuItem(MyLocale.getMsg(4266, "Fill white areas"), new IconAndText(new mImage("map_off.png"), MyLocale.getMsg(4266, "Fill white areas"), null, CellConstants.RIGHT));
 	// automatic
 	MenuItem mapChangeModusMI = new MenuItem(MyLocale.getMsg(4242, "Modus for automatic map change"), MenuItem.Separator, null);;
 	MenuItem highestResGpsDestMI = new MenuItem(MyLocale.getMsg(4244, "Highest res. containing dest. & cur. position"), new IconAndText(new mImage("res_gps_goto.png"), MyLocale.getMsg(4245, "Highest res. containing dest. & cur. position"), null, CellConstants.RIGHT)); //immer h?chste Aufl?sung w?hlen, die akt. Pos. und Ziel enthalten 
@@ -1541,6 +1761,7 @@
 	boolean paintingZoomArea;
 	ImageList saveImageList = null;
 	int lastZoomWidth , lastZoomHeight;
+	
 	public MovingMapPanel(MovingMap f){
 		this.mm = f;
 		miLuminary = new MenuItem[SkyOrientation.LUMINARY_NAMES.length];
@@ -1721,7 +1942,12 @@
 				if (mm.mapHidden) mapsMenu.addItem(showMapMI);
 				else mapsMenu.addItem(hideMapMI);
 			}
-
+			if (mm.isFillWhiteArea()){
+				mapsMenu.addItem(fillMapMI);
+			}
+			else{
+				mapsMenu.addItem(noFillMapMI);
+			}
 			// automatic
 			highestResGpsDestMI.modifiers &= ~MenuItem.Checked;
 			highestResolutionMI.modifiers &= ~MenuItem.Checked;
@@ -1826,7 +2052,7 @@
 							mapsMenu.close();
 							chooseMap();
 						}
-						if (action == changeMapDirMI)	{
+						else if (action == changeMapDirMI)	{
 							mapsMenu.close();
 							FileChooser fc = new FileChooser(FileChooserBase.DIRECTORY_SELECT, Global.getPref().baseDir+"maps");
 							fc.addMask("*.wfl");
@@ -1837,52 +2063,64 @@
 								mm.forceMapLoad();
 							}
 						}
+						else if (action == fillMapMI){
+							mapsMenu.close ();
+							mm.setFillWhiteArea(false);
+							mm.updatePosition (mm.posCircle.where);
+							repaintNow();
+						}
+						else if (action == noFillMapMI){
+							mapsMenu.close ();
+							mm.setFillWhiteArea(true);
+							mm.updatePosition (mm.posCircle.where);
+							repaintNow();
+						}
 						//dont show map
-						if (action == hideMapMI) {
+						else if (action == hideMapMI) {
 							mapsMenu.close();
 							mm.hideMap();
 						}
 						// show map
-						if (action == showMapMI) {
+						else if (action == showMapMI) {
 							mapsMenu.close();
 							mm.showMap();
 						}
 						// map change modus
-						if (action == highestResGpsDestMI) {
+						else if (action == highestResGpsDestMI) {
 							mapsMenu.close();
 							mm.setResModus(MovingMap.HIGHEST_RESOLUTION_GPS_DEST);
 						}
-						if (action == highestResolutionMI) {
+						else if (action == highestResolutionMI) {
 							mapsMenu.close();
 							mm.setResModus(MovingMap.HIGHEST_RESOLUTION);
 						}
-						if (action == keepManResolutionMI) {
+						else if (action == keepManResolutionMI) {
 							mapsMenu.close();
 							mm.setResModus(MovingMap.NORMAL_KEEP_RESOLUTION);
 						}
 						// manually change map resolution
-						if (action == moreDetailsMI) {
+						else if (action == moreDetailsMI) {
 							mapsMenu.close();
 							mm.loadMoreDetailedMap(false);
 						} 
-						if (action == moreOverviewMI) {
+						else if (action == moreOverviewMI) {
 							mapsMenu.close();
 							mm.loadMoreDetailedMap(true);
 						}
-						if (action == AllCachesResMI) {
+						else if (action == AllCachesResMI) {
 							mapsMenu.close();
 							mm.loadMapForAllCaches();
 						}
 						// moveto position
-						if (action == moveToCenterMI) {
+						else if (action == moveToCenterMI) {
 							mapsMenu.close();
 							mm.setCenterOfScreen(Global.getPref().curCentrePt, true);
 						}
-						if (action == moveToDestMI) {
+						else if (action == moveToDestMI) {
 							mapsMenu.close();
 							mm.setCenterOfScreen(mm.gotoPos.where, true);
 						}
-						if (action == moveToGpsMI) {
+						else if (action == moveToGpsMI) {
 							mapsMenu.close();
 							this.snapToGps();						
 						}



From apreisser at mail.berlios.de  Sat Aug 29 13:05:37 2009
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Sat, 29 Aug 2009 13:05:37 +0200
Subject: [Cachewolf-svn] r2108 - trunk/src/CacheWolf/navi
Message-ID: <200908291105.n7TB5bqG015749@sheep.berlios.de>

Author: apreisser
Date: 2009-08-29 13:05:33 +0200 (Sat, 29 Aug 2009)
New Revision: 2108

Modified:
   trunk/src/CacheWolf/navi/MovingMap.java
Log:
Wrong tile dimensions

Modified: trunk/src/CacheWolf/navi/MovingMap.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMap.java	2009-08-29 11:02:17 UTC (rev 2107)
+++ trunk/src/CacheWolf/navi/MovingMap.java	2009-08-29 11:05:33 UTC (rev 2108)
@@ -82,8 +82,8 @@
 	
 	float lastHighestResolutionGPSDestScale = -1;
 
-	public static final int tileWidth = 150;
-	public static final int tileHeight = 150;
+	public static final int tileWidth = 100;
+	public static final int tileHeight = 100;
 
 	public boolean isFillWhiteArea() {
 		return pref.fillWhiteArea;



From admin at berlios.de  Sat Aug 29 13:11:52 2009
From: admin at berlios.de (admin at berlios.de)
Date: Sat, 29 Aug 2009 13:11:52 +0200 (CEST)
Subject: [Cachewolf-svn] [Bug #16194] invalid Character Entitiy bei
	korruptem zip file
Message-ID: <200908291111.n7TBBq1l027075@unicorn.berlios.de>

Bug #16194, was updated on 2009-Aug-29 13:11
Here is a current snapshot of the bug.

Project: CacheWolf
Category: Import/Export
Status: Open
Resolution: None
Bug Group: None
Priority: 5
Submitted by: greiol
Assigned to : none
Summary: invalid Character Entitiy bei korruptem zip file

Details: Fehler:
invalid Character Entitiy
	at ewesoft.xml.MinML.fatalError(MinML.java:595)
	at ewesoft.xml.MinML.parse(MinML.java:429)
	at CacheWolf.imp.GPXImporter.doIt(GPXImporter.java:148)
	at CacheWolf.MainMenu.onEvent(MainMenu.java:361)
	at ewe.ui.Control.postEvent(Control.java:1380)
	at ewe.ui.MenuState.onEvent(MenuState.java:156)
	at ewe.ui.Control.sendToListeners(Control.java:1356)
	at ewe.ui.Control.postEvent(Control.java:1373)
	at ewe.ui.Menu.postEvent(Menu.java:453)
	at ewe.ui.Menu.onEvent(Menu.java:488)
	at ewe.ui.Control.sendToListeners(Control.java:1356)
	at ewe.ui.Control.postEvent(Control.java:1373)
	at ewe.ui.Menu.postEvent(Menu.java:453)
	at ewe.ui.Control.notifyAction(Control.java:1795)
	at ewe.ui.Menu.penReleased(Menu.java:228)
	at ewe.ui.Control.penClicked(Control.java:2376)
	at ewe.ui.Control.onPenEvent(Control.java:2144)
	at ewe.ui.Menu.onPenEvent(Menu.java:212)
	at ewe.ui.Control.onEvent(Control.java:1439)
	at ewe.ui.Menu.onEvent(Menu.java:508)
	at ewe.ui.Control.postEvent(Control.java:1375)
	at ewe.ui.Menu.postEvent(Menu.java:453)
	at ewe.ui.Window.doPostEvent(Window.java:1200)
	at ewe.ui.Window$windowThread.run(Window.java:858)
	at ewe.sys.mThread.run(mThread.java:250)
	at ewe.sys.Coroutine.run(Coroutine.java:145)

Auswirkung:
CacheWolf "bleibt stehen"

Reprodukzierbarkeit:
Import eines korrupten zip archivs (CRC fehler)

> unzip -t 3507137.zip
Archive:  3507137.zip
    testing: 3507137-wpts.gpx         OK
    testing: 3507137.gpx              bad CRC 2a8f5512  (should be d227027e)
At least one error was detected in 3507137.zip.


For detailed info, follow this link:
http://developer.berlios.de/bugs/?func=detailbug&bug_id=16194&group_id=2211


From pfeffer at mail.berlios.de  Sat Aug 29 13:42:46 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Sat, 29 Aug 2009 13:42:46 +0200
Subject: [Cachewolf-svn] r2109 - in trunk: lib/com/bbn/openmap
	lib/com/bbn/openmap/proj lib/com/bbn/openmap/proj/coords
	lib/com/bbn/openmap/util res_noewe/languages
	res_noewe/webmapservices src/CacheWolf src/CacheWolf/exp
	src/CacheWolf/imp src/CacheWolf/navi
Message-ID: <200908291142.n7TBgkIU004945@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-29 13:42:30 +0200 (Sat, 29 Aug 2009)
New Revision: 2109

Added:
   trunk/res_noewe/webmapservices/region_at_hu_cz.wms
   trunk/src/CacheWolf/navi/UTMProjection.java
Removed:
   trunk/lib/com/bbn/openmap/LatLonPoint.class
   trunk/lib/com/bbn/openmap/MoreMath.class
   trunk/lib/com/bbn/openmap/proj/AziDist.class
   trunk/lib/com/bbn/openmap/proj/Ellipsoid.class
   trunk/lib/com/bbn/openmap/proj/GreatCircle.class
   trunk/lib/com/bbn/openmap/proj/Length.class
   trunk/lib/com/bbn/openmap/proj/Planet.class
   trunk/lib/com/bbn/openmap/proj/ProjMath.class
   trunk/lib/com/bbn/openmap/proj/coords/DMSLatLonPoint.class
   trunk/lib/com/bbn/openmap/proj/coords/MGRSPoint.class
   trunk/lib/com/bbn/openmap/proj/coords/UTMPoint.class
   trunk/lib/com/bbn/openmap/util/ArgParser$Arg.class
   trunk/lib/com/bbn/openmap/util/ArgParser$HelpArg.class
   trunk/lib/com/bbn/openmap/util/ArgParser.class
   trunk/lib/com/bbn/openmap/util/Assert.class
   trunk/lib/com/bbn/openmap/util/AssertionException.class
Modified:
   trunk/res_noewe/languages/DE.cfg
   trunk/res_noewe/languages/EN.cfg
   trunk/res_noewe/languages/FR.cfg
   trunk/res_noewe/languages/NL.cfg
   trunk/src/CacheWolf/CWPoint.java
   trunk/src/CacheWolf/CalcPanel.java
   trunk/src/CacheWolf/Common.java
   trunk/src/CacheWolf/CoordsScreen.java
   trunk/src/CacheWolf/DetailsPanel.java
   trunk/src/CacheWolf/Filter.java
   trunk/src/CacheWolf/NewProfileWizard.java
   trunk/src/CacheWolf/Parser.java
   trunk/src/CacheWolf/Preferences.java
   trunk/src/CacheWolf/Profile.java
   trunk/src/CacheWolf/ProfileDataForm.java
   trunk/src/CacheWolf/Test.java
   trunk/src/CacheWolf/exp/OVLExporter.java
   trunk/src/CacheWolf/imp/OCXMLImporter.java
   trunk/src/CacheWolf/imp/SpiderGC.java
   trunk/src/CacheWolf/navi/CWGPSPoint.java
   trunk/src/CacheWolf/navi/GkProjection.java
   trunk/src/CacheWolf/navi/GotoPanel.java
   trunk/src/CacheWolf/navi/LambertProjection.java
   trunk/src/CacheWolf/navi/MapImporter.java
   trunk/src/CacheWolf/navi/MapInfoObject.java
   trunk/src/CacheWolf/navi/MapLoader.java
   trunk/src/CacheWolf/navi/MapLoaderGui.java
   trunk/src/CacheWolf/navi/ProjectedPoint.java
   trunk/src/CacheWolf/navi/Projection.java
   trunk/src/CacheWolf/navi/TransformCoordinates.java
Log:
CoordsScreen / CalcPanel / Solver / GotoPanel: make the implemented coordinate reference transformation available to the GUI
TransformCoordinates: implemented UTM, removed lib openmap

Deleted: trunk/lib/com/bbn/openmap/LatLonPoint.class
===================================================================
(Binary files differ)

Deleted: trunk/lib/com/bbn/openmap/MoreMath.class
===================================================================
(Binary files differ)

Deleted: trunk/lib/com/bbn/openmap/proj/AziDist.class
===================================================================
(Binary files differ)

Deleted: trunk/lib/com/bbn/openmap/proj/Ellipsoid.class
===================================================================
(Binary files differ)

Deleted: trunk/lib/com/bbn/openmap/proj/GreatCircle.class
===================================================================
(Binary files differ)

Deleted: trunk/lib/com/bbn/openmap/proj/Length.class
===================================================================
(Binary files differ)

Deleted: trunk/lib/com/bbn/openmap/proj/Planet.class
===================================================================
(Binary files differ)

Deleted: trunk/lib/com/bbn/openmap/proj/ProjMath.class
===================================================================
(Binary files differ)

Deleted: trunk/lib/com/bbn/openmap/proj/coords/DMSLatLonPoint.class
===================================================================
(Binary files differ)

Deleted: trunk/lib/com/bbn/openmap/proj/coords/MGRSPoint.class
===================================================================
(Binary files differ)

Deleted: trunk/lib/com/bbn/openmap/proj/coords/UTMPoint.class
===================================================================
(Binary files differ)

Deleted: trunk/lib/com/bbn/openmap/util/ArgParser$Arg.class
===================================================================
(Binary files differ)

Deleted: trunk/lib/com/bbn/openmap/util/ArgParser$HelpArg.class
===================================================================
(Binary files differ)

Deleted: trunk/lib/com/bbn/openmap/util/ArgParser.class
===================================================================
(Binary files differ)

Deleted: trunk/lib/com/bbn/openmap/util/Assert.class
===================================================================
(Binary files differ)

Deleted: trunk/lib/com/bbn/openmap/util/AssertionException.class
===================================================================
(Binary files differ)

Modified: trunk/res_noewe/languages/DE.cfg
===================================================================
--- trunk/res_noewe/languages/DE.cfg	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/res_noewe/languages/DE.cfg	2009-08-29 11:42:30 UTC (rev 2109)
@@ -459,7 +459,7 @@
 		1710=Kann leere Zeichenkette nicht z%e4hlen
 		1711=Ersatzzeichenketten m%fcssen gleiche L%e4nge haben
 		1712=Unzul%e4ssige Koordinate:
-		1713=Falsches Koordinatenformat. Erlaubt sind CW/DD/DMM/DMS/UTM
+		1713=Falsches Koordinatenformat. Erlaubt sind cw / dd / dmm / dms /+
 		1714=Goto: Wegpunkt existiert nicht:
 		1715=instr: Startposition nicht in Zeichenkette
 		1716=mid: Ganzzahliger Parameter erwartet

Modified: trunk/res_noewe/languages/EN.cfg
===================================================================
--- trunk/res_noewe/languages/EN.cfg	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/res_noewe/languages/EN.cfg	2009-08-29 11:42:30 UTC (rev 2109)
@@ -459,7 +459,7 @@
 		1710=Cannot count empty string
 		1711=Replacement characters strings must be of equal length
 		1712=Invalid coordinate:
-		1713=Invalid coordinate format. Allowed are CW/DD/DMM/DMS/UTM
+		1713=Invalid coordinate format. Allowed are cw / dd / dmm / dms /+
 		1714=Goto: Waypoint does not exist:
 		1715=instr: Start position not in string
 		1716=mid: Integer argument expected

Modified: trunk/res_noewe/languages/FR.cfg
===================================================================
--- trunk/res_noewe/languages/FR.cfg	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/res_noewe/languages/FR.cfg	2009-08-29 11:42:30 UTC (rev 2109)
@@ -442,7 +442,7 @@
 		1710=Ne peut pas compter cha%eene de caract%e8res vide
 		1711=Cha%eenes de caract%e8res de remplacement doivent avoir la m?me longuer
 		1712=Coordonn%e9e invalide: 
-		1713=Format de coordonn%e9es pas valide. Faut avoir CW/DD/DMM/DMS/UTM
+		1713=Format de coordonn%e9es pas valide. Faut avoir cw / dd / dmm / dms /+
 		1714=Goto: Waypoint n'existe pas: 
 		1715=instr: Position de d%e9part pas en cha%eene de caract%e8re
 		1716=mid: Attendu param%e8tre en nombre entier

Modified: trunk/res_noewe/languages/NL.cfg
===================================================================
--- trunk/res_noewe/languages/NL.cfg	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/res_noewe/languages/NL.cfg	2009-08-29 11:42:30 UTC (rev 2109)
@@ -406,7 +406,7 @@
 		1710=Kan de lege string niet tellen.
 		1711=Gekopieerde karakter strings moeten van dezelfde lengte zijn.
 		1712=Ongeldige co%f6rdinaten:
-		1713=Ongeldig co%f6rdinaat formaat. Toegestaan zijn CW/DD/DMM/DMS/UTM
+		1713=Ongeldig co%f6rdinaat formaat. Toegestaan zijn cw / dd / dmm / dms /+
 		1714=Ga naar: Waypoint bestaat niet:
 		1715=Instr: Start co%f6rdinaat niet in string.
 		1716=Mid: Geheel getal verwacht.

Added: trunk/res_noewe/webmapservices/region_at_hu_cz.wms
===================================================================
--- trunk/res_noewe/webmapservices/region_at_hu_cz.wms	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/res_noewe/webmapservices/region_at_hu_cz.wms	2009-08-29 11:42:30 UTC (rev 2109)
@@ -0,0 +1,42 @@
+TakenFromUrl:   http://www.centropemap.org
+GetCapabilitiesUrl:   http://www.centropemap.org/cgi-bin/mapserv?map=/data/wms/centrope/ce_administrative_units_bordersonly.map&VERSION=1.1.1&REQUEST=GetCapabilities&SERVICE=WMS
+Name:   at photo lambert
+MapType:   photo
+MainUrl:   http://www.centropemap.org/cgi-bin/mapserv?map=/data/wms/centrope/ce_administrative_units_bordersonly.map
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:   31287
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:31287
+RequestUrlPart:   REQUEST=GetMap
+#LayersUrlPart:   LAYERS=Bezirke        <ScaleHint min="0.935071009578714" max="187.08941170883" /> 
+#LayersUrlPart:   LAYERS=Gemeinden      <ScaleHint min="0.935071009578714" max="187.08866335268" /> 
+#LayersUrlPart:   LAYERS=Landesgrenzen      <ScaleHint min="0.935071009578714" max="9354.45187653775" />
+#LayersUrlPart:   LAYERS=Natura2000_SPA     <ScaleHint min="0.935071009578714" max="1870.89074948563" /> Natura 2000 Vogelschutzrichtlinie (SPA)
+#LayersUrlPart:   LAYERS=Natura2000_pSCI    <ScaleHint min="0.935071009578714" max="1870.89074948563" /> Natura 2000 Habitatrichtlinie (SCI)
+#LayersUrlPart:   LAYERS=Naturpark      <ScaleHint min="0.935071009578714" max="1870.89074948563" /> 
+#LayersUrlPart:   LAYERS=Landschaftsschutzgebiet<ScaleHint min="0.935071009578714" max="1870.89074948563" /> 
+#LayersUrlPart:   LAYERS=Nationalpark       <ScaleHint min="0.935071009578714" max="1870.89074948563" /> 
+#LayersUrlPart:   LAYERS=Naturschutzgebiet  <ScaleHint min="0.935071009578714" max="1870.89074948563" /> 
+#LayersUrlPart:   LAYERS=Autobahn       <ScaleHint min="0.935071009578714" max="748.356524301095" />
+#LayersUrlPart:   LAYERS=Landesstr_B        <ScaleHint min="0.935071009578714" max="748.356524301095" /> 
+#LayersUrlPart:   LAYERS=Landesstr_L        <ScaleHint min="0.935071009578714" max="187.08941170883" />
+#LayersUrlPart:   LAYERS=Orientierungskarte <ScaleHint min="0" max="9.35482605461281" />
+#LayersUrlPart:   LAYERS=S/W-Orthofoto      <ScaleHint min="0.935071009578714" max="9.35482605461281" />
+#LayersUrlPart:   LAYERS=Radwanderrouten    <ScaleHint min="3.74140657254004" max="187.08941170883" /> 
+#LayersUrlPart:   LAYERS=Startbild      <ScaleHint min="74.8363633684521" max="3741.78112479318" /> Hintergrund
+#LayersUrlPart:   LAYERS=Geonamen       <ScaleHint min="0.935071009578714" max="5.61229694784759" /> Orts- und Flurnamen
+#LayersUrlPart:   LAYERS=Flug_Orthofoto     <ScaleHint min="0.935071009578714" max="1870.89074948563" /> Flugjahr Orthofoto
+#LayersUrlPart:   LAYERS=Flug_ALS       <ScaleHint min="0.935071009578714" max="1870.89074948563" /> Flugjahr Laserscanning
+#LayersUrlPart:   LAYERS=S/W-Orthofoto,Bezirke,Gemeinden,Landesgrenzen,Autobahn,Landesstr_B,Landesstr_L,Radwanderrouten
+LayersUrlPart:   LAYERS=S/W-Orthofoto,Orientierungskarte,Geonamen,Autobahn,Landesstr_B,Landesstr_L,Radwanderrouten
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 49.027050  E 9.529250
+BoundingBoxButtomRightWGS84:   N 46.357433 E 17.202733
+MinScale:   0
+MaxScale:   45
+RecommendedScale:   1
+ImageFileExtension: .png
+# nicht ?berall Luftbilder
+# nicht ?berall gut kalibriert
+# bis Skalierung 4,3 gibts noch Fotos, ab 4,5 nur noch Strassen (schlecht kalibriert)

Modified: trunk/src/CacheWolf/CWPoint.java
===================================================================
--- trunk/src/CacheWolf/CWPoint.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/CWPoint.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -1,13 +1,11 @@
 package CacheWolf;
 
-import ewe.sys.Convert;
+
 import CacheWolf.navi.ProjectedPoint;
 import CacheWolf.navi.TrackPoint;
 import CacheWolf.navi.TransformCoordinates;
 import CacheWolf.navi.GeodeticCalculator;
 
-import com.bbn.openmap.proj.coords.*;
-import com.bbn.openmap.*;
 import com.stevesoft.ewe_pat.Regex;
 
 /**
@@ -17,19 +15,14 @@
  *
  */
 public class CWPoint extends TrackPoint{
-	public MGRSPoint utm = new MGRSPoint();
-	public boolean utmValid = false;
-
-	public static final int DD = 0;
-	public static final int DMM = 1;
-	public static final int DMS = 2;
-	public static final int UTM = 3;
-	public static final int GK = 4;
-	public static final int CW = 5;
-	public static final int REGEX = 6;
-	public static final int LAT_LON = 7;
-	public static final int LON_LAT = 8;
 	
+	public static final int CW 		= TransformCoordinates.CW;
+	public static final int DD 		= TransformCoordinates.DD;
+	public static final int DMM 	= TransformCoordinates.DMM;
+	public static final int LAT_LON	= TransformCoordinates.LAT_LON;
+	public static final int LON_LAT	= TransformCoordinates.LON_LAT;
+	public static final int UTM 	= TransformCoordinates.UTM;
+
 	/** Degrees/Radians conversion constant. */
 	static private final double PiOver180 = Math.PI / 180.0;	
 
@@ -40,7 +33,6 @@
 	 */
 	public CWPoint(double lat, double lon) {
 		super(lat, lon);
-		this.utmValid = false;
 	}
 
 	/**
@@ -49,20 +41,10 @@
 	
 	public CWPoint() {
 		super(-361,-361); // construct with unvalid == unset lat/lon 
-		this.utmValid = false;
 		
 	}
 
-	/**
-	 * Create CWPoint by using a LatLonPoint 
-	 * @param CWPoint LatLonPoint
-	 */
 
-	public CWPoint(LatLonPoint llPoint){
-		super (llPoint.getLatitude(), llPoint.getLongitude());
-		this.utmValid = false;
-	}
-
 	/**
 	 * Create CWPoint by using a CWPoint 
 	 * @param CWPoint LatLonPoint
@@ -70,7 +52,6 @@
 
 	public CWPoint(TrackPoint cwPoint){
 		super(cwPoint.latDec, cwPoint.lonDec);
-		this.utmValid = false;
 	}
 
 	
@@ -126,20 +107,9 @@
 	public void set (double lat, double lon){
 		this.latDec = lat;
 		this.lonDec = lon;
-		this.utmValid = false;
 	}
 
-	/**
-	 * Set CWPoint by using a LatLonPoint 
-	 * @param CWPoint LatLonPoint
-	 */
 
-	public void set (LatLonPoint llPoint){
-		this.latDec = llPoint.getLatitude();
-		this.lonDec = llPoint.getLongitude();
-		this.utmValid = false;
-	}
-
 	/**
 	 * Set CWPoint by using a CWPoint 
 	 * @param CWPoint cwPointt
@@ -148,7 +118,6 @@
 	public void set (TrackPoint cwPoint){
 		this.latDec = cwPoint.latDec;
 		this.lonDec = cwPoint.lonDec;
-		this.utmValid = false;
 	}
 
 	
@@ -161,7 +130,7 @@
 
 		if (coord!=null) {
 			switch (format){
-			case CW: 	ParseLatLon pll = new ParseLatLon (coord);
+			case TransformCoordinates.CW: 	ParseLatLon pll = new ParseLatLon (coord);
 				try {
 					pll.parse();
 					this.latDec = pll.lat2;
@@ -171,7 +140,7 @@
 					this.lonDec = 361;
 					break;
 				}
-			case REGEX: set(coord);
+			case TransformCoordinates.REGEX: set(coord);
 			break;
 
 			default: 	this.latDec = 91; this.lonDec = 361;
@@ -179,7 +148,6 @@
 		} else { 
 			this.latDec = 91; this.lonDec = 361;
 		}
-		this.utmValid = false;
 	}
 
 
@@ -201,7 +169,12 @@
 					)|(?: 
 					   ([0-9]{1,2}[C-HJ-PQ-X])\s*[EeOo]?\s*([0-9]{1,7})\s+[Nn]?\s*([0-9]{1,7}) 
 					)
-		*/		
+		*/	
+	String crsid = null;
+	if (coord.charAt(2)=='.') { // first 2 letters = Internet domain of projected area
+		crsid = coord.substring(0, coord.indexOf(' '));
+		coord = coord.substring(coord.indexOf(' ') + 1, coord.length());
+	}
 				Regex rex=new Regex("(?:" +
 									"([NSns])\\s*([0-9]{1,2})(?:[?\uC2B0]\\s*|\\s+[?\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['?]\\s*|\\s+['?]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['?\"]?\\s*" +
 									"[,./_;+:-]*\\s*" + // allow N xx xx.xxx / E xxx xx.xxx
@@ -214,30 +187,36 @@
 									"([0-9]{1,2}[C-HJ-PQ-X])\\s*[EeOo]?\\s*([0-9]{1,7})\\s+[Nn]?\\s*([0-9]{1,7})" +
 									")|(?:" +
 									"[Rr]:?\\s*([+-]?[0-9]{1,7})\\s+[Hh]:?\\s*([+-]?[0-9]{1,7})" +
+									")|(?:" + 
+									"([\\-]{0,1}[0-9]{1,8})\\s+([\\-]{0,1}[0-9]{1,8})" + // projected easting northing  
 									")"); 
-				this.latDec = -91; // return unset / unvalid values if parsing was not successfull
-				this.lonDec = -361;
+				this.makeInvalid(); //return unset / unvalid values if parsing was not successfull
 				rex.search(coord);
 				if (rex.stringMatched(1)!= null) { // Std format
-					// Handle "E" oder "O" for longitiude
+					// Handle "E" or "O" for longitiude
 					String strEW = rex.stringMatched(6).toUpperCase();
 					if (!strEW.equals("W")) strEW = "E";
 					if (rex.stringMatched(4)!=null){ //Seconds available
 						set(rex.stringMatched(1).toUpperCase(), rex.stringMatched(2),rex.stringMatched(3),rex.stringMatched(4) + "." + rex.stringMatched(5),
-							strEW, rex.stringMatched(7),rex.stringMatched(8),rex.stringMatched(9) + "." + rex.stringMatched(10),DMS);
+							strEW, rex.stringMatched(7),rex.stringMatched(8),rex.stringMatched(9) + "." + rex.stringMatched(10),TransformCoordinates.DMS);
 					} else {
 						set(rex.stringMatched(1).toUpperCase(), rex.stringMatched(2),rex.stringMatched(3)+ "." + rex.stringMatched(5), null,
-							strEW, rex.stringMatched(7),rex.stringMatched(8)+ "." + rex.stringMatched(10), null, DMM);
+							strEW, rex.stringMatched(7),rex.stringMatched(8)+ "." + rex.stringMatched(10), null, TransformCoordinates.DMM);
 					}
 						
 				} else if (rex.stringMatched(12) != null){ // Decimal
-					
 					set(rex.stringMatched(11)==null?"N":rex.stringMatched(11).toUpperCase(), rex.stringMatched(12)+ "." + rex.stringMatched(13), null, null,
-						rex.stringMatched(14)==null?"E":rex.stringMatched(14).toUpperCase(), rex.stringMatched(15)+ "." + rex.stringMatched(16), null, null, DD);
+						rex.stringMatched(14)==null?"E":rex.stringMatched(14).toUpperCase(), rex.stringMatched(15)+ "." + rex.stringMatched(16), null, null, TransformCoordinates.DD);
 				} else if (rex.stringMatched(17) != null){ // UTM
-					set(rex.stringMatched(17),rex.stringMatched(19),rex.stringMatched(18)); //parse sequence is E N, but set needs N E
+					set(rex.stringMatched(19), rex.stringMatched(18), rex.stringMatched(17)); //parse sequence is E N, but set needs N E
 				} else if (rex.stringMatched(20) != null){ // GK
-					set(rex.stringMatched(21),rex.stringMatched(20));
+					set(rex.stringMatched(21),rex.stringMatched(20), TransformCoordinates.LOCALSYSTEM_DEFAULT);
+				} else if (rex.stringMatched(22) != null) { // general projected coordinate reference system
+					if (crsid != null) {
+						int ls = TransformCoordinates.getLocalSystemCode(crsid);
+						if (ls == -1) makeInvalid();
+						else set(rex.stringMatched(23), rex.stringMatched(22), ls);
+					}
 				}
 				//else Vm.debug("CWPoint: "+coord+" could not be parsed");
 			}	/**
@@ -256,13 +235,13 @@
 		     String strLonEW, String strLonDeg, String strLonMin, String strLonSec,
 		     int format) {
 		switch (format){
-			case DD: 	this.latDec = Common.parseDouble(strLatDeg);
+			case TransformCoordinates.DD: 	this.latDec = Common.parseDouble(strLatDeg);
 						this.lonDec = Common.parseDouble(strLonDeg);
 						break;
-			case DMM: 	this.latDec = Math.abs(Common.parseDouble(strLatDeg)) + Math.abs((Common.parseDouble(strLatMin)/60));
+			case TransformCoordinates.DMM: 	this.latDec = Math.abs(Common.parseDouble(strLatDeg)) + Math.abs((Common.parseDouble(strLatMin)/60));
 						this.lonDec = Math.abs(Common.parseDouble(strLonDeg)) + Math.abs((Common.parseDouble(strLonMin)/60));
 						break;
-			case DMS: 	this.latDec = Math.abs(Common.parseDouble(strLatDeg)) + Math.abs((Common.parseDouble(strLatMin)/60))+Math.abs((Common.parseDouble(strLatSec)/3600));
+			case TransformCoordinates.DMS: 	this.latDec = Math.abs(Common.parseDouble(strLatDeg)) + Math.abs((Common.parseDouble(strLatMin)/60))+Math.abs((Common.parseDouble(strLatSec)/3600));
 						this.lonDec = Math.abs(Common.parseDouble(strLonDeg)) + Math.abs((Common.parseDouble(strLonMin)/60))+Math.abs((Common.parseDouble(strLonSec)/3600));
 						break;
 			
@@ -272,8 +251,18 @@
 		// To avoid changing sign twice if we have something like W -34.2345
 		if (strLatNS.trim().equals("S") && this.latDec>0) this.latDec *= -1;
 		if (strLonEW.trim().equals("W") && this.lonDec>0) this.lonDec *= -1;
-		this.utmValid = false;
 	}
+	
+	/**
+	 * sets by UTM with respect to WGS84
+	 * @param UTMNorthing
+	 * @param UTMEasting
+	 * @param utmzone
+	 */
+	public void set(String UTMNorthing, String UTMEasting, String utmzone){
+		ProjectedPoint utm = new ProjectedPoint(new CWPoint(Common.parseDouble(UTMNorthing), Common.parseDouble(UTMEasting)), utmzone, TransformCoordinates.LOCALSYSTEM_UTM_WGS84, true);
+		set(TransformCoordinates.ProjectedToWgs84(utm, TransformCoordinates.LOCALSYSTEM_UTM_WGS84, true));
+	}
 
 	
 	/**
@@ -298,49 +287,39 @@
 		lonDec = 91;
 	}
 
+	
 	/**
-	 * set lat and lon by using UTM coordinates  
-	 * @param strZone UTM-zone, e.g. 32U
-	 * @param strNorthing Northing component
+	 * set lat and lon by using a local coordinates system  
 	 * @param strEasting  Easting component
+	 * @param strNorthing Northing component
+	 * @param localCooSystem one of TransformCoordinates.LOCALSYSTEM_XXX
 	 */
-	public void set ( String strZone, String strNorthing, String strEasting){
-		LatLonPoint ll =  new LatLonPoint();
-		
-		utm.zone_letter = strZone.charAt(strZone.length()-1);
-		utm.zone_number = Convert.toInt(strZone.substring(0,strZone.length()-1));
-		utm.northing = (float) Common.parseDouble(strNorthing);
-		utm.easting = (float) Common.parseDouble(strEasting);
-		
-		ll = utm.toLatLonPoint(); // returns null if unvalit UTM-coordinates
-		if (ll != null) { 
-			this.utmValid = true;
-			this.latDec = ll.getLatitude();
-			this.lonDec = ll.getLongitude();
-		} else {this.latDec = 91; this.lonDec = 361; }
+	public void set (String strNorthing, String strEasting, int localCooSystem){
+		CWPoint pp = new CWPoint(Common.parseDouble(strNorthing),Common.parseDouble(strEasting));
+		ProjectedPoint gk = new ProjectedPoint(pp, localCooSystem, true, true);
+		set(TransformCoordinates.ProjectedToWgs84(gk, localCooSystem, true));
 	}
-	
+
 	/**
-	 * set lat and lon by using GK coordinates  
+	 * set lat and lon by using UTM coordinates  
 	 * @param strEasting  Easting component
 	 * @param strNorthing Northing component
+	 * @param localCooSystem one of TransformCoordinates.LOCALSYSTEM_XXX which requires an explicit zone
 	 */
-	public void set (String strNorthing, String strEasting){
+	public void set (String strNorthing, String strEasting, String zone, int localCooSystem){
 		CWPoint pp = new CWPoint(Common.parseDouble(strNorthing),Common.parseDouble(strEasting));
-		ProjectedPoint gk = new ProjectedPoint(pp, ProjectedPoint.LOCALSYSTEM_DEFAULT, true, true);
-		set(TransformCoordinates.ProjectedToWgs84(gk, ProjectedPoint.LOCALSYSTEM_DEFAULT, true));
+		ProjectedPoint gk = new ProjectedPoint(pp, zone, localCooSystem, true);
+		set(TransformCoordinates.ProjectedToWgs84(gk, localCooSystem, true));
 	}
-
 	/**
 	 * Get degrees of latitude in different formats
 	 * @param format	Format: DD, DMM, DMS,
 	 */
 	public String getLatDeg(int format) {
 		switch (format) {
-		case DD: 	return MyLocale.formatDouble(this.latDec, "00.00000").replace(',','.');
-		case CW:
-		case DMM:
-		case DMS:	return getDMS(latDec,0,format);
+		case TransformCoordinates.DD: 	return MyLocale.formatDouble(this.latDec, "00.00000").replace(',','.');
+		case TransformCoordinates.DMM:
+		case TransformCoordinates.DMS:	return getDMS(latDec,0,format);
 		default: return "";
 		}
 	}
@@ -351,10 +330,9 @@
 	 */
 	public String getLonDeg(int format) {
 		switch (format) {
-		case DD: 	return MyLocale.formatDouble(this.lonDec, "000.00000").replace(',','.');
-		case CW:
-		case DMM:
-		case DMS:	return (((lonDec<100.0) && (lonDec>-100.0))?"0":"")+getDMS(lonDec,0,format);
+		case TransformCoordinates.DD: 	return MyLocale.formatDouble(this.lonDec, "000.00000").replace(',','.');
+		case TransformCoordinates.DMM:
+		case TransformCoordinates.DMS:	return (((lonDec<100.0) && (lonDec>-100.0))?"0":"")+getDMS(lonDec,0,format);
 		default: 	return ""; 
 		}
 	}
@@ -406,9 +384,8 @@
 		double tmpMin, tmpSec;
 		tmpMin= (deg - iDeg)*60.0;
 		switch(format) {
-			case DD: return "";
-			case CW:
-			case DMM: 	
+			case TransformCoordinates.DD: return "";
+			case TransformCoordinates.DMM: 	
 			    // Need to check if minutes would round up to 60
 				if (java.lang.Math.round(tmpMin*1000.0) == 60000) { tmpMin =0;  iDeg++; }
 				switch (what) {
@@ -416,7 +393,7 @@
 					case 1: return MyLocale.formatDouble(tmpMin, "00.000").replace(',','.');
 					case 2: return "";
 				}
-			case DMS:
+			case TransformCoordinates.DMS:
 				tmpSec= (tmpMin - (int)tmpMin) * 60.0;
 				tmpMin=(int) tmpMin;
 				// Check if seconds round up to 60 
@@ -455,59 +432,6 @@
 	}
 
 	/**
-	 * Get UTMzonenumber, e.g. 32U
-	 */
-	public String getUTMZone(){
-		checkUTMvalid();
-		return Convert.toString(utm.zone_number) + utm.zone_letter;
-	}
-	
-	/**
-	 * Get UTM northing
-	 */
-	public String getUTMNorthing(){
-		checkUTMvalid();
-		return Convert.toString((long)utm.northing).replace(',','.');
-	}
-
-	/**
-	 * Get UTM easting
-	 */
-	public String getUTMEasting() {
-		checkUTMvalid();
-		return Convert.toString((long)utm.easting).replace(',','.');
-	}
-	
-	/**
-	 * Get GK northing
-	 */
-	public String getGKNorthing(int decimalplaces){
-		double gkNorthing = TransformCoordinates.wgs84ToLocalsystem(this, ProjectedPoint.LOCALSYSTEM_DEFAULT).getNorthing();
-		
-		ewe.sys.Double n = new ewe.sys.Double();
-		n.set(gkNorthing);
-		n.decimalPlaces = decimalplaces;
-		return n.toString().replace(',', '.');
-	}
-
-	/**
-	 * Get GK easting
-	 */
-	public String getGKEasting(int decimalplaces) {
-		double gkEasting = TransformCoordinates.wgs84ToLocalsystem(this, ProjectedPoint.LOCALSYSTEM_DEFAULT).getEasting();
-		
-		ewe.sys.Double e = new ewe.sys.Double();
-		e.set(gkEasting);
-		e.decimalPlaces = decimalplaces;
-		return e.toString().replace(',', '.');
-	}
-	
-	public String getGermanGkCoordinates() {
-		return TransformCoordinates.wgs84ToLocalsystem(this, ProjectedPoint.LOCALSYSTEM_DEFAULT).toString(0, "R:", " H:");
-	}
-
-	
-	/**
 	 * Method to calculate a projected waypoint
 	 * @param degrees Bearing
 	 * @param distance Distance in km
@@ -597,7 +521,7 @@
 	 * @return  string like N 49? 33.167 E 011? 21.608 
 	 */	
 	public String toString(){
-		return toString(CW);
+		return toString(TransformCoordinates.CW);
 		
 	}
 	/**
@@ -608,36 +532,21 @@
 	public String toString(int format){
 		if (!isValid()) return MyLocale.getMsg(999,"not set");
 		switch (format) {
-		case DD:	return getNSLetter() + " " + STRreplace.replace(getLatDeg(format),"-","") + "? "
+		case TransformCoordinates.DD:	return getNSLetter() + " " + STRreplace.replace(getLatDeg(format),"-","") + "? "
 						+  getEWLetter() + " " + STRreplace.replace(getLonDeg(format),"-","")+ "?";
-		case CW:	format = DMM;	
-					return getNSLetter() + " " + getLatDeg(format) + "? " + getLatMin(format) + " "
+		case TransformCoordinates.DMM:	return getNSLetter() + " " + getLatDeg(format) + "? " + getLatMin(format) + " "
 						+  getEWLetter() + " " + getLonDeg(format) + "? " + getLonMin(format);
-		case DMM:	return getNSLetter() + " " + getLatDeg(format) + "? " + getLatMin(format) + " "
-						+  getEWLetter() + " " + getLonDeg(format) + "? " + getLonMin(format);
-		case DMS:	return getNSLetter() + " " + getLatDeg(format) + "? " + getLatMin(format) + "\' " + getLatSec(format) + "\" " 
+		case TransformCoordinates.DMS:	return getNSLetter() + " " + getLatDeg(format) + "? " + getLatMin(format) + "\' " + getLatSec(format) + "\" " 
 						+  getEWLetter() + " " + getLonDeg(format) + "? " + getLonMin(format) + "\' " + getLonSec(format) + "\"";
-		case UTM:	return getUTMZone()  + " E " + getUTMEasting()+ " N " + getUTMNorthing();
-		case LON_LAT:
-			return Common.DoubleToString(lonDec, 8) +  "," + Common.DoubleToString(latDec, 8);
-		case LAT_LON:
-			return Common.DoubleToString(latDec, 8) +  "," + Common.DoubleToString(lonDec, 8);
-		case GK:
-			return getGermanGkCoordinates();
-		default: return "Unknown Format: " + format;
+		//case TransformCoordinates.UTM: 	return TransformCoordinates.wgs84ToLocalsystem(this, TransformCoordinates.LOCALSYSTEM_UTM_WGS84).toHumanReadableString();
+		//case TransformCoordinates.CUSTOM:	return getGermanGkCoordinates();
+		default: return TransformCoordinates.getLocalSystem(format).id + " " + TransformCoordinates.wgs84ToLocalsystem(this, format).toHumanReadableString();
+			//return "Unknown Format: " + format;
 
 		}
 
 	}
 	
-	/**
-	 * Checks, if the data of utm is valid, if not, utm ist calculated
-	 */	
-	private void checkUTMvalid() {
-		if (this.utmValid) return;
-		this.utm = MGRSPoint.LLtoMGRS(new LatLonPoint(this.latDec, this.lonDec));
-		this.utmValid = true;
-	}
 	
 	/**
 	*	Method to identify one of 16 compass directions based

Modified: trunk/src/CacheWolf/CalcPanel.java
===================================================================
--- trunk/src/CacheWolf/CalcPanel.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/CalcPanel.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -1,6 +1,7 @@
 package CacheWolf;
 
 import CacheWolf.navi.Metrics;
+import CacheWolf.navi.TransformCoordinates;
 import ewe.ui.*;
 import ewe.ui.formatted.TextDisplay;
 import ewe.fx.Dimension;
@@ -30,10 +31,11 @@
 	}
 }
 
-public class CalcPanel extends CellPanel {
+public final class CalcPanel extends CellPanel {
 
-	mCheckBox chkDMM, chkDMS, chkDD, chkUTM, chkGK;
+	mCheckBox chkDMM, chkDMS, chkDD, chkCustom;
 	CheckBoxGroup chkFormat = new CheckBoxGroup();
+	mChoice localCooSystem;
 	mChoice chcDistUnit;
 	mInput inpBearing, inpDistance, inpText;
 	TextDisplay txtOutput;
@@ -65,15 +67,17 @@
 		TopP.addNext(chkDD =new mCheckBox("d.d?"),CellConstants.DONTSTRETCH, CellConstants.WEST);
 		TopP.addNext(chkDMM =new mCheckBox("d?m.m\'"),CellConstants.DONTSTRETCH, CellConstants.WEST);
 		TopP.addNext(chkDMS =new mCheckBox("d?m\'s\""),CellConstants.DONTSTRETCH,CellConstants.WEST);
-		TopP.addNext(chkUTM =new mCheckBox("UTM"),CellConstants.DONTSTRETCH, CellConstants.WEST);
-		TopP.addLast(chkGK =new mCheckBox("GK"),CellConstants.DONTSTRETCH, CellConstants.WEST);
+		TopP.addNext(chkCustom =new mCheckBox(""),CellConstants.DONTSTRETCH, CellConstants.WEST);
 
 		chkDD.setGroup(chkFormat);
 		chkDMM.setGroup(chkFormat);
 		chkDMS.setGroup(chkFormat);
-		chkUTM.setGroup(chkFormat);
-		chkGK.setGroup(chkFormat);
-		chkFormat.setInt(CWPoint.DMM);
+		chkCustom.setGroup(chkFormat);
+		chkFormat.setInt(2);
+		currFormat = 2;
+		String[] ls = TransformCoordinates.getProjectedSystemNames();
+		TopP.addLast(localCooSystem = new mChoice(ls, 0),CellConstants.DONTSTRETCH, CellConstants.WEST);
+
 		btnChangeLatLon=new mButton();
 		TopP.addLast(btnChangeLatLon,CellConstants.HSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
 		//inpBearing and direction, unit for inpDistance
@@ -113,9 +117,13 @@
 		
 	}
 	
-	public void readFields(CWPoint coords, BearingDistance degKm, int format){
-		coords.set(btnChangeLatLon.getText());
-		currFormat = chkFormat.getSelectedIndex();
+	private final int getLocalCooSystem() {
+		return CoordsScreen.getLocalSystem(currFormat);
+	}
+	
+	public final void readFields(CWPoint coords, BearingDistance degKm){
+		// coords.set(btnChangeLatLon.getText());
+		currFormat = CoordsScreen.combineToFormatSel(chkFormat.getSelectedIndex(), localCooSystem.getInt());
 		degKm.degrees = Common.parseDouble(inpBearing.getText());
 		
 		double rawDistance = Common.parseDouble(inpDistance.getText());
@@ -152,7 +160,7 @@
 		return;
 	}
 	
-	// ch must be not null
+	// ch must not be null
 	public void setFields(CacheHolder ch){
 		if ( !ch.getWayPoint().equalsIgnoreCase(lastWaypoint) ) {
 			lastWaypoint = ch.getWayPoint();
@@ -160,19 +168,18 @@
 				inpBearing.setText("0");
 				inpDistance.setText("0");
 
-				currFormat = CWPoint.DMM;
+				currFormat = 2;
 				if (ch.LatLon.length()== 0) coordInp.set(0,0);
-				else coordInp.set(ch.LatLon, CWPoint.CW);
-				setFields(coordInp, CWPoint.DMM);				
+				else coordInp.set(ch.LatLon, TransformCoordinates.CW);
+				setFields();				
 			}
 		}
 	}
 	
 	
-	public void setFields(CWPoint coords, int format) {
-		if (format == CWPoint.CW) format = CWPoint.DMM;
-		btnChangeLatLon.setText(coords.toString(format));
-		chkFormat.selectIndex(format);
+	public void setFields() {
+		btnChangeLatLon.setText(coordInp.toString(getLocalCooSystem()));
+		//chkFormat.selectIndex(currFormat);
 	}
 
 
@@ -180,14 +187,16 @@
 
 		//Vm.debug(ev.toString());
 		if(ev instanceof ControlEvent && ev.type == ControlEvent.PRESSED){
-			if (ev.target == chkFormat){
-				readFields(coordInp,bd, currFormat);
-				setFields(coordInp, currFormat);
+			if (ev.target == chkFormat 
+					|| ((ev.type == ControlEvent.PRESSED) && (ev.target == localCooSystem )) ) {
+				if (ev.target == localCooSystem) chkFormat.selectIndex(3);
+				readFields(coordInp, bd);
+				setFields();
 				this.repaintNow();
 			}
 
 			if (ev.target == btnCalc){
-				readFields(coordInp, bd, currFormat);
+				readFields(coordInp, bd);
 				coordOut = coordInp.project(bd.degrees, bd.distance);
 				txtOutput.appendText(coordOut.toString(currFormat)+ "\n",true);
 			}
@@ -196,7 +205,7 @@
 			}
 			if (ev.target == btnSave){
 				CacheHolder ch = new CacheHolder();
-				readFields(coordInp, bd, currFormat);
+				readFields(coordInp, bd);
 				coordOut = coordInp.project(bd.degrees, bd.distance);
 				ch.LatLon = coordOut.toString();
 				ch.pos.set(coordOut);
@@ -205,16 +214,16 @@
 			}
 			
 			if (ev.target == btnGoto){
-				readFields(coordInp, bd, currFormat);
+				readFields(coordInp, bd);
 				coordOut = coordInp.project(bd.degrees, bd.distance);
 				mainT.gotoP.setDestinationAndSwitch(coordOut); 
 			}
 			if (ev.target == btnChangeLatLon){
 				CoordsScreen cs = new CoordsScreen();
-				readFields(coordInp, bd, currFormat);
-				cs.setFields(coordInp,currFormat);
+				readFields(coordInp, bd);
+				cs.setFields(coordInp, getLocalCooSystem());
 				if (cs.execute()== FormBase.IDOK){
-					btnChangeLatLon.setText(cs.getCoords().toString(currFormat));
+					btnChangeLatLon.setText(cs.getCoords().toString(getLocalCooSystem()));
 					coordInp.set(cs.getCoords());
 				}
 			}

Modified: trunk/src/CacheWolf/Common.java
===================================================================
--- trunk/src/CacheWolf/Common.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/Common.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -1,5 +1,6 @@
 package CacheWolf;
 
+
 import CacheWolf.utils.FileBugfix;
 import ewe.io.File;
 import ewe.sys.Convert;
@@ -138,6 +139,16 @@
 		if (name.startsWith("/")) return new String(".."+name); // on linux (*nix) machines it is quite usual to give the complete file path to the serial port, but ewe expects only "ttyS0" or similar
 		else                      return name;
 	}
+	
+	public static String arrayToString(String[] a, String sep) {
+		if (a == null || a.length == 0) return "";
+		StringBuffer sb = new StringBuffer();
+		sb.append(a[0]);
+		for (int i=1; i < a.length; i++) {
+			sb.append(sep).append(a[i]);
+		}
+		return sb.toString();
+	}
 
 
 }

Modified: trunk/src/CacheWolf/CoordsScreen.java
===================================================================
--- trunk/src/CacheWolf/CoordsScreen.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/CoordsScreen.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -2,20 +2,23 @@
 
 import CacheWolf.imp.SpiderGC;
 import CacheWolf.navi.Navigate;
+import CacheWolf.navi.ProjectedPoint;
+import CacheWolf.navi.TransformCoordinates;
 import ewe.ui.*;
 import ewe.fx.Dimension;
 import ewe.sys.*;
 
 /**
-*	Class for entering coordinates<br>
-*	Class IDs 1400 and 600 (same as calc panel and preferences screen)<br>
-*/
+ *	Class for entering coordinates<br>
+ *	Class IDs 1400 and 600 (same as calc panel and preferences screen)<br>
+ */
 
 
 public class CoordsScreen extends Form {
 
-	mCheckBox chkDMM, chkDMS, chkDD, chkUTM, chkGK;
+	mCheckBox chkDMM, chkDMS, chkDD, chkCustom;
 	CheckBoxGroup chkFormat = new CheckBoxGroup();
+	mChoice localCooSystem;
 	mChoice chcNS, chcEW;
 	mInput inpNSDeg, inpNSm, inpNSs, inpEWDeg, inpEWm, inpEWs;
 	mInput inpUTMZone, inpUTMNorthing, inpUTMEasting;
@@ -26,21 +29,21 @@
 	CellPanel mainPanel = new CellPanel();
 	int exitKeys[]={75009};
 	int currFormat;
-	
+
 	private boolean allowInvalid = false;
-	
+
 	public CoordsScreen(boolean allowInvalidCoords)
 	{
 		allowInvalid = allowInvalidCoords;
-		
+
 		InitCoordsScreen();		
 	}
-	
+
 	public CoordsScreen()
 	{
 		InitCoordsScreen();		
 	}
-	
+
 	private void InitCoordsScreen()
 	{
 		this.setTitle("");
@@ -48,15 +51,18 @@
 		topLinePanel.addNext(chkDD =new mCheckBox("d.d?"),CellConstants.DONTSTRETCH, CellConstants.WEST);
 		topLinePanel.addNext(chkDMM =new mCheckBox("d?m.m\'"),CellConstants.DONTSTRETCH, CellConstants.WEST);
 		topLinePanel.addNext(chkDMS =new mCheckBox("d?m\'s\""),CellConstants.DONTSTRETCH,CellConstants.WEST);
-		topLinePanel.addNext(chkUTM =new mCheckBox("UTM"),CellConstants.DONTSTRETCH, CellConstants.WEST);
-		topLinePanel.addLast(chkGK =new mCheckBox("GK"),CellConstants.DONTSTRETCH, CellConstants.WEST);
+		//topLinePanel.addNext(chkUTM =new mCheckBox("UTM"),CellConstants.DONTSTRETCH, CellConstants.WEST);
+		topLinePanel.addNext(chkCustom =new mCheckBox(""),CellConstants.DONTSTRETCH, CellConstants.WEST);
 
+		String[] ls = TransformCoordinates.getProjectedSystemNames();
+		topLinePanel.addLast(localCooSystem = new mChoice(ls, 0),CellConstants.DONTSTRETCH, CellConstants.WEST);
+
 		chkDD.setGroup(chkFormat); chkDD.exitKeys=exitKeys;
 		chkDMM.setGroup(chkFormat);chkDMM.exitKeys=exitKeys;
 		chkDMS.setGroup(chkFormat);chkDMS.exitKeys=exitKeys;
-		chkUTM.setGroup(chkFormat);chkUTM.exitKeys=exitKeys;
-		chkGK.setGroup(chkFormat);chkGK.exitKeys=exitKeys;
-		
+		//	chkUTM.setGroup(chkFormat);chkUTM.exitKeys=exitKeys;
+		//localCooSystem.setGroup(chkFormat);chkGK.exitKeys=exitKeys;
+		chkCustom.setGroup(chkFormat);chkCustom.exitKeys=exitKeys;
 		this.addLast(topLinePanel,CellConstants.DONTSTRETCH, CellConstants.WEST);
 
 		// Input for degrees
@@ -65,7 +71,7 @@
 		mainPanel.addNext(inpNSDeg = new mInput(),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 		mainPanel.addNext(inpNSm = new mInput(),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 		mainPanel.addLast(inpNSs = new mInput(),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
-		
+
 		mainPanel.addNext(chcEW = new mChoice(new String[]{"E", "W"},0),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 		chcEW.setInt(0);
 		mainPanel.addNext(inpEWDeg = new mInput(),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
@@ -83,19 +89,19 @@
 			mainPanel.addNext(new mLabel(MyLocale.getMsg(1402,"Easting")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.SOUTHWEST));
 			mainPanel.addLast(new mLabel(MyLocale.getMsg(1401,"Northing")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.SOUTHWEST));
 		}
-		
+
 		mainPanel.addNext(inpUTMZone = new mInput(),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 		mainPanel.addNext(inpUTMEasting = new mInput(),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 		mainPanel.addNext(inpUTMNorthing = new mInput(),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 		mainPanel.addLast(btnGps = new mButton("GPS"),CellConstants.HSTRETCH, (CellConstants.HFILL));
-		
-		mainPanel.addLast(new mLabel(MyLocale.getMsg(1405,"To load coordinates from GC, enter GCxxxxx below")),CellConstants.HSTRETCH, (CellConstants.HFILL)).setTag(SPAN,new Dimension(4,1));
-			// Input for free Text
+
+		//	mainPanel.addLast(new mLabel(MyLocale.getMsg(1405,"To load coordinates from GC, enter GCxxxxx below")),CellConstants.HSTRETCH, (CellConstants.HFILL)).setTag(SPAN,new Dimension(4,1));
+		// Input for free Text
 		mainPanel.addNext(inpText = new mInput(),CellConstants.HSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
 		inpText.toolTip=MyLocale.getMsg(1406,"Enter coordinates in any format or GCxxxxx");
 		inpText.setTag(SPAN,new Dimension(3,1));
 		mainPanel.addLast(btnParse = new mButton(MyLocale.getMsg(619,"Parse")),CellConstants.HSTRETCH, (CellConstants.HFILL));
-		
+
 		// Buttons for cancel and apply, copy and paste
 		btnCancel = new mButton(MyLocale.getMsg(614,"Cancel"));
 		btnCancel.setHotKey(0, IKeys.ESCAPE);
@@ -112,43 +118,42 @@
 		this.addLast(mainPanel,CellConstants.DONTSTRETCH, CellConstants.WEST);
 		chcNS.takeFocus(ControlConstants.ByKeyboard);
 	}
-	
+
 	public void activateFields(int format){
 		inpEWDeg.wantReturn=false; inpEWm.wantReturn=false; inpEWs.wantReturn=false; inpUTMNorthing.wantReturn=false;
 		switch (format){
-			case CWPoint.DD:
-				enable(chcNS); enable(inpNSDeg); disable(inpNSm); disable(inpNSs);
-				enable(chcEW); enable(inpEWDeg); disable(inpEWm); disable(inpEWs);
-				inpEWDeg.wantReturn=true;
-				disable(inpUTMZone); disable(inpUTMNorthing); disable(inpUTMEasting);
-				break;
-			case CWPoint.CW:
-			case CWPoint.DMM: 	
-				enable(chcNS); enable(inpNSDeg); enable(inpNSm); disable(inpNSs);
-				enable(chcEW); enable(inpEWDeg); enable(inpEWm); disable(inpEWs);
-				inpEWm.wantReturn=true;
-				disable(inpUTMZone); disable(inpUTMNorthing); disable(inpUTMEasting);
-				break;
-			case CWPoint.DMS: 	
-				enable(chcNS); enable(inpNSDeg); enable(inpNSm); enable(inpNSs);
-				enable(chcEW); enable(inpEWDeg); enable(inpEWm); enable(inpEWs);
-				inpEWs.wantReturn=true;
-				disable(inpUTMZone); disable(inpUTMNorthing); disable(inpUTMEasting);
-				break;
-			case CWPoint.UTM: 	
-				disable(chcNS); disable(inpNSDeg); disable(inpNSm); disable(inpNSs);
-				disable(chcEW); disable(inpEWDeg); disable(inpEWm); disable(inpEWs);
-				enable(inpUTMZone); enable(inpUTMNorthing); enable(inpUTMEasting);
-				inpUTMNorthing.wantReturn=true;
-	 			break;
-			case CWPoint.GK: 	
-				disable(chcNS); disable(inpNSDeg); disable(inpNSm); disable(inpNSs);
-				disable(chcEW); disable(inpEWDeg); disable(inpEWm); disable(inpEWs);
-				disable(inpUTMZone); enable(inpUTMNorthing); enable(inpUTMEasting);
-				inpUTMNorthing.wantReturn=true;
-	 			break;
+		case TransformCoordinates.DD:
+			enable(chcNS); enable(inpNSDeg); disable(inpNSm); disable(inpNSs);
+			enable(chcEW); enable(inpEWDeg); disable(inpEWm); disable(inpEWs);
+			inpEWDeg.wantReturn=true;
+			disable(inpUTMZone); disable(inpUTMNorthing); disable(inpUTMEasting);
+			enable(localCooSystem);
+			break;
+		case TransformCoordinates.DMM: 	
+			enable(chcNS); enable(inpNSDeg); enable(inpNSm); disable(inpNSs);
+			enable(chcEW); enable(inpEWDeg); enable(inpEWm); disable(inpEWs);
+			inpEWm.wantReturn=true;
+			disable(inpUTMZone); disable(inpUTMNorthing); disable(inpUTMEasting);
+			enable(localCooSystem);
+			break;
+		case TransformCoordinates.DMS: 	
+			enable(chcNS); enable(inpNSDeg); enable(inpNSm); enable(inpNSs);
+			enable(chcEW); enable(inpEWDeg); enable(inpEWm); enable(inpEWs);
+			inpEWs.wantReturn=true;
+			disable(inpUTMZone); disable(inpUTMNorthing); disable(inpUTMEasting);
+			enable(localCooSystem);
+			break;
+		default: 	
+			disable(chcNS); disable(inpNSDeg); disable(inpNSm); disable(inpNSs);
+			disable(chcEW); disable(inpEWDeg); disable(inpEWm); disable(inpEWs);
+			if (TransformCoordinates.localSystems[localCooSystem.getInt()].zoneSeperatly) enable(inpUTMZone);
+			else disable(inpUTMZone); 
+			enable(inpUTMNorthing); enable(inpUTMEasting);
+			disable(localCooSystem);
+			inpUTMNorthing.wantReturn=true;
+			break;
 		}
-		
+
 		this.stretchLastColumn = true;
 		this.stretchLastRow = true;
 		this.repaintNow();
@@ -156,37 +161,37 @@
 
 	private void enable(Control c) {c.modify(ControlConstants.TakesKeyFocus,ControlConstants.Disabled); }
 	private void disable(Control c) {c.modify(ControlConstants.Disabled,ControlConstants.TakesKeyFocus); }
-	
-	public void readFields(CWPoint coords, int format){
+
+	public void readFields(CWPoint coords){
 		String NS, EW;
-		if (format == CWPoint.UTM)
-			coords.set(inpUTMZone.getText(), 
-					   inpUTMNorthing.getText(), inpUTMEasting.getText());
-		else if (format == CWPoint.GK) {
-			coords.set(inpUTMNorthing.getText(), inpUTMEasting.getText());			
+		if (localSystemToformatSel(currFormat) >= formatSelToLocalSystem.length) {
+			if (TransformCoordinates.getLocalSystem(currFormat).zoneSeperatly)
+				coords.set(inpUTMNorthing.getText(), inpUTMEasting.getText(), inpUTMZone.getText(), currFormat); 
+			else
+				coords.set(inpUTMNorthing.getText(), inpUTMEasting.getText(), currFormat);			
 		}
 		else {
 			NS = chcNS.getInt()== 0?"N":"S";
 			EW = chcEW.getInt()== 0?"E":"W";
 			coords.set(NS, inpNSDeg.getText(), inpNSm.getText(), inpNSs.getText(),
-							 EW, inpEWDeg.getText(), inpEWm.getText(), inpEWs.getText(),
-							 format);
+					EW, inpEWDeg.getText(), inpEWm.getText(), inpEWs.getText(),
+					currFormat);
 		}
-
+		int formatsel = combineToFormatSel(chkFormat.getSelectedIndex(), localCooSystem.getInt());
+		currFormat = getLocalSystem(formatsel);
 		return;
 	}
 	public void setFields(CWPoint coords, int format) {
-		if (format == CWPoint.CW) format = CWPoint.DMM;
-		if (format == CWPoint.UTM){
-			inpUTMZone.setText(coords.getUTMZone());
-			inpUTMNorthing.setText(coords.getUTMNorthing());
-			inpUTMEasting.setText((coords.getUTMEasting()));
-		}
-		else if (format == CWPoint.GK){
-			inpUTMZone.setText("");
+		int formatsel = localSystemToformatSel(format); 
+		if ( formatsel >= formatSelToLocalSystem.length){ // projected point = neither dd, dd? mm.mm nor dd? mm' ss.s"
 			if (coords.isValid()){
-				inpUTMNorthing.setText(coords.getGKNorthing(0));
-				inpUTMEasting.setText((coords.getGKEasting(0)));				
+				localCooSystem.setInt(formatsel - formatSelToLocalSystem.length);
+				ProjectedPoint pp = TransformCoordinates.wgs84ToLocalsystem(coords, format);
+				inpText.setText(pp.toHumanReadableString());
+				inpUTMNorthing.setText(Common.DoubleToString(pp.getNorthing(),0));
+				inpUTMEasting.setText(Common.DoubleToString(pp.getEasting(),0));
+				if (TransformCoordinates.getLocalSystem(format).zoneSeperatly) inpUTMZone.setText(pp.getZoneString()); 
+				else inpUTMZone.setText("");
 			}
 			else {
 				inpUTMNorthing.setText("0");
@@ -196,16 +201,16 @@
 		else {
 			chcNS.setInt(coords.getNSLetter().equals("N")?0:1);
 			chcEW.setInt(coords.getEWLetter().equals("E")?0:1);
-			
+
 			inpNSDeg.setText(STRreplace.replace(coords.getLatDeg(format),"-",""));
 			inpNSm.setText(coords.getLatMin(format));
 			inpNSs.setText(coords.getLatSec(format));
-			
+
 			inpEWDeg.setText(STRreplace.replace(coords.getLonDeg(format),"-",""));
 			inpEWm.setText(coords.getLonMin(format));
 			inpEWs.setText(coords.getLonSec(format));
 		}
-		chkFormat.selectIndex(format);
+		chkFormat.selectIndex(java.lang.Math.min(localSystemToformatSel(format), formatSelToLocalSystem.length));
 		inpText.setText(coords.toString(format));
 		currFormat = format;
 		activateFields(format);
@@ -214,8 +219,8 @@
 	public CWPoint getCoords(){
 		return coordInp;
 	}
-	
 
+
 	public void onEvent(Event ev){
 
 		//Vm.debug(ev.toString());
@@ -224,20 +229,19 @@
 		// For input fields we use the wantReturn field
 		if(ev instanceof ControlEvent && ev.type == ControlEvent.EXITED){
 			if (((ControlEvent)ev).target==chkDD || ((ControlEvent)ev).target==chkDMM ||
-			    ((ControlEvent)ev).target==chkDMS) Gui.takeFocus(chcNS,ControlConstants.ByKeyboard);	
-			if (((ControlEvent)ev).target==chkUTM) Gui.takeFocus(inpUTMZone,ControlConstants.ByKeyboard);
-			if (((ControlEvent)ev).target==chkGK) Gui.takeFocus(inpUTMEasting,ControlConstants.ByKeyboard);
+					((ControlEvent)ev).target==chkDMS) Gui.takeFocus(chcNS,ControlConstants.ByKeyboard);	
+			if (((ControlEvent)ev).target==chkCustom) Gui.takeFocus(inpUTMEasting,ControlConstants.ByKeyboard);
 			if (((ControlEvent)ev).target==chcNS) Gui.takeFocus(inpNSDeg,ControlConstants.ByKeyboard);
 			if (((ControlEvent)ev).target==chcEW) Gui.takeFocus(inpEWDeg,ControlConstants.ByKeyboard);
 		}
 		if(ev instanceof ControlEvent && ev.type == ControlEvent.PRESSED){
 			if (((ControlEvent)ev).target==inpEWDeg || ((ControlEvent)ev).target==inpEWm ||
 					((ControlEvent)ev).target==inpEWs || ((ControlEvent)ev).target==inpUTMNorthing) Gui.takeFocus(btnApply,ControlConstants.ByKeyboard);	
-			if (ev.target == chkFormat){
-				readFields(coordInp, currFormat);
-				currFormat = chkFormat.getSelectedIndex();
+			
+			if (ev.target == chkFormat || ev.target == localCooSystem){
+				if (ev.target == localCooSystem) chkFormat.selectIndex(3);
+				readFields(coordInp);
 				setFields(coordInp, currFormat);
-				activateFields(currFormat);
 				this.repaintNow();
 			}
 
@@ -246,8 +250,8 @@
 			}
 
 			if (ev.target == btnApply){
-				currFormat = chkFormat.getSelectedIndex();
-				readFields(coordInp, currFormat);
+				currFormat = getLocalSystem(combineToFormatSel(chkFormat.getSelectedIndex(), localCooSystem.getInt()));
+				readFields(coordInp);
 				if (coordInp.isValid()) this.close(IDOK);
 				else {
 					if	( allowInvalid ) {
@@ -259,15 +263,14 @@
 					}
 				}
 			}
-			
+
 			if (ev.target == btnPaste){
 				inpText.setText(Vm.getClipboardText(""));
 			}
-			
+
 			if (ev.target == btnCopy){
-				currFormat = chkFormat.getSelectedIndex();
-				readFields(coordInp, currFormat);
-				Vm.setClipboardText(coordInp.toString(chkFormat.getSelectedIndex()));
+				readFields(coordInp); // TODO was anderes als Gau?-Kr?ger unterst?tzen
+				Vm.setClipboardText(coordInp.toString(currFormat));
 			}
 
 			if (ev.target == btnParse){
@@ -280,36 +283,61 @@
 				} else {	
 					coord = new CWPoint(inp);
 				}
-				if (coord.latDec == -91 && coord.lonDec == -361){
+				if (!coord.isValid()){
 					MessageBox tmpMB = new MessageBox(MyLocale.getMsg(321,"Error"), MyLocale.getMsg(4111,"Coordinates must be entered in the format N DD MM.MMM E DDD MM.MMM"), FormBase.OKB);
 					tmpMB.exec();
 				}else {
-					currFormat = chkFormat.getSelectedIndex();
+					currFormat =  getLocalSystem(combineToFormatSel(chkFormat.getSelectedIndex(), localCooSystem.getInt()));
 					setFields(coord,currFormat);
-					activateFields(currFormat);
 					this.repaintNow();
 				}
 			}
-			
+
 			if (ev.target == btnGps){
 				Navigate nav=Global.mainTab.nav;
 				if (nav.gpsPos.isValid()){
 					CWPoint coord = nav.gpsPos;
-					currFormat = chkFormat.getSelectedIndex();
+					currFormat = getLocalSystem(combineToFormatSel(chkFormat.getSelectedIndex(), localCooSystem.getInt()));
 					setFields(coord,currFormat);
-					activateFields(currFormat);
 				}
 			}
-			
+
 			if (ev.target == btnClear){
 				CWPoint coord = new CWPoint(91,361);
-				currFormat = chkFormat.getSelectedIndex();
+				currFormat = getLocalSystem(combineToFormatSel(chkFormat.getSelectedIndex(), localCooSystem.getInt()));
 				setFields(coord,currFormat);
-				activateFields(currFormat);
 			}
 		}
 		super.onEvent(ev);
 	}
 
+	private static final int[] formatSelToLocalSystem = {
+		TransformCoordinates.DD,
+		TransformCoordinates.DMM,
+		TransformCoordinates.DMS,
+	};
+
+	public int localSystemToformatSel(int cwpointformat) {
+		for (int i=0; i < formatSelToLocalSystem.length; i++) 
+			if (formatSelToLocalSystem[i] == cwpointformat) return i;
+		for (int i=0; i < TransformCoordinates.localSystems.length; i++) 
+			if (TransformCoordinates.localSystems[i].code == cwpointformat) return i + formatSelToLocalSystem.length;
+		
+		throw new IllegalArgumentException("CoordScreen.CWPointformatToformatSel: cwpointformat " + cwpointformat + "not supported");
+	}
+
+	public static final int getLocalSystem(int formatsel) { // be carefull: this method is also used by CalcPanel
+		if (formatsel < formatSelToLocalSystem.length) return formatSelToLocalSystem[formatsel];
+		return TransformCoordinates.localSystems[formatsel - formatSelToLocalSystem.length].code;
+	}
 	
+	public static final int combineToFormatSel(int radiobuttonindex, int choiceindex) {
+		int ret = radiobuttonindex;
+		if (ret == formatSelToLocalSystem.length) ret += choiceindex;
+		return ret;
+	}
+
 }
+
+
+

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/DetailsPanel.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -1,5 +1,6 @@
 package CacheWolf;
 
+import CacheWolf.navi.TransformCoordinates;
 import ewe.fx.Color;
 import ewe.fx.Dimension;
 import ewe.fx.Point;
@@ -557,9 +558,9 @@
 				// FIXME: if something changed saveDirtyWaypoint();
 				Global.mainTab.gotoP.setDestinationAndSwitch(cache);
 			} else if (ev.target == btnCoordinates) {
-				CWPoint coords = new CWPoint(btnCoordinates.getText(), CWPoint.CW);
+				CWPoint coords = new CWPoint(btnCoordinates.getText(), TransformCoordinates.CW);
 				final CoordsScreen cs = new CoordsScreen(true);
-				cs.setFields(coords, CWPoint.CW);
+				cs.setFields(coords, TransformCoordinates.CW);
 				if (cs.execute() == FormBase.IDOK) {
 					dirtyDetails = true;
 					coords = cs.getCoords();

Modified: trunk/src/CacheWolf/Filter.java
===================================================================
--- trunk/src/CacheWolf/Filter.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/Filter.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -6,6 +6,7 @@
 import ewe.io.*;
 import com.stevesoft.ewe_pat.*;
 import CacheWolf.imp.*;
+import CacheWolf.navi.TransformCoordinates;
 
 /**
 *	Class that actually filters the cache database.<br>
@@ -172,7 +173,7 @@
 				//... go through the current cache database
 				for(int i = cacheDB.size()-1; i >=0 ; i--){
 					ch = cacheDB.get(i);
-					cwp = new CWPoint(ch.LatLon, CWPoint.CW);
+					cwp = new CWPoint(ch.LatLon, TransformCoordinates.CW);
 					calcDistance = DistToSegment(fromPoint, toPoint, cwp);
 					calcDistance = (calcDistance*180*60)/java.lang.Math.PI;
 					calcDistance = calcDistance * 1.852;

Modified: trunk/src/CacheWolf/NewProfileWizard.java
===================================================================
--- trunk/src/CacheWolf/NewProfileWizard.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/NewProfileWizard.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -1,5 +1,6 @@
 package CacheWolf;
 
+import CacheWolf.navi.TransformCoordinates;
 import ewe.ui.FormBase;
 import ewe.ui.Gui;
 
@@ -18,7 +19,7 @@
 			profile.dataDir=pref.baseDir+f.profileDir+"/";
 			
 			CoordsScreen cs = new CoordsScreen();
-			cs.setFields(new CWPoint(), CWPoint.CW);
+			cs.setFields(new CWPoint(), TransformCoordinates.CW);
 			if (cs.execute() == FormBase.IDOK) {
 				profile.setCenterCoords(cs.getCoords());
 			}

Modified: trunk/src/CacheWolf/Parser.java
===================================================================
--- trunk/src/CacheWolf/Parser.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/Parser.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -46,7 +46,7 @@
 
 import CacheWolf.navi.Metrics;
 import CacheWolf.navi.Navigate;
-
+import CacheWolf.navi.TransformCoordinates;
 import com.stevesoft.ewe_pat.Regex;
 
 import ewe.sys.Convert;
@@ -527,13 +527,8 @@
     	String coord=popCalcStackAsString();
 		if (!isValidCoord(coord)) err(MyLocale.getMsg(1712,"Invalid coordinate: ")+coord);
     	cwPt.set(coord);
-    	int fmt=CWPoint.CW;
-    	if (fmtStr.equals("dd")) fmt=CWPoint.DD;
-    	else if (fmtStr.equals("dmm")) fmt=CWPoint.DMM;
-    	else if (fmtStr.equals("dms")) fmt=CWPoint.DMS;
-    	else if (fmtStr.equals("utm")) fmt=CWPoint.UTM;
-    	else if (fmtStr.equals("gk")) fmt=CWPoint.GK;
-    	else if (!fmtStr.equals("cw")) err(MyLocale.getMsg(1713,"Invalid coordinate format. Allowed are CW/DD/DMM/DMS/UTM/GK"));
+    	int fmt = TransformCoordinates.getLocalSystemCode(fmtStr);
+    	if (fmt == TransformCoordinates.LOCALSYSTEM_NOT_SUPPORTED) err(MyLocale.getMsg(1713,"Invalid coordinate format. Allowed are cw / dd / dmm / dms / ") + Common.arrayToString(TransformCoordinates.getProjectedSystemIDs(), " / "));
     	return cwPt.toString(fmt);
     }
 
@@ -554,7 +549,7 @@
     			err(MyLocale.getMsg(1714,"Goto: Waypoint does not exist: ")+waypointName);
     			return;
     		}
-    		ch.LatLon=cwPt.toString(CWPoint.CW);
+    		ch.LatLon=cwPt.toString(TransformCoordinates.CW);
     		ch.pos.set(cwPt);
     		ch.calcDistance(Global.getPref().curCentrePt); // Update distance/bearing
     		nav.setDestination(ch);
@@ -995,7 +990,7 @@
 				String coord=popCalcStackAsString();
 				cwPt.set(coord);
 				if (cwPt.isValid() || coord.equals("")) { // Can clear coord with empty string
-					ch.LatLon=cwPt.toString(CWPoint.CW);
+					ch.LatLon=cwPt.toString(TransformCoordinates.CW);
 					ch.pos.set(cwPt);
 					ch.calcDistance(Global.getPref().curCentrePt); // Update distance and bearing
 		    	    Global.getProfile().selectionChanged=true; // Tell moving map to updated displayed waypoints

Modified: trunk/src/CacheWolf/Preferences.java
===================================================================
--- trunk/src/CacheWolf/Preferences.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/Preferences.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -2,6 +2,7 @@
 
 import CacheWolf.imp.SpiderGC;
 import CacheWolf.navi.Metrics;
+import CacheWolf.navi.TransformCoordinates;
 import CacheWolf.utils.FileBugfix;
 import ewe.io.*;
 import ewe.sys.*;
@@ -554,7 +555,7 @@
 			outp.print("    <garmin connection = \"" + SafeXML.strxmlencode(garminConn) + "\" GPSBabelOptions = \"" + SafeXML.strxmlencode(garminGPSBabelOptions) + "\" MaxWaypointLength = \"" + SafeXML.strxmlencode(garminMaxLen) +
 					        "\" addDetailsToWaypoint = \"" + SafeXML.strxmlencode(addDetailsToWaypoint) + "\" addDetailsToName = \"" + SafeXML.strxmlencode(addDetailsToName) + "\" />\n");
 			outp.print("    <opencaching downloadMissing=\"" + SafeXML.strxmlencode(downloadmissingOC) + "\"/>\n");
-			outp.print("    <location lat = \"" + SafeXML.strxmlencode(curCentrePt.getLatDeg(CWPoint.DD)) + "\" long = \"" + SafeXML.strxmlencode(curCentrePt.getLonDeg(CWPoint.DD)) + "\"/>\n");
+			outp.print("    <location lat = \"" + SafeXML.strxmlencode(curCentrePt.getLatDeg(TransformCoordinates.DD)) + "\" long = \"" + SafeXML.strxmlencode(curCentrePt.getLonDeg(TransformCoordinates.DD)) + "\"/>\n");
 			outp.print("    <spider forcelogin=\"" + SafeXML.strxmlencode(forceLogin) + "\" spiderUpdates=\"" + SafeXML.strxmlencode(spiderUpdates) + "\" maxSpiderNumber=\"" + SafeXML.strxmlencode(maxSpiderNumber) + "\" downloadPics=\"" + SafeXML.strxmlencode(downloadPics) + "\" downloadTBs=\"" + SafeXML.strxmlencode(downloadTBs) +"\"/>\n");
 			outp.print("    <gotopanel northcentered=\"" + SafeXML.strxmlencode(northCenteredGoto) + "\" />\n");
 			outp.print("    <details cacheSize=\"" + SafeXML.strxmlencode(maxDetails) + "\" delete=\"" + SafeXML.strxmlencode(deleteDetails) + "\"/>\n");

Modified: trunk/src/CacheWolf/Profile.java
===================================================================
--- trunk/src/CacheWolf/Profile.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/Profile.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -1,6 +1,7 @@
 package CacheWolf;
 
 import CacheWolf.navi.Area;
+import CacheWolf.navi.TransformCoordinates;
 import ewe.io.BufferedWriter;
 import ewe.io.File;
 import ewe.io.FileNotFoundException;
@@ -271,7 +272,7 @@
 						String lat=SafeXML.cleanback(text.substring(start,text.indexOf("\"",start)));
 						start=text.indexOf("long=\"")+6;
 						String lon=SafeXML.cleanback(text.substring(start,text.indexOf("\"",start)));
-						centre.set(lat+" "+lon,CWPoint.CW); // Fast parse
+						centre.set(lat+" "+lon,TransformCoordinates.CW); // Fast parse
 					}	
 				} else if (text.indexOf("<VERSION")>=0) {
 					int start=text.indexOf("value = \"")+9;

Modified: trunk/src/CacheWolf/ProfileDataForm.java
===================================================================
--- trunk/src/CacheWolf/ProfileDataForm.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/ProfileDataForm.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -1,5 +1,6 @@
 package CacheWolf;
 
+import CacheWolf.navi.TransformCoordinates;
 import ewe.ui.CellPanel;
 import ewe.ui.ControlEvent;
 import ewe.ui.Event;
@@ -59,7 +60,7 @@
 			}
 			if (ev.target == btnCurrentCentre){
 				CoordsScreen cs = new CoordsScreen();
-				cs.setFields(pref.curCentrePt, CWPoint.CW);
+				cs.setFields(pref.curCentrePt, TransformCoordinates.CW);
 				if (cs.execute()== FormBase.IDOK){
 					pref.curCentrePt.set(cs.getCoords());
 					btnCurrentCentre.setText(pref.curCentrePt.toString());
@@ -68,7 +69,7 @@
 			}
 			if (ev.target == btnProfileCentre){
 				CoordsScreen cs = new CoordsScreen();
-				cs.setFields(profile.centre, CWPoint.CW);
+				cs.setFields(profile.centre, TransformCoordinates.CW);
 				if (cs.execute()== FormBase.IDOK){
 					profile.notifyUnsavedChanges(cs.getCoords().equals(profile.centre));
 					profile.centre.set(cs.getCoords());

Modified: trunk/src/CacheWolf/Test.java
===================================================================
--- trunk/src/CacheWolf/Test.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/Test.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -5,7 +5,9 @@
 import ewe.io.RandomAccessFile;
 import ewe.sys.*;
 
-import java.lang.Math;;
+import java.lang.Math;
+
+import CacheWolf.navi.TransformCoordinates;
  
 
 public class Test extends mThread{
@@ -39,7 +41,7 @@
 		// 1.000 CWPoint via constructor
 		start = new Time();
 		for (i=0; i<100; i++){
-			new CWPoint("N 51? 27.635 E 009? 37.621", CWPoint.CW);
+			new CWPoint("N 51? 27.635 E 009? 37.621", TransformCoordinates.CW);
 		}
 		end = new Time();
 		printResult("CWPoint(\"N 51? 27.635 E 009? 37.621\", CWPoint.CW)", start, end, i);
@@ -48,7 +50,7 @@
 		start = new Time();
 		for (i=0; i<100; i++){
 			CWPoint cwP = new CWPoint();
-			cwP.set("N 51? 27.635 E 009? 37.621", CWPoint.CW);
+			cwP.set("N 51? 27.635 E 009? 37.621", TransformCoordinates.CW);
 			
 		}
 		end = new Time();
@@ -70,7 +72,7 @@
 		start = new Time();
 		CWPoint cwSet = new CWPoint();
 		for (i=0; i<100; i++){
-			cwSet.set("N 51? 27.635 E 009? 37.621", CWPoint.CW);
+			cwSet.set("N 51? 27.635 E 009? 37.621", TransformCoordinates.CW);
 		}
 		end = new Time();
 		printResult("cwSet.set(\"N 51? 27.635 E 009? 37.621\", CWPoint.CW) CWPoint set", start, end, i);
@@ -104,7 +106,7 @@
 	}
 	
 	void testPassedRegex(String pattern, String expectedResult, int format) {
-		CWPoint coord = new CWPoint(pattern, CWPoint.REGEX);
+		CWPoint coord = new CWPoint(pattern, TransformCoordinates.REGEX);
 		String res = coord.toString(format);
 
 		if (expectedResult.equals(res)) return; 
@@ -114,36 +116,36 @@
 	}
 	
 	void testRegex(){
-		testPassedRegex("S1 2.3W4 5.6","S 01? 02.300 W 004? 05.600", CWPoint.CW); 
-		testPassedRegex("N1 12.123 E7 34.345","N 01? 12.123 E 007? 34.345", CWPoint.CW);
-		testPassedRegex("S1 12.123 E7 34.345","S 01? 12.123 E 007? 34.345", CWPoint.CW); 
-		testPassedRegex("N1 12.123 W7 34.345","N 01? 12.123 W 007? 34.345", CWPoint.CW); 
-		testPassedRegex("S1 12.123 W7 34.345","S 01? 12.123 W 007? 34.345", CWPoint.CW); 
-		testPassedRegex("N1 12.123 E7 34,345","N 01? 12.123 E 007? 34.345", CWPoint.CW); 
-		testPassedRegex("n1 1.0 E12 34.3456363","N 01? 01.000 E 012? 34.346", CWPoint.CW); //Kleinbuchstaben erlaubt 
-		testPassedRegex("S99 60.2345 W180 65.34534","S 90? 00.000 W 180? 00.000", CWPoint.CW); 
-		testPassedRegex("N1 12.1234 O12 34.3456","N 01? 12.123 E 012? 34.346", CWPoint.CW); 
-		testPassedRegex("N1 12.1234E12 34.3456","N 01? 12.123 E 012? 34.346", CWPoint.CW);
-		testPassedRegex("asdfka N1? 12.1234 E12?34.345 sdfskd ","N 01? 12.123 E 012? 34.345", CWPoint.CW);
-		testPassedRegex("N1? 12.1234 E12?34.345","N 01? 12.123 E 012? 34.345", CWPoint.CW); 
-		testPassedRegex("N1? 12.1234E12?34.345","N 01? 12.123 E 012? 34.345", CWPoint.CW); 
-		testPassedRegex(" S17? 23 13.12345 w 127? 34 34.567 ","S 17? 23' 13.1\" W 127? 34' 34.6\"", CWPoint.DMS); // Deg Min Sek
-		testPassedRegex(" S17? 23 ' 13.12345    \" w 127? 34'34.567\" ","S 17? 23' 13.1\" W 127? 34' 34.6\"", CWPoint.DMS); // Deg Min Sek
-		testPassedRegex("12.3456 23.4567","N 12.34560? E 023.45670?", CWPoint.DD); 
-		testPassedRegex("12.3456? 23.4567?","N 12.34560? E 023.45670?", CWPoint.DD); 
-		testPassedRegex("12.3456? 23.4567 ?","N 12.34560? E 023.45670?", CWPoint.DD); 
-		testPassedRegex("12.3456?23.4567 ?","N 12.34560? E 023.45670?", CWPoint.DD); 
-		testPassedRegex("12.3456+23.4567 ?","N 12.34560? E 023.45670?", CWPoint.DD); 
-		testPassedRegex("N  12.3456   W  23.4567 ?","N 12.34560? W 023.45670?", CWPoint.DD); 
-		testPassedRegex("12.3457-23.4567 ?","N 12.34570? W 023.45670?", CWPoint.DD); 
-		testPassedRegex("-12.3456 23.4567","S 12.34560? E 023.45670?", CWPoint.DD); 
-		testPassedRegex("12.3456 -23.4567","N 12.34560? W 023.45670?", CWPoint.DD); 
-		testPassedRegex("-12.345668 -23,456734","S 12.34567? W 023.45673?", CWPoint.DD); 
-		testPassedRegex("12.3456-23.4567","N 12.34560? W 023.45670?", CWPoint.DD); 
-		testPassedRegex("12.3456+23.4567","N 12.34560? E 023.45670?", CWPoint.DD); 
-		testPassedRegex("91.2345 180.23456","N 90.00000? E 180.00000?", CWPoint.DD); 
-		testPassedRegex("91.2345 180.23456","N 90.00000? E 180.00000?", CWPoint.DD); 
-		testPassedRegex("32U 475592 5584875","32U E 475592 N 5584875", CWPoint.UTM); 
-		testPassedRegex("14X 1 2","13N E 668186 N 2", CWPoint.UTM); 
+		testPassedRegex("S1 2.3W4 5.6","S 01? 02.300 W 004? 05.600", TransformCoordinates.CW); 
+		testPassedRegex("N1 12.123 E7 34.345","N 01? 12.123 E 007? 34.345", TransformCoordinates.CW);
+		testPassedRegex("S1 12.123 E7 34.345","S 01? 12.123 E 007? 34.345", TransformCoordinates.CW); 
+		testPassedRegex("N1 12.123 W7 34.345","N 01? 12.123 W 007? 34.345", TransformCoordinates.CW); 
+		testPassedRegex("S1 12.123 W7 34.345","S 01? 12.123 W 007? 34.345", TransformCoordinates.CW); 
+		testPassedRegex("N1 12.123 E7 34,345","N 01? 12.123 E 007? 34.345", TransformCoordinates.CW); 
+		testPassedRegex("n1 1.0 E12 34.3456363","N 01? 01.000 E 012? 34.346", TransformCoordinates.CW); //Kleinbuchstaben erlaubt 
+		testPassedRegex("S99 60.2345 W180 65.34534","S 90? 00.000 W 180? 00.000", TransformCoordinates.CW); 
+		testPassedRegex("N1 12.1234 O12 34.3456","N 01? 12.123 E 012? 34.346", TransformCoordinates.CW); 
+		testPassedRegex("N1 12.1234E12 34.3456","N 01? 12.123 E 012? 34.346", TransformCoordinates.CW);
+		testPassedRegex("asdfka N1? 12.1234 E12?34.345 sdfskd ","N 01? 12.123 E 012? 34.345", TransformCoordinates.CW);
+		testPassedRegex("N1? 12.1234 E12?34.345","N 01? 12.123 E 012? 34.345", TransformCoordinates.CW); 
+		testPassedRegex("N1? 12.1234E12?34.345","N 01? 12.123 E 012? 34.345", TransformCoordinates.CW); 
+		testPassedRegex(" S17? 23 13.12345 w 127? 34 34.567 ","S 17? 23' 13.1\" W 127? 34' 34.6\"", TransformCoordinates.DMS); // Deg Min Sek
+		testPassedRegex(" S17? 23 ' 13.12345    \" w 127? 34'34.567\" ","S 17? 23' 13.1\" W 127? 34' 34.6\"", TransformCoordinates.DMS); // Deg Min Sek
+		testPassedRegex("12.3456 23.4567","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("12.3456? 23.4567?","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("12.3456? 23.4567 ?","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("12.3456?23.4567 ?","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("12.3456+23.4567 ?","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("N  12.3456   W  23.4567 ?","N 12.34560? W 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("12.3457-23.4567 ?","N 12.34570? W 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("-12.3456 23.4567","S 12.34560? E 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("12.3456 -23.4567","N 12.34560? W 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("-12.345668 -23,456734","S 12.34567? W 023.45673?", TransformCoordinates.DD); 
+		testPassedRegex("12.3456-23.4567","N 12.34560? W 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("12.3456+23.4567","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("91.2345 180.23456","N 90.00000? E 180.00000?", TransformCoordinates.DD); 
+		testPassedRegex("91.2345 180.23456","N 90.00000? E 180.00000?", TransformCoordinates.DD); 
+		testPassedRegex("32U 475592 5584875","32U E 475592 N 5584875", TransformCoordinates.UTM); 
+		testPassedRegex("14X 1 2","13N E 668186 N 2", TransformCoordinates.UTM); 
 	}
 }

Modified: trunk/src/CacheWolf/exp/OVLExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/OVLExporter.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/exp/OVLExporter.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -1,5 +1,6 @@
 package CacheWolf.exp;
 import CacheWolf.*;
+import CacheWolf.navi.TransformCoordinates;
 import ewe.sys.*;
 
 /**
@@ -57,8 +58,8 @@
 		str.append("MapName=Gesamtes Bundesgebiet (D1000)\r\n");
 		str.append("DimmFc=100\r\n");
 		str.append("ZoomFc=100\r\n");
-		str.append("CenterLat="+pref.curCentrePt.getLatDeg(CWPoint.CW)+".00\r\n");
-		str.append("CenterLong="+pref.curCentrePt.getLonDeg(CWPoint.CW)+".00\r\n");
+		str.append("CenterLat="+pref.curCentrePt.getLatDeg(TransformCoordinates.CW)+".00\r\n");
+		str.append("CenterLong="+pref.curCentrePt.getLonDeg(TransformCoordinates.CW)+".00\r\n");
 		str.append("RefColor=255\r\n");
 		str.append("RefRad=58\r\n");
 		str.append("RefLine=6\r\n");

Modified: trunk/src/CacheWolf/imp/OCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/OCXMLImporter.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/imp/OCXMLImporter.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -16,6 +16,8 @@
 import CacheWolf.Profile;
 import CacheWolf.SafeXML;
 import CacheWolf.UrlFetcher;
+
+import CacheWolf.navi.TransformCoordinates;
 import CacheWolf.utils.FileBugfix;
 
 import com.stevesoft.ewe_pat.Regex;
@@ -204,8 +206,8 @@
 		else url += "&picture=0";
 		url += "&cachelog=1"
 			+ "&removedobject=0"
-			+ "&lat=" + centre.getLatDeg(CWPoint.DD)
-			+ "&lon=" + centre.getLonDeg(CWPoint.DD)
+			+ "&lat=" + centre.getLatDeg(TransformCoordinates.DD)
+			+ "&lon=" + centre.getLonDeg(TransformCoordinates.DD)
 			+ "&distance=" + dist
 			+ "&charset=utf-8"
 			+ "&cdata=0"

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -53,6 +53,7 @@
 import CacheWolf.SafeXML;
 import CacheWolf.Travelbug;
 import CacheWolf.navi.Metrics;
+import CacheWolf.navi.TransformCoordinates;
 
 import com.stevesoft.ewe_pat.*;
 import ewe.ui.*;
@@ -443,7 +444,7 @@
 			if (spiderAllFinds) {
 				ln = p.getProp("firstPageFinds") + encodeUTF8URL(Utils.encodeJavaUtf8String(pref.myAlias));
 			} else {
-				ln = p.getProp("firstPage") + origin.getLatDeg(CWPoint.DD) + p.getProp("firstPage2") + origin.getLonDeg(CWPoint.DD)
+				ln = p.getProp("firstPage") + origin.getLatDeg(TransformCoordinates.DD) + p.getProp("firstPage2") + origin.getLonDeg(TransformCoordinates.DD)
 			                              + p.getProp("maxDistance") + Integer.toString( (int)saveDistanceInMiles );
 				if(doNotgetFound) ln = ln + p.getProp("showOnlyFound");
 			}
@@ -573,7 +574,7 @@
 				if (spiderAllFinds) {
 					postStr = p.getProp("firstLine");
 				} else {
-					postStr = p.getProp("firstLine") + origin.getLatDeg(CWPoint.DD) + "&" + origin.getLonDeg(CWPoint.DD)
+					postStr = p.getProp("firstLine") + origin.getLatDeg(TransformCoordinates.DD) + "&" + origin.getLonDeg(TransformCoordinates.DD)
 							                             + p.getProp("maxDistance") + Integer.toString( (int)saveDistanceInMiles );
 					if(doNotgetFound) postStr = postStr + p.getProp("showOnlyFound");
 				}

Modified: trunk/src/CacheWolf/navi/CWGPSPoint.java
===================================================================
--- trunk/src/CacheWolf/navi/CWGPSPoint.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/navi/CWGPSPoint.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -260,7 +260,7 @@
 						} break;
 						} // switch
 					} // while
-					if (Fix > 0) this.set(latNS, latDeg, latMin, "0", lonEW, lonDeg, lonMin, "0", CWPoint.DMM);
+					if (Fix > 0) this.set(latNS, latDeg, latMin, "0", lonEW, lonDeg, lonMin, "0", TransformCoordinates.DMM);
 
 				} // if
 
@@ -351,7 +351,7 @@
 					else {
 						if (status.equals("A")){
 							this.set(latNS, latDeg, latMin, "0",
-									lonEW, lonDeg, lonMin, "0", CWPoint.DMM);				
+									lonEW, lonDeg, lonMin, "0", TransformCoordinates.DMM);				
 						}
 					}
 				} // if
@@ -475,8 +475,8 @@
 
 
 	public void printAll(){
-		Vm.debug("Latitude:     " + this.getLatDeg(DD));
-		Vm.debug("Longitude:    " + this.getLonDeg(DD));
+		Vm.debug("Latitude:     " + this.getLatDeg(TransformCoordinates.DD));
+		Vm.debug("Longitude:    " + this.getLonDeg(TransformCoordinates.DD));
 		Vm.debug("Speed:        " + this.Speed);
 		Vm.debug("Bearing:      " + this.Bear);
 		Vm.debug("Time:         " + this.Time);

Modified: trunk/src/CacheWolf/navi/GkProjection.java
===================================================================
--- trunk/src/CacheWolf/navi/GkProjection.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/navi/GkProjection.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -2,7 +2,7 @@
 
 import CacheWolf.CWPoint;
 
-public class GkProjection extends Projection{
+public final class GkProjection extends Projection{
 	double falseEasting;
 	double falseNorthing;
 	double degreeOfStripe0;
@@ -82,7 +82,7 @@
 	 * @param stripewidth width in degree of the stripe of the Gau?-Kr?ger-System (3 degreee usually used in Gau?-Kr?ger, 6 degree usually in UTM)
 	 * @return
 	 */
-	private static CWPoint unproject(ProjectedPoint gkp, double stripelon, Ellipsoid ellipsoid, double scale) {
+	public static CWPoint unproject(ProjectedPoint gkp, double stripelon, Ellipsoid ellipsoid, double scale) {
 		double L0 = stripelon; // decimal degree of the center of the stripe
 		double y = gkp.getRawEasting()/scale;
 
@@ -114,11 +114,12 @@
 		return new CWPoint(lat, lon);
 	}
 	
-	private static ProjectedPoint project(CWPoint latlon, Ellipsoid ellipsoid, double stripewidth, int stripe, double degreeOfStripe0, double scale, ProjectedPoint gkp) {
+	public static ProjectedPoint project(CWPoint latlon, Ellipsoid ellipsoid, double stripewidth, int stripe, double degreeOfStripe0, double scale, ProjectedPoint gkp) {
 		double e2 = (ellipsoid.a * ellipsoid.a - ellipsoid.b * ellipsoid.b)/(ellipsoid.a * ellipsoid.a);
 		double l = latlon.lonDec;
 		if (l<0) l+=360;
 		l = (l - degreeOfStripe0 - stripe * stripewidth) /180*Math.PI;
+//		if (l < - 2* Math.PI) l += 4 * Math.PI;
 		double B = latlon.latDec /180*Math.PI;
 		double N = ellipsoid.a/ Math.sqrt(1- e2 * Math.pow(Math.sin(B),2));
 		double nue = Math.sqrt(Math.pow(ellipsoid.a, 2) / Math.pow(ellipsoid.b, 2)* e2 * Math.pow(Math.cos(B), 2));

Modified: trunk/src/CacheWolf/navi/GotoPanel.java
===================================================================
--- trunk/src/CacheWolf/navi/GotoPanel.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/navi/GotoPanel.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -27,14 +27,14 @@
  */
 
 
-public class GotoPanel extends CellPanel {
+public final class GotoPanel extends CellPanel {
 
 	//public CWGPSPoint gpsPosition = new CWGPSPoint();
 	//public CWPoint toPoint = new CWPoint();
 	public Navigate myNavigation;
 	mButton btnGPS, btnCenter,btnSave;
 	mButton btnGoto, btnMap;
-	int currFormat;
+	int currFormatSel;
 
 	mLabel lblGPS, lblPosition, lblDST;
 	Color gpsStatus;
@@ -61,14 +61,14 @@
 	final static Font BOLD = new Font("Arial", Font.BOLD, 14);
 
 	int ticker = 0;
-	
+
 	Menu mnuContextFormt;
-	MenuItem miDMM, miDMS, miDD, miUTM, miGK;
-	
+	MenuItem miCooformat[] = new MenuItem[TransformCoordinates.localSystems.length + 3]; //miDMM, miDMS, miDD, miUTM, miGK;
+
 	Menu mnuContextRose;
 	MenuItem miLuminary[] = new MenuItem[SkyOrientation.LUMINARY_NAMES.length];
 	MenuItem miNorthCentered;
-	
+
 	/**
 	 * Create GotoPanel 
 	 * @param Preferences 	global preferences
@@ -93,17 +93,14 @@
 		//Format selection for coords		
 		//context menu
 		mnuContextFormt = new Menu();
-		mnuContextFormt.addItem(miDD = new MenuItem("d.d???"));
-		miDD.modifiers &= ~MenuItem.Checked;
-		mnuContextFormt.addItem(miDMM = new MenuItem("d???m.m\'"));
-		miDMM.modifiers |= MenuItem.Checked;
-		mnuContextFormt.addItem(miDMS = new MenuItem("d???m\'s\""));
-		miDMS.modifiers &= ~MenuItem.Checked;
-		mnuContextFormt.addItem(miUTM = new MenuItem("UTM"));
-		miUTM.modifiers &= ~MenuItem.Checked;
-		mnuContextFormt.addItem(miGK = new MenuItem("GK"));
-		miGK.modifiers &= ~MenuItem.Checked;
-		currFormat = CWPoint.DMM;
+		currFormatSel = 1; // default to d? m.m
+		mnuContextFormt.addItem(miCooformat[0] = new MenuItem("d.d?"));
+		miCooformat[0].modifiers &= ~MenuItem.Checked;
+		mnuContextFormt.addItem(miCooformat[1] = new MenuItem("d?m.m\'"));
+		miCooformat[1].modifiers |= MenuItem.Checked; // default
+		mnuContextFormt.addItem(miCooformat[2] = new MenuItem("d?m\'s\""));
+		miCooformat[2].modifiers &= ~MenuItem.Checked;
+		mnuContextFormt.addItems(TransformCoordinates.getProjectedSystemNames());
 
 		// Create context menu for compass rose: select luminary for orientation
 		mnuContextRose = new Menu();
@@ -119,7 +116,7 @@
 		lblGPS.setMenu(mnuContextFormt);
 		lblGPS.modifyAll(ControlConstants.WantHoldDown, 0);
 
-		lblPosition = new mLabel(myNavigation.gpsPos.toString(currFormat));
+		lblPosition = new mLabel(myNavigation.gpsPos.toString(CoordsScreen.getLocalSystem(currFormatSel)));
 		lblPosition.anchor = CellConstants.CENTER;
 		lblPosition.setMenu(mnuContextFormt);
 		lblPosition.modifyAll(ControlConstants.WantHoldDown, 0);
@@ -131,15 +128,15 @@
 		lblDST.modifyAll(ControlConstants.WantHoldDown, 0);
 
 		CoordsP.addLast(btnGoto = new mButton(getGotoBtnText()),CellConstants.HSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
-		
+
 		//Rose for bearing
-//		compassRose = new GotoRose("rose.png");
+		//		compassRose = new GotoRose("rose.png");
 		compassRose = new GotoRose();
 		icRose = new ImageControl(compassRose);
 		icRose.setMenu(mnuContextRose);
 		icRose.modifyAll(ControlConstants.WantHoldDown, 0); // this is necessary in order to make PenHold on a PDA work as right click
 		roseP.addLast(icRose,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.NORTH));
-		
+
 		mnuContextRose.addItem(new MenuItem("", MenuItem.Separator, null));
 		mnuContextRose.addItem(miNorthCentered = new MenuItem(MyLocale.getMsg(1503,"North Centered")));
 		if (compassRose.isNorthCentered()) miNorthCentered.modifiers |= MenuItem.Checked;
@@ -171,15 +168,15 @@
 		 */
 
 		//while (true){
-//		int notinterpreted = 0;
-//		if (myGPS.examine("@??????H @??????H???@??????HH?????????????????????H")) { notinterpreted = 0;} else notinterpreted++;
-//		if (notinterpreted > 5) myGPS.noInterpretableData();
-//		// myGPS.noInterpretableData();
+		//		int notinterpreted = 0;
+		//		if (myGPS.examine("@??????H @??????H???@??????HH?????????????????????H")) { notinterpreted = 0;} else notinterpreted++;
+		//		if (notinterpreted > 5) myGPS.noInterpretableData();
+		//		// myGPS.noInterpretableData();
 
 
-//		}	
+		//		}	
 	}
-	
+
 	public void resizeTo(int pWidth, int pHeight){
 		super.resizeTo(pWidth, pHeight);
 		Rect coordsRect = CoordsP.getRect();
@@ -204,15 +201,15 @@
 	public void setDestination(CWPoint dest){
 		myNavigation.setDestination(dest);
 		if (!myNavigation.destination.isValid()) (new MessageBox(MyLocale.getMsg(321,"Error"), MyLocale.getMsg(1507,"Coordinates are out of range:") +"\n"+MyLocale.getMsg(1508,"latitude")+": "+myNavigation.destination.latDec+"\n "+MyLocale.getMsg(1509,"longditue")+": "+myNavigation.destination.lonDec, FormBase.OKB)).execute();
-		
+
 	}
-	
+
 	public void destChanged(CWPoint d) { // called from myNavigate
 		btnGoto.setText(getGotoBtnText());
 		updateDistance();
 	}
-	
 
+
 	/**
 	 * set the coords of the destination and switch to gotoPanel  
 	 * @param LatLon destination
@@ -225,12 +222,12 @@
 		myNavigation.setDestination(ch);
 		mainT.select(this);
 	}
-	
+
 	/**
 	 * updates distance and bearing
 	 *
 	 */
-	
+
 	public void updateDistance() {
 		//update distance
 		float distance = -1.0f;
@@ -252,7 +249,7 @@
 		if ((fix > 0) && (myNavigation.gpsPos.getSats()>= 0)) {
 			// display values only, if signal good
 			//Vm.debug("currTrack.add: nachher");
-			lblPosition.setText(myNavigation.gpsPos.toString(currFormat));
+			lblPosition.setText(myNavigation.gpsPos.toString(CoordsScreen.getLocalSystem(currFormatSel)));
 			speed.set(myNavigation.gpsPos.getSpeed());
 			sunAzimut.set(myNavigation.skyOrientationDir.lonDec);
 			bearMov.set(myNavigation.gpsPos.getBear());
@@ -271,7 +268,7 @@
 			gpsStatus = RED;
 			myNavigation.stopGps();
 		}
-		// cannot interprete data
+		// cannot interpret data
 		if (fix == -2) {
 			if (gpsStatus != RED) (new MessageBox(MyLocale.getMsg(321, "Error"), MyLocale.getMsg(1511, "Cannot interpret data from GPS\n possible reasons:\n wrong Port,\n wrong Baudrate,\n not NMEA-Protocol\nConnection to serial port closed\nLast String tried to interprete:\n")+myNavigation.gpsPos.lastStrExamined, FormBase.OKB)).exec();
 			gpsStatus = RED;
@@ -282,7 +279,7 @@
 	public void gpsStarted() {
 		btnGPS.setText(MyLocale.getMsg(1505,"Stop"));
 	}
-	
+
 	public void startGps() {
 		myNavigation.startGps(pref.logGPS, Convert.toInt(pref.logGPSTimer));
 	}
@@ -293,12 +290,12 @@
 		this.repaintNow(); // without this the change in the background color will not be displayed
 	}
 
-	
+
 	private String getGotoBtnText() {
 		if (myNavigation.destination == null) return MyLocale.getMsg(999,"Not set");
-		else return myNavigation.destination.toString(currFormat);
+		else return myNavigation.destination.toString(CoordsScreen.getLocalSystem(currFormatSel));
 	}
-	
+
 	public void switchToMovingMap() {
 		CWPoint centerTo = null;
 		if (myNavigation.isGpsPosValid()) centerTo = new CWPoint(myNavigation.gpsPos); // set gps-pos if gps is on
@@ -316,72 +313,43 @@
 		if (centerTo != null && centerTo.isValid())
 			mainT.SwitchToMovingMap(centerTo, false);
 		else
-		(new MessageBox(MyLocale.getMsg(321, "Error"), MyLocale.getMsg(1513, "Cannot start moving map without valid coordinates. Please enter coordinates as destination, as center, in selected cache or start GPS"), FormBase.OKB)).execute(); 
+			(new MessageBox(MyLocale.getMsg(321, "Error"), MyLocale.getMsg(1513, "Cannot start moving map without valid coordinates. Please enter coordinates as destination, as center, in selected cache or start GPS"), FormBase.OKB)).execute(); 
 	}
-	
+
 	/**
 	 * Eventhandler
 	 */
-
 	public void onEvent(Event ev){
 		if (ev instanceof MenuEvent) { 
-			if (ev.type == MenuEvent.SELECTED ) {
-				MenuItem action = (MenuItem) mnuContextFormt.getSelectedItem(); 
-				if (action != null) {
-					if (action == miDD) {
-						mnuContextFormt.close();
-						currFormat = CWPoint.DD;
-						}
-					if (action == miDMM) {
-						mnuContextFormt.close();
-						currFormat = CWPoint.DMM;
-					}
-					if (action == miDMS) {
-						mnuContextFormt.close();
-						currFormat = CWPoint.DMS;
-					}
-					if (action == miUTM) {
-						mnuContextFormt.close();
-						currFormat = CWPoint.UTM;
-					}
-					if (action == miGK) {
-						mnuContextFormt.close();
-						currFormat = CWPoint.GK;
-					}
-					miDD.modifiers &= ~MenuItem.Checked;
-					miDMM.modifiers &= ~MenuItem.Checked;
-					miDMS.modifiers &= ~MenuItem.Checked;
-					miUTM.modifiers &= ~MenuItem.Checked;
-					miGK.modifiers &= ~MenuItem.Checked;
-					switch (currFormat) {
-					case CWPoint.DD: miDD.modifiers |= MenuItem.Checked; break;   
-					case CWPoint.DMM: miDMM.modifiers |= MenuItem.Checked; break;   
-					case CWPoint.DMS: miDMS.modifiers |= MenuItem.Checked; break;   
-					case CWPoint.UTM: miUTM.modifiers |= MenuItem.Checked; break;
-					case CWPoint.GK: miGK.modifiers |= MenuItem.Checked; break;
-					}
-
-					lblPosition.setText(myNavigation.gpsPos.toString(currFormat));
+			if (ev.type == MenuEvent.SELECTED) {
+				if (((MenuEvent)ev).menu == mnuContextFormt) {
+					mnuContextFormt.close();
+					mnuContextFormt.getItemAt(currFormatSel).modifiers &= ~MenuItem.Checked;
+					currFormatSel = mnuContextFormt.getInt();
+					mnuContextFormt.getItemAt(currFormatSel).modifiers |= MenuItem.Checked;
+					lblPosition.setText(myNavigation.gpsPos.toString(CoordsScreen.getLocalSystem(currFormatSel)));
 					btnGoto.setText(getGotoBtnText());
 				} // end lat-lon-format context menu
-				action = (MenuItem) mnuContextRose.getSelectedItem();
-				if (action != null) {
-					for (int i=0; i<miLuminary.length; i++) {
-						if (action == miLuminary[i]) {
-							myNavigation.setLuminary(i);
-							miLuminary[i].modifiers |= MenuItem.Checked;
-							compassRose.setLuminaryName(SkyOrientation.getLuminaryName(myNavigation.luminary));
-						} else miLuminary[i].modifiers &= ~MenuItem.Checked;
-					}
-					if (action == miNorthCentered) {
-						if (compassRose.isNorthCentered()) {
-							compassRose.setNorthCentered(false);
-							miNorthCentered.modifiers &= ~MenuItem.Checked;							
+				if (((MenuEvent)ev).menu == mnuContextRose) {
+					MenuItem action = (MenuItem) mnuContextRose.getSelectedItem();
+					if (action != null) {
+						for (int i=0; i<miLuminary.length; i++) {
+							if (action == miLuminary[i]) {
+								myNavigation.setLuminary(i);
+								miLuminary[i].modifiers |= MenuItem.Checked;
+								compassRose.setLuminaryName(SkyOrientation.getLuminaryName(myNavigation.luminary));
+							} else miLuminary[i].modifiers &= ~MenuItem.Checked;
 						}
-						else
-						{
-							compassRose.setNorthCentered(true);
-							miNorthCentered.modifiers |= MenuItem.Checked;
+						if (action == miNorthCentered) {
+							if (compassRose.isNorthCentered()) {
+								compassRose.setNorthCentered(false);
+								miNorthCentered.modifiers &= ~MenuItem.Checked;							
+							}
+							else
+							{
+								compassRose.setNorthCentered(true);
+								miNorthCentered.modifiers |= MenuItem.Checked;
+							}
 						}
 					}
 				}
@@ -398,10 +366,10 @@
 			// set current position as centre and recalculate distance of caches in MainTab 
 			if (ev.target == btnCenter){
 				if (myNavigation.gpsPos.isValid()) {
-				Vm.showWait(true);
-				pref.curCentrePt.set(myNavigation.gpsPos);
-				mainT.updateBearDist();
-				Vm.showWait(false);
+					Vm.showWait(true);
+					pref.curCentrePt.set(myNavigation.gpsPos);
+					mainT.updateBearDist();
+					Vm.showWait(false);
 				} else (new MessageBox(MyLocale.getMsg(312, "Error"), MyLocale.getMsg(1514, "Cannot recalculate distances, because the GPS position is not set"), FormBase.OKB)).execute();
 			}
 			//Start moving map
@@ -419,8 +387,8 @@
 			// change destination waypoint
 			if (ev.target == btnGoto){
 				CoordsScreen cs = new CoordsScreen();
-				if (myNavigation.destination.isValid())	cs.setFields(myNavigation.destination, currFormat);
-				else cs.setFields(new CWPoint(0,0), currFormat);
+				if (myNavigation.destination.isValid())	cs.setFields(myNavigation.destination, CoordsScreen.getLocalSystem(currFormatSel));
+				else cs.setFields(new CWPoint(0,0), CoordsScreen.getLocalSystem(currFormatSel));
 				if (cs.execute(null, CellConstants.TOP) == FormBase.IDOK)
 					setDestination(cs.getCoords());
 			}
@@ -437,23 +405,23 @@
 	float sunDir = -361;
 	float moveDir = -361;
 	float distance = -1;
-	
+
 	int m_fix = -1;
 	int m_sats = -1;
 	int m_satsInView = 0;
 	double m_hdop = -1;
 	float m_speed = -1;
-	
+
 	String m_Luminary = MyLocale.getMsg(6100, "Sun");
-	
+
 	Font mainFont;
 	FontMetrics fm;
 	int lineHeight;
-	
+
 	int roseRadius;
-	
+
 	boolean northCentered = Global.getPref().northCenteredGoto;
-	
+
 	final static Color RED = new Color(255,0,0);
 	final static Color YELLOW = new Color(255,255,0);
 	final static Color GREEN = new Color(0,255,0);
@@ -471,23 +439,23 @@
 	public GotoRose(String fn){
 		super(fn);
 	}
-	
+
 	public GotoRose(){
 		super();
 	}
-	
+
 	public void setWaypointDirectionDist(float wd, float dist) {
 		gotoDir = wd;
 		distance = dist;
 	}
-	
+
 	public void setSunMoveDirections(float sd, float md, float speed ) {
 		sunDir = sd;
 		moveDir = md;
 		m_speed = speed;
 		refresh();
 	}
-	
+
 	public void setGpsStatus(int fix, int sats, int satsInView, double hdop) {
 		m_fix = fix;
 		m_sats = sats;
@@ -495,20 +463,20 @@
 		m_hdop = hdop;
 		refresh();
 	}
-	
+
 	public void setLuminaryName(String Luminary) {
 		m_Luminary = Luminary;
 		refresh();
 	}
 
-	
+
 	/**
 	 * draw arrows for the directions of movement and destination waypoint
 	 * @param ctrl the control to paint on
 	 * @param moveDir degrees of movement
 	 * @param destDir degrees of destination waypoint
 	 */
-	
+
 	public void doDraw(Graphics g,int options) {
 		g.setColor(Color.White);
 		g.fillRect(0, 0, location.width, location.height);
@@ -531,23 +499,23 @@
 			g.setPen(new Pen(new Color(150,150,150),Pen.SOLID,3));
 			g.drawEllipse(location.width/2 - radius, location.height/2 - radius, 2 * radius, 2 * radius );
 		}
-		
+
 		drawArrows(g);
 		drawWayPointData(g);
 		drawGpsData(g);
 		drawLuminaryData(g);
 		drawGpsStatus(g);
 	}
-		
+
 	private void drawWayPointData(Graphics g){
 		String strTemp = MyLocale.getMsg(1512, "Waypoint");
 		g.setColor(Color.DarkBlue);
 		g.fillRect(0, 0, fm.getTextWidth(strTemp) + 4, lineHeight);
 		g.setColor(Color.White);		
 		g.drawText(strTemp, 2, 0);
-		
+
 		g.setColor(Color.Black);		
-		
+
 		int metricSystem = Global.getPref().metricSystem;
 		Double tmp = new Double();
 		strTemp = "";
@@ -579,19 +547,19 @@
 		}
 		else strTemp = "--- "+Metrics.getUnit(bigUnit);
 		g.drawText(strTemp, 2, lineHeight);
-		
+
 		tmp.set(gotoDir);
 		if ((tmp.value <= 360) && (tmp.value >= -360))
 			strTemp = tmp.toString(0,0,0) + " " + MyLocale.getMsg(1502,"deg");
 		else strTemp = "---" + " " + MyLocale.getMsg(1502,"deg");
 		g.drawText(strTemp, 2, 2*lineHeight);
 	}
-	
+
 	private void drawGpsData(Graphics g){
 		g.setColor(RED);
-		
+
 		String strHeadline = MyLocale.getMsg(1501,"Current");
-		
+
 		Double tmp = new Double();
 
 		String strSpeed = null;
@@ -615,7 +583,7 @@
 				strSpeed = MyLocale.formatDouble(tmp,"0.0") + unit;
 			}
 		}
-		
+
 		tmp.set(moveDir);
 		String strMoveDir = "---" + " " + MyLocale.getMsg(1502,"deg");
 		if ((tmp.value <= 360) && (tmp.value >= -360))
@@ -623,16 +591,16 @@
 
 		int textWidth = java.lang.Math.max(fm.getTextWidth(strSpeed), fm.getTextWidth(strMoveDir));
 		textWidth = java.lang.Math.max(textWidth, fm.getTextWidth(strHeadline));
-		
+
 		int startX = location.width - (textWidth + 4);
 		g.fillRect(startX, 0, location.width - startX, lineHeight);
-		
+
 		g.setColor(Color.Black);		
 		g.drawText(strHeadline, startX + 2, 0);		
 		g.drawText(strSpeed, startX + 2, lineHeight);
 		g.drawText(strMoveDir, startX + 2, 2*lineHeight);
 	}
-	
+
 	private void drawLuminaryData(Graphics g){
 		g.setColor(YELLOW);
 
@@ -651,20 +619,20 @@
 		g.drawText(m_Luminary, 2, startY);
 		g.drawText(strSunDir, 2, startY + lineHeight);
 	}
-	
+
 	private void drawGpsStatus(Graphics g){
 		if ((m_fix > 0) && (m_sats >= 0)) {
 			// Set background to signal quality
 			g.setColor(GREEN);
 		}
 		else
-		// receiving data, but signal ist not good
-		if ((m_fix == 0) && (m_sats >= 0)) {
-			g.setColor(YELLOW);
-		}
-		else {
-			g.setColor(RED);
-		}
+			// receiving data, but signal ist not good
+			if ((m_fix == 0) && (m_sats >= 0)) {
+				g.setColor(YELLOW);
+			}
+			else {
+				g.setColor(RED);
+			}
 
 		String strSats = "Sats: -";
 		if (m_sats >= 0) {
@@ -688,7 +656,7 @@
 		{
 			// select moveDirColor according to difference to gotoDir
 			Color moveDirColor = RED;
-			
+
 			if (gotoDir < 360 && gotoDir > -360 && moveDir < 360 && moveDir > -360)
 			{
 				float diff = java.lang.Math.abs(moveDir - gotoDir);
@@ -700,7 +668,7 @@
 				{
 					diff = 360.0f - diff;
 				}
-				
+
 				if (diff <= 12.25f)
 				{
 					moveDirColor = GREEN;
@@ -731,11 +699,11 @@
 					//drawDoubleArrow(g, 360 - moveDir, BLUE, new Color(175,0,0), 1.0f);
 					//drawRose(g, 360 - moveDir, new Color(100,100,100), new Color(200,200,200), 1.0f);
 					drawFullRose(g, 360 - moveDir, new Color(255,255,255), new Color(200,200,200), new Color(150,150,150), new Color(200,200,200), new Color(200,200,200), new Color(75,75,75), 1.0f, false, false);
-					
+
 					int radius = (int)(roseRadius * 0.75f);
 					g.setPen(new Pen(RED,Pen.SOLID,3));
 					g.drawLine(location.width/2, location.height/2 - radius, location.width/2, location.height/2 + radius);
-					
+
 					if (gotoDir < 360 && gotoDir > -360) drawThinArrow(g, gotoDir - moveDir, Color.DarkBlue, moveDirColor, 1.0f);
 					if (sunDir < 360 && sunDir > -360) drawSunArrow(g, sunDir - moveDir, YELLOW, 0.75f);					
 				}				
@@ -765,23 +733,23 @@
 		pointsY[2] = centerY - new Float(halfArrowWidth * java.lang.Math.cos(angleRad + java.lang.Math.PI)).intValue();
 		pointsX[3] = centerX + new Float(halfArrowWidth * java.lang.Math.sin(angleRad - java.lang.Math.PI / 2.0)).intValue();
 		pointsY[3] = centerY - new Float(halfArrowWidth * java.lang.Math.cos(angleRad - java.lang.Math.PI / 2.0)).intValue();
-		
-//		g.setPen(new Pen(col,Pen.SOLID,3));
-//		g.drawLine(centerX,centerY,pointX,pointY);
-		
+
+		//		g.setPen(new Pen(col,Pen.SOLID,3));
+		//		g.drawLine(centerX,centerY,pointX,pointY);
+
 		g.setPen(new Pen(Color.Black,Pen.SOLID,1));
 		g.setBrush(new Brush(col, Brush.SOLID));
 		g.fillPolygon(pointsX, pointsY, 4);
 		g.fillEllipse(circleX - circleRadius, circleY - circleRadius, 2 * circleRadius, 2 * circleRadius);
 	}
-	
+
 	private void drawThinArrow(Graphics g, float angle, Color col, Color colPoint, float scale) {
 		float angleRad = (angle) * (float)java.lang.Math.PI / 180;
 		int centerX = location.width/2, centerY = location.height/2;
 		float arrowLength = roseRadius * scale;
 		float halfOpeningAngle = (float)(java.lang.Math.PI * 0.03);
 		float sideLineLength = arrowLength * 0.75f;
-		
+
 		int[] pointsX = new int[4];
 		int[] pointsY = new int[4];
 
@@ -793,7 +761,7 @@
 		pointsY[2] = centerY - new Float(sideLineLength * java.lang.Math.cos(angleRad + halfOpeningAngle)).intValue();
 		pointsX[3] = centerX;
 		pointsY[3] = centerY;
-		
+
 		g.setPen(new Pen(Color.Black,Pen.SOLID,1));
 		g.setBrush(new Brush(col, Brush.SOLID));
 		g.fillPolygon(pointsX, pointsY, 4);
@@ -802,7 +770,7 @@
 			g.fillPolygon(pointsX, pointsY, 3);			
 		}
 	}
-	
+
 	private void drawFullRose(Graphics g, float angle, Color colLeft, Color colRight, Color colNorthLeft, Color colNorthRight,
 			Color colBorder, Color colText, float scale, boolean bDrawText, boolean bDrawEightArrows) {
 		float subScale1 = 1.0f;
@@ -821,15 +789,15 @@
 		drawRosePart(g, 180 + angle, colLeft, colRight, colBorder, colText, scale * subScale1, innerScale, "S", bDrawText);
 		drawRosePart(g, 270 + angle, colLeft, colRight, colBorder, colText, scale * subScale1, innerScale, "W", bDrawText);
 	}
-	
+
 	private void drawRosePart(Graphics g, float angle, Color colLeft, Color colRight, Color colBorder, Color colText, float scale, float innerScale, String strDir, boolean bDrawText) {
 		float angleRad = angle * (float)java.lang.Math.PI / 180;
 		float angleRadText = (angle + 7.5f) * (float)java.lang.Math.PI / 180;
 		int centerX = location.width/2, centerY = location.height/2;
-				
+
 		float arrowLength = roseRadius * scale;
 		float halfArrowWidth = arrowLength * innerScale;
-		
+
 		int[] pointsX = new int[3];
 		int[] pointsY = new int[3];
 
@@ -839,17 +807,17 @@
 		pointsY[1] = centerY - new Float(arrowLength * java.lang.Math.cos(angleRad)).intValue();
 		pointsX[2] = centerX + new Float(halfArrowWidth * java.lang.Math.sin(angleRad - java.lang.Math.PI / 4.0)).intValue();
 		pointsY[2] = centerY - new Float(halfArrowWidth * java.lang.Math.cos(angleRad - java.lang.Math.PI / 4.0)).intValue();
-				
+
 		g.setPen(new Pen(colBorder,Pen.SOLID,1));
 		g.setBrush(new Brush(colLeft, Brush.SOLID));
 		g.fillPolygon(pointsX, pointsY, 3);
 
 		pointsX[2] = centerX + new Float(halfArrowWidth * java.lang.Math.sin(angleRad + java.lang.Math.PI / 4.0)).intValue();
 		pointsY[2] = centerY - new Float(halfArrowWidth * java.lang.Math.cos(angleRad + java.lang.Math.PI / 4.0)).intValue();
-		
+
 		g.setBrush(new Brush(colRight, Brush.SOLID));
 		g.fillPolygon(pointsX, pointsY, 3);
-					
+
 		if (bDrawText){
 			int tempFontSize = new Float(scale * mainFont.getSize()).intValue();
 			Font tempFont = new Font(mainFont.getName(), Font.BOLD, tempFontSize);
@@ -862,18 +830,18 @@
 			float stringPosition = arrowLength - stringGap / 2.0f;
 			g.setColor(colText);
 			g.drawText(strDir, centerX + new Float(stringPosition * java.lang.Math.sin(angleRadText) - stringWidth / 2.0f).intValue(),
-					           centerY - new Float(stringPosition * java.lang.Math.cos(angleRadText) + stringHeight / 2.0f).intValue());
-			
+					centerY - new Float(stringPosition * java.lang.Math.cos(angleRadText) + stringHeight / 2.0f).intValue());
+
 			g.setFont(mainFont);
 		}
 	}
-	
+
 	private void drawThickArrow(Graphics g, float angle, Color col, float scale) {
 		float angleRad = (angle) * (float)java.lang.Math.PI / 180;
 		int centerX = location.width/2, centerY = location.height/2;
 		float arrowLength = roseRadius * scale;
 		float halfArrowWidth = arrowLength * 0.1f;
-		
+
 		int[] pointsX = new int[4];
 		int[] pointsY = new int[4];
 
@@ -885,12 +853,12 @@
 		pointsY[2] = centerY - new Float(halfArrowWidth * java.lang.Math.cos(angleRad + java.lang.Math.PI)).intValue();
 		pointsX[3] = centerX + new Float(halfArrowWidth * java.lang.Math.sin(angleRad - java.lang.Math.PI / 2.0)).intValue();
 		pointsY[3] = centerY - new Float(halfArrowWidth * java.lang.Math.cos(angleRad - java.lang.Math.PI / 2.0)).intValue();
-		
+
 		g.setPen(new Pen(Color.Black,Pen.SOLID,1));
 		g.setBrush(new Brush(col, Brush.SOLID));
 		g.fillPolygon(pointsX, pointsY, 4);
 	}
-	
+
 	public void setNorthCentered(boolean nc) {
 		northCentered = nc;
 		if (northCentered != Global.getPref().northCenteredGoto) {
@@ -899,7 +867,7 @@
 		}
 		refresh();
 	}
-	
+
 	public boolean isNorthCentered() {
 		return northCentered;
 	}

Modified: trunk/src/CacheWolf/navi/LambertProjection.java
===================================================================
--- trunk/src/CacheWolf/navi/LambertProjection.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/navi/LambertProjection.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -1,8 +1,8 @@
 package CacheWolf.navi;
 
 import CacheWolf.CWPoint;
-public class LambertProjection extends Projection{
-	
+public final class LambertProjection extends Projection{
+
 	double falseNorthing;
 	double falseEasting;
 	//double firstStandardParallel;
@@ -10,9 +10,9 @@
 	double centralLat;
 	double centralLon;
 	Ellipsoid ellip;
-	
+
 	double e, n, F0, Rb;
-	
+
 	/**
 	 * 
 	 * @param falseNorthing: in meters
@@ -23,29 +23,32 @@
 	 * @param centralLon
 	 */
 	public LambertProjection(int epsgcode_, double falseNorthing_, double falseEasting_, 
-			double firstStandardParallel_, double secondSandardParallel_,	
+			double firstStandardParallel_, double secondSandardParallel_, double scale_,
 			double centralLat_,	double centralLon_, Ellipsoid ellip_) {
 		epsgCode = epsgcode_;
-		falseNorthing = falseEasting_;
+		falseNorthing = falseNorthing_;
 		falseEasting = falseEasting_;
 		double firstStandardParallel = firstStandardParallel_ * java.lang.Math.PI / 180;
 		double secondSandardParallel = secondSandardParallel_* java.lang.Math.PI / 180;
 		centralLat = centralLat_ * java.lang.Math.PI / 180;
 		centralLon = centralLon_ * java.lang.Math.PI / 180;
 		ellip = ellip_;
-		
 
+
 		double f = ellip.getFlattening();
 		e = java.lang.Math.sqrt(2.0 * f - f*f);
 		double m1 = java.lang.Math.cos(firstStandardParallel) / java.lang.Math.sqrt(1.0 - e*e * java.lang.Math.pow(java.lang.Math.sin(firstStandardParallel),2));
 		double m2 = java.lang.Math.cos(secondSandardParallel) / java.lang.Math.sqrt(1.0 - e*e * java.lang.Math.pow(java.lang.Math.sin(secondSandardParallel),2));
-		double t0 = java.lang.Math.tan(java.lang.Math.PI/4 - centralLat / 2) / java.lang.Math.pow((1.0 - (e * java.lang.Math.sin(centralLat))) / (1.0 + (e * java.lang.Math.sin(centralLat))), e/2);
-		double t1 = java.lang.Math.tan(java.lang.Math.PI/4 - firstStandardParallel/ 2) / java.lang.Math.pow((1.0 - (e * java.lang.Math.sin(firstStandardParallel ))) / (1.0 + (e * java.lang.Math.sin(firstStandardParallel ))), e/2);
-		double t2 = java.lang.Math.tan(java.lang.Math.PI/4 - secondSandardParallel/ 2) / java.lang.Math.pow((1.0 - (e * java.lang.Math.sin(secondSandardParallel))) / (1.0 + (e * java.lang.Math.sin(secondSandardParallel))), e/2);
-		n = (java.lang.Math.log(m1) - java.lang.Math.log(m2)) / (java.lang.Math.log(t1) - java.lang.Math.log(t2));
+		double t0 = java.lang.Math.tan(java.lang.Math.PI/4 - centralLat           / 2) / java.lang.Math.pow((1.0 - (e * java.lang.Math.sin(centralLat           ))) / (1.0 + (e * java.lang.Math.sin(centralLat           ))), e/2);
+		double t1 = java.lang.Math.tan(java.lang.Math.PI/4 - firstStandardParallel/ 2) / java.lang.Math.pow((1.0 - (e * java.lang.Math.sin(firstStandardParallel))) / (1.0 + (e * java.lang.Math.sin(firstStandardParallel))), e/2);
+		if (firstStandardParallel == secondSandardParallel) n = java.lang.Math.sin(centralLat); // one standard parallel
+		else {
+			double t2 = java.lang.Math.tan(java.lang.Math.PI/4 - secondSandardParallel/ 2) / java.lang.Math.pow((1.0 - (e * java.lang.Math.sin(secondSandardParallel))) / (1.0 + (e * java.lang.Math.sin(secondSandardParallel))), e/2);
+			n = (java.lang.Math.log(m1) - java.lang.Math.log(m2)) / (java.lang.Math.log(t1) - java.lang.Math.log(t2));
+		}
 		// double nsin = java.lang.Math.sin(centralLat); // nsin and n should be equal
 		// Vm.debug("n-log: " + n+ " n-sin phi: " + nsin);
-		F0 = m1 / (n * java.lang.Math.pow(t1, n)); // pow(t2???, n)
+		F0 = m1 / (n * java.lang.Math.pow(t1, n)) * scale_; // pow(t2???, n)
 		Rb = ellip.a * F0 * java.lang.Math.pow(t0, n);
 	}
 
@@ -60,7 +63,7 @@
 	 */
 	public ProjectedPoint project(CWPoint ll, ProjectedPoint pp) {
 		// formulas taken from http://surveying.wb.psu.edu/psu-surv/Projects/PASingleZone.pdf page 7-9 (Appendix I), see also http://www.geoclub.de/viewtopic.php?f=54&t=23912 (German)
-		
+
 		double lat = ll.latDec * java.lang.Math.PI / 180;
 		double lon = ll.lonDec * java.lang.Math.PI / 180;
 		double t = java.lang.Math.tan(java.lang.Math.PI /4 - lat / 2) / java.lang.Math.pow((1.0 - (e * java.lang.Math.sin(lat))) / (1.0 + (e * java.lang.Math.sin(lat))), e/2);
@@ -80,10 +83,10 @@
 
 	public CWPoint unproject(ProjectedPoint pp) {
 		//Vm.debug("unproject: "+pp.toString(0, "", " ", AUSTRIAN_LAMBERT));
-		
+
 		double ns = Rb - pp.northing;
 		double es = pp.easting;
-		double R = java.lang.Math.sqrt(es*es + ns*ns);
+		double R = java.lang.Math.sqrt(es*es + ns*ns) * java.lang.Math.abs(n)/n;
 		double t = java.lang.Math.pow(R/(ellip.a*F0), 1/n);
 		double gamma = java.lang.Math.atan2(es, ns); // TODO unsure, whether always the correct sign is produced
 		double lambda = centralLon + gamma/n;
@@ -91,23 +94,23 @@
 		double phi1;
 		boolean iterate;
 		do {
-		  phi1 = java.lang.Math.PI / 2 - 2* java.lang.Math.atan(t*java.lang.Math.pow((1-e*java.lang.Math.sin(phi0))/(1+e*java.lang.Math.sin(phi0)),e/2));
-		  iterate = (java.lang.Math.abs(phi1 - phi0) > 0.000001);
-		  phi0 = phi1;
+			phi1 = java.lang.Math.PI / 2 - 2* java.lang.Math.atan(t*java.lang.Math.pow((1-e*java.lang.Math.sin(phi0))/(1+e*java.lang.Math.sin(phi0)),e/2));
+			iterate = (java.lang.Math.abs(phi1 - phi0) > 0.000001);
+			phi0 = phi1;
 		} while (iterate);
-		
+
 		CWPoint ret = new CWPoint(phi1 * 180 / java.lang.Math.PI, lambda * 180 / java.lang.Math.PI);
 		//Vm.debug("unproject: ret: " + ret.toString(CWPoint.DD));
 		return ret;
 	}
-	
+
 	public double getNorthing(ProjectedPoint pp) {
 		return pp.northing + falseNorthing;
 	}
 	public double getEasting(ProjectedPoint pp) {
 		return pp.easting + falseEasting;
 	}
-	
+
 	public ProjectedPoint set(double northing_, double easting_, ProjectedPoint pp) {
 		if (pp == null) {pp = new ProjectedPoint(); pp.projection = this; }
 		pp.setRaw(northing_ - falseNorthing, easting_ - falseEasting);

Modified: trunk/src/CacheWolf/navi/MapImporter.java
===================================================================
--- trunk/src/CacheWolf/navi/MapImporter.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/navi/MapImporter.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -51,7 +51,7 @@
 	public void updatePosition(int px, int py){
 		if(GCPs.size()>=3  || (wfl.topleft.isValid())){
 			CWPoint p = wfl.calcLatLon(px,py);
-			infLabel.setText("--> " + p.getLatDeg(CWPoint.DMS) + " " +p.getLatMin(CWPoint.DMM) + " / " + p.getLonDeg(CWPoint.DMS) + " " + p.getLonMin(CWPoint.DMM));
+			infLabel.setText("--> " + p.getLatDeg(TransformCoordinates.DMS) + " " +p.getLatMin(TransformCoordinates.DMM) + " / " + p.getLonDeg(TransformCoordinates.DMS) + " " + p.getLonMin(TransformCoordinates.DMM));
 		}
 	}
 

Modified: trunk/src/CacheWolf/navi/MapInfoObject.java
===================================================================
--- trunk/src/CacheWolf/navi/MapInfoObject.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/navi/MapInfoObject.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -433,8 +433,8 @@
 		public GCPoint(double lat, double lon){
 			this.latDec = lat;
 			this.lonDec = lon;
-			this.utmValid = false;
 		}
+		
 		public GCPoint(CWPoint ll, Point px) {
 			super(ll);
 			bitMapX = px.x;

Modified: trunk/src/CacheWolf/navi/MapLoader.java
===================================================================
--- trunk/src/CacheWolf/navi/MapLoader.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/navi/MapLoader.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -222,7 +222,7 @@
 
 	public String createFilename(CWPoint center, float scale) {
 		String filename = Common.ClearForFileName(currentOnlineMapService.getNameForFileSystem()+"_s"+Common.DoubleToString(scale, 1)
-				+ "_c" + center.toString(CWPoint.LAT_LON).replace(',', '-'));
+				+ "_c" + center.toString(TransformCoordinates.LAT_LON).replace(',', '-'));
 		return filename;
 	}
 
@@ -557,13 +557,13 @@
 			bbox += TransformCoordinates.wgs84ToEpsg(buttomleft, coordinateReferenceSystem[crs]).toString(2, "", ",");
 			bbox += "," + TransformCoordinates.wgs84ToEpsg(topright, coordinateReferenceSystem[crs]).toString(2, "", ",");
 		} else if (coordinateReferenceSystem[0] == TransformCoordinates.EPSG_WGS84) 
-			bbox += buttomleft.toString(CWPoint.LON_LAT)  + "," + topright.toString(CWPoint.LON_LAT);
+			bbox += buttomleft.toString(TransformCoordinates.LON_LAT)  + "," + topright.toString(TransformCoordinates.LON_LAT);
 		else throw new IllegalArgumentException(MyLocale.getMsg(4828, "Coordinate system not supported by cachewolf:")+" " + coordinateReferenceSystem.toString());
 		String ret = MainUrl + "SERVICE=WMS" + "&"+ versionUrlPart + "&" + requestUrlPart + "&" + 
 		coordinateReferenceSystemUrlPart[crs] + "&" + bbox + 
 		"&WIDTH=" + pixelsize.x + "&HEIGHT=" + pixelsize.y + "&" + 
 		layersUrlPart + "&" + stylesUrlPart + "&" + imageFormatUrlPart;
-		Global.getPref().log(ret + " WGS84: Buttom left: " + buttomleft.toString(CWPoint.DD) + "top right: " + topright.toString(CWPoint.DD));
+		Global.getPref().log(ret + " WGS84: Buttom left: " + buttomleft.toString(TransformCoordinates.DD) + "top right: " + topright.toString(TransformCoordinates.DD));
 		return ret;
 	}
 
@@ -691,7 +691,7 @@
 		if (     (center.lonDec <= -30   && center.lonDec >= -170) || 
 				( center.lonDec > 360-30 && center.lonDec <= 360-170) ) zone = "USA0409"; // TODO test which zone-code ist best for asia
 		else zone = "EUR0809";
-		String quelle = MainUrl + "&CenP=" + center.toString(CWPoint.LAT_LON);
+		String quelle = MainUrl + "&CenP=" + center.toString(TransformCoordinates.LAT_LON);
 		quelle = quelle + "&Alti="+Convert.toString(zoomlevel)+"&Lang="+zone+"&Size="+Convert.toString(pixelsize.x)+","+Convert.toString(pixelsize.y)+"&Offs=0,0&MapS=0"; //&Pins=|" + latD.toString().replace(',', '.') + "," + lonD.toString().replace(',', '.') + "|5|";
 		return quelle;
 	}

Modified: trunk/src/CacheWolf/navi/MapLoaderGui.java
===================================================================
--- trunk/src/CacheWolf/navi/MapLoaderGui.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/navi/MapLoaderGui.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -344,7 +344,7 @@
 			}
 			if (ev.target == coosBtn) {
 				CoordsScreen cs = new CoordsScreen();
-				cs.setFields(center, CWPoint.CW);
+				cs.setFields(center, TransformCoordinates.CW);
 				if (cs.execute() != FormBase.IDCANCEL) {
 					center = cs.getCoords();
 					coosBtn.setText(center.toString());

Modified: trunk/src/CacheWolf/navi/ProjectedPoint.java
===================================================================
--- trunk/src/CacheWolf/navi/ProjectedPoint.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/navi/ProjectedPoint.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -2,21 +2,15 @@
 
 import CacheWolf.CWPoint;
 
-public class ProjectedPoint {
-	public final static int GK = 1;
-	public final static int LAMBERT = 2;
+public final class ProjectedPoint {
 
-	public static final int LOCALSYSTEM_GERMAN_GK            = 4900;
-	public static final int LOCALSYSTEM_ITALIAN_GB           = 3900; 
-	public static final int LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD = 4300;
-	public static final int LOCALSYSTEM_AUSTRIAN_LAMBERT_NEW = 4301;
-	public static final int LOCALSYSTEMFRANCE_LAMBERT_I2IV   = 3300; // France not yet implemented
-	public static final int LOCALSYSTEM_DEFAULT = LOCALSYSTEM_GERMAN_GK;
-
-	public static final LambertProjection PJ_AUSTRIAN_LAMBERT_OLD = new LambertProjection(TransformCoordinates.EPSG_AUSTRIAN_LAMBERT_OLD, 400000, 400000, 49.0, 46.0, 47.5, 13.333333, TransformCoordinates.BESSEL); 
-	public static final LambertProjection PJ_AUSTRIAN_LAMBERT_NEW = new LambertProjection(TransformCoordinates.EPSG_AUSTRIAN_LAMBERT_OLD, 400000, 400000, 49.0, 46.0, 47.5, 13.333333, TransformCoordinates.WGS84);
-	public static final GkProjection PJ_GERMAN_GK  = new GkProjection(TransformCoordinates.EPSG_GK2 -2           , 0, 500000, 3, 1000000, 0, 1     , TransformCoordinates.BESSEL);
+	public static final LambertProjection PJ_AUSTRIAN_LAMBERT_OLD 	= new LambertProjection(TransformCoordinates.EPSG_AUSTRIAN_LAMBERT_OLD,   400000, 400000, 49.0, 46.0, 1         , 47.5, 13.333333, TransformCoordinates.BESSEL); 
+	public static final LambertProjection PJ_AUSTRIAN_LAMBERT_NEW 	= new LambertProjection(TransformCoordinates.EPSG_AUSTRIAN_LAMBERT_NEW,   400000, 400000, 49.0, 46.0, 1         , 47.5, 13.333333, TransformCoordinates.WGS84);
+	public static final LambertProjection PJ_FRENCH_LAMBERT_NTF_II 	= new LambertProjection(TransformCoordinates.EPSG_FRENCH_LAMBERT_NTF_II, 2200000, 600000, 46.8, 46.8, 0.99987742, 46.8, 2.337229172 /*(2+20/60+14.025/3600) */, TransformCoordinates.CLARKE1880IGN);
+	public static final LambertProjection PJ_TEST 	                = new LambertProjection(TransformCoordinates.EPSG_TEST,  150000, 250000, 18, 18, 1         , 18, -77, TransformCoordinates.CLARKE1866); 
+	public static final GkProjection PJ_GERMAN_GK  = new GkProjection(TransformCoordinates.EPSG_GERMAN_GK2 -2           , 0, 500000, 3, 1000000, 0, 1     , TransformCoordinates.BESSEL);
 	public static final GkProjection PJ_ITALIAN_GB = new GkProjection(TransformCoordinates.EPSG_ITALIAN_GB_EW1 -1, 0, 500000, 6, 1000000, 0, 0.9996, TransformCoordinates.HAYFORD1909);
+	public static final UTMProjection PJ_UTM_WGS84 = new UTMProjection(TransformCoordinates.WGS84);
 
 	protected double northing; // TODO make these private
 	protected double easting; // because it is not clear for routines from outside if the stripe number is included, make this available only through methods
@@ -53,13 +47,18 @@
 	 * if false p will be projected to epsg
 	 */
 	public ProjectedPoint(CWPoint p, int epsg_localsystem, boolean isProjected, boolean isLocalsystem) {
-		if (isProjected) set(p, epsg_localsystem, isLocalsystem); 
+		if (isProjected) set(p, null, epsg_localsystem, isLocalsystem); 
 		else {
 			projection = (isLocalsystem ? getProjectionFromLs(epsg_localsystem) : getProjection(epsg_localsystem) );
 			if (isLocalsystem)	projection.project(p, this);
 			else				projection.project(p, this, epsg_localsystem); // the epsg is requiered here because each zone has a different epsg, so the zone is already fixed
 		}
 	}
+	
+	public ProjectedPoint(CWPoint p, String zone, int epsg_localsystem, boolean isLocalsystem) {
+		set(p, zone, epsg_localsystem, isLocalsystem); 
+	}
+	
 
 
 
@@ -67,21 +66,24 @@
 		switch (epsg) {
 		case TransformCoordinates.EPSG_AUSTRIAN_LAMBERT_OLD: return PJ_AUSTRIAN_LAMBERT_OLD;
 		case TransformCoordinates.EPSG_AUSTRIAN_LAMBERT_NEW: return PJ_AUSTRIAN_LAMBERT_NEW;
-		case TransformCoordinates.EPSG_GK2: 
-		case TransformCoordinates.EPSG_GK3: 
-		case TransformCoordinates.EPSG_GK4: return PJ_GERMAN_GK;
+		case TransformCoordinates.EPSG_GERMAN_GK2: 
+		case TransformCoordinates.EPSG_GERMAN_GK3: 
+		case TransformCoordinates.EPSG_GERMAN_GK4: return PJ_GERMAN_GK;
 		case TransformCoordinates.EPSG_ITALIAN_GB_EW1:
 		case TransformCoordinates.EPSG_ITALIAN_GB_EW2: return PJ_ITALIAN_GB;
+		case TransformCoordinates.EPSG_FRENCH_LAMBERT_NTF_II : return PJ_FRENCH_LAMBERT_NTF_II;
 		default: throw new IllegalArgumentException("ProjectedPoint.getProjection: epsg-code: " + epsg + "not supported");
 		}
 	}
 	
 	public static Projection getProjectionFromLs(int localsystem) {
 		switch (localsystem) {
-		case LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD:	return PJ_AUSTRIAN_LAMBERT_OLD;
-		case LOCALSYSTEM_AUSTRIAN_LAMBERT_NEW:	return PJ_AUSTRIAN_LAMBERT_NEW;
-		case LOCALSYSTEM_GERMAN_GK:	          	return PJ_GERMAN_GK; 
-		case LOCALSYSTEM_ITALIAN_GB:			return PJ_ITALIAN_GB;	
+		case TransformCoordinates.LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD:	return PJ_AUSTRIAN_LAMBERT_OLD;
+		case TransformCoordinates.LOCALSYSTEM_AUSTRIAN_LAMBERT_NEW:	return PJ_AUSTRIAN_LAMBERT_NEW;
+		case TransformCoordinates.LOCALSYSTEM_GERMAN_GK:	          	return PJ_GERMAN_GK; 
+		case TransformCoordinates.LOCALSYSTEM_ITALIAN_GB:			return PJ_ITALIAN_GB;
+		case TransformCoordinates.LOCALSYSTEM_FRANCE_LAMBERT_IIE:		return PJ_FRENCH_LAMBERT_NTF_II;
+		case TransformCoordinates.LOCALSYSTEM_UTM_WGS84:				return PJ_UTM_WGS84;
 		default: throw new IllegalArgumentException("ProjectedPoint(CWPoint, int): region "+localsystem+" not supported");
 		}
 	}
@@ -151,6 +153,11 @@
 		return zone;
 	}
 	
+	public String getZoneString() {
+		if (projection.zoneSeperately) return projection.getZone(this);
+		else return "";
+	}
+	
 	public int getEpsgCode() {
 		return projection.getEpsgcode(this);
 	}
@@ -159,19 +166,31 @@
 	 * Set with local notation, incl. falsenorthing and -easting
 	 * @param northing_ 
 	 * @param easting_
+	 * @param zone only put something here if the zone is not included in easting or northing and must be known, otherwise zone should be null
 	 */
-	public void set(double northing_, double easting_) {
-		projection.set(northing_, easting_, this);
+	public void set(double northing_, double easting_, String zone) {
+		if (zone == null) projection.set(northing_, easting_, this);
+		else              projection.set(northing_, easting_, zone, this);
 	}
 
-	public void set(CWPoint projected, int epsg_localsystem, boolean isLocalsystem) {
+	/**
+	 * Set with local notation, incl. falsenorthing and -easting
+	 * @param northing_ 
+	 * @param easting_
+	 * @param zone only put something here if the zone is not included in easting or northing and must be known, otherwise zone should be null
+	 */
+	public void set(CWPoint projected, String zone, int epsg_localsystem, boolean isLocalsystem) {
 		projection = (isLocalsystem ? getProjectionFromLs(epsg_localsystem) : getProjection(epsg_localsystem) );
-		set(projected.latDec, projected.lonDec);
+		set(projected.latDec, projected.lonDec, zone);
 	}
 
 	public String toString() {
 		return toString(2, "", " ");
 	}
+	
+	public String toHumanReadableString() {
+		return projection.toHumanReadableString(this);
+	}
 
 	public CWPoint unproject() {
 		return projection.unproject(this);
@@ -184,7 +203,8 @@
 		e.set(projection.getEasting(this));
 		n.decimalPlaces = decimalplaces;
 		e.decimalPlaces = decimalplaces;
-		return prefix + e.toString().replace(',', '.') + seperator + n.toString().replace(',', '.');
+		String z = (projection.zoneSeperately ? projection.getZone(this)+" " : "");
+		return z + prefix + e.toString().replace(',', '.') + seperator + n.toString().replace(',', '.');
 	}
 
 	/**

Modified: trunk/src/CacheWolf/navi/Projection.java
===================================================================
--- trunk/src/CacheWolf/navi/Projection.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/navi/Projection.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -10,6 +10,7 @@
 	 * corresponding epsg-codes (see method getEpsgcode)
 	 */
 	public int epsgCode;
+	public boolean zoneSeperately = false;
 
 	/**
 	 * The zone is automatically determined
@@ -40,4 +41,16 @@
 		return epsgCode + pp.zone;
 	}
 	public abstract ProjectedPoint set(double northing, double easting, ProjectedPoint pp);
+	public ProjectedPoint set(double northing, double easting, String zone, ProjectedPoint pp) {
+		throw new UnsupportedOperationException("Projection.set (double, double String, ProjectedPoint): This projection uses no seperate zones");
+	}
+	public String getZone(ProjectedPoint pp) {
+		throw new UnsupportedOperationException("Projection.getZone (double, double String, ProjectedPoint): This projection uses no seperate zones");
+		
+	}
+
+	public String toHumanReadableString(ProjectedPoint pp) {
+	 	return pp.toString(0, "", " ");
+	}
+	
 }

Modified: trunk/src/CacheWolf/navi/TransformCoordinates.java
===================================================================
--- trunk/src/CacheWolf/navi/TransformCoordinates.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/navi/TransformCoordinates.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -28,24 +28,78 @@
  */
 public final class TransformCoordinates {
 
-	public static final int EPSG_WGS84 = 4326; 
-	public static final int EPSG_ETRS89 = 25832; // TODO support it anyhow 
-	public static final int EPSG_GK2 = 31466; 
-	public static final int EPSG_GK3 = 31467; 
-	public static final int EPSG_GK4 = 31468; 
-	public static final int EPSG_GK5 = 31469;
+	public static final int EPSG_WGS84 					= 4326; 
+	public static final int EPSG_ETRS89 				= 25832; // TODO support it anyhow 
+	/** Gau?-Kr?ger, Bessel 1841, Potsdam (DHDN)  */
+	public static final int EPSG_GERMAN_GK2 			= 31466; 
+	public static final int EPSG_GERMAN_GK3 			= 31467; 
+	public static final int EPSG_GERMAN_GK4 			= 31468; 
+	public static final int EPSG_GERMAN_GK5 			= 31469;
 	/** Gau?-Boaga, Monte Mario, Roma 1940, IT_ROMA1940 */
-	public static final int EPSG_ITALIAN_GB_EW1 = 3003; 
-	public static final int EPSG_ITALIAN_GB_EW2 = 3004;
+	public static final int EPSG_ITALIAN_GB_EW1 		= 3003; 
+	public static final int EPSG_ITALIAN_GB_EW2 		= 3004;
 	/** Austrian Lambert, Bessel 1841, Hermannskogel */
-	public static final int EPSG_AUSTRIAN_LAMBERT_OLD = 31287;
+	public static final int EPSG_AUSTRIAN_LAMBERT_OLD 	= 31287;
 	/** Austrian Lambert, ETRS89 */
-	public static final int EPSG_AUSTRIAN_LAMBERT_NEW = 3416;
+	public static final int EPSG_AUSTRIAN_LAMBERT_NEW 	= 3416;
+	/** French Lambert, Clarke 1880 IGN */
+	public static final int EPSG_FRENCH_LAMBERT_NTF_I 	= 27571;
+	public static final int EPSG_FRENCH_LAMBERT_NTF_II	= 27572;
+	public static final int EPSG_FRENCH_LAMBERT_NTF_III	= 27573;
+	public static final int EPSG_FRENCH_LAMBERT_NTF_IV 	= 27574;
+	public static final int EPSG_TEST				 	= -5;
+	
+	
+	public static final int LOCALSYSTEM_GERMAN_GK           	= 4900;
+	public static final int LOCALSYSTEM_ITALIAN_GB          	= 3900;
+	public static final int LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD	= 4300;
+	public static final int LOCALSYSTEM_AUSTRIAN_LAMBERT_NEW	= 4301;
+	public static final int LOCALSYSTEM_FRANCE_LAMBERT_IIE  	= 3300;
+	public static final int LOCALSYSTEM_UTM_WGS84            	= 10000;
+	/** returned from some methods if not supported */
+	public static final int LOCALSYSTEM_NOT_SUPPORTED			= -1;
+	public static final int LOCALSYSTEM_DEFAULT = LOCALSYSTEM_GERMAN_GK;
+	public static final int DD      						 	= 10001; // these (10001+) may not conflict with LOCALSYSTEM_XXX,
+	public static final int DMM     							= 10002; // they are not used here, but in CWPoint
+	public static final int DMS     							= 10003;
+	public static final int LAT_LON 							= 10004;
+	public static final int LON_LAT 							= 10005;
+	/** it is a projected point or not WGS84 = none of the above */
+	public static final int CUSTOM  							= 10006;
+	/** define default */
+	public static final int CW      							= DMM;
+	/** only used as format to read */
+	public static final int REGEX   							= 10008;
+	public static final int UTM     							= LOCALSYSTEM_UTM_WGS84;
 
-	public static final Ellipsoid BESSEL      = new Ellipsoid(6377397.155, 6356078.962, true);
-	public static final Ellipsoid WGS84       = new Ellipsoid(6378137.000, 6356752.314, true);
-	public static final Ellipsoid HAYFORD1909 = new Ellipsoid(6378388    , 297        , false);
+	public static final Ellipsoid BESSEL      	= new Ellipsoid(6377397.155, 6356078.962, true);
+	public static final Ellipsoid WGS84       	= new Ellipsoid(6378137.000, 6356752.314, true);
+	public static final Ellipsoid HAYFORD1909 	= new Ellipsoid(6378388    , 297        , false);
+	public static final Ellipsoid CLARKE1880IGN = new Ellipsoid(6378249.2  , 293.4660213, false);
+	public static final Ellipsoid CLARKE1866    = new Ellipsoid(6378206.4  , 294.97870  , false);
 
+	public static final class LocalSystem {
+		public int code; 
+		public String friendlyShortname;
+		public String id;
+		public boolean zoneSeperatly;
+		public LocalSystem(int code_, String name_, String id_, boolean zoneSeperatly_) {
+			code = code_;
+			friendlyShortname = name_;
+			zoneSeperatly = zoneSeperatly_;
+			id = id_;
+		}
+	};
+
+	public static final LocalSystem[] localSystems = {
+		new LocalSystem(TransformCoordinates.LOCALSYSTEM_GERMAN_GK, 			"de Gau?-K.",  "de.gk", ProjectedPoint.PJ_GERMAN_GK.zoneSeperately),
+		new LocalSystem(TransformCoordinates.LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD,  "at Lamb.",    "at.lb", ProjectedPoint.PJ_AUSTRIAN_LAMBERT_OLD.zoneSeperately),
+		new LocalSystem(TransformCoordinates.LOCALSYSTEM_ITALIAN_GB,            "it Gau?-B.",  "it.gb", ProjectedPoint.PJ_ITALIAN_GB.zoneSeperately),
+		new LocalSystem(TransformCoordinates.LOCALSYSTEM_FRANCE_LAMBERT_IIE,    "fr Lamb-IIe", "fr.l2", ProjectedPoint.PJ_FRENCH_LAMBERT_NTF_II.zoneSeperately),
+		new LocalSystem(TransformCoordinates.LOCALSYSTEM_UTM_WGS84,             "UTM",         "utm",   ProjectedPoint.PJ_UTM_WGS84.zoneSeperately)
+	};
+	
+
 	//	 taken from http://www.crs-geo.eu/crseu/EN/Home/homepage__node.html?__nnn=true click on "national CRS" -> germany -> DE_DHDN / GK_3 -> DE_DHDN (North) to ETRS89
 	//	 they are the same as http://www.geoclub.de/files/GK_nach_GPS.xls "Parametersatz 4 = Deutschland Nord" (rotation *-1)
 	/** use this for nord Germany, maximum deviation sub meter, valid in the former BRD (west germany) in 52?20' N ... 55?00' N */
@@ -59,7 +113,7 @@
 	/** use this for south Germany, maximum deviation sub meter, valid in the former BRD (west germany) in 47?00' N ... 50?20' N */
 	private static final TransformParameters GK_SOUTH_GERMANY_TO_WGS84 = new TransformParameters(597.1, 71.4, 412.1, -0.894, -0.068, 1.563, -7.580, BESSEL);
 
-	public static Area FORMER_GDR = new Area(new CWPoint(54.923414, 10.503013), new CWPoint(50.402578, 14.520637)); 
+	private static Area FORMER_GDR = new Area(new CWPoint(54.923414, 10.503013), new CWPoint(50.402578, 14.520637)); 
 
 	// taken from http://www.lverma.nrw.de/produkte/druckschriften/verwaltungsvorschriften/images/gps/TrafopsNRW.pdf for NRW this transform has deviations lower than 34cm.
 	/** use this for NRW in Germany. Deviations less than 34 cm */
@@ -80,50 +134,97 @@
 
 	// taken from http://crs.bkg.bund.de/crs-eu/ -> italy -> ROMA40 (change the sign of the rotation parameters!)
 	/** The italian variant of Gau?-Kr?ger (Gau?-Boaga) */
-	public static final TransformParameters GB_ITALIAN_PENINSULAR_TO_WGS84 =  new TransformParameters(-104.1, -49.1, -9.9, -0.971, 2.917, -0.714, -11.68, HAYFORD1909);
+	private static final TransformParameters GB_ITALIAN_PENINSULAR_TO_WGS84 =  new TransformParameters(-104.1, -49.1, -9.9, -0.971, 2.917, -0.714, -11.68, HAYFORD1909);
 	//static final Area ITALY_PENINSULAR = new Area(new CWPoint());
-	public static final TransformParameters GB_ITALIAN_SARDINIA_TO_WGS84 =  new TransformParameters(-168.6, -34.0, 38.6, 0.374, 0.679, 1.379, 9.48, HAYFORD1909);
-	static final Area ITALY_SARDINIA = new Area(new CWPoint(42, 6), new CWPoint(38, 11));
-	static final Area ITALY_SARDINIA_GK = new Area(wgs84ToEpsg(ITALY_SARDINIA.topleft, EPSG_ITALIAN_GB_EW1).toTrackPoint(ProjectedPoint.LOCALSYSTEM_ITALIAN_GB),
-			wgs84ToEpsg(ITALY_SARDINIA.buttomright, EPSG_ITALIAN_GB_EW1).toTrackPoint(ProjectedPoint.LOCALSYSTEM_ITALIAN_GB));
+	private static final TransformParameters GB_ITALIAN_SARDINIA_TO_WGS84 =  new TransformParameters(-168.6, -34.0, 38.6, 0.374, 0.679, 1.379, 9.48, HAYFORD1909);
+	private static final Area ITALY_SARDINIA = new Area(new CWPoint(42, 6), new CWPoint(38, 11));
+	private static final Area ITALY_SARDINIA_GK = new Area(wgs84ToEpsg(ITALY_SARDINIA.topleft, EPSG_ITALIAN_GB_EW1).toTrackPoint(TransformCoordinates.LOCALSYSTEM_ITALIAN_GB),
+			wgs84ToEpsg(ITALY_SARDINIA.buttomright, EPSG_ITALIAN_GB_EW1).toTrackPoint(TransformCoordinates.LOCALSYSTEM_ITALIAN_GB));
 
-	public static final TransformParameters GB_ITALIAN_SICILIA_TO_WGS84 =  new TransformParameters(-50.2, -50.4, 84.8, 0.690, 2.012, -0.459, 28.08, HAYFORD1909);
-	static final Area ITALY_SICILIA = new Area(new CWPoint(39, 12), new CWPoint(36.3, 15.6));
-	static final Area ITALY_SICILIA_GK = new Area(wgs84ToEpsg(ITALY_SICILIA.topleft, EPSG_ITALIAN_GB_EW2).toTrackPoint(ProjectedPoint.LOCALSYSTEM_ITALIAN_GB),
-			wgs84ToEpsg(ITALY_SICILIA.buttomright, EPSG_ITALIAN_GB_EW2).toTrackPoint(ProjectedPoint.LOCALSYSTEM_ITALIAN_GB));
+	private static final TransformParameters GB_ITALIAN_SICILIA_TO_WGS84 =  new TransformParameters(-50.2, -50.4, 84.8, 0.690, 2.012, -0.459, 28.08, HAYFORD1909);
+	private static final Area ITALY_SICILIA = new Area(new CWPoint(39, 12), new CWPoint(36.3, 15.6));
+	private static final Area ITALY_SICILIA_GK = new Area(wgs84ToEpsg(ITALY_SICILIA.topleft, EPSG_ITALIAN_GB_EW2).toTrackPoint(TransformCoordinates.LOCALSYSTEM_ITALIAN_GB),
+			wgs84ToEpsg(ITALY_SICILIA.buttomright, EPSG_ITALIAN_GB_EW2).toTrackPoint(TransformCoordinates.LOCALSYSTEM_ITALIAN_GB));
 
 	// see also http://hal.gis.univie.ac.at/karto/lehr/fachbereiche/geoinfo/givi0304/tutorials/ersteschritte/projectionen.htm#ParMGIWGS84 
 	// taken from taken from http://www.crs-geo.eu/crseu/EN/Home/homepage__node.html?__nnn=true click on "national CRS" -> Austria -> AT (translation *-1 as of 11-8-2009)
 	/** Austria Datum Hermannskogel, AT_MGI accuracy about 1.5m */
-	public static final TransformParameters LAMBERT_AUSTRIAN_OLD_TO_WGS84 = new TransformParameters(577.326, 90.129, 463.919, -5.136599, -1.4742, -5.297044, 2.4232, BESSEL);
-	public static final TransformParameters LAMBERT_AUSTRIAN_NEW_TO_WGS84 = new TransformParameters(0      ,0      ,0       ,0         ,0       ,0         ,0      , WGS84);
+	private static final TransformParameters LAMBERT_AUSTRIAN_OLD_TO_WGS84 = new TransformParameters(577.326, 90.129, 463.919, -5.136599, -1.4742, -5.297044, 2.4232, BESSEL);
 	// ?bersicht ?ber alle Transformparameter und EPSG-COdes und Projektionenm (PORJ4):
 	// http://svn.osgeo.org/metacrs/proj/trunk/proj/nad/epsg
 	//public static final TransformParameters WGS72_TO_WGS84 =  new TransformParameters(0, 0, 4.5, 0, 0, -0.554, 0.219);
+	private static final TransformParameters LAMBERT_FRENCH_NTF_TO_WGS84 = new TransformParameters(-168    ,    -60,320      ,0         ,0       ,0         ,0      , CLARKE1880IGN);
+	private static final TransformParameters NO_DATUM_SHIFT = new TransformParameters(0      ,0      ,0       ,0         ,0       ,0         ,0      , WGS84);
 
 	private TransformCoordinates() {
 		// as all members are static, so avoid instantiation
 	} 
 
+	/**
+	 * @return String[] of short friendly names all supported projected systems
+	 * the position in this array matches the position in localSystems[]
+	 */
+	public static final String[] getProjectedSystemNames() {
+		String[] ls = new String[TransformCoordinates.localSystems.length];
+		for (int i=0; i < TransformCoordinates.localSystems.length; i++) {
+			ls[i] = TransformCoordinates.localSystems[i].friendlyShortname;
+		}
+		return ls;
+	}
+	
+	public static final int getLocalSystemCode(String id) {
+    	String idl = id.toLowerCase();
+    	if (idl.equals("dd")) 		return TransformCoordinates.DD;
+    	else if (idl.equals("dmm")) return TransformCoordinates.DMM;
+    	else if (idl.equals("dms")) return TransformCoordinates.DMS;
+    	else if (idl.equals("utm")) return TransformCoordinates.UTM;
+    	else if (idl.equals("cw")) return TransformCoordinates.CW;
+    	else {
+    		for (int i=0; i < localSystems.length; i++) {
+    			if (localSystems[i].id.equals(idl)) return localSystems[i].code;
+    		}
+    	}
+    	return LOCALSYSTEM_NOT_SUPPORTED;
+	}
+	
+	public static final LocalSystem getLocalSystem(int localsystemcode) {
+		for (int i=0; i < TransformCoordinates.localSystems.length; i++) {
+			if (TransformCoordinates.localSystems[i].code == localsystemcode) return TransformCoordinates.localSystems[i]; 
+		}
+		throw new IllegalArgumentException("TransformCoordinate.getLocalSystem(int): localsystemcode " + localsystemcode + " not supported");
+	}
 
 	/**
+	 * @return String[] of short friendly names all supported projected systems
+	 * the position in this array matches the position in localSystems[]
+	 */
+	public static final String[] getProjectedSystemIDs() {
+		String[] ls = new String[TransformCoordinates.localSystems.length];
+		for (int i=0; i < TransformCoordinates.localSystems.length; i++) {
+			ls[i] = TransformCoordinates.localSystems[i].id;
+		}
+		return ls;
+	}
+
+	/**
 	 * 
 	 * @param epsgcode
 	 * @return region code as needed for GkPoint, -1 if not Gau?-Kr?ger or not supported
 	 * Inside one ProjectedRegion the epsg-code (zone / stripe) can be automatically choosen
 	 * depending on lat / lon.
 	 */
-	public static int getLocalProjectionSystem(int epsgcode) {
+	public static final int getLocalProjectionSystem(int epsgcode) {
 		int ret;
 		switch (epsgcode) {
-		case EPSG_GK2:
-		case EPSG_GK3:
-		case EPSG_GK4:
-		case EPSG_GK5: 					ret = ProjectedPoint.LOCALSYSTEM_GERMAN_GK; break;
+		case EPSG_GERMAN_GK2:
+		case EPSG_GERMAN_GK3:
+		case EPSG_GERMAN_GK4:
+		case EPSG_GERMAN_GK5: 					 ret = TransformCoordinates.LOCALSYSTEM_GERMAN_GK; break;
 		case EPSG_ITALIAN_GB_EW1:
-		case EPSG_ITALIAN_GB_EW2:       ret = ProjectedPoint.LOCALSYSTEM_ITALIAN_GB; break;
-		case EPSG_AUSTRIAN_LAMBERT_OLD: ret = ProjectedPoint.LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD; break;
-		case EPSG_AUSTRIAN_LAMBERT_NEW: ret = ProjectedPoint.LOCALSYSTEM_AUSTRIAN_LAMBERT_NEW; break;
+		case EPSG_ITALIAN_GB_EW2:        ret = TransformCoordinates.LOCALSYSTEM_ITALIAN_GB; break;
+		case EPSG_AUSTRIAN_LAMBERT_OLD:  ret = TransformCoordinates.LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD; break;
+		case EPSG_AUSTRIAN_LAMBERT_NEW:  ret = TransformCoordinates.LOCALSYSTEM_AUSTRIAN_LAMBERT_NEW; break;
+		case EPSG_FRENCH_LAMBERT_NTF_II: ret = TransformCoordinates.LOCALSYSTEM_FRANCE_LAMBERT_IIE; break;
 		default: ret = -1;
 		}
 		return ret;
@@ -142,21 +243,15 @@
 	public static CWPoint ProjectedToWgs84(ProjectedPoint lp, int epsg_localsystem, boolean isLocalSystem) {
 		CWPoint ll = lp.unproject();
 		int ls = (isLocalSystem ? epsg_localsystem : getLocalProjectionSystem(epsg_localsystem));
-		TransformParameters transparams;
-		switch (ls) {
-		case ProjectedPoint.LOCALSYSTEM_GERMAN_GK:
-			transparams = getGermanTransformParams(lp);  break;
-		case ProjectedPoint.LOCALSYSTEM_ITALIAN_GB: 
-			transparams = getItalianTransformParams(lp); break;
-		case ProjectedPoint.LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD:	
-			transparams = LAMBERT_AUSTRIAN_OLD_TO_WGS84; break; 
-		case ProjectedPoint.LOCALSYSTEM_AUSTRIAN_LAMBERT_NEW: 	
-			transparams = LAMBERT_AUSTRIAN_NEW_TO_WGS84; break;
-		default: throw new IllegalArgumentException("ProjectedToWGS84: EPSG-code: " + epsg_localsystem + " not supported");
+		TransformParameters transparams = getTransParams(lp, ls);
+		CWPoint ret;
+		if (transparams == NO_DATUM_SHIFT) ret = ll; 
+		else {
+			XyzCoordinates xyzorig = latLon2xyz(ll, 0, transparams.ellip);
+			XyzCoordinates xyzwgs84 = transform(xyzorig, transparams);
+			ret = xyz2Latlon(xyzwgs84, WGS84);
 		}
-		XyzCoordinates xyzorig = latLon2xyz(ll, 0, transparams.ellip);
-		XyzCoordinates xyzwgs84 = transform(xyzorig, transparams);
-		return xyz2Latlon(xyzwgs84, WGS84);
+		return ret;
 	}
 
 
@@ -197,8 +292,8 @@
 		else return GB_ITALIAN_PENINSULAR_TO_WGS84;
 	}
 	public static TransformParameters getItalianTransformParams(ProjectedPoint gk) {
-		if (ITALY_SARDINIA_GK.isInBound(gk.toTrackPoint(ProjectedPoint.LOCALSYSTEM_ITALIAN_GB))) return GB_ITALIAN_SARDINIA_TO_WGS84;
-		if (ITALY_SICILIA_GK.isInBound(gk.toTrackPoint(ProjectedPoint.LOCALSYSTEM_ITALIAN_GB))) return GB_ITALIAN_SICILIA_TO_WGS84;
+		if (ITALY_SARDINIA_GK.isInBound(gk.toTrackPoint(TransformCoordinates.LOCALSYSTEM_ITALIAN_GB))) return GB_ITALIAN_SARDINIA_TO_WGS84;
+		if (ITALY_SICILIA_GK.isInBound(gk.toTrackPoint(TransformCoordinates.LOCALSYSTEM_ITALIAN_GB))) return GB_ITALIAN_SICILIA_TO_WGS84;
 		else return GB_ITALIAN_PENINSULAR_TO_WGS84;
 	}
 
@@ -237,17 +332,41 @@
 
 	private static TransformParameters getTransParams(TrackPoint wgs84, int localsystem) {
 		switch(localsystem) {
-		case ProjectedPoint.LOCALSYSTEM_GERMAN_GK: 
+		case TransformCoordinates.LOCALSYSTEM_GERMAN_GK: 
 			return getGermanGkTransformParameters(wgs84); 
-		case ProjectedPoint.LOCALSYSTEM_ITALIAN_GB: 
+		case TransformCoordinates.LOCALSYSTEM_ITALIAN_GB: 
 			return getItalianGkTransformParameters(wgs84);
-		case ProjectedPoint.LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD:
+		case TransformCoordinates.LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD:
 			return LAMBERT_AUSTRIAN_OLD_TO_WGS84;
+		case TransformCoordinates.LOCALSYSTEM_FRANCE_LAMBERT_IIE:
+			return LAMBERT_FRENCH_NTF_TO_WGS84;
+		case TransformCoordinates.LOCALSYSTEM_UTM_WGS84:
+		case TransformCoordinates.LOCALSYSTEM_AUSTRIAN_LAMBERT_NEW: 	
+			return NO_DATUM_SHIFT;
 		default: 
-			throw new IllegalArgumentException("getTransParams: localsystem: " + localsystem + "not supported");
+			throw new IllegalArgumentException("TransformCoordinates.getTransParams(wgs84): localsystem: " + localsystem + "not supported");
 		}
 	}
+	private static TransformParameters getTransParams(ProjectedPoint pp, int localsystem) {
+		TransformParameters transparams;
+		switch (localsystem) {
+		case TransformCoordinates.LOCALSYSTEM_GERMAN_GK:
+			transparams = getGermanTransformParams(pp);  break;
+		case TransformCoordinates.LOCALSYSTEM_ITALIAN_GB: 
+			transparams = getItalianTransformParams(pp); break;
+		case TransformCoordinates.LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD:	
+			transparams = LAMBERT_AUSTRIAN_OLD_TO_WGS84; break;
+		case TransformCoordinates.LOCALSYSTEM_FRANCE_LAMBERT_IIE:
+			transparams = LAMBERT_FRENCH_NTF_TO_WGS84; break;
+		case TransformCoordinates.LOCALSYSTEM_UTM_WGS84:
+		case TransformCoordinates.LOCALSYSTEM_AUSTRIAN_LAMBERT_NEW: 	
+			transparams = NO_DATUM_SHIFT; break;
+		default: throw new IllegalArgumentException("TransformCoordinates.getTransParams(ProjectedPoint): local projection system code: " + localsystem + " not supported");
+		}
+		return transparams;
+	}
 
+
 	private static XyzCoordinates latLon2xyz(TrackPoint ll, double alt, Ellipsoid ellipsoid) {
 		if (!ll.isValid()) throw new IllegalArgumentException("latLon2xyz: invalid lat-lon");
 		double e2 = (ellipsoid.a * ellipsoid.a - ellipsoid.b * ellipsoid.b)/(ellipsoid.a * ellipsoid.a);
@@ -364,3 +483,4 @@
 }
 
 
+

Added: trunk/src/CacheWolf/navi/UTMProjection.java
===================================================================
--- trunk/src/CacheWolf/navi/UTMProjection.java	2009-08-29 11:05:33 UTC (rev 2108)
+++ trunk/src/CacheWolf/navi/UTMProjection.java	2009-08-29 11:42:30 UTC (rev 2109)
@@ -0,0 +1,85 @@
+package CacheWolf.navi;
+
+import ewe.sys.Convert;
+import CacheWolf.CWPoint;
+
+
+public final class UTMProjection extends Projection {
+	Ellipsoid ellip;
+	
+	public UTMProjection(Ellipsoid ellip_) {
+		ellip = ellip_;
+		zoneSeperately = true;
+	}
+	public double getEasting(ProjectedPoint pp) {
+		return pp.easting + 500000;
+	}
+
+	public double getNorthing(ProjectedPoint pp) {
+		return (pp.northing >=0 ? pp.northing : pp.northing + 10000000);
+	}
+	
+	public String getZone(ProjectedPoint pp) {
+		int zoneletter = (int)Math.floor(pp.zone / 200);
+		return Convert.formatInt(pp.zone - zoneletter * 200 +1) + getZoneLetter(zoneletter);
+	}
+	
+	private char getZoneLetter(int number){
+		if (((char)(number)) >= 'i' - 'a') number++; // skip I
+		if (((char)(number)) >= 'o' - 'a') number++; // skip O
+		char ret = (char)( number  + (int)'A' -1);
+		return ret;
+	}
+
+	public ProjectedPoint project(CWPoint wgs84, ProjectedPoint pp) {
+		int stripe = (int) Math.floor((wgs84.lonDec - 177) / 6); // we start with stripe 0, but officially this is stripe 1
+		if (stripe < 0) stripe += 60;
+		GkProjection.project(wgs84, ellip, 6, stripe -30, 3, 0.9996, pp);
+		pp.zone = stripe;
+		pp.zone += (int) (Math.floor((wgs84.latDec)/8)+13) * 200; // zone letter
+		return pp;
+	}
+	
+	public String toHumanReadableString(ProjectedPoint pp) {
+	 	return pp.toString(0, "", " ");
+	}
+
+	public ProjectedPoint project(CWPoint ll, ProjectedPoint pp, int epsg) {
+		throw new UnsupportedOperationException("UTMProjection: prject by epsg-code not supported");
+	}
+
+	public ProjectedPoint set(double northing, double easting, ProjectedPoint pp) {
+		throw new UnsupportedOperationException("UTMProjection.set: set() requires zone, use set with 1 more parameter");
+	}
+	
+	public ProjectedPoint set(double northing, double easting, String zone, ProjectedPoint pp) {
+		pp.easting = easting - 500000;
+		if (northing > 10000000) pp.northing = northing - 10000000;
+		else pp.northing = northing;
+		if (zone.length() > 3) throw new IllegalArgumentException("UTMProjection.set: zone must not have more than 3 letters");
+		char lastletter = zone.charAt(zone.length()-1); 
+		int zoneletter = -1;
+		if ( (lastletter > 'a') && ( lastletter < 'z')) zoneletter = lastletter - 'a';   
+		if ( (lastletter > 'A') && ( lastletter < 'Z')) zoneletter = lastletter - 'A';
+		if (zoneletter > 'i' - 'a') zoneletter--;
+		if (zoneletter > 'o' - 'a') zoneletter--;
+		int zonenumer = -1;
+		if (zoneletter == -1) {
+			zoneletter = 'n' - 'a'; // default to northern hemisphere
+			zonenumer = Convert.parseInt(zone);
+		} else {
+			zonenumer = Convert.parseInt(zone.substring(0, zone.length()-1));
+		}
+		if (zonenumer == -1) throw new IllegalArgumentException("UTMProjection.set: could not parse zone number");
+		pp.zone = zonenumer -1 + zoneletter * 200; // internally zone number starts with 0
+		return pp;
+	}
+
+	public CWPoint unproject(ProjectedPoint pp) {
+		int stripe = pp.zone - (int)Math.floor(pp.zone / 200) * 200;
+		int stripelon = stripe * 6 -177;
+		return GkProjection.unproject(pp, stripelon, ellip, 0.9996);
+
+	}
+
+}



From apreisser at mail.berlios.de  Sat Aug 29 14:07:55 2009
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Sat, 29 Aug 2009 14:07:55 +0200
Subject: [Cachewolf-svn] r2110 - trunk/src/CacheWolf/navi
Message-ID: <200908291207.n7TC7tUr007314@sheep.berlios.de>

Author: apreisser
Date: 2009-08-29 14:07:53 +0200 (Sat, 29 Aug 2009)
New Revision: 2110

Modified:
   trunk/src/CacheWolf/navi/MovingMap.java
Log:
Bug fixed in calculating white-area-rectangle

Modified: trunk/src/CacheWolf/navi/MovingMap.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMap.java	2009-08-29 11:42:30 UTC (rev 2109)
+++ trunk/src/CacheWolf/navi/MovingMap.java	2009-08-29 12:07:53 UTC (rev 2110)
@@ -1032,8 +1032,8 @@
 		int middleheight = r.y + (r.height)/2;
 		CWPoint centerPoint = ScreenXY2LatLon(middlewidth, middleheight);
 		Rect screen = new Rect ();
-		screen.height = r.height - r.y; 
-		screen.width = r.width - r.x;
+		screen.height = r.height ;//- r.y; 
+		screen.width = r.width ;//- r.x;
 		MapInfoObject bestMap = maps.getBestMap(centerPoint, screen, currentMap.scale, true);
 		if (bestMap == null){
 			//No map found, area must be left white
@@ -1161,14 +1161,14 @@
 		if (blackArea.x > whiteArea.x) {
 			Rect r= new Rect ();
 			r.x = 0;
-			r.y = 0;
+			r.y = whiteArea.y;
 			r.width = blackArea.x;
 			r.height = whiteArea.height;
 			rectangles.add(r);
 		}
 		if (blackArea.y > whiteArea.y) {
 			Rect r= new Rect ();
-			r.x = 0;
+			r.x = whiteArea.x;
 			r.y = 0;
 			r.width = whiteArea.width;
 			r.height = blackArea.y;



From pfeffer at mail.berlios.de  Sat Aug 29 15:13:09 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Sat, 29 Aug 2009 15:13:09 +0200
Subject: [Cachewolf-svn] r2111 - trunk
Message-ID: <200908291313.n7TDD9sN014493@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-29 15:13:08 +0200 (Sat, 29 Aug 2009)
New Revision: 2111

Modified:
   trunk/buildexe.bat
Log:
buildexe.bat: cd into its own dir. This way it can be called directly from eclipse

Modified: trunk/buildexe.bat
===================================================================
--- trunk/buildexe.bat	2009-08-29 12:07:53 UTC (rev 2110)
+++ trunk/buildexe.bat	2009-08-29 13:13:08 UTC (rev 2111)
@@ -1,3 +1,4 @@
+cd %~d0%~p0
 call getres.bat
 java -cp lib/ewe.jar Ewe programs/Jewel.ewe -c cw-pda.jnf
 java -cp lib/ewe.jar Ewe programs/Jewel.ewe -c cw-pc.jnf



From pfeffer at mail.berlios.de  Sat Aug 29 15:40:50 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Sat, 29 Aug 2009 15:40:50 +0200
Subject: [Cachewolf-svn] r2112 - trunk/src/CacheWolf/navi
Message-ID: <200908291340.n7TDeoKE017379@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-29 15:40:49 +0200 (Sat, 29 Aug 2009)
New Revision: 2112

Modified:
   trunk/src/CacheWolf/navi/LambertProjection.java
   trunk/src/CacheWolf/navi/ProjectedPoint.java
Log:
LambertProjection: make the LambertProjection work under Ewe

Modified: trunk/src/CacheWolf/navi/LambertProjection.java
===================================================================
--- trunk/src/CacheWolf/navi/LambertProjection.java	2009-08-29 13:13:08 UTC (rev 2111)
+++ trunk/src/CacheWolf/navi/LambertProjection.java	2009-08-29 13:40:49 UTC (rev 2112)
@@ -22,19 +22,21 @@
 	 * @param centralLat: in decimal degrees
 	 * @param centralLon
 	 */
-	public LambertProjection(int epsgcode_, double falseNorthing_, double falseEasting_, 
+	public LambertProjection(int epsgcode_, Ellipsoid ellip_) {
+		epsgCode = epsgcode_;
+		ellip = ellip_;
+	}
+
+	public void setup(double falseNorthing_, double falseEasting_, 
 			double firstStandardParallel_, double secondSandardParallel_, double scale_,
-			double centralLat_,	double centralLon_, Ellipsoid ellip_) {
-		epsgCode = epsgcode_;
+			double centralLat_,	double centralLon_) {
 		falseNorthing = falseNorthing_;
 		falseEasting = falseEasting_;
 		double firstStandardParallel = firstStandardParallel_ * java.lang.Math.PI / 180;
 		double secondSandardParallel = secondSandardParallel_* java.lang.Math.PI / 180;
 		centralLat = centralLat_ * java.lang.Math.PI / 180;
 		centralLon = centralLon_ * java.lang.Math.PI / 180;
-		ellip = ellip_;
 
-
 		double f = ellip.getFlattening();
 		e = java.lang.Math.sqrt(2.0 * f - f*f);
 		double m1 = java.lang.Math.cos(firstStandardParallel) / java.lang.Math.sqrt(1.0 - e*e * java.lang.Math.pow(java.lang.Math.sin(firstStandardParallel),2));
@@ -51,7 +53,7 @@
 		F0 = m1 / (n * java.lang.Math.pow(t1, n)) * scale_; // pow(t2???, n)
 		Rb = ellip.a * F0 * java.lang.Math.pow(t0, n);
 	}
-
+	
 	public ProjectedPoint project(CWPoint ll, ProjectedPoint pp, int epsg) {
 		return project(ll, pp);
 	}

Modified: trunk/src/CacheWolf/navi/ProjectedPoint.java
===================================================================
--- trunk/src/CacheWolf/navi/ProjectedPoint.java	2009-08-29 13:13:08 UTC (rev 2111)
+++ trunk/src/CacheWolf/navi/ProjectedPoint.java	2009-08-29 13:40:49 UTC (rev 2112)
@@ -4,10 +4,16 @@
 
 public final class ProjectedPoint {
 
-	public static final LambertProjection PJ_AUSTRIAN_LAMBERT_OLD 	= new LambertProjection(TransformCoordinates.EPSG_AUSTRIAN_LAMBERT_OLD,   400000, 400000, 49.0, 46.0, 1         , 47.5, 13.333333, TransformCoordinates.BESSEL); 
-	public static final LambertProjection PJ_AUSTRIAN_LAMBERT_NEW 	= new LambertProjection(TransformCoordinates.EPSG_AUSTRIAN_LAMBERT_NEW,   400000, 400000, 49.0, 46.0, 1         , 47.5, 13.333333, TransformCoordinates.WGS84);
-	public static final LambertProjection PJ_FRENCH_LAMBERT_NTF_II 	= new LambertProjection(TransformCoordinates.EPSG_FRENCH_LAMBERT_NTF_II, 2200000, 600000, 46.8, 46.8, 0.99987742, 46.8, 2.337229172 /*(2+20/60+14.025/3600) */, TransformCoordinates.CLARKE1880IGN);
-	public static final LambertProjection PJ_TEST 	                = new LambertProjection(TransformCoordinates.EPSG_TEST,  150000, 250000, 18, 18, 1         , 18, -77, TransformCoordinates.CLARKE1866); 
+	public static final LambertProjection PJ_AUSTRIAN_LAMBERT_OLD 	= new LambertProjection(TransformCoordinates.EPSG_AUSTRIAN_LAMBERT_OLD, TransformCoordinates.BESSEL);
+	public static final LambertProjection PJ_AUSTRIAN_LAMBERT_NEW 	= new LambertProjection(TransformCoordinates.EPSG_AUSTRIAN_LAMBERT_NEW,  TransformCoordinates.WGS84);
+	public static final LambertProjection PJ_FRENCH_LAMBERT_NTF_II 	= new LambertProjection(TransformCoordinates.EPSG_FRENCH_LAMBERT_NTF_II, TransformCoordinates.CLARKE1880IGN);
+	public static final LambertProjection PJ_TEST 	                = new LambertProjection(TransformCoordinates.EPSG_TEST, TransformCoordinates.CLARKE1866); 
+	{ 
+		PJ_AUSTRIAN_LAMBERT_OLD.setup ( 400000, 400000, 49.0, 46.0, 1         , 47.5, 13.333333); // actually this should be done inside the constructor. But Ewe doesn't support more than 8 parameters (at least for constructors)
+		PJ_AUSTRIAN_LAMBERT_NEW.setup ( 400000, 400000, 49.0, 46.0, 1         , 47.5, 13.333333);
+		PJ_FRENCH_LAMBERT_NTF_II.setup(2200000, 600000, 46.8, 46.8, 0.99987742, 46.8, 2.337229172 /*(2+20/60+14.025/3600) */); 
+		PJ_TEST.setup( 150000, 250000, 18, 18, 1         , 18, -77); 
+	}
 	public static final GkProjection PJ_GERMAN_GK  = new GkProjection(TransformCoordinates.EPSG_GERMAN_GK2 -2           , 0, 500000, 3, 1000000, 0, 1     , TransformCoordinates.BESSEL);
 	public static final GkProjection PJ_ITALIAN_GB = new GkProjection(TransformCoordinates.EPSG_ITALIAN_GB_EW1 -1, 0, 500000, 6, 1000000, 0, 0.9996, TransformCoordinates.HAYFORD1909);
 	public static final UTMProjection PJ_UTM_WGS84 = new UTMProjection(TransformCoordinates.WGS84);



From pfeffer at mail.berlios.de  Sat Aug 29 15:43:27 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Sat, 29 Aug 2009 15:43:27 +0200
Subject: [Cachewolf-svn] r2113 - trunk/src/CacheWolf/navi
Message-ID: <200908291343.n7TDhRFm017799@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-29 15:43:26 +0200 (Sat, 29 Aug 2009)
New Revision: 2113

Modified:
   trunk/src/CacheWolf/navi/TransformCoordinates.java
Log:
CooScreen: make UTM the first (preselected) custom projection system

Modified: trunk/src/CacheWolf/navi/TransformCoordinates.java
===================================================================
--- trunk/src/CacheWolf/navi/TransformCoordinates.java	2009-08-29 13:40:49 UTC (rev 2112)
+++ trunk/src/CacheWolf/navi/TransformCoordinates.java	2009-08-29 13:43:26 UTC (rev 2113)
@@ -92,11 +92,11 @@
 	};
 
 	public static final LocalSystem[] localSystems = {
+		new LocalSystem(TransformCoordinates.LOCALSYSTEM_UTM_WGS84,             "UTM",         "utm",   ProjectedPoint.PJ_UTM_WGS84.zoneSeperately),
 		new LocalSystem(TransformCoordinates.LOCALSYSTEM_GERMAN_GK, 			"de Gau?-K.",  "de.gk", ProjectedPoint.PJ_GERMAN_GK.zoneSeperately),
 		new LocalSystem(TransformCoordinates.LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD,  "at Lamb.",    "at.lb", ProjectedPoint.PJ_AUSTRIAN_LAMBERT_OLD.zoneSeperately),
 		new LocalSystem(TransformCoordinates.LOCALSYSTEM_ITALIAN_GB,            "it Gau?-B.",  "it.gb", ProjectedPoint.PJ_ITALIAN_GB.zoneSeperately),
-		new LocalSystem(TransformCoordinates.LOCALSYSTEM_FRANCE_LAMBERT_IIE,    "fr Lamb-IIe", "fr.l2", ProjectedPoint.PJ_FRENCH_LAMBERT_NTF_II.zoneSeperately),
-		new LocalSystem(TransformCoordinates.LOCALSYSTEM_UTM_WGS84,             "UTM",         "utm",   ProjectedPoint.PJ_UTM_WGS84.zoneSeperately)
+		new LocalSystem(TransformCoordinates.LOCALSYSTEM_FRANCE_LAMBERT_IIE,    "fr Lamb-IIe", "fr.l2", ProjectedPoint.PJ_FRENCH_LAMBERT_NTF_II.zoneSeperately)
 	};
 	
 



From pfeffer at mail.berlios.de  Sat Aug 29 15:53:46 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Sat, 29 Aug 2009 15:53:46 +0200
Subject: [Cachewolf-svn] r2114 - trunk/src/CacheWolf
Message-ID: <200908291353.n7TDrkh6018989@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-29 15:53:45 +0200 (Sat, 29 Aug 2009)
New Revision: 2114

Modified:
   trunk/src/CacheWolf/CoordsScreen.java
Log:
CoordsScreen: enable direct conversion between projected spatial reference systems

Modified: trunk/src/CacheWolf/CoordsScreen.java
===================================================================
--- trunk/src/CacheWolf/CoordsScreen.java	2009-08-29 13:43:26 UTC (rev 2113)
+++ trunk/src/CacheWolf/CoordsScreen.java	2009-08-29 13:53:45 UTC (rev 2114)
@@ -127,21 +127,18 @@
 			enable(chcEW); enable(inpEWDeg); disable(inpEWm); disable(inpEWs);
 			inpEWDeg.wantReturn=true;
 			disable(inpUTMZone); disable(inpUTMNorthing); disable(inpUTMEasting);
-			enable(localCooSystem);
 			break;
 		case TransformCoordinates.DMM: 	
 			enable(chcNS); enable(inpNSDeg); enable(inpNSm); disable(inpNSs);
 			enable(chcEW); enable(inpEWDeg); enable(inpEWm); disable(inpEWs);
 			inpEWm.wantReturn=true;
 			disable(inpUTMZone); disable(inpUTMNorthing); disable(inpUTMEasting);
-			enable(localCooSystem);
 			break;
 		case TransformCoordinates.DMS: 	
 			enable(chcNS); enable(inpNSDeg); enable(inpNSm); enable(inpNSs);
 			enable(chcEW); enable(inpEWDeg); enable(inpEWm); enable(inpEWs);
 			inpEWs.wantReturn=true;
 			disable(inpUTMZone); disable(inpUTMNorthing); disable(inpUTMEasting);
-			enable(localCooSystem);
 			break;
 		default: 	
 			disable(chcNS); disable(inpNSDeg); disable(inpNSm); disable(inpNSs);
@@ -149,7 +146,6 @@
 			if (TransformCoordinates.localSystems[localCooSystem.getInt()].zoneSeperatly) enable(inpUTMZone);
 			else disable(inpUTMZone); 
 			enable(inpUTMNorthing); enable(inpUTMEasting);
-			disable(localCooSystem);
 			inpUTMNorthing.wantReturn=true;
 			break;
 		}



From apreisser at mail.berlios.de  Sat Aug 29 16:29:44 2009
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Sat, 29 Aug 2009 16:29:44 +0200
Subject: [Cachewolf-svn] r2115 - trunk/src/CacheWolf/navi
Message-ID: <200908291429.n7TETiL9022811@sheep.berlios.de>

Author: apreisser
Date: 2009-08-29 16:29:43 +0200 (Sat, 29 Aug 2009)
New Revision: 2115

Modified:
   trunk/src/CacheWolf/navi/MovingMap.java
Log:
Wrong initial black area. Used constants instead of the real image dimensions.

Modified: trunk/src/CacheWolf/navi/MovingMap.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMap.java	2009-08-29 13:53:45 UTC (rev 2114)
+++ trunk/src/CacheWolf/navi/MovingMap.java	2009-08-29 14:29:43 UTC (rev 2115)
@@ -992,9 +992,9 @@
 		Vector rectangles = new Vector();
 		//calculate areas which will not drawn
 		Rect whiteArea = new Rect (0,0,width,height);
-		Rect blackArea = new Rect (mapPosx.x, mapPosx.y, 1000, 1000);
+		Rect blackArea = new Rect (mapPosx.x, mapPosx.y, mmp.mapImage.getWidth(), mmp.mapImage.getHeight());
 		calculateRectangles(blackArea, whiteArea,rectangles);
-		//I've somtimes experincied an endless which might be caused by a bug in getBestMap. Therefore i will stop the loop after 30 runs
+		//I've sometimes experienced an endless loop which might be caused by a bug in getBestMap. Therefore i will stop the loop after 30 runs
 		int count=0;
 		while (isFillWhiteArea() && currentMap.zoomFactor == 1.0 && !mapHidden && !rectangles.isEmpty() && count < 30){
 			count++;



From apreisser at mail.berlios.de  Sat Aug 29 17:21:24 2009
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Sat, 29 Aug 2009 17:21:24 +0200
Subject: [Cachewolf-svn] r2116 - trunk/src/CacheWolf/navi
Message-ID: <200908291521.n7TFLOUx029859@sheep.berlios.de>

Author: apreisser
Date: 2009-08-29 17:21:22 +0200 (Sat, 29 Aug 2009)
New Revision: 2116

Modified:
   trunk/src/CacheWolf/navi/MovingMap.java
Log:
Show a messagebox if no filename can be associated with a map.
May be a bug found by Pfeffer

Modified: trunk/src/CacheWolf/navi/MovingMap.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMap.java	2009-08-29 14:29:43 UTC (rev 2115)
+++ trunk/src/CacheWolf/navi/MovingMap.java	2009-08-29 15:21:22 UTC (rev 2116)
@@ -1046,6 +1046,13 @@
 		if (!(bestMap.topleft.lonDec <= centerPoint.lonDec && centerPoint.lonDec <= bestMap.buttomright.lonDec)){
 			return;
 		}
+		//Pfeffer got an NPE in the following if-statement. I think the image-filename has got not the correct extension.
+		//For me, showing a message seems better than throwing the NPE  
+		if (bestMap.getImageFilename() == null){
+			(new MessageBox(MyLocale.getMsg(4207, "Error"), MyLocale.getMsg(4217, "Could not find image associated with: \n")+currentMap.fileNameWFL, FormBase.OKB)).execute();
+			return;
+		}
+
 		if (!bestMap.getImageFilename().equals(currentMap.getImageFilename())) {
 			String filename = bestMap.getImageFilename();
 			if (filename.length() > 0) {



From pfeffer at mail.berlios.de  Sat Aug 29 17:49:16 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Sat, 29 Aug 2009 17:49:16 +0200
Subject: [Cachewolf-svn] r2117 - trunk/src/CacheWolf/navi
Message-ID: <200908291549.n7TFnGUw001370@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-29 17:49:15 +0200 (Sat, 29 Aug 2009)
New Revision: 2117

Modified:
   trunk/src/CacheWolf/navi/UTMProjection.java
Log:
UTMProjection: fixed stripe number (it seems that I understood the specification before wrongly)

Modified: trunk/src/CacheWolf/navi/UTMProjection.java
===================================================================
--- trunk/src/CacheWolf/navi/UTMProjection.java	2009-08-29 15:21:22 UTC (rev 2116)
+++ trunk/src/CacheWolf/navi/UTMProjection.java	2009-08-29 15:49:15 UTC (rev 2117)
@@ -32,7 +32,7 @@
 	}
 
 	public ProjectedPoint project(CWPoint wgs84, ProjectedPoint pp) {
-		int stripe = (int) Math.floor((wgs84.lonDec - 177) / 6); // we start with stripe 0, but officially this is stripe 1
+		int stripe = (int) Math.floor((wgs84.lonDec - 180) / 6); // we start with stripe 0, but officially this is stripe 1
 		if (stripe < 0) stripe += 60;
 		GkProjection.project(wgs84, ellip, 6, stripe -30, 3, 0.9996, pp);
 		pp.zone = stripe;



From pfeffer at mail.berlios.de  Sat Aug 29 20:13:37 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Sat, 29 Aug 2009 20:13:37 +0200
Subject: [Cachewolf-svn] r2118 - in trunk/src/CacheWolf: . navi utils
Message-ID: <200908291813.n7TIDb9J003338@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-29 20:13:35 +0200 (Sat, 29 Aug 2009)
New Revision: 2118

Modified:
   trunk/src/CacheWolf/Common.java
   trunk/src/CacheWolf/navi/MovingMap.java
   trunk/src/CacheWolf/utils/FileBugfix.java
Log:
little performance optimization

Modified: trunk/src/CacheWolf/Common.java
===================================================================
--- trunk/src/CacheWolf/Common.java	2009-08-29 15:49:15 UTC (rev 2117)
+++ trunk/src/CacheWolf/Common.java	2009-08-29 18:13:35 UTC (rev 2118)
@@ -104,11 +104,12 @@
 	 */
 	static public String getImageName(String name) {
 		String fileName;
-		File tmp;
+		FileBugfix tmp = null;
 		String[] t = {".png", ".gif", ".jpg", ".bmp"};
 		int i;
 		for (i = 0; i<t.length; i++) {
-			tmp = new FileBugfix(name+t[i]);
+			if (tmp == null) tmp = new FileBugfix(name+t[i]);
+			else tmp.setText(name+t[i]);
 			if (tmp.exists()) break;
 		}
 		if (i >=t.length) fileName = null;

Modified: trunk/src/CacheWolf/navi/MovingMap.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMap.java	2009-08-29 15:49:15 UTC (rev 2117)
+++ trunk/src/CacheWolf/navi/MovingMap.java	2009-08-29 18:13:35 UTC (rev 2118)
@@ -1047,13 +1047,14 @@
 			return;
 		}
 		//Pfeffer got an NPE in the following if-statement. I think the image-filename has got not the correct extension.
-		//For me, showing a message seems better than throwing the NPE  
-		if (bestMap.getImageFilename() == null){
+		//For me, showing a message seems better than throwing the NPE
+		String imagefilename = bestMap.getImageFilename();
+		if (imagefilename == null){
 			(new MessageBox(MyLocale.getMsg(4207, "Error"), MyLocale.getMsg(4217, "Could not find image associated with: \n")+currentMap.fileNameWFL, FormBase.OKB)).execute();
 			return;
 		}
 
-		if (!bestMap.getImageFilename().equals(currentMap.getImageFilename())) {
+		if (!imagefilename.equals(currentMap.getImageFilename())) {
 			String filename = bestMap.getImageFilename();
 			if (filename.length() > 0) {
 				//calculate position of the new map on the screen

Modified: trunk/src/CacheWolf/utils/FileBugfix.java
===================================================================
--- trunk/src/CacheWolf/utils/FileBugfix.java	2009-08-29 15:49:15 UTC (rev 2117)
+++ trunk/src/CacheWolf/utils/FileBugfix.java	2009-08-29 18:13:35 UTC (rev 2118)
@@ -13,10 +13,18 @@
  * so I get all the files which null in spite of the mask and filter afterwords
  */
 public class FileBugfix extends File{
+	File ewefile;
 	public FileBugfix(String path) {
 		super(STRreplace.replace(path, "//", "/"));
+		ewefile = ewe.sys.Vm.newFileObject();
+		ewefile.set(null, name);
 	}
+	
 
+	public void set(File dir, String name) {
+		ewefile.set(dir, STRreplace.replace(name, "//", "/")); // this or null?
+	}
+
 	public String[] list(final String mask,final int listAndSortOptions)
 	{
 		return listBugFixed(mask, listAndSortOptions);
@@ -37,9 +45,6 @@
 	}
 
 	public String[] listBugFixed(final String compositeMask,final int listAndSortOptions) {
-		File ewefile = ewe.sys.Vm.newFileObject();
-		ewefile.set(null, name);
-
 		String mask = (compositeMask == null) ? "*.*" : compositeMask;
 		String[] found; //the following code is mainly copied from FileBase.listmultiple to avoid recursion it is not called
 		char c = mask.indexOf(',') == -1 ? ';' : ',';
@@ -88,37 +93,25 @@
 	 * file system _filesystem.zip when running as applet 
 	 */
 	public boolean exists() {
-		File ewefile = ewe.sys.Vm.newFileObject();
-		ewefile.set(null, name);
 		return (ewefile.exists());
 	}
 
 	public boolean isDirectory() {
-		File ewefile = ewe.sys.Vm.newFileObject();
-		ewefile.set(null, name);
 		return (ewefile.isDirectory());
 	}
 
 	public boolean createDir() {
-		File ewefile = ewe.sys.Vm.newFileObject();
-		ewefile.set(null, name);
 		return (ewefile.createDir());
 
 	}
 	public boolean delete() {
-		File ewefile = ewe.sys.Vm.newFileObject();
-		ewefile.set(null, name);
 		return (ewefile.delete());
 	}
 	public int getLength() {
-		File ewefile = ewe.sys.Vm.newFileObject();
-		ewefile.set(null, name);
 		return (ewefile.getLength());
 	}
 
 	public String getDrivePath() {
-		File ewefile = ewe.sys.Vm.newFileObject();
-		ewefile.set(null, name);
 		return (ewefile.getDrivePath());
 	}
 



From pfeffer at mail.berlios.de  Sat Aug 29 20:23:40 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Sat, 29 Aug 2009 20:23:40 +0200
Subject: [Cachewolf-svn] r2119 - trunk
Message-ID: <200908291823.n7TINecP004391@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-29 20:23:39 +0200 (Sat, 29 Aug 2009)
New Revision: 2119

Modified:
   trunk/runjewel.bat
Log:
runjewel: make it startable directly from eclipse

Modified: trunk/runjewel.bat
===================================================================
--- trunk/runjewel.bat	2009-08-29 18:13:35 UTC (rev 2118)
+++ trunk/runjewel.bat	2009-08-29 18:23:39 UTC (rev 2119)
@@ -1 +1,2 @@
+cd %~d0%~p0
 java -cp lib/ewe.jar Ewe programs/Jewel.ewe cw-pda.jnf



From pfeffer at mail.berlios.de  Sat Aug 29 20:30:30 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Sat, 29 Aug 2009 20:30:30 +0200
Subject: [Cachewolf-svn] r2120 - trunk/src/CacheWolf
Message-ID: <200908291830.n7TIUUNh005044@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-29 20:30:28 +0200 (Sat, 29 Aug 2009)
New Revision: 2120

Modified:
   trunk/src/CacheWolf/CWPoint.java
Log:
CoordsScreen: in DMS show 1 decimal digit more, in order to ensure a precision better than 1 meter

Modified: trunk/src/CacheWolf/CWPoint.java
===================================================================
--- trunk/src/CacheWolf/CWPoint.java	2009-08-29 18:23:39 UTC (rev 2119)
+++ trunk/src/CacheWolf/CWPoint.java	2009-08-29 18:30:28 UTC (rev 2120)
@@ -403,7 +403,7 @@
 				switch (what) {
 					case 0: return MyLocale.formatLong(iDeg, "00");
 					case 1: return MyLocale.formatDouble(tmpMin, "00");
-					case 2: return MyLocale.formatDouble(tmpSec, "00.0").replace(',','.');
+					case 2: return MyLocale.formatDouble(tmpSec, "00.00").replace(',','.');
 				}
 		}
 		return ""; // Dummy to keep compiler happy



From pfeffer at mail.berlios.de  Sat Aug 29 21:58:52 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Sat, 29 Aug 2009 21:58:52 +0200
Subject: [Cachewolf-svn] r2121 - trunk/src/CacheWolf/navi
Message-ID: <200908291958.n7TJwqKi015371@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-29 21:58:51 +0200 (Sat, 29 Aug 2009)
New Revision: 2121

Modified:
   trunk/src/CacheWolf/navi/MovingMap.java
Log:
Test for MovingMap: white areas filling: give an error if there are not enough system resources - I can't test myself :-(

Modified: trunk/src/CacheWolf/navi/MovingMap.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMap.java	2009-08-29 18:30:28 UTC (rev 2120)
+++ trunk/src/CacheWolf/navi/MovingMap.java	2009-08-29 19:58:51 UTC (rev 2121)
@@ -998,7 +998,12 @@
 		int count=0;
 		while (isFillWhiteArea() && currentMap.zoomFactor == 1.0 && !mapHidden && !rectangles.isEmpty() && count < 30){
 			count++;
+			try {
 			updateTileForWhiteArea(rectangles);
+			} catch (ewe.sys.SystemResourceException sre) {
+				setFillWhiteArea(false);
+				(new MessageBox("Error", "Not enough ressources to fill white ares, disabling this", MessageBox.OKB)).execute();
+			}
 		}		
 		//Remove all tiles not needed from the cache to reduce memory
 		MovingMapCache.getCache().cleanCache ();



From mik77 at mail.berlios.de  Sun Aug 30 12:59:30 2009
From: mik77 at mail.berlios.de (mik77 at mail.berlios.de)
Date: Sun, 30 Aug 2009 12:59:30 +0200
Subject: [Cachewolf-svn] r2122 - trunk/src/CacheWolf
Message-ID: <200908301059.n7UAxUR6001351@sheep.berlios.de>

Author: mik77
Date: 2009-08-30 12:59:17 +0200 (Sun, 30 Aug 2009)
New Revision: 2122

Modified:
   trunk/src/CacheWolf/CWPoint.java
Log:
Only trim crsid if present

Modified: trunk/src/CacheWolf/CWPoint.java
===================================================================
--- trunk/src/CacheWolf/CWPoint.java	2009-08-29 19:58:51 UTC (rev 2121)
+++ trunk/src/CacheWolf/CWPoint.java	2009-08-30 10:59:17 UTC (rev 2122)
@@ -171,9 +171,11 @@
 					)
 		*/	
 	String crsid = null;
-	if (coord.charAt(2)=='.') { // first 2 letters = Internet domain of projected area
+	if ((coord.charAt(2)=='.') && (coord.indexOf(' ') >= 0)) { // first 2 letters = Internet domain of projected area
 		crsid = coord.substring(0, coord.indexOf(' '));
-		coord = coord.substring(coord.indexOf(' ') + 1, coord.length());
+		if (TransformCoordinates.getLocalSystemCode(crsid) != -1) {
+			coord = coord.substring(coord.indexOf(' ') + 1, coord.length());
+		}
 	}
 				Regex rex=new Regex("(?:" +
 									"([NSns])\\s*([0-9]{1,2})(?:[?\uC2B0]\\s*|\\s+[?\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['?]\\s*|\\s+['?]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['?\"]?\\s*" +



From pfeffer at mail.berlios.de  Sun Aug 30 17:22:12 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Sun, 30 Aug 2009 17:22:12 +0200
Subject: [Cachewolf-svn] r2123 - trunk/src/CacheWolf
Message-ID: <200908301522.n7UFMCai016144@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-30 17:22:11 +0200 (Sun, 30 Aug 2009)
New Revision: 2123

Modified:
   trunk/src/CacheWolf/CWPoint.java
Log:
MapsLoader: fixed a bug introduced by my implementation of Lambert projection --> WMS download works again

Modified: trunk/src/CacheWolf/CWPoint.java
===================================================================
--- trunk/src/CacheWolf/CWPoint.java	2009-08-30 10:59:17 UTC (rev 2122)
+++ trunk/src/CacheWolf/CWPoint.java	2009-08-30 15:22:11 UTC (rev 2123)
@@ -540,7 +540,8 @@
 						+  getEWLetter() + " " + getLonDeg(format) + "? " + getLonMin(format);
 		case TransformCoordinates.DMS:	return getNSLetter() + " " + getLatDeg(format) + "? " + getLatMin(format) + "\' " + getLatSec(format) + "\" " 
 						+  getEWLetter() + " " + getLonDeg(format) + "? " + getLonMin(format) + "\' " + getLonSec(format) + "\"";
-		//case TransformCoordinates.UTM: 	return TransformCoordinates.wgs84ToLocalsystem(this, TransformCoordinates.LOCALSYSTEM_UTM_WGS84).toHumanReadableString();
+		case TransformCoordinates.LAT_LON: 	return getLatDeg(DD)+","+getLonDeg(DD);
+		case TransformCoordinates.LON_LAT: 	return getLonDeg(DD)+","+getLatDeg(DD);
 		//case TransformCoordinates.CUSTOM:	return getGermanGkCoordinates();
 		default: return TransformCoordinates.getLocalSystem(format).id + " " + TransformCoordinates.wgs84ToLocalsystem(this, format).toHumanReadableString();
 			//return "Unknown Format: " + format;



From pfeffer at mail.berlios.de  Sun Aug 30 17:43:01 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Sun, 30 Aug 2009 17:43:01 +0200
Subject: [Cachewolf-svn] r2124 - trunk/lib/com
Message-ID: <200908301543.n7UFh1F5018243@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-30 17:43:00 +0200 (Sun, 30 Aug 2009)
New Revision: 2124

Removed:
   trunk/lib/com/bbn/
Log:
removed library not used any more (previously used for UTM)



From pfeffer at mail.berlios.de  Mon Aug 31 20:08:12 2009
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Mon, 31 Aug 2009 20:08:12 +0200
Subject: [Cachewolf-svn] r2125 - trunk/src/CacheWolf/navi
Message-ID: <200908311808.n7VI8C0w004153@sheep.berlios.de>

Author: pfeffer
Date: 2009-08-31 20:08:11 +0200 (Mon, 31 Aug 2009)
New Revision: 2125

Modified:
   trunk/src/CacheWolf/navi/MovingMap.java
Log:
MovingMap: fill white Area: no application crash any more in the windows-exe, but still doesn't work

Modified: trunk/src/CacheWolf/navi/MovingMap.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMap.java	2009-08-30 15:43:00 UTC (rev 2124)
+++ trunk/src/CacheWolf/navi/MovingMap.java	2009-08-31 18:08:11 UTC (rev 2125)
@@ -976,7 +976,7 @@
 		Vector icons = new Vector ();
 		for (Iterator i = mmp.images.iterator(); i.hasNext();) {
 			AniImage im = (AniImage) i.next();
-			if (im.getClass().equals(MapImage.class)&& mmp.mapImage != im) {
+			if ( (im instanceof MapImage) && mmp.mapImage != im) {
 				i.remove();
 			}
 			else{



