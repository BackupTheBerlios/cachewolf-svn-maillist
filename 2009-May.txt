From greiol at mail.berlios.de  Sat May  2 20:41:40 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Sat, 2 May 2009 20:41:40 +0200
Subject: [Cachewolf-svn] r1781 - trunk/src/exp
Message-ID: <200905021841.n42IfesY014564@sheep.berlios.de>

Author: greiol
Date: 2009-05-02 20:41:39 +0200 (Sat, 02 May 2009)
New Revision: 1781

Modified:
   trunk/src/exp/TPLExporter.java
Log:
added GC_LOGTYPE for basic field note support

Modified: trunk/src/exp/TPLExporter.java
===================================================================
--- trunk/src/exp/TPLExporter.java	2009-04-30 06:55:33 UTC (rev 1780)
+++ trunk/src/exp/TPLExporter.java	2009-05-02 18:41:39 UTC (rev 1781)
@@ -211,6 +211,7 @@
 						varParams.put("STATUS_TIME", ch.GetStatusTime());
 						varParams.put("DATE", ch.getDateHidden());
 						varParams.put("URL", det.URL);
+						varParams.put("GC_LOGTYPE", (ch.is_found()?"Found it":"Didn't find it"));
 						varParams.put("DESCRIPTION", det.LongDescription);
 						if (myFilter.badChars != null) {
 							varParams.put("NAME", rex.replaceAll(ch.getCacheName()));



From mik77 at mail.berlios.de  Mon May  4 09:03:40 2009
From: mik77 at mail.berlios.de (mik77 at mail.berlios.de)
Date: Mon, 4 May 2009 09:03:40 +0200
Subject: [Cachewolf-svn] r1782 - trunk/src/exp
Message-ID: <200905040703.n4473eco003655@sheep.berlios.de>

Author: mik77
Date: 2009-05-04 09:03:33 +0200 (Mon, 04 May 2009)
New Revision: 1782

Modified:
   trunk/src/exp/GPXExporter.java
Log:
Hardcode TB in ref of TB in GPX-Export.

Modified: trunk/src/exp/GPXExporter.java
===================================================================
--- trunk/src/exp/GPXExporter.java	2009-05-02 18:41:39 UTC (rev 1781)
+++ trunk/src/exp/GPXExporter.java	2009-05-04 07:03:33 UTC (rev 1782)
@@ -138,7 +138,7 @@
 					det.Travelbugs.size();
 					strBuf.append("      <groundspeak:travelbugs>\r\n");
 					for (int i = 0; i < det.Travelbugs.size(); i++) {
-						strBuf.append("        <groundspeak:travelbug id=\"").append(Integer.toString(i)).append("\" ref=\"\">\r\n");
+						strBuf.append("        <groundspeak:travelbug id=\"").append(Integer.toString(i)).append("\" ref=\"TB\">\r\n");
 						strBuf.append("          <groundspeak:name>").append(SafeXML.cleanGPX(det.Travelbugs.getTB(i).getName())).append("</groundspeak:name>\r\n");
 						strBuf.append("        </groundspeak:travelbug>\r\n");						
 					}



From greiol at mail.berlios.de  Tue May  5 08:18:14 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Tue, 5 May 2009 08:18:14 +0200
Subject: [Cachewolf-svn] r1783 - trunk
Message-ID: <200905050618.n456IE0f013953@sheep.berlios.de>

Author: greiol
Date: 2009-05-05 08:18:12 +0200 (Tue, 05 May 2009)
New Revision: 1783

Modified:
   trunk/
Log:
added unix config files to svn:ignore


Property changes on: trunk
___________________________________________________________________
Name: svn:ignore
   - published

   + published
.project
.settings




From engywuck at mail.berlios.de  Wed May  6 20:13:17 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Wed, 6 May 2009 20:13:17 +0200
Subject: [Cachewolf-svn] r1784 - trunk/src/CacheWolf
Message-ID: <200905061813.n46IDHnY009197@sheep.berlios.de>

Author: engywuck
Date: 2009-05-06 20:13:15 +0200 (Wed, 06 May 2009)
New Revision: 1784

Modified:
   trunk/src/CacheWolf/CacheHolder.java
Log:
Bugfix: Updating cache doesn't remove state information anymore.

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-05 06:18:12 UTC (rev 1783)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-06 18:13:15 UTC (rev 1784)
@@ -342,9 +342,13 @@
 	   true                "Found"             yyyy-mm-dd       yes
 	   true                yyyy-mm-dd          yyyy-mm-dd       no (or yes)
 	   true                yyyy-mm-dd hh:mm    yyyy-mm-dd       no
+	   any                 any                 empty            no
 			 */
 			if (!this.is_found() || this.getCacheStatus().indexOf(":")<0) {
-				this.setCacheStatus(ch.getCacheStatus());
+				// don't overwrite with empty data
+				if (!ch.getCacheStatus().trim().equals("")) {
+					this.setCacheStatus(ch.getCacheStatus());
+				}
 				this.setFound(ch.is_found());
 			}
 			// Don't overwrite valid coordinates with invalid ones



From engywuck at mail.berlios.de  Wed May  6 21:24:34 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Wed, 6 May 2009 21:24:34 +0200
Subject: [Cachewolf-svn] r1785 - trunk/src/CacheWolf
Message-ID: <200905061924.n46JOY4P018243@sheep.berlios.de>

Author: engywuck
Date: 2009-05-06 21:24:33 +0200 (Wed, 06 May 2009)
New Revision: 1785

Modified:
   trunk/src/CacheWolf/CacheHolder.java
Log:
Eliminating possible NullPointerException. (I am encountering it from time to time but don't know why it appears...)

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-06 18:13:15 UTC (rev 1784)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-06 19:24:33 UTC (rev 1785)
@@ -658,8 +658,8 @@
 			String wp = (String) cachesWithLoadedDetails.get(i);
 			ch = Global.getProfile().cacheDB.get(wp);
 			if (ch != null) {
-	            chD = ch.getCacheDetails(false);
-	            if (chD.hasUnsavedChanges) {
+	            chD = ch.getExistingDetails();
+	            if (chD!=null && chD.hasUnsavedChanges) {
 		            //ch.calcRecommendationScore();
 		            chD.saveCacheDetails(Global.getProfile().dataDir);
 	            }



From engywuck at mail.berlios.de  Wed May  6 21:26:00 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Wed, 6 May 2009 21:26:00 +0200
Subject: [Cachewolf-svn] r1786 - trunk/src/CacheWolf
Message-ID: <200905061926.n46JQ036018380@sheep.berlios.de>

Author: engywuck
Date: 2009-05-06 21:25:59 +0200 (Wed, 06 May 2009)
New Revision: 1786

Modified:
   trunk/src/CacheWolf/FilterScreen.java
Log:
Examining the EWE libraries it doesn't seem that CellConstants.BORDER has any effect. Removing it, as it generates a "deprecated" warning.

Modified: trunk/src/CacheWolf/FilterScreen.java
===================================================================
--- trunk/src/CacheWolf/FilterScreen.java	2009-05-06 19:24:33 UTC (rev 1785)
+++ trunk/src/CacheWolf/FilterScreen.java	2009-05-06 19:25:59 UTC (rev 1786)
@@ -251,7 +251,7 @@
 		pnlCacheAttributes.addLast(chcAttrib = new mChoice(new String[]{MyLocale.getMsg(740,"all"), MyLocale.getMsg(741,"one"), MyLocale.getMsg(742,"none")},0),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 
 		attV=new AttributesSelector();
-		pnlCacheAttributes.addLast(attV, CellConstants.STRETCH|CellConstants.LEFT|CellConstants.BORDER, CellConstants.STRETCH);
+		pnlCacheAttributes.addLast(attV, CellConstants.STRETCH|CellConstants.LEFT/*|CellConstants.BORDER*/, CellConstants.STRETCH);
 		attV.setSelectionMasks( 0l, 0l );
 		
 		Frame frmScreen=new Frame();



From engywuck at mail.berlios.de  Thu May  7 20:18:26 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Thu, 7 May 2009 20:18:26 +0200
Subject: [Cachewolf-svn] r1787 - trunk/src/CacheWolf
Message-ID: <200905071818.n47IIQiM002072@sheep.berlios.de>

Author: engywuck
Date: 2009-05-07 20:18:21 +0200 (Thu, 07 May 2009)
New Revision: 1787

Modified:
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/CacheHolderDetail.java
   trunk/src/CacheWolf/CacheType.java
   trunk/src/CacheWolf/GPXImporter.java
   trunk/src/CacheWolf/LogList.java
   trunk/src/CacheWolf/OCXMLImporter.java
   trunk/src/CacheWolf/Profile.java
   trunk/src/CacheWolf/Rebuild.java
Log:
Attention: New file format. CacheWolf can read old format, but old CacheWolf (up to rev. 1786) can't read new format (which is not surprising). (See http://www.geoclub.de/viewtopic.php?f=40&t=33954)

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-06 19:25:59 UTC (rev 1786)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-07 18:18:21 UTC (rev 1787)
@@ -25,6 +25,44 @@
 public class CacheHolder {
 	protected static final String NOBEARING = "?";
 	protected static final String EMPTY = "";
+	protected static final byte DT_EMPTY = 0;
+	protected static final byte DT_10 = 10;
+	protected static final byte DT_15 = 15;
+	protected static final byte DT_20 = 20;
+	protected static final byte DT_25 = 25;
+	protected static final byte DT_30 = 30;
+	protected static final byte DT_35 = 35;
+	protected static final byte DT_40 = 40;
+	protected static final byte DT_45 = 45;
+	protected static final byte DT_50 = 50;
+	protected static final byte DT_UNKNOWN = -1;
+	protected static final String DT_EMPTY_TXT = "";
+	protected static final String DT_10_TXT = "1";
+	protected static final String DT_15_TXT = "1.5";
+	protected static final String DT_20_TXT = "2";
+	protected static final String DT_25_TXT = "2.5";
+	protected static final String DT_30_TXT = "3";
+	protected static final String DT_35_TXT = "3.5";
+	protected static final String DT_40_TXT = "4";
+	protected static final String DT_45_TXT = "4.5";
+	protected static final String DT_50_TXT = "5";
+	protected static final String DT_UNKNOWN_TXT = "?";
+	protected static final byte SIZE_UNKNOWN = 0;
+	protected static final byte SIZE_OTHER = 1;
+	protected static final byte SIZE_MICRO = 2;
+	protected static final byte SIZE_SMALL = 3;
+	protected static final byte SIZE_REGULAR = 4;
+	protected static final byte SIZE_LARGE = 5;
+	protected static final byte SIZE_VLARGE = 6;
+	protected static final byte SIZE_NONE = 7;
+	protected static final String SIZE_UNKNOWN_TXT = "";
+	protected static final String SIZE_OTHER_TXT = "Other";
+	protected static final String SIZE_MICRO_TXT = "Micro";
+	protected static final String SIZE_SMALL_TXT = "Small";
+	protected static final String SIZE_REGULAR_TXT = "Regular";
+	protected static final String SIZE_LARGE_TXT = "Large";
+	protected static final String SIZE_VLARGE_TXT = "Very Large";
+	protected static final String SIZE_NONE_TXT = "None";
 
 	/** Cachestatus is Found, Not found or a date in format yyyy-mm-dd hh:mm for found date */
 	private String cacheStatus = EMPTY;
@@ -56,7 +94,7 @@
 	/** The terrain rating of the cache from 1 to 5 in .5 incements */
 	private String terrain = EMPTY;
 	/** The cache type (@see CacheType for translation table)  */
-	private int type = 0; 
+	private byte type = -128; 
 	/** True if the cache has been archived */
 	private boolean archived = false;
 	/** True if the cache is available for searching */
@@ -86,7 +124,7 @@
 	/** The unique OC cache ID */
 	private String ocCacheID = EMPTY;
 	/** The number of times this cache has not been found (max. 5) */
-	private int noFindLogs = 0;
+	private byte noFindLogs = 0;
 	/** Number of recommendations (from the opencaching logs) */
 	private int numRecommended = 0;
 	/** Number of Founds since start of recommendations system */
@@ -127,16 +165,17 @@
 	public CacheHolder() {  // Just a public constructor
 	}
 	
-	public CacheHolder(String xmlString) {
+	public CacheHolder(String wp) {
+		this.wayPoint = wp;
+    }
+	
+	public CacheHolder(String xmlString, int version) {		 
 		int start,end;
-		if (xmlString.length() <= 10) {
-			this.wayPoint = xmlString;
-		} else	
 	        try {
+			if (version == 1) {
 		        start = xmlString.indexOf('"');
 		        end = xmlString.indexOf('"', start + 1);
 		        setCacheName(SafeXML.cleanback(xmlString.substring(start + 1, end)));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setCacheOwner(SafeXML.cleanback(xmlString.substring(start + 1, end)));
@@ -145,121 +184,149 @@
 		        end = xmlString.indexOf('"', start + 1);
 		        double lat = Convert.parseDouble(xmlString.substring(start + 1, end).replace(
 		                notDecSep, decSep));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        double lon = Convert.parseDouble(xmlString.substring(start + 1, end).replace(
 		                notDecSep, decSep));
 		        pos = new CWPoint(lat, lon);
 		        LatLon = pos.toString();
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setDateHidden(xmlString.substring(start + 1, end));
 		        // Convert the US format to YYYY-MM-DD if necessary
 		        if (getDateHidden().indexOf('/') > -1)
 			        setDateHidden(DateFormat.MDY2YMD(getDateHidden()));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setWayPoint(SafeXML.cleanback(xmlString.substring(start + 1, end)));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setCacheStatus(xmlString.substring(start + 1, end));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
-		        setType(new Integer(xmlString.substring(start + 1, end)).intValue());
-
+	            setType(Integer.parseInt(xmlString.substring(start + 1, end)));
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
-		        setHard(xmlString.substring(start + 1, end));
-
+	            setHard(CacheHolder.terrHard_OC2GC(xmlString.substring(start + 1, end)));
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
-		        setTerrain(xmlString.substring(start + 1, end));
-
+	            setTerrain(CacheHolder.terrHard_OC2GC(xmlString.substring(start + 1, end)));
 		        // The next item was 'dirty' but this is no longer used.
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setFiltered(xmlString.substring(start + 1, end).equals("true"));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setCacheSize(xmlString.substring(start + 1, end));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setAvailable(xmlString.substring(start + 1, end).equals("true"));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setArchived(xmlString.substring(start + 1, end).equals("true"));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setHas_bugs(xmlString.substring(start + 1, end).equals("true"));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setBlack(xmlString.substring(start + 1, end).equals("true"));
 		        if (is_black() != Global.getProfile().showBlacklisted())
 			        setFiltered(true);
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setOwned(xmlString.substring(start + 1, end).equals("true"));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setFound(xmlString.substring(start + 1, end).equals("true"));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setNew(xmlString.substring(start + 1, end).equals("true"));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setLog_updated(xmlString.substring(start + 1, end).equals("true"));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setUpdated(xmlString.substring(start + 1, end).equals("true"));
-
 		        // for backwards compatibility set value to true, if it is not in the file
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setHTML(!xmlString.substring(start + 1, end).equals("false"));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
-		        setNoFindLogs(Convert.toInt(xmlString.substring(start + 1, end)));
-
+	            setNoFindLogs((byte)Convert.toInt(xmlString.substring(start + 1, end)));
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setOcCacheID(xmlString.substring(start + 1, end));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setIncomplete(xmlString.substring(start + 1, end).equals("true"));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setLastSyncOC(xmlString.substring(start + 1, end));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setNumRecommended(Convert.toInt(xmlString.substring(start + 1, end)));
-
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setNumFoundsSinceRecommendation(Convert.toInt(xmlString.substring(start + 1, end)));
 		        recommendationScore = LogList.getScore(getNumRecommended(),
 		                getNumFoundsSinceRecommendation());
+	            start = xmlString.indexOf('"', end + 1);
+	            end = xmlString.indexOf('"', start + 1);
+	            if (start > -1 && end > -1) {
+		            setAttributesYes(Convert.parseLong(xmlString.substring(start + 1, end)));
 
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
+		            if (start > -1 && end > -1)
+			            setAttributesNo(Convert.parseLong(xmlString.substring(start + 1, end)));
+	            }
+            } else if (version == 2) {
+	            start = xmlString.indexOf('"');
+	            end = xmlString.indexOf('"', start + 1);
+	            setCacheName(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+	            start = xmlString.indexOf('"', end + 1);
+	            end = xmlString.indexOf('"', start + 1);
+	            setCacheOwner(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+	            // Assume coordinates are in decimal format
+	            start = xmlString.indexOf('"', end + 1);
+	            end = xmlString.indexOf('"', start + 1);
+	            double lat = Convert.parseDouble(xmlString.substring(start + 1, end).replace(
+	                    notDecSep, decSep));
+	            start = xmlString.indexOf('"', end + 1);
+	            end = xmlString.indexOf('"', start + 1);
+	            double lon = Convert.parseDouble(xmlString.substring(start + 1, end).replace(
+	                    notDecSep, decSep));
+	            pos = new CWPoint(lat, lon);
+	            LatLon = pos.toString();
+	            start = xmlString.indexOf('"', end + 1);
+	            end = xmlString.indexOf('"', start + 1);
+	            setDateHidden(xmlString.substring(start + 1, end));
+	            // Convert the US format to YYYY-MM-DD if necessary
+	            if (getDateHidden().indexOf('/') > -1)
+		            setDateHidden(DateFormat.MDY2YMD(getDateHidden()));
+	            start = xmlString.indexOf('"', end + 1);
+	            end = xmlString.indexOf('"', start + 1);
+	            setWayPoint(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+	            start = xmlString.indexOf('"', end + 1);
+	            end = xmlString.indexOf('"', start + 1);
+	            setCacheStatus(xmlString.substring(start + 1, end));
+	            start = xmlString.indexOf('"', end + 1);
+	            end = xmlString.indexOf('"', start + 1);
+	            setOcCacheID(xmlString.substring(start + 1, end));
+	            start = xmlString.indexOf('"', end + 1);
+	            end = xmlString.indexOf('"', start + 1);
+	            setLastSyncOC(xmlString.substring(start + 1, end));
+	            start = xmlString.indexOf('"', end + 1);
+	            end = xmlString.indexOf('"', start + 1);
+	            setNumRecommended(Convert.toInt(xmlString.substring(start + 1, end)));
+	            start = xmlString.indexOf('"', end + 1);
+	            end = xmlString.indexOf('"', start + 1);
+	            setNumFoundsSinceRecommendation(Convert.toInt(xmlString.substring(start + 1, end)));
+	            recommendationScore = LogList.getScore(getNumRecommended(),
+	                    getNumFoundsSinceRecommendation());
+	            start = xmlString.indexOf('"', end + 1);
+	            end = xmlString.indexOf('"', start + 1);
 		        if (start > -1 && end > -1) {
 			        setAttributesYes(Convert.parseLong(xmlString.substring(start + 1, end)));
 
@@ -268,12 +335,20 @@
 			        if (start > -1 && end > -1)
 				        setAttributesNo(Convert.parseLong(xmlString.substring(start + 1, end)));
 		        }
+	            start = xmlString.indexOf('"', end + 1);
+	            end = xmlString.indexOf('"', start + 1);
+	            this.long2boolFields(Convert.parseLong(xmlString.substring(start + 1, end)));	            
+	            start = xmlString.indexOf('"', end + 1);
+	            end = xmlString.indexOf('"', start + 1);
+	            this.long2byteFields(Convert.parseLong(xmlString.substring(start + 1, end)));	            
+	            if (is_black() != Global.getProfile().showBlacklisted())
+		            setFiltered(true);
+            }
 	        } catch (Exception ex) {
 	        	Global.getPref().log("Ignored Exception", ex, true);
 	        }
         }
 	
-
 	/**
 	 * Returns the distance in formatted output. Using kilometers when metric system is active,
 	 * using miles when imperial system is active.
@@ -438,29 +513,14 @@
 		sb.append("\" hidden = \"");	sb.append(getDateHidden());
 		sb.append("\" wayp = \"");		sb.append(SafeXML.clean(getWayPoint()));
 		sb.append("\" status = \"");	sb.append(getCacheStatus());
-		sb.append("\" type = \"");		sb.append(getType());
-		sb.append("\" dif = \"");		sb.append(getHard());
-		sb.append("\" terrain = \"" );	sb.append(getTerrain() ); 
-		sb.append("\" filtered = \"" ); sb.append(is_filtered()); // This was 'dirty', but dirty is not used
-		sb.append("\" size = \"");		sb.append(getCacheSize());
-		sb.append("\" online = \"" );	sb.append(is_available()); 
-		sb.append("\" archived = \"" );	sb.append(is_archived()); 
-		sb.append("\" has_bug = \"" ); 	sb.append(has_bugs()); 
-		sb.append("\" black = \"" ); 	sb.append(is_black()); 
-		sb.append("\" owned = \"" ); 	sb.append(is_owned()); 
-		sb.append("\" found = \"" ); 	sb.append(is_found()); 
-		sb.append("\" is_new = \"" );	sb.append(is_new());
-		sb.append("\" is_log_update = \"" );sb.append(is_log_updated()); 
-		sb.append("\" is_update = \"" );sb.append(is_updated()); 
-		sb.append("\" is_HTML = \"" ); 	sb.append(is_HTML()); 
-		sb.append("\" DNFLOGS = \"" ); 	sb.append(getNoFindLogs()); 
 		sb.append("\" ocCacheID = \"" );sb.append(getOcCacheID()); 
-		sb.append("\" is_INCOMPLETE = \"");sb.append(is_incomplete()); 
 		sb.append("\" lastSyncOC = \"" );sb.append(getLastSyncOC()); 
 		sb.append("\" num_recommended = \"");sb.append(Convert.formatInt(getNumRecommended())); 
 		sb.append("\" num_found = \"" );sb.append(Convert.formatInt(getNumFoundsSinceRecommendation()));
 		sb.append("\" attributesYes = \"" ); sb.append(Convert.formatLong(getAttributesYes()));
 		sb.append("\" attributesNo = \"" ); sb.append(Convert.formatLong(getAttributesNo()));
+		sb.append("\" boolFields=\"" ); sb.append(Convert.formatLong(this.boolFields2long()));
+		sb.append("\" byteFields=\"" ); sb.append(Convert.formatLong(this.byteFields2long()));
 		sb.append("\" />\n");
 		return sb.toString();
 	}
@@ -759,6 +819,118 @@
 		}
 	}
 
+	/**
+	 * Creates a bit field of boolean values of the cache, represented as a long value.
+	 * Boolean value of <code>true</code> results in <code>1</code> in the long values bits,
+	 * and, vice versa, 0 for false.
+	 * @return long value representing the boolean bit field
+	 */
+	private long boolFields2long() {
+		long value = bool2BitMask(this.is_filtered(), 1)    | 
+		             bool2BitMask(this.is_available(), 2)   |
+		             bool2BitMask(this.is_archived(), 3)    |
+		             bool2BitMask(this.has_bugs(), 4)       |
+		             bool2BitMask(this.is_black(), 5)       |
+		             bool2BitMask(this.is_owned(), 6)       |
+		             bool2BitMask(this.is_found(), 7)       |
+		             bool2BitMask(this.is_new(), 8)         |
+		             bool2BitMask(this.is_log_updated(), 9) |
+		             bool2BitMask(this.is_updated(), 10)    |
+		             bool2BitMask(this.is_HTML(), 11)       |
+		             bool2BitMask(this.is_incomplete(), 12);		             
+		return value;
+	}
+
+	/**
+	 * Creates a field of byte values of certain properties of the cache, represented
+	 * as a long value.
+	 * As a long is 8 bytes wide, one might pack 8 bytes into a long, one every 8
+	 * bits. The position indicates the group of bits where the byte is packed,
+	 * counting starting from one by the right side of the long.
+	 * @return long value representing the byte field
+	 */
+	private long byteFields2long() {
+		long value = byteBitMask(CacheHolder.terrHard_String2byte(hard), 1)    | 
+		byteBitMask(CacheHolder.terrHard_String2byte(terrain), 2)   |
+		byteBitMask(this.type, 3)    |
+		byteBitMask(CacheHolder.size_String2byte(cacheSize), 4)|
+		byteBitMask(this.noFindLogs, 5);		             
+		return value;
+	}
+	
+	/**
+	 * Evaluates byte values from a long value for certain properties of the cache.
+	 * @param value The long value which contains up to 8 bytes.
+	 */
+	private void long2byteFields(long value) {
+		this.setHard(CacheHolder.terrHard_byte2String(byteFromLong(value, 1)));
+		this.setTerrain(CacheHolder.terrHard_byte2String(byteFromLong(value, 2)));
+		this.type = byteFromLong(value, 3);
+		this.setCacheSize(CacheHolder.size_byte2String(byteFromLong(value, 4)));
+		this.setNoFindLogs((byteFromLong(value, 5)));
+	}
+
+	/**
+	 * Extracts a byte from a long value. The position is the number of the 8-bit block
+	 * of the long (which contains 8 8-bit blocks), counted from 1 to 8, starting from the
+	 * right side of the long.
+     * @param value The long value which contains the bytes
+     * @param position The position of the byte, from 1 to 8
+     * @return The decoded byte value
+     */
+    private byte byteFromLong(long value, int position) {
+		byte b = -1; // = 11111111
+	    return (byte)((value & this.byteBitMask(b, position))>>>(position-1)*8);
+    }
+
+	/**
+	 * Evaluates boolean values from a long value, which is seen as bit field.
+	 * @param value The bit field as long value
+	 */
+	private void long2boolFields(long value) {
+		this.setFiltered((value & this.bool2BitMask(true, 1)) != 0);
+		this.setAvailable((value & this.bool2BitMask(true, 2)) != 0);
+		this.setArchived((value & this.bool2BitMask(true, 3)) != 0);
+		this.setHas_bugs((value & this.bool2BitMask(true, 4)) != 0);
+		this.setBlack((value & this.bool2BitMask(true, 5)) != 0);
+		this.setOwned((value & this.bool2BitMask(true, 6)) != 0);
+		this.setFound((value & this.bool2BitMask(true, 7)) != 0);
+		this.setNew((value & this.bool2BitMask(true, 8)) != 0);
+		this.setLog_updated((value & this.bool2BitMask(true, 9)) != 0);
+		this.setUpdated((value & this.bool2BitMask(true, 10)) != 0);
+		this.setHTML((value & this.bool2BitMask(true, 11)) != 0);
+		this.setIncomplete((value & this.bool2BitMask(true, 12)) != 0);
+	}
+	
+	/**
+	 * Represents a bit mask as long value for a boolean value which is saved at
+	 * a specified position in the long field.
+	 * @param value The boolean value we want to code
+	 * @param position Position of the value in the bit mask
+	 * @return The corresponding bit mask: A long value where all bits are set to 0 except for
+	 * the one we like to represent: This is 1 if the value is true, 0 if not. 
+	 */
+	private long bool2BitMask(boolean value, int position) {
+		if (value) {
+			return (1L << (position-1));
+		} else {
+			return 0L;
+		}
+	}
+	
+	/**
+	 * Coding a long field which has only the bits of the byte value set. The position is the 
+	 * number (from 1 to 8) of the byte block which is used from the long.
+	 * @param value Byte to encode
+	 * @param position Position of the byte value in the long
+	 * @return Encoded byte value as long
+	 */
+	private long byteBitMask(byte value, int position) {
+		long result = (0xFF & (long) value) << ((position-1) *8);
+		return result;
+	}
+
+
 	// Getter and Setter for private properties
 
 	/**
@@ -854,14 +1026,152 @@
     	this.terrain = terrain;
     }
 
+	/**
+	 * The string representation of the internal value for difficulty and terrain values.
+	 * @param value Difficulty or terrain voting as byte
+	 * @return String representation of the value
+	 */
+	private static String terrHard_byte2String(byte value) {
+		String result;
+		switch (value) {
+		case DT_EMPTY: result = DT_EMPTY_TXT; break;
+		case DT_10: result = DT_10_TXT; break;
+		case DT_15: result = DT_15_TXT; break;
+		case DT_20: result = DT_20_TXT; break;
+		case DT_25: result = DT_25_TXT; break;
+		case DT_30: result = DT_30_TXT; break;
+		case DT_35: result = DT_35_TXT; break;
+		case DT_40: result = DT_40_TXT; break;
+		case DT_45: result = DT_45_TXT; break;
+		case DT_50: result = DT_50_TXT; break;
+		default: result = DT_UNKNOWN_TXT;
+		} 
+		return result;
+	}
+	/**
+	 * The string representation of the internal value for the cache size.
+	 * @param value Internal cache size value 
+	 * @return String representation of cache size
+	 */
+	private static String size_byte2String(byte value) {
+		String result;
+		switch (value) {
+		case SIZE_UNKNOWN: result = SIZE_UNKNOWN_TXT; break;
+		case SIZE_OTHER: result = SIZE_OTHER_TXT; break;
+		case SIZE_MICRO: result = SIZE_MICRO_TXT; break;
+		case SIZE_SMALL: result = SIZE_SMALL_TXT; break;
+		case SIZE_REGULAR: result = SIZE_REGULAR_TXT; break;
+		case SIZE_LARGE: result = SIZE_LARGE_TXT; break;
+		case SIZE_VLARGE: result = SIZE_VLARGE_TXT; break;
+		case SIZE_NONE: result = SIZE_NONE_TXT; break;
+		default: result = SIZE_UNKNOWN_TXT;
+		} 
+		return result;
+	}
+
+	/**
+	 * Decoding the String represenations of difficulty or terrain values to internal (byte) values.
+	 * The format of the String values has to be like 1 ; 1.5 ; 3 ; 4.5<br>
+	 * Other formats won't be recognized.
+     * @param value String representation of the difficulty/terrain
+     * @return The internal byte value for the difficulty/terrain
+     */
+    private static byte terrHard_String2byte(String value) {
+	    byte result;
+	    if (value.equals(DT_EMPTY_TXT)) {
+			result = DT_EMPTY;
+		} else if (value.equals(DT_10_TXT)) {
+			result = DT_10;
+		} else if (value.equals(DT_15_TXT)) {
+			result = DT_15;
+		} else if (value.equals(DT_20_TXT)) {
+			result = DT_20;
+		} else if (value.equals(DT_25_TXT)) {
+			result = DT_25;
+		} else if (value.equals(DT_30_TXT)) {
+			result = DT_30;
+		} else if (value.equals(DT_35_TXT)) {
+			result = DT_35;
+		} else if (value.equals(DT_40_TXT)) {
+			result = DT_40;
+		} else if (value.equals(DT_45_TXT)) {
+			result = DT_45;
+		} else if (value.equals(DT_50_TXT)) {
+			result = DT_50;
+		} else {
+			result = DT_UNKNOWN;
+		}
+	    return result;
+    }
+
+	/**
+	 * Converting the OC format of difficulty values (1,0 ; 3,5) to GC format (1 ; 3.5). If the
+	 * format is already GC, then it is returned unchanged. 
+     * @param pValue String to convert
+     * @return Converted String
+     */
+    public static String terrHard_OC2GC(String pValue) {
+	    String value = pValue.replace(',', '.');
+	    if (value.endsWith(".0")) value = value.substring(0,1);
+	    return value;
+    }
+    /**
+     * @param value
+     * @return
+     */
+    private static byte size_String2byte(String value) {
+    	byte result;
+    	if (value.equals(SIZE_OTHER_TXT)) {
+    		result = SIZE_OTHER;
+    	} else if (value.equals(SIZE_MICRO_TXT)) {
+    		result = SIZE_MICRO;
+    	} else if (value.equals(SIZE_SMALL_TXT)) {
+    		result = SIZE_SMALL;
+    	} else if (value.equals(SIZE_REGULAR_TXT)) {
+    		result = SIZE_REGULAR;
+    	} else if (value.equals(SIZE_LARGE_TXT)) {
+    		result = SIZE_LARGE;
+    	} else if (value.equals(SIZE_VLARGE_TXT)) {
+    		result = SIZE_VLARGE;
+    	} else if (value.equals(SIZE_NONE_TXT)) {
+    		result = SIZE_NONE;
+    	} else {
+    		result = DT_UNKNOWN;
+    	}
+    	return result;
+    }
+
+	/**
+	 * Gets the type of cache as integer. Internally it is saved as byte, so some conversion has
+	 * to be done as not every integer value which is (historically) attributed to the cache types
+	 * fits in the byte value range.
+	 * @return Cache type
+	 */
 	public int getType() {
-    	return type;
+		int result;
+		switch (type) {
+		case 100: result = 1848; break;
+		case 101: result = 453; break;
+		default: result = type + 128;
     }
+    	return result;
+    }
 
+	/**
+	 * Sets the type of the cache. As the cache type values are int for the rest of CacheWolf
+	 * and byte internally of CacheHolder, some conversion has to be done.
+	 * @param type Cache Type
+	 */
 	public void setType(int type) {
-		Global.getProfile().notifyUnsavedChanges(type != this.type);		
-    	this.type = type;
+		byte newType;
+		switch (type) {
+		case 1848: newType = 100; break;
+		case 453: newType = 101; break;
+		default: newType = (byte)(type - 128);
     }
+		Global.getProfile().notifyUnsavedChanges(newType != this.type);		
+    	this.type = newType;
+    }
 
 	public boolean is_archived() {
     	return archived;
@@ -966,11 +1276,11 @@
     	this.ocCacheID = ocCacheID;
     }
 
-	public int getNoFindLogs() {
+	public byte getNoFindLogs() {
     	return noFindLogs;
     }
 
-	public void setNoFindLogs(int noFindLogs) {
+	public void setNoFindLogs(byte noFindLogs) {
 		Global.getProfile().notifyUnsavedChanges(noFindLogs != this.noFindLogs);		
     	this.noFindLogs = noFindLogs;
     }

Modified: trunk/src/CacheWolf/CacheHolderDetail.java
===================================================================
--- trunk/src/CacheWolf/CacheHolderDetail.java	2009-05-06 19:25:59 UTC (rev 1786)
+++ trunk/src/CacheWolf/CacheHolderDetail.java	2009-05-07 18:18:21 UTC (rev 1787)
@@ -318,6 +318,7 @@
 				if(getParent().getWayPoint().length()>0){
 				  detfile.print("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\r\n");
 				  detfile.print("<CACHEDETAILS>\r\n");
+				  detfile.print("<VERSION value = \"2\"/>\n");
 				  detfile.print("<DETAILS><![CDATA["+LongDescription+"]]></DETAILS>\r\n");
 				  detfile.print("<COUNTRY><![CDATA["+Country+"]]></COUNTRY>\n");
 				  detfile.print("<STATE><![CDATA["+State+"]]></STATE>\n");

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-05-06 19:25:59 UTC (rev 1786)
+++ trunk/src/CacheWolf/CacheType.java	2009-05-07 18:18:21 UTC (rev 1787)
@@ -307,7 +307,7 @@
 		if (cacheType==1858)
 			return cacheImages[WHERIGO];
 		else	
-			return cacheImages[cacheType]; // TODO save in cacheholder as int
+			return cacheImages[cacheType]; 
 	}
 
 }

Modified: trunk/src/CacheWolf/GPXImporter.java
===================================================================
--- trunk/src/CacheWolf/GPXImporter.java	2009-05-06 19:25:59 UTC (rev 1786)
+++ trunk/src/CacheWolf/GPXImporter.java	2009-05-07 18:18:21 UTC (rev 1787)
@@ -401,11 +401,11 @@
 			return;
 		}
 		if (name.equals("groundspeak:difficulty") || name.equals("difficulty") || name.equals("terra:mental_challenge")) {
-			holder.setHard(strData.replace('.',','));
+			holder.setHard(strData);
 			return;
 		}
 		if (name.equals("groundspeak:terrain")|| name.equals("terrain")|| name.equals("terra:physical_challenge")) {
-			holder.setTerrain(strData.replace('.',','));
+			holder.setTerrain(strData);
 			return;
 		}
 		if ((name.equals("groundspeak:type") || name.equals("type")|| name.equals("terra:style"))&& inCache){

Modified: trunk/src/CacheWolf/LogList.java
===================================================================
--- trunk/src/CacheWolf/LogList.java	2009-05-06 19:25:59 UTC (rev 1786)
+++ trunk/src/CacheWolf/LogList.java	2009-05-07 18:18:21 UTC (rev 1787)
@@ -92,8 +92,8 @@
 	 /**
 	  *  Count the number of not-found logs
 	  */
-	 public int countNotFoundLogs() {
-		int countNoFoundLogs = 0;
+	 public byte countNotFoundLogs() {
+		byte countNoFoundLogs = 0;
 		while(countNoFoundLogs < size() && countNoFoundLogs < 5){
 			if(getLog(countNoFoundLogs).getIcon().startsWith("icon_sad")) {
 				countNoFoundLogs++;

Modified: trunk/src/CacheWolf/OCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/OCXMLImporter.java	2009-05-06 19:25:59 UTC (rev 1786)
+++ trunk/src/CacheWolf/OCXMLImporter.java	2009-05-07 18:18:21 UTC (rev 1787)
@@ -410,7 +410,7 @@
 				logIcon = GPXImporter.typeText2Image("Found");
 				break;
 			case 2:	logIcon = GPXImporter.typeText2Image("Not Found"); 
-			holder.setNoFindLogs(holder.getNoFindLogs()+1);
+			holder.setNoFindLogs((byte)(holder.getNoFindLogs()+1));
 			break;
 			case 3: logIcon = GPXImporter.typeText2Image("Note");
 			}
@@ -483,11 +483,11 @@
 			return;
 		}
 		if(name.equals("difficulty")) {
-			holder.setHard(strData);
+			holder.setHard(CacheHolder.terrHard_OC2GC(strData));
 			return;
 		}
 		if(name.equals("terrain")) {
-			holder.setTerrain(strData);
+			holder.setTerrain(CacheHolder.terrHard_OC2GC(strData));
 			return;
 		}
 		if(name.equals("datehidden")) {

Modified: trunk/src/CacheWolf/Profile.java
===================================================================
--- trunk/src/CacheWolf/Profile.java	2009-05-06 19:25:59 UTC (rev 1786)
+++ trunk/src/CacheWolf/Profile.java	2009-05-07 18:18:21 UTC (rev 1787)
@@ -77,6 +77,7 @@
 	 */
 	private boolean hasUnsavedChanges = false;
 	public boolean byPassIndexActive = false;
+	private int indexXmlVersion;
 
 	//TODO Add other settings, such as max. number of logs to spider
 	//TODO Add settings for the preferred mapper to allow for maps other than expedia and other resolutions
@@ -178,6 +179,7 @@
 		try{
 			detfile.print("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n");
 			detfile.print("<CACHELIST format=\"decimal\">\n");
+			detfile.print("    <VERSION value = \"2\"/>\n");
 			if (savedCentre.isValid())
 //				detfile.print("    <CENTRE lat=\""+savedCentre.getNSLetter() + " " + savedCentre.getLatDeg(CWPoint.CW) + "&deg; " + savedCentre.getLatMin(CWPoint.CW)+ "\" "+
 //				"long=\""+savedCentre.getEWLetter() + " " + savedCentre.getLonDeg(CWPoint.CW) + "&deg; " + savedCentre.getLonMin(CWPoint.CW)+"\"/>\n");
@@ -241,6 +243,7 @@
 			char decSep = MyLocale.getDigSeparator().charAt(0);
 			char notDecSep = decSep == '.' ? ',' : '.';
 			FileReader in = new FileReader(dataDir + "index.xml");
+			indexXmlVersion = 1; // Initial guess
 			in.readLine(); // <?xml version= ...
 			String text = in.readLine(); // <CACHELIST>
 			if (text!=null && text.indexOf("decimal")>0) fmtDec=true;
@@ -250,7 +253,7 @@
 			while ((text = in.readLine()) != null){
 				// Check for Line with cache data
 				if (text.indexOf("<CACHE ")>=0){
-					CacheHolder ch=new CacheHolder(text);
+					CacheHolder ch=new CacheHolder(text,indexXmlVersion);
 					cacheDB.add(ch);
 				} else if (text.indexOf("<CENTRE")>=0) { // lat=  lon=
 					if (fmtDec) {
@@ -266,6 +269,9 @@
 						String lon=SafeXML.cleanback(text.substring(start,text.indexOf("\"",start)));
 						centre.set(lat+" "+lon,CWPoint.CW); // Fast parse
 					}	
+				} else if (text.indexOf("<VERSION")>=0) {
+					int start=text.indexOf("value = \"")+9;
+					indexXmlVersion  = Integer.valueOf(text.substring(start,text.indexOf("\"",start))).intValue();
 				} else if (text.indexOf("<SYNCOC")>=0) {
 					int start=text.indexOf("date = \"")+8;
 					setLast_sync_opencaching(text.substring(start,text.indexOf("\"",start)));

Modified: trunk/src/CacheWolf/Rebuild.java
===================================================================
--- trunk/src/CacheWolf/Rebuild.java	2009-05-06 19:25:59 UTC (rev 1786)
+++ trunk/src/CacheWolf/Rebuild.java	2009-05-07 18:18:21 UTC (rev 1787)
@@ -9,6 +9,7 @@
 
 public class Rebuild {
 	String [] xmlFiles;
+	private int cacheXmlVersion;
 	
 	public Rebuild() { // Public constructor
 	}
@@ -47,7 +48,7 @@
 					h.changed();
 					String details=getCacheDetails(prof.dataDir+xmlFiles[i]);
 					if (details!=null) { // In older Versions of CW the <CACHE... /> line was not stored in the cache.xml
-						CacheHolder ch=new CacheHolder(details);
+						CacheHolder ch=new CacheHolder(details, cacheXmlVersion);
 						prof.cacheDB.add(ch);
 						nAdded++;
 						xmlFiles[i]=null;
@@ -87,8 +88,13 @@
 			String text= in.readAll();
 			in.close();
 			int start,end;
+			int vstart;
+			cacheXmlVersion = 1; // Initial guess
 			// Check that we have not accidentally listed another xml file in the directory
 			if (text.indexOf("<CACHEDETAILS>")<0 || (start=text.indexOf("<CACHE "))<0) return null;
+			if ((vstart = text.indexOf("<VERSION = \"")) >= 0) {
+				cacheXmlVersion = Integer.valueOf(text.substring(vstart+9, text.indexOf("\"", vstart+9))).intValue();
+			}
 			end=text.indexOf("/>",start);
 			return text.substring(start,end+2);
 		} catch (Exception ex) {



From engywuck at mail.berlios.de  Sat May  9 09:29:01 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Sat, 9 May 2009 09:29:01 +0200
Subject: [Cachewolf-svn] r1788 - trunk/src/CacheWolf
Message-ID: <200905090729.n497T1mg020650@sheep.berlios.de>

Author: engywuck
Date: 2009-05-09 09:28:59 +0200 (Sat, 09 May 2009)
New Revision: 1788

Modified:
   trunk/src/CacheWolf/CacheHolder.java
Log:
Using "None" as String representation of CacheSize if no proper value is given.

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-07 18:18:21 UTC (rev 1787)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-09 07:28:59 UTC (rev 1788)
@@ -1055,8 +1055,10 @@
 	 */
 	private static String size_byte2String(byte value) {
 		String result;
+		//Change: If no sensible value for the cache size is entered, then 
+		//the state is set to "None".
 		switch (value) {
-		case SIZE_UNKNOWN: result = SIZE_UNKNOWN_TXT; break;
+		case SIZE_UNKNOWN: result = SIZE_NONE_TXT; break;
 		case SIZE_OTHER: result = SIZE_OTHER_TXT; break;
 		case SIZE_MICRO: result = SIZE_MICRO_TXT; break;
 		case SIZE_SMALL: result = SIZE_SMALL_TXT; break;
@@ -1064,7 +1066,7 @@
 		case SIZE_LARGE: result = SIZE_LARGE_TXT; break;
 		case SIZE_VLARGE: result = SIZE_VLARGE_TXT; break;
 		case SIZE_NONE: result = SIZE_NONE_TXT; break;
-		default: result = SIZE_UNKNOWN_TXT;
+		default: result = SIZE_NONE_TXT;
 		} 
 		return result;
 	}



From engywuck at mail.berlios.de  Sat May  9 10:38:03 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Sat, 9 May 2009 10:38:03 +0200
Subject: [Cachewolf-svn] r1789 - in trunk/src: CacheWolf CacheWolf/navi exp
Message-ID: <200905090838.n498c3DD027771@sheep.berlios.de>

Author: engywuck
Date: 2009-05-09 10:37:53 +0200 (Sat, 09 May 2009)
New Revision: 1789

Modified:
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/CacheList.java
   trunk/src/CacheWolf/DBStats.java
   trunk/src/CacheWolf/DataMover.java
   trunk/src/CacheWolf/Filter.java
   trunk/src/CacheWolf/MainForm.java
   trunk/src/CacheWolf/MainMenu.java
   trunk/src/CacheWolf/MainTab.java
   trunk/src/CacheWolf/Profile.java
   trunk/src/CacheWolf/RadarPanel.java
   trunk/src/CacheWolf/SearchCache.java
   trunk/src/CacheWolf/ShowCacheInBrowser.java
   trunk/src/CacheWolf/SpiderGC.java
   trunk/src/CacheWolf/StatusBar.java
   trunk/src/CacheWolf/myTableControl.java
   trunk/src/CacheWolf/myTableModel.java
   trunk/src/CacheWolf/navi/MovingMap.java
   trunk/src/exp/ExploristExporter.java
   trunk/src/exp/Exporter.java
   trunk/src/exp/HTMLExporter.java
   trunk/src/exp/KMLExporter.java
   trunk/src/exp/TPLExporter.java
   trunk/src/exp/TomTomExporter.java
Log:
Introducing property for cache visibility in the list. The property is_filtered(), which was (also) used for this up to now now can concentrate on its proper meaning: If a cache is matched by a filter or not. (http://www.geoclub.de/viewtopic.php?f=40&t=33550)

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -826,7 +826,10 @@
 	 * @return long value representing the boolean bit field
 	 */
 	private long boolFields2long() {
-		long value = bool2BitMask(this.is_filtered(), 1)    | 
+		// To get the same list of visible caches after loading a profile,
+		// the property isVisible() is saved instead of is_filtered(), but at 
+		// the place where is_filtered() is read.
+		long value = bool2BitMask(this.isVisible(), 1)    | 
 		             bool2BitMask(this.is_available(), 2)   |
 		             bool2BitMask(this.is_archived(), 3)    |
 		             bool2BitMask(this.has_bugs(), 4)       |
@@ -931,6 +934,29 @@
 	}
 
 
+	/**
+	 * Returns <code>true</code> if the waypoint should appear in the cache list, 
+	 * <code>false</code> if it should not appear.<br>
+	 * The method takes into account blacklist, filters, search results - everything
+	 * that determines if a cache is visible in the list or not. 
+	 * @return
+	 */
+	public boolean isVisible() {
+		Profile profile = Global.getProfile();
+		int filter = profile.getFilterActive();
+		boolean noShow=
+			(  (profile.showBlacklisted() != this.is_black())   
+				||
+			   (profile.showSearchResult() && !this.is_flaged)   
+			    ||
+			   ( (filter==Filter.FILTER_ACTIVE||filter==Filter.FILTER_MARKED_ONLY) &&	
+			  	 (this.is_filtered())^profile.isFilterInverted())                            
+			  	||
+			   (filter==Filter.FILTER_CACHELIST) && 
+			     !Global.mainForm.cacheList.contains(this.getWayPoint()));
+		return !noShow;
+	}
+
 	// Getter and Setter for private properties
 
 	/**
@@ -1211,6 +1237,30 @@
     	this.found = is_found;
     }
 
+	/**
+	 * <b><u>Important</u></b>: This flag no longer indicates if a cache is visible
+	 * in the list. Instead, it now <u>only</u> flags if the cache is filtered out
+	 * by filter criteria. Use <code>isVisible()</code> instead.<br>
+	 * This property is affected by the following features:
+	 * <ul>
+	 * <li>"Defining and applying" a filter</li>
+	 * <li>Filtering out checked or unchecked caches</li>
+	 * </ul>
+	 * It is <u>not</u> affected by:
+	 * <ul>
+	 * <li>Inverting a filter</li>
+	 * <li>Removing a filter</li>
+	 * <li>Applying a filter</li>
+	 * <li>Applying a cache tour filter</li>
+	 * <li>Switching between normal view and blacklist view</li>
+	 * <li>Performing searches</li>
+	 * <li>Anything else that isn't directly connected to filters in 
+	 * it's proper sense.</li>
+	 * </ul>
+	 * The new method for deciding if a cache is visible or not is <code>isVisible()
+	 * </code>.  
+	 * @return <code>True</code> if filter criteria are matched
+	 */
 	public boolean is_filtered() {
     	return filtered;
     }
@@ -1250,6 +1300,14 @@
     	this.incomplete = is_incomplete;
     }
 
+	/**
+	 * Determines if the blacklist status is set for the cache. Do not use this method
+	 * to check if the cache should be displayed. Use <code>isVisible()</code> for
+	 * this, which already does this (and other) checks.<br>
+	 * Only use this method if you really want to inform yourself about the 
+	 * black status of the cache!
+	 * @return <code>true</code> if he black status of the cache is set.
+	 */
 	public boolean is_black() {
     	return black;
     }

Modified: trunk/src/CacheWolf/CacheList.java
===================================================================
--- trunk/src/CacheWolf/CacheList.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/CacheWolf/CacheList.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -75,7 +75,7 @@
 	/** This list mirrors the items in the list of selected caches for faster access. When the 
      * list of selected caches is manipulated (btnUp, btnDown), this list is also kept up to date
      */
-	private Vector cacheList=new Vector(20);
+	private CacheDB cacheList=new CacheDB();
 	/** The full filename of the current file */
 	private String currFile=null;
 	
@@ -89,7 +89,7 @@
 		public void startDragging(DragContext dc) {
 			 idx=getSelectedIndex(0);
 			 if (idx>=0) {
-				 CacheHolder ch=(CacheHolder)cacheList.get(idx);
+				 CacheHolder ch=cacheList.get(idx);
 				 wayPoint=ch.getWayPoint();
 				 IconAndText imgDrag=new IconAndText();
 				 imgDrag.addColumn(CacheType.cache2Img(ch.getType()));
@@ -110,7 +110,7 @@
 			 Control c = getWindow().findChild(p.x,p.y);
 		     if (!(c instanceof myList)) { 
 		    	 // target is not myList => Remove dragged cache from list
-		    	 cacheList.del(idx);
+		    	 cacheList.removeElementAt(idx);
 		    	 lstCaches.deleteItem(idx);
 		    	 repaint();
 		    	 changeUpDownButtonStatus();
@@ -133,7 +133,7 @@
 			if (ev.type == KeyEvent.KEY_PRESS && ev.target == this){
 				if (ev.key == IKeys.DELETE && cacheList.size()>0) {
 			    	 idx=getSelectedIndex(0);
-					 cacheList.del(idx);
+					 cacheList.removeElementAt(idx);
 			    	 lstCaches.deleteItem(idx);
 			    	 repaint();
 			    	 changeUpDownButtonStatus();
@@ -178,7 +178,7 @@
 		if (ev instanceof MenuEvent && ev.type==MenuEvent.SELECTED) {
 			if (lstCaches.itemsSize()>0 && !needsInit) {
 				int lstCacheIdx=lstCaches.getSelectedIndex(0);
-				CacheHolder ch=(CacheHolder)cacheList.get(lstCacheIdx);
+				CacheHolder ch=cacheList.get(lstCacheIdx);
 				int idx=Global.getProfile().cacheDB.getIndex(ch);
 				// Ensure that the main view is updated with the selected cache, i.e.
 				// DetailsPanel, HintLog, Pictures etc.
@@ -227,7 +227,7 @@
 					// Swap items in hidden list
 					Object swap=cacheList.get(sel-1);
 					cacheList.set(sel-1,cacheList.get(sel));
-					cacheList.set(sel,swap);
+					cacheList.set(sel,(CacheHolder)swap);
 					// Swap items in visible cachelist and repaint
 					swap=lstCaches.items.get(sel-1);
 					lstCaches.items.set(sel-1,lstCaches.items.get(sel));
@@ -242,7 +242,7 @@
 					// Swap items in hidden list
 					Object swap=cacheList.get(sel+1);
 					cacheList.set(sel+1,cacheList.get(sel));
-					cacheList.set(sel,swap);
+					cacheList.set(sel,(CacheHolder)swap);
 					// Swap items in visible cachelist and repaint
 					swap=lstCaches.items.get(sel+1);
 					lstCaches.items.set(sel+1,lstCaches.items.get(sel));
@@ -261,39 +261,22 @@
 		Global.getProfile().selectionChanged = true;
 		CacheDB cacheDB=Global.getProfile().cacheDB;
 		CacheHolder ch;
-		int wrongBlackStatus=0;
+		int wrongVisStatus=0;
 		String apply="\uFFFF"+Convert.toString(applyCount++);
-		// Start by setting all caches to filtered
+		Global.getProfile().setFilterActive(Filter.FILTER_CACHELIST);
 		for(int i = cacheDB.size()-1; i >=0 ; i--){
-			ch = cacheDB.get(i);
-			ch.setFiltered(true) ; // ignore blacklist attribute
-			ch.sort=apply;
+			cacheDB.get(i).sort=apply;
 		}
-		// Now "unfilter" the caches in our list
 		for (int i = cacheList.size()-1; i>=0; i--) {
-			ch = (CacheHolder)cacheList.get(i);
-			/* If the cache was reloaded from a GPX file since we dragged it into the list,
-			   the pointer ch points to a CacheHolder object that is no longer part of cacheDB.
-			   In this case we need to search the cacheDB for an object with the name of ch.wayPoint
-			   and use that object. To speed up this process and avoid having to search the whole
-			   cacheDB for each entry in cacheList, we simply compare the sort field of ch to apply.
-			*/
-			if (!ch.sort.equals(apply)) {
-				ch=cacheDB.get(ch.getWayPoint());
-				if (ch == null) continue;
-			}
-			if (ch.is_black()!=Global.getProfile().showBlacklisted()) 
-				wrongBlackStatus++;
-			else {
-				ch.setFiltered(false);
-				ch.sort=MyLocale.formatLong(i,"00000");
-			}
+			ch = cacheDB.get((cacheList.get(i)).getWayPoint());
+			if (!ch.isVisible()) wrongVisStatus++;
+			String s = MyLocale.formatLong(i,"00000"); 
+			ch.sort=s;
 		}
 		// The sort command places all filtered caches at the end
 		cacheDB.sort(new mySort(),false);
-		Global.getProfile().setFilterActive(Filter.FILTER_CACHELIST);
-		updateScreen(cacheList.size()-wrongBlackStatus);
-		if (wrongBlackStatus>0)
+		updateScreen(cacheList.size()-wrongVisStatus);
+		if (wrongVisStatus>0)
 			(new MessageBox(MyLocale.getMsg(5500,"Error"),MyLocale.getMsg(4600,"Some cache(s) cannot be shown because of wrong blacklist status"), FormBase.OKB)).execute();
 
 	}
@@ -313,7 +296,7 @@
 			CacheHolder addiWpt;
 			for (int j=0; j<ch.addiWpts.getCount();j++){
 				addiWpt = (CacheHolder)ch.addiWpts.get(j);
-				if (!addiWpt.is_filtered()) cachesAdded|=addCache(addiWpt);
+				if (addiWpt.isVisible()) cachesAdded|=addCache(addiWpt);
 			}
 		}
 		// Update screen if any cache was added
@@ -326,7 +309,7 @@
 
 	/** Add a cache to the visible and invisible list */
 	private boolean addCache(CacheHolder ch) {
-		if (cacheList.find(ch)<0) {
+		if (cacheList.getIndex(ch.getWayPoint())<0) {
 			// Add cache reference to hidden list
 			cacheList.add(ch);
 			// Add Cache and cache icon to visible list
@@ -338,7 +321,7 @@
 	}
 	
 	void updateScreen(int numRows) {
-		Global.mainTab.tbP.myMod.numRows=numRows;
+//		Global.mainTab.tbP.myMod.numRows=numRows;
 		Global.mainTab.tbP.refreshTable(); // Update and repaint
 		int selPanel;
 		if ((selPanel=Global.mainTab.cardPanel.selectedItem)>-1) {
@@ -383,6 +366,7 @@
 	private void readFromFile(String fileName) {
 		if (needsInit)  {lstCaches.deleteItem(0);lstCaches.deleteItem(0);  needsInit=false; }
 		int select=-1;
+		boolean selected = false;
 		try {
 			FileReader in = new FileReader(fileName);
 			String wayPoint;
@@ -392,14 +376,16 @@
 				// Select the cache starting with >
 				if (wayPoint.startsWith(">")) {
 					wayPoint=wayPoint.substring(1);
-					select=lineNr;
+					selected = true;
 				}
 				// Only add the cache if it is in this profile
 				CacheHolder ch=Global.getProfile().cacheDB.get(wayPoint);
 				if (ch != null) {
 					addCache(ch);
+					if (selected) select = lineNr+
+					lineNr++;
 				}
-				lineNr++;
+				selected = false;
 			}
 			in.close();
 		} catch(Exception e) {
@@ -423,7 +409,7 @@
 			PrintWriter outp =  new PrintWriter(new BufferedWriter(new FileWriter(fileName)));
 			for (int i=0; i<cacheList.size(); i++) {
 				// Put a > in front of the selected cache
-				outp.print((i==selectedIndex?">":"")+((CacheHolder)cacheList.get(i)).getWayPoint()+"\n");
+				outp.print((i==selectedIndex?">":"")+(cacheList.get(i)).getWayPoint()+"\n");
 			}
 			outp.close();
 		} catch(Exception e) {
@@ -446,4 +432,13 @@
 			lblTitle.setText(localFileName);
 		lblTitle.repaint();
 	}
+	
+	/**
+	 * Determines if the cache tour contains a cache with a certain waypoint
+	 * @param waypoint Waypoint to check
+	 * @return <code>True</code>: Contains waypoint, otherwise not.
+	 */
+	public boolean contains(String waypoint) {
+		return cacheList.getIndex(waypoint)>=0;
+	}
 }

Modified: trunk/src/CacheWolf/DBStats.java
===================================================================
--- trunk/src/CacheWolf/DBStats.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/CacheWolf/DBStats.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -23,7 +23,7 @@
 		int counter = 0;
 		for(int i = 0; i<cacheDB.size();i++){
 			holder = cacheDB.get(i);
-			if(holder.is_black() == false && holder.is_filtered() == false){
+			if(holder.isVisible()){
 				if(holder.getWayPoint().startsWith("GC") || holder.getWayPoint().startsWith("OC")) counter++;
 			}
 		}

Modified: trunk/src/CacheWolf/DataMover.java
===================================================================
--- trunk/src/CacheWolf/DataMover.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/CacheWolf/DataMover.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -90,7 +90,7 @@
 		int count=0;
 		// Count the number of caches to move/delete/copy
 		for(int i = 0; i<size; i++) {
-			if(srcDB.get(i).is_filtered()==false) count++;
+			if(srcDB.get(i).isVisible()) count++;
 		}
 		myProgressBarForm pbf = new myProgressBarForm();
 		Handle h = new Handle();
@@ -101,7 +101,7 @@
 		// Now do the actual work
 		for(int i = size-1; i>=0; i--){
 			CacheHolder srcHolder=srcDB.get(i);
-			if(srcHolder.is_filtered()==false){
+			if(srcHolder.isVisible()){
 				h.progress = ((float)nProcessed++)/(float)count;
 				h.changed();
 				//Now do the copy/delete/move of the cache

Modified: trunk/src/CacheWolf/Filter.java
===================================================================
--- trunk/src/CacheWolf/Filter.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/CacheWolf/Filter.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -372,11 +372,8 @@
 	    int cacheRosePattern;
 	    int cacheSizePattern;
 	    double dummyd1;
-	    boolean cacheFiltered;
+	    boolean cacheFiltered=false;
 	    do {
-	    	cacheFiltered = ch.is_black()^Global.getProfile().showBlacklisted();
-	    	if (cacheFiltered) break;
-	    	
 	        ///////////////////////////////
 	        // Filter criterium 1: Cache type
 	        ///////////////////////////////
@@ -599,23 +596,10 @@
     }
 	
 	/**
-	*	Invert is_filtered flag on all caches
+	*	Switches flag to invert filter property.
 	*/
 	public void invertFilter(){
-		CacheDB cacheDB=Global.getProfile().cacheDB;
-		CacheHolder ch;
-		if (cacheDB.size()==0) return;
-		Global.getProfile().selectionChanged = true;
-		boolean showBlackListed=Global.getProfile().showBlacklisted();
-		for(int i = cacheDB.size()-1; i >=0 ; i--){
-			ch = cacheDB.get(i);
-			if (ch.is_black()==showBlackListed)
-				ch.setFiltered(!ch.is_filtered()); // Only invert those that would be shown under blacklist filter
-			else
-				ch.setFiltered(true); // Hide all those that have the wrong is_black status
-		}
 		Global.getProfile().setFilterInverted(!Global.getProfile().isFilterInverted());
-		//Global.getProfile().hasUnsavedChanges=true;
 	}
 	
 	/**
@@ -624,10 +608,8 @@
 	public void clearFilter(){
 		Global.getProfile().selectionChanged = true;
 		CacheDB cacheDB=Global.getProfile().cacheDB;
-		CacheHolder ch;
 		for(int i = cacheDB.size()-1; i >=0 ; i--){
-			ch = cacheDB.get(i);
-			ch.setFiltered((ch.is_black()^Global.getProfile().showBlacklisted())) ; // Always filter blacklisted caches
+			cacheDB.get(i).setFiltered(false);
 		}
 		Global.getProfile().setFilterActive(FILTER_INACTIVE);
 	}

Modified: trunk/src/CacheWolf/MainForm.java
===================================================================
--- trunk/src/CacheWolf/MainForm.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/CacheWolf/MainForm.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -125,6 +125,7 @@
 		*/
 		mMenu.setTablePanel(mTab.getTablePanel());
 		if (infB != null) infB.close(0);
+		mTab.tbP.refreshTable();
 		mTab.tbP.selectFirstRow();
 		//mTab.tbP.tc.paintSelection();
 		Vm.showWait(false);

Modified: trunk/src/CacheWolf/MainMenu.java
===================================================================
--- trunk/src/CacheWolf/MainMenu.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/CacheWolf/MainMenu.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -547,7 +547,7 @@
 					ch = cacheDB.get(i);
 					// This is an incremental filter, i.e. it keeps the existing filter
 					// status and only adds the marked caches to the filtered set
-					if (ch.is_Checked && !ch.is_filtered()) {
+					if (ch.is_Checked && ch.isVisible()) {
 						ch.setFiltered(true);
 						filterChanged = true;
 					}
@@ -565,7 +565,7 @@
 					ch = cacheDB.get(i);
 					// incremental filter. Keeps status of all marked caches and
 					// adds unmarked caches to filtered list
-					if (!ch.is_Checked && !ch.is_filtered()) {
+					if (!ch.is_Checked && ch.isVisible()) {
 						ch.setFiltered(true);
 						filterChanged = true;
 					}
@@ -581,9 +581,6 @@
 				filtBlack.modifiers=Global.getProfile().showBlacklisted()?filtBlack.modifiers|MenuItem.Checked:filtBlack.modifiers&~MenuItem.Checked;
 				SearchCache ssc = new SearchCache(cacheDB);
 				ssc.clearSearch();// Clear search & restore filter status
-				//Filter flt=new Filter();
-				//flt.clearFilter();
-				Global.getProfile().restoreFilter();
 				tbp.refreshTable();
 			}
 			///////////////////////////////////////////////////////////////////////
@@ -696,7 +693,7 @@
 		Vector cachesToUpdate = new Vector();
 		for(int i = 0; i <	cacheDB.size(); i++){
 			ch = cacheDB.get(i);
-			if(ch.is_Checked == true && !ch.is_filtered()) {
+			if(ch.is_Checked == true && ch.isVisible()) {
 				if ( ch.getWayPoint().length()>1 && (ch.getWayPoint().substring(0,2).equalsIgnoreCase("GC") 
 						|| ch.getWayPoint().substring(0,2).equalsIgnoreCase("OC")))
 //					if ( (ch.wayPoint.length() > 1 && ch.wayPoint.substring(0,2).equalsIgnoreCase("GC")))

Modified: trunk/src/CacheWolf/MainTab.java
===================================================================
--- trunk/src/CacheWolf/MainTab.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/CacheWolf/MainTab.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -121,7 +121,7 @@
 		}
 		super.onEvent(ev); //Make sure you call this.
 		// If we are in Listview update status
-		if (this.getSelectedItem()==0 && statBar!=null) statBar.updateDisplay();
+//		if (this.getSelectedItem()==0 && statBar!=null) statBar.updateDisplay();
 	}
 
 	/**
@@ -187,8 +187,6 @@
 			// If Solver or Details has changed, save Cache
 			updatePendingChanges();
 			if (detP.hasBlackStatusChanged()) {
-				// filter out caches with wrong blacklist status
-				Global.getProfile().checkBlacklistStatus();
 				tbP.refreshTable();
 			}
 			break;

Modified: trunk/src/CacheWolf/Profile.java
===================================================================
--- trunk/src/CacheWolf/Profile.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/CacheWolf/Profile.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -66,6 +66,7 @@
 	private int filterActive = Filter.FILTER_INACTIVE;
 	private boolean filterInverted = false;
 	private boolean showBlacklisted = false;
+	private boolean showSearchResult = false;
 
 	private long filterAttrYes = 0l;
 	private long filterAttrNo = 0l;
@@ -181,8 +182,6 @@
 			detfile.print("<CACHELIST format=\"decimal\">\n");
 			detfile.print("    <VERSION value = \"2\"/>\n");
 			if (savedCentre.isValid())
-//				detfile.print("    <CENTRE lat=\""+savedCentre.getNSLetter() + " " + savedCentre.getLatDeg(CWPoint.CW) + "&deg; " + savedCentre.getLatMin(CWPoint.CW)+ "\" "+
-//				"long=\""+savedCentre.getEWLetter() + " " + savedCentre.getLonDeg(CWPoint.CW) + "&deg; " + savedCentre.getLonMin(CWPoint.CW)+"\"/>\n");
 				detfile.print("    <CENTRE lat=\""+savedCentre.latDec+"\" lon=\""+savedCentre.lonDec+"\"/>\n");
 			if(getLast_sync_opencaching() == null || getLast_sync_opencaching().endsWith("null") || getLast_sync_opencaching().equals("")){
 				setLast_sync_opencaching("20050801000000");
@@ -194,7 +193,16 @@
 				setDistGC("0.0");
 			}
 
-			detfile.print("    <FILTER status = \""+getFilterActive()+(isFilterInverted()?"T":"F")+ 
+			// If the current filter is a CacheTour filter, then save it as
+			// normal filter, because after loading there is no cache tour defined
+			// which could be used as filter criterium.
+			int activeFilterForSave;
+			if (getFilterActive()==Filter.FILTER_CACHELIST) {
+				activeFilterForSave = Filter.FILTER_ACTIVE;
+			} else {
+				activeFilterForSave = getFilterActive();
+			}
+			detfile.print("    <FILTER status = \""+activeFilterForSave+(isFilterInverted()?"T":"F")+ 
 					"\" rose = \""+getFilterRose()+"\" type = \""+getFilterType()+
 					"\" var = \""+getFilterVar()+"\" dist = \""+getFilterDist().replace('"',' ')+"\" diff = \""+
 					getFilterDiff()+"\" terr = \""+getFilterTerr()+"\" size = \""+getFilterSize()+"\" attributesYes = \""+getFilterAttrYes()+
@@ -360,17 +368,6 @@
 		}
 	}
 	
-	void checkBlacklistStatus() {
-		CacheHolder ch;
-		for(int i = cacheDB.size()-1; i >=0 ; i--){
-			ch = cacheDB.get(i);
-			if (ch.is_black() ^ showBlacklisted()) {
-				ch.setFiltered(true);
-				selectionChanged = true;
-			}
-		}
-	}
-
 	public int getCacheIndex(String wp) {
 		return cacheDB.getIndex(wp);
 	}
@@ -433,7 +430,7 @@
 		CacheHolder ch;
 		for (int i = cacheDB.size() - 1; i >= 0; i--) {
 			ch = cacheDB.get(i);
-			if (ch.is_filtered() == false)
+			if (ch.isVisible())
 				ch.is_Checked = selectStatus;
 		}
 	}
@@ -665,6 +662,24 @@
 		this.showBlacklisted = showBlacklisted;
 	}
 
+	/**
+	 * If <code>true</code> then the cache list will only display the
+	 * caches that are result of a search.   
+	 * @return <code>True</code> if list should only display search results
+	 */
+	public boolean showSearchResult() {
+		return showSearchResult;
+	}
+	
+	/**
+	 * Sets parameter if cache list should only display the caches that are
+	 * results of a search.
+	 * @param showSearchResult <code>True</code>: List should only display search
+	 * results.
+	 */
+	public void setShowSearchResult(boolean showSearchResult){
+		this.showSearchResult = showSearchResult;
+	}
 	public long getFilterAttrYes() {
 		return filterAttrYes;
 	}

Modified: trunk/src/CacheWolf/RadarPanel.java
===================================================================
--- trunk/src/CacheWolf/RadarPanel.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/CacheWolf/RadarPanel.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -105,7 +105,7 @@
 		double pi180=java.lang.Math.PI / 180.0;
 		for(int i = cacheDB.size()-1; i >=0 ; i--){
 			holder = cacheDB.get(i);
-			if(!holder.is_filtered() && holder.pos.isValid()) {
+			if(holder.isVisible() && holder.pos.isValid()) {
 				degrees = holder.degrees * pi180;
 				drX =new Float(holder.kilom/scale *  java.lang.Math.sin(degrees)).intValue();
 				drY = -new Float(holder.kilom/scale *  java.lang.Math.cos(degrees)).intValue();

Modified: trunk/src/CacheWolf/SearchCache.java
===================================================================
--- trunk/src/CacheWolf/SearchCache.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/CacheWolf/SearchCache.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -28,7 +28,7 @@
 			int counter = 0;
 			if (searchInDescriptionAndNotes) {
 				for(int i=0 ; i<cacheDB.size(); i++) {
-					if (cacheDB.get(i).is_filtered()) break;
+					if (!cacheDB.get(i).isVisible()) break;
 					counter++;
 				}
 			}
@@ -42,7 +42,7 @@
 			for(int i = 0;i < cacheDB.size();i++){
 				cwp.setPosition(i);
 				ch = cacheDB.get(i);
-				if (ch.is_filtered()) break; // Reached end of visible records
+				if (!ch.isVisible()) break; // Reached end of visible records
 				if(ch.getWayPoint().toUpperCase().indexOf(searchStr) <0 && 
 				   ch.getCacheName().toUpperCase().indexOf(searchStr) <0 && 
 				   ch.getCacheStatus().toUpperCase().indexOf(searchStr)<0 &&
@@ -50,31 +50,26 @@
 					ch.getExistingDetails().LongDescription.toUpperCase().indexOf(searchStr)<0 &&
 					ch.getExistingDetails().CacheNotes.toUpperCase().indexOf(searchStr)<0)){
 					ch.is_flaged = false;
-					ch.setFiltered(true);
 				} else
 					ch.is_flaged=true;
 				if (cwp.isClosed()) break;
 			} // for
 			cwp.exit(0);
+			Global.getProfile().setShowSearchResult(true);
 		    Global.mainTab.tbP.selectRow(0);
 		} // if
 	}
 	
 	/**
 	* Method to remove the flag from all caches in the 
-	* cache database. Restore to the state of the filter
+	* cache database.
 	*/
 	public void clearSearch(){
 	    Profile profile = Global.getProfile();
 		profile.selectionChanged = true;
-		boolean filter_marked_only = profile.getFilterActive() == Filter.FILTER_MARKED_ONLY;
+		profile.setShowSearchResult(false);
 		for(int i = cacheDB.size()-1;i >=0;i--){
-			CacheHolder ch=cacheDB.get(i);
-			ch.is_flaged=false;
-			if (filter_marked_only) ch.setFiltered((ch.is_black()^Global.getProfile().showBlacklisted())) ;
+			cacheDB.get(i).is_flaged=false;
 		}
-		//Global.getProfile().filterActive=Filter.filterActive; //TODO This is a hack. Need to tidy this up
-		//Global.getProfile().filterInverted=Filter.filterInverted;
-		profile.restoreFilter();
 	}
 }

Modified: trunk/src/CacheWolf/ShowCacheInBrowser.java
===================================================================
--- trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -62,7 +62,7 @@
 		if (chD == null) return;
 		try {
 			Template tpl = new Template(args);
-			if(!chD.is_filtered()){
+			if(chD.isVisible()){
 				Vm.showWait(true);
 				try {
 					if (chD.getWayPoint().startsWith("OC"))

Modified: trunk/src/CacheWolf/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/SpiderGC.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/CacheWolf/SpiderGC.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -1342,7 +1342,7 @@
 				}else {
 					CacheHolder cx=cacheDB.get(idx);
 					if (cx.is_Checked && // Only re-spider existing addi waypoints that are ticked
-				 	   !cx.is_filtered()) { // and are visible (i.e.  not filtered)
+				 	   cx.isVisible()) { // and are visible (i.e.  not filtered)
 					   cx.initStates(false);
 					   cx.update(hd);
 					   cx.is_Checked=true;

Modified: trunk/src/CacheWolf/StatusBar.java
===================================================================
--- trunk/src/CacheWolf/StatusBar.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/CacheWolf/StatusBar.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -47,7 +47,7 @@
 		disp.setToolTip(MyLocale.getMsg(196,"Total # of caches (GC&OC)\nTotal # visible\nTotal # found"));
 		addLast(lblCenter=new mLabel(""),CellConstants.STRETCH, WEST|CellConstants.FILL);
 		lblCenter.setToolTip(MyLocale.getMsg(195,"Current centre"));
-		updateDisplay();
+//		updateDisplay();
 	}
 	
 	public void updateDisplay(){

Modified: trunk/src/CacheWolf/myTableControl.java
===================================================================
--- trunk/src/CacheWolf/myTableControl.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/CacheWolf/myTableControl.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -141,19 +141,19 @@
 			Vm.showWait(true);
 			// Count # of caches to delete
 			int allCount=0;
-			int mainFilteredCount=0;
-			int addiFilteredCount=0;
+			int mainNonVisibleCount=0;
+			int addiNonVisibleCount=0;
 			int shouldDeleteCount=0;
 			boolean deleteFiltered=true;  // Bisheriges Verhalten
 			for(int i = cacheDB.size()-1; i >=0; i--){
 				CacheHolder currCache = cacheDB.get(i);
 				if ( currCache.is_Checked) {
 					allCount++;
-					if (currCache.is_filtered()) {
+					if (! currCache.isVisible()) {
 						if (currCache.isAddiWpt()) {
-							addiFilteredCount++;
+							addiNonVisibleCount++;
 						} else {
-							mainFilteredCount++;
+							mainNonVisibleCount++;
 						}
 					}
 				}
@@ -161,16 +161,16 @@
 			// Warn if there are ticked but invisible caches - and ask if they should be deleted,
 			// too.
 			shouldDeleteCount = allCount;
-			if (addiFilteredCount + mainFilteredCount > 0){
+			if (addiNonVisibleCount + mainNonVisibleCount > 0){
 				if ((new MessageBox(MyLocale.getMsg(144,"Warning"),
 						            MyLocale.getMsg(1029, "There are caches that are ticked but invisible.\n(Main caches: ") + 
-						            	mainFilteredCount + MyLocale.getMsg(1030, ", additional Waypoints: ") + 
-						            	addiFilteredCount+")\n" + MyLocale.getMsg(1031, "Delete them, too?"), 
+						            	mainNonVisibleCount + MyLocale.getMsg(1030, ", additional Waypoints: ") + 
+						            	addiNonVisibleCount+")\n" + MyLocale.getMsg(1031, "Delete them, too?"), 
 						            	FormBase.YESB | FormBase.NOB)).execute() == FormBase.IDYES) {
 					deleteFiltered = true;
 				} else {
 					deleteFiltered = false;
-					shouldDeleteCount = allCount - mainFilteredCount - addiFilteredCount;
+					shouldDeleteCount = allCount - mainNonVisibleCount - addiNonVisibleCount;
 				}
 			}
 			if (shouldDeleteCount>0) {
@@ -184,7 +184,7 @@
 					int size=cacheDB.size();
 					for(int i = size-1; i >=0; i--){// Start Counting down, as the size decreases with each deleted cache
 						ch = cacheDB.get(i);
-						if(ch.is_Checked && (!ch.is_filtered() || deleteFiltered)) {
+						if(ch.is_Checked && (ch.isVisible() || deleteFiltered)) {
 							nDeleted++;
 							h.progress = ((float)nDeleted)/(float)allCount;
 							h.changed();

Modified: trunk/src/CacheWolf/myTableModel.java
===================================================================
--- trunk/src/CacheWolf/myTableModel.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/CacheWolf/myTableModel.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -86,7 +86,7 @@
 		picSizeReg=new mImage("sizeReg.png"); picSizeReg.transparentColor=Color.White;
 		picSizeLarge=new mImage("sizeLarge.png"); picSizeLarge.transparentColor=Color.White;
 		picSizeVLarge=new mImage("sizeVLarge.png"); picSizeVLarge.transparentColor=Color.White;
-		updateRows();
+//		updateRows();
 	}
 	
 	/**
@@ -125,7 +125,7 @@
 	}
 	public void updateRows(){
 		Vector sortDB = new Vector();
-		Vector filteredDB = new Vector();
+		Vector notVisibleDB = new Vector();
 		CacheHolder ch, addiWpt;
 		// sort cacheDB:
 		// - addi wpts are listet behind the main cache
@@ -133,13 +133,13 @@
 		int size=cacheDB.size();
 		for (int i=0; i<size; i++){
 			ch = cacheDB.get(i);
-			if (ch.is_filtered()) {
-				filteredDB.add(ch);
+			if (!ch.isVisible()) {
+				notVisibleDB.add(ch);
 			} else { // point is not filtered
 				if (ch.isAddiWpt()){ // unfiltered Addi Wpt
 					// check if main wpt is filtered
 					if(ch.mainCache != null) { // parent exists
-						if (ch.mainCache.is_filtered()) 
+						if (! ch.mainCache.isVisible()) 
 							sortDB.add(ch); // Unfiltered Addi Wpt with filtered Main Wpt, show it on its own
 						// else Main cache is not filtered, Addi will be added below main cache further down
 					} else { //Addi without main Cache
@@ -150,14 +150,14 @@
 					if (ch.hasAddiWpt()){
 						for (int j=0; j<ch.addiWpts.getCount();j++){
 							addiWpt = (CacheHolder)ch.addiWpts.get(j);
-							if (!addiWpt.is_filtered()) sortDB.add(addiWpt);
+							if (addiWpt.isVisible()) sortDB.add(addiWpt);
 						}
 					}// if hasAddiWpt
 				} // if AddiWpt
 			} // if filtered
 		}
 		// rebuild database
-		cacheDB.rebuild(sortDB, filteredDB);
+		cacheDB.rebuild(sortDB, notVisibleDB);
 		this.numRows = sortDB.getCount();
 	}
 	
@@ -270,7 +270,7 @@
 		if(row == -1) return colName[colMap[col]];
 		try { // Access to row can fail if many caches are deleted
 			CacheHolder ch = cacheDB.get(row);
-			if(ch.is_filtered() == false){
+			if(ch!=null /*ch.isVisible()*/){ // Check of visibility needed here??
 				switch(colMap[col]) { // Faster than using column names
 					case 0: // Checkbox
 						if (ch.is_Checked) 
@@ -424,7 +424,7 @@
 				for (int i=0;i<addiCount;i++){
 					addiWpt = (CacheHolder)ch.addiWpts.get(i);
 					addiWpt.is_Checked = ch.is_Checked;
-					if (!addiWpt.is_filtered()){
+					if (addiWpt.isVisible()){
 						tcControl.repaintCell(cacheDB.getIndex(addiWpt), x);
 					}
 				}

Modified: trunk/src/CacheWolf/navi/MovingMap.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMap.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/CacheWolf/navi/MovingMap.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -379,7 +379,7 @@
 			CacheHolder ch;
 			for (int i=cacheDB.size()-1; i>=0; i--) {
 				ch = cacheDB.get(i);
-				if (ch.is_Checked && !ch.is_filtered() && ch != mainT.ch) {
+				if (ch.is_Checked && ch.isVisible() && ch != mainT.ch) {
 					if (ch.pos.isValid()) addSymbol(ch.getCacheName(), ch, CacheType.cache2Img(ch.getType()), ch.pos);
 				}
 			}

Modified: trunk/src/exp/ExploristExporter.java
===================================================================
--- trunk/src/exp/ExploristExporter.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/exp/ExploristExporter.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -127,9 +127,7 @@
 		int counter = 0;
 		int expCount = 0;
 		for (int i = 0; i < cacheDB.size(); i++) {
-			ch = cacheDB.get(i);
-			if (ch.is_black() == false && ch.is_filtered() == false)
-				counter++;
+			if (cacheDB.get(i).isVisible()) counter++;
 		}
 
 		try {
@@ -139,7 +137,7 @@
 										/ 200 + ".gs"))));
 			for (int i = 0; i < cacheDB.size(); i++) {
 				ch = cacheDB.get(i);
-				if (ch.is_black() == false && ch.is_filtered() == false) {
+				if (ch.isVisible()) {
 					// all 200 caches we need a new file
 					if (expCount % 200 == 0 && expCount > 0) {
 						outp.close();

Modified: trunk/src/exp/Exporter.java
===================================================================
--- trunk/src/exp/Exporter.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/exp/Exporter.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -92,8 +92,7 @@
 		int counter = 0;
 		int expCount = 0;
 		for(int i = 0; i<cacheDB.size();i++){
-			ch = cacheDB.get(i);
-			if(ch.is_black() == false && ch.is_filtered() == false) counter++;
+			if(cacheDB.get(i).isVisible()) counter++;
 		}
 
 		try{
@@ -102,7 +101,7 @@
 			if (str != null) outp.print(str);
 			for(int i = 0; i<cacheDB.size(); i++){
 				ch=cacheDB.get(i);
-				if(ch.is_black() == false && ch.is_filtered() == false){
+				if(ch.isVisible()){
 					expCount++;
 					h.progress = (float)expCount/(float)counter;
 					h.changed();

Modified: trunk/src/exp/HTMLExporter.java
===================================================================
--- trunk/src/exp/HTMLExporter.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/exp/HTMLExporter.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -69,8 +69,7 @@
 			//Generate index page
 			int counter = 0;
 			for(int i = 0; i<cacheDB.size();i++){
-				ch = cacheDB.get(i);
-				if(ch.is_black() == false && ch.is_filtered() == false) counter++;
+				if(cacheDB.get(i).isVisible()) counter++;
 			}
 			
 			pbf.showMainTask = false;
@@ -82,7 +81,7 @@
 				h.changed();
 
 				ch = cacheDB.get(i);
-				if(	ch.is_black() == false && ch.is_filtered() == false){
+				if(	ch.isVisible()){
 					det=ch.getExistingDetails();
 					varParams = new Hashtable();
 					varParams.put("TYPE", CacheType.transType(ch.getType()));

Modified: trunk/src/exp/KMLExporter.java
===================================================================
--- trunk/src/exp/KMLExporter.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/exp/KMLExporter.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -75,8 +75,7 @@
 		int counter = 0;
 		int expCount = 0;
 		for(int i = 0; i<cacheDB.size();i++){
-			ch = cacheDB.get(i);
-			if(ch.is_black() == false && ch.is_filtered() == false) counter++;
+			if (cacheDB.get(i).isVisible()) counter++;
 		}
 		copyIcons(outFile.getParent());
 		buildOutDB();
@@ -118,7 +117,7 @@
 							for(int j = 0; j<ch.addiWpts.size(); j++){
 								addiWpt = (CacheHolder) ch.addiWpts.get(j);
 								expCount++;
-								if (ch.pos.isValid() &&  ! addiWpt.is_filtered()){
+								if (ch.pos.isValid() &&  addiWpt.isVisible()){
 									if (! createdAdditionalWaypointsFolder) {
 										outp.print(startFolder("Additional Waypoints", false));
 										createdAdditionalWaypointsFolder = true;
@@ -170,7 +169,7 @@
 		for(int i = 0; i<cacheDB.size(); i++){
 			ch=cacheDB.get(i);
 			// TODO Das Argument nach STring zu casten gef?llt mir nicht ganz...
-			if(ch.is_black() == false && ch.is_filtered() == false && !ch.isAddiWpt()){
+			if(ch.isVisible() && !ch.isAddiWpt()){
 				if (ch.is_found()) { tmp = (Vector) outCacheDB[FOUND].get(String.valueOf(ch.getType()));}
 				else if (ch.is_owned()) { tmp = (Vector) outCacheDB[OWNED].get(String.valueOf(ch.getType()));}
 				else if (ch.is_archived() || !ch.is_available()){ tmp = (Vector) outCacheDB[NOT_AVAILABLE].get(String.valueOf(ch.getType()));}

Modified: trunk/src/exp/TPLExporter.java
===================================================================
--- trunk/src/exp/TPLExporter.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/exp/TPLExporter.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -159,7 +159,7 @@
 		int counter = 0;
 		for(int i = 0; i<cacheDB.size();i++){
 			ch = cacheDB.get(i);
-			if(ch.is_black() == false && ch.is_filtered() == false) counter++;
+			if(cacheDB.get(i).isVisible() == false) counter++;
 		}
 		pbf.showMainTask = false;
 		pbf.setTask(h,"Exporting ...");
@@ -187,7 +187,7 @@
 				det = ch.getExistingDetails();
 				h.progress = (float)i/(float)counter;
 				h.changed();
-				if(ch.is_black() == false && ch.is_filtered() == false){
+				if(ch.isVisible()){
 					if (ch.pos.isValid() == false) continue;
 					try {
 						Regex dec = new Regex("[,.]",myFilter.decSep);

Modified: trunk/src/exp/TomTomExporter.java
===================================================================
--- trunk/src/exp/TomTomExporter.java	2009-05-09 07:28:59 UTC (rev 1788)
+++ trunk/src/exp/TomTomExporter.java	2009-05-09 08:37:53 UTC (rev 1789)
@@ -79,8 +79,7 @@
 		currExp = 0;
 		counter = 0;
 		for(int i = 0; i<cacheDB.size();i++){
-			holder = cacheDB.get(i);
-			if(holder.is_black() == false && holder.is_filtered() == false) counter++;
+			if(cacheDB.get(i).isVisible()) counter++;
 		}
 		
 		ext = format==TT_ASC?".asc":".ov2";
@@ -93,7 +92,7 @@
 				out =  new RandomAccessFile(fileName,"rw");
 				for(int i = 0; i<cacheDB.size(); i++){
 					holder=cacheDB.get(i);
-					if(holder.getType() == new Integer(CacheType.wayType[j][TT_WPT_NUM]).intValue() && holder.is_black() == false && holder.is_filtered() == false){
+					if(holder.getType() == new Integer(CacheType.wayType[j][TT_WPT_NUM]).intValue() && holder.isVisible() == false){
 						currExp++;
 						h.progress = (float)currExp/(float)counter;
 						h.changed();
@@ -137,8 +136,7 @@
 		int counter = 0;
 		int expCount = 0;
 		for(int i = 0; i<cacheDB.size();i++){
-			holder = cacheDB.get(i);
-			if(holder.is_black() == false && holder.is_filtered() == false) counter++;
+			if(cacheDB.get(i).isVisible()) counter++;
 		}
 
 		try{
@@ -147,7 +145,7 @@
 			out =  new RandomAccessFile(fileName,"rw");
 			for(int i = 0; i<cacheDB.size(); i++){
 				holder=cacheDB.get(i);
-				if(holder.is_black() == false && holder.is_filtered() == false){
+				if(holder.isVisible()){
 					expCount++;
 					h.progress = (float)expCount/(float)counter;
 					h.changed();



From engywuck at mail.berlios.de  Sat May  9 12:39:08 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Sat, 9 May 2009 12:39:08 +0200
Subject: [Cachewolf-svn] r1790 - trunk/src/CacheWolf
Message-ID: <200905091039.n49Ad85p012109@sheep.berlios.de>

Author: engywuck
Date: 2009-05-09 12:39:00 +0200 (Sat, 09 May 2009)
New Revision: 1790

Modified:
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/CacheType.java
   trunk/src/CacheWolf/RadarPanel.java
Log:
Fixing typo with WHERIGO-Type;
Code centralisation based on Greiol's suggestions. 

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-09 08:37:53 UTC (rev 1789)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-09 10:39:00 UTC (rev 1790)
@@ -1170,20 +1170,12 @@
     }
 
 	/**
-	 * Gets the type of cache as integer. Internally it is saved as byte, so some conversion has
-	 * to be done as not every integer value which is (historically) attributed to the cache types
-	 * fits in the byte value range.
+	 * Gets the type of cache as integer.
 	 * @return Cache type
 	 */
 	public int getType() {
-		int result;
-		switch (type) {
-		case 100: result = 1848; break;
-		case 101: result = 453; break;
-		default: result = type + 128;
+		return CacheType.toInt(type);
     }
-    	return result;
-    }
 
 	/**
 	 * Sets the type of the cache. As the cache type values are int for the rest of CacheWolf
@@ -1191,12 +1183,7 @@
 	 * @param type Cache Type
 	 */
 	public void setType(int type) {
-		byte newType;
-		switch (type) {
-		case 1848: newType = 100; break;
-		case 453: newType = 101; break;
-		default: newType = (byte)(type - 128);
-    }
+		byte newType = CacheType.toByte(type);
 		Global.getProfile().notifyUnsavedChanges(newType != this.type);		
     	this.type = newType;
     }

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-05-09 08:37:53 UTC (rev 1789)
+++ trunk/src/CacheWolf/CacheType.java	2009-05-09 10:39:00 UTC (rev 1790)
@@ -29,8 +29,9 @@
 */
 
 public class CacheType {
-	public static Image cacheImages[] = new Image[454]; // Images are used by TableControl
-	public static int WHERIGO=200; // The cache we mapped the wherigo to
+	private static Image cacheImages[] = new Image[454]; // Images are used by TableControl
+	public static final int WHERIGO=100; // The cache we mapped the wherigo to
+	public static final int MEGA_EVENT=101; // Mapping for Mega Event 
 	static {
 		cacheImages[0] = new Image("0.png");
 		//cacheImages[1] = new Image();
@@ -58,7 +59,7 @@
 		cacheImages[110] = new Image("110.png");
 		cacheImages[137] = new Image("137.png");
 		cacheImages[WHERIGO] = new Image("1858.png");  // Fudge as whereigo is really 1858
-		cacheImages[453] = new Image("453.png");
+		cacheImages[MEGA_EVENT] = new Image("453.png");
 	}
 
 	//Types from gc.com
@@ -304,10 +305,44 @@
 
 		
 	public static Image cache2Img(int cacheType) {
-		if (cacheType==1858)
-			return cacheImages[WHERIGO];
-		else	
-			return cacheImages[cacheType]; 
+		int index = cacheType;
+		switch (cacheType) {
+			case 1858: index =  WHERIGO; break;
+			case 453:  index =  MEGA_EVENT; break;
+		}
+		return cacheImages[index];
 	}
+	
+	/**
+	 * Packs the cache type into the range of a byte. For the int values which don't fit in the 
+	 * byte range, some conversion has to be done.
+	 * @param cacheType Cache Type as integer
+	 * @return A corresponding byte value. 
+	 */
+	public static byte toByte(int cacheType) {
+		int result = cacheType-128;
+		switch (cacheType) {
+			case 1858: result =  WHERIGO; break;
+			case 453:  result =  MEGA_EVENT; break;
+			default: result = cacheType-128;
+		}
+		return (byte)(result);
+	}
+	
+	/**
+	 * Unpacks the cache type from byte to int. 
+	 * @param cacheType Cache type as byte
+	 * @return The cache type as int
+	 */
+	public static int toInt(byte cacheType) {
+		int result;
+		switch (cacheType) {
+		case WHERIGO:     result =  1858; break;
+		case MEGA_EVENT:  result =  453; break;
+		default: result = cacheType+128;
+		}
+		return result;
+	}
+	
 
 }

Modified: trunk/src/CacheWolf/RadarPanel.java
===================================================================
--- trunk/src/CacheWolf/RadarPanel.java	2009-05-09 08:37:53 UTC (rev 1789)
+++ trunk/src/CacheWolf/RadarPanel.java	2009-05-09 10:39:00 UTC (rev 1790)
@@ -134,7 +134,7 @@
 					}
 					Image imgCache=CacheType.cache2Img(holder.getType());
 					// If we have no image for the cache type use a question mark
-					if (imgCache==null) imgCache=CacheType.cacheImages[8]; 
+					if (imgCache==null) imgCache=CacheType.cache2Img(8); 
 					rpi = new RadarPanelImage(imgCache);
 					rpi.wayPoint = holder.getWayPoint();
 					rpi.rownum = i;



From engywuck at mail.berlios.de  Sat May  9 12:47:00 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Sat, 9 May 2009 12:47:00 +0200
Subject: [Cachewolf-svn] r1791 - trunk/src/CacheWolf
Message-ID: <200905091047.n49Al0Ue019138@sheep.berlios.de>

Author: engywuck
Date: 2009-05-09 12:46:58 +0200 (Sat, 09 May 2009)
New Revision: 1791

Modified:
   trunk/src/CacheWolf/CacheType.java
Log:
Image Array was unnecessarily big.

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-05-09 10:39:00 UTC (rev 1790)
+++ trunk/src/CacheWolf/CacheType.java	2009-05-09 10:46:58 UTC (rev 1791)
@@ -29,7 +29,7 @@
 */
 
 public class CacheType {
-	private static Image cacheImages[] = new Image[454]; // Images are used by TableControl
+	private static Image cacheImages[] = new Image[138]; // Images are used by TableControl
 	public static final int WHERIGO=100; // The cache we mapped the wherigo to
 	public static final int MEGA_EVENT=101; // Mapping for Mega Event 
 	static {



From salzkammergut at mail.berlios.de  Sat May  9 17:09:49 2009
From: salzkammergut at mail.berlios.de (salzkammergut at mail.berlios.de)
Date: Sat, 9 May 2009 17:09:49 +0200
Subject: [Cachewolf-svn] r1792 - trunk/src/CacheWolf
Message-ID: <200905091509.n49F9nCs017269@sheep.berlios.de>

Author: salzkammergut
Date: 2009-05-09 17:09:47 +0200 (Sat, 09 May 2009)
New Revision: 1792

Modified:
   trunk/src/CacheWolf/myInteractivePanel.java
Log:
Bugfix: Dragging Caches from radarpanel into cachetour caused a nullpointer exception

Modified: trunk/src/CacheWolf/myInteractivePanel.java
===================================================================
--- trunk/src/CacheWolf/myInteractivePanel.java	2009-05-09 10:46:58 UTC (rev 1791)
+++ trunk/src/CacheWolf/myInteractivePanel.java	2009-05-09 15:09:47 UTC (rev 1792)
@@ -12,7 +12,7 @@
 public class myInteractivePanel extends InteractivePanel{
 
 	MainTab mt;
-	
+
 	boolean penMoving = false;
 	int x1,y1,x2,y2 = 0;
 	static Color RED = new Color(255,0,0);
@@ -28,29 +28,29 @@
 		font = new Font("gui", Font.BOLD,Global.getPref().fontSize);
 		fm = getFontMetrics(font);
 	}
-	
+
 	private void clearInfo() {
 		removeImage(imgInfo);
 		imgInfo=null;
 		refresh();
 		onImage=null;
 	}
-	
+
 	public void imageClicked(AniImage which, Point pos){
 		long timePenOff=Vm.getTimeStampLong();
 		// If the pen rested more than 500 msec, we only display the info and don't treat it as a click
-		if (timePenOff-timePenOn<500 || !Vm.isMobile()) { 
+		if (timePenOff-timePenOn<500 || !Vm.isMobile()) {
 			new String();
 			if(which instanceof RadarPanelImage){
 				RadarPanelImage ich = (RadarPanelImage)which;
-				Global.mainTab.clearDetails();				
+				Global.mainTab.clearDetails();
 				mt.selectAndActive(ich.rownum);
 			}
 		} else {
-			if (imgInfo!=null) clearInfo(); 
+			if (imgInfo!=null) clearInfo();
 		}
 	}
-	
+
 	public void setMainTab(MainTab tb){
 		mt = tb;
 	}
@@ -60,7 +60,8 @@
 		RadarPanelImage imgRP=(RadarPanelImage) which;
 		CacheDB cacheDB=Global.getProfile().cacheDB;
 		CacheHolder ch=cacheDB.get(imgRP.rownum);
-		String s=ch.getWayPoint()+"  "+ch.getCacheSize()+" / "+strDifficulty+"="+ch.getHard()+"  "+strTerrain+"="+ch.getTerrain();
+		wayPoint=ch.getWayPoint();
+		String s=wayPoint+"  "+ch.getCacheSize()+" / "+strDifficulty+"="+ch.getHard()+"  "+strTerrain+"="+ch.getTerrain();
 		String s1=ch.getCacheName();
 		if (s1.length()>40) s1=s1.substring(0,40);
 		int tw=fm.getTextWidth(s)+2;
@@ -96,16 +97,16 @@
 			if (isDragging) penReleased(new Point(ev.x,ev.y));
 		}
 	}
-	
+
     ///////////////////////////////////////////////////
 	//  Allow the caches to be dragged into a cachelist
     ///////////////////////////////////////////////////
-	
+
 	String wayPoint;
-	
+
 	public void startDragging(DragContext dc) {
 		if (!Global.mainForm.cacheListVisible) return;
-		CacheHolder ch=Global.getProfile().cacheDB.get(wayPoint); 
+		CacheHolder ch=Global.getProfile().cacheDB.get(wayPoint);
 		if (ch != null) {
 			 IconAndText icnDrag=new IconAndText();
 			 icnDrag.addColumn(CacheType.cache2Img(ch.getType()));
@@ -116,7 +117,7 @@
 		}
 	 }
 
-	 public void stopDragging(DragContext dc) {		 
+	 public void stopDragging(DragContext dc) {
 		canScroll=true;
 	 }
 	 public boolean imageBeginDragged(AniImage which,Point pos) {
@@ -130,7 +131,7 @@
 			CacheDB cacheDB=Global.getProfile().cacheDB;
 			CacheHolder ch=cacheDB.get(imgRP.rownum);
 			wayPoint=ch.getWayPoint();
-			
+
 			int tw,th;
 			Image img = new Image(tw=fm.getTextWidth(wayPoint+15),th=fm.getHeight()>15?fm.getHeight():15);
 			Graphics g = new Graphics(img);
@@ -158,13 +159,13 @@
 		 	}
 		 	return super.imageDragged(drag,pos);
 	 }
-	 
+
 	 public boolean imageNotDragged(ImageDragContext drag, Point pos) {
 		if (drag.image!=null) {
 			images.remove(drag.image);
 			drag.image=null;
 			refresh();
-		}			
+		}
 		 Point p = Gui.getPosInParent(this,getWindow());
 		 p.x += drag.curPoint.x-origin.x;
 		 p.y += drag.curPoint.y-origin.y;
@@ -175,9 +176,9 @@
 	    		 ((mList) c).makeItemVisible(((mList)c).itemsSize()-1);
 	    	 }
 	     }
-		 return false; 
+		 return false;
 	 }
-	 
+
 	 public boolean canScreenScroll() {
 		 return canScroll;
 	 }



From salzkammergut at mail.berlios.de  Sat May  9 17:25:41 2009
From: salzkammergut at mail.berlios.de (salzkammergut at mail.berlios.de)
Date: Sat, 9 May 2009 17:25:41 +0200
Subject: [Cachewolf-svn] r1793 - trunk/src/exp
Message-ID: <200905091525.n49FPfkE018773@sheep.berlios.de>

Author: salzkammergut
Date: 2009-05-09 17:25:40 +0200 (Sat, 09 May 2009)
New Revision: 1793

Modified:
   trunk/src/exp/LocExporter.java
Log:
Export to Garmin (via .LOC file): Speedup by only loading cache details when necessary

Modified: trunk/src/exp/LocExporter.java
===================================================================
--- trunk/src/exp/LocExporter.java	2009-05-09 15:09:47 UTC (rev 1792)
+++ trunk/src/exp/LocExporter.java	2009-05-09 15:25:40 UTC (rev 1793)
@@ -17,7 +17,7 @@
 	 * Defines how certain cachetypes are mapped to user icons
 	 */
 	private static GarminMap gm=null;
-	
+
 	public LocExporter(){
 		super();
 		this.setMask("*.loc");
@@ -30,21 +30,20 @@
 			gm.readGarminMap();
 		}
 	}
-	
+
 	public String header () {
 		return "<?xml version=\"1.0\"?><loc version=\"1.0\" src=\"EasyGPS\">\r\n";
 	}
-	
+
 	public String record(CacheHolder ch){
-		CacheHolderDetail det = ch.getExistingDetails();
-		
+
 		// filter out not valid coords
 		if (!ch.pos.isValid()) return null;
 		StringBuffer strBuf = new StringBuffer(200);
 		strBuf.append("<waypoint>\r\n   <name id=\"");
 		String wptName=simplifyString(ch.getWayPoint());
 		if (Global.getPref().addDetailsToWaypoint) {
-			wptName += getShortDetails( ch );			
+			wptName += getShortDetails( ch );
 		}
 		if (Global.getPref().garminMaxLen==0)
 			strBuf.append(wptName);
@@ -59,9 +58,10 @@
 			if ( !Global.getPref().addDetailsToWaypoint ) {
 				strBuf.append( getShortDetails( ch ) );
 			}
+			CacheHolderDetail det = ch.getExistingDetails();
 			if ( (!det.Hints.equals("null")) && (det.Hints.length() > 0) ) {
 				strBuf.append(":");
-				strBuf.append( simplifyString(Common.rot13(det.Hints)) );			
+				strBuf.append( simplifyString(Common.rot13(det.Hints)) );
 			}
 		}
 		strBuf.append("]]></name>\r\n   <coord lat=\"");
@@ -83,7 +83,7 @@
 	public String trailer(){
 		return "</loc>\r\n";
 	}
-	
+
 	/**
 	 * This class implements user defined icons which depend on the cache type and the found status.
 	 * See also http://www.geoclub.de/ftopic10413.html
@@ -91,10 +91,10 @@
 	 *
 	 */
 	private class GarminMap extends MinML {
-		
+
 		private IconMap[] symbols=new IconMap[24];
 		private int mapSize=0;
-		
+
 		String lastName;
 		public void readGarminMap(){
 			try{
@@ -105,7 +105,7 @@
 			}catch(Exception e){
 				if (e instanceof NullPointerException)
 					Global.getPref().log("Error reading garminmap.xml: NullPointerException in Element "+lastName +". Wrong attribute?",e,true);
-				else 
+				else
 					Global.getPref().log("Error reading garminmap.xml: ", e);
 			}
 		}
@@ -115,8 +115,8 @@
 				symbols[mapSize]=new IconMap(atts.getValue("type"),atts.getValue("name"),atts.getValue("found"));
 				mapSize++;
 			}
-		}		
-		
+		}
+
 		public String getIcon(CacheHolder ch) {
 			// First check if there is a mapping for "cache found"
 			if (ch.is_found()) {
@@ -127,19 +127,19 @@
 			// Now try mapping the cache irrespective of the "found" status
 			for (int i=0; i<mapSize; i++)
 				if (symbols[i].type.equals(String.valueOf(ch.getType()))) return symbols[i].name;
-		
+
 			// If it is not a mapped type, just use the standard mapping
 			if (ch.is_found())
 				return "Geocache Found";
 			else
 				return "Geocache";
 		}
-		
+
 		private class IconMap {
 			public String type;
 			public String name;
 			public Boolean onlyIfFound;
-			
+
 			IconMap(String type, String name, String onlyIfFound) {
 				this.type=type;
 				this.name=name;
@@ -149,7 +149,7 @@
 					this.onlyIfFound=null;
 			}
 		}
-	
+
 	}
-	
+
 }



From salzkammergut at mail.berlios.de  Sat May  9 18:13:20 2009
From: salzkammergut at mail.berlios.de (salzkammergut at mail.berlios.de)
Date: Sat, 9 May 2009 18:13:20 +0200
Subject: [Cachewolf-svn] r1794 - trunk/src/CacheWolf
Message-ID: <200905091613.n49GDKKj023787@sheep.berlios.de>

Author: salzkammergut
Date: 2009-05-09 18:13:19 +0200 (Sat, 09 May 2009)
New Revision: 1794

Modified:
   trunk/src/CacheWolf/CacheHolder.java
Log:
Bugfix: Filter status is set wrongly when reading index.xml

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-09 15:25:40 UTC (rev 1793)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-09 16:13:19 UTC (rev 1794)
@@ -891,7 +891,7 @@
 	 * @param value The bit field as long value
 	 */
 	private void long2boolFields(long value) {
-		this.setFiltered((value & this.bool2BitMask(true, 1)) != 0);
+		this.setFiltered((value & this.bool2BitMask(true, 1)) == 0);
 		this.setAvailable((value & this.bool2BitMask(true, 2)) != 0);
 		this.setArchived((value & this.bool2BitMask(true, 3)) != 0);
 		this.setHas_bugs((value & this.bool2BitMask(true, 4)) != 0);



From greiol at mail.berlios.de  Mon May 11 18:17:11 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Mon, 11 May 2009 18:17:11 +0200
Subject: [Cachewolf-svn] r1795 - trunk/src/CacheWolf
Message-ID: <200905111617.n4BGHB2H021338@sheep.berlios.de>

Author: greiol
Date: 2009-05-11 18:17:09 +0200 (Mon, 11 May 2009)
New Revision: 1795

Added:
   trunk/src/CacheWolf/CacheSize.java
Log:
added class CacheSize

Added: trunk/src/CacheWolf/CacheSize.java
===================================================================
--- trunk/src/CacheWolf/CacheSize.java	2009-05-09 16:13:19 UTC (rev 1794)
+++ trunk/src/CacheWolf/CacheSize.java	2009-05-11 16:17:09 UTC (rev 1795)
@@ -0,0 +1,239 @@
+package CacheWolf;
+
+public class CacheSize {
+
+	/*
+	 * internal representation of cache sizes in CacheHolder we just made them
+	 * up ;-)
+	 */
+	static final protected byte CW_SIZE_MICRO = 0;
+	static final protected byte CW_SIZE_SMALL = 1;
+	static final protected byte CW_SIZE_REGULAR = 2;
+	static final protected byte CW_SIZE_LARGE = 3;
+	static final protected byte CW_SIZE_NOTCHOSEN = 4;
+	static final protected byte CW_SIZE_OTHER = 5;
+	static final protected byte CW_SIZE_VIRTUAL = 6;
+	static final protected byte CW_SIZE_VERYLARGE = 7;
+	static final protected byte CW_SIZE_NONE = 8;
+
+	/*
+	 * geocaching.com size string as found by analyzing GPX files
+	 */
+	static final protected String GC_SIZE_MICRO = "Micro";
+	static final protected String GC_SIZE_SMALL = "Small";
+	static final protected String GC_SIZE_REGULAR = "Regular";
+	static final protected String GC_SIZE_LARGE = "Large";
+	static final protected String GC_SIZE_NOTCHOSEN = "Not chosen";
+	static final protected String GC_SIZE_OTHER = "Other";
+	static final protected String GC_SIZE_VIRTUAL = "Virtual";
+
+	/*
+	 * OpenCaching Size IDs
+	 * http://oc-server.svn.sourceforge.net/viewvc/oc-server
+	 * /doc/sql/static-data/data.sql?view=markup
+	 */
+	static final protected String OC_SIZE_OTHER = "1";
+	static final protected String OC_SIZE_MICRO = "2";
+	static final protected String OC_SIZE_SMALL = "3";
+	static final protected String OC_SIZE_NORMAL = "4";
+	static final protected String OC_SIZE_LARGE = "5";
+	static final protected String OC_SIZE_VERYLARGE = "6";
+	static final protected String OC_SIZE_NONE = "7";
+
+	/*
+	 * images to show in CW index panel we use less images than sizes since all
+	 * non physical caches are represented by the same symbol
+	 */
+	static final protected String CW_GUIIMG_MICRO = "sizeMicro.png";
+	static final protected String CW_GUIIMG_SMALL = "sizeSmall.png";
+	static final protected String CW_GUIIMG_NORMAL = "sizeReg.png";
+	static final protected String CW_GUIIMG_LARGE = "sizeLarge.png";
+	static final protected String CW_GUIIMG_NONPHYSICAL = ""; //TODO: create image for nonphysical caches
+	static final protected String CW_GUIIMG_VERYLARGE = "sizeVLarge.png";
+	
+	/*
+	 * images to use in exports (notably HTML export)
+	 */
+	
+	// TODO: seems we do not add images to HTML export yet, so add dummy images just in case
+	// TODO: add dummy.png to resources
+	static final protected String CW_EXPIMG_MICRO = "dummy.png";
+	static final protected String CW_EXPIMG_SMALL = "dummy.png";
+	static final protected String CW_EXPIMG_NORMAL = "dummy.png";
+	static final protected String CW_EXPIMG_LARGE = "dummy.png";
+	static final protected String CW_EXPIMG_VIRTUAL = "dummy.png";
+	static final protected String CW_EXPIMG_NOTCHOSEN = "dummy.png";
+	static final protected String CW_EXPIMG_OTHER = "dummy.png";
+	static final protected String CW_EXPIMG_VERYLARGE = "dummy.png";
+	static final protected String CW_EXPIMG_NONE = "dummy.png";
+	
+	/**
+	 * the constructor does nothing
+	 */
+	public CacheSize() {
+		// do nothing
+	}
+
+	/**
+	 * convert the size info from a CacheHolder to a string suitable for GPX export
+	 * 
+	 * @param cwsize
+	 *            CW internal representation of cache size
+	 * @return string representation of CacheWolf internal cache size
+	 * @throws IllegalArgumentException
+	 *             if cwsize can not be mapped to a CW_SIZE constant
+	 */
+	public String cw2GcString(byte cwsize) {
+		switch (cwsize) {
+		case CW_SIZE_MICRO:
+			return GC_SIZE_MICRO;
+		case CW_SIZE_SMALL:
+			return GC_SIZE_SMALL;
+		case CW_SIZE_REGULAR:
+			return GC_SIZE_REGULAR;
+		case CW_SIZE_LARGE:
+			return GC_SIZE_LARGE;
+		case CW_SIZE_NOTCHOSEN:
+			return GC_SIZE_NOTCHOSEN;
+		case CW_SIZE_OTHER:
+			return GC_SIZE_OTHER;
+		case CW_SIZE_VIRTUAL:
+			return GC_SIZE_VIRTUAL;
+		default:
+			throw (new IllegalArgumentException());
+		}
+	}
+
+	/**
+	 * convert the cache size information from a GPX import to internal
+	 * representation
+	 * 
+	 * @param gcstring
+	 *            size information extracted from a GPX inport
+	 * @return CacheWolf internal representation of size information
+	 * @throws IllegalArgumentException
+	 *             if gcstring can not be mapped to internal representation (CW_SIZE_*)
+	 */
+
+	public byte gcGpxString2Cw(String gcstring) {
+		if (gcstring.equals(GC_SIZE_MICRO)) {
+			return CW_SIZE_MICRO;
+		} else if (gcstring.equals(GC_SIZE_SMALL)) {
+			return CW_SIZE_SMALL;
+		} else if (gcstring.equals(GC_SIZE_REGULAR)) {
+			return CW_SIZE_REGULAR;
+		} else if (gcstring.equals(GC_SIZE_LARGE)) {
+			return CW_SIZE_LARGE;
+		} else if (gcstring.equals(GC_SIZE_NOTCHOSEN)) {
+			return CW_SIZE_NOTCHOSEN;
+		} else if (gcstring.equals(GC_SIZE_OTHER)) {
+			return CW_SIZE_OTHER;
+		} else if (gcstring.equals(GC_SIZE_VIRTUAL)) {
+			return CW_SIZE_VIRTUAL;
+		} else {
+			throw (new IllegalArgumentException());
+		}
+	}
+
+	/**
+	 * convert the cache size information from GCSpider to internal representation
+	 * for CacheHolder
+	 * 
+	 * @param spiderstring
+	 *            string identified by the spider as containing size iformation
+	 * @return CacheWolf internal representation of size information
+	 * @throws IllegalArgumentException
+	 *             if spiderstring can not be mapped to internal representation (CW_SIZE_*)
+	 */
+	public byte gcSpiderString2Cw(String spiderstring) {
+		// at the moment both sources use the same strings
+		return gcGpxString2Cw(spiderstring);
+	}
+
+	/**
+	 * map information from an Opencaching XML cache description suitable for
+	 * CacheHolder
+	 * 
+	 * @param ocxmlstring
+	 *            string extracted from OC-XML attribute size
+	 * @return CacheWolf internal representation of size information
+	 * @trows IllegalArgumentException if ocxmlstring can not be mapped to a CW_SIZE_*
+	 */
+	public byte ocXmlString2Cw(String ocxmlstring) {
+		if (ocxmlstring.equals(OC_SIZE_OTHER)) {
+			return CW_SIZE_OTHER;
+		} else if (ocxmlstring.equals(OC_SIZE_MICRO)) {
+			return CW_SIZE_MICRO;
+		} else if (ocxmlstring.equals(OC_SIZE_SMALL)) {
+			return CW_SIZE_SMALL;
+		} else if (ocxmlstring.equals(OC_SIZE_NORMAL)) {
+			return CW_SIZE_REGULAR;
+		} else if (ocxmlstring.equals(OC_SIZE_LARGE)) {
+			return CW_SIZE_LARGE;
+		} else if (ocxmlstring.equals(OC_SIZE_VERYLARGE)) {
+			return CW_SIZE_VERYLARGE;
+		} else if (ocxmlstring.equals(OC_SIZE_NONE)) {
+			return CW_SIZE_NOTCHOSEN;
+		} else {
+			throw (new IllegalArgumentException());
+		}
+	}
+
+	/**
+	 * get name of the image to be displayed in CW index panel
+	 * @param size
+	 * @return
+	 * @throws IllegalArgumentException
+	 *             if size can not be mapped
+	 */
+	public String guiSizeImage(byte size) {
+		switch (size) {
+		case CW_SIZE_MICRO:
+			return CW_GUIIMG_MICRO;
+		case CW_SIZE_SMALL:
+			return CW_GUIIMG_SMALL;
+		case CW_SIZE_REGULAR:
+			return CW_GUIIMG_NORMAL;
+		case CW_SIZE_LARGE:
+			return CW_GUIIMG_LARGE;
+		case CW_SIZE_NOTCHOSEN:
+			return CW_GUIIMG_NONPHYSICAL;
+		case CW_SIZE_OTHER:
+			return CW_GUIIMG_NONPHYSICAL;
+		case CW_SIZE_VIRTUAL:
+			return CW_GUIIMG_NONPHYSICAL;
+		case CW_SIZE_VERYLARGE:
+			return CW_GUIIMG_VERYLARGE;
+		case CW_SIZE_NONE:
+			return CW_GUIIMG_NONPHYSICAL;
+		default:
+			throw (new IllegalArgumentException());
+		}
+	}
+	
+	public String exportSizeImage(byte size) {
+		switch (size) {
+		case CW_SIZE_MICRO:
+			return CW_EXPIMG_MICRO;
+		case CW_SIZE_SMALL:
+			return CW_EXPIMG_SMALL;
+		case CW_SIZE_REGULAR:
+			return CW_EXPIMG_NORMAL;
+		case CW_SIZE_LARGE:
+			return CW_EXPIMG_LARGE;
+		case CW_SIZE_NOTCHOSEN:
+			return CW_EXPIMG_NOTCHOSEN;
+		case CW_SIZE_OTHER:
+			return CW_EXPIMG_OTHER;
+		case CW_SIZE_VIRTUAL:
+			return CW_EXPIMG_VIRTUAL;
+		case CW_SIZE_VERYLARGE:
+			return CW_EXPIMG_VERYLARGE;
+		case CW_SIZE_NONE:
+			return CW_EXPIMG_NONE;
+		default:
+			throw (new IllegalArgumentException());
+		}
+	}
+
+}



From greiol at mail.berlios.de  Mon May 11 20:57:12 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Mon, 11 May 2009 20:57:12 +0200
Subject: [Cachewolf-svn] r1796 - trunk/src/CacheWolf
Message-ID: <200905111857.n4BIvCum018236@sheep.berlios.de>

Author: greiol
Date: 2009-05-11 20:57:11 +0200 (Mon, 11 May 2009)
New Revision: 1796

Modified:
   trunk/src/CacheWolf/CacheSize.java
Log:
incorporated some improvements from forum discussion

Modified: trunk/src/CacheWolf/CacheSize.java
===================================================================
--- trunk/src/CacheWolf/CacheSize.java	2009-05-11 16:17:09 UTC (rev 1795)
+++ trunk/src/CacheWolf/CacheSize.java	2009-05-11 18:57:11 UTC (rev 1796)
@@ -1,20 +1,20 @@
 package CacheWolf;
 
-public class CacheSize {
+public final class CacheSize {
 
 	/*
-	 * internal representation of cache sizes in CacheHolder we just made them
-	 * up ;-)
+	 * internal representation of cache sizes in CacheHolder 
+	 * we just made them up ;-)
 	 */
-	static final protected byte CW_SIZE_MICRO = 0;
-	static final protected byte CW_SIZE_SMALL = 1;
-	static final protected byte CW_SIZE_REGULAR = 2;
-	static final protected byte CW_SIZE_LARGE = 3;
-	static final protected byte CW_SIZE_NOTCHOSEN = 4;
-	static final protected byte CW_SIZE_OTHER = 5;
-	static final protected byte CW_SIZE_VIRTUAL = 6;
-	static final protected byte CW_SIZE_VERYLARGE = 7;
-	static final protected byte CW_SIZE_NONE = 8;
+	static final protected byte CW_SIZE_NOTCHOSEN = 0;
+	static final protected byte CW_SIZE_OTHER = 1;
+	static final protected byte CW_SIZE_MICRO = 2;
+	static final protected byte CW_SIZE_SMALL = 3;
+	static final protected byte CW_SIZE_REGULAR = 4;
+	static final protected byte CW_SIZE_LARGE = 5;
+	static final protected byte CW_SIZE_VERYLARGE = 6;
+	static final protected byte CW_SIZE_NONE = 7;
+	static final protected byte CW_SIZE_VIRTUAL = 8;
 
 	/*
 	 * geocaching.com size string as found by analyzing GPX files
@@ -29,8 +29,7 @@
 
 	/*
 	 * OpenCaching Size IDs
-	 * http://oc-server.svn.sourceforge.net/viewvc/oc-server
-	 * /doc/sql/static-data/data.sql?view=markup
+	 * see http://oc-server.svn.sourceforge.net/viewvc/oc-server/doc/sql/static-data/data.sql?view=markup
 	 */
 	static final protected String OC_SIZE_OTHER = "1";
 	static final protected String OC_SIZE_MICRO = "2";
@@ -48,25 +47,24 @@
 	static final protected String CW_GUIIMG_SMALL = "sizeSmall.png";
 	static final protected String CW_GUIIMG_NORMAL = "sizeReg.png";
 	static final protected String CW_GUIIMG_LARGE = "sizeLarge.png";
-	static final protected String CW_GUIIMG_NONPHYSICAL = ""; //TODO: create image for nonphysical caches
+	static final protected String CW_GUIIMG_NONPHYSICAL = ""; // TODO: create image for nonphysical caches
 	static final protected String CW_GUIIMG_VERYLARGE = "sizeVLarge.png";
-	
+
 	/*
 	 * images to use in exports (notably HTML export)
 	 */
-	
-	// TODO: seems we do not add images to HTML export yet, so add dummy images just in case
-	// TODO: add dummy.png to resources
+/*	// do not compile until needed (also see below exportSizeImage())
+	// when needed make sure to add appropriate images to resources
 	static final protected String CW_EXPIMG_MICRO = "dummy.png";
-	static final protected String CW_EXPIMG_SMALL = "dummy.png";
+	static final protected String CW_EXPIMG_SMALL = "dummy.png"; 
 	static final protected String CW_EXPIMG_NORMAL = "dummy.png";
 	static final protected String CW_EXPIMG_LARGE = "dummy.png";
 	static final protected String CW_EXPIMG_VIRTUAL = "dummy.png";
 	static final protected String CW_EXPIMG_NOTCHOSEN = "dummy.png";
 	static final protected String CW_EXPIMG_OTHER = "dummy.png";
 	static final protected String CW_EXPIMG_VERYLARGE = "dummy.png";
-	static final protected String CW_EXPIMG_NONE = "dummy.png";
-	
+	static final protected String CW_EXPIMG_NONE = "dummy.png";*/
+
 	/**
 	 * the constructor does nothing
 	 */
@@ -75,7 +73,8 @@
 	}
 
 	/**
-	 * convert the size info from a CacheHolder to a string suitable for GPX export
+	 * convert the size info from a CacheHolder to a string suitable for GPX
+	 * export
 	 * 
 	 * @param cwsize
 	 *            CW internal representation of cache size
@@ -100,7 +99,8 @@
 		case CW_SIZE_VIRTUAL:
 			return GC_SIZE_VIRTUAL;
 		default:
-			throw (new IllegalArgumentException());
+			throw (new IllegalArgumentException("unmatched argument " + cwsize
+					+ " in CacheSize cw2GcString()"));
 		}
 	}
 
@@ -112,7 +112,8 @@
 	 *            size information extracted from a GPX inport
 	 * @return CacheWolf internal representation of size information
 	 * @throws IllegalArgumentException
-	 *             if gcstring can not be mapped to internal representation (CW_SIZE_*)
+	 *             if gcstring can not be mapped to internal representation
+	 *             (CW_SIZE_*)
 	 */
 
 	public byte gcGpxString2Cw(String gcstring) {
@@ -131,19 +132,21 @@
 		} else if (gcstring.equals(GC_SIZE_VIRTUAL)) {
 			return CW_SIZE_VIRTUAL;
 		} else {
-			throw (new IllegalArgumentException());
+			throw (new IllegalArgumentException("unmatched argument "
+					+ gcstring + " in CacheSize gcGpxString2Cw()"));
 		}
 	}
 
 	/**
-	 * convert the cache size information from GCSpider to internal representation
-	 * for CacheHolder
+	 * convert the cache size information from GCSpider to internal
+	 * representation for CacheHolder
 	 * 
 	 * @param spiderstring
 	 *            string identified by the spider as containing size iformation
 	 * @return CacheWolf internal representation of size information
 	 * @throws IllegalArgumentException
-	 *             if spiderstring can not be mapped to internal representation (CW_SIZE_*)
+	 *             if spiderstring can not be mapped to internal representation
+	 *             (CW_SIZE_*)
 	 */
 	public byte gcSpiderString2Cw(String spiderstring) {
 		// at the moment both sources use the same strings
@@ -157,7 +160,8 @@
 	 * @param ocxmlstring
 	 *            string extracted from OC-XML attribute size
 	 * @return CacheWolf internal representation of size information
-	 * @trows IllegalArgumentException if ocxmlstring can not be mapped to a CW_SIZE_*
+	 * @trows IllegalArgumentException if ocxmlstring can not be mapped to a
+	 *        CW_SIZE_*
 	 */
 	public byte ocXmlString2Cw(String ocxmlstring) {
 		if (ocxmlstring.equals(OC_SIZE_OTHER)) {
@@ -175,12 +179,14 @@
 		} else if (ocxmlstring.equals(OC_SIZE_NONE)) {
 			return CW_SIZE_NOTCHOSEN;
 		} else {
-			throw (new IllegalArgumentException());
+			throw (new IllegalArgumentException("unmatched argument "
+					+ ocxmlstring + " in CacheSize ocXmlString2Cw()"));
 		}
 	}
 
 	/**
 	 * get name of the image to be displayed in CW index panel
+	 * 
 	 * @param size
 	 * @return
 	 * @throws IllegalArgumentException
@@ -207,10 +213,12 @@
 		case CW_SIZE_NONE:
 			return CW_GUIIMG_NONPHYSICAL;
 		default:
-			throw (new IllegalArgumentException());
+			throw (new IllegalArgumentException("unmatched argument " 
+					+ size + " in CacheSize guiSizeImage()"));
 		}
 	}
-	
+
+/*	// do not compile until there is an expoter that can make use of this
 	public String exportSizeImage(byte size) {
 		switch (size) {
 		case CW_SIZE_MICRO:
@@ -232,8 +240,9 @@
 		case CW_SIZE_NONE:
 			return CW_EXPIMG_NONE;
 		default:
-			throw (new IllegalArgumentException());
+			throw (new IllegalArgumentException("unmatched argument " 
+				+ size + " in CacheSize exportSizeImage()"));
 		}
-	}
+	}*/
 
 }



From greiol at mail.berlios.de  Tue May 12 00:12:38 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Tue, 12 May 2009 00:12:38 +0200
Subject: [Cachewolf-svn] r1797 - in trunk: resources src/CacheWolf
Message-ID: <200905112212.n4BMCcGh013112@sheep.berlios.de>

Author: greiol
Date: 2009-05-12 00:12:36 +0200 (Tue, 12 May 2009)
New Revision: 1797

Added:
   trunk/resources/sizeNonPhysical.png
Modified:
   trunk/src/CacheWolf/CacheSize.java
Log:
added string representation for very large
added size image for non physical caches
added terracaching mappings
added bitmasks for filter function
fixed javadoc
changed methods to static
removed unused html export image mappings
added one letter size information for compact exporters


Added: trunk/resources/sizeNonPhysical.png
===================================================================
(Binary files differ)


Property changes on: trunk/resources/sizeNonPhysical.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/src/CacheWolf/CacheSize.java
===================================================================
--- trunk/src/CacheWolf/CacheSize.java	2009-05-11 18:57:11 UTC (rev 1796)
+++ trunk/src/CacheWolf/CacheSize.java	2009-05-11 22:12:36 UTC (rev 1797)
@@ -18,6 +18,7 @@
 
 	/*
 	 * geocaching.com size string as found by analyzing GPX files
+	 * plus OC/TC Very large
 	 */
 	static final protected String GC_SIZE_MICRO = "Micro";
 	static final protected String GC_SIZE_SMALL = "Small";
@@ -26,6 +27,7 @@
 	static final protected String GC_SIZE_NOTCHOSEN = "Not chosen";
 	static final protected String GC_SIZE_OTHER = "Other";
 	static final protected String GC_SIZE_VIRTUAL = "Virtual";
+	static final protected String OCTC_SIZE_VERYLARGE = "Very large";
 
 	/*
 	 * OpenCaching Size IDs
@@ -38,6 +40,16 @@
 	static final protected String OC_SIZE_LARGE = "5";
 	static final protected String OC_SIZE_VERYLARGE = "6";
 	static final protected String OC_SIZE_NONE = "7";
+	
+	/*
+	 * TerraCaching Size IDs
+	 * taken from old GPXimporter (?? reliable source ??)
+	 */
+	static final protected String TC_SIZE_MICRO = "1";
+	static final protected String TC_SIZE_MEDIUM = "2";
+	static final protected String TC_SIZE_REGULAR = "3";
+	static final protected String TC_SIZE_LARGE = "4";
+	static final protected String TC_SIZE_VERYLARGE = "4";
 
 	/*
 	 * images to show in CW index panel we use less images than sizes since all
@@ -47,23 +59,19 @@
 	static final protected String CW_GUIIMG_SMALL = "sizeSmall.png";
 	static final protected String CW_GUIIMG_NORMAL = "sizeReg.png";
 	static final protected String CW_GUIIMG_LARGE = "sizeLarge.png";
-	static final protected String CW_GUIIMG_NONPHYSICAL = ""; // TODO: create image for nonphysical caches
+	static final protected String CW_GUIIMG_NONPHYSICAL = "sizeNonPhysical.png"; 
 	static final protected String CW_GUIIMG_VERYLARGE = "sizeVLarge.png";
-
+	
 	/*
-	 * images to use in exports (notably HTML export)
+	 * bit masks to be used with the filter function
 	 */
-/*	// do not compile until needed (also see below exportSizeImage())
-	// when needed make sure to add appropriate images to resources
-	static final protected String CW_EXPIMG_MICRO = "dummy.png";
-	static final protected String CW_EXPIMG_SMALL = "dummy.png"; 
-	static final protected String CW_EXPIMG_NORMAL = "dummy.png";
-	static final protected String CW_EXPIMG_LARGE = "dummy.png";
-	static final protected String CW_EXPIMG_VIRTUAL = "dummy.png";
-	static final protected String CW_EXPIMG_NOTCHOSEN = "dummy.png";
-	static final protected String CW_EXPIMG_OTHER = "dummy.png";
-	static final protected String CW_EXPIMG_VERYLARGE = "dummy.png";
-	static final protected String CW_EXPIMG_NONE = "dummy.png";*/
+	static final protected byte CW_FILTER_MICRO = 0x01<<0;
+	static final protected byte CW_FILTER_SMALL = 0x01<<1;
+	static final protected byte CW_FILTER_NORMAL = 0x01<<2;
+	static final protected byte CW_FILTER_LARGE = 0x01<<3;
+	static final protected byte CW_FILTER_VERYLARGE = 0x01<<4;
+	static final protected byte CW_FILTER_NONPHYSICAL = 0x01<<5;
+	static final protected byte CW_FILTER_ALL = CW_FILTER_MICRO|CW_FILTER_SMALL|CW_FILTER_NORMAL|CW_FILTER_LARGE|CW_FILTER_NONPHYSICAL|CW_FILTER_VERYLARGE;
 
 	/**
 	 * the constructor does nothing
@@ -76,14 +84,14 @@
 	 * convert the size info from a CacheHolder to a string suitable for GPX
 	 * export
 	 * 
-	 * @param cwsize
+	 * @param size
 	 *            CW internal representation of cache size
 	 * @return string representation of CacheWolf internal cache size
 	 * @throws IllegalArgumentException
 	 *             if cwsize can not be mapped to a CW_SIZE constant
 	 */
-	public String cw2GcString(byte cwsize) {
-		switch (cwsize) {
+	public static String cw2ExportString(byte size) {
+		switch (size) {
 		case CW_SIZE_MICRO:
 			return GC_SIZE_MICRO;
 		case CW_SIZE_SMALL:
@@ -98,16 +106,45 @@
 			return GC_SIZE_OTHER;
 		case CW_SIZE_VIRTUAL:
 			return GC_SIZE_VIRTUAL;
+		case CW_SIZE_VERYLARGE:
+			return OCTC_SIZE_VERYLARGE;
 		default:
-			throw (new IllegalArgumentException("unmatched argument " + cwsize
+			throw (new IllegalArgumentException("unmatched argument " + size
 					+ " in CacheSize cw2GcString()"));
 		}
 	}
 
 	/**
-	 * convert the cache size information from a GPX import to internal
-	 * representation
+	 * convert the cache size information from a TerraCaching GPX import to internal representation
 	 * 
+	 * @param tcstring
+	 *            size information extracted from a TC GPX inport
+	 * @return CacheWolf internal representation of size information
+	 * @throws IllegalArgumentException
+	 *             if tcstring can not be mapped to internal representation
+	 *             (CW_SIZE_*)
+	 */
+
+	public static byte tcGpxString2Cw(String tcstring) {
+		if (tcstring.equals(TC_SIZE_MICRO)) {
+			return CW_SIZE_MICRO;
+		} else if (tcstring.equals(TC_SIZE_MEDIUM)) {
+			return CW_SIZE_SMALL;
+		} else if (tcstring.equals(TC_SIZE_REGULAR)) {
+			return CW_SIZE_REGULAR;
+		} else if (tcstring.equals(TC_SIZE_LARGE)) {
+			return CW_SIZE_LARGE;
+		} else if (tcstring.equals(TC_SIZE_VERYLARGE)) {
+			return CW_SIZE_VERYLARGE;
+		} else {
+			throw (new IllegalArgumentException("unmatched argument "
+					+ tcstring + " in CacheSize tcGpxString2Cw()"));
+		}
+	}
+	
+	/**
+	 * convert the cache size information from a GC GPX import to internal representation
+	 * 
 	 * @param gcstring
 	 *            size information extracted from a GPX inport
 	 * @return CacheWolf internal representation of size information
@@ -116,7 +153,7 @@
 	 *             (CW_SIZE_*)
 	 */
 
-	public byte gcGpxString2Cw(String gcstring) {
+	public static byte gcGpxString2Cw(String gcstring) {
 		if (gcstring.equals(GC_SIZE_MICRO)) {
 			return CW_SIZE_MICRO;
 		} else if (gcstring.equals(GC_SIZE_SMALL)) {
@@ -148,7 +185,7 @@
 	 *             if spiderstring can not be mapped to internal representation
 	 *             (CW_SIZE_*)
 	 */
-	public byte gcSpiderString2Cw(String spiderstring) {
+	public static byte gcSpiderString2Cw(String spiderstring) {
 		// at the moment both sources use the same strings
 		return gcGpxString2Cw(spiderstring);
 	}
@@ -163,7 +200,7 @@
 	 * @trows IllegalArgumentException if ocxmlstring can not be mapped to a
 	 *        CW_SIZE_*
 	 */
-	public byte ocXmlString2Cw(String ocxmlstring) {
+	public static byte ocXmlString2Cw(String ocxmlstring) {
 		if (ocxmlstring.equals(OC_SIZE_OTHER)) {
 			return CW_SIZE_OTHER;
 		} else if (ocxmlstring.equals(OC_SIZE_MICRO)) {
@@ -187,12 +224,12 @@
 	/**
 	 * get name of the image to be displayed in CW index panel
 	 * 
-	 * @param size
-	 * @return
+	 * @param size CW internal representation of cache size
+	 * @return filename of image to be displayed in main panel as size icon
 	 * @throws IllegalArgumentException
 	 *             if size can not be mapped
 	 */
-	public String guiSizeImage(byte size) {
+	public static String guiSizeImage(byte size) {
 		switch (size) {
 		case CW_SIZE_MICRO:
 			return CW_GUIIMG_MICRO;
@@ -217,32 +254,72 @@
 					+ size + " in CacheSize guiSizeImage()"));
 		}
 	}
-
-/*	// do not compile until there is an expoter that can make use of this
-	public String exportSizeImage(byte size) {
+	
+	/**
+	 * return a bit mask representing the caches size for use in the Filter
+	 * 
+	 * @param size CW internal representation of cache size
+	 * @return a bit mask for the filter function
+	 * @throws IllegalArgumentException if size can not be mapped to a bit mask
+	 */
+	
+	public static byte getFilterPattern(byte size) {
 		switch (size) {
 		case CW_SIZE_MICRO:
-			return CW_EXPIMG_MICRO;
+			return CW_FILTER_MICRO;
 		case CW_SIZE_SMALL:
-			return CW_EXPIMG_SMALL;
+			return CW_FILTER_SMALL;
 		case CW_SIZE_REGULAR:
-			return CW_EXPIMG_NORMAL;
+			return CW_FILTER_NORMAL;
 		case CW_SIZE_LARGE:
-			return CW_EXPIMG_LARGE;
+			return CW_FILTER_LARGE;
 		case CW_SIZE_NOTCHOSEN:
-			return CW_EXPIMG_NOTCHOSEN;
+			return CW_FILTER_NONPHYSICAL;
 		case CW_SIZE_OTHER:
-			return CW_EXPIMG_OTHER;
+			return CW_FILTER_NONPHYSICAL;
 		case CW_SIZE_VIRTUAL:
-			return CW_EXPIMG_VIRTUAL;
+			return CW_FILTER_NONPHYSICAL;
 		case CW_SIZE_VERYLARGE:
-			return CW_EXPIMG_VERYLARGE;
+			return CW_FILTER_VERYLARGE;
 		case CW_SIZE_NONE:
-			return CW_EXPIMG_NONE;
+			return CW_FILTER_NONPHYSICAL;
 		default:
 			throw (new IllegalArgumentException("unmatched argument " 
-				+ size + " in CacheSize exportSizeImage()"));
+					+ size + " in CacheSize getFilterPattern()"));
 		}
-	}*/
-
+	}
+	
+	/**
+	 * provides abbreviated representations of CacheSize for compact exporters
+	 * 
+	 * @param size CW internal representation of cache size
+	 * @return a one letter String for cache size 
+	 * @throws IllegalArgumentException  if size can not be mapped
+	 */
+	
+	public static String getExportShortId(byte size) {
+		switch (size) {
+		case CW_SIZE_MICRO:
+			return "m";
+		case CW_SIZE_SMALL:
+			return "s";
+		case CW_SIZE_REGULAR:
+			return "r";
+		case CW_SIZE_LARGE:
+			return "l";
+		case CW_SIZE_NOTCHOSEN:
+			return "n";
+		case CW_SIZE_OTHER:
+			return "n";
+		case CW_SIZE_VIRTUAL:
+			return "n";
+		case CW_SIZE_VERYLARGE:
+			return "v";
+		case CW_SIZE_NONE:
+			return "n";
+		default:
+			throw (new IllegalArgumentException("unmatched argument " 
+					+ size + " in CacheSize getExportShortId()"));
+		}
+	}
 }



From engywuck at mail.berlios.de  Tue May 12 19:01:36 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Tue, 12 May 2009 19:01:36 +0200
Subject: [Cachewolf-svn] r1798 - trunk/src/CacheWolf
Message-ID: <200905121701.n4CH1aAG002951@sheep.berlios.de>

Author: engywuck
Date: 2009-05-12 19:01:32 +0200 (Tue, 12 May 2009)
New Revision: 1798

Added:
   trunk/src/CacheWolf/Legacy.java
Log:
Adding class for incorporating legacy support of old format files.

Added: trunk/src/CacheWolf/Legacy.java
===================================================================
--- trunk/src/CacheWolf/Legacy.java	2009-05-11 22:12:36 UTC (rev 1797)
+++ trunk/src/CacheWolf/Legacy.java	2009-05-12 17:01:32 UTC (rev 1798)
@@ -0,0 +1,95 @@
+/**
+ * 
+ */
+package CacheWolf;
+
+import utils.MutableInteger;
+
+/**
+ * Utility class for converting data from old version files to current version files. This class
+ * is used to keep legacy support for old formats out of the "current" classes, so that they are
+ * not cluttered with old stuff which is seldom needed.
+ *
+ */
+public final class Legacy {
+	
+	private static final MutableInteger mInt = new MutableInteger(0);
+	
+	public static final int TYPE_CACHESIZE=0;
+	public static final int TYPE_CACHETYPE=1;
+	
+	/**
+	 * General purpose method to convert old version integer values to new version byte values.
+	 * To distinguish the different purposes the parameter <code>type</code> is used.
+	 * @param value Integer value to convert to new value
+	 * @param type Constant to distinguish the different purposes of the method
+	 * @param oldVersion Version number of the file the value is taken from
+	 * @param newVersion Version number of the file the converted number is intended for. Nearly  
+	 *   always this number should be the last supported version - unless we decide to support
+	 *   older version files also for writing.
+	 * @return The converted byte value
+	 */
+	public static byte toByte(int value, int type, int oldVersion, int newVersion) {
+		mInt.setInt(value);
+		return toByte(mInt, type, oldVersion, newVersion);
+	}
+
+	/**
+	 * General purpose method to convert old version String values to new version byte values.
+	 * To distinguish the different purposes the parameter <code>type</code> is used.
+	 * @param value String value to convert to new value
+	 * @param type Constant to distinguish the different purposes of the method
+	 * @param oldVersion Version number of the file the value is taken from
+	 * @param newVersion Version number of the file the converted number is intended for. Nearly  
+	 *   always this number should be the last supported version - unless we decide to support
+	 *   older version files also for writing.
+	 * @return The converted byte value
+	 */
+	public static byte toByte(String value, int type, int oldVersion, int newVersion) {
+		return toByte(value, type, oldVersion, newVersion);
+	}
+
+	private static byte toByte(Object obj, int type, int oldVersion, int newVersion) {
+		switch (type) {
+		case TYPE_CACHESIZE:
+			// For CacheSizes: The object is a plain string.
+			String oldS = (String)obj;
+			if (oldVersion == 1 && newVersion==3) {
+				if (oldS.equals("Micro")) return CacheSize.CW_SIZE_MICRO;
+				else if (oldS.equals("Small")) return CacheSize.CW_SIZE_SMALL;
+				else if (oldS.equals("Regular")) return CacheSize.CW_SIZE_REGULAR;
+				else if (oldS.equals("Large")) return CacheSize.CW_SIZE_LARGE;
+				else if (oldS.equals("Very large")) return CacheSize.CW_FILTER_VERYLARGE;
+				else if (oldS.equals("Other")) return CacheSize.CW_SIZE_OTHER;
+				else if (oldS.equals("Virtual")) return CacheSize.CW_SIZE_VIRTUAL;
+				else if (oldS.equals("Not chosen")) return CacheSize.CW_SIZE_NOTCHOSEN;
+				else if (oldS.equals("None")) return CacheSize.CW_SIZE_NONE;
+				else throw new IllegalArgumentException("Can't convert size '"+oldS+
+						"' from version 1 to 3"+String.valueOf(oldVersion)+" to version "+
+						String.valueOf(newVersion)+".");
+			}
+			else throw new IllegalArgumentException("Can't convert any size from version "+
+					String.valueOf(oldVersion)+" to version "+String.valueOf(newVersion)+".");
+		case TYPE_CACHETYPE:
+			// For CacheTypes: The object is a MutableInteger
+			int oldI = ((MutableInteger)obj).getInt();
+			if (oldVersion == 1 && newVersion==3) {
+				// TODO Depends, has to be filled
+			} else if (oldVersion == 2 && newVersion==3) {
+				// There is an easy mapping to convert cache type values of version 2 to 
+				// cache type values of version 1. This conversion is done and then the values
+				// are treated as if they were of version 1. 
+				int versionOneValue;
+				switch (oldI) {
+					case 100: versionOneValue = 1848; break;
+					case 101: versionOneValue = 453; break;
+					default: versionOneValue = type + 128;
+				}
+				return toByte(versionOneValue, TYPE_CACHETYPE, 1, 3);
+			} else throw new IllegalArgumentException("Can't convert any type from version "+
+				String.valueOf(oldVersion)+" to version "+String.valueOf(newVersion)+".");
+		default: 
+			throw new IllegalArgumentException("Can't convert type "+String.valueOf(type)+".");
+		}
+    }
+}



From greiol at mail.berlios.de  Tue May 12 21:43:18 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Tue, 12 May 2009 21:43:18 +0200
Subject: [Cachewolf-svn] r1799 - in trunk/src: CacheWolf exp
Message-ID: <200905121943.n4CJhI3U017897@sheep.berlios.de>

Author: greiol
Date: 2009-05-12 21:43:10 +0200 (Tue, 12 May 2009)
New Revision: 1799

Modified:
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/CacheSize.java
   trunk/src/CacheWolf/DetailsPanel.java
   trunk/src/CacheWolf/Filter.java
   trunk/src/CacheWolf/GPXImporter.java
   trunk/src/CacheWolf/MainTab.java
   trunk/src/CacheWolf/MyComparer.java
   trunk/src/CacheWolf/OCXMLImporter.java
   trunk/src/CacheWolf/Parser.java
   trunk/src/CacheWolf/ShowCacheInBrowser.java
   trunk/src/CacheWolf/SpiderGC.java
   trunk/src/CacheWolf/Version.java
   trunk/src/CacheWolf/myInteractivePanel.java
   trunk/src/CacheWolf/myTableModel.java
   trunk/src/exp/Exporter.java
   trunk/src/exp/GPXExporter.java
   trunk/src/exp/HTMLExporter.java
   trunk/src/exp/MSARCSVExporter.java
   trunk/src/exp/TPLExporter.java
   trunk/src/exp/TomTomExporter.java
Log:
activated CacheSize class

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -47,22 +47,6 @@
 	protected static final String DT_45_TXT = "4.5";
 	protected static final String DT_50_TXT = "5";
 	protected static final String DT_UNKNOWN_TXT = "?";
-	protected static final byte SIZE_UNKNOWN = 0;
-	protected static final byte SIZE_OTHER = 1;
-	protected static final byte SIZE_MICRO = 2;
-	protected static final byte SIZE_SMALL = 3;
-	protected static final byte SIZE_REGULAR = 4;
-	protected static final byte SIZE_LARGE = 5;
-	protected static final byte SIZE_VLARGE = 6;
-	protected static final byte SIZE_NONE = 7;
-	protected static final String SIZE_UNKNOWN_TXT = "";
-	protected static final String SIZE_OTHER_TXT = "Other";
-	protected static final String SIZE_MICRO_TXT = "Micro";
-	protected static final String SIZE_SMALL_TXT = "Small";
-	protected static final String SIZE_REGULAR_TXT = "Regular";
-	protected static final String SIZE_LARGE_TXT = "Large";
-	protected static final String SIZE_VLARGE_TXT = "Very Large";
-	protected static final String SIZE_NONE_TXT = "None";
 
 	/** Cachestatus is Found, Not found or a date in format yyyy-mm-dd hh:mm for found date */
 	private String cacheStatus = EMPTY;
@@ -79,7 +63,7 @@
 	/** The date when the cache was hidden in format yyyy-mm-dd */
 	private String dateHidden = EMPTY;
 	/** The size of the cache (as per GC cache sizes Micro, Small, ....) */
-	private String cacheSize = "None";
+	private byte cacheSize = CacheSize.CW_SIZE_NOTCHOSEN;
 	/** The distance from the centre in km */
 	public double kilom = -1; int bla = 0;
 	public double lastKilom = -2; // Cache last value
@@ -169,7 +153,7 @@
 		this.wayPoint = wp;
     }
 	
-	public CacheHolder(String xmlString, int version) {		 
+	public CacheHolder(String xmlString, int version) {
 		int start,end;
 	        try {
 			if (version == 1) {
@@ -217,7 +201,9 @@
 		        setFiltered(xmlString.substring(start + 1, end).equals("true"));
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
-		        setCacheSize(xmlString.substring(start + 1, end));
+		        
+		        setCacheSize(CacheSize.v1Converter(xmlString.substring(start + 1, end)));
+		        
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setAvailable(xmlString.substring(start + 1, end).equals("true"));
@@ -345,7 +331,7 @@
 		            setFiltered(true);
             }
 	        } catch (Exception ex) {
-	        	Global.getPref().log("Ignored Exception", ex, true);
+	        	Global.getPref().log("Ignored Exception in CacheHolder()", ex, true);
 	        }
         }
 	
@@ -856,7 +842,7 @@
 		long value = byteBitMask(CacheHolder.terrHard_String2byte(hard), 1)    | 
 		byteBitMask(CacheHolder.terrHard_String2byte(terrain), 2)   |
 		byteBitMask(this.type, 3)    |
-		byteBitMask(CacheHolder.size_String2byte(cacheSize), 4)|
+		byteBitMask(cacheSize, 4)|
 		byteBitMask(this.noFindLogs, 5);		             
 		return value;
 	}
@@ -869,7 +855,7 @@
 		this.setHard(CacheHolder.terrHard_byte2String(byteFromLong(value, 1)));
 		this.setTerrain(CacheHolder.terrHard_byte2String(byteFromLong(value, 2)));
 		this.type = byteFromLong(value, 3);
-		this.setCacheSize(CacheHolder.size_byte2String(byteFromLong(value, 4)));
+		this.setCacheSize(byteFromLong(value, 4));
 		this.setNoFindLogs((byteFromLong(value, 5)));
 	}
 
@@ -1025,12 +1011,12 @@
     	this.dateHidden = dateHidden;
     }
 
-	public String getCacheSize() {
+	public byte getCacheSize() {
     	return cacheSize;
     }
 
-	public void setCacheSize(String cacheSize) {
-		Global.getProfile().notifyUnsavedChanges(!cacheSize.equals(this.cacheSize));		
+	public void setCacheSize(byte cacheSize) {
+		Global.getProfile().notifyUnsavedChanges(cacheSize != this.cacheSize);		
     	this.cacheSize = cacheSize;
     }
 
@@ -1074,28 +1060,6 @@
 		} 
 		return result;
 	}
-	/**
-	 * The string representation of the internal value for the cache size.
-	 * @param value Internal cache size value 
-	 * @return String representation of cache size
-	 */
-	private static String size_byte2String(byte value) {
-		String result;
-		//Change: If no sensible value for the cache size is entered, then 
-		//the state is set to "None".
-		switch (value) {
-		case SIZE_UNKNOWN: result = SIZE_NONE_TXT; break;
-		case SIZE_OTHER: result = SIZE_OTHER_TXT; break;
-		case SIZE_MICRO: result = SIZE_MICRO_TXT; break;
-		case SIZE_SMALL: result = SIZE_SMALL_TXT; break;
-		case SIZE_REGULAR: result = SIZE_REGULAR_TXT; break;
-		case SIZE_LARGE: result = SIZE_LARGE_TXT; break;
-		case SIZE_VLARGE: result = SIZE_VLARGE_TXT; break;
-		case SIZE_NONE: result = SIZE_NONE_TXT; break;
-		default: result = SIZE_NONE_TXT;
-		} 
-		return result;
-	}
 
 	/**
 	 * Decoding the String represenations of difficulty or terrain values to internal (byte) values.
@@ -1143,32 +1107,7 @@
 	    if (value.endsWith(".0")) value = value.substring(0,1);
 	    return value;
     }
-    /**
-     * @param value
-     * @return
-     */
-    private static byte size_String2byte(String value) {
-    	byte result;
-    	if (value.equals(SIZE_OTHER_TXT)) {
-    		result = SIZE_OTHER;
-    	} else if (value.equals(SIZE_MICRO_TXT)) {
-    		result = SIZE_MICRO;
-    	} else if (value.equals(SIZE_SMALL_TXT)) {
-    		result = SIZE_SMALL;
-    	} else if (value.equals(SIZE_REGULAR_TXT)) {
-    		result = SIZE_REGULAR;
-    	} else if (value.equals(SIZE_LARGE_TXT)) {
-    		result = SIZE_LARGE;
-    	} else if (value.equals(SIZE_VLARGE_TXT)) {
-    		result = SIZE_VLARGE;
-    	} else if (value.equals(SIZE_NONE_TXT)) {
-    		result = SIZE_NONE;
-    	} else {
-    		result = DT_UNKNOWN;
-    	}
-    	return result;
-    }
-
+ 
 	/**
 	 * Gets the type of cache as integer.
 	 * @return Cache type

Modified: trunk/src/CacheWolf/CacheSize.java
===================================================================
--- trunk/src/CacheWolf/CacheSize.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/CacheWolf/CacheSize.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -28,6 +28,7 @@
 	static final protected String GC_SIZE_OTHER = "Other";
 	static final protected String GC_SIZE_VIRTUAL = "Virtual";
 	static final protected String OCTC_SIZE_VERYLARGE = "Very large";
+	static final protected String OCTC_SIZE_NONE = "None";
 
 	/*
 	 * OpenCaching Size IDs
@@ -63,6 +64,24 @@
 	static final protected String CW_GUIIMG_VERYLARGE = "sizeVLarge.png";
 	
 	/*
+	 * IDs for the sizePics[] array in TableModel
+	 * therefore they must start with 0 and be consecutive
+	 */
+	static final protected byte CW_GUIIMGID_MICRO = 0;
+	static final protected byte CW_GUIIMGID_SMALL = 1;
+	static final protected byte CW_GUIIMGID_NORMAL = 2;
+	static final protected byte CW_GUIIMGID_LARGE = 3;
+	static final protected byte CW_GUIIMGID_NONPHYSICAL = 4;
+	static final protected byte CW_GUIIMGID_VERYLARGE = 5;
+	
+	/*
+	 * total number of different size images
+	 * will be used to det the dimension of sizePics[] array in TableModel
+	 */
+	static final protected byte CW_TOTAL_SIZE_IMAGES = 6;
+	
+	
+	/*
 	 * bit masks to be used with the filter function
 	 */
 	static final protected byte CW_FILTER_MICRO = 0x01<<0;
@@ -79,6 +98,27 @@
 	public CacheSize() {
 		// do nothing
 	}
+	
+	/**
+	 * map filenames of images for the different sizes to the ids used
+	 * array index for sizePics[] in TableModel
+	 * @param id size identifier matching the CW_GUIIMGID_ constants
+	 * @return filenam of image to be displayed for id
+	 * @throws IllegalArgumentException if there is no image associated to the id
+	 */
+	public static String sizeImageForId(byte id) {
+		switch(id) {
+		case CW_GUIIMGID_MICRO: return CW_GUIIMG_MICRO;
+		case CW_GUIIMGID_SMALL: return CW_GUIIMG_SMALL;
+		case CW_GUIIMGID_NORMAL: return CW_GUIIMG_NORMAL;
+		case CW_GUIIMGID_LARGE: return CW_GUIIMG_LARGE;
+		case CW_GUIIMGID_NONPHYSICAL: return CW_GUIIMG_NONPHYSICAL;
+		case CW_GUIIMGID_VERYLARGE: return CW_GUIIMG_VERYLARGE;
+		default:
+			throw (new IllegalArgumentException("unmatched argument " + id
+					+ " in CacheSize cw2ExportString()"));			
+		}
+	}
 
 	/**
 	 * convert the size info from a CacheHolder to a string suitable for GPX
@@ -108,9 +148,11 @@
 			return GC_SIZE_VIRTUAL;
 		case CW_SIZE_VERYLARGE:
 			return OCTC_SIZE_VERYLARGE;
+		case CW_SIZE_NONE:
+			return OCTC_SIZE_NONE;
 		default:
 			throw (new IllegalArgumentException("unmatched argument " + size
-					+ " in CacheSize cw2GcString()"));
+					+ " in CacheSize cw2ExportString()"));
 		}
 	}
 
@@ -229,33 +271,70 @@
 	 * @throws IllegalArgumentException
 	 *             if size can not be mapped
 	 */
-	public static String guiSizeImage(byte size) {
+	public static byte guiSizeImageId(byte size) {
 		switch (size) {
 		case CW_SIZE_MICRO:
-			return CW_GUIIMG_MICRO;
+			return CW_GUIIMGID_MICRO;
 		case CW_SIZE_SMALL:
-			return CW_GUIIMG_SMALL;
+			return CW_GUIIMGID_SMALL;
 		case CW_SIZE_REGULAR:
-			return CW_GUIIMG_NORMAL;
+			return CW_GUIIMGID_NORMAL;
 		case CW_SIZE_LARGE:
-			return CW_GUIIMG_LARGE;
+			return CW_GUIIMGID_LARGE;
 		case CW_SIZE_NOTCHOSEN:
-			return CW_GUIIMG_NONPHYSICAL;
+			return CW_GUIIMGID_NONPHYSICAL;
 		case CW_SIZE_OTHER:
-			return CW_GUIIMG_NONPHYSICAL;
+			return CW_GUIIMGID_NONPHYSICAL;
 		case CW_SIZE_VIRTUAL:
-			return CW_GUIIMG_NONPHYSICAL;
+			return CW_GUIIMGID_NONPHYSICAL;
 		case CW_SIZE_VERYLARGE:
-			return CW_GUIIMG_VERYLARGE;
+			return CW_GUIIMGID_VERYLARGE;
 		case CW_SIZE_NONE:
-			return CW_GUIIMG_NONPHYSICAL;
+			return CW_GUIIMGID_NONPHYSICAL;
 		default:
 			throw (new IllegalArgumentException("unmatched argument " 
 					+ size + " in CacheSize guiSizeImage()"));
 		}
 	}
 	
+
 	/**
+	 * convert an "old style" size string to the new internal representation
+	 * @param v1Size old size string
+	 * @return CW internal representation of cache size
+	 * @throws if v1Size can not be mapped
+	 * @deprecated remove once v1 file version compatibility is abandoned
+	 */
+	public static final byte v1Converter(String v1Size) {
+		if (v1Size.equals(GC_SIZE_MICRO)) {
+			return CW_SIZE_MICRO;
+		} else if (v1Size.equals(GC_SIZE_SMALL)) {
+			return CW_SIZE_SMALL;
+		} else if (v1Size.equals(GC_SIZE_REGULAR)) {
+			return CW_SIZE_REGULAR;
+		} else if (v1Size.equals(GC_SIZE_LARGE)) {
+			return CW_SIZE_LARGE;
+		} else if (v1Size.equals(GC_SIZE_NOTCHOSEN)) {
+			return CW_SIZE_NOTCHOSEN;
+		} else if (v1Size.equals(GC_SIZE_OTHER)) {
+			return CW_SIZE_OTHER;
+		} else if (v1Size.equals(GC_SIZE_VIRTUAL)) {
+			return CW_SIZE_VIRTUAL;
+		} else if (v1Size.equals(OCTC_SIZE_NONE)) {
+			return CW_SIZE_NONE;
+		} else if (v1Size.equals(OCTC_SIZE_VERYLARGE)) {
+			return CW_SIZE_VERYLARGE;
+		} else if (v1Size.equals("")) {
+			return CW_SIZE_NOTCHOSEN;
+		} else if (v1Size.equals(null)) {
+			return CW_SIZE_NOTCHOSEN;
+		} else {
+			throw (new IllegalArgumentException("unmatched argument "
+					+ v1Size + " in v1Converter()"));
+		}
+	}
+	
+	/**
 	 * return a bit mask representing the caches size for use in the Filter
 	 * 
 	 * @param size CW internal representation of cache size
@@ -322,4 +401,85 @@
 					+ size + " in CacheSize getExportShortId()"));
 		}
 	}
+	
+	/**
+	 * generate a string array suitable to be used in DetalsPanel drop down list
+	 * @return strings to be displayed in the DetailsPanel Size DropDown
+	 * @see guiSizeStrings2CwSize
+	 * @see cwSizeId2GuiSizeId
+	 */
+	
+	public static String[] guiSizeStrings() {
+		// make sure strings appear in ascending order for CW_SIZE_*
+		String ret[] = new String[] {
+				GC_SIZE_NOTCHOSEN,
+				GC_SIZE_OTHER,
+				GC_SIZE_MICRO,
+				GC_SIZE_SMALL,
+				GC_SIZE_REGULAR,
+				GC_SIZE_LARGE,
+				OCTC_SIZE_VERYLARGE,
+				OCTC_SIZE_NONE,
+				GC_SIZE_VIRTUAL
+		};
+		return ret;
+	}
+
+	/**
+	 * map a string chosen from the DetailsPanel Size drop down list back to internal representation
+	 * @param id
+	 * @return 
+	 * @throws IllegalArgumentException if id can not be mapped 
+	 * @see cwSizeId2GuiSizeId
+	 * @see guiSizeStrings
+	 */
+	public static byte guiSizeStrings2CwSize(String id) {
+		// map the strings in guiSizeStrings() back to cw byte types
+		if (id.equals(GC_SIZE_NOTCHOSEN)) {
+			return CW_SIZE_NOTCHOSEN;
+		} else if (id.equals(GC_SIZE_OTHER)) {
+			return CW_SIZE_OTHER;
+		} else if (id.equals(GC_SIZE_SMALL)) {
+			return CW_SIZE_SMALL;
+		} else if (id.equals(GC_SIZE_REGULAR)) {
+			return CW_SIZE_REGULAR;
+		} else if (id.equals(GC_SIZE_LARGE)) {
+			return CW_SIZE_LARGE;
+		} else if (id.equals(OCTC_SIZE_VERYLARGE)) {
+			return CW_SIZE_VERYLARGE;
+		} else if (id.equals(OCTC_SIZE_NONE)) {
+			return CW_SIZE_NONE;
+		} else if (id.equals(GC_SIZE_MICRO)) {
+			return CW_SIZE_MICRO;
+		} else {
+			throw (new IllegalArgumentException("unmatched argument " 
+					+ id + " in guiSizeStrings2CwSize()"));
+		}	
+	}
+	
+	/**
+	 * map internal representation to index used in the the DetailsPanel Size drop down list
+	 * @param id internal id to be mapped
+	 * @return index of internal size in array
+	 * @throws IllegalArgumentException if id can not be mapped
+	 * @see guiSizeStrings2CwSize
+	 * @see cwSizeId2GuiSizeId
+	 */
+	public static int cwSizeId2GuiSizeId(byte id) {
+		switch(id) {
+		case CW_SIZE_NOTCHOSEN: return 0;
+		case CW_SIZE_OTHER: return 1;
+		case CW_SIZE_MICRO: return 2;
+		case CW_SIZE_SMALL: return 3;
+		case CW_SIZE_REGULAR: return 4;
+		case CW_SIZE_LARGE: return 5;
+		case CW_SIZE_VERYLARGE: return 6;
+		case CW_SIZE_NONE: return 7;
+		case CW_SIZE_VIRTUAL: return 8;
+		default:
+			throw (new IllegalArgumentException("unmatched argument " 
+					+ id + " in CacheSize ()"));
+		}
+		
+	}
 }

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/CacheWolf/DetailsPanel.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -18,7 +18,7 @@
 	mInput inpOwner = new mInput();
 	mButton btnDelete,btnCenter, btnAddDateTime;
 	mChoice chcType = new mChoice(new String[]{"Custom", "Traditional", "Multi", "Virtual", "Letterbox", "Event", "Mega Event", "Mystery", "Webcam", "Locationless", "CITO", "Earthcache", "wherIGo", "Addi: Parking", "Addi: Stage", "Addi: Question", "Addi: Final","Addi: Trailhead","Addi: Reference"},0);
-	mChoice chcSize = new mChoice(new String[]{"", "Micro", "Small", "Regular", "Large","Other","Very Large","None"},0);
+	mChoice chcSize = new mChoice(CacheSize.guiSizeStrings(),0);
 	mComboBox chcStatus = new mComboBox(new String[]{"", MyLocale.getMsg(313,"Flag 1"), MyLocale.getMsg(314,"Flag 2"), MyLocale.getMsg(315,"Flag 3"), MyLocale.getMsg(316,"Flag 4"), MyLocale.getMsg(317,"Search"), MyLocale.getMsg(318,"Found"), MyLocale.getMsg(319,"Not Found"), MyLocale.getMsg(320,"Owner")},0);
 	mButton btnNewWpt, btnShowBug, btnShowMap, btnGoto, btnAddPicture, btnBlack, btnNotes, btnSave, btnCancel;
 	mButton btnFoundDate,btnHiddenDate;
@@ -208,14 +208,8 @@
 			btnShowBug.image = imgShowBugNo;
 		}
 		btnShowBug.repaintNow();
-		if(ch.getCacheSize().equals("Micro")) chcSize.setInt(1);
-		if(ch.getCacheSize().equals("Small")) chcSize.setInt(2);
-		if(ch.getCacheSize().equals("Regular")) chcSize.setInt(3);
-		if(ch.getCacheSize().equals("Large")) chcSize.setInt(4);
-		if(ch.getCacheSize().equals("Other")) chcSize.setInt(5);
-		if(ch.getCacheSize().equals("Very Large")) chcSize.setInt(6);
-		if(ch.getCacheSize().equals("None")) chcSize.setInt(7);
-		if(ch.getCacheSize().equals("Not chosen")) chcSize.setInt(7);
+		chcSize.setInt(ch.getCacheSize());
+
 		attV.showImages(ch.getCacheDetails(true).attributes);
 		lblTerr.setText((ch.getTerrain().length()>0) ? (MyLocale.getMsg(1001,"T")+": "+ch.getTerrain()) : "");
 		lblDiff.setText((ch.getHard().length()>0)    ? (MyLocale.getMsg(1000,"D")+": "+ch.getHard()) : ""); 
@@ -491,7 +485,7 @@
 		  thisCache.setBlack(blackStatus);
 		  String oldWaypoint=thisCache.getWayPoint();
 		  thisCache.setWayPoint(inpWaypoint.getText().toUpperCase().trim());
-		  thisCache.setCacheSize(chcSize.getText());
+		  thisCache.setCacheSize(CacheSize.guiSizeStrings2CwSize(chcSize.getText()));
 		  // If the waypoint does not have a name, give it one
 		  if (thisCache.getWayPoint().equals("")) { 
 			  thisCache.setWayPoint(profile.getNewWayPointName());

Modified: trunk/src/CacheWolf/Filter.java
===================================================================
--- trunk/src/CacheWolf/Filter.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/CacheWolf/Filter.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -68,14 +68,6 @@
 	private static final int S = 32768;
 	private static final int ROSE_ALL= N|NNE|NE|ENE|E|ESE|SE|SSE|SSW|SW|WSW|W|WNW|NW|NNW|S;
 
-	private static final int MICRO=1; 
-	private static final int SMALL=2;	
-	private static final int REGULAR=4;	
-	private static final int LARGE=8;	
-	private static final int VERYLARGE=16;	
-	private static final int OTHER=32;	
-	private static final int SIZE_ALL=MICRO|SMALL|REGULAR|LARGE|VERYLARGE|OTHER;
-	
 	private int distdirec = 0;
 	private int diffdirec = 0;
 	private int terrdirec = 0;
@@ -302,13 +294,13 @@
 		hasRoseMatchPattern=roseMatchPattern!=ROSE_ALL;
 		sizeMatchPattern=0;
 		String filterSize=profile.getFilterSize();
-		if (filterSize.charAt(0) == '1') sizeMatchPattern|=MICRO;
-		if (filterSize.charAt(1) == '1') sizeMatchPattern|=SMALL;
-		if (filterSize.charAt(2) == '1') sizeMatchPattern|=REGULAR;
-		if (filterSize.charAt(3) == '1') sizeMatchPattern|=LARGE;
-		if (filterSize.charAt(4) == '1') sizeMatchPattern|=VERYLARGE;
-		if (filterSize.charAt(5) == '1') sizeMatchPattern|=OTHER;
-		hasSizeMatchPattern=sizeMatchPattern!=SIZE_ALL;
+		if (filterSize.charAt(0) == '1') sizeMatchPattern|=CacheSize.CW_FILTER_MICRO;
+		if (filterSize.charAt(1) == '1') sizeMatchPattern|=CacheSize.CW_FILTER_SMALL;
+		if (filterSize.charAt(2) == '1') sizeMatchPattern|=CacheSize.CW_FILTER_NORMAL;
+		if (filterSize.charAt(3) == '1') sizeMatchPattern|=CacheSize.CW_FILTER_LARGE;
+		if (filterSize.charAt(4) == '1') sizeMatchPattern|=CacheSize.CW_FILTER_VERYLARGE;
+		if (filterSize.charAt(5) == '1') sizeMatchPattern|=CacheSize.CW_FILTER_NONPHYSICAL;
+		hasSizeMatchPattern=sizeMatchPattern!=CacheSize.CW_FILTER_ALL;
 		distdirec = profile.getFilterDist().charAt(0) == 'L' ? SMALLER : GREATER; 
 		fscDist = Common.parseDouble(profile.getFilterDist().substring(1));  // Distance
 		diffdirec = profile.getFilterDiff().charAt(0) == 'L' ? SMALLER : 
@@ -546,19 +538,7 @@
 	        // Filter criterium 10: Size
 	        ///////////////////////////////
 	        if (hasSizeMatchPattern) {
-		        cacheSizePattern = 0;
-		        if (ch.getCacheSize().startsWith("M"))
-			        cacheSizePattern = MICRO;
-		        else if (ch.getCacheSize().startsWith("S"))
-			        cacheSizePattern = SMALL;
-		        else if (ch.getCacheSize().startsWith("R"))
-			        cacheSizePattern = REGULAR;
-		        else if (ch.getCacheSize().startsWith("L"))
-			        cacheSizePattern = LARGE;
-		        else if (ch.getCacheSize().startsWith("V"))
-			        cacheSizePattern = VERYLARGE;
-		        else
-			        cacheSizePattern = OTHER;
+		        cacheSizePattern = CacheSize.getFilterPattern(ch.getCacheSize());
 		        if ((cacheSizePattern & sizeMatchPattern) == 0) {
 			        cacheFiltered = true; break;
 		        }

Modified: trunk/src/CacheWolf/GPXImporter.java
===================================================================
--- trunk/src/CacheWolf/GPXImporter.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/CacheWolf/GPXImporter.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -387,9 +387,8 @@
 		// aditional wapypoint
 		if (name.equals("type")&& inWpt && !inCache && strData.startsWith("Waypoint")){
 			holder.setType(CacheType.typeText2Number(strData));
-			holder.setCacheSize("None");
+			holder.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
 		}
-
 		
 		if ((name.equals("groundspeak:name")|| name.equals("terra:name")) && inCache) {
 			holder.setCacheName(strData);
@@ -413,7 +412,7 @@
 			return;
 		}
 		if (name.equals("groundspeak:container")|| name.equals("container")){
-			holder.setCacheSize(strData);
+			holder.setCacheSize(CacheSize.gcGpxString2Cw(strData));
 			return;
 		}
 		if (name.equals("groundspeak:country")|| name.equals("country")){
@@ -425,7 +424,7 @@
 			return;
 		}
 		if (name.equals("terra:size")){
-			holder.setCacheSize(TCSizetoText(strData));
+			holder.setCacheSize(CacheSize.tcGpxString2Cw(strData));
 		}
 
 		if (name.equals("groundspeak:short_description")|| name.equals("summary")) {

Modified: trunk/src/CacheWolf/MainTab.java
===================================================================
--- trunk/src/CacheWolf/MainTab.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/CacheWolf/MainTab.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -304,7 +304,7 @@
 			pCh.setType(0);
 			lastselected=pCh.getWayPoint();
 		}
-		pCh.setCacheSize("None");
+		pCh.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
 		chD = pCh.getCacheDetails(true);
 		this.ch = pCh;
 		cacheDB.add(pCh);

Modified: trunk/src/CacheWolf/MyComparer.java
===================================================================
--- trunk/src/CacheWolf/MyComparer.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/CacheWolf/MyComparer.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -77,15 +77,7 @@
 		} else if (colToCompare==12) {
 			for (int i=0; i<visibleSize; i++) {
 				CacheHolder ch=cacheDB.get(i);
-				if (ch.getCacheSize().length()==0) ch.sort="?";
-				else switch (ch.getCacheSize().charAt(0)) {
-					case 'M': ch.sort="1"; break;
-					case 'S': ch.sort="2"; break;
-					case 'R': ch.sort="3"; break;
-					case 'L': ch.sort="4"; break; 
-					case 'V': ch.sort="5"; break;
-					default: ch.sort="?";
-				}
+				ch.sort=Byte.toString(ch.getCacheSize());
 			}
 		} else if (colToCompare==13) {
 			for (int i=0; i<visibleSize; i++) {

Modified: trunk/src/CacheWolf/OCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/OCXMLImporter.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/CacheWolf/OCXMLImporter.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -368,7 +368,7 @@
 			return;
 		}
 		if(name.equals("size")){
-			holder.setCacheSize(transSize(atts.getValue("id")));
+			holder.setCacheSize(CacheSize.ocXmlString2Cw(atts.getValue("id")));
 			return;
 		}
 

Modified: trunk/src/CacheWolf/Parser.java
===================================================================
--- trunk/src/CacheWolf/Parser.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/CacheWolf/Parser.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -1102,7 +1102,7 @@
 		CacheHolder ch = new CacheHolder();
 		ch.setWayPoint(wayPoint);
 		ch.setType(type);
-		ch.setCacheSize("None");
+		ch.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
 		ch.setCacheName(name);
 
 		Global.getProfile().setAddiRef(ch);

Modified: trunk/src/CacheWolf/ShowCacheInBrowser.java
===================================================================
--- trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -69,7 +69,7 @@
 						tpl.setParam("TYPE", "\"file://"+FileBase.getProgramDirectory()+"/"+CacheType.transOCType(chD.getType())+".gif\"");
 					else	
 						tpl.setParam("TYPE", "\"file://"+FileBase.getProgramDirectory()+"/"+chD.getType()+".gif\"");
-					tpl.setParam("SIZE", chD.getCacheSize());
+					tpl.setParam("SIZE", CacheSize.cw2ExportString(chD.getCacheSize()));
 					tpl.setParam("WAYPOINT", chD.getWayPoint());
 					tpl.setParam("CACHE_NAME", chD.getCacheName());
 					tpl.setParam("OWNER", chD.getCacheOwner());

Modified: trunk/src/CacheWolf/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/SpiderGC.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/CacheWolf/SpiderGC.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -718,7 +718,7 @@
 						else pref.log("Got hints");
 
 						pref.log("Trying size");
-						ch.setCacheSize(getSize(completeWebPage));
+						ch.setCacheSize(CacheSize.gcSpiderString2Cw(getSize(completeWebPage)));
 						if (pref.debug) pref.log("Size: " + ch.getCacheSize());
 						else pref.log("Got size");
 

Modified: trunk/src/CacheWolf/Version.java
===================================================================
--- trunk/src/CacheWolf/Version.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/CacheWolf/Version.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -15,7 +15,7 @@
 	static final int VER_MAJOR = 1;
 	static final int VER_MINOR = 0;
 	static final String VER_SVN ="$LastChangedRevision$"; // the number is automatically replaced by subversion to the latest versionnumer of this file (svn:keywords LastChangedRevision)
-	static final int SVN_REVISION = Common.parseInt(VER_SVN.substring(VER_SVN.indexOf(" ")+1, VER_SVN.lastIndexOf(" ")));
+	static final int SVN_REVISION = 20090512;
 	static final int VERSION_TYPE = 3;
 	public static final String[] VERSION_TYPES = {
 		"Release", 
@@ -34,8 +34,8 @@
 	}
 
 	public static String getReleaseDetailed() {
-		// habe die SVN-Nummer doch aus der Anzeige erstmal wieder herausgenommen, weil es in einem final Release doch recht seltsam auss?he.
-		// Sinnvoll w?re daher vielleicht, eine Methode getReleaseDatail, die die SVN-Versionnummer mit angibt und z.B. im "?ber"-Dialog angezeigt werden k?nnte.
+		// habe die SVN-Nummer doch aus der Anzeige erstmal wieder herausgenommen, weil es in einem final Release doch recht seltsam auss???he.
+		// Sinnvoll w???re daher vielleicht, eine Methode getReleaseDatail, die die SVN-Versionnummer mit angibt und z.B. im "???ber"-Dialog angezeigt werden k???nnte.
 		return getRelease() + "." + Convert.toString(SVN_REVISION) + " " + VERSION_TYPES[VERSION_TYPE];
 	}
 

Modified: trunk/src/CacheWolf/myInteractivePanel.java
===================================================================
--- trunk/src/CacheWolf/myInteractivePanel.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/CacheWolf/myInteractivePanel.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -54,6 +54,7 @@
 	public void setMainTab(MainTab tb){
 		mt = tb;
 	}
+	
 	public boolean imageMovedOn(AniImage which) {
 		timePenOn=Vm.getTimeStampLong();
 		setFont(font);
@@ -61,7 +62,7 @@
 		CacheDB cacheDB=Global.getProfile().cacheDB;
 		CacheHolder ch=cacheDB.get(imgRP.rownum);
 		wayPoint=ch.getWayPoint();
-		String s=wayPoint+"  "+ch.getCacheSize()+" / "+strDifficulty+"="+ch.getHard()+"  "+strTerrain+"="+ch.getTerrain();
+		String s=wayPoint+"  "+CacheSize.getExportShortId(ch.getCacheSize())+" / "+strDifficulty+"="+ch.getHard()+"  "+strTerrain+"="+ch.getTerrain();
 		String s1=ch.getCacheName();
 		if (s1.length()>40) s1=s1.substring(0,40);
 		int tw=fm.getTextWidth(s)+2;

Modified: trunk/src/CacheWolf/myTableModel.java
===================================================================
--- trunk/src/CacheWolf/myTableModel.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/CacheWolf/myTableModel.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -51,7 +51,8 @@
 	private boolean sortAsc = false;
 	private int sortedBy = -1;
 	private FontMetrics fm;
-	private mImage picSizeMicro,picSizeSmall,picSizeReg,picSizeLarge,picSizeVLarge;
+//	private mImage picSizeMicro,picSizeSmall,picSizeReg,picSizeLarge,picSizeVLarge,picSizeNonPhysical;
+	private mImage[] sizePics = new mImage[CacheSize.CW_TOTAL_SIZE_IMAGES];
 	/** This is the modifier (Shift & Control key status) for Pen Events
 	 * it is set in myTableControl.onEvent */
 	public int penEventModifiers; 
@@ -81,11 +82,19 @@
 		bug = new mImage("bug_table.png");bug.transparentColor=Color.DarkBlue;
 		checkboxTicked = new Image("checkboxTicked.png");
 		checkboxUnticked= new Image("checkboxUnticked.png");
-		picSizeMicro=new mImage("sizeMicro.png"); picSizeMicro.transparentColor=Color.White;
-		picSizeSmall=new mImage("sizeSmall.png"); picSizeSmall.transparentColor=Color.White;
-		picSizeReg=new mImage("sizeReg.png"); picSizeReg.transparentColor=Color.White;
-		picSizeLarge=new mImage("sizeLarge.png"); picSizeLarge.transparentColor=Color.White;
-		picSizeVLarge=new mImage("sizeVLarge.png"); picSizeVLarge.transparentColor=Color.White;
+		
+//		picSizeMicro=new mImage("sizeMicro.png"); picSizeMicro.transparentColor=Color.White;
+//		picSizeSmall=new mImage("sizeSmall.png"); picSizeSmall.transparentColor=Color.White;
+//		picSizeReg=new mImage("sizeReg.png"); picSizeReg.transparentColor=Color.White;
+//		picSizeLarge=new mImage("sizeLarge.png"); picSizeLarge.transparentColor=Color.White;
+//		picSizeVLarge=new mImage("sizeVLarge.png"); picSizeVLarge.transparentColor=Color.White;
+//		picSizeNonPhysical=new mImage("sizeNonPhysical.png"); picSizeNonPhysical.transparentColor=Color.White;
+		
+		for (byte i = 0; i < CacheSize.CW_TOTAL_SIZE_IMAGES; i++) {
+			sizePics[i] = new mImage(CacheSize.sizeImageForId(i));
+			sizePics[i].transparentColor=Color.White;
+		}
+				
 //		updateRows();
 	}
 	
@@ -217,7 +226,7 @@
 					lastColorFG.set(ta.foreground);
 					lastRow = row;
 				} catch (Exception e) {
-					Global.getPref().log("Ignored Exception", e, true);
+					Global.getPref().log("Ignored Exception in myTableModel.TableCellAttributes()", e, true);
 				};
 			} else  {
 				// Here: We already had this row.
@@ -318,14 +327,10 @@
 					case 11: // Bearing
 						return ch.bearing;
 					case 12: // Size
-						if (ch.getCacheSize().length()==0) return "?";
-						switch (ch.getCacheSize().charAt(0)) {
-							case 'M': return picSizeMicro;
-							case 'S': return picSizeSmall;
-							case 'R': return picSizeReg;
-							case 'L': return picSizeLarge;
-							case 'V': return picSizeVLarge;
-							default: return "?";
+						if (ch.isAddiWpt()) {
+							return "";
+						} else {
+							return sizePics[CacheSize.guiSizeImageId(ch.getCacheSize())];
 						}
 					case 13: // OC number of recommendations
 						if (ch.getWayPoint().startsWith("OC"))
@@ -337,7 +342,10 @@
 						return null;
 				} // Switch
 			} // if
-		} catch (Exception e) { return null; }
+		} catch (Exception e) {
+			Global.getPref().log("Ignored Exception in myTableModel.getCellData()", e, true);
+			return null; 
+		}
 		return null;
 	}
 	

Modified: trunk/src/exp/Exporter.java
===================================================================
--- trunk/src/exp/Exporter.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/exp/Exporter.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -424,7 +424,7 @@
     				strBuf.append("5");
     			}
     		}
-    		strBuf.append(ch.getCacheSize().substring(0, 1).toLowerCase());
+    		strBuf.append(CacheSize.getExportShortId(ch.getCacheSize()));
     	}
 
     	return strBuf.toString();

Modified: trunk/src/exp/GPXExporter.java
===================================================================
--- trunk/src/exp/GPXExporter.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/exp/GPXExporter.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -80,7 +80,7 @@
 				//todo low prio: correct owner-id
 				strBuf.append("      <groundspeak:owner id=\"23\">").append(SafeXML.cleanGPX(ch.getCacheOwner())+"</groundspeak:owner>\r\n");
 				strBuf.append("      <groundspeak:type>").append(CacheType.transType(ch.getType())).append("</groundspeak:type>\r\n");
-				strBuf.append("      <groundspeak:container>").append(ch.getCacheSize()).append("</groundspeak:container>\r\n");
+				strBuf.append("      <groundspeak:container>").append(CacheSize.cw2ExportString(ch.getCacheSize())).append("</groundspeak:container>\r\n");
 				//for Colorado/Oregon: 2.0 -> 2
 				String diffTerr = ch.getHard().replace(',','.');
 				if ( diffTerr.endsWith( ".0" ) ) {

Modified: trunk/src/exp/HTMLExporter.java
===================================================================
--- trunk/src/exp/HTMLExporter.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/exp/HTMLExporter.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -85,7 +85,7 @@
 					det=ch.getExistingDetails();
 					varParams = new Hashtable();
 					varParams.put("TYPE", CacheType.transType(ch.getType()));
-					varParams.put("SIZE", ch.getCacheSize());
+					varParams.put("SIZE", CacheSize.cw2ExportString(ch.getCacheSize()));
 					varParams.put("WAYPOINT", ch.getWayPoint());
 					varParams.put("NAME", ch.getCacheName());
 					varParams.put("OWNER", ch.getCacheOwner());
@@ -101,7 +101,7 @@
 					try{
 						Template page_tpl = new Template(template_init_page);
 						page_tpl.setParam("TYPE", CacheType.transType(ch.getType()));
-						page_tpl.setParam("SIZE", ch.getCacheSize());
+						page_tpl.setParam("SIZE", CacheSize.cw2ExportString(ch.getCacheSize()));
 						page_tpl.setParam("WAYPOINT", ch.getWayPoint());
 						page_tpl.setParam("NAME", ch.getCacheName());
 						page_tpl.setParam("OWNER", ch.getCacheOwner());

Modified: trunk/src/exp/MSARCSVExporter.java
===================================================================
--- trunk/src/exp/MSARCSVExporter.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/exp/MSARCSVExporter.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -5,7 +5,7 @@
 /**
  * Class to export the cache database (index) to an CSV File which can bei easy
  * importet bei MS AutoRoute (testet with AR 2001 German) Format of the file:
- * Name;Breitengrad;L?ngengrad;Typ1;Typ2;Waypoint;Datum;Hyperlink
+ * Name;Breitengrad;L???ngengrad;Typ1;Typ2;Waypoint;Datum;Hyperlink
  * 
  */
 public class MSARCSVExporter extends Exporter {
@@ -27,7 +27,7 @@
 		str.append("\"" + ch.getWayPoint() + " - " + ch.getCacheName() + "\";");
 		str.append(lat + ";" + lon +";");
 		str.append("\"" + CacheType.transType(ch.getType())+ "\";");
-		str.append("\"" + ch.getCacheSize() + "\";");
+		str.append("\"" + CacheSize.cw2ExportString(ch.getCacheSize()) + "\";");
 		str.append("\"" + ch.getWayPoint() + "\";");
 		str.append("\"" + ch.getDateHidden() + "\";");
 		str.append("\"" + ch.getExistingDetails().URL + "\"\r\n");

Modified: trunk/src/exp/TPLExporter.java
===================================================================
--- trunk/src/exp/TPLExporter.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/exp/TPLExporter.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -29,6 +29,7 @@
 import CacheWolf.CacheDB;
 import CacheWolf.CacheHolder;
 import CacheWolf.CacheHolderDetail;
+import CacheWolf.CacheSize;
 import CacheWolf.CacheType;
 import CacheWolf.Global;
 import CacheWolf.Preferences;
@@ -195,8 +196,8 @@
 						varParams = new Hashtable();
 						varParams.put("TYPE", CacheType.transType(ch.getType()));
 						varParams.put("SHORTTYPE", CacheType.transType(ch.getType()).substring(0,1));
-						varParams.put("SIZE", ch.getCacheSize());
-						varParams.put("SHORTSIZE", ch.getCacheSize().substring(0,1));
+						varParams.put("SIZE", CacheSize.cw2ExportString(ch.getCacheSize()));
+						varParams.put("SHORTSIZE", CacheSize.getExportShortId(ch.getCacheSize()));
 						varParams.put("WAYPOINT", ch.getWayPoint());
 						varParams.put("OWNER", ch.getCacheOwner());
 						varParams.put("DIFFICULTY", dec.replaceAll(ch.getHard()));

Modified: trunk/src/exp/TomTomExporter.java
===================================================================
--- trunk/src/exp/TomTomExporter.java	2009-05-12 17:01:32 UTC (rev 1798)
+++ trunk/src/exp/TomTomExporter.java	2009-05-12 19:43:10 UTC (rev 1799)
@@ -185,7 +185,7 @@
 			outp.writeBytes("/");
 			outp.writeBytes(ch.getTerrain());
 			outp.writeBytes(" - ");
-			outp.writeBytes(ch.getCacheSize());
+			outp.writeBytes(CacheSize.cw2ExportString(ch.getCacheSize()));
 			outp.writeBytes("\"\r\n");
 		} catch (IOException e) {
 			Vm.debug("Error writing to file");
@@ -202,7 +202,7 @@
 		try {
 			d = 2;
 			outp.writeByte((byte)d);
-			data = ch.getWayPoint().length()+ch.getCacheName().length()+ch.getCacheOwner().length()+ch.getHard().length()+ch.getTerrain().length()+ch.getCacheSize().length()+27;
+			data = ch.getWayPoint().length()+ch.getCacheName().length()+ch.getCacheOwner().length()+ch.getHard().length()+ch.getTerrain().length()+CacheSize.cw2ExportString(ch.getCacheSize()).length()+27;
 			writeIntBinary(outp, data);
 			latlon = Common.parseDouble(lon);
 			latlon *=100000;
@@ -224,7 +224,7 @@
 			outp.writeBytes("/");
 			outp.writeBytes(ch.getTerrain());
 			outp.writeBytes(" - ");
-			outp.writeBytes(ch.getCacheSize());
+			outp.writeBytes(CacheSize.cw2ExportString(ch.getCacheSize()));
 			d = 0;
 			outp.writeByte((byte)d);
 		} catch (IOException e) {



From engywuck at mail.berlios.de  Wed May 13 08:39:04 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Wed, 13 May 2009 08:39:04 +0200
Subject: [Cachewolf-svn] r1800 - trunk/src/CacheWolf
Message-ID: <200905130639.n4D6d4en014212@sheep.berlios.de>

Author: engywuck
Date: 2009-05-13 08:39:01 +0200 (Wed, 13 May 2009)
New Revision: 1800

Modified:
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/CacheHolderDetail.java
   trunk/src/CacheWolf/Profile.java
Log:
Using Version No 3 to prevent version mashup.

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-12 19:43:10 UTC (rev 1799)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-13 06:39:01 UTC (rev 1800)
@@ -267,7 +267,7 @@
 		            if (start > -1 && end > -1)
 			            setAttributesNo(Convert.parseLong(xmlString.substring(start + 1, end)));
 	            }
-            } else if (version == 2) {
+            } else if (version == 3 || version == 2) {
 	            start = xmlString.indexOf('"');
 	            end = xmlString.indexOf('"', start + 1);
 	            setCacheName(SafeXML.cleanback(xmlString.substring(start + 1, end)));

Modified: trunk/src/CacheWolf/CacheHolderDetail.java
===================================================================
--- trunk/src/CacheWolf/CacheHolderDetail.java	2009-05-12 19:43:10 UTC (rev 1799)
+++ trunk/src/CacheWolf/CacheHolderDetail.java	2009-05-13 06:39:01 UTC (rev 1800)
@@ -318,7 +318,7 @@
 				if(getParent().getWayPoint().length()>0){
 				  detfile.print("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\r\n");
 				  detfile.print("<CACHEDETAILS>\r\n");
-				  detfile.print("<VERSION value = \"2\"/>\n");
+				  detfile.print("<VERSION value = \"3\"/>\n");
 				  detfile.print("<DETAILS><![CDATA["+LongDescription+"]]></DETAILS>\r\n");
 				  detfile.print("<COUNTRY><![CDATA["+Country+"]]></COUNTRY>\n");
 				  detfile.print("<STATE><![CDATA["+State+"]]></STATE>\n");

Modified: trunk/src/CacheWolf/Profile.java
===================================================================
--- trunk/src/CacheWolf/Profile.java	2009-05-12 19:43:10 UTC (rev 1799)
+++ trunk/src/CacheWolf/Profile.java	2009-05-13 06:39:01 UTC (rev 1800)
@@ -180,7 +180,7 @@
 		try{
 			detfile.print("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n");
 			detfile.print("<CACHELIST format=\"decimal\">\n");
-			detfile.print("    <VERSION value = \"2\"/>\n");
+			detfile.print("    <VERSION value = \"3\"/>\n");
 			if (savedCentre.isValid())
 				detfile.print("    <CENTRE lat=\""+savedCentre.latDec+"\" lon=\""+savedCentre.lonDec+"\"/>\n");
 			if(getLast_sync_opencaching() == null || getLast_sync_opencaching().endsWith("null") || getLast_sync_opencaching().equals("")){



From engywuck at mail.berlios.de  Wed May 13 19:00:20 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Wed, 13 May 2009 19:00:20 +0200
Subject: [Cachewolf-svn] r1801 - in trunk: res_noewe/languages resources
	src/CacheWolf src/exp
Message-ID: <200905131700.n4DH0Kb6029512@sheep.berlios.de>

Author: engywuck
Date: 2009-05-13 18:59:54 +0200 (Wed, 13 May 2009)
New Revision: 1801

Added:
   trunk/resources/notes_exist.png
   trunk/resources/solver_exists.png
Modified:
   trunk/res_noewe/languages/DE.cfg
   trunk/res_noewe/languages/EN.cfg
   trunk/res_noewe/languages/FR.cfg
   trunk/res_noewe/languages/NL.cfg
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/CacheHolderDetail.java
   trunk/src/CacheWolf/DetailsPanel.java
   trunk/src/CacheWolf/MainMenu.java
   trunk/src/CacheWolf/MainTab.java
   trunk/src/CacheWolf/NotesScreen.java
   trunk/src/CacheWolf/Preferences.java
   trunk/src/CacheWolf/PreferencesScreen.java
   trunk/src/CacheWolf/SearchCache.java
   trunk/src/CacheWolf/ShowCacheInBrowser.java
   trunk/src/CacheWolf/SolverPanel.java
   trunk/src/CacheWolf/myTableModel.java
   trunk/src/exp/HTMLExporter.java
   trunk/src/exp/TPLExporter.java
Log:
Introducing new columns for list: You can now display in the list if the cache has solver data or notes.

Modified: trunk/res_noewe/languages/DE.cfg
===================================================================
--- trunk/res_noewe/languages/DE.cfg	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/res_noewe/languages/DE.cfg	2009-05-13 16:59:54 UTC (rev 1801)
@@ -109,6 +109,7 @@
 		217=Spider alle Funde von geocaching.com
 		218=Auch in Beschreibung/Notizen
 		219=Suche...
+		220=Pr%fcfe Notizen und L%f6ser
 		300=Type:
 		301=Gr%f6%dfe:
 		302=Wegpunkt:
@@ -314,6 +315,10 @@
 		1035=M%f6gliche Ursache:
 		1036=Ein Fehler in der Ewe-VM
 		1037=Bitte Geduld bis zu einem Update
+		1038=L
+		1039=L%f6ser vorhanden
+		1040=N
+		1041=Notiz vorhanden
 		1100=Profile
 		1105=Suchen
 		1106=Profil w%e4hlen oder Neu

Modified: trunk/res_noewe/languages/EN.cfg
===================================================================
--- trunk/res_noewe/languages/EN.cfg	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/res_noewe/languages/EN.cfg	2009-05-13 16:59:54 UTC (rev 1801)
@@ -109,6 +109,7 @@
 		217=Spider all finds from geocaching.com
 		218=Also in description/notes
 		219=Searching...
+		220=Check notes and solver
 		300=Type:
 		301=Size:
 		302=Waypoint:
@@ -314,6 +315,10 @@
 		1035=Possible reason:
 		1036=A bug in ewe VM, please be
 		1037=patient for an update
+		1038=S
+		1039=Solver exists
+		1040=N
+		1041=Notes exist
 		1100=Profiles
 		1105=Browse
 		1106=Choose profile or New

Modified: trunk/res_noewe/languages/FR.cfg
===================================================================
--- trunk/res_noewe/languages/FR.cfg	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/res_noewe/languages/FR.cfg	2009-05-13 16:59:54 UTC (rev 1801)
@@ -106,6 +106,7 @@
 		214=Nouveau waypoint
 		218=Aussi dans description/notes
 		219=Cherchant...
+		220=V%e9rifier notes et resoudeur
 		300=Type:
 		301=Gabarit:
 		302=Waypoint:
@@ -303,6 +304,10 @@
 		1035=Cause possible:
 		1036=Un bogue dans le Ewe-VM
 		1037=Merci de patientier pour un mise %e0 jour
+		1038=R
+		1039=Resoudeur existe
+		1040=N
+		1041=Note existe
 		1100=Profils
 		1105=Chercher
 		1106=Choiser profil ou cr%e9er-un 

Modified: trunk/res_noewe/languages/NL.cfg
===================================================================
--- trunk/res_noewe/languages/NL.cfg	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/res_noewe/languages/NL.cfg	2009-05-13 16:59:54 UTC (rev 1801)
@@ -98,6 +98,7 @@
 		214=Nieuwe Waypoint
 		218=Ook in opmerkingen/beschrijving
 		219=Zoeken...
+		220=Onderzoek opmerkingen en oplosser
 		300=Type:
 		301=Grote:
 		302=Waypoint:
@@ -278,6 +279,10 @@
 		1035=Possible reason:
 		1036=A bug in ewe VM, please be
 		1037=patient for an update
+		1038=S
+		1039=Oplosser bestaat
+		1040=N
+		1041=Opmerkingen bestaan
 		1100=Profielen
 		1105=Bladeren
 		1106=Kies profiel of nieuw.

Added: trunk/resources/notes_exist.png
===================================================================
(Binary files differ)


Property changes on: trunk/resources/notes_exist.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/resources/solver_exists.png
===================================================================
(Binary files differ)


Property changes on: trunk/resources/solver_exists.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-13 16:59:54 UTC (rev 1801)
@@ -127,6 +127,10 @@
 	public CacheHolder mainCache;
 	/** The date this cache was last synced with OC in format yyyyMMddHHmmss */
 	private String lastSyncOC = EMPTY;
+	/** True if cache has solver entry */
+	private boolean hasSolver = false;
+	/** True if a note is entered for the cache */
+	private boolean hasNote = false;
 	public CacheHolderDetail details = null;
 	/** When sorting the cacheDB this field is used. The relevant field is copied here and
 	 *  the sort is always done on this field to speed up the sorting process 
@@ -1333,6 +1337,25 @@
 		Global.getProfile().notifyUnsavedChanges(attributesNo != this.attributesNo);		
     	this.attributesNo = attributesNo;
     }
+	
+	public boolean hasSolver() {
+		return hasSolver;
+	}
+	
+	public void setHasSolver(boolean hasSolver) {
+		Global.getProfile().notifyUnsavedChanges(hasSolver != this.hasSolver);		
+		this.hasSolver = hasSolver;
+	}
 
+	public boolean hasNote() {
+		return hasNote;
+	}
+	
+	public void setHasNote(boolean hasNote) {
+		Global.getProfile().notifyUnsavedChanges(hasNote != this.hasNote);		
+		this.hasNote = hasNote;
+	}
+	
+
 }
 

Modified: trunk/src/CacheWolf/CacheHolderDetail.java
===================================================================
--- trunk/src/CacheWolf/CacheHolderDetail.java	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/src/CacheWolf/CacheHolderDetail.java	2009-05-13 16:59:54 UTC (rev 1801)
@@ -23,7 +23,7 @@
 	  public String LastUpdate = CacheHolder.EMPTY;
 	  public String Hints = CacheHolder.EMPTY;
 	  public LogList CacheLogs=new LogList();
-	  public String CacheNotes = CacheHolder.EMPTY;
+	  private String CacheNotes = CacheHolder.EMPTY;
 	  public Vector Images = new Vector();
 	  public Vector ImagesText = new Vector();
 	  public Vector ImagesInfo = new Vector();
@@ -36,7 +36,7 @@
 	  public TravelbugList Travelbugs=new TravelbugList();
 	  //public String Bugs = EMPTY; Superceded by Travelbugs
 	  public String URL = CacheHolder.EMPTY;
-	  public String Solver = CacheHolder.EMPTY;
+	  private String Solver = CacheHolder.EMPTY;
 	  public String OwnLogId = CacheHolder.EMPTY;
 	  public Log OwnLog = null;
 	  public String Country = CacheHolder.EMPTY;
@@ -72,6 +72,26 @@
 	 	Hints = hints;
 	 }
 	 
+	 public void setSolver(String solver) {
+		 if (!Solver.equals(solver)) getParent().setUpdated(true);
+		 getParent().setHasSolver(!solver.trim().equals(""));
+		 Solver = solver;
+	 }
+	 
+	 public String getSolver() {
+		 return this.Solver;
+	 }
+
+	 public void setCacheNotes(String notes) {
+		 if (!CacheNotes.equals(notes)) getParent().setUpdated(true);
+		 getParent().setHasNote(!notes.trim().equals(""));
+		 CacheNotes = notes;
+	 }
+	 
+	 public String getCacheNotes() {
+		 return this.CacheNotes;
+	 }
+	 
 	 public void setCacheLogs(LogList newLogs) {
 		 int size=newLogs.size();
 		 for (int i=size-1; i>=0; i--) { // Loop over all new logs, must start with oldest log
@@ -123,7 +143,7 @@
 		  if (newCh.Country.length()>0) this.Country=newCh.Country;
 		  if (newCh.State.length()>0) this.State=newCh.State;
 		  
-		  if (newCh.Solver.length()>0) this.Solver=newCh.Solver;
+		  if (newCh.getSolver().length()>0) this.setSolver(newCh.getSolver());
 	 	return this;
 	  }
 	  
@@ -285,7 +305,7 @@
 				}
 			}
 			ex = new Extractor(text, "<SOLVER><![CDATA[", "]]></SOLVER>", 0, true);
-			Solver=ex.findNext();
+			this.setSolver(ex.findNext());
 		}
 		
 		/**
@@ -376,7 +396,7 @@
 				  //detfile.print("]]></BUGS>\n");
 				  detfile.print(Travelbugs.toXML());
 				  detfile.print("<URL><![CDATA["+URL+"]]></URL>\r\n");
-				  detfile.print("<SOLVER><![CDATA["+Solver+"]]></SOLVER>\r\n");
+				  detfile.print("<SOLVER><![CDATA["+getSolver()+"]]></SOLVER>\r\n");
 				  detfile.print(getParent().toXML()); // This will allow restoration of index.xml
 				  detfile.print("</CACHEDETAILS>\n");
 				  Global.getPref().log("Writing file: "+getParent().getWayPoint().toLowerCase() + ".xml");

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/src/CacheWolf/DetailsPanel.java	2009-05-13 16:59:54 UTC (rev 1801)
@@ -214,7 +214,7 @@
 		lblTerr.setText((ch.getTerrain().length()>0) ? (MyLocale.getMsg(1001,"T")+": "+ch.getTerrain()) : "");
 		lblDiff.setText((ch.getHard().length()>0)    ? (MyLocale.getMsg(1000,"D")+": "+ch.getHard()) : ""); 
 
-		if(isBigScreen)	mNotes.setText(ch.getExistingDetails().CacheNotes);
+		if(isBigScreen)	mNotes.setText(ch.getExistingDetails().getCacheNotes());
 	}
 	
 	
@@ -332,7 +332,7 @@
 				dirty_notes=true; // TODO I think this is redundant, because the notes are saved seperately by the notes screen itself
 				NotesScreen nsc = new NotesScreen(thisCache.getCacheDetails(true));
 				nsc.execute(this.getFrame(), Gui.CENTER_FRAME);
-				if(isBigScreen) mNotes.setText(thisCache.getCacheDetails(true).CacheNotes);
+				if(isBigScreen) mNotes.setText(thisCache.getCacheDetails(true).getCacheNotes());
 			}
 			else if(ev.target == btnShowMap){
 				Global.mainTab.SwitchToMovingMap(thisCache.pos, true);
@@ -362,14 +362,14 @@
 			}
 			else if (ev.target == btnAddDateTime){
 				dirty_notes=true;
-				String note = thisCache.getCacheDetails(true).CacheNotes;
+				String note = thisCache.getCacheDetails(true).getCacheNotes();
 				Time dtm = new Time();
 				dtm.getTime();
 				dtm.setFormat("E dd.MM.yyyy '/' HH:mm");
 				if(note.length() > 0)	note = note + "\n" + dtm.toString();
 				else 	note = note + dtm.toString();
 				note = note + "\n";
-				thisCache.getCacheDetails(true).CacheNotes = note;
+				thisCache.getCacheDetails(true).setCacheNotes(note);
 				thisCache.save();
 			}
 			else if (ev.target == btnAddPicture){

Modified: trunk/src/CacheWolf/MainMenu.java
===================================================================
--- trunk/src/CacheWolf/MainMenu.java	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/src/CacheWolf/MainMenu.java	2009-05-13 16:59:54 UTC (rev 1801)
@@ -31,7 +31,7 @@
 	private MenuItem exportOZI, exportKML, exportTPL, exportExplorist;
 	private MenuItem filtCreate, filtClear, filtInvert, filtSelected, filtNonSelected, filtBlack, filtApply;
 	private MenuItem exportLOC, exportGPS, mnuSeparator;
-	private MenuItem orgNewWP, orgCopy, orgMove, orgDelete,orgRebuild;
+	private MenuItem orgNewWP, orgCopy, orgMove, orgDelete,orgRebuild,orgCheckNotesAndSolver;
 	public MenuItem cacheTour,orgTravelbugs, mnuForceLogin;
 	private MenuItem mnuNewProfile, mnuOpenProfile, mnuEditCenter;
 	private Form father;
@@ -196,17 +196,18 @@
 		///////////////////////////////////////////////////////////////////////
 		// Create the "Organise" pulldown menu
 		///////////////////////////////////////////////////////////////////////
-		MenuItem[] organiseMenuItems=new MenuItem[9];
+		MenuItem[] organiseMenuItems=new MenuItem[10];
 		organiseMenuItems[0] = orgNewWP = new MenuItem(MyLocale.getMsg(214,"New Waypoint"));
 		organiseMenuItems[1] = mnuSeparator;
 		organiseMenuItems[2] = orgCopy  = new MenuItem(MyLocale.getMsg(141,"Copy")); 
 		organiseMenuItems[3] = orgMove  = new MenuItem(MyLocale.getMsg(142,"Move")); 
 		organiseMenuItems[4] = orgDelete   = new MenuItem(MyLocale.getMsg(143,"Delete"));
 		organiseMenuItems[5] = orgRebuild   = new MenuItem(MyLocale.getMsg(208,"Rebuild Index"));
-		organiseMenuItems[6] = mnuSeparator;
-		organiseMenuItems[7] = orgTravelbugs = new MenuItem(MyLocale.getMsg(139,"Manage travelbugs"));
+		organiseMenuItems[6] = orgCheckNotesAndSolver = new MenuItem(MyLocale.getMsg(220,"Rebuild Index"));
+		organiseMenuItems[7] = mnuSeparator;
+		organiseMenuItems[8] = orgTravelbugs = new MenuItem(MyLocale.getMsg(139,"Manage travelbugs"));
 		cacheTour = new MenuItem(MyLocale.getMsg(198,"Cachetour"));
-		organiseMenuItems[8] = cacheTour;
+		organiseMenuItems[9] = cacheTour;
 		this.addMenu(new PullDownMenu(MyLocale.getMsg(140,"Organise"),new Menu(organiseMenuItems,null)));
 
 		///////////////////////////////////////////////////////////////////////
@@ -616,6 +617,21 @@
 				rb.rebuild();
 				tbp.refreshTable();
 			}
+			if(mev.selectedItem == orgCheckNotesAndSolver){
+				// Checking every cache if notes or solver data exist
+				CWProgressBar cwp = new CWProgressBar(MyLocale.getMsg(219,"Searching..."), 0, cacheDB.size(), true);
+				cwp.exec();
+				cwp.allowExit(true);
+				for(int i = 0;i < cacheDB.size();i++){
+					cwp.setPosition(i);
+					CacheHolder ch = cacheDB.get(i);
+					ch.setHasNote(!ch.getFreshDetails().getCacheNotes().equals(""));
+					ch.setHasSolver(!ch.getFreshDetails().getSolver().equals(""));
+					if (cwp.isClosed()) break;
+				} // for
+				cwp.exit(0);
+				tbp.refreshTable();
+			}
 			if(mev.selectedItem == orgTravelbugs){
 				TravelbugJourneyScreen tbs=new TravelbugJourneyScreen();
 				tbs.setPreferredSize(800,600);

Modified: trunk/src/CacheWolf/MainTab.java
===================================================================
--- trunk/src/CacheWolf/MainTab.java	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/src/CacheWolf/MainTab.java	2009-05-13 16:59:54 UTC (rev 1801)
@@ -166,9 +166,13 @@
 			if (chD!=null && solverP.isDirty()) {
 				cacheDirty=true;
 				if (chMain==null) {
-					chD.Solver=solverP.getInstructions();
+					boolean oldHasSolver = chD.getParent().hasSolver();
+					chD.setSolver(solverP.getInstructions());
+					if (oldHasSolver != chD.getParent().hasSolver()) tbP.tc.update(true);
 				} else {
-					chMain.getExistingDetails().Solver=solverP.getInstructions();
+					boolean oldHasSolver = chMain.hasSolver();
+					chMain.getExistingDetails().setSolver(solverP.getInstructions());
+					if (oldHasSolver != chMain.hasSolver()) tbP.tc.update(true);
 					chMain.save();//Vm.debug("mainT:SaveCache "+chMain.wayPoint+"/S:"+chMain.Solver);
 					chMain=null;
 				}

Modified: trunk/src/CacheWolf/NotesScreen.java
===================================================================
--- trunk/src/CacheWolf/NotesScreen.java	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/src/CacheWolf/NotesScreen.java	2009-05-13 16:59:54 UTC (rev 1801)
@@ -25,7 +25,7 @@
 		setPreferredSize(Global.getPref().myAppWidth, Global.getPref().myAppHeight);
 		this.resizeOnSIP = true;
 		chD = ch;
-		wayNotes.setText(chD.CacheNotes);
+		wayNotes.setText(chD.getCacheNotes());
 		addLast(sbp.setTag(CellConstants.SPAN, new Dimension(3,1)),CellConstants.STRETCH, (CellConstants.FILL|CellConstants.WEST));
 		titleControls=new CellPanel();
 		titleControls.addNext(addDateTime,CellConstants.HSTRETCH,CellConstants.HFILL);
@@ -46,12 +46,12 @@
 				wayNotes.setText(note);
 			}
 			if(ev.target == btSave){
-				chD.CacheNotes = wayNotes.getText();
+				chD.setCacheNotes(wayNotes.getText());
 				chD.getParent().save();
 				this.close(0);
 			}
 			if(ev.target == cancelBtn){
-				if ( (!chD.CacheNotes.equals(wayNotes.getText())) ) {
+				if ( (!chD.getCacheNotes().equals(wayNotes.getText())) ) {
 					if ( (new MessageBox("Warning", "You will loose any changes made to the notes. Do you want to continue?"
 							, FormBase.YESB|FormBase.NOB)).execute() == FormBase.IDYES) {
 						this.close(0);
@@ -59,10 +59,10 @@
 				} else this.close(0); // no changes -> exit without asking
 			} 
 			if(ev.target == titleOK){
-				if ( (!chD.CacheNotes.equals(wayNotes.getText())) ) {
+				if ( (!chD.getCacheNotes().equals(wayNotes.getText())) ) {
 					if ( (new MessageBox("Warning", "Save changes made to the notes?"
 							, FormBase.YESB|FormBase.NOB)).execute() == FormBase.IDYES) {
-						chD.CacheNotes = wayNotes.getText();
+						chD.setCacheNotes(wayNotes.getText());
 						chD.getParent().save();
 					}
 				}

Modified: trunk/src/CacheWolf/Preferences.java
===================================================================
--- trunk/src/CacheWolf/Preferences.java	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/src/CacheWolf/Preferences.java	2009-05-13 16:59:54 UTC (rev 1801)
@@ -319,7 +319,7 @@
 		else if (name.equals("listview")) {
 			listColMap=atts.getValue("colmap");
 			listColWidth=atts.getValue("colwidths")+",30,30"; // append default values for older versions
-			if((new StringTokenizer(listColWidth,",")).countTokens()<15) listColWidth+=",30,30"; // for older versions
+			if((new StringTokenizer(listColWidth,",")).countTokens()<17) listColWidth+=",30,30"; // for older versions
 		}
 		else if(name.equals("proxy")) {
 			myproxy = atts.getValue("prx");

Modified: trunk/src/CacheWolf/PreferencesScreen.java
===================================================================
--- trunk/src/CacheWolf/PreferencesScreen.java	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/src/CacheWolf/PreferencesScreen.java	2009-05-13 16:59:54 UTC (rev 1801)
@@ -242,7 +242,10 @@
 				MyLocale.getMsg(613,"Bearing"),
 				MyLocale.getMsg(635,"Size"),
 				MyLocale.getMsg(636,"OC Empfehlungen"),
-				MyLocale.getMsg(637,"OC Index")},pref.listColMap),MyLocale.getMsg(595,"List"),null);
+				MyLocale.getMsg(637,"OC Index"),
+				MyLocale.getMsg(1039,"Solver exists"),
+				MyLocale.getMsg(1041,"Note exists"),
+				},pref.listColMap),MyLocale.getMsg(595,"List"),null);
 
 		mTab.addCard(tccBugs=new TableColumnChooser(new String[] {
 				MyLocale.getMsg(6000,"Guid"),

Modified: trunk/src/CacheWolf/SearchCache.java
===================================================================
--- trunk/src/CacheWolf/SearchCache.java	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/src/CacheWolf/SearchCache.java	2009-05-13 16:59:54 UTC (rev 1801)
@@ -48,7 +48,7 @@
 				   ch.getCacheStatus().toUpperCase().indexOf(searchStr)<0 &&
 				   (! searchInDescriptionAndNotes || 
 					ch.getExistingDetails().LongDescription.toUpperCase().indexOf(searchStr)<0 &&
-					ch.getExistingDetails().CacheNotes.toUpperCase().indexOf(searchStr)<0)){
+					ch.getExistingDetails().getCacheNotes().toUpperCase().indexOf(searchStr)<0)){
 					ch.is_flaged = false;
 				} else
 					ch.is_flaged=true;

Modified: trunk/src/CacheWolf/ShowCacheInBrowser.java
===================================================================
--- trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-05-13 16:59:54 UTC (rev 1801)
@@ -111,8 +111,8 @@
 					tpl.setParam("DATE", chD.getDateHidden());
 					tpl.setParam("URL", chD.getExistingDetails().URL);
 					if (chD.getExistingDetails().Travelbugs.size()>0) tpl.setParam("BUGS",chD.getExistingDetails().Travelbugs.toHtml());
-					if (chD.getExistingDetails().CacheNotes!=null && chD.getExistingDetails().CacheNotes.trim().length()>0) tpl.setParam("NOTES", STRreplace.replace(chD.getExistingDetails().CacheNotes,"\n","<br/>\n"));
-					if (chD.getExistingDetails().Solver!=null && chD.getExistingDetails().Solver.trim().length()>0) tpl.setParam("SOLVER", STRreplace.replace(chD.getExistingDetails().Solver,"\n","<br/>\n"));
+					if (chD.getExistingDetails().getCacheNotes().trim().length()>0) tpl.setParam("NOTES", STRreplace.replace(chD.getExistingDetails().getCacheNotes(),"\n","<br/>\n"));
+					if (chD.getExistingDetails().getSolver()!=null && chD.getExistingDetails().getSolver().trim().length()>0) tpl.setParam("SOLVER", STRreplace.replace(chD.getExistingDetails().getSolver(),"\n","<br/>\n"));
 					// Look for images
 					
 					StringBuffer s=new StringBuffer(chD.getExistingDetails().LongDescription.length());

Modified: trunk/src/CacheWolf/SolverPanel.java
===================================================================
--- trunk/src/CacheWolf/SolverPanel.java	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/src/CacheWolf/SolverPanel.java	2009-05-13 16:59:54 UTC (rev 1801)
@@ -53,7 +53,7 @@
 	 */
 	public void setInstructions(CacheHolder pCh) {
 		if (pCh != null) {
-	        this.setInstructions(pCh.getFreshDetails().Solver);
+	        this.setInstructions(pCh.getFreshDetails().getSolver());
 	        if (!pCh.hasSameMainCache(ch)) {
 		        this.clearOutput();
 	        }

Modified: trunk/src/CacheWolf/myTableModel.java
===================================================================
--- trunk/src/CacheWolf/myTableModel.java	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/src/CacheWolf/myTableModel.java	2009-05-13 16:59:54 UTC (rev 1801)
@@ -14,7 +14,6 @@
 */
 public class myTableModel extends TableModel{
 	
-	public static final int MAXCOLUMNS=14;
 	// Colors for Cache status (BG unless otherwise stated)
 	private static final Color COLOR_FLAGED		= new Color(255,255,0);
 	private static final Color COLOR_FOUND		= new Color(152,251,152);
@@ -33,7 +32,7 @@
 	 * the element j (as per the list below) is visible in column i. 
 	 * [0]TickBox, [1]Type, [2]Distance, [3]Terrain, [4]waypoint, [5]name, [6]coordinates, 
 	 * [7]owner, [8]datehidden, [9]status, [10]distance, [11]bearing, [12] Size, [13] # of OC recommend.
-	 * [14] OC index
+	 * [14] OC index, [15] Solver exists, [16] Note exists
 	 */
 	private int[] colMap;
 	/** The column widths corresponding to the list of columns above */
@@ -42,7 +41,8 @@
 			MyLocale.getMsg(1002,"Waypoint"),"Name",MyLocale.getMsg(1004,"Location"),
 			MyLocale.getMsg(1005,"Owner"),MyLocale.getMsg(1006,"Hidden"),MyLocale.getMsg(1007,"Status"),
 			MyLocale.getMsg(1008,"Dist"),MyLocale.getMsg(1009,"Bear"),MyLocale.getMsg(1017,"S"),
-			MyLocale.getMsg(1026,"#Rec"),MyLocale.getMsg(1027,"OC-IDX")};
+			MyLocale.getMsg(1026,"#Rec"),MyLocale.getMsg(1027,"OC-IDX"),MyLocale.getMsg(1038,"S"),
+			MyLocale.getMsg(1040,"N")};
 	
 	private static Image noFindLogs[] = new Image[4];
 	public static mImage red, blue, yellow, skull; // green
@@ -52,11 +52,12 @@
 	private int sortedBy = -1;
 	private FontMetrics fm;
 //	private mImage picSizeMicro,picSizeSmall,picSizeReg,picSizeLarge,picSizeVLarge,picSizeNonPhysical;
+	private mImage picHasSolver,picHasNotes;
 	private mImage[] sizePics = new mImage[CacheSize.CW_TOTAL_SIZE_IMAGES];
 	/** This is the modifier (Shift & Control key status) for Pen Events
 	 * it is set in myTableControl.onEvent */
 	public int penEventModifiers; 
-	/** The row of the last click where the shift key was pressed */
+	
 //	private int lastRow=-1;
 	private myTableControl tcControl;
 	public boolean showExtraWptInfo=true;
@@ -95,6 +96,8 @@
 			sizePics[i].transparentColor=Color.White;
 		}
 				
+		picHasSolver=new mImage("solver_exists.png"); picHasSolver.transparentColor=Color.White;
+		picHasNotes=new mImage("notes_exist.png"); picHasNotes.transparentColor=Color.White;
 //		updateRows();
 	}
 	
@@ -103,7 +106,7 @@
 	 *
 	 */
 	public void setColumnNamesAndWidths() {
-		colMap=TableColumnChooser.str2Array(Global.getPref().listColMap,0,14,0, -1);
+		colMap=TableColumnChooser.str2Array(Global.getPref().listColMap,0,16,0, -1);
 		colWidth=TableColumnChooser.str2Array(Global.getPref().listColWidth,10,1024,50, colMap.length);
 		numCols=colMap.length;
 		clearCellAdjustments();
@@ -340,14 +343,18 @@
 						if (ch.getWayPoint().startsWith("OC"))
 							return Convert.formatInt(ch.recommendationScore);
 						return null;
+					case 15: // Is solver filled?
+					    if (ch.hasSolver()) return picHasSolver; else return null; 
+					case 16: // Does note exist?
+						if (ch.hasNote()) return picHasNotes; else return null;
 				} // Switch
 			} // if
 		} catch (Exception e) {
 			Global.getPref().log("Ignored Exception in myTableModel.getCellData()", e, true);
-			return null; 
-		}
 		return null;
 	}
+		return null;
+	}
 	
 	public boolean penPressed(Point onTable,Point cell){
 		boolean retval = false;
@@ -444,5 +451,5 @@
 		//super.select(row, col, selectOn);
 		tcControl.cursorTo(row, col, true);
 	}
-	
+		
 }

Modified: trunk/src/exp/HTMLExporter.java
===================================================================
--- trunk/src/exp/HTMLExporter.java	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/src/exp/HTMLExporter.java	2009-05-13 16:59:54 UTC (rev 1801)
@@ -130,7 +130,7 @@
 							if (logIcons.find(icon)<0) logIcons.add(icon); // Add the icon to list of icons to copy to dest directory
 						}
 						page_tpl.setParam("LOGS", sb.toString());
-						page_tpl.setParam("NOTES", STRreplace.replace(det.CacheNotes, "\n","<br>")); 
+						page_tpl.setParam("NOTES", STRreplace.replace(det.getCacheNotes(), "\n","<br>")); 
 						// Cache Images
 						cacheImg.clear();
 						for(int j = 0; j<det.Images.size(); j++){

Modified: trunk/src/exp/TPLExporter.java
===================================================================
--- trunk/src/exp/TPLExporter.java	2009-05-13 06:39:01 UTC (rev 1800)
+++ trunk/src/exp/TPLExporter.java	2009-05-13 16:59:54 UTC (rev 1801)
@@ -216,12 +216,12 @@
 						varParams.put("DESCRIPTION", det.LongDescription);
 						if (myFilter.badChars != null) {
 							varParams.put("NAME", rex.replaceAll(ch.getCacheName()));
-							varParams.put("NOTES", rex.replaceAll(det.CacheNotes));
+							varParams.put("NOTES", rex.replaceAll(det.getCacheNotes()));
 							varParams.put("HINTS", rex.replaceAll(det.Hints));
 							varParams.put("DECRYPTEDHINTS", rex.replaceAll(Common.rot13(det.Hints)));
 						} else {
 							varParams.put("NAME", ch.getCacheName());
-							varParams.put("NOTES", det.CacheNotes);
+							varParams.put("NOTES", det.getCacheNotes());
 							varParams.put("HINTS", det.Hints);
 							varParams.put("DECRYPTEDHINTS", Common.rot13(det.Hints));
 						}



From engywuck at mail.berlios.de  Wed May 13 19:15:36 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Wed, 13 May 2009 19:15:36 +0200
Subject: [Cachewolf-svn] r1802 - trunk/src/CacheWolf
Message-ID: <200905131715.n4DHFa8a011193@sheep.berlios.de>

Author: engywuck
Date: 2009-05-13 19:15:29 +0200 (Wed, 13 May 2009)
New Revision: 1802

Modified:
   trunk/src/CacheWolf/MainMenu.java
Log:
Improvement: Check if cache has notes or solver information has only to be done for main caches.

Modified: trunk/src/CacheWolf/MainMenu.java
===================================================================
--- trunk/src/CacheWolf/MainMenu.java	2009-05-13 16:59:54 UTC (rev 1801)
+++ trunk/src/CacheWolf/MainMenu.java	2009-05-13 17:15:29 UTC (rev 1802)
@@ -625,8 +625,10 @@
 				for(int i = 0;i < cacheDB.size();i++){
 					cwp.setPosition(i);
 					CacheHolder ch = cacheDB.get(i);
-					ch.setHasNote(!ch.getFreshDetails().getCacheNotes().equals(""));
-					ch.setHasSolver(!ch.getFreshDetails().getSolver().equals(""));
+					if (ch.mainCache==null) {
+						ch.setHasNote(!ch.getFreshDetails().getCacheNotes().equals(""));
+						ch.setHasSolver(!ch.getFreshDetails().getSolver().equals(""));
+					}
 					if (cwp.isClosed()) break;
 				} // for
 				cwp.exit(0);



From greiol at mail.berlios.de  Thu May 14 00:12:34 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Thu, 14 May 2009 00:12:34 +0200
Subject: [Cachewolf-svn] r1803 - trunk/src/CacheWolf
Message-ID: <200905132212.n4DMCYgJ017472@sheep.berlios.de>

Author: greiol
Date: 2009-05-14 00:12:33 +0200 (Thu, 14 May 2009)
New Revision: 1803

Modified:
   trunk/src/CacheWolf/CacheSize.java
Log:
fixed indenting
added more javadoc
added v2converter

Modified: trunk/src/CacheWolf/CacheSize.java
===================================================================
--- trunk/src/CacheWolf/CacheSize.java	2009-05-13 17:15:29 UTC (rev 1802)
+++ trunk/src/CacheWolf/CacheSize.java	2009-05-13 22:12:33 UTC (rev 1803)
@@ -3,8 +3,8 @@
 public final class CacheSize {
 
 	/*
-	 * internal representation of cache sizes in CacheHolder 
-	 * we just made them up ;-)
+	 * internal representation of cache sizes in CacheHolder we just made them
+	 * up ;-)
 	 */
 	static final protected byte CW_SIZE_NOTCHOSEN = 0;
 	static final protected byte CW_SIZE_OTHER = 1;
@@ -17,8 +17,8 @@
 	static final protected byte CW_SIZE_VIRTUAL = 8;
 
 	/*
-	 * geocaching.com size string as found by analyzing GPX files
-	 * plus OC/TC Very large
+	 * geocaching.com size string as found by analyzing GPX files plus OC/TC
+	 * Very large
 	 */
 	static final protected String GC_SIZE_MICRO = "Micro";
 	static final protected String GC_SIZE_SMALL = "Small";
@@ -31,8 +31,8 @@
 	static final protected String OCTC_SIZE_NONE = "None";
 
 	/*
-	 * OpenCaching Size IDs
-	 * see http://oc-server.svn.sourceforge.net/viewvc/oc-server/doc/sql/static-data/data.sql?view=markup
+	 * OpenCaching Size IDs see
+	 * http://oc-server.svn.sourceforge.net/viewvc/oc-server/doc/sql/static-data/data.sql?view=markup
 	 */
 	static final protected String OC_SIZE_OTHER = "1";
 	static final protected String OC_SIZE_MICRO = "2";
@@ -41,10 +41,9 @@
 	static final protected String OC_SIZE_LARGE = "5";
 	static final protected String OC_SIZE_VERYLARGE = "6";
 	static final protected String OC_SIZE_NONE = "7";
-	
+
 	/*
-	 * TerraCaching Size IDs
-	 * taken from old GPXimporter (?? reliable source ??)
+	 * TerraCaching Size IDs taken from old GPXimporter (?? reliable source ??)
 	 */
 	static final protected String TC_SIZE_MICRO = "1";
 	static final protected String TC_SIZE_MEDIUM = "2";
@@ -56,16 +55,22 @@
 	 * images to show in CW index panel we use less images than sizes since all
 	 * non physical caches are represented by the same symbol
 	 */
+	/** GUI image for micro caches */
 	static final protected String CW_GUIIMG_MICRO = "sizeMicro.png";
+	/** GUI image for small caches */
 	static final protected String CW_GUIIMG_SMALL = "sizeSmall.png";
+	/** GUI image for regular / normal caches */
 	static final protected String CW_GUIIMG_NORMAL = "sizeReg.png";
+	/** GUI image for large caches */
 	static final protected String CW_GUIIMG_LARGE = "sizeLarge.png";
-	static final protected String CW_GUIIMG_NONPHYSICAL = "sizeNonPhysical.png"; 
+	/** GUI image for non physical caches */
+	static final protected String CW_GUIIMG_NONPHYSICAL = "sizeNonPhysical.png";
+	/** GUI image for very large caches */
 	static final protected String CW_GUIIMG_VERYLARGE = "sizeVLarge.png";
-	
+
 	/*
-	 * IDs for the sizePics[] array in TableModel
-	 * therefore they must start with 0 and be consecutive
+	 * IDs for the sizePics[] array in TableModel therefore they must start with
+	 * 0 and be consecutive
 	 */
 	static final protected byte CW_GUIIMGID_MICRO = 0;
 	static final protected byte CW_GUIIMGID_SMALL = 1;
@@ -73,24 +78,25 @@
 	static final protected byte CW_GUIIMGID_LARGE = 3;
 	static final protected byte CW_GUIIMGID_NONPHYSICAL = 4;
 	static final protected byte CW_GUIIMGID_VERYLARGE = 5;
-	
+
 	/*
-	 * total number of different size images
-	 * will be used to det the dimension of sizePics[] array in TableModel
+	 * total number of different size images will be used to det the dimension
+	 * of sizePics[] array in TableModel
 	 */
 	static final protected byte CW_TOTAL_SIZE_IMAGES = 6;
-	
-	
+
 	/*
 	 * bit masks to be used with the filter function
 	 */
-	static final protected byte CW_FILTER_MICRO = 0x01<<0;
-	static final protected byte CW_FILTER_SMALL = 0x01<<1;
-	static final protected byte CW_FILTER_NORMAL = 0x01<<2;
-	static final protected byte CW_FILTER_LARGE = 0x01<<3;
-	static final protected byte CW_FILTER_VERYLARGE = 0x01<<4;
-	static final protected byte CW_FILTER_NONPHYSICAL = 0x01<<5;
-	static final protected byte CW_FILTER_ALL = CW_FILTER_MICRO|CW_FILTER_SMALL|CW_FILTER_NORMAL|CW_FILTER_LARGE|CW_FILTER_NONPHYSICAL|CW_FILTER_VERYLARGE;
+	static final protected byte CW_FILTER_MICRO = 0x01 << 0;
+	static final protected byte CW_FILTER_SMALL = 0x01 << 1;
+	static final protected byte CW_FILTER_NORMAL = 0x01 << 2;
+	static final protected byte CW_FILTER_LARGE = 0x01 << 3;
+	static final protected byte CW_FILTER_VERYLARGE = 0x01 << 4;
+	static final protected byte CW_FILTER_NONPHYSICAL = 0x01 << 5;
+	static final protected byte CW_FILTER_ALL = CW_FILTER_MICRO
+			| CW_FILTER_SMALL | CW_FILTER_NORMAL | CW_FILTER_LARGE
+			| CW_FILTER_NONPHYSICAL | CW_FILTER_VERYLARGE;
 
 	/**
 	 * the constructor does nothing
@@ -98,25 +104,33 @@
 	public CacheSize() {
 		// do nothing
 	}
-	
+
 	/**
-	 * map filenames of images for the different sizes to the ids used
-	 * array index for sizePics[] in TableModel
-	 * @param id size identifier matching the CW_GUIIMGID_ constants
+	 * map filenames of images for the different sizes to the ids used array
+	 * index for sizePics[] in TableModel
+	 * 
+	 * @param id
+	 *            size identifier matching the CW_GUIIMGID_ constants
 	 * @return filenam of image to be displayed for id
-	 * @throws IllegalArgumentException if there is no image associated to the id
+	 * @throws IllegalArgumentException
+	 *             if there is no image associated to the id
 	 */
 	public static String sizeImageForId(byte id) {
-		switch(id) {
-		case CW_GUIIMGID_MICRO: return CW_GUIIMG_MICRO;
-		case CW_GUIIMGID_SMALL: return CW_GUIIMG_SMALL;
-		case CW_GUIIMGID_NORMAL: return CW_GUIIMG_NORMAL;
-		case CW_GUIIMGID_LARGE: return CW_GUIIMG_LARGE;
-		case CW_GUIIMGID_NONPHYSICAL: return CW_GUIIMG_NONPHYSICAL;
-		case CW_GUIIMGID_VERYLARGE: return CW_GUIIMG_VERYLARGE;
-		default:
-			throw (new IllegalArgumentException("unmatched argument " + id
-					+ " in CacheSize cw2ExportString()"));			
+		switch (id) {
+			case CW_GUIIMGID_MICRO:
+				return CW_GUIIMG_MICRO;
+			case CW_GUIIMGID_SMALL:
+				return CW_GUIIMG_SMALL;
+			case CW_GUIIMGID_NORMAL:
+				return CW_GUIIMG_NORMAL;
+			case CW_GUIIMGID_LARGE:
+				return CW_GUIIMG_LARGE;
+			case CW_GUIIMGID_NONPHYSICAL:
+				return CW_GUIIMG_NONPHYSICAL;
+			case CW_GUIIMGID_VERYLARGE:
+				return CW_GUIIMG_VERYLARGE;
+			default:
+				throw (new IllegalArgumentException("unmatched argument " + id + " in CacheSize cw2ExportString()"));
 		}
 	}
 
@@ -132,32 +146,32 @@
 	 */
 	public static String cw2ExportString(byte size) {
 		switch (size) {
-		case CW_SIZE_MICRO:
-			return GC_SIZE_MICRO;
-		case CW_SIZE_SMALL:
-			return GC_SIZE_SMALL;
-		case CW_SIZE_REGULAR:
-			return GC_SIZE_REGULAR;
-		case CW_SIZE_LARGE:
-			return GC_SIZE_LARGE;
-		case CW_SIZE_NOTCHOSEN:
-			return GC_SIZE_NOTCHOSEN;
-		case CW_SIZE_OTHER:
-			return GC_SIZE_OTHER;
-		case CW_SIZE_VIRTUAL:
-			return GC_SIZE_VIRTUAL;
-		case CW_SIZE_VERYLARGE:
-			return OCTC_SIZE_VERYLARGE;
-		case CW_SIZE_NONE:
-			return OCTC_SIZE_NONE;
-		default:
-			throw (new IllegalArgumentException("unmatched argument " + size
-					+ " in CacheSize cw2ExportString()"));
+			case CW_SIZE_MICRO:
+				return GC_SIZE_MICRO;
+			case CW_SIZE_SMALL:
+				return GC_SIZE_SMALL;
+			case CW_SIZE_REGULAR:
+				return GC_SIZE_REGULAR;
+			case CW_SIZE_LARGE:
+				return GC_SIZE_LARGE;
+			case CW_SIZE_NOTCHOSEN:
+				return GC_SIZE_NOTCHOSEN;
+			case CW_SIZE_OTHER:
+				return GC_SIZE_OTHER;
+			case CW_SIZE_VIRTUAL:
+				return GC_SIZE_VIRTUAL;
+			case CW_SIZE_VERYLARGE:
+				return OCTC_SIZE_VERYLARGE;
+			case CW_SIZE_NONE:
+				return OCTC_SIZE_NONE;
+			default:
+				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize cw2ExportString()"));
 		}
 	}
 
 	/**
-	 * convert the cache size information from a TerraCaching GPX import to internal representation
+	 * convert the cache size information from a TerraCaching GPX import to
+	 * internal representation
 	 * 
 	 * @param tcstring
 	 *            size information extracted from a TC GPX inport
@@ -179,13 +193,13 @@
 		} else if (tcstring.equals(TC_SIZE_VERYLARGE)) {
 			return CW_SIZE_VERYLARGE;
 		} else {
-			throw (new IllegalArgumentException("unmatched argument "
-					+ tcstring + " in CacheSize tcGpxString2Cw()"));
+			throw (new IllegalArgumentException("unmatched argument " + tcstring + " in CacheSize tcGpxString2Cw()"));
 		}
 	}
-	
+
 	/**
-	 * convert the cache size information from a GC GPX import to internal representation
+	 * convert the cache size information from a GC GPX import to internal
+	 * representation
 	 * 
 	 * @param gcstring
 	 *            size information extracted from a GPX inport
@@ -211,8 +225,7 @@
 		} else if (gcstring.equals(GC_SIZE_VIRTUAL)) {
 			return CW_SIZE_VIRTUAL;
 		} else {
-			throw (new IllegalArgumentException("unmatched argument "
-					+ gcstring + " in CacheSize gcGpxString2Cw()"));
+			throw (new IllegalArgumentException("unmatched argument " + gcstring + " in CacheSize gcGpxString2Cw()"));
 		}
 	}
 
@@ -258,49 +271,49 @@
 		} else if (ocxmlstring.equals(OC_SIZE_NONE)) {
 			return CW_SIZE_NOTCHOSEN;
 		} else {
-			throw (new IllegalArgumentException("unmatched argument "
-					+ ocxmlstring + " in CacheSize ocXmlString2Cw()"));
+			throw (new IllegalArgumentException("unmatched argument " + ocxmlstring + " in CacheSize ocXmlString2Cw()"));
 		}
 	}
 
 	/**
 	 * get name of the image to be displayed in CW index panel
 	 * 
-	 * @param size CW internal representation of cache size
+	 * @param size
+	 *            CW internal representation of cache size
 	 * @return filename of image to be displayed in main panel as size icon
 	 * @throws IllegalArgumentException
 	 *             if size can not be mapped
 	 */
 	public static byte guiSizeImageId(byte size) {
 		switch (size) {
-		case CW_SIZE_MICRO:
-			return CW_GUIIMGID_MICRO;
-		case CW_SIZE_SMALL:
-			return CW_GUIIMGID_SMALL;
-		case CW_SIZE_REGULAR:
-			return CW_GUIIMGID_NORMAL;
-		case CW_SIZE_LARGE:
-			return CW_GUIIMGID_LARGE;
-		case CW_SIZE_NOTCHOSEN:
-			return CW_GUIIMGID_NONPHYSICAL;
-		case CW_SIZE_OTHER:
-			return CW_GUIIMGID_NONPHYSICAL;
-		case CW_SIZE_VIRTUAL:
-			return CW_GUIIMGID_NONPHYSICAL;
-		case CW_SIZE_VERYLARGE:
-			return CW_GUIIMGID_VERYLARGE;
-		case CW_SIZE_NONE:
-			return CW_GUIIMGID_NONPHYSICAL;
-		default:
-			throw (new IllegalArgumentException("unmatched argument " 
-					+ size + " in CacheSize guiSizeImage()"));
+			case CW_SIZE_MICRO:
+				return CW_GUIIMGID_MICRO;
+			case CW_SIZE_SMALL:
+				return CW_GUIIMGID_SMALL;
+			case CW_SIZE_REGULAR:
+				return CW_GUIIMGID_NORMAL;
+			case CW_SIZE_LARGE:
+				return CW_GUIIMGID_LARGE;
+			case CW_SIZE_NOTCHOSEN:
+				return CW_GUIIMGID_NONPHYSICAL;
+			case CW_SIZE_OTHER:
+				return CW_GUIIMGID_NONPHYSICAL;
+			case CW_SIZE_VIRTUAL:
+				return CW_GUIIMGID_NONPHYSICAL;
+			case CW_SIZE_VERYLARGE:
+				return CW_GUIIMGID_VERYLARGE;
+			case CW_SIZE_NONE:
+				return CW_GUIIMGID_NONPHYSICAL;
+			default:
+				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize guiSizeImage()"));
 		}
 	}
-	
 
 	/**
 	 * convert an "old style" size string to the new internal representation
-	 * @param v1Size old size string
+	 * 
+	 * @param v1Size
+	 *            old size string
 	 * @return CW internal representation of cache size
 	 * @throws if v1Size can not be mapped
 	 * @deprecated remove once v1 file version compatibility is abandoned
@@ -329,107 +342,121 @@
 		} else if (v1Size.equals(null)) {
 			return CW_SIZE_NOTCHOSEN;
 		} else {
-			throw (new IllegalArgumentException("unmatched argument "
-					+ v1Size + " in v1Converter()"));
+			throw (new IllegalArgumentException("unmatched argument " + v1Size + " in v1Converter()"));
 		}
 	}
 	
+	public static final byte v2Converter(byte v2Size) {
+		switch(v2Size) {
+			case CW_SIZE_MICRO: // fall through
+			case CW_SIZE_SMALL: // fall through
+			case CW_SIZE_REGULAR: // fall through
+			case CW_SIZE_LARGE: // fall through
+			case CW_SIZE_NOTCHOSEN: // fall through
+			case CW_SIZE_OTHER: // fall through
+			case CW_SIZE_VIRTUAL: // fall through
+			case CW_SIZE_NONE: // fall through
+			case CW_SIZE_VERYLARGE: return v2Size;
+			case -1: return CW_SIZE_NOTCHOSEN; // -1 was catch all in v2
+			default:
+				throw (new IllegalArgumentException("unmatched argument " + v2Size + " in v2Converter()"));
+		}
+	}
+
 	/**
 	 * return a bit mask representing the caches size for use in the Filter
 	 * 
-	 * @param size CW internal representation of cache size
+	 * @param size
+	 *            CW internal representation of cache size
 	 * @return a bit mask for the filter function
-	 * @throws IllegalArgumentException if size can not be mapped to a bit mask
+	 * @throws IllegalArgumentException
+	 *             if size can not be mapped to a bit mask
 	 */
-	
+
 	public static byte getFilterPattern(byte size) {
 		switch (size) {
-		case CW_SIZE_MICRO:
-			return CW_FILTER_MICRO;
-		case CW_SIZE_SMALL:
-			return CW_FILTER_SMALL;
-		case CW_SIZE_REGULAR:
-			return CW_FILTER_NORMAL;
-		case CW_SIZE_LARGE:
-			return CW_FILTER_LARGE;
-		case CW_SIZE_NOTCHOSEN:
-			return CW_FILTER_NONPHYSICAL;
-		case CW_SIZE_OTHER:
-			return CW_FILTER_NONPHYSICAL;
-		case CW_SIZE_VIRTUAL:
-			return CW_FILTER_NONPHYSICAL;
-		case CW_SIZE_VERYLARGE:
-			return CW_FILTER_VERYLARGE;
-		case CW_SIZE_NONE:
-			return CW_FILTER_NONPHYSICAL;
-		default:
-			throw (new IllegalArgumentException("unmatched argument " 
-					+ size + " in CacheSize getFilterPattern()"));
+			case CW_SIZE_MICRO:
+				return CW_FILTER_MICRO;
+			case CW_SIZE_SMALL:
+				return CW_FILTER_SMALL;
+			case CW_SIZE_REGULAR:
+				return CW_FILTER_NORMAL;
+			case CW_SIZE_LARGE:
+				return CW_FILTER_LARGE;
+			case CW_SIZE_NOTCHOSEN:
+				return CW_FILTER_NONPHYSICAL;
+			case CW_SIZE_OTHER:
+				return CW_FILTER_NONPHYSICAL;
+			case CW_SIZE_VIRTUAL:
+				return CW_FILTER_NONPHYSICAL;
+			case CW_SIZE_VERYLARGE:
+				return CW_FILTER_VERYLARGE;
+			case CW_SIZE_NONE:
+				return CW_FILTER_NONPHYSICAL;
+			default:
+				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize getFilterPattern()"));
 		}
 	}
-	
+
 	/**
 	 * provides abbreviated representations of CacheSize for compact exporters
 	 * 
-	 * @param size CW internal representation of cache size
-	 * @return a one letter String for cache size 
-	 * @throws IllegalArgumentException  if size can not be mapped
+	 * @param size
+	 *            CW internal representation of cache size
+	 * @return a one letter String for cache size
+	 * @throws IllegalArgumentException
+	 *             if size can not be mapped
 	 */
-	
+
 	public static String getExportShortId(byte size) {
 		switch (size) {
-		case CW_SIZE_MICRO:
-			return "m";
-		case CW_SIZE_SMALL:
-			return "s";
-		case CW_SIZE_REGULAR:
-			return "r";
-		case CW_SIZE_LARGE:
-			return "l";
-		case CW_SIZE_NOTCHOSEN:
-			return "n";
-		case CW_SIZE_OTHER:
-			return "n";
-		case CW_SIZE_VIRTUAL:
-			return "n";
-		case CW_SIZE_VERYLARGE:
-			return "v";
-		case CW_SIZE_NONE:
-			return "n";
-		default:
-			throw (new IllegalArgumentException("unmatched argument " 
-					+ size + " in CacheSize getExportShortId()"));
+			case CW_SIZE_MICRO:
+				return "m";
+			case CW_SIZE_SMALL:
+				return "s";
+			case CW_SIZE_REGULAR:
+				return "r";
+			case CW_SIZE_LARGE:
+				return "l";
+			case CW_SIZE_NOTCHOSEN:
+				return "n";
+			case CW_SIZE_OTHER:
+				return "n";
+			case CW_SIZE_VIRTUAL:
+				return "n";
+			case CW_SIZE_VERYLARGE:
+				return "v";
+			case CW_SIZE_NONE:
+				return "n";
+			default:
+				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize getExportShortId()"));
 		}
 	}
-	
+
 	/**
 	 * generate a string array suitable to be used in DetalsPanel drop down list
+	 * 
 	 * @return strings to be displayed in the DetailsPanel Size DropDown
 	 * @see guiSizeStrings2CwSize
 	 * @see cwSizeId2GuiSizeId
 	 */
-	
+
 	public static String[] guiSizeStrings() {
 		// make sure strings appear in ascending order for CW_SIZE_*
-		String ret[] = new String[] {
-				GC_SIZE_NOTCHOSEN,
-				GC_SIZE_OTHER,
-				GC_SIZE_MICRO,
-				GC_SIZE_SMALL,
-				GC_SIZE_REGULAR,
-				GC_SIZE_LARGE,
-				OCTC_SIZE_VERYLARGE,
-				OCTC_SIZE_NONE,
-				GC_SIZE_VIRTUAL
-		};
+		String ret[] = new String[] { GC_SIZE_NOTCHOSEN, GC_SIZE_OTHER,
+				GC_SIZE_MICRO, GC_SIZE_SMALL, GC_SIZE_REGULAR, GC_SIZE_LARGE,
+				OCTC_SIZE_VERYLARGE, OCTC_SIZE_NONE, GC_SIZE_VIRTUAL };
 		return ret;
 	}
 
 	/**
-	 * map a string chosen from the DetailsPanel Size drop down list back to internal representation
+	 * map a string chosen from the DetailsPanel Size drop down list back to
+	 * internal representation
+	 * 
 	 * @param id
-	 * @return 
-	 * @throws IllegalArgumentException if id can not be mapped 
+	 * @return
+	 * @throws IllegalArgumentException
+	 *             if id can not be mapped
 	 * @see cwSizeId2GuiSizeId
 	 * @see guiSizeStrings
 	 */
@@ -452,34 +479,45 @@
 		} else if (id.equals(GC_SIZE_MICRO)) {
 			return CW_SIZE_MICRO;
 		} else {
-			throw (new IllegalArgumentException("unmatched argument " 
-					+ id + " in guiSizeStrings2CwSize()"));
-		}	
+			throw (new IllegalArgumentException("unmatched argument " + id + " in guiSizeStrings2CwSize()"));
+		}
 	}
-	
+
 	/**
-	 * map internal representation to index used in the the DetailsPanel Size drop down list
-	 * @param id internal id to be mapped
+	 * map internal representation to index used in the the DetailsPanel Size
+	 * drop down list
+	 * 
+	 * @param id
+	 *            internal id to be mapped
 	 * @return index of internal size in array
-	 * @throws IllegalArgumentException if id can not be mapped
+	 * @throws IllegalArgumentException
+	 *             if id can not be mapped
 	 * @see guiSizeStrings2CwSize
 	 * @see cwSizeId2GuiSizeId
 	 */
 	public static int cwSizeId2GuiSizeId(byte id) {
-		switch(id) {
-		case CW_SIZE_NOTCHOSEN: return 0;
-		case CW_SIZE_OTHER: return 1;
-		case CW_SIZE_MICRO: return 2;
-		case CW_SIZE_SMALL: return 3;
-		case CW_SIZE_REGULAR: return 4;
-		case CW_SIZE_LARGE: return 5;
-		case CW_SIZE_VERYLARGE: return 6;
-		case CW_SIZE_NONE: return 7;
-		case CW_SIZE_VIRTUAL: return 8;
+		switch (id) {
+		case CW_SIZE_NOTCHOSEN:
+			return 0;
+		case CW_SIZE_OTHER:
+			return 1;
+		case CW_SIZE_MICRO:
+			return 2;
+		case CW_SIZE_SMALL:
+			return 3;
+		case CW_SIZE_REGULAR:
+			return 4;
+		case CW_SIZE_LARGE:
+			return 5;
+		case CW_SIZE_VERYLARGE:
+			return 6;
+		case CW_SIZE_NONE:
+			return 7;
+		case CW_SIZE_VIRTUAL:
+			return 8;
 		default:
-			throw (new IllegalArgumentException("unmatched argument " 
-					+ id + " in CacheSize ()"));
+			throw (new IllegalArgumentException("unmatched argument " + id + " in CacheSize ()"));
 		}
-		
+
 	}
 }



From engywuck at mail.berlios.de  Thu May 14 19:49:31 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Thu, 14 May 2009 19:49:31 +0200
Subject: [Cachewolf-svn] r1804 - trunk/src/CacheWolf
Message-ID: <200905141749.n4EHnVmr000977@sheep.berlios.de>

Author: engywuck
Date: 2009-05-14 19:49:29 +0200 (Thu, 14 May 2009)
New Revision: 1804

Modified:
   trunk/src/CacheWolf/myTableModel.java
Log:
Using white text colour for archived caches to improve readability.

Modified: trunk/src/CacheWolf/myTableModel.java
===================================================================
--- trunk/src/CacheWolf/myTableModel.java	2009-05-13 22:12:33 UTC (rev 1803)
+++ trunk/src/CacheWolf/myTableModel.java	2009-05-14 17:49:29 UTC (rev 1804)
@@ -209,6 +209,7 @@
 					if (ch.is_archived()) {
 						if (lineColorBG.equals(COLOR_WHITE)) {
 							lineColorBG.set(COLOR_ARCHIVED);
+							ta.foreground = COLOR_WHITE;
 						} else {
 							ta.foreground = COLOR_ARCHIVED;
 						}



From greiol at mail.berlios.de  Thu May 14 23:32:56 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Thu, 14 May 2009 23:32:56 +0200
Subject: [Cachewolf-svn] r1805 - in experiments: . greiol/src/CacheWolf
Message-ID: <200905142132.n4ELWusW010597@sheep.berlios.de>

Author: greiol
Date: 2009-05-14 23:32:51 +0200 (Thu, 14 May 2009)
New Revision: 1805

Added:
   experiments/greiol/
Modified:
   experiments/greiol/src/CacheWolf/CacheHolder.java
   experiments/greiol/src/CacheWolf/CacheSize.java
   experiments/greiol/src/CacheWolf/CacheType.java
   experiments/greiol/src/CacheWolf/CalcPanel.java
   experiments/greiol/src/CacheWolf/DetailsPanel.java
   experiments/greiol/src/CacheWolf/GPXImporter.java
   experiments/greiol/src/CacheWolf/MainTab.java
   experiments/greiol/src/CacheWolf/OCXMLImporter.java
   experiments/greiol/src/CacheWolf/Parser.java
   experiments/greiol/src/CacheWolf/ShowCacheInBrowser.java
Log:
it does not compile yet, but i want a backup

Copied: experiments/greiol (from rev 1804, trunk)

Modified: experiments/greiol/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-14 17:49:29 UTC (rev 1804)
+++ experiments/greiol/src/CacheWolf/CacheHolder.java	2009-05-14 21:32:51 UTC (rev 1805)
@@ -65,7 +65,7 @@
 	/** The size of the cache (as per GC cache sizes Micro, Small, ....) */
 	private byte cacheSize = CacheSize.CW_SIZE_NOTCHOSEN;
 	/** The distance from the centre in km */
-	public double kilom = -1; int bla = 0;
+	public double kilom = -1;
 	public double lastKilom = -2; // Cache last value
 	public int lastMetric = -1; // Cache last metric
 	public String lastDistance = ""; // Cache last distance
@@ -78,7 +78,7 @@
 	/** The terrain rating of the cache from 1 to 5 in .5 incements */
 	private String terrain = EMPTY;
 	/** The cache type (@see CacheType for translation table)  */
-	private byte type = -128; 
+	private byte type = -1; 
 	/** True if the cache has been archived */
 	private boolean archived = false;
 	/** True if the cache is available for searching */
@@ -164,9 +164,11 @@
 		        start = xmlString.indexOf('"');
 		        end = xmlString.indexOf('"', start + 1);
 		        setCacheName(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+		        
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setCacheOwner(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+		        
 		        // Assume coordinates are in decimal format
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
@@ -178,31 +180,39 @@
 		                notDecSep, decSep));
 		        pos = new CWPoint(lat, lon);
 		        LatLon = pos.toString();
+		        
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setDateHidden(xmlString.substring(start + 1, end));
 		        // Convert the US format to YYYY-MM-DD if necessary
 		        if (getDateHidden().indexOf('/') > -1)
 			        setDateHidden(DateFormat.MDY2YMD(getDateHidden()));
+		        
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setWayPoint(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+		        
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setCacheStatus(xmlString.substring(start + 1, end));
+		        
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
-	            setType(Integer.parseInt(xmlString.substring(start + 1, end)));
+	            setType(CacheType.v1Converter((xmlString.substring(start + 1, end))));
+	            
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 	            setHard(CacheHolder.terrHard_OC2GC(xmlString.substring(start + 1, end)));
-		        start = xmlString.indexOf('"', end + 1);
+
+	            start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 	            setTerrain(CacheHolder.terrHard_OC2GC(xmlString.substring(start + 1, end)));
 		        // The next item was 'dirty' but this is no longer used.
-		        start = xmlString.indexOf('"', end + 1);
+
+	            start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setFiltered(xmlString.substring(start + 1, end).equals("true"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        
@@ -211,61 +221,78 @@
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setAvailable(xmlString.substring(start + 1, end).equals("true"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setArchived(xmlString.substring(start + 1, end).equals("true"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setHas_bugs(xmlString.substring(start + 1, end).equals("true"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setBlack(xmlString.substring(start + 1, end).equals("true"));
 		        if (is_black() != Global.getProfile().showBlacklisted())
 			        setFiltered(true);
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setOwned(xmlString.substring(start + 1, end).equals("true"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setFound(xmlString.substring(start + 1, end).equals("true"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setNew(xmlString.substring(start + 1, end).equals("true"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setLog_updated(xmlString.substring(start + 1, end).equals("true"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setUpdated(xmlString.substring(start + 1, end).equals("true"));
 		        // for backwards compatibility set value to true, if it is not in the file
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setHTML(!xmlString.substring(start + 1, end).equals("false"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 	            setNoFindLogs((byte)Convert.toInt(xmlString.substring(start + 1, end)));
-		        start = xmlString.indexOf('"', end + 1);
+
+	            start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setOcCacheID(xmlString.substring(start + 1, end));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setIncomplete(xmlString.substring(start + 1, end).equals("true"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setLastSyncOC(xmlString.substring(start + 1, end));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setNumRecommended(Convert.toInt(xmlString.substring(start + 1, end)));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setNumFoundsSinceRecommendation(Convert.toInt(xmlString.substring(start + 1, end)));
 		        recommendationScore = LogList.getScore(getNumRecommended(),
 		                getNumFoundsSinceRecommendation());
-	            start = xmlString.indexOf('"', end + 1);
+
+		        start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            if (start > -1 && end > -1) {
 		            setAttributesYes(Convert.parseLong(xmlString.substring(start + 1, end)));
 
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		            if (start > -1 && end > -1)
@@ -275,9 +302,11 @@
 	            start = xmlString.indexOf('"');
 	            end = xmlString.indexOf('"', start + 1);
 	            setCacheName(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            setCacheOwner(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+	            
 	            // Assume coordinates are in decimal format
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
@@ -289,32 +318,40 @@
 	                    notDecSep, decSep));
 	            pos = new CWPoint(lat, lon);
 	            LatLon = pos.toString();
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            setDateHidden(xmlString.substring(start + 1, end));
 	            // Convert the US format to YYYY-MM-DD if necessary
 	            if (getDateHidden().indexOf('/') > -1)
 		            setDateHidden(DateFormat.MDY2YMD(getDateHidden()));
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            setWayPoint(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            setCacheStatus(xmlString.substring(start + 1, end));
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            setOcCacheID(xmlString.substring(start + 1, end));
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            setLastSyncOC(xmlString.substring(start + 1, end));
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            setNumRecommended(Convert.toInt(xmlString.substring(start + 1, end)));
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            setNumFoundsSinceRecommendation(Convert.toInt(xmlString.substring(start + 1, end)));
 	            recommendationScore = LogList.getScore(getNumRecommended(),
 	                    getNumFoundsSinceRecommendation());
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 		        if (start > -1 && end > -1) {
@@ -325,12 +362,15 @@
 			        if (start > -1 && end > -1)
 				        setAttributesNo(Convert.parseLong(xmlString.substring(start + 1, end)));
 		        }
+		        
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
-	            this.long2boolFields(Convert.parseLong(xmlString.substring(start + 1, end)));	            
+	            this.long2boolFields(Convert.parseLong(xmlString.substring(start + 1, end)));
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
-	            this.long2byteFields(Convert.parseLong(xmlString.substring(start + 1, end)));	            
+	            this.long2byteFields(Convert.parseLong(xmlString.substring(start + 1, end)));	  
+	            
 	            if (is_black() != Global.getProfile().showBlacklisted())
 		            setFiltered(true);
             }
@@ -1116,8 +1156,8 @@
 	 * Gets the type of cache as integer.
 	 * @return Cache type
 	 */
-	public int getType() {
-		return CacheType.toInt(type);
+	public byte getType() {
+		return type;
     }
 
 	/**
@@ -1125,8 +1165,8 @@
 	 * and byte internally of CacheHolder, some conversion has to be done.
 	 * @param type Cache Type
 	 */
-	public void setType(int type) {
-		byte newType = CacheType.toByte(type);
+	public void setType(byte type) {
+		byte newType = type;
 		Global.getProfile().notifyUnsavedChanges(newType != this.type);		
     	this.type = newType;
     }

Modified: experiments/greiol/src/CacheWolf/CacheSize.java
===================================================================
--- trunk/src/CacheWolf/CacheSize.java	2009-05-14 17:49:29 UTC (rev 1804)
+++ experiments/greiol/src/CacheWolf/CacheSize.java	2009-05-14 21:32:51 UTC (rev 1805)
@@ -6,19 +6,30 @@
 	 * internal representation of cache sizes in CacheHolder we just made them
 	 * up ;-)
 	 */
+	/** container size not chosen */
 	static final protected byte CW_SIZE_NOTCHOSEN = 0;
+	/** container size other */
 	static final protected byte CW_SIZE_OTHER = 1;
+	/** container size micro */
 	static final protected byte CW_SIZE_MICRO = 2;
+	/* container size small */
 	static final protected byte CW_SIZE_SMALL = 3;
+	/** container size regular */
 	static final protected byte CW_SIZE_REGULAR = 4;
+	/** container size large */
 	static final protected byte CW_SIZE_LARGE = 5;
+	/** container size very large */
 	static final protected byte CW_SIZE_VERYLARGE = 6;
+	/** container size none */
 	static final protected byte CW_SIZE_NONE = 7;
+	/** container size virtual */
 	static final protected byte CW_SIZE_VIRTUAL = 8;
+	/** unparsable size or missing size information should throw IllegalArgumentExceptions when found */
+	static final protected byte CW_SIZE_ERROR = -1;
 
 	/*
-	 * geocaching.com size string as found by analyzing GPX files plus OC/TC
-	 * Very large
+	 * geocaching.com size strings as found by analyzing GPX files 
+	 * plus opencaching & terracaching Very large + none
 	 */
 	static final protected String GC_SIZE_MICRO = "Micro";
 	static final protected String GC_SIZE_SMALL = "Small";
@@ -115,7 +126,7 @@
 	 * @throws IllegalArgumentException
 	 *             if there is no image associated to the id
 	 */
-	public static String sizeImageForId(byte id) {
+	public static String sizeImageForId(byte id) throws IllegalArgumentException {
 		switch (id) {
 			case CW_GUIIMGID_MICRO:
 				return CW_GUIIMG_MICRO;
@@ -144,7 +155,7 @@
 	 * @throws IllegalArgumentException
 	 *             if cwsize can not be mapped to a CW_SIZE constant
 	 */
-	public static String cw2ExportString(byte size) {
+	public static String cw2ExportString(byte size) throws IllegalArgumentException {
 		switch (size) {
 			case CW_SIZE_MICRO:
 				return GC_SIZE_MICRO;
@@ -181,7 +192,7 @@
 	 *             (CW_SIZE_*)
 	 */
 
-	public static byte tcGpxString2Cw(String tcstring) {
+	public static byte tcGpxString2Cw(String tcstring) throws IllegalArgumentException {
 		if (tcstring.equals(TC_SIZE_MICRO)) {
 			return CW_SIZE_MICRO;
 		} else if (tcstring.equals(TC_SIZE_MEDIUM)) {
@@ -209,7 +220,7 @@
 	 *             (CW_SIZE_*)
 	 */
 
-	public static byte gcGpxString2Cw(String gcstring) {
+	public static byte gcGpxString2Cw(String gcstring) throws IllegalArgumentException {
 		if (gcstring.equals(GC_SIZE_MICRO)) {
 			return CW_SIZE_MICRO;
 		} else if (gcstring.equals(GC_SIZE_SMALL)) {
@@ -240,7 +251,7 @@
 	 *             if spiderstring can not be mapped to internal representation
 	 *             (CW_SIZE_*)
 	 */
-	public static byte gcSpiderString2Cw(String spiderstring) {
+	public static byte gcSpiderString2Cw(String spiderstring) throws IllegalArgumentException {
 		// at the moment both sources use the same strings
 		return gcGpxString2Cw(spiderstring);
 	}
@@ -255,7 +266,7 @@
 	 * @trows IllegalArgumentException if ocxmlstring can not be mapped to a
 	 *        CW_SIZE_*
 	 */
-	public static byte ocXmlString2Cw(String ocxmlstring) {
+	public static byte ocXmlString2Cw(String ocxmlstring) throws IllegalArgumentException {
 		if (ocxmlstring.equals(OC_SIZE_OTHER)) {
 			return CW_SIZE_OTHER;
 		} else if (ocxmlstring.equals(OC_SIZE_MICRO)) {
@@ -284,7 +295,7 @@
 	 * @throws IllegalArgumentException
 	 *             if size can not be mapped
 	 */
-	public static byte guiSizeImageId(byte size) {
+	public static byte guiSizeImageId(byte size) throws IllegalArgumentException {
 		switch (size) {
 			case CW_SIZE_MICRO:
 				return CW_GUIIMGID_MICRO;
@@ -310,15 +321,15 @@
 	}
 
 	/**
-	 * convert an "old style" size string to the new internal representation
+	 * convert v1 style size string to the new internal representation
 	 * 
 	 * @param v1Size
 	 *            old size string
 	 * @return CW internal representation of cache size
-	 * @throws if v1Size can not be mapped
+	 * @throws IllegalArgumentException if v1Size can not be mapped
 	 * @deprecated remove once v1 file version compatibility is abandoned
 	 */
-	public static final byte v1Converter(String v1Size) {
+	public static final byte v1Converter(String v1Size) throws IllegalArgumentException {
 		if (v1Size.equals(GC_SIZE_MICRO)) {
 			return CW_SIZE_MICRO;
 		} else if (v1Size.equals(GC_SIZE_SMALL)) {
@@ -346,23 +357,6 @@
 		}
 	}
 	
-	public static final byte v2Converter(byte v2Size) {
-		switch(v2Size) {
-			case CW_SIZE_MICRO: // fall through
-			case CW_SIZE_SMALL: // fall through
-			case CW_SIZE_REGULAR: // fall through
-			case CW_SIZE_LARGE: // fall through
-			case CW_SIZE_NOTCHOSEN: // fall through
-			case CW_SIZE_OTHER: // fall through
-			case CW_SIZE_VIRTUAL: // fall through
-			case CW_SIZE_NONE: // fall through
-			case CW_SIZE_VERYLARGE: return v2Size;
-			case -1: return CW_SIZE_NOTCHOSEN; // -1 was catch all in v2
-			default:
-				throw (new IllegalArgumentException("unmatched argument " + v2Size + " in v2Converter()"));
-		}
-	}
-
 	/**
 	 * return a bit mask representing the caches size for use in the Filter
 	 * 
@@ -372,8 +366,7 @@
 	 * @throws IllegalArgumentException
 	 *             if size can not be mapped to a bit mask
 	 */
-
-	public static byte getFilterPattern(byte size) {
+	public static byte getFilterPattern(byte size) throws IllegalArgumentException {
 		switch (size) {
 			case CW_SIZE_MICRO:
 				return CW_FILTER_MICRO;
@@ -408,7 +401,7 @@
 	 *             if size can not be mapped
 	 */
 
-	public static String getExportShortId(byte size) {
+	public static String getExportShortId(byte size) throws IllegalArgumentException {
 		switch (size) {
 			case CW_SIZE_MICRO:
 				return "m";
@@ -440,12 +433,19 @@
 	 * @see guiSizeStrings2CwSize
 	 * @see cwSizeId2GuiSizeId
 	 */
-
 	public static String[] guiSizeStrings() {
 		// make sure strings appear in ascending order for CW_SIZE_*
-		String ret[] = new String[] { GC_SIZE_NOTCHOSEN, GC_SIZE_OTHER,
-				GC_SIZE_MICRO, GC_SIZE_SMALL, GC_SIZE_REGULAR, GC_SIZE_LARGE,
-				OCTC_SIZE_VERYLARGE, OCTC_SIZE_NONE, GC_SIZE_VIRTUAL };
+		String ret[] = new String[] { 
+				GC_SIZE_NOTCHOSEN, 
+				GC_SIZE_OTHER,
+				GC_SIZE_MICRO, 
+				GC_SIZE_SMALL, 
+				GC_SIZE_REGULAR, 
+				GC_SIZE_LARGE,
+				OCTC_SIZE_VERYLARGE, 
+				OCTC_SIZE_NONE, 
+				GC_SIZE_VIRTUAL 
+				};
 		return ret;
 	}
 
@@ -460,7 +460,7 @@
 	 * @see cwSizeId2GuiSizeId
 	 * @see guiSizeStrings
 	 */
-	public static byte guiSizeStrings2CwSize(String id) {
+	public static byte guiSizeStrings2CwSize(String id) throws IllegalArgumentException {
 		// map the strings in guiSizeStrings() back to cw byte types
 		if (id.equals(GC_SIZE_NOTCHOSEN)) {
 			return CW_SIZE_NOTCHOSEN;
@@ -495,7 +495,7 @@
 	 * @see guiSizeStrings2CwSize
 	 * @see cwSizeId2GuiSizeId
 	 */
-	public static int cwSizeId2GuiSizeId(byte id) {
+	public static int cwSizeId2GuiSizeId(byte id) throws IllegalArgumentException {
 		switch (id) {
 		case CW_SIZE_NOTCHOSEN:
 			return 0;

Modified: experiments/greiol/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-05-14 17:49:29 UTC (rev 1804)
+++ experiments/greiol/src/CacheWolf/CacheType.java	2009-05-14 21:32:51 UTC (rev 1805)
@@ -1,348 +1,322 @@
-/**
- * 
- */
-package CacheWolf;
-
-import ewe.fx.Image;
-import ewe.sys.Vm;
-
-
-/**
- * @author Kalle
- * Class for dealing with different cachetypes from gc and oc
- */
-
-/**
-*	Listing of types and mappings
-*	
-*	OC		GC		Comment		Regel
-*	1		8		Other			1->8
-*	2		2		Traditional		2->2
-*	3		3		Multi			3->3
-*	4		4		Virtual		4->4
-*	5		11		Webcam		5->11
-*	6		6		Event			6->6
-*	7		8		Quiz			7->8
-*	8		??		Math			8->108 (ok)
-*	9		??		Moving		9->109 (ok)
-*	10		??		Drive-In		10->110 (ok)
-*/
-
-public class CacheType {
-	private static Image cacheImages[] = new Image[138]; // Images are used by TableControl
-	public static final int WHERIGO=100; // The cache we mapped the wherigo to
-	public static final int MEGA_EVENT=101; // Mapping for Mega Event 
-	static {
-		cacheImages[0] = new Image("0.png");
-		//cacheImages[1] = new Image();
-		cacheImages[2] = new Image("2.png");
-		cacheImages[3] = new Image("3.png");
-		cacheImages[4] = new Image("4.png");
-		cacheImages[5] = new Image("5.png");
-		cacheImages[6] = new Image("6.png");
-		cacheImages[8] = new Image("8.png");
-		//cacheImages[9] = new Image();
-		//cacheImages[10] = new Image();
-		cacheImages[11] = new Image("11.png");
-		cacheImages[12] = new Image("12.png");
-		cacheImages[13] = new Image("13.png");
-		//additional waypoints, begin with 50
-		cacheImages[50] = new Image("pkg.png");
-		cacheImages[51] = new Image("stage.png");
-		cacheImages[52] = new Image("puzzle.png");
-		cacheImages[53] = new Image("flag.png");
-		cacheImages[54] = new Image("trailhead.png");
-		cacheImages[55] = new Image("waypoint.png");
-
-		cacheImages[108] = new Image("108.png");
-		cacheImages[109] = new Image("109.png");
-		cacheImages[110] = new Image("110.png");
-		cacheImages[137] = new Image("137.png");
-		cacheImages[WHERIGO] = new Image("1858.png");  // Fudge as whereigo is really 1858
-		cacheImages[MEGA_EVENT] = new Image("453.png");
-	}
-
-	//Types from gc.com
-	static protected final int GC_TRADITIONAL = 2;
-	static protected final int GC_MULTI = 3;
-	static protected final int GC_VIRTUAL = 4;
-	static protected final int GC_LETTERBOX = 5;
-	static protected final int GC_EVENT = 6;
-	static protected final int GC_UNKNOWN = 8;
-	static protected final int GC_WEBCAM = 11;
-	static protected final int GC_LOCATIONLESS = 12;
-	static protected final int GC_CITO = 13;
-	static protected final int GC_EARTH = 137;
-	static protected final int GC_MEGA_EVENT = 453;
-	// additional waypoints have no numbers in GPX Files, so lets use our own.
-	static protected final int GC_AW_PARKING = 50;
-	static protected final int GC_AW_STAGE_OF_MULTI = 51;
-	static protected final int GC_AW_QUESTION = 52;
-	static protected final int GC_AW_FINAL = 53;
-	static protected final int GC_AW_TRAILHEAD = 54;
-	static protected final int GC_AW_REFERENCE = 55;
-	
-	//Types from oc.de
-	static protected final int OC_UNKNOWN = 1;
-	static protected final int OC_TRADITIONAL = 2;
-	static protected final int OC_MULTI = 3;
-	static protected final int OC_VIRTUAL = 4;
-	static protected final int OC_WEBCAM = 5;
-	static protected final int OC_EVENT = 6;
-	static protected final int OC_QUIZ = 7;
-	static protected final int OC_MATH = 8;
-	static protected final int OC_MOVING = 9;
-	static protected final int OC_DRIVE_IN = 10;
-	
-	//Our own mapping
-	static protected final int CW_TRADITIONAL = 2;
-	static protected final int CW_MULTI = 3;
-	static protected final int CW_VIRTUAL = 4;
-	static protected final int CW_LETTERBOX = 5;
-	static protected final int CW_EVENT = 6;
-	static protected final int CW_QUIZ = 7;
-	static protected final int CW_UNKNOWN = 8;
-	static protected final int CW_MATH = 8;
-	static protected final int CW_MOVING = 9;
-	static protected final int CW_DRIVE_IN = 10;
-	static protected final int CW_WEBCAM = 11;
-	static protected final int CW_LOCATIONLESS = 12;
-	static protected final int CW_CITO = 13;
-	static protected final int CW_EARTH = 137;
-	static protected final int CW_MEGA_EVENT = 453;
-	static protected final int CW_WHERIGO = 1858;
-	static protected final int CW_PARKING = 50;
-	static protected final int CW_STAGE_OF_MULTI = 51;
-	static protected final int CW_QUESTION = 52;
-	static protected final int CW_FINAL = 53;
-	static protected final int CW_TRAILHEAD = 54;
-	static protected final int CW_REFERENCE = 55;
-	static protected final int CW_CNT_TYPES = 20;
-
-	//Sources
-	static protected final int SRC_GC = 1;
-	static protected final int SRC_OC = 2;
-	static protected final int SRC_CW = 3;
-
-	//pictures
-	static protected final String CW_PIC_UNKNOWN = "8.png";
-	static protected final String CW_PIC_TRADITIONAL = "2.png";
-	static protected final String CW_PIC_MULTI = "3.png";
-	static protected final String CW_PIC_VIRTUAL = "4.png";
-	static protected final String CW_PIC_WEBCAM = "11.png";
-	static protected final String CW_PIC_EVENT = "6.png";
-	static protected final String CW_PIC_QUIZ = "8.png";
-	static protected final String CW_PIC_MATH = "108.png";
-	static protected final String CW_PIC_MOVING = "109.png";
-	static protected final String CW_PIC_DRIVE_IN = "110.png";
-	static protected final String CW_PIC_LETTERBOX = "5.png";
-	static protected final String CW_PIC_LOCATIONLESS = "12.png";
-	static protected final String CW_PIC_CITO = "13.png";
-	static protected final String CW_PIC_EARTH = "137.png";
-	static protected final String CW_PIC_MEGA_EVENT = "453.png";
-	static protected final String CW_PIC_WHERIGO = "1858.png";
-	static protected final String CW_PIC_PARKING = "pkg.png";
-	static protected final String CW_PIC_STAGE_OF_MULTI = "stage.png";
-	static protected final String CW_PIC_QUESTION = "puzzle.png";
-	static protected final String CW_PIC_FINAL = "flag.png";
-	static protected final String CW_PIC_TRAILHEAD = "trailhead.png";
-	static protected final String CW_PIC_REFERENCE = "waypoint.png";
-	
-	//fields
-	int type = 0;
-	
-	// array with names and types for exporters
-	public final static int WPT_TEXT = 0;
-	public final static int WPT_NUM = 1;
-
-	public static String[][] wayType = {{"Custom","0"},{"Traditional","2"},
-			{"Multi","3"}, {"Virtual","4"},
-			{"Letterbox","5"},{"Event","6"},
-			{"Mega Event","453"}, {"Mystery","8"},
-			{"Webcam","11"},{"Locationless","12"},
-			{"CITO","13"},{"Earthcache","137"},
-			{"Parking","50"},{"Stage","51"},
-			{"Question","52"},{"Final","53"},
-			{"Trailhead","54"},{"Reference","55"},{"WhereIGo","1858"}};
-
-	public static String shortType(int typeNum){
-		String shortType = new String("O");
-		if(typeNum == 0) shortType = "C";
-		if(typeNum == 2) shortType = "T";
-		if(typeNum == 3) shortType = "M";
-		if(typeNum == 4) shortType = "V";
-		if(typeNum == 5) shortType = "L";
-		if(typeNum == 6) shortType = "O";
-		if(typeNum == 11) shortType = "W";
-		if(typeNum == 8) shortType = "U";
-		if(typeNum == 12) shortType = "O";
-		if(typeNum == 13) shortType = "O";
-		if(typeNum == 137) shortType = "E";
-		if(typeNum == 453) shortType = "O";
-		if(typeNum == 1858) shortType = "O";
-		if(typeNum == 50) shortType = "P";
-		if(typeNum == 51) shortType = "S";
-		if(typeNum == 52) shortType = "Q";
-		if(typeNum == 53) shortType = "F";
-		if(typeNum == 54) shortType = "H";
-		if(typeNum == 55) shortType = "R";
-		return shortType;
-	}
-	public static String transType(int geoNum){
-		String geo = new String("Unknown");
-		if(geoNum == 2) geo = "Traditional Cache";
-		if(geoNum == 3) geo = "Multi-cache";
-		if(geoNum == 4) geo = "Virtual Cache";
-		if(geoNum == 5) geo = "Letterbox Hybrid";
-		if(geoNum == 6) geo = "Event Cache";
-		if(geoNum == 11) geo = "Webcam Cache";
-		if(geoNum == 8) geo = "Unknown Cache";
-		if(geoNum == 12) geo = "Locationless Cache";
-		if(geoNum == 13) geo = "Cache In Trash Out Event";
-		if(geoNum == 137) geo = "Earthcache";
-		if(geoNum == 453) geo = "Mega Event Cache";
-		if(geoNum == 1858) geo = "WhereIGo Cache";
-		if(geoNum == 50) geo = "Parking Area";
-		if(geoNum == 51) geo = "Stages of a Multicache";
-		if(geoNum == 52) geo = "Question to Answer";
-		if(geoNum == 53) geo = "Final Location";
-		if(geoNum == 54) geo = "Trailhead";
-		if(geoNum == 55) geo = "Reference Point";
-		return geo;
-	}
-	
-	/**
-	 * Returns the image name of a given internal type
-	 * @param type Type of cache
-	 * @return The image name of the cache
-	 */
-	public static String type2pic(int type) {
-		switch(type) {
-			case CW_TRADITIONAL:	return CW_PIC_TRADITIONAL;
-			case CW_MULTI:			return CW_PIC_MULTI;
-			case CW_VIRTUAL:		return CW_PIC_VIRTUAL;
-			case CW_LETTERBOX:		return CW_PIC_LETTERBOX;
-			case CW_EVENT:			return CW_PIC_EVENT;
-			case CW_QUIZ:			return CW_PIC_QUIZ;
-			case CW_UNKNOWN:		return CW_PIC_UNKNOWN;
-			case CW_MOVING:			return CW_PIC_MOVING;
-			case CW_DRIVE_IN:		return CW_PIC_DRIVE_IN;
-			case CW_WEBCAM:			return CW_PIC_WEBCAM;
-			case CW_LOCATIONLESS:	return CW_PIC_LOCATIONLESS;
-			case CW_CITO:			return CW_PIC_CITO;
-			case CW_EARTH:			return CW_PIC_EARTH;
-			case CW_MEGA_EVENT:		return CW_PIC_MEGA_EVENT;
-			case CW_WHERIGO:	    return CW_PIC_WHERIGO;
-			case CW_PARKING:		return CW_PIC_PARKING;
-			case CW_STAGE_OF_MULTI:	return CW_PIC_STAGE_OF_MULTI;
-			case CW_QUESTION:		return CW_PIC_QUESTION;
-			case CW_FINAL:			return CW_PIC_FINAL;
-			case CW_TRAILHEAD:		return CW_PIC_TRAILHEAD;
-			case CW_REFERENCE:		return CW_PIC_REFERENCE;
-			default:		return "no_picture.png";
-		}
-	}
-
-	public static boolean isAddiWpt(int type){
-		return (type >= 50 && type <= 55);
-	}
-
-	public static int typeText2Number(String typeText){
-		if (typeText.equals("Traditional Cache") || typeText.equals("Traditional")|| typeText.equals("Classic")) return 2;
-		if (typeText.equals("Multi-cache") || typeText.equals("Multi") || typeText.equals("Offset")) return 3;
-		if (typeText.equals("Virtual Cache") || typeText.equals("Virtual")) return 4;
-		if (typeText.equals("Letterbox Hybrid")) return 5;
-		if (typeText.equals("Event Cache") || typeText.equals("Event")) return 6;
-		if (typeText.equals("Unknown Cache") || typeText.equals("Other") || typeText.equals("Quiz")) return 8;
-		if (typeText.equals("Webcam Cache") || typeText.equals("Webcam")) return 11;
-		if (typeText.equals("Locationless (Reverse) Cache")) return 12;
-		if (typeText.equals("Cache In Trash Out Event")) return 13;
-		if (typeText.equals("Earthcache") || typeText.equals("Earth")) return 137;
-		if (typeText.equals("Mega-Event Cache")) return 453;
-		if (typeText.equals("Wherigo Cache")) return 1858;
-		if (typeText.equals("Waypoint|Parking Area")) return 50;
-		if (typeText.equals("Waypoint|Stages of a Multicache")) return 51;
-		if (typeText.equals("Waypoint|Question to Answer")) return 52;
-		if (typeText.equals("Waypoint|Final Coordinates")||typeText.equals("Waypoint|Final Location")) return 53;
-		if (typeText.equals("Waypoint|Trailhead")) return 54;
-		if (typeText.equals("Waypoint|Reference Point")) return 55;
-		Vm.debug("Unknown Cache Type:" + typeText);
-		return 0;
-	}
-
-	/**
-		*	Method to translate opencaching types to geocaching types.
-		*	Required to be "backwards" compatible :-(
-		*	OC		GC		Comment		Regel
-		*	1		8		Other			1->8
-		*	2		2		Traditional		2->2
-		*	3		3		Multi			3->3
-		*	4		4		Virtual		4->4
-		*	5		11		Webcam		5->11
-		*	6		6		Event			6->6
-		*	7		8		Quiz			7->8
-		*	8		??		Math			8->108 (ok)
-		*	9		??		Moving		9->109 (ok)
-		*	10		??		Drive-In		10->110 (ok)
-		*/
-		public static int transOCType(int type){
-			if(type == 1) return 8;
-			if(type == 2) return 2;
-			if(type == 3) return 3;	
-			if(type == 4) return 4;
-			if(type == 5) return 11;
-			if(type == 6) return 6;
-			if(type == 7) return 8;
-			if(type >= 8 || type <= 10) return 8;
-	/* Not supportet at the moment
-			if(type.equals("8")) return "108";
-			if(type.equals("9")) return "109";
-			if(type.equals("10")) return "110";
-	*/
-			//no match found? return custom type!
-			return 0;
-		}
-
-		
-	public static Image cache2Img(int cacheType) {
-		int index = cacheType;
-		switch (cacheType) {
-			case 1858: index =  WHERIGO; break;
-			case 453:  index =  MEGA_EVENT; break;
-		}
-		return cacheImages[index];
-	}
-	
-	/**
-	 * Packs the cache type into the range of a byte. For the int values which don't fit in the 
-	 * byte range, some conversion has to be done.
-	 * @param cacheType Cache Type as integer
-	 * @return A corresponding byte value. 
-	 */
-	public static byte toByte(int cacheType) {
-		int result = cacheType-128;
-		switch (cacheType) {
-			case 1858: result =  WHERIGO; break;
-			case 453:  result =  MEGA_EVENT; break;
-			default: result = cacheType-128;
-		}
-		return (byte)(result);
-	}
-	
-	/**
-	 * Unpacks the cache type from byte to int. 
-	 * @param cacheType Cache type as byte
-	 * @return The cache type as int
-	 */
-	public static int toInt(byte cacheType) {
-		int result;
-		switch (cacheType) {
-		case WHERIGO:     result =  1858; break;
-		case MEGA_EVENT:  result =  453; break;
-		default: result = cacheType+128;
-		}
-		return result;
-	}
-	
-
-}
+package CacheWolf;
+
+public final class CacheType {
+	
+	/** custom waypoint */
+	static protected final byte CW_TYPE_CUSTOM = 0;
+	/** traditional cache (GC,OC) */
+	static protected final byte CW_TYPE_TRADITIONAL = 2;
+	/** multi cache (GC,OC) */
+	static protected final byte CW_TYPE_MULTI = 3;
+	/** virtual cache (GC) */
+	static protected final byte CW_TYPE_VIRTUAL = 4;
+	/** letterbox cache (GC) */
+	static protected final byte CW_TYPE_LETTERBOX = 5;
+	/** event cache (OC,GC) */
+	static protected final byte CW_TYPE_EVENT = 6;
+	/** quiz cache (OC) */
+	static protected final byte CW_TYPE_QUIZ = 7;
+	/** unknown cache (GC) */
+	static protected final byte CW_TYPE_UNKNOWN = 8;
+	/** math cache (OC) */
+	static protected final byte CW_TYPE_MATH = 108;
+	/** moving cache (OC) */
+	static protected final byte CW_TYPE_MOVING = 9;
+	/** drive in cache (OC) */
+	static protected final byte CW_TYPE_DRIVE_IN = 10;
+	/** webcam cache (GC,OC) */
+	static protected final byte CW_TYPE_WEBCAM = 11;
+	/** locationless cache (GC) */
+	static protected final byte CW_TYPE_LOCATIONLESS = 12;
+	/** CITO cache (GC,OC)*/
+	static protected final byte CW_TYPE_CITO = 13;
+	/** Additional Waypoint Parking (GC) */
+	static protected final byte CW_TYPE_PARKING = 50;
+	/** Additional Waypoint Stage of a Multi (GC) */
+	static protected final byte CW_TYPE_STAGE = 51;
+	/** Additional Waypoint Question to answer (GC) */
+	static protected final byte CW_TYPE_QUESTION = 52;
+	/** Additional Waypoint Final (GC) */
+	static protected final byte CW_TYPE_FINAL = 53;
+	/** Additional Waypoint Trailhead (GC) */
+	static protected final byte CW_TYPE_TRAILHEAD = 54;
+	/** Additional Waypoint Reference (GC) */
+	static protected final byte CW_TYPE_REFERENCE = 55;
+	/** Mega Event Cache (GC) */
+	static protected final byte CW_TYPE_MEGA_EVENT = 100;
+	/** WhereIGo Cache (GC) */
+	static protected final byte CW_TYPE_WHEREIGO = 101;
+	/** Project Ape cache (GC)*/
+	static protected final byte CW_TYPE_APE = 102;
+	/** Adenture Maze Exhibit (GC)*/
+	static protected final byte CW_TYPE_MAZE = 103;
+	/** Earth Cache (GC) */
+	static protected final byte CW_TYPE_EARTH = 104;
+	/** unparsable cache type or missing information, should throw IllegalArgumentExceptions when found */
+	static protected final byte CW_TYPE_ERROR = -1;
+	
+	/** image for traditional cache (GC,OC) */
+	static protected final String CW_GUIIMG_TRADITIONAL = "2.png";
+	/** image for multi cache (GC,OC) */
+	static protected final String CW_GUIIMG_MULTI = "3.png";
+	/** image for virtual cache (GC) */
+	static protected final String CW_GUIIMG_VIRTUAL = "4.png";
+	/** image for letterbox cache (GC) */
+	static protected final String CW_GUIIMG_LETTERBOX = "5.png";
+	/** image for event cache (OC,GC) */
+	static protected final String CW_GUIIMG_EVENT = "6.png";
+	/** image for quiz cache (OC) */
+	static protected final String CW_GUIIMG_QUIZ = "8.png";
+	/** image for unknown cache (GC) */
+	static protected final String CW_GUIIMG_UNKNOWN = "8.png";
+	/** image for math cache (OC) */
+	static protected final String CW_GUIIMG_MATH = "108.png";
+	/** image for moving cache (OC) */
+	static protected final String CW_GUIIMG_MOVING = "109.png";
+	/** image for drive in cache (OC) */
+	static protected final String CW_GUIIMG_DRIVE_IN = "110.png";
+	/** image for webcam cache (GC,OC) */
+	static protected final String CW_GUIIMG_WEBCAM = "11.png";
+	/** image for locationless cache (GC) */
+	static protected final String CW_GUIIMG_LOCATIONLESS = "12.png";
+	/** image for CITO cache (GC,OC)*/
+	static protected final String CW_GUIIMG_CITO = "13.png";
+	/** image for Additional Waypoint Parking (GC) */
+	static protected final String CW_GUIIMG_PARKING = "pkg.png";
+	/** image for Additional Waypoint Stage of a Multi (GC) */
+	static protected final String CW_GUIIMG_STAGE = "stage.png";
+	/** image for Additional Waypoint Question to answer (GC) */
+	static protected final String CW_GUIIMG_QUESTION = "puzzle.png";
+	/** image for Additional Waypoint Final (GC) */
+	static protected final String CW_GUIIMG_FINAL = "flag.png";
+	/** image for Additional Waypoint Trailhead (GC) */
+	static protected final String CW_GUIIMG_TRAILHEAD = "trailhead.png";
+	/** image for Additional Waypoint Reference Point (GC) */
+	static protected final String CW_GUIIMG_REFERENCE = "waypoint.png";
+	/** image for Mega Event Cache (GC) */
+	static protected final String CW_GUIIMG_MEGA_EVENT = "453.png";
+	/** image for WhereIGo Cache (GC) */
+	static protected final String CW_GUIIMG_WHEREIGO = "1858.png";
+	/** image for Project Ape cache (GC)*/
+	static protected final String CW_GUIIMG_APE = "typeApe.png";
+	/** image for Adenture Maze Exhibit (GC)*/
+	static protected final String CW_GUIIMG_MAZE = "typeMaze.png";
+	/** image for Earth Cache (GC) */
+	static protected final String CW_GUIIMG_EARTH = "137.png";
+	
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_CUSTOM = "Custom";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_TRADI = "Tradi";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_MULTI = "Multi";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_VIRTUAL = "Virtual";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_LETTERBOX = "Letterbox";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_EVENT = "Event";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_MEGAEVENT = "Mega Event";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_WEBCAM = "Webcam";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_UNKNOWN = "Mystery";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_LOCATIONLESS = "Locationless";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_CITO = "CITO";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_EARTH = "Earthcache";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_WHEREIGO = "WherIGo";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_PARKING = "Addi: Parking";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_STAGE = "Addi: Stage";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_QUESTION = "Addi: Question";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_FINAL = "Addi: Final";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_TRAILHEAD = "Addi: Trailhead";
+	/** GUI string for custom waypoit */
+	static protected final String CW_GUISTR_REFERENCE = "Addi: Reference";
+	
+	/**  constructor does nothing */
+	public CacheType() {
+
+	}
+	
+	/**
+	 * 
+	 * @param id
+	 * @return
+	 * @throws IllegalArgumentException
+	 */
+	public static int cwTypeId2GuiTypeId(byte id) throws IllegalArgumentException {
+		throw new IllegalArgumentException("unmatched argument "+id+" in CacheSizeNew cwTypeId2GuiTypeId()");
+	}
+	
+	/**
+	 * 
+	 * @param size
+	 * @return
+	 * @throws IllegalArgumentException
+	 */
+	public static String getExportShortId(byte size) throws IllegalArgumentException {
+		throw new IllegalArgumentException("unmatched argument "+size+" in CacheSizeNew getExportShortId()");
+	}
+	
+	/**
+	 * 
+	 * @param size
+	 * @return
+	 * @throws IllegalArgumentException if size can not be mapped to internal representation
+	 * @deprecated remove once v1 file version compatibility is abandoned
+	 */
+	public static final byte v1Converter(String size) throws IllegalArgumentException  {
+		throw new IllegalArgumentException("unmatched argument "+size+" in CacheSizeNew v1Converter()");
+	}
+
+	/**
+	 * 
+	 * @param size
+	 * @return
+	 * @throws IllegalArgumentException if size can not be mapped to internal representation
+	 * @deprecated remove once v2 file version compatibility is abandoned
+	 */
+	public static final byte v2Converter(byte size) throws IllegalArgumentException  {
+		throw new IllegalArgumentException("unmatched argument "+size+" in CacheSizeNew v2Converter()");
+	}
+	
+	/**
+	 * check if a given waypoint type is an additional waypoint
+	 * @param type waypoint type to check 
+	 * @return true if it is an addition waypint, false otherwise
+	 */
+	public static final boolean isAddiWpt(byte type) {
+		switch (type) {
+		case CW_TYPE_PARKING: // fall through
+		case CW_TYPE_STAGE: // fall through
+		case CW_TYPE_QUESTION: // fall through
+		case CW_TYPE_FINAL: // fall through
+		case CW_TYPE_TRAILHEAD: // fall through
+		case CW_TYPE_REFERENCE: return true;
+		default: return false;
+		}
+		
+	}
+	
+	/**
+	 * 
+	 * @return
+	 */
+	public static final String[] guiTypeStrings() {
+		String ret[] = new String[] {
+				CW_GUISTR_CUSTOM,
+				CW_GUISTR_TRADI,
+				CW_GUISTR_MULTI,
+				CW_GUISTR_VIRTUAL,
+				CW_GUISTR_LETTERBOX,
+				CW_GUISTR_EVENT,
+				CW_GUISTR_MEGAEVENT,
+				CW_GUISTR_WEBCAM,
+				CW_GUISTR_UNKNOWN,
+				CW_GUISTR_LOCATIONLESS,
+				CW_GUISTR_CITO,
+				CW_GUISTR_EARTH,
+				CW_GUISTR_WHEREIGO,
+				CW_GUISTR_PARKING,
+				CW_GUISTR_STAGE,
+				CW_GUISTR_QUESTION,
+				CW_GUISTR_FINAL,
+				CW_GUISTR_TRAILHEAD,
+				CW_GUISTR_REFERENCE
+			};
+		return ret;
+	}
+	
+	/**
+	 * 
+	 * @param selection
+	 * @return
+	 * @throws IllegalArgumentException
+	 */
+	public static final byte guiSelect2Cw(int selection) throws IllegalArgumentException {
+		// make sure to refelect the order of guiTypeStrings()
+		switch (selection) {
+		case  0: return CW_TYPE_CUSTOM;
+		case  1: return CW_TYPE_TRADITIONAL;
+		case  2: return CW_TYPE_MULTI;
+		case  3: return CW_TYPE_VIRTUAL;
+		case  4: return CW_TYPE_LETTERBOX;
+		case  5: return CW_TYPE_EVENT;
+		case  6: return CW_TYPE_MEGA_EVENT;
+		case  7: return CW_TYPE_WEBCAM;
+		case  8: return CW_TYPE_UNKNOWN;
+		case  9: return CW_TYPE_LOCATIONLESS;
+		case 10: return CW_TYPE_CITO;
+		case 11: return CW_TYPE_EARTH;
+		case 12: return CW_TYPE_WHEREIGO;
+		case 13: return CW_TYPE_PARKING;
+		case 14: return CW_TYPE_STAGE;
+		case 15: return CW_TYPE_QUESTION;
+		case 16: return CW_TYPE_FINAL;
+		case 17: return CW_TYPE_TRAILHEAD;
+		case 18: return CW_TYPE_REFERENCE;
+		default: throw new IllegalArgumentException("unmatched argument "+selection+" in CacheSize guiSelect2Cw()");
+		}
+	}
+	
+	/**
+	 * 
+	 * @param gpxType
+	 * @return
+	 * @throws IllegalArgumentException
+	 */
+	public static final byte gpxType2CwType(String gpxType) throws IllegalArgumentException {
+		if (gpxType.equals("Traditional Cache") || gpxType.equals("Traditional")|| gpxType.equals("Classic")) return CW_TYPE_TRADITIONAL;
+		if (gpxType.equals("Multi-cache") || gpxType.equals("Multi") || gpxType.equals("Offset")) return CW_TYPE_MULTI;
+		if (gpxType.equals("Virtual Cache") || gpxType.equals("Virtual")) return CW_TYPE_VIRTUAL;
+		if (gpxType.equals("Letterbox Hybrid")) return CW_TYPE_LETTERBOX;
+		if (gpxType.equals("Event Cache") || gpxType.equals("Event")) return CW_TYPE_EVENT;
+		if (gpxType.equals("Unknown Cache") || gpxType.equals("Other") || gpxType.equals("Quiz")) return CW_TYPE_UNKNOWN;
+		if (gpxType.equals("Webcam Cache") || gpxType.equals("Webcam")) return CW_TYPE_WEBCAM;
+		if (gpxType.equals("Locationless (Reverse) Cache")) return CW_TYPE_LOCATIONLESS;
+		if (gpxType.equals("Cache In Trash Out Event")) return CW_TYPE_CITO;
+		if (gpxType.equals("Earthcache") || gpxType.equals("Earth")) return CW_TYPE_EARTH;
+		if (gpxType.equals("Mega-Event Cache")) return CW_TYPE_MEGA_EVENT;
+		if (gpxType.equals("Wherigo Cache")) return CW_TYPE_WHEREIGO;
+		if (gpxType.equals("Waypoint|Parking Area")) return CW_TYPE_PARKING;
+		if (gpxType.equals("Waypoint|Stages of a Multicache")) return CW_TYPE_STAGE;
+		if (gpxType.equals("Waypoint|Question to Answer")) return CW_TYPE_QUESTION;
+		if (gpxType.equals("Waypoint|Final Coordinates")||gpxType.equals("Waypoint|Final Location")) return CW_TYPE_FINAL;
+		if (gpxType.equals("Waypoint|Trailhead")) return CW_TYPE_TRAILHEAD;
+		if (gpxType.equals("Waypoint|Reference Point")) return CW_TYPE_REFERENCE;
+		throw new IllegalArgumentException("unmatched argument "+gpxType+" in CacheSize gpxType2CwType()");
+	}
+	
+	/**
+	 * 
+	 * @param ocType
+	 * @return
+	 * @throws IllegalArgumentException
+	 */
+	public static final byte ocType2CwType(String ocType) throws IllegalArgumentException {
+		if(ocType.equals("1")) return CW_TYPE_UNKNOWN;
+		if(ocType.equals("2")) return CW_TYPE_TRADITIONAL;
+		if(ocType.equals("3")) return CW_TYPE_MULTI;	
+		if(ocType.equals("4")) return CW_TYPE_VIRTUAL;
+		if(ocType.equals("5")) return CW_TYPE_WEBCAM;
+		if(ocType.equals("6")) return CW_TYPE_EVENT;
+		if(ocType.equals("7")) return CW_TYPE_UNKNOWN;
+		if(ocType.equals("8")) return CW_TYPE_UNKNOWN;
+		if(ocType.equals("9")) return CW_TYPE_UNKNOWN;
+		if(ocType.equals("10")) return CW_TYPE_UNKNOWN;
+		throw new IllegalArgumentException("unmatched argument "+ocType+" in CacheSize ocType2CwType()");
+	}
+	
+	// cache to image
+	
+}

Modified: experiments/greiol/src/CacheWolf/CalcPanel.java
===================================================================
--- trunk/src/CacheWolf/CalcPanel.java	2009-05-14 17:49:29 UTC (rev 1804)
+++ experiments/greiol/src/CacheWolf/CalcPanel.java	2009-05-14 21:32:51 UTC (rev 1805)
@@ -62,9 +62,9 @@
 		cacheDB = profile.cacheDB;
 		
 		
-		TopP.addNext(chkDD =new mCheckBox("d.d?"),CellConstants.DONTSTRETCH, CellConstants.WEST);
-		TopP.addNext(chkDMM =new mCheckBox("d?m.m\'"),CellConstants.DONTSTRETCH, CellConstants.WEST);
-		TopP.addNext(chkDMS =new mCheckBox("d?m\'s\""),CellConstants.DONTSTRETCH,CellConstants.WEST);
+		TopP.addNext(chkDD =new mCheckBox("d.d???"),CellConstants.DONTSTRETCH, CellConstants.WEST);
+		TopP.addNext(chkDMM =new mCheckBox("d???m.m\'"),CellConstants.DONTSTRETCH, CellConstants.WEST);
+		TopP.addNext(chkDMS =new mCheckBox("d???m\'s\""),CellConstants.DONTSTRETCH,CellConstants.WEST);
 		TopP.addNext(chkUTM =new mCheckBox("UTM"),CellConstants.DONTSTRETCH, CellConstants.WEST);
 		TopP.addLast(chkGK =new mCheckBox("GK"),CellConstants.DONTSTRETCH, CellConstants.WEST);
 
@@ -200,7 +200,7 @@
 				coordOut = coordInp.project(bd.degrees, bd.distance);
 				ch.LatLon = coordOut.toString();
 				ch.pos.set(coordOut);
-				ch.setType(51); // see CacheType.GC_AW_STAGE_OF_MULTI // TODO unfertig
+				ch.setType(CacheType.CW_TYPE_STAGE); // TODO unfertig
 				mainT.newWaypoint(ch);
 			}
 			

Modified: experiments/greiol/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-05-14 17:49:29 UTC (rev 1804)
+++ experiments/greiol/src/CacheWolf/DetailsPanel.java	2009-05-14 21:32:51 UTC (rev 1805)
@@ -17,7 +17,7 @@
 	mInput inpHidden = new mInput();
 	mInput inpOwner = new mInput();
 	mButton btnDelete,btnCenter, btnAddDateTime;
-	mChoice chcType = new mChoice(new String[]{"Custom", "Traditional", "Multi", "Virtual", "Letterbox", "Event", "Mega Event", "Mystery", "Webcam", "Locationless", "CITO", "Earthcache", "wherIGo", "Addi: Parking", "Addi: Stage", "Addi: Question", "Addi: Final","Addi: Trailhead","Addi: Reference"},0);
+	mChoice chcType = new mChoice(CacheType.guiTypeStrings(),0);
 	mChoice chcSize = new mChoice(CacheSize.guiSizeStrings(),0);
 	mComboBox chcStatus = new mComboBox(new String[]{"", MyLocale.getMsg(313,"Flag 1"), MyLocale.getMsg(314,"Flag 2"), MyLocale.getMsg(315,"Flag 3"), MyLocale.getMsg(316,"Flag 4"), MyLocale.getMsg(317,"Search"), MyLocale.getMsg(318,"Found"), MyLocale.getMsg(319,"Not Found"), MyLocale.getMsg(320,"Owner")},0);
 	mButton btnNewWpt, btnShowBug, btnShowMap, btnGoto, btnAddPicture, btnBlack, btnNotes, btnSave, btnCancel;
@@ -297,7 +297,7 @@
 	 */
 	public void createWptName() {
 		String wpt = inpWaypoint.getText().toUpperCase();
-		if (CacheType.isAddiWpt(transSelect(chcType.getInt())) && 
+		if (CacheType.isAddiWpt(CacheType.guiSelect2Cw(chcType.getInt())) && 
 				(Global.mainTab.mainCache.startsWith("GC")||Global.mainTab.mainCache.startsWith("OC")||Global.mainTab.mainCache.startsWith("CW")) &&
 				wpt.startsWith("CW")) {
 			// for what was this?:
@@ -305,7 +305,7 @@
 			
 			inpWaypoint.setText(Global.getProfile().getNewAddiWayPointName(Global.mainTab.mainCache));
 		} 
-		if (!CacheType.isAddiWpt(transSelect(chcType.getInt())) && !(wpt.startsWith("GC") 
+		if (!CacheType.isAddiWpt(CacheType.guiSelect2Cw(chcType.getInt())) && !(wpt.startsWith("GC") 
 				|| wpt.startsWith("OC") || wpt.startsWith("CW")) ) {
 			inpWaypoint.setText(Global.getProfile().getNewWayPointName());
 		}
@@ -394,7 +394,7 @@
 				CacheHolder ch = new CacheHolder();
 				ch.LatLon = thisCache.LatLon;
 				ch.pos = new CWPoint( thisCache.pos );
-				ch.setType(51);
+				ch.setType(CacheType.CW_TYPE_STAGE);
 				Global.mainTab.newWaypoint(ch);
 			}
 			else if (ev.target == btnGoto){
@@ -496,8 +496,8 @@
 		  thisCache.setCacheName(inpName.getText().trim());
 		  thisCache.LatLon = thisCache.pos.toString();
 		  thisCache.setDateHidden(inpHidden.getText().trim());
-		  int oldType=thisCache.getType();
-		  thisCache.setType(transSelect(chcType.getInt()));
+		  byte oldType=thisCache.getType();
+		  thisCache.setType(CacheType.guiSelect2Cw(chcType.getInt()));
 		 // thisCache.saveCacheDetails(profile.dataDir); // this is redundant, because all changes affecting the details are immediately saved
 		  // Now update the table
 		  CacheHolder ch = thisCache; // TODO variable ch is redundant

Modified: experiments/greiol/src/CacheWolf/GPXImporter.java
===================================================================
--- trunk/src/CacheWolf/GPXImporter.java	2009-05-14 17:49:29 UTC (rev 1804)
+++ experiments/greiol/src/CacheWolf/GPXImporter.java	2009-05-14 21:32:51 UTC (rev 1805)
@@ -386,7 +386,7 @@
 		
 		// aditional wapypoint
 		if (name.equals("type")&& inWpt && !inCache && strData.startsWith("Waypoint")){
-			holder.setType(CacheType.typeText2Number(strData));
+			holder.setType(CacheType.gpxType2CwType(strData));
 			holder.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
 		}
 		
@@ -408,7 +408,7 @@
 			return;
 		}
 		if ((name.equals("groundspeak:type") || name.equals("type")|| name.equals("terra:style"))&& inCache){
-			holder.setType(CacheType.typeText2Number(strData));
+			holder.setType(CacheType.gpxType2CwType(strData));
 			return;
 		}
 		if (name.equals("groundspeak:container")|| name.equals("container")){

Modified: experiments/greiol/src/CacheWolf/MainTab.java
===================================================================
--- trunk/src/CacheWolf/MainTab.java	2009-05-14 17:49:29 UTC (rev 1804)
+++ experiments/greiol/src/CacheWolf/MainTab.java	2009-05-14 21:32:51 UTC (rev 1805)
@@ -305,7 +305,7 @@
 			profile.setAddiRef(pCh);
 		} else { 
 			pCh.setWayPoint(profile.getNewWayPointName());
-			pCh.setType(0);
+			pCh.setType(CacheType.CW_TYPE_CUSTOM);
 			lastselected=pCh.getWayPoint();
 		}
 		pCh.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);

Modified: experiments/greiol/src/CacheWolf/OCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/OCXMLImporter.java	2009-05-14 17:49:29 UTC (rev 1804)
+++ experiments/greiol/src/CacheWolf/OCXMLImporter.java	2009-05-14 21:32:51 UTC (rev 1805)
@@ -354,7 +354,7 @@
 			cacheID = atts.getValue("id");
 		}
 		if(name.equals("type")){
-			holder.setType(CacheType.transOCType(new Integer(atts.getValue("id")).intValue())); 
+			holder.setType(CacheType.ocType2CwType(atts.getValue("id")));
 			return;
 		}
 		if(name.equals("status")){

Modified: experiments/greiol/src/CacheWolf/Parser.java
===================================================================
--- trunk/src/CacheWolf/Parser.java	2009-05-14 17:49:29 UTC (rev 1804)
+++ experiments/greiol/src/CacheWolf/Parser.java	2009-05-14 21:32:51 UTC (rev 1805)
@@ -691,10 +691,10 @@
 				String stage=MyLocale.formatLong(i,"00");
 				String stageWpt="$"+stage+waypointName.substring(2);
 				String stageName = "Stage "+(i+1);
-				int type = 51;
+				byte type = CacheType.CW_TYPE_STAGE;
 				if (i == nStages - 1) {
 					stageName = "Final";
-					type = 53;
+					type = CacheType.CW_TYPE_FINAL;
 				}
 				didCreateWp|=createWptIfNeeded(stage+waypointName.substring(2), stageName, type);
 				op.append("IF "+stageWpt+"=\"\" THEN\n");
@@ -1095,7 +1095,7 @@
 		}
 	}
 
-	private boolean createWptIfNeeded(String wayPoint, String name, int type){
+	private boolean createWptIfNeeded(String wayPoint, String name, byte type){
 	   	int ci=Global.getProfile().getCacheIndex(wayPoint);
     	if (ci >= 0) return false;
 

Modified: experiments/greiol/src/CacheWolf/ShowCacheInBrowser.java
===================================================================
--- trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-05-14 17:49:29 UTC (rev 1804)
+++ experiments/greiol/src/CacheWolf/ShowCacheInBrowser.java	2009-05-14 21:32:51 UTC (rev 1805)
@@ -65,9 +65,9 @@
 			if(chD.isVisible()){
 				Vm.showWait(true);
 				try {
-					if (chD.getWayPoint().startsWith("OC"))
-						tpl.setParam("TYPE", "\"file://"+FileBase.getProgramDirectory()+"/"+CacheType.transOCType(chD.getType())+".gif\"");
-					else	
+//					if (chD.getWayPoint().startsWith("OC"))
+//						tpl.setParam("TYPE", "\"file://"+FileBase.getProgramDirectory()+"/"+CacheType.transOCType(chD.getType())+".gif\"");
+//					else	
 						tpl.setParam("TYPE", "\"file://"+FileBase.getProgramDirectory()+"/"+chD.getType()+".gif\"");
 					tpl.setParam("SIZE", CacheSize.cw2ExportString(chD.getCacheSize()));
 					tpl.setParam("WAYPOINT", chD.getWayPoint());



From greiol at mail.berlios.de  Fri May 15 01:48:12 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Fri, 15 May 2009 01:48:12 +0200
Subject: [Cachewolf-svn] r1806 - in experiments/greiol/src: CacheWolf
	CacheWolf/navi exp
Message-ID: <200905142348.n4ENmCbL032415@sheep.berlios.de>

Author: greiol
Date: 2009-05-15 01:48:06 +0200 (Fri, 15 May 2009)
New Revision: 1806

Modified:
   experiments/greiol/src/CacheWolf/CacheSize.java
   experiments/greiol/src/CacheWolf/CacheType.java
   experiments/greiol/src/CacheWolf/RadarPanel.java
   experiments/greiol/src/CacheWolf/ShowCacheInBrowser.java
   experiments/greiol/src/CacheWolf/SpiderGC.java
   experiments/greiol/src/CacheWolf/navi/GotoPanel.java
   experiments/greiol/src/exp/ExploristExporter.java
   experiments/greiol/src/exp/Exporter.java
   experiments/greiol/src/exp/GPXExporter.java
Log:
yet another backup

Modified: experiments/greiol/src/CacheWolf/CacheSize.java
===================================================================
--- experiments/greiol/src/CacheWolf/CacheSize.java	2009-05-14 21:32:51 UTC (rev 1805)
+++ experiments/greiol/src/CacheWolf/CacheSize.java	2009-05-14 23:48:06 UTC (rev 1806)
@@ -7,105 +7,105 @@
 	 * up ;-)
 	 */
 	/** container size not chosen */
-	static final protected byte CW_SIZE_NOTCHOSEN = 0;
+	public static final byte CW_SIZE_NOTCHOSEN = 0;
 	/** container size other */
-	static final protected byte CW_SIZE_OTHER = 1;
+	public static final byte CW_SIZE_OTHER = 1;
 	/** container size micro */
-	static final protected byte CW_SIZE_MICRO = 2;
+	public static final byte CW_SIZE_MICRO = 2;
 	/* container size small */
-	static final protected byte CW_SIZE_SMALL = 3;
+	public static final byte CW_SIZE_SMALL = 3;
 	/** container size regular */
-	static final protected byte CW_SIZE_REGULAR = 4;
+	public static final byte CW_SIZE_REGULAR = 4;
 	/** container size large */
-	static final protected byte CW_SIZE_LARGE = 5;
+	public static final byte CW_SIZE_LARGE = 5;
 	/** container size very large */
-	static final protected byte CW_SIZE_VERYLARGE = 6;
+	public static final byte CW_SIZE_VERYLARGE = 6;
 	/** container size none */
-	static final protected byte CW_SIZE_NONE = 7;
+	public static final byte CW_SIZE_NONE = 7;
 	/** container size virtual */
-	static final protected byte CW_SIZE_VIRTUAL = 8;
+	public static final byte CW_SIZE_VIRTUAL = 8;
 	/** unparsable size or missing size information should throw IllegalArgumentExceptions when found */
-	static final protected byte CW_SIZE_ERROR = -1;
+	public static final byte CW_SIZE_ERROR = -1;
 
 	/*
 	 * geocaching.com size strings as found by analyzing GPX files 
 	 * plus opencaching & terracaching Very large + none
 	 */
-	static final protected String GC_SIZE_MICRO = "Micro";
-	static final protected String GC_SIZE_SMALL = "Small";
-	static final protected String GC_SIZE_REGULAR = "Regular";
-	static final protected String GC_SIZE_LARGE = "Large";
-	static final protected String GC_SIZE_NOTCHOSEN = "Not chosen";
-	static final protected String GC_SIZE_OTHER = "Other";
-	static final protected String GC_SIZE_VIRTUAL = "Virtual";
-	static final protected String OCTC_SIZE_VERYLARGE = "Very large";
-	static final protected String OCTC_SIZE_NONE = "None";
+	public static final String GC_SIZE_MICRO = "Micro";
+	public static final String GC_SIZE_SMALL = "Small";
+	public static final String GC_SIZE_REGULAR = "Regular";
+	public static final String GC_SIZE_LARGE = "Large";
+	public static final String GC_SIZE_NOTCHOSEN = "Not chosen";
+	public static final String GC_SIZE_OTHER = "Other";
+	public static final String GC_SIZE_VIRTUAL = "Virtual";
+	public static final String OCTC_SIZE_VERYLARGE = "Very large";
+	public static final String OCTC_SIZE_NONE = "None";
 
 	/*
 	 * OpenCaching Size IDs see
 	 * http://oc-server.svn.sourceforge.net/viewvc/oc-server/doc/sql/static-data/data.sql?view=markup
 	 */
-	static final protected String OC_SIZE_OTHER = "1";
-	static final protected String OC_SIZE_MICRO = "2";
-	static final protected String OC_SIZE_SMALL = "3";
-	static final protected String OC_SIZE_NORMAL = "4";
-	static final protected String OC_SIZE_LARGE = "5";
-	static final protected String OC_SIZE_VERYLARGE = "6";
-	static final protected String OC_SIZE_NONE = "7";
+	public static final String OC_SIZE_OTHER = "1";
+	public static final String OC_SIZE_MICRO = "2";
+	public static final String OC_SIZE_SMALL = "3";
+	public static final String OC_SIZE_NORMAL = "4";
+	public static final String OC_SIZE_LARGE = "5";
+	public static final String OC_SIZE_VERYLARGE = "6";
+	public static final String OC_SIZE_NONE = "7";
 
 	/*
 	 * TerraCaching Size IDs taken from old GPXimporter (?? reliable source ??)
 	 */
-	static final protected String TC_SIZE_MICRO = "1";
-	static final protected String TC_SIZE_MEDIUM = "2";
-	static final protected String TC_SIZE_REGULAR = "3";
-	static final protected String TC_SIZE_LARGE = "4";
-	static final protected String TC_SIZE_VERYLARGE = "4";
+	public static final String TC_SIZE_MICRO = "1";
+	public static final String TC_SIZE_MEDIUM = "2";
+	public static final String TC_SIZE_REGULAR = "3";
+	public static final String TC_SIZE_LARGE = "4";
+	public static final String TC_SIZE_VERYLARGE = "4";
 
 	/*
 	 * images to show in CW index panel we use less images than sizes since all
 	 * non physical caches are represented by the same symbol
 	 */
 	/** GUI image for micro caches */
-	static final protected String CW_GUIIMG_MICRO = "sizeMicro.png";
+	public static final String CW_GUIIMG_MICRO = "sizeMicro.png";
 	/** GUI image for small caches */
-	static final protected String CW_GUIIMG_SMALL = "sizeSmall.png";
+	public static final String CW_GUIIMG_SMALL = "sizeSmall.png";
 	/** GUI image for regular / normal caches */
-	static final protected String CW_GUIIMG_NORMAL = "sizeReg.png";
+	public static final String CW_GUIIMG_NORMAL = "sizeReg.png";
 	/** GUI image for large caches */
-	static final protected String CW_GUIIMG_LARGE = "sizeLarge.png";
+	public static final String CW_GUIIMG_LARGE = "sizeLarge.png";
 	/** GUI image for non physical caches */
-	static final protected String CW_GUIIMG_NONPHYSICAL = "sizeNonPhysical.png";
+	public static final String CW_GUIIMG_NONPHYSICAL = "sizeNonPhysical.png";
 	/** GUI image for very large caches */
-	static final protected String CW_GUIIMG_VERYLARGE = "sizeVLarge.png";
+	public static final String CW_GUIIMG_VERYLARGE = "sizeVLarge.png";
 
 	/*
 	 * IDs for the sizePics[] array in TableModel therefore they must start with
 	 * 0 and be consecutive
 	 */
-	static final protected byte CW_GUIIMGID_MICRO = 0;
-	static final protected byte CW_GUIIMGID_SMALL = 1;
-	static final protected byte CW_GUIIMGID_NORMAL = 2;
-	static final protected byte CW_GUIIMGID_LARGE = 3;
-	static final protected byte CW_GUIIMGID_NONPHYSICAL = 4;
-	static final protected byte CW_GUIIMGID_VERYLARGE = 5;
+	public static final byte CW_GUIIMGID_MICRO = 0;
+	public static final byte CW_GUIIMGID_SMALL = 1;
+	public static final byte CW_GUIIMGID_NORMAL = 2;
+	public static final byte CW_GUIIMGID_LARGE = 3;
+	public static final byte CW_GUIIMGID_NONPHYSICAL = 4;
+	public static final byte CW_GUIIMGID_VERYLARGE = 5;
 
 	/*
 	 * total number of different size images will be used to det the dimension
 	 * of sizePics[] array in TableModel
 	 */
-	static final protected byte CW_TOTAL_SIZE_IMAGES = 6;
+	public static final byte CW_TOTAL_SIZE_IMAGES = 6;
 
 	/*
 	 * bit masks to be used with the filter function
 	 */
-	static final protected byte CW_FILTER_MICRO = 0x01 << 0;
-	static final protected byte CW_FILTER_SMALL = 0x01 << 1;
-	static final protected byte CW_FILTER_NORMAL = 0x01 << 2;
-	static final protected byte CW_FILTER_LARGE = 0x01 << 3;
-	static final protected byte CW_FILTER_VERYLARGE = 0x01 << 4;
-	static final protected byte CW_FILTER_NONPHYSICAL = 0x01 << 5;
-	static final protected byte CW_FILTER_ALL = CW_FILTER_MICRO
+	public static final byte CW_FILTER_MICRO = 0x01 << 0;
+	public static final byte CW_FILTER_SMALL = 0x01 << 1;
+	public static final byte CW_FILTER_NORMAL = 0x01 << 2;
+	public static final byte CW_FILTER_LARGE = 0x01 << 3;
+	public static final byte CW_FILTER_VERYLARGE = 0x01 << 4;
+	public static final byte CW_FILTER_NONPHYSICAL = 0x01 << 5;
+	public static final byte CW_FILTER_ALL = CW_FILTER_MICRO
 			| CW_FILTER_SMALL | CW_FILTER_NORMAL | CW_FILTER_LARGE
 			| CW_FILTER_NONPHYSICAL | CW_FILTER_VERYLARGE;
 

Modified: experiments/greiol/src/CacheWolf/CacheType.java
===================================================================
--- experiments/greiol/src/CacheWolf/CacheType.java	2009-05-14 21:32:51 UTC (rev 1805)
+++ experiments/greiol/src/CacheWolf/CacheType.java	2009-05-14 23:48:06 UTC (rev 1806)
@@ -1,148 +1,176 @@
 package CacheWolf;
 
+/**
+ * Handels all aspects of converting cache type information from
+ * and to the various im- and exporters as well as for converting
+ * legavy profiles to courrent standard
+ */
 public final class CacheType {
 	
 	/** custom waypoint */
-	static protected final byte CW_TYPE_CUSTOM = 0;
+	public static final byte CW_TYPE_CUSTOM = 0;
 	/** traditional cache (GC,OC) */
-	static protected final byte CW_TYPE_TRADITIONAL = 2;
+	public static final byte CW_TYPE_TRADITIONAL = 2;
 	/** multi cache (GC,OC) */
-	static protected final byte CW_TYPE_MULTI = 3;
+	public static final byte CW_TYPE_MULTI = 3;
 	/** virtual cache (GC) */
-	static protected final byte CW_TYPE_VIRTUAL = 4;
+	public static final byte CW_TYPE_VIRTUAL = 4;
 	/** letterbox cache (GC) */
-	static protected final byte CW_TYPE_LETTERBOX = 5;
+	public static final byte CW_TYPE_LETTERBOX = 5;
 	/** event cache (OC,GC) */
-	static protected final byte CW_TYPE_EVENT = 6;
+	public static final byte CW_TYPE_EVENT = 6;
 	/** quiz cache (OC) */
-	static protected final byte CW_TYPE_QUIZ = 7;
+	public static final byte CW_TYPE_QUIZ = 7;
 	/** unknown cache (GC) */
-	static protected final byte CW_TYPE_UNKNOWN = 8;
+	public static final byte CW_TYPE_UNKNOWN = 8;
 	/** math cache (OC) */
-	static protected final byte CW_TYPE_MATH = 108;
+	public static final byte CW_TYPE_MATH = 108;
 	/** moving cache (OC) */
-	static protected final byte CW_TYPE_MOVING = 9;
+	public static final byte CW_TYPE_MOVING = 9;
 	/** drive in cache (OC) */
-	static protected final byte CW_TYPE_DRIVE_IN = 10;
+	public static final byte CW_TYPE_DRIVE_IN = 10;
 	/** webcam cache (GC,OC) */
-	static protected final byte CW_TYPE_WEBCAM = 11;
+	public static final byte CW_TYPE_WEBCAM = 11;
 	/** locationless cache (GC) */
-	static protected final byte CW_TYPE_LOCATIONLESS = 12;
+	public static final byte CW_TYPE_LOCATIONLESS = 12;
 	/** CITO cache (GC,OC)*/
-	static protected final byte CW_TYPE_CITO = 13;
+	public static final byte CW_TYPE_CITO = 13;
 	/** Additional Waypoint Parking (GC) */
-	static protected final byte CW_TYPE_PARKING = 50;
+	public static final byte CW_TYPE_PARKING = 50;
 	/** Additional Waypoint Stage of a Multi (GC) */
-	static protected final byte CW_TYPE_STAGE = 51;
+	public static final byte CW_TYPE_STAGE = 51;
 	/** Additional Waypoint Question to answer (GC) */
-	static protected final byte CW_TYPE_QUESTION = 52;
+	public static final byte CW_TYPE_QUESTION = 52;
 	/** Additional Waypoint Final (GC) */
-	static protected final byte CW_TYPE_FINAL = 53;
+	public static final byte CW_TYPE_FINAL = 53;
 	/** Additional Waypoint Trailhead (GC) */
-	static protected final byte CW_TYPE_TRAILHEAD = 54;
+	public static final byte CW_TYPE_TRAILHEAD = 54;
 	/** Additional Waypoint Reference (GC) */
-	static protected final byte CW_TYPE_REFERENCE = 55;
+	public static final byte CW_TYPE_REFERENCE = 55;
 	/** Mega Event Cache (GC) */
-	static protected final byte CW_TYPE_MEGA_EVENT = 100;
+	public static final byte CW_TYPE_MEGA_EVENT = 100;
 	/** WhereIGo Cache (GC) */
-	static protected final byte CW_TYPE_WHEREIGO = 101;
+	public static final byte CW_TYPE_WHEREIGO = 101;
 	/** Project Ape cache (GC)*/
-	static protected final byte CW_TYPE_APE = 102;
+	public static final byte CW_TYPE_APE = 102;
 	/** Adenture Maze Exhibit (GC)*/
-	static protected final byte CW_TYPE_MAZE = 103;
+	public static final byte CW_TYPE_MAZE = 103;
 	/** Earth Cache (GC) */
-	static protected final byte CW_TYPE_EARTH = 104;
+	public static final byte CW_TYPE_EARTH = 104;
 	/** unparsable cache type or missing information, should throw IllegalArgumentExceptions when found */
-	static protected final byte CW_TYPE_ERROR = -1;
+	public static final byte CW_TYPE_ERROR = -1;
 	
+	/** image for custom waypoints */
+	public static final String CW_GUIIMG_CUSTOM = "0.png";
 	/** image for traditional cache (GC,OC) */
-	static protected final String CW_GUIIMG_TRADITIONAL = "2.png";
+	public static final String CW_GUIIMG_TRADITIONAL = "2.png";
 	/** image for multi cache (GC,OC) */
-	static protected final String CW_GUIIMG_MULTI = "3.png";
+	public static final String CW_GUIIMG_MULTI = "3.png";
 	/** image for virtual cache (GC) */
-	static protected final String CW_GUIIMG_VIRTUAL = "4.png";
+	public static final String CW_GUIIMG_VIRTUAL = "4.png";
 	/** image for letterbox cache (GC) */
-	static protected final String CW_GUIIMG_LETTERBOX = "5.png";
+	public static final String CW_GUIIMG_LETTERBOX = "5.png";
 	/** image for event cache (OC,GC) */
-	static protected final String CW_GUIIMG_EVENT = "6.png";
+	public static final String CW_GUIIMG_EVENT = "6.png";
 	/** image for quiz cache (OC) */
-	static protected final String CW_GUIIMG_QUIZ = "8.png";
+	public static final String CW_GUIIMG_QUIZ = "8.png";
 	/** image for unknown cache (GC) */
-	static protected final String CW_GUIIMG_UNKNOWN = "8.png";
+	public static final String CW_GUIIMG_UNKNOWN = "8.png";
 	/** image for math cache (OC) */
-	static protected final String CW_GUIIMG_MATH = "108.png";
+	public static final String CW_GUIIMG_MATH = "108.png";
 	/** image for moving cache (OC) */
-	static protected final String CW_GUIIMG_MOVING = "109.png";
+	public static final String CW_GUIIMG_MOVING = "109.png";
 	/** image for drive in cache (OC) */
-	static protected final String CW_GUIIMG_DRIVE_IN = "110.png";
+	public static final String CW_GUIIMG_DRIVE_IN = "110.png";
 	/** image for webcam cache (GC,OC) */
-	static protected final String CW_GUIIMG_WEBCAM = "11.png";
+	public static final String CW_GUIIMG_WEBCAM = "11.png";
 	/** image for locationless cache (GC) */
-	static protected final String CW_GUIIMG_LOCATIONLESS = "12.png";
+	public static final String CW_GUIIMG_LOCATIONLESS = "12.png";
 	/** image for CITO cache (GC,OC)*/
-	static protected final String CW_GUIIMG_CITO = "13.png";
+	public static final String CW_GUIIMG_CITO = "13.png";
 	/** image for Additional Waypoint Parking (GC) */
-	static protected final String CW_GUIIMG_PARKING = "pkg.png";
+	public static final String CW_GUIIMG_PARKING = "pkg.png";
 	/** image for Additional Waypoint Stage of a Multi (GC) */
-	static protected final String CW_GUIIMG_STAGE = "stage.png";
+	public static final String CW_GUIIMG_STAGE = "stage.png";
 	/** image for Additional Waypoint Question to answer (GC) */
-	static protected final String CW_GUIIMG_QUESTION = "puzzle.png";
+	public static final String CW_GUIIMG_QUESTION = "puzzle.png";
 	/** image for Additional Waypoint Final (GC) */
-	static protected final String CW_GUIIMG_FINAL = "flag.png";
+	public static final String CW_GUIIMG_FINAL = "flag.png";
 	/** image for Additional Waypoint Trailhead (GC) */
-	static protected final String CW_GUIIMG_TRAILHEAD = "trailhead.png";
+	public static final String CW_GUIIMG_TRAILHEAD = "trailhead.png";
 	/** image for Additional Waypoint Reference Point (GC) */
-	static protected final String CW_GUIIMG_REFERENCE = "waypoint.png";
+	public static final String CW_GUIIMG_REFERENCE = "waypoint.png";
 	/** image for Mega Event Cache (GC) */
-	static protected final String CW_GUIIMG_MEGA_EVENT = "453.png";
+	public static final String CW_GUIIMG_MEGA_EVENT = "453.png";
 	/** image for WhereIGo Cache (GC) */
-	static protected final String CW_GUIIMG_WHEREIGO = "1858.png";
+	public static final String CW_GUIIMG_WHEREIGO = "1858.png";
 	/** image for Project Ape cache (GC)*/
-	static protected final String CW_GUIIMG_APE = "typeApe.png";
+	public static final String CW_GUIIMG_APE = "typeApe.png";
 	/** image for Adenture Maze Exhibit (GC)*/
-	static protected final String CW_GUIIMG_MAZE = "typeMaze.png";
+	public static final String CW_GUIIMG_MAZE = "typeMaze.png";
 	/** image for Earth Cache (GC) */
-	static protected final String CW_GUIIMG_EARTH = "137.png";
+	public static final String CW_GUIIMG_EARTH = "137.png";
 	
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_CUSTOM = "Custom";
+	public static final String CW_GUISTR_CUSTOM = "Custom";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_TRADI = "Tradi";
+	public static final String CW_GUISTR_TRADI = "Tradi";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_MULTI = "Multi";
+	public static final String CW_GUISTR_MULTI = "Multi";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_VIRTUAL = "Virtual";
+	public static final String CW_GUISTR_VIRTUAL = "Virtual";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_LETTERBOX = "Letterbox";
+	public static final String CW_GUISTR_LETTERBOX = "Letterbox";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_EVENT = "Event";
+	public static final String CW_GUISTR_EVENT = "Event";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_MEGAEVENT = "Mega Event";
+	public static final String CW_GUISTR_MEGAEVENT = "Mega Event";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_WEBCAM = "Webcam";
+	public static final String CW_GUISTR_WEBCAM = "Webcam";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_UNKNOWN = "Mystery";
+	public static final String CW_GUISTR_UNKNOWN = "Mystery";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_LOCATIONLESS = "Locationless";
+	public static final String CW_GUISTR_LOCATIONLESS = "Locationless";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_CITO = "CITO";
+	public static final String CW_GUISTR_CITO = "CITO";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_EARTH = "Earthcache";
+	public static final String CW_GUISTR_EARTH = "Earthcache";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_WHEREIGO = "WherIGo";
+	public static final String CW_GUISTR_WHEREIGO = "WherIGo";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_PARKING = "Addi: Parking";
+	public static final String CW_GUISTR_PARKING = "Addi: Parking";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_STAGE = "Addi: Stage";
+	public static final String CW_GUISTR_STAGE = "Addi: Stage";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_QUESTION = "Addi: Question";
+	public static final String CW_GUISTR_QUESTION = "Addi: Question";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_FINAL = "Addi: Final";
+	public static final String CW_GUISTR_FINAL = "Addi: Final";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_TRAILHEAD = "Addi: Trailhead";
+	public static final String CW_GUISTR_TRAILHEAD = "Addi: Trailhead";
 	/** GUI string for custom waypoit */
-	static protected final String CW_GUISTR_REFERENCE = "Addi: Reference";
+	public static final String CW_GUISTR_REFERENCE = "Addi: Reference";
 	
+	public static final String GC_GPX_TRADITIONAL = "Traditional Cache";
+	public static final String GC_GPX_MULTI = "Multi-cache";
+	public static final String GC_GPX_VIRTUAL = "Virtual Cache";
+	public static final String GC_GPX_LETTERBOX = "Letterbox Hybrid";
+	public static final String GC_GPX_EVENT = "Event Cache";
+	public static final String GC_GPX_UNKNOWN = "Unknown Cache";
+	public static final String GC_GPX_WEBCAM = "Webcam Cache";
+	public static final String GC_GPX_LOCATIONLESS = "Locationless (Reverse) Cache";
+	public static final String GC_GPX_CITO = "Cache In Trash Out Event";
+	public static final String GC_GPX_EARTH = "Earthcache";
+	public static final String GC_GPX_MEGA_EVENT = "Mega-Event Cache";
+	public static final String GC_GPX_WHEREIGO = "Wherigo Cache";
+	public static final String GC_GPX_PARKING = "Waypoint|Parking Area";
+	public static final String GC_GPX_STAGE = "Waypoint|Stages of a Multicache";
+	public static final String GC_GPX_QUESTION = "Waypoint|Question to Answer";
+	public static final String GC_GPX_FINAL = "Waypoint|Final Coordinates";
+	public static final String GC_GPX_TRAILHEAD = "Waypoint|Trailhead";
+	public static final String GC_GPX_REFERENCE = "Waypoint|Reference Point";
+	public static final String GC_GPX_MAZE = "FIXME"; //FIXME: insert right string
+	public static final String GC_GPX_APE = "FIXME"; //FIXME: insert right string
+	
 	/**  constructor does nothing */
 	public CacheType() {
 
@@ -160,34 +188,59 @@
 	
 	/**
 	 * 
-	 * @param size
+	 * @param type
 	 * @return
 	 * @throws IllegalArgumentException
 	 */
-	public static String getExportShortId(byte size) throws IllegalArgumentException {
-		throw new IllegalArgumentException("unmatched argument "+size+" in CacheSizeNew getExportShortId()");
+	public static String getExportShortId(byte type) throws IllegalArgumentException {
+		switch (type){
+		case CW_TYPE_CUSTOM: return "C";
+		case CW_TYPE_TRADITIONAL: return "T";
+		case CW_TYPE_MULTI: return "M";
+		case CW_TYPE_VIRTUAL: return "V";
+		case CW_TYPE_LETTERBOX: return "L";
+		case CW_TYPE_EVENT: return "X";
+		case CW_TYPE_WEBCAM: return "W";
+		case CW_TYPE_UNKNOWN: return "U";
+		case CW_TYPE_LOCATIONLESS: return "O";
+		case CW_TYPE_CITO: return "X";
+		case CW_TYPE_EARTH: return "E";
+		case CW_TYPE_MEGA_EVENT: return "X";
+		case CW_TYPE_WHEREIGO: return "G";
+		case CW_TYPE_PARKING: return "P";
+		case CW_TYPE_STAGE: return "S";
+		case CW_TYPE_QUESTION: return "Q";
+		case CW_TYPE_FINAL: return "F";
+		case CW_TYPE_TRAILHEAD: return "H";
+		case CW_TYPE_REFERENCE: return "R";
+		case CW_TYPE_APE: return "T";
+		case CW_TYPE_MAZE: return "X";
+		default: throw new IllegalArgumentException("unmatched argument "+type+" in CacheSizeNew getExportShortId()");
+		}
 	}
 	
 	/**
 	 * 
-	 * @param size
+	 * @param type
 	 * @return
 	 * @throws IllegalArgumentException if size can not be mapped to internal representation
 	 * @deprecated remove once v1 file version compatibility is abandoned
 	 */
-	public static final byte v1Converter(String size) throws IllegalArgumentException  {
-		throw new IllegalArgumentException("unmatched argument "+size+" in CacheSizeNew v1Converter()");
+	public static final byte v1Converter(String type) throws IllegalArgumentException  {
+		throw new IllegalArgumentException("unmatched argument "+type+" in CacheSizeNew v1Converter()");
 	}
 
 	/**
 	 * 
-	 * @param size
+	 * @param type
 	 * @return
 	 * @throws IllegalArgumentException if size can not be mapped to internal representation
 	 * @deprecated remove once v2 file version compatibility is abandoned
 	 */
-	public static final byte v2Converter(byte size) throws IllegalArgumentException  {
-		throw new IllegalArgumentException("unmatched argument "+size+" in CacheSizeNew v2Converter()");
+	public static final byte v2Converter(byte type) throws IllegalArgumentException  {
+		switch (type) {
+		default: throw new IllegalArgumentException("unmatched argument "+type+" in CacheSizeNew v2Converter()");
+		}
 	}
 	
 	/**
@@ -276,24 +329,28 @@
 	 * @throws IllegalArgumentException
 	 */
 	public static final byte gpxType2CwType(String gpxType) throws IllegalArgumentException {
-		if (gpxType.equals("Traditional Cache") || gpxType.equals("Traditional")|| gpxType.equals("Classic")) return CW_TYPE_TRADITIONAL;
-		if (gpxType.equals("Multi-cache") || gpxType.equals("Multi") || gpxType.equals("Offset")) return CW_TYPE_MULTI;
-		if (gpxType.equals("Virtual Cache") || gpxType.equals("Virtual")) return CW_TYPE_VIRTUAL;
-		if (gpxType.equals("Letterbox Hybrid")) return CW_TYPE_LETTERBOX;
-		if (gpxType.equals("Event Cache") || gpxType.equals("Event")) return CW_TYPE_EVENT;
-		if (gpxType.equals("Unknown Cache") || gpxType.equals("Other") || gpxType.equals("Quiz")) return CW_TYPE_UNKNOWN;
-		if (gpxType.equals("Webcam Cache") || gpxType.equals("Webcam")) return CW_TYPE_WEBCAM;
-		if (gpxType.equals("Locationless (Reverse) Cache")) return CW_TYPE_LOCATIONLESS;
-		if (gpxType.equals("Cache In Trash Out Event")) return CW_TYPE_CITO;
-		if (gpxType.equals("Earthcache") || gpxType.equals("Earth")) return CW_TYPE_EARTH;
-		if (gpxType.equals("Mega-Event Cache")) return CW_TYPE_MEGA_EVENT;
-		if (gpxType.equals("Wherigo Cache")) return CW_TYPE_WHEREIGO;
-		if (gpxType.equals("Waypoint|Parking Area")) return CW_TYPE_PARKING;
-		if (gpxType.equals("Waypoint|Stages of a Multicache")) return CW_TYPE_STAGE;
-		if (gpxType.equals("Waypoint|Question to Answer")) return CW_TYPE_QUESTION;
-		if (gpxType.equals("Waypoint|Final Coordinates")||gpxType.equals("Waypoint|Final Location")) return CW_TYPE_FINAL;
-		if (gpxType.equals("Waypoint|Trailhead")) return CW_TYPE_TRAILHEAD;
-		if (gpxType.equals("Waypoint|Reference Point")) return CW_TYPE_REFERENCE;
+		// TODO: add ape
+		// TODO: add maze
+		if (gpxType.equals(GC_GPX_TRADITIONAL) || gpxType.equals("Traditional")|| gpxType.equals("Classic")) return CW_TYPE_TRADITIONAL;
+		if (gpxType.equals(GC_GPX_MULTI) || gpxType.equals("Multi") || gpxType.equals("Offset")) return CW_TYPE_MULTI;
+		if (gpxType.equals(GC_GPX_VIRTUAL) || gpxType.equals("Virtual")) return CW_TYPE_VIRTUAL;
+		if (gpxType.equals(GC_GPX_LETTERBOX)) return CW_TYPE_LETTERBOX;
+		if (gpxType.equals(GC_GPX_EVENT) || gpxType.equals("Event")) return CW_TYPE_EVENT;
+		if (gpxType.equals(GC_GPX_UNKNOWN) || gpxType.equals("Other") || gpxType.equals("Quiz")) return CW_TYPE_UNKNOWN;
+		if (gpxType.equals(GC_GPX_WEBCAM) || gpxType.equals("Webcam")) return CW_TYPE_WEBCAM;
+		if (gpxType.equals(GC_GPX_LOCATIONLESS)) return CW_TYPE_LOCATIONLESS;
+		if (gpxType.equals(GC_GPX_CITO)) return CW_TYPE_CITO;
+		if (gpxType.equals(GC_GPX_EARTH) || gpxType.equals("Earth")) return CW_TYPE_EARTH;
+		if (gpxType.equals(GC_GPX_MEGA_EVENT)) return CW_TYPE_MEGA_EVENT;
+		if (gpxType.equals(GC_GPX_WHEREIGO)) return CW_TYPE_WHEREIGO;
+		if (gpxType.equals(GC_GPX_PARKING)) return CW_TYPE_PARKING;
+		if (gpxType.equals(GC_GPX_STAGE)) return CW_TYPE_STAGE;
+		if (gpxType.equals(GC_GPX_QUESTION)) return CW_TYPE_QUESTION;
+		if (gpxType.equals(GC_GPX_FINAL)||gpxType.equals("Waypoint|Final Location")) return CW_TYPE_FINAL;
+		if (gpxType.equals(GC_GPX_TRAILHEAD)) return CW_TYPE_TRAILHEAD;
+		if (gpxType.equals(GC_GPX_REFERENCE)) return CW_TYPE_REFERENCE;
+		if (gpxType.equals(GC_GPX_MAZE)) return CW_TYPE_MAZE;
+		if (gpxType.equals(GC_GPX_APE)) return CW_TYPE_APE;
 		throw new IllegalArgumentException("unmatched argument "+gpxType+" in CacheSize gpxType2CwType()");
 	}
 	
@@ -317,6 +374,90 @@
 		throw new IllegalArgumentException("unmatched argument "+ocType+" in CacheSize ocType2CwType()");
 	}
 	
+	/**
+	 * 
+	 * @param gcType
+	 * @return
+	 * @throws IllegalArgumentException
+	 */
+	public static final byte gcSpider2CwType(String gcType) throws IllegalArgumentException {
+		if (gcType.equals("2")) { return CW_TYPE_TRADITIONAL; }
+		if (gcType.equals("3")) { return CW_TYPE_MULTI; }
+		if (gcType.equals("4")) { return CW_TYPE_VIRTUAL; }
+		if (gcType.equals("5")) { return CW_TYPE_LETTERBOX; }
+		if (gcType.equals("6")) { return CW_TYPE_EVENT; }
+		if (gcType.equals("8")) { return CW_TYPE_UNKNOWN; }
+		if (gcType.equals("9")) { return CW_TYPE_APE; }
+		if (gcType.equals("11")) { return CW_TYPE_WEBCAM; }
+		if (gcType.equals("12")) { return CW_TYPE_LOCATIONLESS; }
+		if (gcType.equals("13")) { return CW_TYPE_CITO; }
+		if (gcType.equals("137")) { return CW_TYPE_EARTH; }
+		if (gcType.equals("453")) { return CW_TYPE_MEGA_EVENT; }
+		if (gcType.equals("1858")) { return CW_TYPE_WHEREIGO; }
+		if (gcType.equals("1304")) { return CW_TYPE_MAZE; }
+		throw new IllegalArgumentException("unmatched argument "+gcType+" in CacheSize gcSpider2CwType()");
+	}
+	
+	/**
+	 * 
+	 * @param id
+	 * @return
+	 * @throws IllegalArgumentException
+	 */
+	public static final String typeImageForId(byte id) throws IllegalArgumentException {
+		switch (id) {
+		case CW_TYPE_CUSTOM: return "CW_GUIIMG_CUSTOM";
+		case CW_TYPE_TRADITIONAL: return CW_GUIIMG_TRADITIONAL;
+		case CW_TYPE_MULTI: return CW_GUIIMG_MULTI;
+		case CW_TYPE_VIRTUAL: return CW_GUIIMG_VIRTUAL;
+		case CW_TYPE_LETTERBOX: return CW_GUIIMG_LETTERBOX;
+		case CW_TYPE_EVENT: return CW_GUIIMG_EVENT;
+		case CW_TYPE_WEBCAM: return CW_GUIIMG_WEBCAM;
+		case CW_TYPE_UNKNOWN: return CW_GUIIMG_UNKNOWN;
+		case CW_TYPE_LOCATIONLESS: return CW_GUIIMG_LOCATIONLESS;
+		case CW_TYPE_CITO: return CW_GUIIMG_CITO;
+		case CW_TYPE_EARTH: return CW_GUIIMG_EARTH;
+		case CW_TYPE_MEGA_EVENT: return CW_GUIIMG_MEGA_EVENT;
+		case CW_TYPE_WHEREIGO: return CW_GUIIMG_WHEREIGO;
+		case CW_TYPE_PARKING: return CW_GUIIMG_PARKING;
+		case CW_TYPE_STAGE: return CW_GUIIMG_STAGE;
+		case CW_TYPE_QUESTION: return CW_GUIIMG_QUESTION;
+		case CW_TYPE_FINAL: return CW_GUIIMG_FINAL;
+		case CW_TYPE_TRAILHEAD: return CW_GUIIMG_TRAILHEAD;
+		case CW_TYPE_REFERENCE: return CW_GUIIMG_REFERENCE;
+		case CW_TYPE_APE: return CW_GUIIMG_APE;
+		case CW_TYPE_MAZE: return CW_GUIIMG_MAZE;
+		default: throw new IllegalArgumentException("unmatched argument "+id+" in CacheSize typeImageForId()");
+		}
+	}
+	
+	public static final String id2GpxString(byte id) throws IllegalArgumentException {
+		switch (id) {
+		case CW_TYPE_TRADITIONAL: return GC_GPX_TRADITIONAL;
+		case CW_TYPE_MULTI: return GC_GPX_MULTI;
+		case CW_TYPE_VIRTUAL: return GC_GPX_VIRTUAL;
+		case CW_TYPE_LETTERBOX: return GC_GPX_LETTERBOX;
+		case CW_TYPE_EVENT: return GC_GPX_EVENT;
+		case CW_TYPE_UNKNOWN: return GC_GPX_UNKNOWN;
+		case CW_TYPE_WEBCAM: return GC_GPX_WEBCAM;
+		case CW_TYPE_LOCATIONLESS: return GC_GPX_LOCATIONLESS;
+		case CW_TYPE_CITO: return GC_GPX_CITO;
+		case CW_TYPE_EARTH: return GC_GPX_EARTH;
+		case CW_TYPE_MEGA_EVENT: return GC_GPX_MEGA_EVENT;
+		case CW_TYPE_WHEREIGO: return GC_GPX_WHEREIGO;
+		case CW_TYPE_PARKING: return GC_GPX_PARKING;
+		case CW_TYPE_STAGE: return GC_GPX_STAGE;
+		case CW_TYPE_QUESTION: return GC_GPX_QUESTION;
+		case CW_TYPE_FINAL: return GC_GPX_FINAL;
+		case CW_TYPE_TRAILHEAD: return GC_GPX_TRAILHEAD;
+		case CW_TYPE_REFERENCE: return GC_GPX_REFERENCE;
+		case CW_TYPE_MAZE: return GC_GPX_MAZE;
+		case CW_TYPE_APE: return GC_GPX_APE;
+		default: throw new IllegalArgumentException("unmatched argument "+id+" in CacheSize id2GpxString()");
+		}
+		
+	}
+	
 	// cache to image
 	
 }

Modified: experiments/greiol/src/CacheWolf/RadarPanel.java
===================================================================
--- experiments/greiol/src/CacheWolf/RadarPanel.java	2009-05-14 21:32:51 UTC (rev 1805)
+++ experiments/greiol/src/CacheWolf/RadarPanel.java	2009-05-14 23:48:06 UTC (rev 1806)
@@ -134,7 +134,7 @@
 					}
 					Image imgCache=CacheType.cache2Img(holder.getType());
 					// If we have no image for the cache type use a question mark
-					if (imgCache==null) imgCache=CacheType.cache2Img(8); 
+					if (imgCache==null) imgCache=CacheType.cache2Img(CacheType.CW_TYPE_UNKNOWN); 
 					rpi = new RadarPanelImage(imgCache);
 					rpi.wayPoint = holder.getWayPoint();
 					rpi.rownum = i;

Modified: experiments/greiol/src/CacheWolf/ShowCacheInBrowser.java
===================================================================
--- experiments/greiol/src/CacheWolf/ShowCacheInBrowser.java	2009-05-14 21:32:51 UTC (rev 1805)
+++ experiments/greiol/src/CacheWolf/ShowCacheInBrowser.java	2009-05-14 23:48:06 UTC (rev 1806)
@@ -193,7 +193,7 @@
 							addis.put("WAYPOINT",ch.getWayPoint());
 							addis.put("NAME",ch.getCacheName());
 							addis.put("LATLON",ch.LatLon);
-							addis.put("IMG","<img src=\""+CacheType.type2pic(ch.getType())+"\">");
+							addis.put("IMG","<img src=\""+CacheType.typeImageForId(ch.getType())+"\">");
 							addis.put("LONGDESC",ch.getExistingDetails().LongDescription); // Do we need to treat longDesc as above ?
 							addiVect.add(addis);
 						}

Modified: experiments/greiol/src/CacheWolf/SpiderGC.java
===================================================================
--- experiments/greiol/src/CacheWolf/SpiderGC.java	2009-05-14 21:32:51 UTC (rev 1805)
+++ experiments/greiol/src/CacheWolf/SpiderGC.java	2009-05-14 23:48:06 UTC (rev 1806)
@@ -969,10 +969,10 @@
 	 * @param doc A previously fetched cachepage
 	 * @return the waypoint type (Tradi, Multi, etc.)
 	 */
-	private int getType(String doc) throws Exception{
+	private byte getType(String doc) throws Exception {
 		inRex = new Regex(p.getProp("cacheTypeRex"));
 		inRex.search(doc);
-		if(inRex.didMatch()) return new Integer(inRex.stringMatched(1)).intValue();
+		if(inRex.didMatch()) return CacheType.gcSpider2CwType(inRex.stringMatched(1));
 		else return 0;
 	}
 
@@ -982,7 +982,7 @@
 	 * @param chD Cache Details
 	 * @return A HTML string containing the logs
 	 */
-	private LogList getLogs(String doc, CacheHolderDetail chD) throws Exception{
+	private LogList getLogs(String doc, CacheHolderDetail chD) throws Exception {
 		String icon = "";
 		String name = "";
 		String logText = "";
@@ -1331,7 +1331,7 @@
 				typeRex.search(rowBlock);
 				hd.setCacheName(nameRex.stringMatched(1));
 				if(koordRex.didMatch()) hd.setLatLon(koordRex.stringMatched(1));
-				if(typeRex.didMatch()) hd.setType(CacheType.typeText2Number("Waypoint|"+typeRex.stringMatched(1)));
+				if(typeRex.didMatch()) hd.setType(CacheType.gpxType2CwType("Waypoint|"+typeRex.stringMatched(1)));
 				rowBlock = exRowBlock.findNext();
 				descRex.search(rowBlock);
 				hd.getFreshDetails().setLongDescription(descRex.stringMatched(1));

Modified: experiments/greiol/src/CacheWolf/navi/GotoPanel.java
===================================================================
--- experiments/greiol/src/CacheWolf/navi/GotoPanel.java	2009-05-14 21:32:51 UTC (rev 1805)
+++ experiments/greiol/src/CacheWolf/navi/GotoPanel.java	2009-05-14 23:48:06 UTC (rev 1806)
@@ -3,6 +3,7 @@
 import CacheWolf.CWPoint;
 import CacheWolf.CacheDB;
 import CacheWolf.CacheHolder;
+import CacheWolf.CacheType;
 import CacheWolf.CoordsScreen;
 import CacheWolf.DetailsPanel;
 import CacheWolf.Global;
@@ -92,11 +93,11 @@
 		//Format selection for coords		
 		//context menu
 		mnuContextFormt = new Menu();
-		mnuContextFormt.addItem(miDD = new MenuItem("d.d?"));
+		mnuContextFormt.addItem(miDD = new MenuItem("d.d???"));
 		miDD.modifiers &= ~MenuItem.Checked;
-		mnuContextFormt.addItem(miDMM = new MenuItem("d?m.m\'"));
+		mnuContextFormt.addItem(miDMM = new MenuItem("d???m.m\'"));
 		miDMM.modifiers |= MenuItem.Checked;
-		mnuContextFormt.addItem(miDMS = new MenuItem("d?m\'s\""));
+		mnuContextFormt.addItem(miDMS = new MenuItem("d???m\'s\""));
 		miDMS.modifiers &= ~MenuItem.Checked;
 		mnuContextFormt.addItem(miUTM = new MenuItem("UTM"));
 		miUTM.modifiers &= ~MenuItem.Checked;
@@ -171,7 +172,7 @@
 
 		//while (true){
 //		int notinterpreted = 0;
-//		if (myGPS.examine("@??H @??H?@??HH???????H")) { notinterpreted = 0;} else notinterpreted++;
+//		if (myGPS.examine("@??????H @??????H???@??????HH?????????????????????H")) { notinterpreted = 0;} else notinterpreted++;
 //		if (notinterpreted > 5) myGPS.noInterpretableData();
 //		// myGPS.noInterpretableData();
 
@@ -408,7 +409,7 @@
 				CacheHolder ch = new CacheHolder();
 				ch.LatLon = myNavigation.gpsPos.toString();
 				ch.pos = new CWPoint(myNavigation.gpsPos);
-				ch.setType(51); // see CacheType.GC_AW_STAGE_OF_MULTI // TODO unfertig
+				ch.setType(CacheType.CW_TYPE_STAGE); // see CacheType.GC_AW_STAGE_OF_MULTI // TODO unfertig
 				mainT.newWaypoint(ch);
 			}
 			// change destination waypoint

Modified: experiments/greiol/src/exp/ExploristExporter.java
===================================================================
--- experiments/greiol/src/exp/ExploristExporter.java	2009-05-14 21:32:51 UTC (rev 1805)
+++ experiments/greiol/src/exp/ExploristExporter.java	2009-05-14 23:48:06 UTC (rev 1806)
@@ -246,7 +246,7 @@
 		
 		if (!add.equals("")) { // Set Picture in Explorist to Virtual
 			sb.append("Virtual Cache");
-		} else if (ch.getType() != 8) { // Rewrite Unknown Caches
+		} else if (ch.getType() != CacheType.CW_TYPE_UNKNOWN) { // Rewrite Unknown Caches
 			sb.append(CacheType.transType(ch.getType()));
 		} else {
 			sb.append("Mystery Cache");

Modified: experiments/greiol/src/exp/Exporter.java
===================================================================
--- experiments/greiol/src/exp/Exporter.java	2009-05-14 21:32:51 UTC (rev 1805)
+++ experiments/greiol/src/exp/Exporter.java	2009-05-14 23:48:06 UTC (rev 1806)
@@ -411,7 +411,7 @@
 
     public static String getShortDetails( CacheHolder ch ) {
     	StringBuffer strBuf = new StringBuffer(7);
-    	strBuf.append(CacheType.shortType(ch.getType()).toLowerCase());			
+    	strBuf.append(CacheType.getExportShortId(ch.getType()).toLowerCase());			
     	if (!ch.isAddiWpt()) {
     		if ( (ch.getHard().length() > 0) && (ch.getTerrain().length() > 0) ) {
     			strBuf.append(ch.getHard().charAt(0));

Modified: experiments/greiol/src/exp/GPXExporter.java
===================================================================
--- experiments/greiol/src/exp/GPXExporter.java	2009-05-14 21:32:51 UTC (rev 1805)
+++ experiments/greiol/src/exp/GPXExporter.java	2009-05-14 23:48:06 UTC (rev 1806)
@@ -71,7 +71,7 @@
 				} else {
 					strBuf.append("    <sym>Geocache</sym>\r\n");
 				}
-				strBuf.append("    <type>Geocache|").append(CacheType.transType(ch.getType())).append("</type>\r\n");
+				strBuf.append("    <type>Geocache|").append(CacheType.id2GpxString(ch.getType())).append("</type>\r\n");
 				String dummyAvailable = ch.is_available() ? STRING_TRUE:STRING_FALSE;
 				String dummyArchived = ch.is_archived() ? STRING_TRUE:STRING_FALSE;
 				strBuf.append("    <groundspeak:cache id=\"").append( ch.GetCacheID() ).append( "\" available=\"" ).append( dummyAvailable ).append( "\" archived=\"" ).append( dummyArchived).append( "\" xmlns:groundspeak=\"http://www.groundspeak.com/cache/1/0\">\r\n");
@@ -79,7 +79,7 @@
 				strBuf.append("      <groundspeak:placed_by>").append(SafeXML.cleanGPX(ch.getCacheOwner())).append("</groundspeak:placed_by>\r\n");
 				//todo low prio: correct owner-id
 				strBuf.append("      <groundspeak:owner id=\"23\">").append(SafeXML.cleanGPX(ch.getCacheOwner())+"</groundspeak:owner>\r\n");
-				strBuf.append("      <groundspeak:type>").append(CacheType.transType(ch.getType())).append("</groundspeak:type>\r\n");
+				strBuf.append("      <groundspeak:type>").append(CacheType.id2GpxString(ch.getType())).append("</groundspeak:type>\r\n");
 				strBuf.append("      <groundspeak:container>").append(CacheSize.cw2ExportString(ch.getCacheSize())).append("</groundspeak:container>\r\n");
 				//for Colorado/Oregon: 2.0 -> 2
 				String diffTerr = ch.getHard().replace(',','.');
@@ -149,8 +149,8 @@
 				strBuf.append("    </groundspeak:cache>\r\n");
 			}else {
 				// there is no HTML in the description of addi wpts
-				strBuf.append("    <sym>").append(CacheType.transType(ch.getType())).append("</sym>\r\n");
-				strBuf.append("    <type>Waypoint|").append(CacheType.transType(ch.getType())).append("</type>\r\n");
+				strBuf.append("    <sym>").append(CacheType.id2GpxString(ch.getType())).append("</sym>\r\n");
+				strBuf.append("    <type>Waypoint|").append(CacheType.id2GpxString(ch.getType())).append("</type>\r\n");
 			}
 			strBuf.append("  </wpt>\r\n");
 		}catch(Exception e){



From greiol at mail.berlios.de  Fri May 15 18:37:42 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Fri, 15 May 2009 18:37:42 +0200
Subject: [Cachewolf-svn] r1807 - in experiments/greiol: resources
	src/CacheWolf src/CacheWolf/navi src/exp
Message-ID: <200905151637.n4FGbgtn024940@sheep.berlios.de>

Author: greiol
Date: 2009-05-15 18:37:22 +0200 (Fri, 15 May 2009)
New Revision: 1807

Added:
   experiments/greiol/resources/typeApe.png
   experiments/greiol/resources/typeMaze.png
Modified:
   experiments/greiol/src/CacheWolf/CacheHolder.java
   experiments/greiol/src/CacheWolf/CacheList.java
   experiments/greiol/src/CacheWolf/CacheSize.java
   experiments/greiol/src/CacheWolf/CacheType.java
   experiments/greiol/src/CacheWolf/DetailsPanel.java
   experiments/greiol/src/CacheWolf/FilterScreen.java
   experiments/greiol/src/CacheWolf/RadarPanel.java
   experiments/greiol/src/CacheWolf/myInteractivePanel.java
   experiments/greiol/src/CacheWolf/myTableControl.java
   experiments/greiol/src/CacheWolf/myTableModel.java
   experiments/greiol/src/CacheWolf/navi/MovingMap.java
   experiments/greiol/src/exp/ExploristExporter.java
   experiments/greiol/src/exp/HTMLExporter.java
   experiments/greiol/src/exp/MSARCSVExporter.java
   experiments/greiol/src/exp/TPLExporter.java
   experiments/greiol/src/exp/TomTomExporter.java
Log:
almost there. 

Added: experiments/greiol/resources/typeApe.png
===================================================================
(Binary files differ)


Property changes on: experiments/greiol/resources/typeApe.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: experiments/greiol/resources/typeMaze.png
===================================================================
(Binary files differ)


Property changes on: experiments/greiol/resources/typeMaze.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: experiments/greiol/src/CacheWolf/CacheHolder.java
===================================================================
--- experiments/greiol/src/CacheWolf/CacheHolder.java	2009-05-14 23:48:06 UTC (rev 1806)
+++ experiments/greiol/src/CacheWolf/CacheHolder.java	2009-05-15 16:37:22 UTC (rev 1807)
@@ -78,7 +78,7 @@
 	/** The terrain rating of the cache from 1 to 5 in .5 incements */
 	private String terrain = EMPTY;
 	/** The cache type (@see CacheType for translation table)  */
-	private byte type = -1; 
+	private byte type = CacheType.CW_TYPE_ERROR; 
 	/** True if the cache has been archived */
 	private boolean archived = false;
 	/** True if the cache is available for searching */

Modified: experiments/greiol/src/CacheWolf/CacheList.java
===================================================================
--- experiments/greiol/src/CacheWolf/CacheList.java	2009-05-14 23:48:06 UTC (rev 1806)
+++ experiments/greiol/src/CacheWolf/CacheList.java	2009-05-15 16:37:22 UTC (rev 1807)
@@ -92,7 +92,7 @@
 				 CacheHolder ch=cacheList.get(idx);
 				 wayPoint=ch.getWayPoint();
 				 IconAndText imgDrag=new IconAndText();
-				 imgDrag.addColumn(CacheType.cache2Img(ch.getType()));
+				 imgDrag.addColumn(GuiImageBroker.getTypeImage(ch.getType()));
 				 imgDrag.addColumn(ch.getWayPoint());
 				 dc.dragData=dc.startImageDrag(imgDrag,new Point(8,8),this);
 			 } 
@@ -313,7 +313,7 @@
 			// Add cache reference to hidden list
 			cacheList.add(ch);
 			// Add Cache and cache icon to visible list
-			lstCaches.addItem((new MenuItem()).iconize(ch.getWayPoint()+"   "+ch.getCacheName(),CacheType.cache2Img(ch.getType()),true));
+			lstCaches.addItem((new MenuItem()).iconize(ch.getWayPoint()+"   "+ch.getCacheName(),GuiImageBroker.getTypeImage(ch.getType()),true));
 		    dirty=true;
 			return true;
 		} else

Modified: experiments/greiol/src/CacheWolf/CacheSize.java
===================================================================
--- experiments/greiol/src/CacheWolf/CacheSize.java	2009-05-14 23:48:06 UTC (rev 1806)
+++ experiments/greiol/src/CacheWolf/CacheSize.java	2009-05-15 16:37:22 UTC (rev 1807)
@@ -1,5 +1,10 @@
 package CacheWolf;
 
+/**
+ * Handels all aspects of converting cache size information from
+ * and to the various im- and exporters as well as for converting
+ * legavy profiles to current standard
+ */
 public final class CacheSize {
 
 	/*

Modified: experiments/greiol/src/CacheWolf/CacheType.java
===================================================================
--- experiments/greiol/src/CacheWolf/CacheType.java	2009-05-14 23:48:06 UTC (rev 1806)
+++ experiments/greiol/src/CacheWolf/CacheType.java	2009-05-15 16:37:22 UTC (rev 1807)
@@ -3,7 +3,7 @@
 /**
  * Handels all aspects of converting cache type information from
  * and to the various im- and exporters as well as for converting
- * legavy profiles to courrent standard
+ * legavy profiles to current standard
  */
 public final class CacheType {
 	
@@ -322,6 +322,31 @@
 		}
 	}
 	
+	public static final int cw2GuiSelect(byte id) throws IllegalArgumentException {
+		switch (id) {
+		case  CW_TYPE_CUSTOM: return 0;
+		case  CW_TYPE_TRADITIONAL: return 1;
+		case  CW_TYPE_MULTI: return 2;
+		case  CW_TYPE_VIRTUAL: return 3;
+		case  CW_TYPE_LETTERBOX: return 4;
+		case  CW_TYPE_EVENT: return 5;
+		case  CW_TYPE_MEGA_EVENT: return 6;
+		case  CW_TYPE_WEBCAM: return 7;
+		case  CW_TYPE_UNKNOWN: return 8;
+		case  CW_TYPE_LOCATIONLESS: return 9;
+		case CW_TYPE_CITO: return 10;
+		case CW_TYPE_EARTH: return 11;
+		case CW_TYPE_WHEREIGO: return 12;
+		case CW_TYPE_PARKING: return 13;
+		case CW_TYPE_STAGE: return 14;
+		case CW_TYPE_QUESTION: return 15;
+		case CW_TYPE_FINAL: return 16;
+		case CW_TYPE_TRAILHEAD: return 17;
+		case CW_TYPE_REFERENCE: return 18;
+		default: throw new IllegalArgumentException("unmatched argument "+id+" in CacheSize cw2GuiSelect()");
+		}
+	}
+	
 	/**
 	 * 
 	 * @param gpxType
@@ -458,6 +483,22 @@
 		
 	}
 	
+	//TODO: de we actually need this one
+	public static final String cw2ExportString(byte id) throws IllegalArgumentException {
+		String ret;
+		try {
+			ret = id2GpxString(id);
+			// check for | in additional waypoints and only use the string after |
+			int pipePosistion = ret.indexOf("|");
+			if (pipePosistion > -1) {
+				ret = ret.substring(pipePosistion);
+			}
+		} catch (IllegalArgumentException ex) {
+			ret = "";
+		}
+		return ret;
+	}
+	
 	// cache to image
 	
 }

Modified: experiments/greiol/src/CacheWolf/DetailsPanel.java
===================================================================
--- experiments/greiol/src/CacheWolf/DetailsPanel.java	2009-05-14 23:48:06 UTC (rev 1806)
+++ experiments/greiol/src/CacheWolf/DetailsPanel.java	2009-05-15 16:37:22 UTC (rev 1807)
@@ -189,7 +189,7 @@
 			// If the cache status contains a date, do not overwrite it with 'found' message
 			if(ch.is_found() == true) chcStatus.setText(MyLocale.getMsg(318,"Found"));
 		}
-		chcType.setInt(transType(ch.getType()));
+		chcType.setInt(CacheType.cw2GuiSelect(ch.getType()));
 		if(ch.is_black()){
 			btnBlack.image = imgBlack;
 		} else {
@@ -217,80 +217,7 @@
 		if(isBigScreen)	mNotes.setText(ch.getExistingDetails().getCacheNotes());
 	}
 	
-	
 	/**
-	*	Translate the cache type to the value in the cache type dropdown
-	*	control.
-	*/
-	private int transType(int type){
-		// TODO Hab ich so eine ?bersetzungstabelle nicht schon an anderer Stelle gesehen ??? Redundanz ??
-		int c_type = 0;
-		int tt = 0;
-		tt = type;
-		switch(tt){
-			case 0: c_type = 0; break;
-			case 2: c_type = 1; break;
-			case 3: c_type = 2; break;
-			case 4: c_type = 3; break;
-			case 5: c_type = 4; break;
-			case 6: c_type = 5; break;
-			case 453: c_type = 6;break;
-			case 8: c_type = 7; break;
-			case 11: c_type = 8; break; //Earth
-			case 12: c_type = 9; break;
-			case 13: c_type = 10; break;
-			case 137: c_type = 11;break;
-			case 1858: c_type = 12; break;
-			case 50: c_type = 13;break;
-			case 51: c_type = 14;break;
-			case 52: c_type = 15;break;
-			case 53: c_type = 16;break;
-			case 54: c_type = 17;break;
-			case 55: c_type = 18;break;
-
-			default: Vm.debug("Unknown cachetype: " + type);
-					break;
-		}
-		return c_type;
-	}
-	
-	/**
-	*	Method to translate a selected cache type in the drop down control
-	*	to a "true" cache type.<br>
-	*	This transformation is required to ease the display of the cache type
-	*	icon in the table display.
-	*/
-	public int transSelect(int num){
-		int ret = 0;
-		switch(num){
-			case 0: ret = 0; break;
-			case 1: ret = 2; break;
-			case 2: ret = 3; break;
-			case 3: ret = 4; break;
-			case 4: ret = 5; break;
-			case 5: ret = 6; break;
-			case 6: ret = 453; break;
-			case 7: ret = 8; break;
-			case 8: ret = 11; break;
-			case 9: ret = 12; break;
-			case 10: ret = 13; break;
-			case 11: ret = 137; break;
-			case 12: ret = 1858; break;
-			case 13: ret = 50; break;
-			case 14: ret = 51; break;
-			case 15: ret = 52; break;
-			case 16: ret = 53; break;
-			case 17: ret = 54; break;
-			case 18: ret = 55; break;
-
-			default: Vm.debug("Unknown cachetype: " + num);
-			break;
-
-		} //switch
-		return ret;
-	}
-	
-	/**
 	 * if is addi -> returns the respective AddiWpt
 	 * if is main -> returns the respective MainWpt 
 	 *

Modified: experiments/greiol/src/CacheWolf/FilterScreen.java
===================================================================
--- experiments/greiol/src/CacheWolf/FilterScreen.java	2009-05-14 23:48:06 UTC (rev 1806)
+++ experiments/greiol/src/CacheWolf/FilterScreen.java	2009-05-15 16:37:22 UTC (rev 1807)
@@ -1,4 +1,5 @@
 package CacheWolf;
+
 import CacheWolf.navi.Metrics;
 import ewe.ui.*;
 import ewe.io.*;
@@ -14,18 +15,18 @@
 	private static final Color COLOR_FILTERINACTIVE=new Color(190,190,190);
 	private static final Color COLOR_FILTERACTIVE=new Color(0,255,0);
 	private static final Color COLOR_FILTERALL=new Color(255,0,0); // Red
-    	
+
 	private mButton btnCancel, btnApply,btnRoute,
-					btnBearing,btnTypes,btnAttributes,btnRatings,btnContainer,btnSearch,btnAddi, btnSelect,btnDeselect,btnCacheAttributes;
+			btnBearing,btnTypes,btnAttributes,btnRatings,btnContainer,btnSearch,btnAddi, btnSelect,btnDeselect,btnCacheAttributes;
 	
 	private mChoice chcDist, chcDiff, chcTerr, chcAttrib;
 	private mCheckBox chkFound, chkNotFound, chkTrad, chkVirtual, chkEvent, chkEarth, chkMega,
-					  chkOwned, chkNotOwned, chkMulti, chkLetter, chkWebcam, chkMystery, chkLocless,
-	                  chkCustom,chkParking,	chkStage, chkQuestion, chkFinal, chkTrailhead, chkReference,
-					  chkMicro,chkSmall,chkRegular,chkLarge,chkVeryLarge,chkOther,chkCito,
-	                  chkArchived,chkNotArchived, chkAvailable,chkNotAvailable,
-					  chkNW, chkNNW , chkN , chkNNE, chkNE, chkENE, chkE, chkESE, chkSE, chkSSE, chkS,
-					  chkSSW, chkSW, chkWSW, chkW, chkWNW,chkWherigo;
+			chkOwned, chkNotOwned, chkMulti, chkLetter, chkWebcam, chkMystery, chkLocless,
+			chkCustom,chkParking,	chkStage, chkQuestion, chkFinal, chkTrailhead, chkReference,
+			chkMicro,chkSmall,chkRegular,chkLarge,chkVeryLarge,chkOther,chkCito,
+			chkArchived,chkNotArchived, chkAvailable,chkNotAvailable,
+			chkNW, chkNNW , chkN , chkNNE, chkNE, chkENE, chkE, chkESE, chkSE, chkSSE, chkS,
+			chkSSW, chkSW, chkWSW, chkW, chkWNW,chkWherigo;
 	
 	private mInput inpDist, inpTerr, inpDiff;
 
@@ -161,48 +162,48 @@
 		//////////////////////////
 		
 		addTitle(pnlCacheTypes,MyLocale.getMsg(719,"Cache types"));
-		pnlCacheTypes.addNext(addImg("2.png"));
+		pnlCacheTypes.addNext(addImg(CacheType.CW_GUIIMG_TRADITIONAL));
 		pnlCacheTypes.addNext(chkTrad = new mCheckBox("Traditonal"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("3.png"));
+		pnlCacheTypes.addNext(addImg(CacheType.CW_GUIIMG_MULTI));
 		pnlCacheTypes.addLast(chkMulti = new mCheckBox("Multi"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("4.png"));
+		pnlCacheTypes.addNext(addImg(CacheType.CW_GUIIMG_VIRTUAL));
 		pnlCacheTypes.addNext(chkVirtual = new mCheckBox("Virtual"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("5.png"));
+		pnlCacheTypes.addNext(addImg(CacheType.CW_GUIIMG_LETTERBOX));
 		pnlCacheTypes.addLast(chkLetter = new mCheckBox("Letterbox"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("6.png"));
+		pnlCacheTypes.addNext(addImg(CacheType.CW_GUIIMG_EVENT));
 		pnlCacheTypes.addNext(chkEvent = new mCheckBox("Event"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("11.png"));
+		pnlCacheTypes.addNext(addImg(CacheType.CW_GUIIMG_WEBCAM));
 		pnlCacheTypes.addLast(chkWebcam = new mCheckBox("Webcam"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("8.png"));
+		pnlCacheTypes.addNext(addImg(CacheType.CW_GUIIMG_UNKNOWN));
 		pnlCacheTypes.addNext(chkMystery = new mCheckBox("Mystery"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("137.png"));
+		pnlCacheTypes.addNext(addImg(CacheType.CW_GUIIMG_EARTH));
 		pnlCacheTypes.addLast(chkEarth = new mCheckBox("Earth"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("12.png"));
+		pnlCacheTypes.addNext(addImg(CacheType.CW_GUIIMG_LOCATIONLESS));
 		pnlCacheTypes.addNext(chkLocless = new mCheckBox("Locationless"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("453.png"));
+		pnlCacheTypes.addNext(addImg(CacheType.CW_GUIIMG_MEGA_EVENT));
 		pnlCacheTypes.addLast(chkMega = new mCheckBox("Mega-Ev."), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("13.png"));
+		pnlCacheTypes.addNext(addImg(CacheType.CW_GUIIMG_CITO));
 		pnlCacheTypes.addNext(chkCito = new mCheckBox("Cito-Ev."), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
 		//pnlCacheTypes.addLast(addiWptChk = new mCheckBox("Add. Wpt"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		//pnlCacheTypes.addLast(new mLabel(""));
-		pnlCacheTypes.addNext(addImg("0.png"));
+		pnlCacheTypes.addNext(addImg(CacheType.CW_GUIIMG_CUSTOM));
 		pnlCacheTypes.addLast(chkCustom = new mCheckBox("Custom"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 
-		pnlCacheTypes.addNext(addImg("1858.png"));
+		pnlCacheTypes.addNext(addImg(CacheType.CW_GUIIMG_WHEREIGO));
 		pnlCacheTypes.addNext(chkWherigo = new myChkBox("WherIGo"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 
-		pnlCacheTypes.addNext(addImg("110.png"));
+		pnlCacheTypes.addNext(addImg(CacheType.CW_GUIIMG_DRIVE_IN));
 		pnlCacheTypes.addNext(addiWptChk = new myChkBox("Add. Wpt"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 
 		//addiWptChk.modify(0,NotAnEditor);
@@ -210,17 +211,17 @@
 		// Panel 5 - Addi waypoints
 		//////////////////////////
 		addTitle(pnlAddi,MyLocale.getMsg(726,"Additional waypoints"));
-		pnlAddi.addNext(addImg("pkg.png"));
+		pnlAddi.addNext(addImg(CacheType.CW_GUIIMG_PARKING));
 		pnlAddi.addNext(chkParking = new mCheckBox("Parking"), CellConstants.DONTSTRETCH, CellConstants.FILL);
-		pnlAddi.addNext(addImg("stage.png"));
+		pnlAddi.addNext(addImg(CacheType.CW_GUIIMG_STAGE));
 		pnlAddi.addLast(chkStage = new mCheckBox("Stage"), CellConstants.DONTSTRETCH, CellConstants.FILL);
-		pnlAddi.addNext(addImg("puzzle.png"));
+		pnlAddi.addNext(addImg(CacheType.CW_GUIIMG_QUESTION));
 		pnlAddi.addNext(chkQuestion = new mCheckBox("Question"), CellConstants.DONTSTRETCH, CellConstants.FILL);
-		pnlAddi.addNext(addImg("flag.png"));
+		pnlAddi.addNext(addImg(CacheType.CW_GUIIMG_FINAL));
 		pnlAddi.addLast(chkFinal = new mCheckBox("Final"), CellConstants.DONTSTRETCH, CellConstants.FILL);
-		pnlAddi.addNext(addImg("trailhead.png"));
+		pnlAddi.addNext(addImg(CacheType.CW_GUIIMG_TRAILHEAD));
 		pnlAddi.addNext(chkTrailhead = new mCheckBox("Trailhead"), CellConstants.DONTSTRETCH, CellConstants.FILL);
-		pnlAddi.addNext(addImg("waypoint.png"));
+		pnlAddi.addNext(addImg(CacheType.CW_GUIIMG_REFERENCE));
 		pnlAddi.addLast(chkReference = new mCheckBox("Reference"), CellConstants.DONTSTRETCH, CellConstants.FILL);
         pnlAddi.addLast(new mLabel(""),VSTRETCH,FILL);		
 
@@ -228,12 +229,12 @@
 		// Panel 6 - Cache container
 		//////////////////////////
 		addTitle(pnlContainer,MyLocale.getMsg(727,"Cache container"));
-		pnlContainer.addLast(chkMicro=new mCheckBox("Micro"));
-		pnlContainer.addLast(chkSmall=new mCheckBox("Small"));
-		pnlContainer.addLast(chkRegular=new mCheckBox("Regular"));
-		pnlContainer.addLast(chkLarge=new mCheckBox("Large"));
-		pnlContainer.addLast(chkVeryLarge=new mCheckBox("Very Large"));
-		pnlContainer.addLast(chkOther=new mCheckBox("Other"));
+		pnlContainer.addLast(chkMicro=new mCheckBox(CacheSize.GC_SIZE_MICRO));
+		pnlContainer.addLast(chkSmall=new mCheckBox(CacheSize.GC_SIZE_SMALL));
+		pnlContainer.addLast(chkRegular=new mCheckBox(CacheSize.GC_SIZE_REGULAR));
+		pnlContainer.addLast(chkLarge=new mCheckBox(CacheSize.GC_SIZE_LARGE));
+		pnlContainer.addLast(chkVeryLarge=new mCheckBox(CacheSize.OCTC_SIZE_VERYLARGE));
+		pnlContainer.addLast(chkOther=new mCheckBox(CacheSize.GC_SIZE_OTHER));
 		
 		//////////////////////////
 		// Panel 7 - Search
@@ -270,7 +271,7 @@
 		pnlButtons.addLast(btnAddi=new mButton(MyLocale.getMsg(733,"Add. Wpt"))); 
 		pnlButtons.addLast(btnContainer=new mButton(MyLocale.getMsg(724,"Container")));
 		pnlButtons.addLast(btnCacheAttributes=new mButton(MyLocale.getMsg(738,"Attributes")));
-		// Search ist f?r 0.9n noch deaktiviert
+		// Search ist f???r 0.9n noch deaktiviert
 		//pnlButtons.addLast(btnSearch=new mButton("Search")); btnSearch.modify(Disabled,0);
 		addNext(pnlButtons,HSTRETCH,FILL);
 

Modified: experiments/greiol/src/CacheWolf/RadarPanel.java
===================================================================
--- experiments/greiol/src/CacheWolf/RadarPanel.java	2009-05-14 23:48:06 UTC (rev 1806)
+++ experiments/greiol/src/CacheWolf/RadarPanel.java	2009-05-15 16:37:22 UTC (rev 1807)
@@ -132,9 +132,9 @@
 							iActP.addImage(aImg);
 						}
 					}
-					Image imgCache=CacheType.cache2Img(holder.getType());
+					Image imgCache=GuiImageBroker.getTypeImage(holder.getType());
 					// If we have no image for the cache type use a question mark
-					if (imgCache==null) imgCache=CacheType.cache2Img(CacheType.CW_TYPE_UNKNOWN); 
+					if (imgCache==null) imgCache=GuiImageBroker.getTypeImage(CacheType.CW_TYPE_UNKNOWN); 
 					rpi = new RadarPanelImage(imgCache);
 					rpi.wayPoint = holder.getWayPoint();
 					rpi.rownum = i;

Modified: experiments/greiol/src/CacheWolf/myInteractivePanel.java
===================================================================
--- experiments/greiol/src/CacheWolf/myInteractivePanel.java	2009-05-14 23:48:06 UTC (rev 1806)
+++ experiments/greiol/src/CacheWolf/myInteractivePanel.java	2009-05-15 16:37:22 UTC (rev 1807)
@@ -110,7 +110,7 @@
 		CacheHolder ch=Global.getProfile().cacheDB.get(wayPoint);
 		if (ch != null) {
 			 IconAndText icnDrag=new IconAndText();
-			 icnDrag.addColumn(CacheType.cache2Img(ch.getType()));
+			 icnDrag.addColumn(GuiImageBroker.getTypeImage(ch.getType()));
 			 icnDrag.addColumn(ch.getWayPoint());
 			 dc.dragData=dc.startImageDrag(icnDrag,new Point(8,8),this);
 			 //if (dc instanceof ImageDragContext) Vm.debug(">>>>Is Image drag");

Modified: experiments/greiol/src/CacheWolf/myTableControl.java
===================================================================
--- experiments/greiol/src/CacheWolf/myTableControl.java	2009-05-14 23:48:06 UTC (rev 1806)
+++ experiments/greiol/src/CacheWolf/myTableControl.java	2009-05-15 16:37:22 UTC (rev 1807)
@@ -298,7 +298,7 @@
 			 wayPoint=ch.getWayPoint();
 			 //Vm.debug("Waypoint : "+ch.wayPoint);
 			 imgDrag=new IconAndText();
-			 imgDrag.addColumn(CacheType.cache2Img(ch.getType()));
+			 imgDrag.addColumn(GuiImageBroker.getTypeImage(ch.getType()));
 			 imgDrag.addColumn(ch.getWayPoint());
 			 dc.dragData=dc.startImageDrag(imgDrag,new Point(8,8),this);
 		 } else super.startDragging(dc);

Modified: experiments/greiol/src/CacheWolf/myTableModel.java
===================================================================
--- experiments/greiol/src/CacheWolf/myTableModel.java	2009-05-14 23:48:06 UTC (rev 1806)
+++ experiments/greiol/src/CacheWolf/myTableModel.java	2009-05-15 16:37:22 UTC (rev 1807)
@@ -291,7 +291,7 @@
 						else 
 							return checkboxUnticked;
 					case 1: // Type
-						return CacheType.cache2Img(ch.getType());
+						return GuiImageBroker.getTypeImage(ch.getType());
 					case 2: // Difficulty;
 						return ch.getHard();
 					case 3: // Terrain

Modified: experiments/greiol/src/CacheWolf/navi/MovingMap.java
===================================================================
--- experiments/greiol/src/CacheWolf/navi/MovingMap.java	2009-05-14 23:48:06 UTC (rev 1806)
+++ experiments/greiol/src/CacheWolf/navi/MovingMap.java	2009-05-15 16:37:22 UTC (rev 1807)
@@ -5,6 +5,7 @@
 import CacheWolf.CacheHolder;
 import CacheWolf.CacheType;
 import CacheWolf.Global;
+import CacheWolf.GuiImageBroker;
 import CacheWolf.InfoBox;
 import CacheWolf.MainTab;
 import CacheWolf.MyLocale;
@@ -380,7 +381,7 @@
 			for (int i=cacheDB.size()-1; i>=0; i--) {
 				ch = cacheDB.get(i);
 				if (ch.is_Checked && ch.isVisible() && ch != mainT.ch) {
-					if (ch.pos.isValid()) addSymbol(ch.getCacheName(), ch, CacheType.cache2Img(ch.getType()), ch.pos);
+					if (ch.pos.isValid()) addSymbol(ch.getCacheName(), ch, GuiImageBroker.getTypeImage(ch.getType()), ch.pos);
 				}
 			}
 		}
@@ -402,7 +403,7 @@
 		}
 		if (ch != null) {
 			addSymbol("selectedCache", MARK_CACHE_IMAGE, ch.pos);
-			addSymbolIfNecessary(ch.getCacheName(), ch, CacheType.cache2Img(ch.getType()), ch.pos);
+			addSymbolIfNecessary(ch.getCacheName(), ch, GuiImageBroker.getTypeImage(ch.getType()), ch.pos);
 		}
 		markedCache = ch;
 	}
@@ -1043,7 +1044,7 @@
 			return;
 		}
 		if (currentMap == null && newmap == null) {
-			// (new MessageBox("Information", "F?r die aktuelle Position steht keine Karte zur Verf?ng, bitte w?hlen Sie eine manuell", MessageBox.OKB)).execute();
+			// (new MessageBox("Information", "F???r die aktuelle Position steht keine Karte zur Verf???ng, bitte w???hlen Sie eine manuell", MessageBox.OKB)).execute();
 			posCircle.where.set(cll); // choosemap calls setmap with posCircle-coos
 			try {
 				setMap( ((MapListEntry)maps.elementAt(maps.getCount() - 4)).getMap(), where); // beware: "-4" only works if the empty maps were added last see MapsList.addEmptyMaps
@@ -1082,7 +1083,7 @@
 		if (posCircleX >= 0 && posCircleX <= w && posCircleY >= 0 && posCircleY <= h && ll.isValid()) {
 			posCircleOnScreen = java.lang.Boolean.TRUE;
 			pX = posCircleX; // posCircle is inside the screen
-			pY = posCircleY; // TODO eigentlich interessiert, ob nach dem evtl. Kartenwechsel PosCircle on Screen ist. So wie es jetzt ist, kann 2mal der gleiche Aufruf zum laden unterschiedlicher Karten f?hren, wenn vorher PosCircle nicht auf dem SChirm war, nach dem ersten Laden aber schon.
+			pY = posCircleY; // TODO eigentlich interessiert, ob nach dem evtl. Kartenwechsel PosCircle on Screen ist. So wie es jetzt ist, kann 2mal der gleiche Aufruf zum laden unterschiedlicher Karten f???hren, wenn vorher PosCircle nicht auf dem SChirm war, nach dem ersten Laden aber schon.
 			cll = new CWPoint(ll);
 		} else { // when posCircle out of screen - use centre of screen as point which as to be included in the map
 			cll = ScreenXY2LatLon(w/2, h/2);
@@ -1130,7 +1131,7 @@
 	public void loadMapForAllCaches(){
 		Area sur = Global.getProfile().getSourroundingArea(true);
 		if (sur == null) {
-			(new MessageBox(MyLocale.getMsg(4207, "Error"), MyLocale.getMsg(4215, "Keine  Caches mit H?ckchen ausgew?hlt"), FormBase.OKB)).execute();
+			(new MessageBox(MyLocale.getMsg(4207, "Error"), MyLocale.getMsg(4215, "Keine  Caches mit H???ckchen ausgew???hlt"), FormBase.OKB)).execute();
 			return;
 		}
 		MapInfoObject newmap = maps.getMapForArea(sur.topleft, sur.buttomright);
@@ -1488,9 +1489,9 @@
 	MenuItem hideMapMI = new MenuItem(MyLocale.getMsg(4240, "Hide map"), new IconAndText(new mImage("map_off.png"), MyLocale.getMsg(4241, "Hide map"), null, CellConstants.RIGHT));
 	// automatic
 	MenuItem mapChangeModusMI = new MenuItem(MyLocale.getMsg(4242, "Modus for automatic map change"), MenuItem.Separator, null);;
-	MenuItem highestResGpsDestMI = new MenuItem(MyLocale.getMsg(4244, "Highest res. containing dest. & cur. position"), new IconAndText(new mImage("res_gps_goto.png"), MyLocale.getMsg(4245, "Highest res. containing dest. & cur. position"), null, CellConstants.RIGHT)); //immer h?chste Aufl?sung w?hlen, die akt. Pos. und Ziel enthalten 
-	MenuItem highestResolutionMI = new MenuItem(MyLocale.getMsg(4246, "Highest resolution"), new IconAndText(new mImage("res_high.png"), MyLocale.getMsg(4247, "Highest resolution"), null, CellConstants.RIGHT)); //immer h?chste Aufl?sung w?hlen 
-	MenuItem keepManResolutionMI = new MenuItem(MyLocale.getMsg(4248, "Keep manual resolution"), new IconAndText(new mImage("res_manuell.png"), MyLocale.getMsg(4249, "Keep manual resolution"), null, CellConstants.RIGHT)); // manuell gew?hlte Aufl?sung beibehalten  
+	MenuItem highestResGpsDestMI = new MenuItem(MyLocale.getMsg(4244, "Highest res. containing dest. & cur. position"), new IconAndText(new mImage("res_gps_goto.png"), MyLocale.getMsg(4245, "Highest res. containing dest. & cur. position"), null, CellConstants.RIGHT)); //immer h???chste Aufl???sung w???hlen, die akt. Pos. und Ziel enthalten 
+	MenuItem highestResolutionMI = new MenuItem(MyLocale.getMsg(4246, "Highest resolution"), new IconAndText(new mImage("res_high.png"), MyLocale.getMsg(4247, "Highest resolution"), null, CellConstants.RIGHT)); //immer h???chste Aufl???sung w???hlen 
+	MenuItem keepManResolutionMI = new MenuItem(MyLocale.getMsg(4248, "Keep manual resolution"), new IconAndText(new mImage("res_manuell.png"), MyLocale.getMsg(4249, "Keep manual resolution"), null, CellConstants.RIGHT)); // manuell gew???hlte Aufl???sung beibehalten  
 	// manuell
 	MenuItem mapChangeResMI = new MenuItem(MyLocale.getMsg(4250, "Change resolution manually"), MenuItem.Separator, null);;
 	MenuItem AllCachesResMI = new MenuItem(MyLocale.getMsg(4252, "Load a map containing all marked caches"),  new IconAndText(new mImage("loupe_all.png"), MyLocale.getMsg(4253, "Load a map containing all marked caches"), null, CellConstants.RIGHT));   

Modified: experiments/greiol/src/exp/ExploristExporter.java
===================================================================
--- experiments/greiol/src/exp/ExploristExporter.java	2009-05-14 23:48:06 UTC (rev 1806)
+++ experiments/greiol/src/exp/ExploristExporter.java	2009-05-15 16:37:22 UTC (rev 1807)
@@ -247,7 +247,7 @@
 		if (!add.equals("")) { // Set Picture in Explorist to Virtual
 			sb.append("Virtual Cache");
 		} else if (ch.getType() != CacheType.CW_TYPE_UNKNOWN) { // Rewrite Unknown Caches
-			sb.append(CacheType.transType(ch.getType()));
+			sb.append(CacheType.cw2ExportString(ch.getType()));
 		} else {
 			sb.append("Mystery Cache");
 		}

Modified: experiments/greiol/src/exp/HTMLExporter.java
===================================================================
--- experiments/greiol/src/exp/HTMLExporter.java	2009-05-14 23:48:06 UTC (rev 1806)
+++ experiments/greiol/src/exp/HTMLExporter.java	2009-05-15 16:37:22 UTC (rev 1807)
@@ -84,7 +84,7 @@
 				if(	ch.isVisible()){
 					det=ch.getExistingDetails();
 					varParams = new Hashtable();
-					varParams.put("TYPE", CacheType.transType(ch.getType()));
+					varParams.put("TYPE", CacheType.cw2ExportString(ch.getType()));
 					varParams.put("SIZE", CacheSize.cw2ExportString(ch.getCacheSize()));
 					varParams.put("WAYPOINT", ch.getWayPoint());
 					varParams.put("NAME", ch.getCacheName());
@@ -100,7 +100,7 @@
 					//We can generate the individual page here!
 					try{
 						Template page_tpl = new Template(template_init_page);
-						page_tpl.setParam("TYPE", CacheType.transType(ch.getType()));
+						page_tpl.setParam("TYPE", CacheType.cw2ExportString(ch.getType()));
 						page_tpl.setParam("SIZE", CacheSize.cw2ExportString(ch.getCacheSize()));
 						page_tpl.setParam("WAYPOINT", ch.getWayPoint());
 						page_tpl.setParam("NAME", ch.getCacheName());

Modified: experiments/greiol/src/exp/MSARCSVExporter.java
===================================================================
--- experiments/greiol/src/exp/MSARCSVExporter.java	2009-05-14 23:48:06 UTC (rev 1806)
+++ experiments/greiol/src/exp/MSARCSVExporter.java	2009-05-15 16:37:22 UTC (rev 1807)
@@ -5,7 +5,7 @@
 /**
  * Class to export the cache database (index) to an CSV File which can bei easy
  * importet bei MS AutoRoute (testet with AR 2001 German) Format of the file:
- * Name;Breitengrad;L???ngengrad;Typ1;Typ2;Waypoint;Datum;Hyperlink
+ * Name;Breitengrad;L?ngengrad;Typ1;Typ2;Waypoint;Datum;Hyperlink
  * 
  */
 public class MSARCSVExporter extends Exporter {
@@ -26,7 +26,7 @@
 		StringBuffer str = new StringBuffer(200);
 		str.append("\"" + ch.getWayPoint() + " - " + ch.getCacheName() + "\";");
 		str.append(lat + ";" + lon +";");
-		str.append("\"" + CacheType.transType(ch.getType())+ "\";");
+		str.append("\"" + CacheType.cw2ExportString(ch.getType())+ "\";");
 		str.append("\"" + CacheSize.cw2ExportString(ch.getCacheSize()) + "\";");
 		str.append("\"" + ch.getWayPoint() + "\";");
 		str.append("\"" + ch.getDateHidden() + "\";");

Modified: experiments/greiol/src/exp/TPLExporter.java
===================================================================
--- experiments/greiol/src/exp/TPLExporter.java	2009-05-14 23:48:06 UTC (rev 1806)
+++ experiments/greiol/src/exp/TPLExporter.java	2009-05-15 16:37:22 UTC (rev 1807)
@@ -194,8 +194,8 @@
 						Regex dec = new Regex("[,.]",myFilter.decSep);
 						if (myFilter.badChars != null) rex = new Regex("["+myFilter.badChars+"]","");
 						varParams = new Hashtable();
-						varParams.put("TYPE", CacheType.transType(ch.getType()));
-						varParams.put("SHORTTYPE", CacheType.transType(ch.getType()).substring(0,1));
+						varParams.put("TYPE", CacheType.cw2ExportString(ch.getType()));
+						varParams.put("SHORTTYPE", CacheType.getExportShortId(ch.getType()));
 						varParams.put("SIZE", CacheSize.cw2ExportString(ch.getCacheSize()));
 						varParams.put("SHORTSIZE", CacheSize.getExportShortId(ch.getCacheSize()));
 						varParams.put("WAYPOINT", ch.getWayPoint());

Modified: experiments/greiol/src/exp/TomTomExporter.java
===================================================================
--- experiments/greiol/src/exp/TomTomExporter.java	2009-05-14 23:48:06 UTC (rev 1806)
+++ experiments/greiol/src/exp/TomTomExporter.java	2009-05-15 16:37:22 UTC (rev 1807)
@@ -85,14 +85,14 @@
 		ext = format==TT_ASC?".asc":".ov2";
 		try{
 			//loop through type
-			for(int j = 0; j < CacheType.wayType.length; j++){
-				fileName = dirName + "/" + prefix + CacheType.wayType[j][TT_WPT_TEXT]+ ext;
+			for(int j = 0; j < CacheType.guiTypeStrings().length; j++){
+				fileName = dirName + "/" + prefix + CacheType.guiTypeStrings()[j]+ ext;
 				dfile = new File(fileName);
 				dfile.delete();
 				out =  new RandomAccessFile(fileName,"rw");
 				for(int i = 0; i<cacheDB.size(); i++){
 					holder=cacheDB.get(i);
-					if(holder.getType() == new Integer(CacheType.wayType[j][TT_WPT_NUM]).intValue() && holder.isVisible() == false){
+					if(holder.getType() == new Integer(CacheType.guiSelect2Cw(j)).intValue() && holder.isVisible() == false){
 						currExp++;
 						h.progress = (float)currExp/(float)counter;
 						h.changed();
@@ -110,7 +110,7 @@
 				if (dfile.length()==0) {
 					dfile.delete();
 				} else {
-					copyIcon(j, dirName + "/" + prefix + CacheType.wayType[j][TT_WPT_TEXT]); 
+					copyIcon(j, dirName + "/" + prefix + CacheType.guiTypeStrings()[j]); 
 				}
 			}//for wayType
 			pbf.exit(0);
@@ -259,7 +259,7 @@
 			int len;
 			String entName; 
 			
-			entName = "TomTomIcons/"+ "GC-" + CacheType.wayType[intWayType][TT_WPT_TEXT] + ".bmp";
+			entName = "TomTomIcons/"+ "GC-" + CacheType.guiTypeStrings()[intWayType] + ".bmp";
 			zipEnt = zif.getEntry(entName);
 			if (zipEnt == null) return;
 			
@@ -272,10 +272,10 @@
 		    fos.close();
 		    fis.close();
 		} catch (ZipException e) {
-			Vm.debug("Problem copying Icon" + "GC-" + CacheType.wayType[intWayType][TT_WPT_TEXT] + ".bmp" );
+			Vm.debug("Problem copying Icon" + "GC-" + CacheType.guiTypeStrings()[intWayType] + ".bmp" );
 			e.printStackTrace();
 		} catch (IOException e) {
-			Vm.debug("Problem copying Icon" + "GC-" + CacheType.wayType[intWayType][TT_WPT_TEXT] + ".bmp" );
+			Vm.debug("Problem copying Icon" + "GC-" + CacheType.guiTypeStrings()[intWayType] + ".bmp" );
 			e.printStackTrace();
 		}
 



From engywuck at mail.berlios.de  Fri May 15 20:28:31 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Fri, 15 May 2009 20:28:31 +0200
Subject: [Cachewolf-svn] r1808 - in trunk: res_noewe/languages src/CacheWolf
Message-ID: <200905151828.n4FISVHN012130@sheep.berlios.de>

Author: engywuck
Date: 2009-05-15 20:28:26 +0200 (Fri, 15 May 2009)
New Revision: 1808

Modified:
   trunk/res_noewe/languages/DE.cfg
   trunk/res_noewe/languages/EN.cfg
   trunk/res_noewe/languages/FR.cfg
   trunk/res_noewe/languages/NL.cfg
   trunk/src/CacheWolf/Filter.java
   trunk/src/CacheWolf/FilterScreen.java
   trunk/src/CacheWolf/MainMenu.java
   trunk/src/CacheWolf/Profile.java
Log:
Filtering of Cache Status field is now possible.

Modified: trunk/res_noewe/languages/DE.cfg
===================================================================
--- trunk/res_noewe/languages/DE.cfg	2009-05-15 16:37:22 UTC (rev 1807)
+++ trunk/res_noewe/languages/DE.cfg	2009-05-15 18:28:26 UTC (rev 1808)
@@ -110,6 +110,7 @@
 		218=Auch in Beschreibung/Notizen
 		219=Suche...
 		220=Pr%fcfe Notizen und L%f6ser
+		299=Regul%e4rer Ausdruck
 		300=Type:
 		301=Gr%f6%dfe:
 		302=Wegpunkt:

Modified: trunk/res_noewe/languages/EN.cfg
===================================================================
--- trunk/res_noewe/languages/EN.cfg	2009-05-15 16:37:22 UTC (rev 1807)
+++ trunk/res_noewe/languages/EN.cfg	2009-05-15 18:28:26 UTC (rev 1808)
@@ -110,6 +110,7 @@
 		218=Also in description/notes
 		219=Searching...
 		220=Check notes and solver
+		299=Regular expression
 		300=Type:
 		301=Size:
 		302=Waypoint:

Modified: trunk/res_noewe/languages/FR.cfg
===================================================================
--- trunk/res_noewe/languages/FR.cfg	2009-05-15 16:37:22 UTC (rev 1807)
+++ trunk/res_noewe/languages/FR.cfg	2009-05-15 18:28:26 UTC (rev 1808)
@@ -107,6 +107,7 @@
 		218=Aussi dans description/notes
 		219=Cherchant...
 		220=V%e9rifier notes et resoudeur
+		299=Expression rationnelle
 		300=Type:
 		301=Gabarit:
 		302=Waypoint:

Modified: trunk/res_noewe/languages/NL.cfg
===================================================================
--- trunk/res_noewe/languages/NL.cfg	2009-05-15 16:37:22 UTC (rev 1807)
+++ trunk/res_noewe/languages/NL.cfg	2009-05-15 18:28:26 UTC (rev 1808)
@@ -99,6 +99,7 @@
 		218=Ook in opmerkingen/beschrijving
 		219=Zoeken...
 		220=Onderzoek opmerkingen en oplosser
+		299=Reguliere expressie
 		300=Type:
 		301=Grote:
 		302=Waypoint:

Modified: trunk/src/CacheWolf/Filter.java
===================================================================
--- trunk/src/CacheWolf/Filter.java	2009-05-15 16:37:22 UTC (rev 1807)
+++ trunk/src/CacheWolf/Filter.java	2009-05-15 18:28:26 UTC (rev 1808)
@@ -84,6 +84,9 @@
 	
 	private boolean foundByMe;
 	private boolean notFoundByMe;
+
+	private String cacheStatus;
+	private boolean useRegexp;
 	
 	private boolean ownedByMe;
 	private boolean notOwnedByMe;
@@ -252,6 +255,9 @@
 		notFoundByMe = profile.getFilterVar().charAt(6) == '1';
 		notOwnedByMe = profile.getFilterVar().charAt(7) == '1';
 		typeMatchPattern=0;
+		cacheStatus  = profile.getFilterStatus();
+		useRegexp    = profile.getFilterUseRegexp();
+		
 		String filterType=profile.getFilterType();
 		if (filterType.charAt(0) == '1') typeMatchPattern|=TRADITIONAL;
 		if (filterType.charAt(1) == '1') typeMatchPattern|=MULTI;
@@ -570,6 +576,21 @@
 			        }
 		        }
 	        }
+	        if (!cacheStatus.equals("")) {
+	        	if (!useRegexp) {
+	        		if (ch.getCacheStatus().toLowerCase().indexOf(cacheStatus.toLowerCase())<0) {
+	        			cacheFiltered = true;
+	        			break;
+	        		}
+	        	} else {
+	        		Regex rex=new Regex(cacheStatus.toLowerCase());
+	        		rex.search(ch.getCacheStatus().toLowerCase());
+	        		if (rex.stringMatched()==null) {
+	        			cacheFiltered = true;
+	        			break;
+	        		}
+	        	}
+	        }
 	        break;
         } while (true);
 		return cacheFiltered;
@@ -594,12 +615,12 @@
 		Global.getProfile().setFilterActive(FILTER_INACTIVE);
 	}
 
-	public boolean hasFilter() {
+		public boolean hasFilter() {
 		Profile prof=Global.getProfile();
-		return !(prof.getFilterType().equals(Profile.FILTERTYPE) &&
-		    prof.getFilterRose().equals(Profile.FILTERROSE) &&
-		    prof.getFilterVar().equals(Profile.FILTERVAR) &&
-		    prof.getFilterSize().equals(Profile.FILTERSIZE) &&
+		return !(prof.getFilterType().equals(FilterData.FILTERTYPE) &&
+		    prof.getFilterRose().equals(FilterData.FILTERROSE) &&
+		    prof.getFilterVar().equals(FilterData.FILTERVAR) &&
+		    prof.getFilterSize().equals(FilterData.FILTERSIZE) &&
 		    prof.getFilterDist().equals("L") &&
 		    prof.getFilterDiff().equals("L") &&
 		    prof.getFilterTerr().equals("L") &&

Modified: trunk/src/CacheWolf/FilterScreen.java
===================================================================
--- trunk/src/CacheWolf/FilterScreen.java	2009-05-15 16:37:22 UTC (rev 1807)
+++ trunk/src/CacheWolf/FilterScreen.java	2009-05-15 18:28:26 UTC (rev 1808)
@@ -26,6 +26,8 @@
 	                  chkArchived,chkNotArchived, chkAvailable,chkNotAvailable,
 					  chkNW, chkNNW , chkN , chkNNE, chkNE, chkENE, chkE, chkESE, chkSE, chkSSE, chkS,
 					  chkSSW, chkSW, chkWSW, chkW, chkWNW,chkWherigo;
+	private mComboBox chcStatus;
+	private mCheckBox chkUseRegexp;
 	
 	private mInput inpDist, inpTerr, inpDiff;
 
@@ -142,6 +144,10 @@
 		pnlAttributes.addNext(chkOwned = new mCheckBox(MyLocale.getMsg(707,"Owned")), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		pnlAttributes.addLast(chkNotOwned = new mCheckBox(MyLocale.getMsg(732,"Anderer Besitzer")), CellConstants.DONTSTRETCH, CellConstants.FILL);
 
+		pnlAttributes.addNext(new mLabel(MyLocale.getMsg(307,"Status:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
+		pnlAttributes.addLast(chcStatus = new mComboBox(new String[]{"", MyLocale.getMsg(313,"Flag 1"), MyLocale.getMsg(314,"Flag 2"), MyLocale.getMsg(315,"Flag 3"), MyLocale.getMsg(316,"Flag 4"), MyLocale.getMsg(317,"Search"), MyLocale.getMsg(318,"Found"), MyLocale.getMsg(319,"Not Found"), MyLocale.getMsg(320,"Owner")},0),CellConstants.HSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
+		pnlAttributes.addLast(chkUseRegexp = new mCheckBox(MyLocale.getMsg(299,"Regular expression")));
+		
 		//////////////////////////
 		// Panel 3 - Cache ratings
 		//////////////////////////
@@ -311,18 +317,17 @@
 	}
 	
 	
-	public void setData(){
-		Profile prof=Global.getProfile();
+	public void setData(FilterData data){
 
 		//////////////////////////
 		// Panel 1 - Bearing & Distance
 		//////////////////////////
-		if (prof.getFilterDist().length()>1) {
-			if (prof.getFilterDist().charAt(0)=='L')
+		if (data.getFilterDist().length()>1) {
+			if (data.getFilterDist().charAt(0)=='L')
 				chcDist.select(0);
 			else
 				chcDist.select(1);
-			String dist = prof.getFilterDist().substring(1);
+			String dist = data.getFilterDist().substring(1);
 			if (Global.getPref().metricSystem == Metrics.IMPERIAL) {
 				double distValue = java.lang.Double.valueOf(dist).doubleValue();
 				double newDistValue = Metrics.convertUnit(distValue, Metrics.KILOMETER, Metrics.MILES);
@@ -333,7 +338,7 @@
 			chcDist.select(0);
 			inpDist.setText("");
 		}
-		String fltRose=prof.getFilterRose();
+		String fltRose=data.getFilterRose();
 		chkNW.state   = fltRose.charAt(0) == '1';
 		chkNNW.state  = fltRose.charAt(1) == '1';
 		chkN.state    = fltRose.charAt(2) == '1';
@@ -357,7 +362,7 @@
 		//////////////////////////
 		// Panel 2 - Cache attributes
 		//////////////////////////
-		String fltVar=prof.getFilterVar();
+		String fltVar=data.getFilterVar();
 		chkArchived.state      = fltVar.charAt(0) == '1';
 		chkAvailable.state     = fltVar.charAt(1) == '1';
 		chkFound.state         = fltVar.charAt(2) == '1';
@@ -366,31 +371,33 @@
 		chkNotAvailable.state  = fltVar.charAt(5) == '1';
 		chkNotFound.state      = fltVar.charAt(6) == '1';
 		chkNotOwned.state      = fltVar.charAt(7) == '1';
+		chcStatus.setText(data.getFilterStatus());
+		chkUseRegexp.setState(data.useRegexp());
 
 		//////////////////////////
 		// Panel 3 - Cache ratings
 		//////////////////////////
-		if (prof.getFilterDiff().length()>1) {
-			if (prof.getFilterDiff().charAt(0)=='L')
+		if (data.getFilterDiff().length()>1) {
+			if (data.getFilterDiff().charAt(0)=='L')
 				chcDiff.select(0);
-			else if (prof.getFilterDiff().charAt(0)=='=')
+			else if (data.getFilterDiff().charAt(0)=='=')
 				chcDiff.select(1);
 			else
 				chcDiff.select(2);
-			inpDiff.setText(prof.getFilterDiff().substring(1));
+			inpDiff.setText(data.getFilterDiff().substring(1));
 		} else {
 			chcDiff.select(0);
 			inpDiff.setText("");
 		}
 
-		if (prof.getFilterTerr().length()>1) {
-			if (prof.getFilterTerr().charAt(0)=='L')
+		if (data.getFilterTerr().length()>1) {
+			if (data.getFilterTerr().charAt(0)=='L')
 				chcTerr.select(0);
-			else if (prof.getFilterTerr().charAt(0)=='=')
+			else if (data.getFilterTerr().charAt(0)=='=')
 				chcTerr.select(1);
 			else
 				chcTerr.select(2);
-			inpTerr.setText(prof.getFilterTerr().substring(1));
+			inpTerr.setText(data.getFilterTerr().substring(1));
 		} else {
 			chcTerr.select(0);
 			inpTerr.setText("");
@@ -401,7 +408,7 @@
 		// Panel 4 - Cache types
 		//////////////////////////
 		
-		String fltType=prof.getFilterType();
+		String fltType=data.getFilterType();
 		chkTrad.state       = fltType.charAt(0) == '1';
 		chkMulti.state      = fltType.charAt(1) == '1';
 		chkVirtual.state    = fltType.charAt(2) == '1';
@@ -432,7 +439,7 @@
 		//////////////////////////
 		// Panel 6 - Cache container
 		//////////////////////////
-		String fltSize=prof.getFilterSize();
+		String fltSize=data.getFilterSize();
 		chkMicro.state      = fltSize.charAt(0) == '1';
 		chkSmall.state      = fltSize.charAt(1) == '1';
 		chkRegular.state    = fltSize.charAt(2) == '1';
@@ -447,8 +454,8 @@
 		//////////////////////////
 		// Panel 8 - Cache attributes
 		//////////////////////////
-		attV.setSelectionMasks( prof.getFilterAttrYes(), prof.getFilterAttrNo() );
-		chcAttrib.select(prof.getFilterAttrChoice());
+		attV.setSelectionMasks( data.getFilterAttrYes(), data.getFilterAttrNo() );
+		chcAttrib.select(data.getFilterAttrChoice());
 		
 		// Adjust colors of buttons depending on which filters are active
 		setColors();
@@ -474,7 +481,8 @@
 		
 		// Panel 2 - Cache attributes
 		if (!( chkArchived.state    && chkAvailable.state    && chkFound.state    && chkOwned.state &&
-			   chkNotArchived.state && chkNotAvailable.state && chkNotFound.state && chkNotOwned.state))
+			   chkNotArchived.state && chkNotAvailable.state && chkNotFound.state && chkNotOwned.state &&
+			   chcStatus.getText().equals("")))
 			btnAttributes.backGround=COLOR_FILTERACTIVE;
 		else
 			btnAttributes.backGround=COLOR_FILTERINACTIVE;
@@ -668,6 +676,9 @@
 				pfl.setFilterAttrYes(attV.selectionMaskYes);
 				pfl.setFilterAttrNo(attV.selectionMaskNo);
 				pfl.setFilterAttrChoice(chcAttrib.selectedIndex);
+				pfl.setFilterStatus(chcStatus.getText());
+				pfl.setFilterUseRegexp(chkUseRegexp.getState());
+				// FIXME Das geht bestimmt auch ?ber Filter-Objekte
 				Filter flt = new Filter();
 				flt.setFilter();
 				flt.doFilter();

Modified: trunk/src/CacheWolf/MainMenu.java
===================================================================
--- trunk/src/CacheWolf/MainMenu.java	2009-05-15 16:37:22 UTC (rev 1807)
+++ trunk/src/CacheWolf/MainMenu.java	2009-05-15 18:28:26 UTC (rev 1808)
@@ -526,7 +526,7 @@
 				tbp.refreshTable();
 			}
 			if(mev.selectedItem == filtCreate){
-				scnFilter.setData();
+				scnFilter.setData(profile.getCurrentFilter());
 				scnFilter.execute(father.getFrame(), Gui.CENTER_FRAME);
 				tbp.refreshTable();
 			}

Modified: trunk/src/CacheWolf/Profile.java
===================================================================
--- trunk/src/CacheWolf/Profile.java	2009-05-15 16:37:22 UTC (rev 1807)
+++ trunk/src/CacheWolf/Profile.java	2009-05-15 18:28:26 UTC (rev 1808)
@@ -45,33 +45,12 @@
 	public final static boolean SHOW_PROGRESS_BAR = true;
 	public final static boolean NO_SHOW_PROGRESS_BAR = false;
 
-	// When extending the filter check "normaliseFilters"
-	// which ensures backward compatibility. Normally no change should be needed
-	public final static String FILTERTYPE = "1111111111111111111";
-	public final static String FILTERROSE = "1111111111111111";
-	public final static String FILTERVAR = "11111111";
-	public final static String FILTERSIZE = "111111";
-
-	private String filterType = new String(FILTERTYPE);
-	private String filterRose = new String(FILTERROSE);
-	private String filterSize = new String(FILTERSIZE);
-
-	// filter settings for archived ... owner (section) in filterscreen
-	private String filterVar = new String(FILTERVAR);
-	private String filterDist = new String("L");
-	private String filterDiff = new String("L");
-	private String filterTerr = new String("L");
-
-	// Saved filterstatus - is only refreshed from class Filter when Profile is saved
+	private FilterData currentFilter = new FilterData();
 	private int filterActive = Filter.FILTER_INACTIVE;
 	private boolean filterInverted = false;
 	private boolean showBlacklisted = false;
 	private boolean showSearchResult = false;
 
-	private long filterAttrYes = 0l;
-	private long filterAttrNo = 0l;
-	private int filterAttrChoice = 0;
-
 	public boolean selectionChanged = true; // ("H?ckchen") used by movingMap to get to knao if it should update the caches in the map 
 	/** True if the profile has been modified and not saved
 	 * The following modifications set this flag: New profile centre, Change of waypoint data 
@@ -206,7 +185,8 @@
 					"\" rose = \""+getFilterRose()+"\" type = \""+getFilterType()+
 					"\" var = \""+getFilterVar()+"\" dist = \""+getFilterDist().replace('"',' ')+"\" diff = \""+
 					getFilterDiff()+"\" terr = \""+getFilterTerr()+"\" size = \""+getFilterSize()+"\" attributesYes = \""+getFilterAttrYes()+
-					"\" attributesNo = \""+getFilterAttrNo()+"\" attributesChoice = \""+getFilterAttrChoice()+"\" showBlacklist = \""+showBlacklisted()+"\" />\n");
+					"\" attributesNo = \""+getFilterAttrNo()+"\" attributesChoice = \""+getFilterAttrChoice()+"\" showBlacklist = \""+showBlacklisted()+
+					"\" status = \""+SafeXML.clean(getFilterStatus())+"\" useRegexp = \""+getFilterUseRegexp()+"\" />\n");
 			detfile.print("    <SYNCOC date = \""+getLast_sync_opencaching()+"\" dist = \""+getDistOC()+"\"/>\n");
 			detfile.print("    <SPIDERGC dist = \"" + getDistGC() + "\"/>\n");
 			int size = cacheDB.size();
@@ -321,6 +301,8 @@
 					if (attr != null && !attr.equals(""))
 						setFilterAttrChoice(Convert.parseInt(attr));
 					setShowBlacklisted(Boolean.valueOf(ex.findNext()).booleanValue());
+					setFilterStatus(SafeXML.cleanback(ex.findNext()));
+					setFilterUseRegexp(Boolean.valueOf(ex.findNext()).booleanValue());
 				}
 			}
 			in.close();
@@ -336,7 +318,8 @@
 		} catch (IOException e){
 			Global.getPref().log("Problem reading index.xml in dir: "+dataDir,e,true); 
 		}
-		normaliseFilters();
+		// FIXME Brauchen wir das noch? Und wenn ja: Hier?
+		//normaliseFilters();
 		resetUnsavedChanges();
 	}
 
@@ -543,95 +526,69 @@
 
 	}
 
-	/**
-	 * Ensure that all filters have the proper length so that the 'charAt' access in the filter do
-	 * not cause nullPointer Exceptions
-	 */
-	private void normaliseFilters() {
-		String manyOnes = "11111111111111111111111111111";
-		if (getFilterRose().length() < FILTERROSE.length()) {
-			setFilterRose((getFilterRose() + manyOnes).substring(0, FILTERROSE.length()));
-		}
-		if (getFilterVar().length() < FILTERVAR.length()) {
-			setFilterVar((getFilterVar() + manyOnes).substring(0, FILTERVAR.length()));
-		}
-		if (getFilterType().length() < FILTERTYPE.length()) {
-			setFilterType((getFilterType() + manyOnes).substring(0, FILTERTYPE.length()));
-		}
-		if (getFilterSize().length() < FILTERSIZE.length()) {
-			setFilterSize((getFilterSize() + manyOnes).substring(0, FILTERSIZE.length()));
-		}
-		if (getFilterDist().length() == 0)
-			setFilterDist("L");
-		if (getFilterDiff().length() == 0)
-			setFilterDiff("L");
-		if (getFilterTerr().length() == 0)
-			setFilterTerr("L");
-	}
-
 	// Getter and Setter for private properties
 
 	public String getFilterType() {
-		return filterType;
+		return currentFilter.getFilterType();
 	}
 
 	public void setFilterType(String filterType) {
-		this.notifyUnsavedChanges(!filterType.equals(this.filterType));
-		this.filterType = filterType;
+		this.notifyUnsavedChanges(!filterType.equals(this.getFilterType()));
+		this.currentFilter.setFilterType(filterType);
 	}
 
 	public String getFilterRose() {
-		return filterRose;
+		return currentFilter.getFilterRose();
 	}
 
 	public void setFilterRose(String filterRose) {
-		this.notifyUnsavedChanges(!filterRose.equals(this.filterRose));
-		this.filterRose = filterRose;
+		this.notifyUnsavedChanges(!filterRose.equals(this.getFilterRose()));
+		this.currentFilter.setFilterRose(filterRose);
 	}
 
 	public String getFilterSize() {
-		return filterSize;
+		return currentFilter.getFilterSize();
 	}
 
 	public void setFilterSize(String filterSize) {
-		this.notifyUnsavedChanges(!filterSize.equals(this.filterSize));
-		this.filterSize = filterSize;
+		this.notifyUnsavedChanges(!filterSize.equals(this.getFilterSize()));
+		this.currentFilter.setFilterSize(filterSize);
 	}
 
 	public String getFilterVar() {
-		return filterVar;
+		return currentFilter.getFilterVar();
 	}
 
 	public void setFilterVar(String filterVar) {
-		this.notifyUnsavedChanges(!filterVar.equals(this.filterVar));
-		this.filterVar = filterVar;
+		this.notifyUnsavedChanges(!filterVar.equals(this.getFilterVar()));
+		this.currentFilter.setFilterVar(filterVar);
 	}
 
 	public String getFilterDist() {
-		return filterDist;
+		return currentFilter.getFilterDist();
 	}
 
 	public void setFilterDist(String filterDist) {
-		this.notifyUnsavedChanges(!filterDist.equals(this.filterDist));
-		this.filterDist = filterDist;
+		this.notifyUnsavedChanges(!filterDist.equals(this.getFilterDist()));
+		this.currentFilter.setFilterDist(filterDist);
 	}
 
 	public String getFilterDiff() {
-		return filterDiff;
+		return currentFilter.getFilterDiff();
 	}
 
 	public void setFilterDiff(String filterDiff) {
-		this.notifyUnsavedChanges(!filterDiff.equals(this.filterDiff));
-		this.filterDiff = filterDiff;
+		this.notifyUnsavedChanges(!filterDiff.equals(this.getFilterDiff()));
+		this.currentFilter.setFilterDiff(filterDiff);
 	}
 
 	public String getFilterTerr() {
-		return filterTerr;
+		return currentFilter.getFilterTerr();
 	}
 
 	public void setFilterTerr(String filterTerr) {
-		this.notifyUnsavedChanges(!filterTerr.equals(this.filterTerr));
-		this.filterTerr = filterTerr;
+		this.notifyUnsavedChanges(!filterTerr.equals(this.getFilterTerr()));
+		this.currentFilter.setFilterTerr(filterTerr);
 	}
 
 	public int getFilterActive() {
@@ -680,33 +637,52 @@
 	public void setShowSearchResult(boolean showSearchResult){
 		this.showSearchResult = showSearchResult;
 	}
+
 	public long getFilterAttrYes() {
-		return filterAttrYes;
+		return currentFilter.getFilterAttrYes();
 	}
 
 	public void setFilterAttrYes(long filterAttrYes) {
-		this.notifyUnsavedChanges(filterAttrYes != this.filterAttrYes);
-		this.filterAttrYes = filterAttrYes;
+		this.notifyUnsavedChanges(filterAttrYes != this.getFilterAttrYes());
+		this.currentFilter.setFilterAttrYes(filterAttrYes);
 	}
 
 	public long getFilterAttrNo() {
-		return filterAttrNo;
+		return currentFilter.getFilterAttrNo();
 	}
 
 	public void setFilterAttrNo(long filterAttrNo) {
-		this.notifyUnsavedChanges(filterAttrNo != this.filterAttrNo);
-		this.filterAttrNo = filterAttrNo;
+		this.notifyUnsavedChanges(filterAttrNo != this.getFilterAttrNo());
+		this.currentFilter.setFilterAttrNo(filterAttrNo);
 	}
 
 	public int getFilterAttrChoice() {
-		return filterAttrChoice;
+		return currentFilter.getFilterAttrChoice();
 	}
 
 	public void setFilterAttrChoice(int filterAttrChoice) {
-		this.notifyUnsavedChanges(filterAttrChoice != this.filterAttrChoice);
-		this.filterAttrChoice = filterAttrChoice;
+		this.notifyUnsavedChanges(filterAttrChoice != this.getFilterAttrChoice());
+		this.currentFilter.setFilterAttrChoice(filterAttrChoice);
 	}
 
+	public String getFilterStatus() {
+    	return currentFilter.getFilterStatus();
+    }
+
+	public void setFilterStatus(String filterStatus) {
+		this.notifyUnsavedChanges(filterStatus != this.getFilterStatus());
+    	this.currentFilter.setFilterStatus(filterStatus);
+    }
+
+	public boolean getFilterUseRegexp() {
+    	return currentFilter.useRegexp();
+    }
+
+	public void setFilterUseRegexp(boolean useRegexp) {
+		this.notifyUnsavedChanges(useRegexp != this.getFilterUseRegexp());
+    	this.currentFilter.setUseRegexp(useRegexp);
+    }
+	
 	public String getLast_sync_opencaching() {
 		return last_sync_opencaching;
 	}
@@ -734,4 +710,11 @@
 		this.distGC = distGC;
 	}
 
+	public FilterData getCurrentFilter() {
+    	return currentFilter;
+    }
+
+	public void setCurrentFilter(FilterData currentFilter) {
+    	this.currentFilter = currentFilter;
+    }
 }



From greiol at mail.berlios.de  Fri May 15 20:47:06 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Fri, 15 May 2009 20:47:06 +0200
Subject: [Cachewolf-svn] r1809 - in experiments/greiol/src: CacheWolf exp
Message-ID: <200905151847.n4FIl6HG014658@sheep.berlios.de>

Author: greiol
Date: 2009-05-15 20:47:04 +0200 (Fri, 15 May 2009)
New Revision: 1809

Added:
   experiments/greiol/src/CacheWolf/GuiImageBroker.java
Modified:
   experiments/greiol/src/exp/KMLExporter.java
Log:
it compiles

Added: experiments/greiol/src/CacheWolf/GuiImageBroker.java
===================================================================
--- experiments/greiol/src/CacheWolf/GuiImageBroker.java	2009-05-15 18:28:26 UTC (rev 1808)
+++ experiments/greiol/src/CacheWolf/GuiImageBroker.java	2009-05-15 18:47:04 UTC (rev 1809)
@@ -0,0 +1,80 @@
+package CacheWolf;
+
+import ewe.fx.Image;
+
+/**
+ * hold preloaded versions of gui images in a single place
+ */
+
+public final class GuiImageBroker {
+	
+	// TODO: check with Image an mImage
+	
+	/**
+	 * 
+	 * @see getTypeImage
+	 * @see CacheTypes
+	 */
+	private static final Image[] typeImages = {
+		new Image(CacheType.CW_GUIIMG_CUSTOM),		// 0
+		new Image(CacheType.CW_GUIIMG_APE),			// 1
+		new Image(CacheType.CW_GUIIMG_CITO),		// 2
+		new Image(CacheType.CW_GUIIMG_DRIVE_IN),	// 3
+		new Image(CacheType.CW_GUIIMG_EARTH),		// 4
+		new Image(CacheType.CW_GUIIMG_EVENT),		// 5
+		new Image(CacheType.CW_GUIIMG_FINAL),		// 6
+		new Image(CacheType.CW_GUIIMG_LETTERBOX),	// 7
+		new Image(CacheType.CW_GUIIMG_LOCATIONLESS),// 8
+		new Image(CacheType.CW_GUIIMG_MAZE),		// 9
+		new Image(CacheType.CW_GUIIMG_MEGA_EVENT),	// 10
+		new Image(CacheType.CW_GUIIMG_MULTI),		// 11
+		new Image(CacheType.CW_GUIIMG_PARKING),		// 12
+		new Image(CacheType.CW_GUIIMG_QUESTION),	// 13
+		new Image(CacheType.CW_GUIIMG_REFERENCE),	// 14
+		new Image(CacheType.CW_GUIIMG_STAGE),		// 15
+		new Image(CacheType.CW_GUIIMG_TRADITIONAL),	// 16
+		new Image(CacheType.CW_GUIIMG_TRAILHEAD),	// 17
+		new Image(CacheType.CW_GUIIMG_UNKNOWN),		// 18
+		new Image(CacheType.CW_GUIIMG_VIRTUAL),		// 19
+		new Image(CacheType.CW_GUIIMG_WEBCAM),		// 20
+		new Image(CacheType.CW_GUISTR_WHEREIGO)		// 21
+	};
+	
+	private static final Image[] sizeImages = {
+		
+	};
+
+	public GuiImageBroker() {
+		// TODO Auto-generated constructor stub
+	}
+	
+	public static Image getTypeImage(byte id) throws IllegalArgumentException {
+		switch (id) {
+		case CacheType.CW_TYPE_CUSTOM: return typeImages[0];
+		case CacheType.CW_TYPE_APE: return typeImages[1];
+		case CacheType.CW_TYPE_CITO: return typeImages[2];
+		case CacheType.CW_TYPE_DRIVE_IN: return typeImages[3];
+		case CacheType.CW_TYPE_EARTH: return typeImages[4];
+		case CacheType.CW_TYPE_EVENT: return typeImages[5];
+		case CacheType.CW_TYPE_FINAL: return typeImages[6];
+		case CacheType.CW_TYPE_LETTERBOX: return typeImages[7];
+		case CacheType.CW_TYPE_LOCATIONLESS: return typeImages[8];
+		case CacheType.CW_TYPE_MAZE: return typeImages[9];
+		case CacheType.CW_TYPE_MEGA_EVENT: return typeImages[10];
+		case CacheType.CW_TYPE_MULTI: return typeImages[11];
+		case CacheType.CW_TYPE_PARKING: return typeImages[12];
+		case CacheType.CW_TYPE_QUESTION: return typeImages[13];
+		case CacheType.CW_TYPE_REFERENCE: return typeImages[14];
+		case CacheType.CW_TYPE_STAGE: return typeImages[15];
+		case CacheType.CW_TYPE_TRADITIONAL: return typeImages[16];
+		case CacheType.CW_TYPE_TRAILHEAD: return typeImages[17];
+		case CacheType.CW_TYPE_UNKNOWN: return typeImages[18];
+		case CacheType.CW_TYPE_VIRTUAL: return typeImages[19];
+		case CacheType.CW_TYPE_WEBCAM: return typeImages[20];
+		case CacheType.CW_TYPE_WHEREIGO: return typeImages[21];
+		default: throw new IllegalArgumentException("unmatched id "+id+" in GuiImageBroker getTypeImage()");
+		}
+		
+	}
+
+}

Modified: experiments/greiol/src/exp/KMLExporter.java
===================================================================
--- experiments/greiol/src/exp/KMLExporter.java	2009-05-15 18:28:26 UTC (rev 1808)
+++ experiments/greiol/src/exp/KMLExporter.java	2009-05-15 18:47:04 UTC (rev 1809)
@@ -17,7 +17,7 @@
 import ewe.util.zip.ZipEntry;
 import ewe.util.zip.ZipException;
 import ewe.util.zip.ZipFile;
-import CacheWolf.*;
+import CacheWolf.*; // if we would use public instead of protected we would not need this.
 
 /**
 *	Class to export the cache database (index) to an KML-File
@@ -98,7 +98,7 @@
 					tmp = (Vector)entry.getValue();
 					// skip over empty cachetypes
 					if (tmp.size() == 0) continue;
-					outp.print(startFolder(CacheType.transType(new Integer((String)entry.getKey()).intValue())));
+					outp.print(startFolder(CacheType.cw2ExportString(CacheType.guiSelect2Cw(new Integer((String)entry.getKey()).byteValue()))));
 
 					for(int i = 0; i<tmp.size(); i++){
 						ch = (CacheHolder) tmp.get(i);
@@ -160,15 +160,15 @@
 		for (int i = 0; i < categoryNames.length; i++) {
 			outCacheDB[i] = new Hashtable();
 			// create the roots for the cachetypes
-			for (int j = 0; j < CacheType.wayType.length; j++) {
-				outCacheDB[i].put(CacheType.wayType[j][CacheType.WPT_NUM], new Vector());
+			for (int j = 0; j < CacheType.guiTypeStrings().length; j++) {
+				outCacheDB[i].put(String.valueOf(CacheType.guiSelect2Cw(j)), new Vector());
 			}
 		}
 
 		// fill structure with data from cacheDB
 		for(int i = 0; i<cacheDB.size(); i++){
 			ch=cacheDB.get(i);
-			// TODO Das Argument nach STring zu casten gef?llt mir nicht ganz...
+			// TODO Das Argument nach STring zu casten gef???llt mir nicht ganz...
 			if(ch.isVisible() && !ch.isAddiWpt()){
 				if (ch.is_found()) { tmp = (Vector) outCacheDB[FOUND].get(String.valueOf(ch.getType()));}
 				else if (ch.is_owned()) { tmp = (Vector) outCacheDB[OWNED].get(String.valueOf(ch.getType()));}
@@ -225,8 +225,8 @@
 			int len;
 			String entName, fileName; 
 
-			for (int i = 0; i < CacheType.wayType.length; i++) {
-				fileName = CacheType.type2pic(Convert.parseInt(CacheType.wayType[i][CacheType.WPT_NUM]));
+			for (int i = 0; i < CacheType.guiTypeStrings().length; i++) {
+				fileName = CacheType.typeImageForId(CacheType.guiSelect2Cw(i));
 				entName = "GoogleEarthIcons/" + fileName;
 				zipEnt = zif.getEntry(entName);
 				if (zipEnt == null) continue;
@@ -284,7 +284,7 @@
 		strBuf.append("      <IconStyle>\r\n");
 		strBuf.append("         <Icon>\r\n");
 //		strBuf.append("            <href>"+ File.getProgramDirectory()+ "/" + CacheType.type2pic(Convert.parseInt(ch.type))+ "</href>\r\n");
-		strBuf.append("            <href>"+ CacheType.type2pic(ch.getType())+ "</href>\r\n");
+		strBuf.append("            <href>"+ CacheType.typeImageForId(ch.getType())+ "</href>\r\n");
 		strBuf.append("         </Icon>\r\n");
 		strBuf.append("      </IconStyle>\r\n");
 		strBuf.append("      <LabelStyle>\r\n");



From greiol at mail.berlios.de  Fri May 15 22:27:12 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Fri, 15 May 2009 22:27:12 +0200
Subject: [Cachewolf-svn] r1810 - in experiments/greiol: . docs src/CacheWolf
Message-ID: <200905152027.n4FKRCbK026707@sheep.berlios.de>

Author: greiol
Date: 2009-05-15 22:27:09 +0200 (Fri, 15 May 2009)
New Revision: 1810

Modified:
   experiments/greiol/build.xml
   experiments/greiol/docs/
   experiments/greiol/src/CacheWolf/CacheHolder.java
   experiments/greiol/src/CacheWolf/CacheType.java
   experiments/greiol/src/CacheWolf/Version.java
Log:
added version1 import
templates are finally added to ant build

Modified: experiments/greiol/build.xml
===================================================================
--- experiments/greiol/build.xml	2009-05-15 18:47:04 UTC (rev 1809)
+++ experiments/greiol/build.xml	2009-05-15 20:27:09 UTC (rev 1810)
@@ -55,7 +55,7 @@
 	<property name="assemble.dir" value="assemble"/>
 
 	<!-- lists of files to be packaged, this should become less confusing later on -->
-	<property name="template.files" value="*/*.tpl"/>
+	<property name="template.files" value="*.tpl"/>
 	<property name="icons.gui.files" value="dnf.gif,bug.gif,red.png,yellow.png,blue.png"/>
 	<property name="icons.log.files" value="traffic_cone.gif,recommendedlog.gif,icon_smile.gif,icon_sad.gif,icon_rsvp.gif,icon_note.gif,icon_needsmaint.gif,icon_maint.gif,icon_enabled.gif,icon_disabled.gif,icon_camera.gif,icon_attended.gif,big_smile.gif,coord_update.gif,icon_greenlight.gif,icon_redlight.gif"/>
 	<property name="icons.cache.files" value="11.gif,8.gif,6.gif,5.gif,4.gif,3.gif,2.gif,1858.gif,13.gif,137.gif,12.gif"/>
@@ -239,54 +239,54 @@
 
 	<target name="copyres" description="copy images to the assembly directory">
 		<!-- copy templates -->
-		<copy todir="${assemble.dir}">
+		<copy todir="${assemble.dir}" failonerror="true" verbose="true">
 			<fileset dir="res_noewe">
 				<include name="${template.files}"/>
 			</fileset>
 		</copy>
 		<!-- copy gui icons -->
-		<copy todir="${assemble.dir}">
+		<copy todir="${assemble.dir}" failonerror="true" verbose="true">
 			<fileset dir="res_noewe" includes="${icons.gui.files}"/>
 		</copy>
 		<!-- copy browser icons -->
-		<copy todir="${assemble.dir}">
+		<copy todir="${assemble.dir}" failonerror="true" verbose="true">
 			<fileset dir="res_noewe" includes="${icons.browser.files}"/>
 		</copy>
 		<!-- copy cache icons -->
-		<copy todir="${assemble.dir}">
+		<copy todir="${assemble.dir}" failonerror="true" verbose="true">
 			<fileset dir="res_noewe" includes="${icons.cache.files}"/>
 		</copy>
 		<!-- copy log icons -->
-		<copy todir="${assemble.dir}">
+		<copy todir="${assemble.dir}" failonerror="true" verbose="true">
 			<fileset dir="res_noewe" includes="${icons.log.files}"/>
 		</copy>
 		<!-- copy webmapservices -->
-		<copy todir="${assemble.dir}/webmapservices">
+		<copy todir="${assemble.dir}/webmapservices" failonerror="true" verbose="true">
 			<fileset dir="res_noewe/webmapservices"/>
 		</copy>
 		<!-- copy languages -->
-		<copy todir="${assemble.dir}/languages">
+		<copy todir="${assemble.dir}/languages" failonerror="true" verbose="true">
 			<fileset dir="res_noewe/languages"/>
 		</copy>
 		<!-- copy attributes -->
-		<copy todir="${assemble.dir}/attributes">
+		<copy todir="${assemble.dir}/attributes" failonerror="true" verbose="true">
 			<fileset dir="resources/attributes"/>
 		</copy>
 		<!-- copy addons -->
-		<copy todir="${assemble.dir}">
+		<copy todir="${assemble.dir}" failonerror="true" verbose="true">
 			<fileset dir="res_noewe">
 				<include name="Garmin*.zip"/>
 				<include name="POI*.zip"/>
 			</fileset>
 		</copy>
 		<!-- copy logo -->
-		<copy todir="${assemble.dir}" file="resources/CacheWolf.ico"/>
+		<copy todir="${assemble.dir}" file="resources/CacheWolf.ico" failonerror="true" verbose="true"/>
 		<!-- copy documentation -->
-		<copy todir="${assemble.dir}">
+		<copy todir="${assemble.dir}" failonerror="true" verbose="true">
 			<fileset dir="res_noewe" includes="${doc.files}"/>
 		</copy>
 		<!-- spider.def -->
-		<copy todir="${assemble.dir}" file="res_noewe/spider.def"/>
+		<copy todir="${assemble.dir}" file="res_noewe/spider.def" failonerror="true" verbose="true"/>
 	</target>
 
 	<target name="compilecabhelper" description="helper classes for building cabs" if="build.cab">


Property changes on: experiments/greiol/docs
___________________________________________________________________
Name: svn:ignore
   + *


Modified: experiments/greiol/src/CacheWolf/CacheHolder.java
===================================================================
--- experiments/greiol/src/CacheWolf/CacheHolder.java	2009-05-15 18:47:04 UTC (rev 1809)
+++ experiments/greiol/src/CacheWolf/CacheHolder.java	2009-05-15 20:27:09 UTC (rev 1810)
@@ -198,7 +198,13 @@
 		        
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
-	            setType(CacheType.v1Converter((xmlString.substring(start + 1, end))));
+		        try {
+		        	setType(CacheType.v1Converter((xmlString.substring(start + 1, end))));
+		        } catch (IllegalArgumentException ex) {
+		        	setType(CacheType.CW_TYPE_ERROR);
+		        	Global.getPref().log(wayPoint, ex, true);
+		        	setIncomplete(true);
+		        }
 	            
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
@@ -215,9 +221,14 @@
 
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
+		        try {
+		        	setCacheSize(CacheSize.v1Converter(xmlString.substring(start + 1, end)));
+		        } catch (IllegalArgumentException ex) {
+		        	setCacheSize(CacheSize.CW_SIZE_ERROR);
+		        	Global.getPref().log(wayPoint, ex, true);
+		        	setIncomplete(true);
+		        }
 		        
-		        setCacheSize(CacheSize.v1Converter(xmlString.substring(start + 1, end)));
-		        
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setAvailable(xmlString.substring(start + 1, end).equals("true"));
@@ -271,7 +282,7 @@
 
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
-		        setIncomplete(xmlString.substring(start + 1, end).equals("true"));
+		        setIncomplete(xmlString.substring(start + 1, end).equals("true") || incomplete);
 
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);

Modified: experiments/greiol/src/CacheWolf/CacheType.java
===================================================================
--- experiments/greiol/src/CacheWolf/CacheType.java	2009-05-15 18:47:04 UTC (rev 1809)
+++ experiments/greiol/src/CacheWolf/CacheType.java	2009-05-15 20:27:09 UTC (rev 1810)
@@ -227,6 +227,32 @@
 	 * @deprecated remove once v1 file version compatibility is abandoned
 	 */
 	public static final byte v1Converter(String type) throws IllegalArgumentException  {
+		if (type.equals("0")) return CW_TYPE_CUSTOM;
+		if (type.equals("2")) return CW_TYPE_TRADITIONAL;
+		if (type.equals("3")) return CW_TYPE_MULTI;
+		if (type.equals("4")) return CW_TYPE_VIRTUAL;
+		if (type.equals("5")) return CW_TYPE_LETTERBOX;
+		if (type.equals("6")) return CW_TYPE_EVENT;
+		if (type.equals("")) return CW_TYPE_QUIZ;
+		if (type.equals("8")) return CW_TYPE_UNKNOWN;
+		if (type.equals("")) return CW_TYPE_MATH;
+		if (type.equals("")) return CW_TYPE_MOVING;
+		if (type.equals("")) return CW_TYPE_DRIVE_IN;
+		if (type.equals("11")) return CW_TYPE_WEBCAM;
+		if (type.equals("12")) return CW_TYPE_LOCATIONLESS;
+		if (type.equals("")) return CW_TYPE_CITO;
+		if (type.equals("50")) return CW_TYPE_PARKING;
+		if (type.equals("51")) return CW_TYPE_STAGE;
+		if (type.equals("52")) return CW_TYPE_QUESTION;
+		if (type.equals("53")) return CW_TYPE_FINAL;
+		if (type.equals("54")) return CW_TYPE_TRAILHEAD;
+		if (type.equals("55")) return CW_TYPE_REFERENCE;
+		if (type.equals("453")) return CW_TYPE_MEGA_EVENT;
+		if (type.equals("1858")) return CW_TYPE_WHEREIGO;
+		if (type.equals("")) return CW_TYPE_APE;
+		if (type.equals("")) return CW_TYPE_MAZE;
+		if (type.equals("137")) return CW_TYPE_EARTH;
+		
 		throw new IllegalArgumentException("unmatched argument "+type+" in CacheSizeNew v1Converter()");
 	}
 

Modified: experiments/greiol/src/CacheWolf/Version.java
===================================================================
--- experiments/greiol/src/CacheWolf/Version.java	2009-05-15 18:47:04 UTC (rev 1809)
+++ experiments/greiol/src/CacheWolf/Version.java	2009-05-15 20:27:09 UTC (rev 1810)
@@ -15,7 +15,7 @@
 	static final int VER_MAJOR = 1;
 	static final int VER_MINOR = 0;
 	static final String VER_SVN ="$LastChangedRevision$"; // the number is automatically replaced by subversion to the latest versionnumer of this file (svn:keywords LastChangedRevision)
-	static final int SVN_REVISION = 20090512;
+	static final int SVN_REVISION = 20090515;
 	static final int VERSION_TYPE = 3;
 	public static final String[] VERSION_TYPES = {
 		"Release", 



From engywuck at mail.berlios.de  Fri May 15 23:12:26 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Fri, 15 May 2009 23:12:26 +0200
Subject: [Cachewolf-svn] r1811 - trunk/src/CacheWolf
Message-ID: <200905152112.n4FLCQMt001275@sheep.berlios.de>

Author: engywuck
Date: 2009-05-15 23:12:24 +0200 (Fri, 15 May 2009)
New Revision: 1811

Modified:
   trunk/src/CacheWolf/Filter.java
Log:
Bugfix: Filtering cache state now even works if no other filter element is active.

Modified: trunk/src/CacheWolf/Filter.java
===================================================================
--- trunk/src/CacheWolf/Filter.java	2009-05-15 20:27:09 UTC (rev 1810)
+++ trunk/src/CacheWolf/Filter.java	2009-05-15 21:12:24 UTC (rev 1811)
@@ -625,7 +625,8 @@
 		    prof.getFilterDiff().equals("L") &&
 		    prof.getFilterTerr().equals("L") &&
 		    prof.getFilterAttrYes() == 0l &&
-		    prof.getFilterAttrNo() == 0l);
+		    prof.getFilterAttrNo() == 0l &&
+		    prof.getFilterStatus().equals(""));
 	}
 
 }



From engywuck at mail.berlios.de  Fri May 15 23:41:31 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Fri, 15 May 2009 23:41:31 +0200
Subject: [Cachewolf-svn] r1812 - trunk/src/CacheWolf
Message-ID: <200905152141.n4FLfVE2004274@sheep.berlios.de>

Author: engywuck
Date: 2009-05-15 23:41:29 +0200 (Fri, 15 May 2009)
New Revision: 1812

Added:
   trunk/src/CacheWolf/FilterData.java
Log:
Ooops, forgot to commit a new class...

Added: trunk/src/CacheWolf/FilterData.java
===================================================================
--- trunk/src/CacheWolf/FilterData.java	2009-05-15 21:12:24 UTC (rev 1811)
+++ trunk/src/CacheWolf/FilterData.java	2009-05-15 21:41:29 UTC (rev 1812)
@@ -0,0 +1,181 @@
+package CacheWolf;
+
+public class FilterData {
+
+	// When extending the filter check "normaliseFilters"
+	// which ensures backward compatibility. Normally no change should be needed
+	public final static String FILTERTYPE = "1111111111111111111";
+	public final static String FILTERROSE = "1111111111111111";
+	public final static String FILTERVAR = "11111111";
+	public final static String FILTERSIZE = "111111";
+
+	private String filterType = new String(FILTERTYPE);
+	private String filterRose = new String(FILTERROSE);
+	private String filterSize = new String(FILTERSIZE);
+
+	// filter settings for archived ... owner (section) in filterscreen
+	private String filterVar = new String(FILTERVAR);
+	private String filterDist = new String("L");
+	private String filterDiff = new String("L");
+	private String filterTerr = new String("L");
+
+	private long filterAttrYes = 0l;
+	private long filterAttrNo = 0l;
+	private int filterAttrChoice = 0;
+	
+	private String filterStatus = "";
+	private boolean useRegexp = false;
+
+	/**
+	 * Constructor for a profile
+	 *
+	 */
+	public FilterData(){ // public constructor
+	}
+
+
+	/**
+	 * Ensure that all filters have the proper length so that the 'charAt' access in the filter do
+	 * not cause nullPointer Exceptions
+	 */
+	private void normaliseFilters() {
+		String manyOnes = "11111111111111111111111111111";
+		if (getFilterRose().length() < FILTERROSE.length()) {
+			setFilterRose((getFilterRose() + manyOnes).substring(0, FILTERROSE.length()));
+		}
+		if (getFilterVar().length() < FILTERVAR.length()) {
+			setFilterVar((getFilterVar() + manyOnes).substring(0, FILTERVAR.length()));
+		}
+		if (getFilterType().length() < FILTERTYPE.length()) {
+			setFilterType((getFilterType() + manyOnes).substring(0, FILTERTYPE.length()));
+		}
+		if (getFilterSize().length() < FILTERSIZE.length()) {
+			setFilterSize((getFilterSize() + manyOnes).substring(0, FILTERSIZE.length()));
+		}
+		if (getFilterDist().length() == 0)
+			setFilterDist("L");
+		if (getFilterDiff().length() == 0)
+			setFilterDiff("L");
+		if (getFilterTerr().length() == 0)
+			setFilterTerr("L");
+	}
+
+	// Getter and Setter for private properties
+
+	public String getFilterType() {
+		return filterType;
+	}
+
+	public void setFilterType(String filterType) {
+		this.notifyUnsavedChanges(!filterType.equals(this.filterType));
+		this.filterType = filterType;
+	}
+
+	private void notifyUnsavedChanges(boolean b) {
+	    // TODO Auto-generated method stub
+	    
+    }
+
+
+	public String getFilterRose() {
+		return filterRose;
+	}
+
+	public void setFilterRose(String filterRose) {
+		this.notifyUnsavedChanges(!filterRose.equals(this.filterRose));
+		this.filterRose = filterRose;
+	}
+
+	public String getFilterSize() {
+		return filterSize;
+	}
+
+	public void setFilterSize(String filterSize) {
+		this.notifyUnsavedChanges(!filterSize.equals(this.filterSize));
+		this.filterSize = filterSize;
+	}
+
+	public String getFilterVar() {
+		return filterVar;
+	}
+
+	public void setFilterVar(String filterVar) {
+		this.notifyUnsavedChanges(!filterVar.equals(this.filterVar));
+		this.filterVar = filterVar;
+	}
+
+	public String getFilterDist() {
+		return filterDist;
+	}
+
+	public void setFilterDist(String filterDist) {
+		this.notifyUnsavedChanges(!filterDist.equals(this.filterDist));
+		this.filterDist = filterDist;
+	}
+
+	public String getFilterDiff() {
+		return filterDiff;
+	}
+
+	public void setFilterDiff(String filterDiff) {
+		this.notifyUnsavedChanges(!filterDiff.equals(this.filterDiff));
+		this.filterDiff = filterDiff;
+	}
+
+	public String getFilterTerr() {
+		return filterTerr;
+	}
+
+	public void setFilterTerr(String filterTerr) {
+		this.notifyUnsavedChanges(!filterTerr.equals(this.filterTerr));
+		this.filterTerr = filterTerr;
+	}
+
+	public long getFilterAttrYes() {
+		return filterAttrYes;
+	}
+
+	public void setFilterAttrYes(long filterAttrYes) {
+		this.notifyUnsavedChanges(filterAttrYes != this.filterAttrYes);
+		this.filterAttrYes = filterAttrYes;
+	}
+
+	public long getFilterAttrNo() {
+		return filterAttrNo;
+	}
+
+	public void setFilterAttrNo(long filterAttrNo) {
+		this.notifyUnsavedChanges(filterAttrNo != this.filterAttrNo);
+		this.filterAttrNo = filterAttrNo;
+	}
+
+	public int getFilterAttrChoice() {
+		return filterAttrChoice;
+	}
+
+	public void setFilterAttrChoice(int filterAttrChoice) {
+		this.notifyUnsavedChanges(filterAttrChoice != this.filterAttrChoice);
+		this.filterAttrChoice = filterAttrChoice;
+	}
+
+
+	public String getFilterStatus() {
+    	return filterStatus;
+    }
+
+
+	public void setFilterStatus(String filterStatus) {
+    	this.filterStatus = filterStatus;
+    }
+
+
+	public boolean useRegexp() {
+    	return useRegexp;
+    }
+
+
+	public void setUseRegexp(boolean useRegexp) {
+    	this.useRegexp = useRegexp;
+    }
+
+}



From engywuck at mail.berlios.de  Sat May 16 20:14:05 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Sat, 16 May 2009 20:14:05 +0200
Subject: [Cachewolf-svn] r1813 - in trunk: res_noewe/languages resources
	src/CacheWolf
Message-ID: <200905161814.n4GIE5bk007484@sheep.berlios.de>

Author: engywuck
Date: 2009-05-16 20:13:57 +0200 (Sat, 16 May 2009)
New Revision: 1813

Added:
   trunk/resources/trash.png
Modified:
   trunk/res_noewe/languages/DE.cfg
   trunk/res_noewe/languages/EN.cfg
   trunk/res_noewe/languages/FR.cfg
   trunk/res_noewe/languages/NL.cfg
   trunk/src/CacheWolf/FilterData.java
   trunk/src/CacheWolf/FilterScreen.java
   trunk/src/CacheWolf/Preferences.java
   trunk/src/CacheWolf/Profile.java
Log:
Filter screen with new features: Filters can be named and saved for later use. To use a saved filter, select it in the drop down list in the filter screen.

Modified: trunk/res_noewe/languages/DE.cfg
===================================================================
--- trunk/res_noewe/languages/DE.cfg	2009-05-15 21:41:29 UTC (rev 1812)
+++ trunk/res_noewe/languages/DE.cfg	2009-05-16 18:13:57 UTC (rev 1813)
@@ -110,6 +110,10 @@
 		218=Auch in Beschreibung/Notizen
 		219=Suche...
 		220=Pr%fcfe Notizen und L%f6ser
+		221=Filter %fcberschreiben?
+		222=Der Filter existiert schon. %dcberschreiben?
+		223=Filter l%f6schen?
+		224=+- Den gespeicherten Filter l%f6schen? 
 		299=Regul%e4rer Ausdruck
 		300=Type:
 		301=Gr%f6%dfe:

Modified: trunk/res_noewe/languages/EN.cfg
===================================================================
--- trunk/res_noewe/languages/EN.cfg	2009-05-15 21:41:29 UTC (rev 1812)
+++ trunk/res_noewe/languages/EN.cfg	2009-05-16 18:13:57 UTC (rev 1813)
@@ -110,6 +110,10 @@
 		218=Also in description/notes
 		219=Searching...
 		220=Check notes and solver
+		221=Overwrite filter?
+		222=This filter already exists. Overwrite it?
+		223=Delete filter?
+		224=+- Delete the saved filter?
 		299=Regular expression
 		300=Type:
 		301=Size:

Modified: trunk/res_noewe/languages/FR.cfg
===================================================================
--- trunk/res_noewe/languages/FR.cfg	2009-05-15 21:41:29 UTC (rev 1812)
+++ trunk/res_noewe/languages/FR.cfg	2009-05-16 18:13:57 UTC (rev 1813)
@@ -107,6 +107,10 @@
 		218=Aussi dans description/notes
 		219=Cherchant...
 		220=V%e9rifier notes et resoudeur
+		221=%c9craser filtre?
+		222=Ce filtre existe d%e9j%e0. %c9craser-le?
+		223=Effacer filtre?
+		224=+- Effacer ce filtre enregistr%e9?
 		299=Expression rationnelle
 		300=Type:
 		301=Gabarit:

Modified: trunk/res_noewe/languages/NL.cfg
===================================================================
--- trunk/res_noewe/languages/NL.cfg	2009-05-15 21:41:29 UTC (rev 1812)
+++ trunk/res_noewe/languages/NL.cfg	2009-05-16 18:13:57 UTC (rev 1813)
@@ -99,6 +99,10 @@
 		218=Ook in opmerkingen/beschrijving
 		219=Zoeken...
 		220=Onderzoek opmerkingen en oplosser
+		221=Overschrijf filter?
+		222=De filter exiteerd al. Overschrijven?
+		223=Filter verwijderen?
+		224=+- Deze filter verwijderen?
 		299=Reguliere expressie
 		300=Type:
 		301=Grote:

Added: trunk/resources/trash.png
===================================================================
(Binary files differ)


Property changes on: trunk/resources/trash.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/src/CacheWolf/FilterData.java
===================================================================
--- trunk/src/CacheWolf/FilterData.java	2009-05-15 21:41:29 UTC (rev 1812)
+++ trunk/src/CacheWolf/FilterData.java	2009-05-16 18:13:57 UTC (rev 1813)
@@ -1,5 +1,10 @@
 package CacheWolf;
 
+/**
+ * This class represents the settings of the filter that can be done when the users changes the
+ * filter in CacheWolf.
+ *
+ */
 public class FilterData {
 
 	// When extending the filter check "normaliseFilters"
@@ -22,7 +27,8 @@
 	private long filterAttrYes = 0l;
 	private long filterAttrNo = 0l;
 	private int filterAttrChoice = 0;
-	
+
+	// filter setting for state of cache
 	private String filterStatus = "";
 	private boolean useRegexp = false;
 
@@ -33,12 +39,30 @@
 	public FilterData(){ // public constructor
 	}
 
-
 	/**
+	 * Returns an XML representation of the filter data. If a non empty String is passed as
+	 * parameter, then this String is used as ID-tag for the filter. If it is empty, then the ID
+	 * tag will not appear in the cache data. The ID tag is the string which is used in the filter
+	 * screen to appear in the filter list.
+	 * @param ID ID tag of filter 
+	 * @return XML represenation of filter
+	 */
+	public String toXML(String ID) {
+		String saveID="";
+		if (ID != null && ! ID.equals("")) {
+			saveID = "id = \""+SafeXML.strxmlencode(ID)+"\" ";
+		}
+	    return "    <FILTERDATA "+saveID+"rose = \""+getFilterRose()+"\" type = \""+getFilterType()+
+		"\" var = \""+getFilterVar()+"\" dist = \""+getFilterDist().replace('"',' ')+"\" diff = \""+
+		getFilterDiff()+"\" terr = \""+getFilterTerr()+"\" size = \""+getFilterSize()+"\" attributesYes = \""+getFilterAttrYes()+
+		"\" attributesNo = \""+getFilterAttrNo()+"\" attributesChoice = \""+getFilterAttrChoice()+
+		"\" status = \""+SafeXML.strxmlencode(getFilterStatus())+"\" useRegexp = \""+useRegexp()+"\" />\n";	
+	}
+	/**
 	 * Ensure that all filters have the proper length so that the 'charAt' access in the filter do
 	 * not cause nullPointer Exceptions
 	 */
-	private void normaliseFilters() {
+	public void normaliseFilters() {
 		String manyOnes = "11111111111111111111111111111";
 		if (getFilterRose().length() < FILTERROSE.length()) {
 			setFilterRose((getFilterRose() + manyOnes).substring(0, FILTERROSE.length()));
@@ -67,22 +91,14 @@
 	}
 
 	public void setFilterType(String filterType) {
-		this.notifyUnsavedChanges(!filterType.equals(this.filterType));
 		this.filterType = filterType;
 	}
 
-	private void notifyUnsavedChanges(boolean b) {
-	    // TODO Auto-generated method stub
-	    
-    }
-
-
 	public String getFilterRose() {
 		return filterRose;
 	}
 
 	public void setFilterRose(String filterRose) {
-		this.notifyUnsavedChanges(!filterRose.equals(this.filterRose));
 		this.filterRose = filterRose;
 	}
 
@@ -91,7 +107,6 @@
 	}
 
 	public void setFilterSize(String filterSize) {
-		this.notifyUnsavedChanges(!filterSize.equals(this.filterSize));
 		this.filterSize = filterSize;
 	}
 
@@ -100,7 +115,6 @@
 	}
 
 	public void setFilterVar(String filterVar) {
-		this.notifyUnsavedChanges(!filterVar.equals(this.filterVar));
 		this.filterVar = filterVar;
 	}
 
@@ -109,7 +123,6 @@
 	}
 
 	public void setFilterDist(String filterDist) {
-		this.notifyUnsavedChanges(!filterDist.equals(this.filterDist));
 		this.filterDist = filterDist;
 	}
 
@@ -118,7 +131,6 @@
 	}
 
 	public void setFilterDiff(String filterDiff) {
-		this.notifyUnsavedChanges(!filterDiff.equals(this.filterDiff));
 		this.filterDiff = filterDiff;
 	}
 
@@ -127,7 +139,6 @@
 	}
 
 	public void setFilterTerr(String filterTerr) {
-		this.notifyUnsavedChanges(!filterTerr.equals(this.filterTerr));
 		this.filterTerr = filterTerr;
 	}
 
@@ -136,7 +147,6 @@
 	}
 
 	public void setFilterAttrYes(long filterAttrYes) {
-		this.notifyUnsavedChanges(filterAttrYes != this.filterAttrYes);
 		this.filterAttrYes = filterAttrYes;
 	}
 
@@ -145,7 +155,6 @@
 	}
 
 	public void setFilterAttrNo(long filterAttrNo) {
-		this.notifyUnsavedChanges(filterAttrNo != this.filterAttrNo);
 		this.filterAttrNo = filterAttrNo;
 	}
 
@@ -154,26 +163,21 @@
 	}
 
 	public void setFilterAttrChoice(int filterAttrChoice) {
-		this.notifyUnsavedChanges(filterAttrChoice != this.filterAttrChoice);
 		this.filterAttrChoice = filterAttrChoice;
 	}
 
-
 	public String getFilterStatus() {
     	return filterStatus;
     }
 
-
 	public void setFilterStatus(String filterStatus) {
     	this.filterStatus = filterStatus;
     }
 
-
 	public boolean useRegexp() {
     	return useRegexp;
     }
 
-
 	public void setUseRegexp(boolean useRegexp) {
     	this.useRegexp = useRegexp;
     }

Modified: trunk/src/CacheWolf/FilterScreen.java
===================================================================
--- trunk/src/CacheWolf/FilterScreen.java	2009-05-15 21:41:29 UTC (rev 1812)
+++ trunk/src/CacheWolf/FilterScreen.java	2009-05-16 18:13:57 UTC (rev 1813)
@@ -16,6 +16,7 @@
 	private static final Color COLOR_FILTERALL=new Color(255,0,0); // Red
     	
 	private mButton btnCancel, btnApply,btnRoute,
+				    btnSaveFlt, btnDelFlt,
 					btnBearing,btnTypes,btnAttributes,btnRatings,btnContainer,btnSearch,btnAddi, btnSelect,btnDeselect,btnCacheAttributes;
 	
 	private mChoice chcDist, chcDiff, chcTerr, chcAttrib;
@@ -26,7 +27,7 @@
 	                  chkArchived,chkNotArchived, chkAvailable,chkNotAvailable,
 					  chkNW, chkNNW , chkN , chkNNE, chkNE, chkENE, chkE, chkESE, chkSE, chkSSE, chkS,
 					  chkSSW, chkSW, chkWSW, chkW, chkWNW,chkWherigo;
-	private mComboBox chcStatus;
+	private mComboBox chcStatus, fltList;
 	private mCheckBox chkUseRegexp;
 	
 	private mInput inpDist, inpTerr, inpDiff;
@@ -43,6 +44,11 @@
 	private CellPanel pnlAddi=new CellPanel();
 	private CellPanel pnlCacheAttributes=new CellPanel();
 	private CardPanel cp=new CardPanel();
+	
+	// ID of last filter selected from the filter list
+	private String currentFilterID = ""; 
+	// Flag, true if filters have been changed, added or deleted. Leads to saving of pref.xml
+	private boolean savedFiltersChanged= false;
 
 	// A subclassed checkbox with a "third" state (=grey background).
 	// If all addi wpts are false or all addi wpts are true, the background is white
@@ -267,6 +273,23 @@
 		frmScreen.borderStyle=UIConstants.BDR_RAISEDOUTER|UIConstants.BDR_SUNKENINNER|UIConstants.BF_BOTTOM;
 		this.addLast(frmScreen,HSTRETCH,HFILL);
 		
+		// Had to move the button panel to the top, so that the SIP can't display over the 
+		// filter list field - in case we want to enter a new filter name.
+		CellPanel savDelPanel = new CellPanel(); // Panel for "save" and "delete" button
+		savDelPanel.equalWidths = true;
+		mImage savImg=new mImage("clsave.png"); savImg.transparentColor=new Color(255,0,0);
+		savDelPanel.addNext(btnSaveFlt = new mButton(savImg),STRETCH,FILL);
+		savDelPanel.addLast(btnDelFlt = new mButton(new mImage("trash.png")),STRETCH,FILL);
+		Panel fltListPanel = new Panel();
+		fltListPanel.addLast(fltList = new mComboBox());
+		fltListPanel.addLast(savDelPanel);
+		Panel btPanel = new Panel();
+		btPanel.addNext(btnCancel = new mButton(MyLocale.getMsg(708,"Cancel")),CellConstants.STRETCH, CellConstants.FILL);
+		btPanel.addNext(btnApply = new mButton(MyLocale.getMsg(709,"Apply")),CellConstants.STRETCH, CellConstants.FILL);
+		btPanel.addLast(fltListPanel,CellConstants.STRETCH, CellConstants.FILL);
+//		btPanel.addLast(btnRoute = new mButton("Route"),CellConstants.STRETCH, CellConstants.FILL);
+		addLast(btPanel.setTag(CellConstants.SPAN, new Dimension(3,1)), CellConstants.STRETCH, CellConstants.FILL);
+
 		CellPanel pnlButtons=new CellPanel();
 		pnlButtons.addLast(new mLabel("Filter"));
 		pnlButtons.addLast(btnBearing=new mButton(MyLocale.getMsg(721,"Bearing")));
@@ -290,11 +313,10 @@
 		cp.addItem(pnlCacheAttributes,"Attr",null);
 		addLast(cp,VSTRETCH,FILL);
 
-		Panel btPanel = new Panel();
-		btPanel.addNext(btnCancel = new mButton(MyLocale.getMsg(708,"Cancel")),CellConstants.STRETCH, CellConstants.FILL);
-		btPanel.addLast(btnApply = new mButton(MyLocale.getMsg(709,"Apply")),CellConstants.STRETCH, CellConstants.FILL);
-//		btPanel.addLast(btnRoute = new mButton("Route"),CellConstants.STRETCH, CellConstants.FILL);
-		addLast(btPanel.setTag(CellConstants.SPAN, new Dimension(3,1)), CellConstants.STRETCH, CellConstants.FILL);
+		// ***********
+		// Here: Former position of Cancel/Apply buttons
+		// ***********
+		
 		int sw = MyLocale.getScreenWidth(); int sh = MyLocale.getScreenHeight(); 
 		Preferences pref = Global.getPref();int fs = pref.fontSize;
 		int psx; int psy;
@@ -314,6 +336,9 @@
 				setPreferredSize(240,240);
 		}
 		cp.select(3);
+		
+		// Populating the comboBox of saved filters
+		buildFilterList();
 	}
 	
 	
@@ -567,6 +592,10 @@
 	public void onEvent(Event ev){
 		if (ev instanceof ControlEvent && ev.type == ControlEvent.PRESSED){
 			if (ev.target == btnCancel){
+				if (savedFiltersChanged) {
+					Global.getPref().savePreferences();
+					savedFiltersChanged = false;
+				}
 				this.close(0);
 			}
 			else if (ev.target == btnRoute){
@@ -588,104 +617,56 @@
 			}
 			else if (ev.target == btnApply){
 				Vm.showWait(true);
-				//Save filter required
-				Profile pfl = Global.getProfile();
-				pfl.setFilterVar((chkArchived.state    ? "1" : "0") +
-							(chkAvailable.state   ? "1" : "0") +
-							(chkFound.state       ? "1" : "0") +
-							(chkOwned.state       ? "1" : "0") +
-							(chkNotArchived.state ? "1" : "0") +
-							(chkNotAvailable.state? "1" : "0") +
-							(chkNotFound.state    ? "1" : "0") +
-							(chkNotOwned.state    ? "1" : "0"));							
-				pfl.setFilterType((chkTrad.state    ? "1" : "0") +
-								(chkMulti.state   ? "1" : "0") +
-								(chkVirtual.state ? "1" : "0") +
-								(chkLetter.state  ? "1" : "0") +
-								(chkEvent.state   ? "1" : "0") + 
-								(chkWebcam.state  ? "1" : "0") +
-								(chkMystery.state ? "1" : "0") +
-								(chkEarth.state   ? "1" : "0") +
-								(chkLocless.state ? "1" : "0") +
-								(chkMega.state    ? "1" : "0") +
-								(chkCustom.state  ? "1" : "0") +
-								(chkParking.state ? "1" : "0") +
-								(chkStage.state   ? "1" : "0") +
-								(chkQuestion.state? "1" : "0") +
-								(chkFinal.state   ? "1" : "0") +
-								(chkTrailhead.state ? "1" : "0") +
-								(chkReference.state ? "1" : "0")+
-								(chkCito.state ? "1" : "0")+
-								(chkWherigo.state ? "1" : "0"));
-				pfl.setFilterRose((chkNW.state  ? "1":"0")+
-							 (chkNNW.state ? "1":"0")+
-							 (chkN.state   ? "1":"0")+
-							 (chkNNE.state ? "1":"0")+
-							 (chkNE.state  ? "1":"0")+
-							 (chkENE.state ? "1":"0")+
-							 (chkE.state   ? "1":"0")+
-							 (chkESE.state ? "1":"0")+
-							 (chkSE.state  ? "1":"0")+
-							 (chkSSE.state ? "1":"0")+
-							 (chkS.state   ? "1":"0")+
-							 (chkSSW.state ? "1":"0")+
-							 (chkSW.state  ? "1":"0")+
-							 (chkWSW.state ? "1":"0")+
-							 (chkW.state   ? "1":"0")+
-							 (chkWNW.state ? "1":"0"));
-				pfl.setFilterSize((chkMicro.state ? "1" : "0")+
-							(chkSmall.state ? "1" : "0")+
-							(chkRegular.state ? "1" : "0")+
-							(chkLarge.state ? "1" : "0")+
-							(chkVeryLarge.state ? "1" : "0")+
-							(chkOther.state ? "1" : "0"));
-				
-				// Distance: If Metric system is set to imperial units,
-				//           then the entered value is meant to be miles,
-				//           otherwise it's kilometer.
-				double distValue = java.lang.Double.NaN;
-				String rawDistance = inpDist.getText().replace(',', '.');
-				String newDistance = rawDistance; // initial Value;
-				if (! rawDistance.trim().equals("")) {
-					distValue = java.lang.Double.valueOf(rawDistance).doubleValue();
-					if (Global.getPref().metricSystem == Metrics.IMPERIAL){
-						newDistance = String.valueOf(Metrics.convertUnit(distValue, Metrics.MILES, Metrics.KILOMETER));
-					}
-				}
-				if(chcDist.selectedIndex == 0) { 
-					pfl.setFilterDist("L"+newDistance);
-				} else { 
-					pfl.setFilterDist("G"+newDistance);
-				}
-					
-				if(chcDiff.selectedIndex == 0) { 
-					pfl.setFilterDiff("L"+inpDiff.getText());
-				} else if(chcDiff.selectedIndex == 1) { 
-					pfl.setFilterDiff("="+inpDiff.getText());
-				} else {	
-					pfl.setFilterDiff("G"+inpDiff.getText());
-				}	
-					
-				if(chcTerr.selectedIndex == 0) { 
-					pfl.setFilterTerr("L"+inpTerr.getText());
-				} else if(chcTerr.selectedIndex == 1){ 
-					pfl.setFilterTerr("="+inpTerr.getText());
-				} else { 
-					pfl.setFilterTerr("G"+inpTerr.getText());
-				}
-				pfl.setFilterAttrYes(attV.selectionMaskYes);
-				pfl.setFilterAttrNo(attV.selectionMaskNo);
-				pfl.setFilterAttrChoice(chcAttrib.selectedIndex);
-				pfl.setFilterStatus(chcStatus.getText());
-				pfl.setFilterUseRegexp(chkUseRegexp.getState());
-				// FIXME Das geht bestimmt auch ?ber Filter-Objekte
+
+				FilterData data = getDataFromScreen();
+				Global.getProfile().setCurrentFilter(data);
+
 				Filter flt = new Filter();
 				flt.setFilter();
 				flt.doFilter();
+				if (savedFiltersChanged) {
+					Global.getPref().savePreferences();
+					savedFiltersChanged = false;
+				}
 				Global.mainTab.tbP.tc.scrollToVisible(0,0);
 				Vm.showWait(false);
-				//Tabelle neu zeichnen lassen!
 				this.close(0);
+			} else if (ev.target == btnSaveFlt) {
+				String ID = fltList.getText();
+				FilterData data = getDataFromScreen();
+				MessageBox mBox;
+				if (ID.equals("")) {
+					mBox = new MessageBox(MyLocale.getMsg(221,"No filter name"), MyLocale.getMsg(222,"Please enter a name for the filter") , FormBase.IDOK);
+					mBox.execute();
+				} else if (Global.getPref().hasFilter(ID)) {
+					mBox = new MessageBox(MyLocale.getMsg(221,"Overwrite Filter?"), MyLocale.getMsg(222,"The filter already exists. Overwrite it?") , FormBase.IDYES |FormBase.IDNO);
+					if (mBox.execute() == FormBase.IDYES){
+						Global.getPref().addFilter(ID, data);
+						savedFiltersChanged = true;
+					}	
+				} else {
+					Global.getPref().addFilter(ID, data);
+					savedFiltersChanged = true;
+				}	
+				buildFilterList();
+			} else if (ev.target == btnDelFlt) {
+				String ID = fltList.getText();
+				if (!ID.equals("")) {
+					FilterData data = Global.getPref().getFilter(ID);
+					// We only need to delete anything, if there is already a filter of the id
+					// in the list box. If not, just delete the text in the box.
+					if (data != null) {
+						MessageBox mBox = new MessageBox(MyLocale.getMsg(223,"Delete filter?"), ID+MyLocale.getMsg(224," - Delete this filter?") , FormBase.IDYES |FormBase.IDNO);
+						if (mBox.execute() == FormBase.IDYES){
+							Global.getPref().removeFilter(ID);
+							fltList.setText("");
+							savedFiltersChanged = true;
+							this.buildFilterList();
+						}							
+					} else {
+						fltList.setText("");
+					}
+				}
 			} else if (ev.target == addiWptChk) { // Set all addi filters to value of main addi filter
 				chkParking.setState(addiWptChk.state);
 				chkStage.setState(addiWptChk.state);
@@ -721,9 +702,131 @@
 			}
 		}
 		if (ev instanceof DataChangeEvent )	{ 
+			if (ev.target == fltList) {
+				if (!currentFilterID.equals(fltList.getText())) {
+					FilterData data = Global.getPref().getFilter(fltList.getText());
+					if (data!=null) {
+						currentFilterID = fltList.getText();
+						this.setData(data);
+						this.repaintNow();
+					}
+				}
+//				Vm.debug("Event: "+ev.toString()+"; Target: "+ev.target+"; Liste: "+fltList.getText()+
+//						" (alt: "+fltList.oldText+")");
+				//setColors();
+			}
 			setColors();
 		}
 
 	}
+	
+	/**
+	 * Populating the list of available filters in the comboBox from memory, so that the comboBox
+	 * reflects the filters that are currenty in memory.
+	 */
+	private void buildFilterList() {
+		while (fltList.choice.itemsSize()>0) {
+			fltList.choice.deleteItem(0);
+		}
+		fltList.choice.addItems(Global.getPref().getFilterIDs());
+		fltList.choice.updateItems();
+	}
+	
+	/**
+     * Examines the filter screen and creates a FilterData object that represents the data
+     * entered in the screen.
+     */
+    private FilterData getDataFromScreen() {
+    	FilterData data = new FilterData();
+    	data.setFilterVar((chkArchived.state    ? "1" : "0") +
+	    			(chkAvailable.state   ? "1" : "0") +
+	    			(chkFound.state       ? "1" : "0") +
+	    			(chkOwned.state       ? "1" : "0") +
+	    			(chkNotArchived.state ? "1" : "0") +
+	    			(chkNotAvailable.state? "1" : "0") +
+	    			(chkNotFound.state    ? "1" : "0") +
+	    			(chkNotOwned.state    ? "1" : "0"));							
+	    data.setFilterType((chkTrad.state    ? "1" : "0") +
+	    				(chkMulti.state   ? "1" : "0") +
+	    				(chkVirtual.state ? "1" : "0") +
+	    				(chkLetter.state  ? "1" : "0") +
+	    				(chkEvent.state   ? "1" : "0") + 
+	    				(chkWebcam.state  ? "1" : "0") +
+	    				(chkMystery.state ? "1" : "0") +
+	    				(chkEarth.state   ? "1" : "0") +
+	    				(chkLocless.state ? "1" : "0") +
+	    				(chkMega.state    ? "1" : "0") +
+	    				(chkCustom.state  ? "1" : "0") +
+	    				(chkParking.state ? "1" : "0") +
+	    				(chkStage.state   ? "1" : "0") +
+	    				(chkQuestion.state? "1" : "0") +
+	    				(chkFinal.state   ? "1" : "0") +
+	    				(chkTrailhead.state ? "1" : "0") +
+	    				(chkReference.state ? "1" : "0")+
+	    				(chkCito.state ? "1" : "0")+
+	    				(chkWherigo.state ? "1" : "0"));
+	    data.setFilterRose((chkNW.state  ? "1":"0")+
+	    			 (chkNNW.state ? "1":"0")+
+	    			 (chkN.state   ? "1":"0")+
+	    			 (chkNNE.state ? "1":"0")+
+	    			 (chkNE.state  ? "1":"0")+
+	    			 (chkENE.state ? "1":"0")+
+	    			 (chkE.state   ? "1":"0")+
+	    			 (chkESE.state ? "1":"0")+
+	    			 (chkSE.state  ? "1":"0")+
+	    			 (chkSSE.state ? "1":"0")+
+	    			 (chkS.state   ? "1":"0")+
+	    			 (chkSSW.state ? "1":"0")+
+	    			 (chkSW.state  ? "1":"0")+
+	    			 (chkWSW.state ? "1":"0")+
+	    			 (chkW.state   ? "1":"0")+
+	    			 (chkWNW.state ? "1":"0"));
+	    data.setFilterSize((chkMicro.state ? "1" : "0")+
+	    			(chkSmall.state ? "1" : "0")+
+	    			(chkRegular.state ? "1" : "0")+
+	    			(chkLarge.state ? "1" : "0")+
+	    			(chkVeryLarge.state ? "1" : "0")+
+	    			(chkOther.state ? "1" : "0"));
+	    
+	    // Distance: If Metric system is set to imperial units,
+	    //           then the entered value is meant to be miles,
+	    //           otherwise it's kilometer.
+	    double distValue = java.lang.Double.NaN;
+	    String rawDistance = inpDist.getText().replace(',', '.');
+	    String newDistance = rawDistance; // initial Value;
+	    if (! rawDistance.trim().equals("")) {
+	    	distValue = java.lang.Double.valueOf(rawDistance).doubleValue();
+	    	if (Global.getPref().metricSystem == Metrics.IMPERIAL){
+	    		newDistance = String.valueOf(Metrics.convertUnit(distValue, Metrics.MILES, Metrics.KILOMETER));
+	    	}
+	    }
+	    if(chcDist.selectedIndex == 0) { 
+	    	data.setFilterDist("L"+newDistance);
+	    } else { 
+	    	data.setFilterDist("G"+newDistance);
+	    }
+	    	
+	    if(chcDiff.selectedIndex == 0) { 
+	    	data.setFilterDiff("L"+inpDiff.getText());
+	    } else if(chcDiff.selectedIndex == 1) { 
+	    	data.setFilterDiff("="+inpDiff.getText());
+	    } else {	
+	    	data.setFilterDiff("G"+inpDiff.getText());
+	    }	
+	    	
+	    if(chcTerr.selectedIndex == 0) { 
+	    	data.setFilterTerr("L"+inpTerr.getText());
+	    } else if(chcTerr.selectedIndex == 1){ 
+	    	data.setFilterTerr("="+inpTerr.getText());
+	    } else { 
+	    	data.setFilterTerr("G"+inpTerr.getText());
+	    }
+	    data.setFilterAttrYes(attV.selectionMaskYes);
+	    data.setFilterAttrNo(attV.selectionMaskNo);
+	    data.setFilterAttrChoice(chcAttrib.selectedIndex);
+	    data.setFilterStatus(chcStatus.getText());
+	    data.setUseRegexp(chkUseRegexp.getState());
+	    return data;
+    }
 
 }

Modified: trunk/src/CacheWolf/Preferences.java
===================================================================
--- trunk/src/CacheWolf/Preferences.java	2009-05-15 21:41:29 UTC (rev 1812)
+++ trunk/src/CacheWolf/Preferences.java	2009-05-16 18:13:57 UTC (rev 1813)
@@ -23,6 +23,8 @@
 	public static final int YES = 0;
 	public static final int NO = 1;
 	public static final int ASK = 2;
+	// Hashtable is saving filter data objects the user wants to save
+	private Hashtable filterList = new Hashtable(15);
 
 	//////////////////////////////////////////////////////////////////////////////////////
     // Constructor
@@ -414,6 +416,26 @@
 		else if (name.equals("locale")) {
 			language = atts.getValue("language");
 		}
+		else if (name.equals("FILTERDATA")) {
+			// Creating a filter object and reading the saved data
+			String id = SafeXML.strxmldecode(atts.getValue("id"));
+			FilterData data = new FilterData();
+			data.setFilterRose(atts.getValue("rose"));
+			data.setFilterType(atts.getValue("type"));
+			data.setFilterVar(atts.getValue("var"));
+			data.setFilterDist(atts.getValue("dist"));
+			data.setFilterDiff(atts.getValue("diff"));
+			data.setFilterTerr(atts.getValue("terr"));
+			data.setFilterSize(atts.getValue("size"));
+			data.setFilterAttrYes(Convert.parseLong(atts.getValue("attributesYes")));
+			data.setFilterAttrNo(Convert.parseLong(atts.getValue("attributesNo")));
+			data.setFilterAttrChoice(Convert.parseInt(atts.getValue("attributesChoice")));
+			data.setFilterStatus(SafeXML.strxmldecode(atts.getValue("status")));
+			data.setUseRegexp(Boolean.valueOf(atts.getValue("useRegexp")).booleanValue());
+			// Filter object is remembered under the given ID
+			this.addFilter(id, data);
+		}
+
 	}
 
 	public void characters( char ch[], int start, int length ) {
@@ -476,6 +498,11 @@
 			outp.print("    <metric type=\"" + SafeXML.strxmlencode(metricSystem) + "\"/>\n");
 			outp.print("    <export numberOfLogsToExport=\"" + SafeXML.strxmlencode(numberOfLogsToExport) + "\" exportTravelbugs=\"" + SafeXML.strxmlencode(exportTravelbugs) + "\" exportGpxAsMyFinds=\"" + SafeXML.strxmlencode(exportGpxAsMyFinds) + "\"/>\n");
 			if (customMapsPath!=null) outp.print("	<mapspath dir = \"" + SafeXML.strxmlencode(customMapsPath.replace('\\','/')) + "\"/>\n");
+			// Saving filters
+			String[] filterIDs = this.getFilterIDs();
+			for (int i=0; i<filterIDs.length; i++){
+				outp.print(this.getFilter(filterIDs[i]).toXML(filterIDs[i]));
+			}
 			if (debug) outp.print("    <debug value=\"true\" />\n"); // Keep the debug switch if it is set
 			// save last path of different exporters
 			Iterator itPath = exporterPaths.entries();
@@ -776,4 +803,57 @@
 		return dir;
 	}
 
+	/**
+	 * <code>True</code> or <code>false</code>, depending if a filter with the given ID is 
+	 * saved in the preferences.
+	 * @param filterID ID of the filter to check
+	 * @return True or false
+	 */
+	public boolean hasFilter(String filterID) {
+		return this.filterList.containsKey(filterID);
+	}
+	
+	/**
+	 * Returns the FilterData object saved with the given ID. The ID is not saved in the object, 
+	 * so it may be resaved under another ID.
+	 * @param filterID ID of the FilterData object
+	 * @return FilterData object
+	 */
+	public FilterData getFilter(String filterID) {
+		return (FilterData)this.filterList.get(filterID);
+	}
+	
+	/**
+	 * Adds a FilterData object to the list. If a FilterData object is already saved unter the 
+	 * given ID, the old object is removed and the new one is set at its place.
+	 * @param filterID ID to associate with the filter object
+	 * @param filter FilterData object
+	 */
+	public void addFilter(String filterID, FilterData filter) {
+		this.filterList.put(filterID, filter);
+	}
+	
+	/**
+	 * Removed the FilterData object which is saved with the given ID. If no such FilterData object
+	 * exists, nothing happens.
+	 * @param filterID ID of FilterData object to remove
+	 */
+	public void removeFilter(String filterID) {
+		this.filterList.remove(filterID);
+	}
+	
+	/**
+	 * Returns an array of ID of saved FilterData objects.
+	 * @return Array of IDs
+	 */
+	public String[] getFilterIDs() {
+		String[] result;
+		result = new String[this.filterList.size()];
+		Enumeration en = this.filterList.keys();
+		int i=0;
+		while (en.hasMoreElements()) {
+			result[i++] = (String) en.nextElement();
+		}
+		return result;
+	}
 }

Modified: trunk/src/CacheWolf/Profile.java
===================================================================
--- trunk/src/CacheWolf/Profile.java	2009-05-15 21:41:29 UTC (rev 1812)
+++ trunk/src/CacheWolf/Profile.java	2009-05-16 18:13:57 UTC (rev 1813)
@@ -181,12 +181,9 @@
 			} else {
 				activeFilterForSave = getFilterActive();
 			}
-			detfile.print("    <FILTER status = \""+activeFilterForSave+(isFilterInverted()?"T":"F")+ 
-					"\" rose = \""+getFilterRose()+"\" type = \""+getFilterType()+
-					"\" var = \""+getFilterVar()+"\" dist = \""+getFilterDist().replace('"',' ')+"\" diff = \""+
-					getFilterDiff()+"\" terr = \""+getFilterTerr()+"\" size = \""+getFilterSize()+"\" attributesYes = \""+getFilterAttrYes()+
-					"\" attributesNo = \""+getFilterAttrNo()+"\" attributesChoice = \""+getFilterAttrChoice()+"\" showBlacklist = \""+showBlacklisted()+
-					"\" status = \""+SafeXML.clean(getFilterStatus())+"\" useRegexp = \""+getFilterUseRegexp()+"\" />\n");
+			detfile.print("    <FILTERCONFIG status = \""+activeFilterForSave+
+					(isFilterInverted()?"T":"F")+"\" showBlacklist = \""+showBlacklisted()+"\" />\n");
+			detfile.print(this.getCurrentFilter().toXML(""));
 			detfile.print("    <SYNCOC date = \""+getLast_sync_opencaching()+"\" dist = \""+getDistOC()+"\"/>\n");
 			detfile.print("    <SPIDERGC dist = \"" + getDistGC() + "\"/>\n");
 			int size = cacheDB.size();
@@ -197,13 +194,8 @@
 				}
 				ch = cacheDB.get(i);
 				// //Vm.debug("Saving: " + ch.CacheName);
-				if (ch.getWayPoint().length() > 0) { // TODO && ch.LongDescription.equals("An
-/*					detfile.print("    <CACHE name = \""+SafeXML.clean(ch.CacheName)+"\" owner = \""+SafeXML.clean(ch.CacheOwner)+
-							//"\" lat = \""+ SafeXML.clean(ch.LatLon) +
-							"\" lat = \""+ ch.pos.latDec + "\" lon = \""+ch.pos.lonDec+
-							"\" hidden = \""+ch.DateHidden+"\" wayp = \""+SafeXML.clean(ch.wayPoint)+"\" status = \""+ch.CacheStatus+"\" type = \""+ch.type+"\" dif = \""+ch.hard+"\" terrain = \"" + ch.terrain + "\" dirty = \"false" + // ch.dirty + dirty is not used, so we save it as false 
-							"\" size = \""+ch.CacheSize+"\" online = \"" + Convert.toString(ch.is_available) + "\" archived = \"" + Convert.toString(ch.is_archived) + "\" has_bug = \"" + Convert.toString(ch.has_bug) + "\" black = \"" + Convert.toString(ch.is_black) + "\" owned = \"" + Convert.toString(ch.is_owned) + "\" found = \"" + Convert.toString(ch.is_found) + "\" is_new = \"" + Convert.toString(ch.is_new) +"\" is_log_update = \"" + Convert.toString(ch.is_log_update) + "\" is_update = \"" + Convert.toString(ch.is_update) + "\" is_HTML = \"" + Convert.toString(ch.is_HTML) + "\" DNFLOGS = \"" + ch.noFindLogs + "\" ocCacheID = \"" + ch.ocCacheID + "\" is_INCOMPLETE = \""+Convert.toString(ch.is_incomplete)+ "\" lastSyncOC = \"" + ch.lastSyncOC + "\" />\n");
-*/					detfile.print(ch.toXML());
+				if (ch.getWayPoint().length() > 0) { 
+					detfile.print(ch.toXML());
 				}
 			}
 			detfile.print("</CACHELIST>\n");
@@ -268,8 +260,9 @@
 				} else if (text.indexOf("<SPIDERGC")>=0) {
 					int start=text.indexOf("dist = \"")+8;
 					setDistGC(text.substring(start,text.indexOf("\"",start)));
-				} else if (text.indexOf("<FILTER")>=0){
-					ex.setSource(text);
+				} else if (indexXmlVersion <=2 && text.indexOf("<FILTER")>=0){
+					// Read filter data of file versions 1 and 2. (Legacy code)
+					ex.setSource(text.substring(text.indexOf("<FILTER")));
 					String temp=ex.findNext(); // Filter status is now first, need to deal with old versions which don't have filter status
 					if (temp.length()==2) {
 						// Compatibility with previous versions
@@ -301,8 +294,33 @@
 					if (attr != null && !attr.equals(""))
 						setFilterAttrChoice(Convert.parseInt(attr));
 					setShowBlacklisted(Boolean.valueOf(ex.findNext()).booleanValue());
-					setFilterStatus(SafeXML.cleanback(ex.findNext()));
+				} else if (text.indexOf("<FILTERDATA")>=0){
+					ex.setSource(text.substring(text.indexOf("<FILTERDATA")));
+					setFilterRose(ex.findNext());
+					setFilterType(ex.findNext());
+					//Need this to stay "downward" compatible. New type introduced
+					//if(filterType.length()<=17) filterType = filterType + "1";
+					//Vm.debug("fil len: " +filterType.length());
+					//This is handled by "normaliseFilters" which is called at the end.
+					setFilterVar(ex.findNext());
+					setFilterDist(ex.findNext());
+					setFilterDiff(ex.findNext());
+					setFilterTerr(ex.findNext());
+					setFilterSize(ex.findNext());
+					String attr = ex.findNext();
+					setFilterAttrYes(Convert.parseLong(attr));
+					attr = ex.findNext();
+					setFilterAttrNo(Convert.parseLong(attr));
+					attr = ex.findNext();
+					setFilterAttrChoice(Convert.parseInt(attr));
+					setFilterStatus(SafeXML.strxmldecode(ex.findNext()));
 					setFilterUseRegexp(Boolean.valueOf(ex.findNext()).booleanValue());
+				} else if (text.indexOf("<FILTERCONFIG")>=0){
+					ex.setSource(text.substring(text.indexOf("<FILTERCONFIG")));
+					String temp=ex.findNext();
+					setFilterActive(Common.parseInt(temp.substring(0,1)));
+					setFilterInverted(temp.charAt(1)=='T');
+					setShowBlacklisted(Boolean.valueOf(ex.findNext()).booleanValue());
 				}
 			}
 			in.close();
@@ -318,8 +336,8 @@
 		} catch (IOException e){
 			Global.getPref().log("Problem reading index.xml in dir: "+dataDir,e,true); 
 		}
-		// FIXME Brauchen wir das noch? Und wenn ja: Hier?
-		//normaliseFilters();
+		// TODO Brauchen wir das noch?
+		this.getCurrentFilter().normaliseFilters();
 		resetUnsavedChanges();
 	}
 
@@ -710,6 +728,10 @@
 		this.distGC = distGC;
 	}
 
+	/**
+	 * Returns the currently active FilterData object for the profile.
+	 * @return Object representing the setting of the filter
+	 */
 	public FilterData getCurrentFilter() {
     	return currentFilter;
     }



From greiol at mail.berlios.de  Sun May 17 12:25:05 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Sun, 17 May 2009 12:25:05 +0200
Subject: [Cachewolf-svn] r1814 - in experiments/greiol: docs src/CacheWolf
	src/exp
Message-ID: <200905171025.n4HAP53u026016@sheep.berlios.de>

Author: greiol
Date: 2009-05-17 12:25:02 +0200 (Sun, 17 May 2009)
New Revision: 1814

Modified:
   experiments/greiol/docs/
   experiments/greiol/src/CacheWolf/Version.java
   experiments/greiol/src/exp/HTMLExporter.java
Log:
prepare for swicth


Property changes on: experiments/greiol/docs
___________________________________________________________________
Name: svn:ignore
   - *


Modified: experiments/greiol/src/CacheWolf/Version.java
===================================================================
--- experiments/greiol/src/CacheWolf/Version.java	2009-05-16 18:13:57 UTC (rev 1813)
+++ experiments/greiol/src/CacheWolf/Version.java	2009-05-17 10:25:02 UTC (rev 1814)
@@ -1,4 +1,3 @@
-
 package CacheWolf;
 
 import com.stevesoft.ewe_pat.Regex;
@@ -14,8 +13,8 @@
 public class Version {
 	static final int VER_MAJOR = 1;
 	static final int VER_MINOR = 0;
-	static final String VER_SVN ="$LastChangedRevision$"; // the number is automatically replaced by subversion to the latest versionnumer of this file (svn:keywords LastChangedRevision)
-	static final int SVN_REVISION = 20090515;
+	static final String VER_SVN = "$LastChangedRevision$"; //TODO: change build scripts to change SVN_REVISION = since VER_SVN = does not work as expected anyway
+	static final int SVN_REVISION = Common.parseInt(VER_SVN.substring(VER_SVN.indexOf(" ")+1, VER_SVN.lastIndexOf(" ")));
 	static final int VERSION_TYPE = 3;
 	public static final String[] VERSION_TYPES = {
 		"Release", 
@@ -34,8 +33,8 @@
 	}
 
 	public static String getReleaseDetailed() {
-		// habe die SVN-Nummer doch aus der Anzeige erstmal wieder herausgenommen, weil es in einem final Release doch recht seltsam auss???he.
-		// Sinnvoll w???re daher vielleicht, eine Methode getReleaseDatail, die die SVN-Versionnummer mit angibt und z.B. im "???ber"-Dialog angezeigt werden k???nnte.
+		// habe die SVN-Nummer doch aus der Anzeige erstmal wieder herausgenommen, weil es in einem final Release doch recht seltsam auss?he.
+		// Sinnvoll w?re daher vielleicht, eine Methode getReleaseDatail, die die SVN-Versionnummer mit angibt und z.B. im "?ber"-Dialog angezeigt werden k?nnte.
 		return getRelease() + "." + Convert.toString(SVN_REVISION) + " " + VERSION_TYPES[VERSION_TYPE];
 	}
 
@@ -123,4 +122,4 @@
 			return 3;
 		}
 	}
-}
+}
\ No newline at end of file

Modified: experiments/greiol/src/exp/HTMLExporter.java
===================================================================
--- experiments/greiol/src/exp/HTMLExporter.java	2009-05-16 18:13:57 UTC (rev 1813)
+++ experiments/greiol/src/exp/HTMLExporter.java	2009-05-17 10:25:02 UTC (rev 1814)
@@ -116,92 +116,120 @@
 							page_tpl.setParam("DESCRIPTION", modifyLongDesc(det,targetDir));
 						else {
 							String dummyText = new String();
+							try {
 							dummyText = STRreplace.replace(det.LongDescription, "\n", "<br>");
+							} catch (NullPointerException e) {
+								dummyText = "CacheWolf Error: Missing Long Description";
+						}
 							page_tpl.setParam("DESCRIPTION",dummyText);
-							
 						}
-						page_tpl.setParam("HINTS", det.Hints);
-						page_tpl.setParam("DECRYPTEDHINTS", Common.rot13(det.Hints));
+						try {
+							page_tpl.setParam("HINTS", det.Hints);
+						} catch (NullPointerException e) { 
+							page_tpl.setParam("HINTS", "CacheWolf Error: Hint information missing");
+						}
+						try {
+							page_tpl.setParam("DECRYPTEDHINTS", Common.rot13(det.Hints));
+						} catch (NullPointerException e) { 
+							page_tpl.setParam("DECRYPTEDHINTS", Common.rot13("CacheWolf Error: Hint information missing"));
+						}
+						
 						StringBuffer sb=new StringBuffer(2000);
-						for(int j = 0; j<det.CacheLogs.size(); j++){
-							sb.append(STRreplace.replace(det.CacheLogs.getLog(j).toHtml(),"http://www.geocaching.com/images/icons/",null));
-							sb.append("<br>");
-							icon=det.CacheLogs.getLog(j).getIcon();
-							if (logIcons.find(icon)<0) logIcons.add(icon); // Add the icon to list of icons to copy to dest directory
-						}
-						page_tpl.setParam("LOGS", sb.toString());
-						page_tpl.setParam("NOTES", STRreplace.replace(det.getCacheNotes(), "\n","<br>")); 
+						try {
+							for(int j = 0; j<det.CacheLogs.size(); j++){
+								sb.append(STRreplace.replace(det.CacheLogs.getLog(j).toHtml(),"http://www.geocaching.com/images/icons/",null));
+								sb.append("<br>");
+								icon=det.CacheLogs.getLog(j).getIcon();
+								if (logIcons.find(icon)<0) logIcons.add(icon); // Add the icon to list of icons to copy to dest directory
+							}
+						} catch (Exception e) { Vm.debug("P "+e); } //TODO: find out what is going wrong and especially why
+						try {
+							page_tpl.setParam("LOGS", sb.toString());
+						} catch (Exception e) { Vm.debug("Q "+e); } //TODO: find out what is going wrong and especially why
+						try {
+							page_tpl.setParam("NOTES", STRreplace.replace(det.getCacheNotes(), "\n","<br>"));
+						} catch (Exception e) { Vm.debug("R "+e); } //TODO: find out what is going wrong and especially why
 						// Cache Images
-						cacheImg.clear();
-						for(int j = 0; j<det.Images.size(); j++){
-							imgParams = new Hashtable();
-							String imgFile = new String((String)det.Images.get(j));
-							imgParams.put("FILE", imgFile);
-							if (j < det.ImagesText.size())
-								imgParams.put("TEXT",det.ImagesText.get(j));
-							else
-								imgParams.put("TEXT",imgFile);
-							DataMover.copy(profile.dataDir + imgFile,targetDir + imgFile);
-							cacheImg.add(imgParams);
-						}
-						page_tpl.setParam("cacheImg", cacheImg);
-						// Log images
-						logImg.clear();
-						for(int j = 0; j<det.LogImages.size(); j++){
-							logImgParams = new Hashtable();
-							String logImgFile = (String) det.LogImages.get(j);
-							logImgParams.put("FILE", logImgFile);
-							if (j < det.LogImagesText.size())
-								logImgParams.put("TEXT",det.LogImagesText.get(j));
-							else
-								logImgParams.put("TEXT",logImgFile);
-							DataMover.copy(profile.dataDir + logImgFile,targetDir + logImgFile);
-							logImg.add(logImgParams);
-						}
-						page_tpl.setParam("logImg", logImg);
-						// User images
-						usrImg.clear();
-						for(int j = 0; j<det.UserImages.size(); j++){
-							usrImgParams = new Hashtable();
-							String usrImgFile = new String((String)det.UserImages.get(j));
-							usrImgParams.put("FILE", usrImgFile);
-							if (j < det.UserImagesText.size())
-								usrImgParams.put("TEXT",det.UserImagesText.get(j));
-							else
-								usrImgParams.put("TEXT",usrImgFile);
-							DataMover.copy(profile.dataDir + usrImgFile,targetDir + usrImgFile);
-							usrImg.add(usrImgParams);
-						}
+						try {
+							cacheImg.clear();
+							for(int j = 0; j<det.Images.size(); j++){
+								imgParams = new Hashtable();
+								String imgFile = new String((String)det.Images.get(j));
+								imgParams.put("FILE", imgFile);
+								if (j < det.ImagesText.size())
+									imgParams.put("TEXT",det.ImagesText.get(j));
+								else
+									imgParams.put("TEXT",imgFile);
+								DataMover.copy(profile.dataDir + imgFile,targetDir + imgFile);
+								cacheImg.add(imgParams);
+							}
+						} catch (Exception e) { Vm.debug("S "+e); } //TODO: find out what is going wrong and especially why
+						try {
+							page_tpl.setParam("cacheImg", cacheImg);
+							// Log images
+							logImg.clear();
+							for(int j = 0; j<det.LogImages.size(); j++){
+								logImgParams = new Hashtable();
+								String logImgFile = (String) det.LogImages.get(j);
+								logImgParams.put("FILE", logImgFile);
+								if (j < det.LogImagesText.size())
+									logImgParams.put("TEXT",det.LogImagesText.get(j));
+								else
+									logImgParams.put("TEXT",logImgFile);
+								DataMover.copy(profile.dataDir + logImgFile,targetDir + logImgFile);
+								logImg.add(logImgParams);
+							}
+						} catch (Exception e) { Vm.debug("T "+e); } //TODO: find out what is going wrong and especially why
+						try {
+							page_tpl.setParam("logImg", logImg);
+							// User images
+							usrImg.clear();
+							for(int j = 0; j<det.UserImages.size(); j++){
+								usrImgParams = new Hashtable();
+								String usrImgFile = new String((String)det.UserImages.get(j));
+								usrImgParams.put("FILE", usrImgFile);
+								if (j < det.UserImagesText.size())
+									usrImgParams.put("TEXT",det.UserImagesText.get(j));
+								else
+									usrImgParams.put("TEXT",usrImgFile);
+								DataMover.copy(profile.dataDir + usrImgFile,targetDir + usrImgFile);
+								usrImg.add(usrImgParams);
+							}
+						} catch (Exception e) { Vm.debug("U "+e); } //TODO: find out what is going wrong and especially why
+						
 						page_tpl.setParam("userImg", usrImg);
 
 						// Map images
 						mapImg.clear();
 						mapImgParams = new Hashtable();
+						
 						String mapImgFile = new String(ch.getWayPoint() + "_map.gif");
 						// check if map file exists
 						File test = new File(profile.dataDir + mapImgFile);
-						if (test.exists()) {
-							mapImgParams.put("FILE", mapImgFile);
-							mapImgParams.put("TEXT",mapImgFile);
-							DataMover.copy(profile.dataDir + mapImgFile,targetDir + mapImgFile);
-							mapImg.add(mapImgParams);
-							
-							mapImgParams = new Hashtable();
-							mapImgFile = ch.getWayPoint() + "_map_2.gif";
-							mapImgParams.put("FILE", mapImgFile);
-							mapImgParams.put("TEXT",mapImgFile);
-							DataMover.copy(profile.dataDir + mapImgFile,targetDir + mapImgFile);
-							mapImg.add(mapImgParams);
-	
-							page_tpl.setParam("mapImg", mapImg);
-						}
-
-						
-						PrintWriter pagefile = new PrintWriter(new BufferedWriter(new FileWriter(targetDir + ch.getWayPoint()+".html")));
-						pagefile.print(page_tpl.output());
-						pagefile.close();
+						try {
+							if (test.exists()) {
+								mapImgParams.put("FILE", mapImgFile);
+								mapImgParams.put("TEXT",mapImgFile);
+								DataMover.copy(profile.dataDir + mapImgFile,targetDir + mapImgFile);
+								mapImg.add(mapImgParams);
+								
+								mapImgParams = new Hashtable();
+								mapImgFile = ch.getWayPoint() + "_map_2.gif";
+								mapImgParams.put("FILE", mapImgFile);
+								mapImgParams.put("TEXT",mapImgFile);
+								DataMover.copy(profile.dataDir + mapImgFile,targetDir + mapImgFile);
+								mapImg.add(mapImgParams);
+		
+								page_tpl.setParam("mapImg", mapImg);
+							}
+						} catch (Exception e) { Vm.debug("V "+e); } //TODO: find out what is going wrong and especially why
+						try {
+							PrintWriter pagefile = new PrintWriter(new BufferedWriter(new FileWriter(targetDir + ch.getWayPoint()+".html")));
+							pagefile.print(page_tpl.output());
+							pagefile.close();
+						} catch (Exception e) { Vm.debug("W "+e); }  //TODO: find out what is going wrong and especially why
 					}catch(Exception e){
-						Vm.debug("Problem writing waypoint html file");
+						Vm.debug("Problem writing waypoint html file"+e);
 					}
 				}//if is black, filtered
 			}



From greiol at mail.berlios.de  Sun May 17 13:28:16 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Sun, 17 May 2009 13:28:16 +0200
Subject: [Cachewolf-svn] r1815 - experiments/greiol/src/CacheWolf
Message-ID: <200905171128.n4HBSGov023093@sheep.berlios.de>

Author: greiol
Date: 2009-05-17 13:28:07 +0200 (Sun, 17 May 2009)
New Revision: 1815

Modified:
   experiments/greiol/src/CacheWolf/CacheType.java
   experiments/greiol/src/CacheWolf/GuiImageBroker.java
Log:
added mssing javadoc

Modified: experiments/greiol/src/CacheWolf/CacheType.java
===================================================================
--- experiments/greiol/src/CacheWolf/CacheType.java	2009-05-17 10:25:02 UTC (rev 1814)
+++ experiments/greiol/src/CacheWolf/CacheType.java	2009-05-17 11:28:07 UTC (rev 1815)
@@ -4,6 +4,8 @@
  * Handels all aspects of converting cache type information from
  * and to the various im- and exporters as well as for converting
  * legavy profiles to current standard
+ * 
+ * Do not instantiate this class, only use it in a static way
  */
 public final class CacheType {
 	
@@ -57,7 +59,7 @@
 	public static final byte CW_TYPE_MAZE = 103;
 	/** Earth Cache (GC) */
 	public static final byte CW_TYPE_EARTH = 104;
-	/** unparsable cache type or missing information, should throw IllegalArgumentExceptions when found */
+	/** unrecognized cache type or missing information, should throw IllegalArgumentExceptions when found */
 	public static final byte CW_TYPE_ERROR = -1;
 	
 	/** image for custom waypoints */
@@ -150,26 +152,46 @@
 	/** GUI string for custom waypoit */
 	public static final String CW_GUISTR_REFERENCE = "Addi: Reference";
 	
+	/** GPX identifier for Traditional caches */
 	public static final String GC_GPX_TRADITIONAL = "Traditional Cache";
+	/** GPX identifier for Multi caches */
 	public static final String GC_GPX_MULTI = "Multi-cache";
+	/** GPX identifier for virtual caches */
 	public static final String GC_GPX_VIRTUAL = "Virtual Cache";
+	/** GPX identifier for Letterbox hybrids */
 	public static final String GC_GPX_LETTERBOX = "Letterbox Hybrid";
+	/** GPX identifier for Event caches */
 	public static final String GC_GPX_EVENT = "Event Cache";
+	/** GPX identifier for Unknown or Mystery caches */ 
 	public static final String GC_GPX_UNKNOWN = "Unknown Cache";
+	/** GPX identifier for Webcam caches */
 	public static final String GC_GPX_WEBCAM = "Webcam Cache";
+	/** GPX identifier for Locationless caches */
 	public static final String GC_GPX_LOCATIONLESS = "Locationless (Reverse) Cache";
+	/** GPX identifier for CITO events */
 	public static final String GC_GPX_CITO = "Cache In Trash Out Event";
+	/** GPX identifier for Earth caches */
 	public static final String GC_GPX_EARTH = "Earthcache";
+	/** GPX identifier for Mega Events */
 	public static final String GC_GPX_MEGA_EVENT = "Mega-Event Cache";
+	/** GPX identifier for WhereIGo caches */
 	public static final String GC_GPX_WHEREIGO = "Wherigo Cache";
+	/** GPX identifier for additional waypoint Parking */
 	public static final String GC_GPX_PARKING = "Waypoint|Parking Area";
+	/** GPX identifier for additional waypoint Stage */
 	public static final String GC_GPX_STAGE = "Waypoint|Stages of a Multicache";
+	/** GPX identifier for additional waypoint QTA */
 	public static final String GC_GPX_QUESTION = "Waypoint|Question to Answer";
+	/** GPX identifier for additional waypoint Final */
 	public static final String GC_GPX_FINAL = "Waypoint|Final Coordinates";
+	/** GPX identifier for additional waypoint Trailhead */
 	public static final String GC_GPX_TRAILHEAD = "Waypoint|Trailhead";
+	/** GPX identifier for additional waypoint Reference Point */
 	public static final String GC_GPX_REFERENCE = "Waypoint|Reference Point";
-	public static final String GC_GPX_MAZE = "FIXME"; //FIXME: insert right string
-	public static final String GC_GPX_APE = "FIXME"; //FIXME: insert right string
+	/** GPX identifier for additional waypoint Adventure Maze Exhibit Events */
+	public static final String GC_GPX_MAZE = "GPS Adventures Exhibit"; 
+	/** GPX identifier for additional waypoint Project Ape caches */
+	public static final String GC_GPX_APE = "Project APE Cache"; 
 	
 	/**  constructor does nothing */
 	public CacheType() {
@@ -177,21 +199,11 @@
 	}
 	
 	/**
-	 * 
-	 * @param id
-	 * @return
-	 * @throws IllegalArgumentException
+	 * translate cache type to a short version for compact exporters or "smart" cache names. 
+	 * @param type CacheWolf internal type information
+	 * @return abbreviation of cache type
+	 * @throws IllegalArgumentException if <code>type</code> can not be mapped
 	 */
-	public static int cwTypeId2GuiTypeId(byte id) throws IllegalArgumentException {
-		throw new IllegalArgumentException("unmatched argument "+id+" in CacheSizeNew cwTypeId2GuiTypeId()");
-	}
-	
-	/**
-	 * 
-	 * @param type
-	 * @return
-	 * @throws IllegalArgumentException
-	 */
 	public static String getExportShortId(byte type) throws IllegalArgumentException {
 		switch (type){
 		case CW_TYPE_CUSTOM: return "C";
@@ -220,10 +232,10 @@
 	}
 	
 	/**
-	 * 
-	 * @param type
-	 * @return
-	 * @throws IllegalArgumentException if size can not be mapped to internal representation
+	 * convert version1 type information to current values
+	 * @param type version1 cache type information
+	 * @return current version cache type information
+	 * @throws IllegalArgumentException if <code>size</code> can not be mapped to internal representation
 	 * @deprecated remove once v1 file version compatibility is abandoned
 	 */
 	public static final byte v1Converter(String type) throws IllegalArgumentException  {
@@ -257,10 +269,10 @@
 	}
 
 	/**
-	 * 
-	 * @param type
-	 * @return
-	 * @throws IllegalArgumentException if size can not be mapped to internal representation
+	 * convert version1 type information to current values
+	 * @param type version2 cache type information
+	 * @return current version cache type information
+	 * @throws IllegalArgumentException if <code>size</code> can not be mapped to internal representation
 	 * @deprecated remove once v2 file version compatibility is abandoned
 	 */
 	public static final byte v2Converter(byte type) throws IllegalArgumentException  {
@@ -272,7 +284,7 @@
 	/**
 	 * check if a given waypoint type is an additional waypoint
 	 * @param type waypoint type to check 
-	 * @return true if it is an addition waypint, false otherwise
+	 * @return true if it is an additional waypint, false otherwise
 	 */
 	public static final boolean isAddiWpt(byte type) {
 		switch (type) {
@@ -288,9 +300,12 @@
 	}
 	
 	/**
-	 * 
-	 * @return
+	 * create list of cache types to be shown in GUI drop down lists
+	 * @return list of cache types to be shown in GUI drop down list
+	 * @see guiSelect2Cw
+	 * @see cw2GuiSelect
 	 */
+	//TODO: move to a class "closer" to the gui?
 	public static final String[] guiTypeStrings() {
 		String ret[] = new String[] {
 				CW_GUISTR_CUSTOM,
@@ -317,13 +332,16 @@
 	}
 	
 	/**
-	 * 
-	 * @param selection
-	 * @return
-	 * @throws IllegalArgumentException
+	 * translate GUI drop down index selection back to internally stored type
+	 * @param selection index value from drop down list
+	 * @return internal type
+	 * @throws IllegalArgumentException if <code>selection</code> can not be matched
+	 * @see guiTypeStrings
+	 * @see cw2GuiSelect
 	 */
+	//TODO: move to a class "closer" to the gui?
 	public static final byte guiSelect2Cw(int selection) throws IllegalArgumentException {
-		// make sure to refelect the order of guiTypeStrings()
+		// make sure to reflect the order of guiTypeStrings()
 		switch (selection) {
 		case  0: return CW_TYPE_CUSTOM;
 		case  1: return CW_TYPE_TRADITIONAL;
@@ -348,18 +366,27 @@
 		}
 	}
 	
+	/**
+	 * translate cache type to position of index to highlight in GUI cache type drop down list 
+	 * @param id internal id of cache type
+	 * @return index of the cache type in GUI list
+	 * @throws IllegalArgumentException if <code>id</code> can not be matched
+	 * @see guiTypeStrings
+	 * @see guiSelect2Cw
+	 */
+	//TODO: move to a class "closer" to the gui?
 	public static final int cw2GuiSelect(byte id) throws IllegalArgumentException {
 		switch (id) {
-		case  CW_TYPE_CUSTOM: return 0;
-		case  CW_TYPE_TRADITIONAL: return 1;
-		case  CW_TYPE_MULTI: return 2;
-		case  CW_TYPE_VIRTUAL: return 3;
-		case  CW_TYPE_LETTERBOX: return 4;
-		case  CW_TYPE_EVENT: return 5;
-		case  CW_TYPE_MEGA_EVENT: return 6;
-		case  CW_TYPE_WEBCAM: return 7;
-		case  CW_TYPE_UNKNOWN: return 8;
-		case  CW_TYPE_LOCATIONLESS: return 9;
+		case CW_TYPE_CUSTOM: return 0;
+		case CW_TYPE_TRADITIONAL: return 1;
+		case CW_TYPE_MULTI: return 2;
+		case CW_TYPE_VIRTUAL: return 3;
+		case CW_TYPE_LETTERBOX: return 4;
+		case CW_TYPE_EVENT: return 5;
+		case CW_TYPE_MEGA_EVENT: return 6;
+		case CW_TYPE_WEBCAM: return 7;
+		case CW_TYPE_UNKNOWN: return 8;
+		case CW_TYPE_LOCATIONLESS: return 9;
 		case CW_TYPE_CITO: return 10;
 		case CW_TYPE_EARTH: return 11;
 		case CW_TYPE_WHEREIGO: return 12;
@@ -374,14 +401,12 @@
 	}
 	
 	/**
-	 * 
-	 * @param gpxType
-	 * @return
-	 * @throws IllegalArgumentException
+	 * convert the strings found in import of GPX from GC, OC or TC to internal cache type 
+	 * @param gpxType type information found in GPX
+	 * @return internal cache type
+	 * @throws IllegalArgumentException if <code>gpxType</code> can not be matched
 	 */
 	public static final byte gpxType2CwType(String gpxType) throws IllegalArgumentException {
-		// TODO: add ape
-		// TODO: add maze
 		if (gpxType.equals(GC_GPX_TRADITIONAL) || gpxType.equals("Traditional")|| gpxType.equals("Classic")) return CW_TYPE_TRADITIONAL;
 		if (gpxType.equals(GC_GPX_MULTI) || gpxType.equals("Multi") || gpxType.equals("Offset")) return CW_TYPE_MULTI;
 		if (gpxType.equals(GC_GPX_VIRTUAL) || gpxType.equals("Virtual")) return CW_TYPE_VIRTUAL;
@@ -406,10 +431,10 @@
 	}
 	
 	/**
-	 * 
-	 * @param ocType
-	 * @return
-	 * @throws IllegalArgumentException
+	 * convert the cache type information from an OC XML import to internal cache type
+	 * @param ocType cache type found in OC XML
+	 * @return internal cache type
+	 * @throws IllegalArgumentException if <code>ocType</code> can not be macthed
 	 */
 	public static final byte ocType2CwType(String ocType) throws IllegalArgumentException {
 		if(ocType.equals("1")) return CW_TYPE_UNKNOWN;
@@ -426,10 +451,10 @@
 	}
 	
 	/**
-	 * 
-	 * @param gcType
-	 * @return
-	 * @throws IllegalArgumentException
+	 * convert type information discovered by GC spider to internal type information
+	 * @param gcType type information from GC spider
+	 * @return internal representation of cache type
+	 * @throws IllegalArgumentException if <code>gcType</code> can not be matched
 	 */
 	public static final byte gcSpider2CwType(String gcType) throws IllegalArgumentException {
 		if (gcType.equals("2")) { return CW_TYPE_TRADITIONAL; }
@@ -444,16 +469,16 @@
 		if (gcType.equals("13")) { return CW_TYPE_CITO; }
 		if (gcType.equals("137")) { return CW_TYPE_EARTH; }
 		if (gcType.equals("453")) { return CW_TYPE_MEGA_EVENT; }
+		if (gcType.equals("1304")) { return CW_TYPE_MAZE; }
 		if (gcType.equals("1858")) { return CW_TYPE_WHEREIGO; }
-		if (gcType.equals("1304")) { return CW_TYPE_MAZE; }
 		throw new IllegalArgumentException("unmatched argument "+gcType+" in CacheSize gcSpider2CwType()");
 	}
 	
 	/**
-	 * 
-	 * @param id
-	 * @return
-	 * @throws IllegalArgumentException
+	 * map cache types to images
+	 * @param id internal cache type id
+	 * @return non qualified name of image
+	 * @throws IllegalArgumentException if <code>id</code> can not be matched
 	 */
 	public static final String typeImageForId(byte id) throws IllegalArgumentException {
 		switch (id) {
@@ -482,6 +507,12 @@
 		}
 	}
 	
+	/**
+	 * generate type description matching those of GC for GPX export
+	 * @param id internal type id
+	 * @return type information in GC.com GPX format 
+	 * @throws IllegalArgumentException
+	 */
 	public static final String id2GpxString(byte id) throws IllegalArgumentException {
 		switch (id) {
 		case CW_TYPE_TRADITIONAL: return GC_GPX_TRADITIONAL;
@@ -509,7 +540,14 @@
 		
 	}
 	
-	//TODO: de we actually need this one
+	//TODO: do we actually need this one
+	
+	/**
+	 * generate human readable type description for exporters
+	 * @param id internal type id
+	 * @return human readable description of waypoint type for exporters  
+	 * @throws IllegalArgumentException if <code>id</code> is not a valid cache type
+	 */
 	public static final String cw2ExportString(byte id) throws IllegalArgumentException {
 		String ret;
 		try {
@@ -524,7 +562,4 @@
 		}
 		return ret;
 	}
-	
-	// cache to image
-	
 }

Modified: experiments/greiol/src/CacheWolf/GuiImageBroker.java
===================================================================
--- experiments/greiol/src/CacheWolf/GuiImageBroker.java	2009-05-17 10:25:02 UTC (rev 1814)
+++ experiments/greiol/src/CacheWolf/GuiImageBroker.java	2009-05-17 11:28:07 UTC (rev 1815)
@@ -3,7 +3,9 @@
 import ewe.fx.Image;
 
 /**
- * hold preloaded versions of gui images in a single place
+ * hold preloaded versions of GUI images in a single place
+ * 
+ * Do not instantiate this class, only use it in a static way.
  */
 
 public final class GuiImageBroker {
@@ -11,7 +13,7 @@
 	// TODO: check with Image an mImage
 	
 	/**
-	 * 
+	 * images to be displayed for cache types in GUI
 	 * @see getTypeImage
 	 * @see CacheTypes
 	 */
@@ -40,14 +42,21 @@
 		new Image(CacheType.CW_GUISTR_WHEREIGO)		// 21
 	};
 	
+	// TODO: move size images here
 	private static final Image[] sizeImages = {
 		
 	};
 
+	/** constructor does nothing */
 	public GuiImageBroker() {
-		// TODO Auto-generated constructor stub
 	}
 	
+	/**
+	 * select image to be displayed for a given cache type
+	 * @param id internal cache type id
+	 * @return <code>Image</code> object to be displayed
+	 * @throws IllegalArgumentException if <code>id</code> has no associated image
+	 */
 	public static Image getTypeImage(byte id) throws IllegalArgumentException {
 		switch (id) {
 		case CacheType.CW_TYPE_CUSTOM: return typeImages[0];



From araber95 at mail.berlios.de  Sun May 17 14:34:36 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Sun, 17 May 2009 14:34:36 +0200
Subject: [Cachewolf-svn] r1816 - in trunk/res_noewe/webmapservices: .
	untested
Message-ID: <200905171234.n4HCYawe028967@sheep.berlios.de>

Author: araber95
Date: 2009-05-17 14:34:33 +0200 (Sun, 17 May 2009)
New Revision: 1816

Added:
   trunk/res_noewe/webmapservices/it-52_t10.wms
   trunk/res_noewe/webmapservices/it-52_t10bw.wms
Removed:
   trunk/res_noewe/webmapservices/it.tos_topo-monochrome_auto.wms
   trunk/res_noewe/webmapservices/it.tos_topo-simplistic_auto.wms
   trunk/res_noewe/webmapservices/untested/it-52_t.wms
   trunk/res_noewe/webmapservices/untested/it-52_tm.wms
Log:
reflecting a new wms-server-name for toscana (italian region 52). mixed photo and topo. removed some layers. added all layers as comment

Added: trunk/res_noewe/webmapservices/it-52_t10.wms
===================================================================
--- trunk/res_noewe/webmapservices/it-52_t10.wms	2009-05-17 11:28:07 UTC (rev 1815)
+++ trunk/res_noewe/webmapservices/it-52_t10.wms	2009-05-17 12:34:33 UTC (rev 1816)
@@ -0,0 +1,293 @@
+TakenFromUrl:   http://www.rete.toscana.it/sett/territorio/carto/repertorio/geoscopio_wms/
+GetCapabilitiesUrl:      http://web.rete.toscana.it/sgrwms/com.rt.wms.RTmap?ServiceName=_rt_wms_topogr&service=WMS&request=GetCapabilities
+Name:   it.Toskana topo 10
+MapType: topo
+#MainUrl:   http://web.rete.toscana.it:80/sgrwms/com.rt.wms.RTmap/_rt_wms_topogr?
+#MainUrl:   http://web.rete.toscana.it:80/sgrwms/com.rt.wms.RTmap/_rt_wms?
+MainUrl:    http://web.rete.toscana.it/sgrwms/com.rt.wms.RTmap?
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.0
+CoordinateReferenceSystemCacheWolf:   3003
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:3003
+RequestUrlPart:   REQUEST=GetMap
+#LayersUrlPart:     LAYERS=_idita|ITALIA||
+#LayersUrlPart:     LAYERS=_idbati|BATIMETRICHE||
+#LayersUrlPart:     LAYERS=otf10k78|OFC 1:10.000 - 1978||
+#LayersUrlPart:     LAYERS=otf10k93|OFC 1:10.000 - 1993||
+#LayersUrlPart:     LAYERS=otf10k96|OFC 1:10.000 - 1996||
+#LayersUrlPart:     LAYERS=otf10k99|OFC 1:10.000 - 1999||
+#LayersUrlPart:     LAYERS=otf10k00|OFC 1:10.000 - 2000||
+#LayersUrlPart:     LAYERS=otf10k01|OFC 1:10.000 - 2001||
+#LayersUrlPart:     LAYERS=otf10k02|OFC 1:10.000 - 2002||
+#LayersUrlPart:     LAYERS=otf10k03|OFC 1:10.000 - 2003||
+#LayersUrlPart:     LAYERS=otf10k04|OFC 1:10.000 - 2004||
+#LayersUrlPart:     LAYERS=otf10k05|OFC 1:10.000 - 2005||
+#LayersUrlPart:     LAYERS=otf10k06|OFC 1:10.000 - 2006||
+#LayersUrlPart:     LAYERS=otf10k0306|OFC 1:10.000 - 03-06||
+#LayersUrlPart:     LAYERS=_idhills|HILLSHADE DA DTM CTR10k||
+#LayersUrlPart:     LAYERS=idhildtmlid05|HILLSHADE DA DTM RILIEVO LIDAR 2005||
+#LayersUrlPart:     LAYERS=idhildtmlid06|HILLSHADE DA DTM RILIEVO LIDAR 2006||
+#LayersUrlPart:     LAYERS=idhildtmlid07|HILLSHADE DA DTM RILIEVO LIDAR 2007||
+#LayersUrlPart:     LAYERS=idhildsmlid05|HILLSHADE DA DSM RILIEVO LIDAR 2005||
+#LayersUrlPart:     LAYERS=idhildsmlid06|HILLSHADE DA DSM RILIEVO LIDAR 2006||
+#LayersUrlPart:     LAYERS=idhildsmlid07|HILLSHADE DA DSM RILIEVO LIDAR 2007||
+#LayersUrlPart:     LAYERS=rst100k|MAPPA 1:100.000||
+#LayersUrlPart:     LAYERS=rst25k_igm|MAPPA 1:25.000||
+#LayersUrlPart:     LAYERS=idrst10k|CARTA TECNICA REGIONALE 10.000||
+#LayersUrlPart:     LAYERS=rstcatast|Mappa Catastale 1:5.000||
+#LayersUrlPart:     LAYERS=rst2k_liv2|C.T.R. 1:2.000 Liv2||
+#LayersUrlPart:     LAYERS=rst2k_liv3|C.T.R. 1:2.000 Liv3||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1987|C.T.R. 1:2.000 Liv3 - 1987||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1988|C.T.R. 1:2.000 Liv3 - 1988||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1989|C.T.R. 1:2.000 Liv3 - 1989||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1991|C.T.R. 1:2.000 Liv3 - 1991||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1992|C.T.R. 1:2.000 Liv3 - 1992||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1993|C.T.R. 1:2.000 Liv3 - 1993||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1994|C.T.R. 1:2.000 Liv3 - 1994||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1995|C.T.R. 1:2.000 Liv3 - 1995||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1996|C.T.R. 1:2.000 Liv3 - 1996||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1997|C.T.R. 1:2.000 Liv3 - 1997||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1998|C.T.R. 1:2.000 Liv3 - 1998||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1999|C.T.R. 1:2.000 Liv3 - 1999||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2000|C.T.R. 1:2.000 Liv3 - 2000||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2001|C.T.R. 1:2.000 Liv3 - 2001||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2002|C.T.R. 1:2.000 Liv3 - 2002||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2003|C.T.R. 1:2.000 Liv3 - 2003||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2004|C.T.R. 1:2.000 Liv3 - 2004||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2005|C.T.R. 1:2.000 Liv3 - 2005||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2006|C.T.R. 1:2.000 Liv3 - 2006||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2007|C.T.R. 1:2.000 Liv3 - 2007||
+#LayersUrlPart:     LAYERS=idbfmc|FOGLI CATASTALI|0|NaN
+#LayersUrlPart:     LAYERS=idquotf10k78|QUADRO DI UNIONE - OFC 1:10.000 (78)||
+#LayersUrlPart:     LAYERS=idquotf10k93|QUADRO DI UNIONE - OFC 1:10.000 (93)||
+#LayersUrlPart:     LAYERS=idquotf10k96|QUADRO DI UNIONE - OFC 1:10.000 (96)||
+#LayersUrlPart:     LAYERS=idquotf10k99|QUADRO DI UNIONE - OFC 1:10.000 (99)||
+#LayersUrlPart:     LAYERS=idquotf10k00|QUADRO DI UNIONE - OFC 1:10.000 (00)||
+#LayersUrlPart:     LAYERS=idquotf10k01|QUADRO DI UNIONE - OFC 1:10.000 (01)||
+#LayersUrlPart:     LAYERS=idquotf10k02|QUADRO DI UNIONE - OFC 1:10.000 (02)||
+#LayersUrlPart:     LAYERS=idquotf10k03|QUADRO DI UNIONE - OFC 1:10.000 (03)||
+#LayersUrlPart:     LAYERS=idquotf10k04|QUADRO DI UNIONE - OFC 1:10.000 (04)||
+#LayersUrlPart:     LAYERS=idquotf10k05|QUADRO DI UNIONE - OFC 1:10.000 (05)||
+#LayersUrlPart:     LAYERS=idquotf10k06|QUADRO DI UNIONE - OFC 1:10.000 (06)||
+#LayersUrlPart:     LAYERS=idquctr10k|QUADRO DI UNIONE - CTR 1:10.000||
+#LayersUrlPart:     LAYERS=idqumc5k|QUADRO DI UNIONE - MC 1:5.000||
+#LayersUrlPart:     LAYERS=idquctr2kliv2|QUADRO DI UNIONE - CTR 1:2.000 Liv.2||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1987|QU - CTR 1:2.000 Liv.3 - 1987||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1988|QU - CTR 1:2.000 Liv.3 - 1988||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1989|QU - CTR 1:2.000 Liv.3 - 1989||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1991|QU - CTR 1:2.000 Liv.3 - 1991||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1992|QU - CTR 1:2.000 Liv.3 - 1992||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1993|QU - CTR 1:2.000 Liv.3 - 1993||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1994|QU - CTR 1:2.000 Liv.3 - 1994||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1995|QU - CTR 1:2.000 Liv.3 - 1995||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1996|QU - CTR 1:2.000 Liv.3 - 1996||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1997|QU - CTR 1:2.000 Liv.3 - 1997||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1998|QU - CTR 1:2.000 Liv.3 - 1998||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1999|QU - CTR 1:2.000 Liv.3 - 1999||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2000|QU - CTR 1:2.000 Liv.3 - 2000||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2001|QU - CTR 1:2.000 Liv.3 - 2001||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2002|QU - CTR 1:2.000 Liv.3 - 2002||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2003|QU - CTR 1:2.000 Liv.3 - 2003||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2004|QU - CTR 1:2.000 Liv.3 - 2004||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2005|QU - CTR 1:2.000 Liv.3 - 2005||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2006|QU - CTR 1:2.000 Liv.3 - 2006||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2007|QU - CTR 1:2.000 Liv.3 - 2007||
+#LayersUrlPart:     LAYERS=idqudtmctr10k|QUADRO DI UNIONE - DTM da CTR10K||
+#LayersUrlPart:     LAYERS=idqulidar05|QUADRO DI UNIONE - LIDAR 2005||
+#LayersUrlPart:     LAYERS=idqulidar06|QUADRO DI UNIONE - LIDAR 2006||
+#LayersUrlPart:     LAYERS=idqulidar07|QUADRO DI UNIONE - LIDAR 2007||
+#LayersUrlPart:     LAYERS=idisoipse|CURVE DI LIVELLO|0|NaN
+#LayersUrlPart:     LAYERS=idpuntiquot|PUNTI QUOTATI|0|NaN
+#LayersUrlPart:     LAYERS=idcorsi|IDROGRAFIA - CORSI|0|NaN
+#LayersUrlPart:     LAYERS=idareabagnata|IDROGRAFIA - AREA BAGNATA|0|NaN
+#LayersUrlPart:     LAYERS=idinfrferrovia|LINEE FERR.|0|NaN
+#LayersUrlPart:     LAYERS=idstradeestesa|STRADE|0|NaN
+#LayersUrlPart:     LAYERS=_idstradegallerie|STRADE GALLERIE|0|NaN
+#LayersUrlPart:     LAYERS=idedifici10k|EDIFICATO 1:10.000|0|NaN
+#LayersUrlPart:     LAYERS=idedifici2k|EDIFICATO 1:2.000|0|NaN
+#LayersUrlPart:     LAYERS=idterritmontani|TERRITORI MONTANI||
+#LayersUrlPart:     LAYERS=idambturist|AMBITI TURISTICI||
+#LayersUrlPart:     LAYERS=idambterrcaccia|AMBITI TERRITORIALI CACCIA||
+#LayersUrlPart:     LAYERS=idasl|ASL||
+#LayersUrlPart:     LAYERS=idzss|ZONE SOCIO SANITARIE||
+#LayersUrlPart:     LAYERS=idatorif|ATO RIFIUTI||
+#LayersUrlPart:     LAYERS=idatorisidr|ATO RISORSE IDRICHE||
+#LayersUrlPart:     LAYERS=iddisind95|DISTRETTI INDUSTRIALI 95||
+#LayersUrlPart:     LAYERS=iddisind99|DISTRETTI INDUSTRIALI 99||
+#LayersUrlPart:     LAYERS=iddisscol|DISTRETTI SCOLASTICI||
+#LayersUrlPart:     LAYERS=idsisecoloc|SISTEMI ECONOMICI LOCALI||
+#LayersUrlPart:     LAYERS=idsisproloc|SISTEMI PRODUTTIVI LOCALI||
+#LayersUrlPart:     LAYERS=idsisterloc|SISTEMI TERRITORIALI LOCALI||
+#LayersUrlPart:     LAYERS=idcommont|COMUNITA MONTANE (LR.82/2000)||
+#LayersUrlPart:     LAYERS=idcommont2008|COMUNITA MONTANE (LR.37/2008)||
+#LayersUrlPart:     LAYERS=idareametrop|AREE METROPOLITANE||
+#LayersUrlPart:     LAYERS=idcircondari|CIRCONDARI||
+#LayersUrlPart:     LAYERS=idcentroamm|SEDI AMMINISTRATIVE||
+#LayersUrlPart:     LAYERS=idptcst|PTC SISTEMI TERRITORIALI||
+#LayersUrlPart:     LAYERS=idptcsst|PTC SOTTOSISTEMI TERRITORIALI||
+#LayersUrlPart:     LAYERS=idptcstl|PTC SISTEMI TERRITORIALI LOCALI||
+#LayersUrlPart:     LAYERS=idptcsf_a|PTC SISTEMI FUNZIONALI (A)||
+#LayersUrlPart:     LAYERS=idptcsf_l|PTC SISTEMI FUNZIONALI (L)||
+#LayersUrlPart:     LAYERS=idptcsf_p|PTC SISTEMI FUNZIONALI (P)||
+#LayersUrlPart:     LAYERS=idptcssf_l|PTC SOTTOSISTEMI FUNZIONALI (L)||
+#LayersUrlPart:     LAYERS=idptcinvstrutt_a|PTC INVARIANTI STRUTTURALI (A)||
+#LayersUrlPart:     LAYERS=idptcinvstrutt_l|PTC INVARIANTI STRUTTURALI (L)||
+#LayersUrlPart:     LAYERS=idptcinvstrutt_p|PTC INVARIANTI STRUTTURALI (P)||
+#LayersUrlPart:     LAYERS=idptcintgeomorf|PTC INTEGRITA` GEOMORFOLOGICA||
+#LayersUrlPart:     LAYERS=idptcintidraulic|PTC INTEGRITA` IDRAULICA||
+#LayersUrlPart:     LAYERS=idptcintacquif|PTC INTEGRITA` ACQUIFERI||
+#LayersUrlPart:     LAYERS=idptcrisinsed|PTC RISORSE INSEDIAMENTI||
+#LayersUrlPart:     LAYERS=idptcrismobil_l|PTC RISORSE MOBILITA (L)||
+#LayersUrlPart:     LAYERS=idptcrisrur_epf_a|PTC RISORSE RURALI-INSEDIAMENTI E AREE AGRICOLE (A)||
+#LayersUrlPart:     LAYERS=idptcrisrur_cea_a|PTC RISORSE RURALI-CARATT.ECONOMICO-AGRARIA (A)||
+#LayersUrlPart:     LAYERS=idptcrisrur_raa_a|PTC RISORSE RURALI-RISORSE AGRO-AMBIENTALI (A)||
+#LayersUrlPart:     LAYERS=idptcrisrur_dtr_a|PTC RISORSE RURALI-DEGRADO DEL TERRITORIO (A)||
+#LayersUrlPart:     LAYERS=idptcrisrur_epf_p|PTC RISORSE RURALI-INSEDIAMENTI E AREE AGRICOLE (P)||
+#LayersUrlPart:     LAYERS=idptcrisrur_raa_p|PTC RISORSE RURALI-RISORSE AGRO-AMBIENTALI (P)||
+#LayersUrlPart:     LAYERS=idst|PS SISTEMI TERRITORIALI||
+#LayersUrlPart:     LAYERS=idsst|PS SOTTOSISTEMI TERRITORIALI||
+#LayersUrlPart:     LAYERS=idasst|PS AMBITI DI SOTTOSISTEMA TERRITORIALE||
+#LayersUrlPart:     LAYERS=idsf_a|PS SISTEMI FUNZIONALI (A)||
+#LayersUrlPart:     LAYERS=idsf_l|PS SISTEMI FUNZIONALI (L)||
+#LayersUrlPart:     LAYERS=idsf_p|PS SISTEMI FUNZIONALI (P)||
+#LayersUrlPart:     LAYERS=idssf_a|PS SOTTOSISTEMI FUNZIONALI (A)||
+#LayersUrlPart:     LAYERS=idssf_l|PS SOTTOSISTEMI FUNZIONALI (L)||
+#LayersUrlPart:     LAYERS=idssf_p|PS SOTTOSISTEMI FUNZIONALI (P)||
+#LayersUrlPart:     LAYERS=idutoe|PS UTOE||
+#LayersUrlPart:     LAYERS=idinvstrutt_a|PS INVARIANTI STRUTTURALI (A)||
+#LayersUrlPart:     LAYERS=idinvstrutt_l|PS INVARIANTI STRUTTURALI (L)||
+#LayersUrlPart:     LAYERS=idinvstrutt_p|PS INVARIANTI STRUTTURALI (P)||
+#LayersUrlPart:     LAYERS=idpericgeomorf|PS PERICOLOSITA GEOMORFOLOGICA||
+#LayersUrlPart:     LAYERS=idpericidraulic|PS PERICOLOSITA IDRAULICA||
+#LayersUrlPart:     LAYERS=idregurb_asa_a|RU - AMBITI A.S.A (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_asa_p|RU - AMBITI A.S.A (P)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_desuso_a|RU - DEST.USO PREV. (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_pa_a|RU - AMBITI PIANI ATTUATIVI (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ca_a|RU - CENTRI ABITATI (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_ferr_a|RU - FERROVIA (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_strloc_a|RU - STRADA LOCALE (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_strurb_a|RU - STRADA URBANA (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_extraurb_a|RU - STRADA EXTRAURBANA (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_autostr_a|RU - AUTOSTRADA (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_pcp_l|RU - PISTA CICLAB. E PEDON. (L)|0|NaN
+#LayersUrlPart:     LAYERS=idpccazon|ZONIZZAZIONE ACUSTICA||
+#LayersUrlPart:     LAYERS=idpccaspt|AREE SPETTACOLO TEMPORANEO||
+#LayersUrlPart:     LAYERS=idquptc|QUADRO DI UNIONE - PTC||
+#LayersUrlPart:     LAYERS=idqups|QUADRO DI UNIONE - PS||
+#LayersUrlPart:     LAYERS=idquru|QUADRO DI UNIONE - RU||
+#LayersUrlPart:     LAYERS=idqupcca|QUADRO DI UNIONE - PCCA||
+#LayersUrlPart:     LAYERS=idzrcimiter|Z.R. CIMITERIALE (DPR 285/90)||
+#LayersUrlPart:     LAYERS=idzrstradal|Z.R. STRADALE (DPR 495/92)||
+#LayersUrlPart:     LAYERS=idzraeroport|Z.R. AEROPORTUALE (DM 31/10/97)||
+#LayersUrlPart:     LAYERS=idzpv0000000001|PROD. VINI - VINO NOBILE DI MONTEPULCIANO||
+#LayersUrlPart:     LAYERS=idzpv0000000002|PROD. VINI - ROSSO DI MONTEPULCIANO||
+#LayersUrlPart:     LAYERS=idzpv0000000003|PROD. VINI - VIN SANTO DI MONTEPULCIANO||
+#LayersUrlPart:     LAYERS=idzpv0000000004|PROD. VINI - BRUNELLO DI MONTALCINO||
+#LayersUrlPart:     LAYERS=idzpv0000000005|PROD. VINI - MOSCADELLO DI MONTALCINO||
+#LayersUrlPart:     LAYERS=idzpv0000000006|PROD. VINI - ROSSO DI MONTALCINO||
+#LayersUrlPart:     LAYERS=idzpv0000000007|PROD. VINI - SANT`ANTIMO||
+#LayersUrlPart:     LAYERS=idzpv0000000008|PROD. VINI - VALDICHIANA||
+#LayersUrlPart:     LAYERS=idzpv0000000009|PROD. VINI - VAL D`ARBIA||
+#LayersUrlPart:     LAYERS=idzpv0000000011|PROD. VINI - VIN SANTO DEL CHIANTI CLASSICO||
+#LayersUrlPart:     LAYERS=idzpv0000000012|PROD. VINI - TERRE DI CASOLE||
+#LayersUrlPart:     LAYERS=idzpv0000000013|PROD. VINI - VERNACCIA DI SAN GIMIGNANO||
+#LayersUrlPart:     LAYERS=idzpv0000000014|PROD. VINI - SAN GIMIGNANO||
+#LayersUrlPart:     LAYERS=idzpv0000000015|PROD. VINI - BARCO REALE DI CARMIGNANO||
+#LayersUrlPart:     LAYERS=idzpv0000000016|PROD. VINI - CARMIGNANO||
+#LayersUrlPart:     LAYERS=idzpv0000000017|PROD. VINI - BIANCO PISANO DI SAN TORPE`||
+#LayersUrlPart:     LAYERS=idzpv0000000019|PROD. VINI - MONTESCUDAIO||
+#LayersUrlPart:     LAYERS=idzpv0000000020|PROD. VINI - CANDIA DEI COLLI APUANI||
+#LayersUrlPart:     LAYERS=idzpv0000000021|PROD. VINI - COLLI DI LUNI||
+#LayersUrlPart:     LAYERS=idzpv0000000022|PROD. VINI - COLLINE LUCCHESI||
+#LayersUrlPart:     LAYERS=idzpv0000000023|PROD. VINI - MONTECARLO||
+#LayersUrlPart:     LAYERS=idzpv0000000024|PROD. VINI - TERRATICO DI BIBBONA||
+#LayersUrlPart:     LAYERS=idzpv0000000025|PROD. VINI - BOLGHERI||
+#LayersUrlPart:     LAYERS=idzpv0000000027|PROD. VINI - ELBA||
+#LayersUrlPart:     LAYERS=idzpv0000000028|PROD. VINI - POMINO||
+#LayersUrlPart:     LAYERS=idzpv0000000029|PROD. VINI - ALTA VALLE DELLA GREVE||
+#LayersUrlPart:     LAYERS=idzpv0000000030|PROD. VINI - BIANCO DELL`EMPOLESE||
+#LayersUrlPart:     LAYERS=idzpv0000000031|PROD. VINI - CORTONA||
+#LayersUrlPart:     LAYERS=idzpv0000000037|PROD. VINI - PIETRAVIVA||
+#LayersUrlPart:     LAYERS=idzpv0000000045|PROD. VINI - ANSONICA COSTA DELL`ARGENTARIO||
+#LayersUrlPart:     LAYERS=idzpv0000000040|PROD. VINI - CAPALBIO||
+#LayersUrlPart:     LAYERS=idzpv0000000038|PROD. VINI - MONTEREGIO DI MASSA MARITTIMA||
+#LayersUrlPart:     LAYERS=idzpv0000000039|PROD. VINI - MORELLINO DI SCANSANO||
+#LayersUrlPart:     LAYERS=idzpv0000000041|PROD. VINI - PARRINA||
+#LayersUrlPart:     LAYERS=idzpv0000000042|PROD. VINI - SOVANA||
+#LayersUrlPart:     LAYERS=idzpv0000000043|PROD. VINI - BIANCO DI PITIGLIANO||
+#LayersUrlPart:     LAYERS=idzpv0000000010|PROD. VINI - ORCIA||
+#LayersUrlPart:     LAYERS=idzpv0000000018|PROD. VINI - MONTECASTELLI||
+#LayersUrlPart:     LAYERS=idzpv0000000026|PROD. VINI - VAL DI CORNIA||
+#LayersUrlPart:     LAYERS=idzpv0000000033|PROD. VINI - COLLI DELLA TOSCANA CENTRALE||
+#LayersUrlPart:     LAYERS=idzpv0000000035|PROD. VINI - COLLI DELL`ETRURIA CENTRALE||
+#LayersUrlPart:     LAYERS=idzpv0000000036|PROD. VINI - VIN SANTO DEL CHIANTI||
+#LayersUrlPart:     LAYERS=idzpv0000000044|PROD. VINI - MAREMMA TOSCANA||
+#LayersUrlPart:     LAYERS=idzpv0000000046|PROD. VINI - MONTECUCCO||
+#LayersUrlPart:     LAYERS=idzpv0000000034|PROD. VINI - CHIANTI||
+#LayersUrlPart:     LAYERS=idzpv0000000047|PROD. VINI - BIANCO DELLA VAL DI NIEVOLE||
+#LayersUrlPart:     LAYERS=idzpv0000000032|PROD. VINI - TOSCANO O TOSCANA||
+#LayersUrlPart:     LAYERS=idzpv0000000048|PROD. VINI - VAL DI MAGRA||
+#LayersUrlPart:     LAYERS=idszpv0000000001|SOTTOZONA PROD. VINI - CHIANTI COLLI SENESI||
+#LayersUrlPart:     LAYERS=idszpv0000000002|SOTTOZONA PROD. VINI - CHIANTI CLASSICO||
+#LayersUrlPart:     LAYERS=idszpv0000000003|SOTTOZONA PROD. VINI - CHIANTI COLLINE PISANE||
+#LayersUrlPart:     LAYERS=idszpv0000000004|SOTTOZONA PROD. VINI - BOLGHERI: BOLGHERI SASSICAIA||
+#LayersUrlPart:     LAYERS=idszpv0000000005|SOTTOZONA PROD. VINI - VAL DI CORNIA: VAL DI CORNIA SUVERETO||
+#LayersUrlPart:     LAYERS=idszpv0000000006|SOTTOZONA PROD. VINI - CHIANTI RUFINA||
+#LayersUrlPart:     LAYERS=idszpv0000000007|SOTTOZONA PROD. VINI - CHIANTI COLLI FIORENTINI||
+#LayersUrlPart:     LAYERS=idszpv0000000008|SOTTOZONA PROD. VINI - CHIANTI MONTESPERTOLI||
+#LayersUrlPart:     LAYERS=idszpv0000000009|SOTTOZONA PROD. VINI - CHIANTI COLLI ARETINI||
+#LayersUrlPart:     LAYERS=idszpv0000000010|SOTTOZONA PROD. VINI - CHIANTI MONTALBANO||
+#LayersUrlPart:     LAYERS=idcentriabit|CENTRI ABITATI||
+#LayersUrlPart:     LAYERS=idsezcens_2001_cab|ISTAT 2001 - CENTRI ABITATI|0|NaN
+#LayersUrlPart:     LAYERS=idsezcens_2001_nab|ISTAT 2001 - NUCLEI ABITATI|0|NaN
+#LayersUrlPart:     LAYERS=idsezcens_2001_lpr|ISTAT 2001 - LOC. PROD.|0|NaN
+#LayersUrlPart:     LAYERS=idsezcens_2001_csp|ISTAT 2001 - CASE SPARSE|0|NaN
+#LayersUrlPart:     LAYERS=idpartoscoem|PARCO APPENNINO TOSCO-EMILIANO|0|NaN
+#LayersUrlPart:     LAYERS=idparforcas|PARCO DELLE FORESTE CASENTINESI|0|NaN
+#LayersUrlPart:     LAYERS=idpararctos|PARCO ARCIPELAGO TOSCANO|0|NaN
+#LayersUrlPart:     LAYERS=idparreg|PARCO REGIONALE|0|NaN
+#LayersUrlPart:     LAYERS=idparprov|PARCO PROVINCIALE|0|NaN
+#LayersUrlPart:     LAYERS=idrisnatprov|RISERVA NATURALE PROVINCIALE|0|NaN
+#LayersUrlPart:     LAYERS=idrisnatstat|RISERVA NATURALE STATALE|0|NaN
+#LayersUrlPart:     LAYERS=idanpil|AREA NATURALE PROTETTA DI INTERESSE LOCALE|0|NaN
+#LayersUrlPart:     LAYERS=idsir|SITI DI IMPORTANZA REGIONALE||
+#LayersUrlPart:     LAYERS=idramsar|ZONE UMIDE (RAMSAR)||
+#LayersUrlPart:     LAYERS=idmonum_a|VINC MONUMENTALE (A)||
+#LayersUrlPart:     LAYERS=idarch_a|VINC ARCHEOLOGICO (A)||
+#LayersUrlPart:     LAYERS=ididrogeol|VINC IDROGEOLOGICO||
+#LayersUrlPart:     LAYERS=idpae1_a|D.Lgls42/04,art.134 (A)||
+#LayersUrlPart:     LAYERS=idpae2m|D.Lgls42/04,art.142 - lett.m ZONE ARCHEOL.||
+#LayersUrlPart:     LAYERS=idpae2i|D.Lgls42/04,art.142 - lett.i ZONE UMIDE||
+#LayersUrlPart:     LAYERS=idpae2h|D.Lgls42/04,art.142 - lett.h USI CIVICI||
+#LayersUrlPart:     LAYERS=idpae2g|D.Lgls42/04,art.142 - lett.g BOSCHI||
+#LayersUrlPart:     LAYERS=idpae2f|D.Lgls42/04,art.142 - lett.f AREE PROTETTE||
+#LayersUrlPart:     LAYERS=idpae2e|D.Lgls42/04,art.142 - lett.e CIRCHI GLACIALI||
+#LayersUrlPart:     LAYERS=idpae2d|D.Lgls42/04,art.142 - lett.d MONTAGNE||
+#LayersUrlPart:     LAYERS=idpae2c|D.Lgls42/04,art.142 - lett.c FIUMI||
+#LayersUrlPart:     LAYERS=idpae2b|D.Lgls42/04,art.142 - lett.b LAGHI||
+#LayersUrlPart:     LAYERS=idpae2a|D.Lgls42/04,art.142 - lett.a COSTE||
+#LayersUrlPart:     LAYERS=idift8593|IFT 400m 1985-1993|0|NaN
+#LayersUrlPart:     LAYERS=idarprod|AREE PRODUTTIVE||
+#LayersUrlPart:     LAYERS=idsentcai|SENTIERI CAI - 2005||
+#LayersUrlPart:     LAYERS=idrifcai|RIFUGI CAI - 2005||
+#LayersUrlPart:     LAYERS=idgrotte|GROTTE||
+#LayersUrlPart:     LAYERS=_idreg|REGIONE||
+#LayersUrlPart:     LAYERS=idprov|PROVINCE||
+#LayersUrlPart:     LAYERS=idcomuni|COMUNI||
+#LayersUrlPart:     LAYERS=idcomuniline|COMUNI LINEARI||
+#LayersUrlPart:     LAYERS=idtoponctr10k|TOPONOMASTICA|0|NaN
+#LayersUrlPart:     LAYERS=_idlocabit|LOCALITA ABITATE||
+#LayersUrlPart:     LAYERS=copyright|theCopyright||
+LayersUrlPart:   LAYERS=otf10k0306,idisoipse,idtoponctr10k,idedifici10k,idareabagnata,idcorsi,idinfrferrovia,_idreg,idstradeestesa
+#H?henlinien,Namen,Geb?ude,Wasser,?Wasserwege,Eisenbahn,Regionen,Strassen+Wege mit Namen,
+#vorher : idisoipse,idtoponctr10k,_idbati,idedifici10k,idedifici2k,idareabagnata,idcorsi,idinfrferrovia,_idreg,idstradeestesa,_idstradegallerie
+StylesUrlPart:   STYLES=Default,Default,Default,Default,Default,Default,Default,Default
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 44.500805 E 9.642548
+BoundingBoxButtomRightWGS84:   N 42.168745 E 12.462359
+MinScale:   0
+MaxScale:   70 
+# maxscale 14.14214
+#H?henlinien nur bei Scale unter 4.0
+RecommendedScale:   1
+ImageFileExtension: .png
\ No newline at end of file

Added: trunk/res_noewe/webmapservices/it-52_t10bw.wms
===================================================================
--- trunk/res_noewe/webmapservices/it-52_t10bw.wms	2009-05-17 11:28:07 UTC (rev 1815)
+++ trunk/res_noewe/webmapservices/it-52_t10bw.wms	2009-05-17 12:34:33 UTC (rev 1816)
@@ -0,0 +1,291 @@
+TakenFromUrl:   http://www.rete.toscana.it/sett/territorio/carto/repertorio/geoscopio_wms/
+GetCapabilitiesUrl:      http://web.rete.toscana.it/sgrwms/com.rt.wms.RTmap?ServiceName=_rt_wms_cartografia&service=WMS&request=GetCapabilities
+Name:   it.Toskana topo 10 black/white
+#MainUrl:   http://web.rete.toscana.it:80/sgrwms/com.rt.wms.RTmap/_rt_wms_cartografia?
+MainUrl:   http://web.rete.toscana.it/sgrwms/com.rt.wms.RTmap?
+MapType: topo
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.0
+CoordinateReferenceSystemCacheWolf:   3003
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:3003
+RequestUrlPart:   REQUEST=GetMap
+#LayersUrlPart:     LAYERS=_idita|ITALIA||
+#LayersUrlPart:     LAYERS=_idbati|BATIMETRICHE||
+#LayersUrlPart:     LAYERS=otf10k78|OFC 1:10.000 - 1978||
+#LayersUrlPart:     LAYERS=otf10k93|OFC 1:10.000 - 1993||
+#LayersUrlPart:     LAYERS=otf10k96|OFC 1:10.000 - 1996||
+#LayersUrlPart:     LAYERS=otf10k99|OFC 1:10.000 - 1999||
+#LayersUrlPart:     LAYERS=otf10k00|OFC 1:10.000 - 2000||
+#LayersUrlPart:     LAYERS=otf10k01|OFC 1:10.000 - 2001||
+#LayersUrlPart:     LAYERS=otf10k02|OFC 1:10.000 - 2002||
+#LayersUrlPart:     LAYERS=otf10k03|OFC 1:10.000 - 2003||
+#LayersUrlPart:     LAYERS=otf10k04|OFC 1:10.000 - 2004||
+#LayersUrlPart:     LAYERS=otf10k05|OFC 1:10.000 - 2005||
+#LayersUrlPart:     LAYERS=otf10k06|OFC 1:10.000 - 2006||
+#LayersUrlPart:     LAYERS=otf10k0306|OFC 1:10.000 - 03-06||
+#LayersUrlPart:     LAYERS=_idhills|HILLSHADE DA DTM CTR10k||
+#LayersUrlPart:     LAYERS=idhildtmlid05|HILLSHADE DA DTM RILIEVO LIDAR 2005||
+#LayersUrlPart:     LAYERS=idhildtmlid06|HILLSHADE DA DTM RILIEVO LIDAR 2006||
+#LayersUrlPart:     LAYERS=idhildtmlid07|HILLSHADE DA DTM RILIEVO LIDAR 2007||
+#LayersUrlPart:     LAYERS=idhildsmlid05|HILLSHADE DA DSM RILIEVO LIDAR 2005||
+#LayersUrlPart:     LAYERS=idhildsmlid06|HILLSHADE DA DSM RILIEVO LIDAR 2006||
+#LayersUrlPart:     LAYERS=idhildsmlid07|HILLSHADE DA DSM RILIEVO LIDAR 2007||
+#LayersUrlPart:     LAYERS=rst100k|MAPPA 1:100.000||
+#LayersUrlPart:     LAYERS=rst25k_igm|MAPPA 1:25.000||
+#LayersUrlPart:     LAYERS=idrst10k|CARTA TECNICA REGIONALE 10.000||
+#LayersUrlPart:     LAYERS=rstcatast|Mappa Catastale 1:5.000||
+#LayersUrlPart:     LAYERS=rst2k_liv2|C.T.R. 1:2.000 Liv2||
+#LayersUrlPart:     LAYERS=rst2k_liv3|C.T.R. 1:2.000 Liv3||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1987|C.T.R. 1:2.000 Liv3 - 1987||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1988|C.T.R. 1:2.000 Liv3 - 1988||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1989|C.T.R. 1:2.000 Liv3 - 1989||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1991|C.T.R. 1:2.000 Liv3 - 1991||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1992|C.T.R. 1:2.000 Liv3 - 1992||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1993|C.T.R. 1:2.000 Liv3 - 1993||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1994|C.T.R. 1:2.000 Liv3 - 1994||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1995|C.T.R. 1:2.000 Liv3 - 1995||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1996|C.T.R. 1:2.000 Liv3 - 1996||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1997|C.T.R. 1:2.000 Liv3 - 1997||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1998|C.T.R. 1:2.000 Liv3 - 1998||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1999|C.T.R. 1:2.000 Liv3 - 1999||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2000|C.T.R. 1:2.000 Liv3 - 2000||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2001|C.T.R. 1:2.000 Liv3 - 2001||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2002|C.T.R. 1:2.000 Liv3 - 2002||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2003|C.T.R. 1:2.000 Liv3 - 2003||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2004|C.T.R. 1:2.000 Liv3 - 2004||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2005|C.T.R. 1:2.000 Liv3 - 2005||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2006|C.T.R. 1:2.000 Liv3 - 2006||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2007|C.T.R. 1:2.000 Liv3 - 2007||
+#LayersUrlPart:     LAYERS=idbfmc|FOGLI CATASTALI|0|NaN
+#LayersUrlPart:     LAYERS=idquotf10k78|QUADRO DI UNIONE - OFC 1:10.000 (78)||
+#LayersUrlPart:     LAYERS=idquotf10k93|QUADRO DI UNIONE - OFC 1:10.000 (93)||
+#LayersUrlPart:     LAYERS=idquotf10k96|QUADRO DI UNIONE - OFC 1:10.000 (96)||
+#LayersUrlPart:     LAYERS=idquotf10k99|QUADRO DI UNIONE - OFC 1:10.000 (99)||
+#LayersUrlPart:     LAYERS=idquotf10k00|QUADRO DI UNIONE - OFC 1:10.000 (00)||
+#LayersUrlPart:     LAYERS=idquotf10k01|QUADRO DI UNIONE - OFC 1:10.000 (01)||
+#LayersUrlPart:     LAYERS=idquotf10k02|QUADRO DI UNIONE - OFC 1:10.000 (02)||
+#LayersUrlPart:     LAYERS=idquotf10k03|QUADRO DI UNIONE - OFC 1:10.000 (03)||
+#LayersUrlPart:     LAYERS=idquotf10k04|QUADRO DI UNIONE - OFC 1:10.000 (04)||
+#LayersUrlPart:     LAYERS=idquotf10k05|QUADRO DI UNIONE - OFC 1:10.000 (05)||
+#LayersUrlPart:     LAYERS=idquotf10k06|QUADRO DI UNIONE - OFC 1:10.000 (06)||
+#LayersUrlPart:     LAYERS=idquctr10k|QUADRO DI UNIONE - CTR 1:10.000||
+#LayersUrlPart:     LAYERS=idqumc5k|QUADRO DI UNIONE - MC 1:5.000||
+#LayersUrlPart:     LAYERS=idquctr2kliv2|QUADRO DI UNIONE - CTR 1:2.000 Liv.2||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1987|QU - CTR 1:2.000 Liv.3 - 1987||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1988|QU - CTR 1:2.000 Liv.3 - 1988||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1989|QU - CTR 1:2.000 Liv.3 - 1989||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1991|QU - CTR 1:2.000 Liv.3 - 1991||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1992|QU - CTR 1:2.000 Liv.3 - 1992||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1993|QU - CTR 1:2.000 Liv.3 - 1993||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1994|QU - CTR 1:2.000 Liv.3 - 1994||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1995|QU - CTR 1:2.000 Liv.3 - 1995||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1996|QU - CTR 1:2.000 Liv.3 - 1996||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1997|QU - CTR 1:2.000 Liv.3 - 1997||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1998|QU - CTR 1:2.000 Liv.3 - 1998||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1999|QU - CTR 1:2.000 Liv.3 - 1999||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2000|QU - CTR 1:2.000 Liv.3 - 2000||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2001|QU - CTR 1:2.000 Liv.3 - 2001||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2002|QU - CTR 1:2.000 Liv.3 - 2002||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2003|QU - CTR 1:2.000 Liv.3 - 2003||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2004|QU - CTR 1:2.000 Liv.3 - 2004||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2005|QU - CTR 1:2.000 Liv.3 - 2005||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2006|QU - CTR 1:2.000 Liv.3 - 2006||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2007|QU - CTR 1:2.000 Liv.3 - 2007||
+#LayersUrlPart:     LAYERS=idqudtmctr10k|QUADRO DI UNIONE - DTM da CTR10K||
+#LayersUrlPart:     LAYERS=idqulidar05|QUADRO DI UNIONE - LIDAR 2005||
+#LayersUrlPart:     LAYERS=idqulidar06|QUADRO DI UNIONE - LIDAR 2006||
+#LayersUrlPart:     LAYERS=idqulidar07|QUADRO DI UNIONE - LIDAR 2007||
+#LayersUrlPart:     LAYERS=idisoipse|CURVE DI LIVELLO|0|NaN
+#LayersUrlPart:     LAYERS=idpuntiquot|PUNTI QUOTATI|0|NaN
+#LayersUrlPart:     LAYERS=idcorsi|IDROGRAFIA - CORSI|0|NaN
+#LayersUrlPart:     LAYERS=idareabagnata|IDROGRAFIA - AREA BAGNATA|0|NaN
+#LayersUrlPart:     LAYERS=idinfrferrovia|LINEE FERR.|0|NaN
+#LayersUrlPart:     LAYERS=idstradeestesa|STRADE|0|NaN
+#LayersUrlPart:     LAYERS=_idstradegallerie|STRADE GALLERIE|0|NaN
+#LayersUrlPart:     LAYERS=idedifici10k|EDIFICATO 1:10.000|0|NaN
+#LayersUrlPart:     LAYERS=idedifici2k|EDIFICATO 1:2.000|0|NaN
+#LayersUrlPart:     LAYERS=idterritmontani|TERRITORI MONTANI||
+#LayersUrlPart:     LAYERS=idambturist|AMBITI TURISTICI||
+#LayersUrlPart:     LAYERS=idambterrcaccia|AMBITI TERRITORIALI CACCIA||
+#LayersUrlPart:     LAYERS=idasl|ASL||
+#LayersUrlPart:     LAYERS=idzss|ZONE SOCIO SANITARIE||
+#LayersUrlPart:     LAYERS=idatorif|ATO RIFIUTI||
+#LayersUrlPart:     LAYERS=idatorisidr|ATO RISORSE IDRICHE||
+#LayersUrlPart:     LAYERS=iddisind95|DISTRETTI INDUSTRIALI 95||
+#LayersUrlPart:     LAYERS=iddisind99|DISTRETTI INDUSTRIALI 99||
+#LayersUrlPart:     LAYERS=iddisscol|DISTRETTI SCOLASTICI||
+#LayersUrlPart:     LAYERS=idsisecoloc|SISTEMI ECONOMICI LOCALI||
+#LayersUrlPart:     LAYERS=idsisproloc|SISTEMI PRODUTTIVI LOCALI||
+#LayersUrlPart:     LAYERS=idsisterloc|SISTEMI TERRITORIALI LOCALI||
+#LayersUrlPart:     LAYERS=idcommont|COMUNITA MONTANE (LR.82/2000)||
+#LayersUrlPart:     LAYERS=idcommont2008|COMUNITA MONTANE (LR.37/2008)||
+#LayersUrlPart:     LAYERS=idareametrop|AREE METROPOLITANE||
+#LayersUrlPart:     LAYERS=idcircondari|CIRCONDARI||
+#LayersUrlPart:     LAYERS=idcentroamm|SEDI AMMINISTRATIVE||
+#LayersUrlPart:     LAYERS=idptcst|PTC SISTEMI TERRITORIALI||
+#LayersUrlPart:     LAYERS=idptcsst|PTC SOTTOSISTEMI TERRITORIALI||
+#LayersUrlPart:     LAYERS=idptcstl|PTC SISTEMI TERRITORIALI LOCALI||
+#LayersUrlPart:     LAYERS=idptcsf_a|PTC SISTEMI FUNZIONALI (A)||
+#LayersUrlPart:     LAYERS=idptcsf_l|PTC SISTEMI FUNZIONALI (L)||
+#LayersUrlPart:     LAYERS=idptcsf_p|PTC SISTEMI FUNZIONALI (P)||
+#LayersUrlPart:     LAYERS=idptcssf_l|PTC SOTTOSISTEMI FUNZIONALI (L)||
+#LayersUrlPart:     LAYERS=idptcinvstrutt_a|PTC INVARIANTI STRUTTURALI (A)||
+#LayersUrlPart:     LAYERS=idptcinvstrutt_l|PTC INVARIANTI STRUTTURALI (L)||
+#LayersUrlPart:     LAYERS=idptcinvstrutt_p|PTC INVARIANTI STRUTTURALI (P)||
+#LayersUrlPart:     LAYERS=idptcintgeomorf|PTC INTEGRITA` GEOMORFOLOGICA||
+#LayersUrlPart:     LAYERS=idptcintidraulic|PTC INTEGRITA` IDRAULICA||
+#LayersUrlPart:     LAYERS=idptcintacquif|PTC INTEGRITA` ACQUIFERI||
+#LayersUrlPart:     LAYERS=idptcrisinsed|PTC RISORSE INSEDIAMENTI||
+#LayersUrlPart:     LAYERS=idptcrismobil_l|PTC RISORSE MOBILITA (L)||
+#LayersUrlPart:     LAYERS=idptcrisrur_epf_a|PTC RISORSE RURALI-INSEDIAMENTI E AREE AGRICOLE (A)||
+#LayersUrlPart:     LAYERS=idptcrisrur_cea_a|PTC RISORSE RURALI-CARATT.ECONOMICO-AGRARIA (A)||
+#LayersUrlPart:     LAYERS=idptcrisrur_raa_a|PTC RISORSE RURALI-RISORSE AGRO-AMBIENTALI (A)||
+#LayersUrlPart:     LAYERS=idptcrisrur_dtr_a|PTC RISORSE RURALI-DEGRADO DEL TERRITORIO (A)||
+#LayersUrlPart:     LAYERS=idptcrisrur_epf_p|PTC RISORSE RURALI-INSEDIAMENTI E AREE AGRICOLE (P)||
+#LayersUrlPart:     LAYERS=idptcrisrur_raa_p|PTC RISORSE RURALI-RISORSE AGRO-AMBIENTALI (P)||
+#LayersUrlPart:     LAYERS=idst|PS SISTEMI TERRITORIALI||
+#LayersUrlPart:     LAYERS=idsst|PS SOTTOSISTEMI TERRITORIALI||
+#LayersUrlPart:     LAYERS=idasst|PS AMBITI DI SOTTOSISTEMA TERRITORIALE||
+#LayersUrlPart:     LAYERS=idsf_a|PS SISTEMI FUNZIONALI (A)||
+#LayersUrlPart:     LAYERS=idsf_l|PS SISTEMI FUNZIONALI (L)||
+#LayersUrlPart:     LAYERS=idsf_p|PS SISTEMI FUNZIONALI (P)||
+#LayersUrlPart:     LAYERS=idssf_a|PS SOTTOSISTEMI FUNZIONALI (A)||
+#LayersUrlPart:     LAYERS=idssf_l|PS SOTTOSISTEMI FUNZIONALI (L)||
+#LayersUrlPart:     LAYERS=idssf_p|PS SOTTOSISTEMI FUNZIONALI (P)||
+#LayersUrlPart:     LAYERS=idutoe|PS UTOE||
+#LayersUrlPart:     LAYERS=idinvstrutt_a|PS INVARIANTI STRUTTURALI (A)||
+#LayersUrlPart:     LAYERS=idinvstrutt_l|PS INVARIANTI STRUTTURALI (L)||
+#LayersUrlPart:     LAYERS=idinvstrutt_p|PS INVARIANTI STRUTTURALI (P)||
+#LayersUrlPart:     LAYERS=idpericgeomorf|PS PERICOLOSITA GEOMORFOLOGICA||
+#LayersUrlPart:     LAYERS=idpericidraulic|PS PERICOLOSITA IDRAULICA||
+#LayersUrlPart:     LAYERS=idregurb_asa_a|RU - AMBITI A.S.A (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_asa_p|RU - AMBITI A.S.A (P)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_desuso_a|RU - DEST.USO PREV. (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_pa_a|RU - AMBITI PIANI ATTUATIVI (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ca_a|RU - CENTRI ABITATI (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_ferr_a|RU - FERROVIA (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_strloc_a|RU - STRADA LOCALE (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_strurb_a|RU - STRADA URBANA (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_extraurb_a|RU - STRADA EXTRAURBANA (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_autostr_a|RU - AUTOSTRADA (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_pcp_l|RU - PISTA CICLAB. E PEDON. (L)|0|NaN
+#LayersUrlPart:     LAYERS=idpccazon|ZONIZZAZIONE ACUSTICA||
+#LayersUrlPart:     LAYERS=idpccaspt|AREE SPETTACOLO TEMPORANEO||
+#LayersUrlPart:     LAYERS=idquptc|QUADRO DI UNIONE - PTC||
+#LayersUrlPart:     LAYERS=idqups|QUADRO DI UNIONE - PS||
+#LayersUrlPart:     LAYERS=idquru|QUADRO DI UNIONE - RU||
+#LayersUrlPart:     LAYERS=idqupcca|QUADRO DI UNIONE - PCCA||
+#LayersUrlPart:     LAYERS=idzrcimiter|Z.R. CIMITERIALE (DPR 285/90)||
+#LayersUrlPart:     LAYERS=idzrstradal|Z.R. STRADALE (DPR 495/92)||
+#LayersUrlPart:     LAYERS=idzraeroport|Z.R. AEROPORTUALE (DM 31/10/97)||
+#LayersUrlPart:     LAYERS=idzpv0000000001|PROD. VINI - VINO NOBILE DI MONTEPULCIANO||
+#LayersUrlPart:     LAYERS=idzpv0000000002|PROD. VINI - ROSSO DI MONTEPULCIANO||
+#LayersUrlPart:     LAYERS=idzpv0000000003|PROD. VINI - VIN SANTO DI MONTEPULCIANO||
+#LayersUrlPart:     LAYERS=idzpv0000000004|PROD. VINI - BRUNELLO DI MONTALCINO||
+#LayersUrlPart:     LAYERS=idzpv0000000005|PROD. VINI - MOSCADELLO DI MONTALCINO||
+#LayersUrlPart:     LAYERS=idzpv0000000006|PROD. VINI - ROSSO DI MONTALCINO||
+#LayersUrlPart:     LAYERS=idzpv0000000007|PROD. VINI - SANT`ANTIMO||
+#LayersUrlPart:     LAYERS=idzpv0000000008|PROD. VINI - VALDICHIANA||
+#LayersUrlPart:     LAYERS=idzpv0000000009|PROD. VINI - VAL D`ARBIA||
+#LayersUrlPart:     LAYERS=idzpv0000000011|PROD. VINI - VIN SANTO DEL CHIANTI CLASSICO||
+#LayersUrlPart:     LAYERS=idzpv0000000012|PROD. VINI - TERRE DI CASOLE||
+#LayersUrlPart:     LAYERS=idzpv0000000013|PROD. VINI - VERNACCIA DI SAN GIMIGNANO||
+#LayersUrlPart:     LAYERS=idzpv0000000014|PROD. VINI - SAN GIMIGNANO||
+#LayersUrlPart:     LAYERS=idzpv0000000015|PROD. VINI - BARCO REALE DI CARMIGNANO||
+#LayersUrlPart:     LAYERS=idzpv0000000016|PROD. VINI - CARMIGNANO||
+#LayersUrlPart:     LAYERS=idzpv0000000017|PROD. VINI - BIANCO PISANO DI SAN TORPE`||
+#LayersUrlPart:     LAYERS=idzpv0000000019|PROD. VINI - MONTESCUDAIO||
+#LayersUrlPart:     LAYERS=idzpv0000000020|PROD. VINI - CANDIA DEI COLLI APUANI||
+#LayersUrlPart:     LAYERS=idzpv0000000021|PROD. VINI - COLLI DI LUNI||
+#LayersUrlPart:     LAYERS=idzpv0000000022|PROD. VINI - COLLINE LUCCHESI||
+#LayersUrlPart:     LAYERS=idzpv0000000023|PROD. VINI - MONTECARLO||
+#LayersUrlPart:     LAYERS=idzpv0000000024|PROD. VINI - TERRATICO DI BIBBONA||
+#LayersUrlPart:     LAYERS=idzpv0000000025|PROD. VINI - BOLGHERI||
+#LayersUrlPart:     LAYERS=idzpv0000000027|PROD. VINI - ELBA||
+#LayersUrlPart:     LAYERS=idzpv0000000028|PROD. VINI - POMINO||
+#LayersUrlPart:     LAYERS=idzpv0000000029|PROD. VINI - ALTA VALLE DELLA GREVE||
+#LayersUrlPart:     LAYERS=idzpv0000000030|PROD. VINI - BIANCO DELL`EMPOLESE||
+#LayersUrlPart:     LAYERS=idzpv0000000031|PROD. VINI - CORTONA||
+#LayersUrlPart:     LAYERS=idzpv0000000037|PROD. VINI - PIETRAVIVA||
+#LayersUrlPart:     LAYERS=idzpv0000000045|PROD. VINI - ANSONICA COSTA DELL`ARGENTARIO||
+#LayersUrlPart:     LAYERS=idzpv0000000040|PROD. VINI - CAPALBIO||
+#LayersUrlPart:     LAYERS=idzpv0000000038|PROD. VINI - MONTEREGIO DI MASSA MARITTIMA||
+#LayersUrlPart:     LAYERS=idzpv0000000039|PROD. VINI - MORELLINO DI SCANSANO||
+#LayersUrlPart:     LAYERS=idzpv0000000041|PROD. VINI - PARRINA||
+#LayersUrlPart:     LAYERS=idzpv0000000042|PROD. VINI - SOVANA||
+#LayersUrlPart:     LAYERS=idzpv0000000043|PROD. VINI - BIANCO DI PITIGLIANO||
+#LayersUrlPart:     LAYERS=idzpv0000000010|PROD. VINI - ORCIA||
+#LayersUrlPart:     LAYERS=idzpv0000000018|PROD. VINI - MONTECASTELLI||
+#LayersUrlPart:     LAYERS=idzpv0000000026|PROD. VINI - VAL DI CORNIA||
+#LayersUrlPart:     LAYERS=idzpv0000000033|PROD. VINI - COLLI DELLA TOSCANA CENTRALE||
+#LayersUrlPart:     LAYERS=idzpv0000000035|PROD. VINI - COLLI DELL`ETRURIA CENTRALE||
+#LayersUrlPart:     LAYERS=idzpv0000000036|PROD. VINI - VIN SANTO DEL CHIANTI||
+#LayersUrlPart:     LAYERS=idzpv0000000044|PROD. VINI - MAREMMA TOSCANA||
+#LayersUrlPart:     LAYERS=idzpv0000000046|PROD. VINI - MONTECUCCO||
+#LayersUrlPart:     LAYERS=idzpv0000000034|PROD. VINI - CHIANTI||
+#LayersUrlPart:     LAYERS=idzpv0000000047|PROD. VINI - BIANCO DELLA VAL DI NIEVOLE||
+#LayersUrlPart:     LAYERS=idzpv0000000032|PROD. VINI - TOSCANO O TOSCANA||
+#LayersUrlPart:     LAYERS=idzpv0000000048|PROD. VINI - VAL DI MAGRA||
+#LayersUrlPart:     LAYERS=idszpv0000000001|SOTTOZONA PROD. VINI - CHIANTI COLLI SENESI||
+#LayersUrlPart:     LAYERS=idszpv0000000002|SOTTOZONA PROD. VINI - CHIANTI CLASSICO||
+#LayersUrlPart:     LAYERS=idszpv0000000003|SOTTOZONA PROD. VINI - CHIANTI COLLINE PISANE||
+#LayersUrlPart:     LAYERS=idszpv0000000004|SOTTOZONA PROD. VINI - BOLGHERI: BOLGHERI SASSICAIA||
+#LayersUrlPart:     LAYERS=idszpv0000000005|SOTTOZONA PROD. VINI - VAL DI CORNIA: VAL DI CORNIA SUVERETO||
+#LayersUrlPart:     LAYERS=idszpv0000000006|SOTTOZONA PROD. VINI - CHIANTI RUFINA||
+#LayersUrlPart:     LAYERS=idszpv0000000007|SOTTOZONA PROD. VINI - CHIANTI COLLI FIORENTINI||
+#LayersUrlPart:     LAYERS=idszpv0000000008|SOTTOZONA PROD. VINI - CHIANTI MONTESPERTOLI||
+#LayersUrlPart:     LAYERS=idszpv0000000009|SOTTOZONA PROD. VINI - CHIANTI COLLI ARETINI||
+#LayersUrlPart:     LAYERS=idszpv0000000010|SOTTOZONA PROD. VINI - CHIANTI MONTALBANO||
+#LayersUrlPart:     LAYERS=idcentriabit|CENTRI ABITATI||
+#LayersUrlPart:     LAYERS=idsezcens_2001_cab|ISTAT 2001 - CENTRI ABITATI|0|NaN
+#LayersUrlPart:     LAYERS=idsezcens_2001_nab|ISTAT 2001 - NUCLEI ABITATI|0|NaN
+#LayersUrlPart:     LAYERS=idsezcens_2001_lpr|ISTAT 2001 - LOC. PROD.|0|NaN
+#LayersUrlPart:     LAYERS=idsezcens_2001_csp|ISTAT 2001 - CASE SPARSE|0|NaN
+#LayersUrlPart:     LAYERS=idpartoscoem|PARCO APPENNINO TOSCO-EMILIANO|0|NaN
+#LayersUrlPart:     LAYERS=idparforcas|PARCO DELLE FORESTE CASENTINESI|0|NaN
+#LayersUrlPart:     LAYERS=idpararctos|PARCO ARCIPELAGO TOSCANO|0|NaN
+#LayersUrlPart:     LAYERS=idparreg|PARCO REGIONALE|0|NaN
+#LayersUrlPart:     LAYERS=idparprov|PARCO PROVINCIALE|0|NaN
+#LayersUrlPart:     LAYERS=idrisnatprov|RISERVA NATURALE PROVINCIALE|0|NaN
+#LayersUrlPart:     LAYERS=idrisnatstat|RISERVA NATURALE STATALE|0|NaN
+#LayersUrlPart:     LAYERS=idanpil|AREA NATURALE PROTETTA DI INTERESSE LOCALE|0|NaN
+#LayersUrlPart:     LAYERS=idsir|SITI DI IMPORTANZA REGIONALE||
+#LayersUrlPart:     LAYERS=idramsar|ZONE UMIDE (RAMSAR)||
+#LayersUrlPart:     LAYERS=idmonum_a|VINC MONUMENTALE (A)||
+#LayersUrlPart:     LAYERS=idarch_a|VINC ARCHEOLOGICO (A)||
+#LayersUrlPart:     LAYERS=ididrogeol|VINC IDROGEOLOGICO||
+#LayersUrlPart:     LAYERS=idpae1_a|D.Lgls42/04,art.134 (A)||
+#LayersUrlPart:     LAYERS=idpae2m|D.Lgls42/04,art.142 - lett.m ZONE ARCHEOL.||
+#LayersUrlPart:     LAYERS=idpae2i|D.Lgls42/04,art.142 - lett.i ZONE UMIDE||
+#LayersUrlPart:     LAYERS=idpae2h|D.Lgls42/04,art.142 - lett.h USI CIVICI||
+#LayersUrlPart:     LAYERS=idpae2g|D.Lgls42/04,art.142 - lett.g BOSCHI||
+#LayersUrlPart:     LAYERS=idpae2f|D.Lgls42/04,art.142 - lett.f AREE PROTETTE||
+#LayersUrlPart:     LAYERS=idpae2e|D.Lgls42/04,art.142 - lett.e CIRCHI GLACIALI||
+#LayersUrlPart:     LAYERS=idpae2d|D.Lgls42/04,art.142 - lett.d MONTAGNE||
+#LayersUrlPart:     LAYERS=idpae2c|D.Lgls42/04,art.142 - lett.c FIUMI||
+#LayersUrlPart:     LAYERS=idpae2b|D.Lgls42/04,art.142 - lett.b LAGHI||
+#LayersUrlPart:     LAYERS=idpae2a|D.Lgls42/04,art.142 - lett.a COSTE||
+#LayersUrlPart:     LAYERS=idift8593|IFT 400m 1985-1993|0|NaN
+#LayersUrlPart:     LAYERS=idarprod|AREE PRODUTTIVE||
+#LayersUrlPart:     LAYERS=idsentcai|SENTIERI CAI - 2005||
+#LayersUrlPart:     LAYERS=idrifcai|RIFUGI CAI - 2005||
+#LayersUrlPart:     LAYERS=idgrotte|GROTTE||
+#LayersUrlPart:     LAYERS=_idreg|REGIONE||
+#LayersUrlPart:     LAYERS=idprov|PROVINCE||
+#LayersUrlPart:     LAYERS=idcomuni|COMUNI||
+#LayersUrlPart:     LAYERS=idcomuniline|COMUNI LINEARI||
+#LayersUrlPart:     LAYERS=idtoponctr10k|TOPONOMASTICA|0|NaN
+#LayersUrlPart:     LAYERS=_idlocabit|LOCALITA ABITATE||
+#LayersUrlPart:     LAYERS=copyright|theCopyright||
+#vorher LayersUrlPart:   LAYERS=idrst10k,rst100k,rst25k_igm
+#LayersUrlPart:   LAYERS=idrst10k
+LayersUrlPart:   LAYERS=otf10k0306,idrst10k
+StylesUrlPart:   STYLES=Default,Default,Default,Default,Default,Default,Default,Default
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 44.500805 E 9.642548
+BoundingBoxButtomRightWGS84:   N 42.168745 E 12.462359
+MinScale:   0
+MaxScale:   71
+#Scale 2 and 3 are scaled versions of scale 1. Scale 5 and 6 are scaled versions of scale 4
+RecommendedScale:   1
+ImageFileExtension: .png

Deleted: trunk/res_noewe/webmapservices/it.tos_topo-monochrome_auto.wms
===================================================================
--- trunk/res_noewe/webmapservices/it.tos_topo-monochrome_auto.wms	2009-05-17 11:28:07 UTC (rev 1815)
+++ trunk/res_noewe/webmapservices/it.tos_topo-monochrome_auto.wms	2009-05-17 12:34:33 UTC (rev 1816)
@@ -1,20 +0,0 @@
-TakenFromUrl:   http://www.rete.toscana.it/sett/territorio/carto/repertorio/geoscopio_wms/
-GetCapabilitiesUrl:      http://web.rete.toscana.it/sgrwms/com.rt.wms.RTmap?ServiceName=_rt_wms_cartografia&service=WMS&request=GetCapabilities
-Name:   it.tos Topo-Monochrome AutoDetail
-MainUrl:   http://web.rete.toscana.it:80/sgrwms/com.rt.wms.RTmap/_rt_wms_cartografia?
-MapType: topo
-ServiceTypeUrlPart:   SERVICE=WMS
-VersionUrlPart:   VERSION=1.1.0
-CoordinateReferenceSystemCacheWolf:   3003
-CoordinateReferenceSystemUrlPart:   SRS=EPSG:3003
-RequestUrlPart:   REQUEST=GetMap
-LayersUrlPart:   LAYERS=idrst10k,rst100k,rst25k_igm
-StylesUrlPart:   STYLES=Default,Default,Default,Default,Default,Default,Default,Default
-ImageFormatUrlPart:   FORMAT=image/png
-BoundingBoxTopLeftWGS84:   N 44.50080520 E 9.64254863
-BoundingBoxButtomRightWGS84:   N 42.16874557 E 12.46235998
-MinScale:   0
-MaxScale:   71
-#Scale 2 and 3 are scaled versions of scale 1. Scale 5 and 6 are scaled versions of scale 4
-RecommendedScale:   5
-ImageFileExtension: .png

Deleted: trunk/res_noewe/webmapservices/it.tos_topo-simplistic_auto.wms
===================================================================
--- trunk/res_noewe/webmapservices/it.tos_topo-simplistic_auto.wms	2009-05-17 11:28:07 UTC (rev 1815)
+++ trunk/res_noewe/webmapservices/it.tos_topo-simplistic_auto.wms	2009-05-17 12:34:33 UTC (rev 1816)
@@ -1,20 +0,0 @@
-TakenFromUrl:   http://www.rete.toscana.it/sett/territorio/carto/repertorio/geoscopio_wms/
-GetCapabilitiesUrl:      http://web.rete.toscana.it/sgrwms/com.rt.wms.RTmap?ServiceName=_rt_wms_topogr&service=WMS&request=GetCapabilities
-Name:   it.tos Topo-Simplistic AutoDetail
-MainUrl:   http://web.rete.toscana.it:80/sgrwms/com.rt.wms.RTmap/_rt_wms_topogr?
-MapType: topo
-ServiceTypeUrlPart:   SERVICE=WMS
-VersionUrlPart:   VERSION=1.1.0
-CoordinateReferenceSystemCacheWolf:   3003
-CoordinateReferenceSystemUrlPart:   SRS=EPSG:3003
-RequestUrlPart:   REQUEST=GetMap
-LayersUrlPart:   LAYERS=idisoipse,idtoponctr10k,_idbati,idedifici10k,idedifici2k,idareabagnata,idcorsi,idinfrferrovia,_idreg,idstradeestesa,_idstradegallerie
-StylesUrlPart:   STYLES=Default,Default,Default,Default,Default,Default,Default,Default
-ImageFormatUrlPart:   FORMAT=image/png
-BoundingBoxTopLeftWGS84:   N 44.50080520 E 9.64254863
-BoundingBoxButtomRightWGS84:   N 42.16874557 E 12.46235998
-MinScale:   0
-MaxScale:   14.14214
-#H?henlinien nur bei Scale unter 4.0
-RecommendedScale:   3.9
-ImageFileExtension: .png
\ No newline at end of file

Deleted: trunk/res_noewe/webmapservices/untested/it-52_t.wms
===================================================================
--- trunk/res_noewe/webmapservices/untested/it-52_t.wms	2009-05-17 11:28:07 UTC (rev 1815)
+++ trunk/res_noewe/webmapservices/untested/it-52_t.wms	2009-05-17 12:34:33 UTC (rev 1816)
@@ -1,22 +0,0 @@
-TakenFromUrl:   http://www.rete.toscana.it/sett/territorio/carto/repertorio/geoscopio_wms/
-GetCapabilitiesUrl:      http://web.rete.toscana.it/sgrwms/com.rt.wms.RTmap?ServiceName=_rt_wms_topogr&service=WMS&request=GetCapabilities
-Name:   it.Toskana topo 10
-# Simplistic AutoDetail
-MapType: topo
-MainUrl:   http://web.rete.toscana.it:80/sgrwms/com.rt.wms.RTmap/_rt_wms_topogr?
-#MainUrl:   http://web.rete.toscana.it:80/sgrwms/com.rt.wms.RTmap/_rt_wms?
-ServiceTypeUrlPart:   SERVICE=WMS
-VersionUrlPart:   VERSION=1.1.0
-CoordinateReferenceSystemCacheWolf:   3003
-CoordinateReferenceSystemUrlPart:   SRS=EPSG:3003
-RequestUrlPart:   REQUEST=GetMap
-LayersUrlPart:   LAYERS=idisoipse,idtoponctr10k,_idbati,idedifici10k,idedifici2k,idareabagnata,idcorsi,idinfrferrovia,_idreg,idstradeestesa,_idstradegallerie
-StylesUrlPart:   STYLES=Default,Default,Default,Default,Default,Default,Default,Default
-ImageFormatUrlPart:   FORMAT=image/png
-BoundingBoxTopLeftWGS84:   N 44.500805 E 9.642548
-BoundingBoxButtomRightWGS84:   N 42.168745 E 12.462359
-MinScale:   0
-MaxScale:   14.14214
-#H?henlinien nur bei Scale unter 4.0
-RecommendedScale:   3.9
-ImageFileExtension: .png
\ No newline at end of file

Deleted: trunk/res_noewe/webmapservices/untested/it-52_tm.wms
===================================================================
--- trunk/res_noewe/webmapservices/untested/it-52_tm.wms	2009-05-17 11:28:07 UTC (rev 1815)
+++ trunk/res_noewe/webmapservices/untested/it-52_tm.wms	2009-05-17 12:34:33 UTC (rev 1816)
@@ -1,21 +0,0 @@
-TakenFromUrl:   http://www.rete.toscana.it/sett/territorio/carto/repertorio/geoscopio_wms/
-GetCapabilitiesUrl:      http://web.rete.toscana.it/sgrwms/com.rt.wms.RTmap?ServiceName=_rt_wms_cartografia&service=WMS&request=GetCapabilities
-Name:   it.Toskana topo
-#-Monochrome AutoDetail
-MainUrl:   http://web.rete.toscana.it:80/sgrwms/com.rt.wms.RTmap/_rt_wms_cartografia?
-MapType: topo
-ServiceTypeUrlPart:   SERVICE=WMS
-VersionUrlPart:   VERSION=1.1.0
-CoordinateReferenceSystemCacheWolf:   3003
-CoordinateReferenceSystemUrlPart:   SRS=EPSG:3003
-RequestUrlPart:   REQUEST=GetMap
-LayersUrlPart:   LAYERS=idrst10k,rst100k,rst25k_igm
-StylesUrlPart:   STYLES=Default,Default,Default,Default,Default,Default,Default,Default
-ImageFormatUrlPart:   FORMAT=image/png
-BoundingBoxTopLeftWGS84:   N 44.500805 E 9.642548
-BoundingBoxButtomRightWGS84:   N 42.168745 E 12.462359
-MinScale:   0
-MaxScale:   71
-#Scale 2 and 3 are scaled versions of scale 1. Scale 5 and 6 are scaled versions of scale 4
-RecommendedScale:   5
-ImageFileExtension: .png



From greiol at mail.berlios.de  Sun May 17 20:41:03 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Sun, 17 May 2009 20:41:03 +0200
Subject: [Cachewolf-svn] r1817 - experiments/greiol/src/CacheWolf
Message-ID: <200905171841.n4HIf31E011668@sheep.berlios.de>

Author: greiol
Date: 2009-05-17 20:41:01 +0200 (Sun, 17 May 2009)
New Revision: 1817

Modified:
   experiments/greiol/src/CacheWolf/CacheType.java
Log:
v2 fehlte noch. ich hoffe die umrechnung stimmt

Modified: experiments/greiol/src/CacheWolf/CacheType.java
===================================================================
--- experiments/greiol/src/CacheWolf/CacheType.java	2009-05-17 12:34:33 UTC (rev 1816)
+++ experiments/greiol/src/CacheWolf/CacheType.java	2009-05-17 18:41:01 UTC (rev 1817)
@@ -245,14 +245,9 @@
 		if (type.equals("4")) return CW_TYPE_VIRTUAL;
 		if (type.equals("5")) return CW_TYPE_LETTERBOX;
 		if (type.equals("6")) return CW_TYPE_EVENT;
-		if (type.equals("")) return CW_TYPE_QUIZ;
 		if (type.equals("8")) return CW_TYPE_UNKNOWN;
-		if (type.equals("")) return CW_TYPE_MATH;
-		if (type.equals("")) return CW_TYPE_MOVING;
-		if (type.equals("")) return CW_TYPE_DRIVE_IN;
 		if (type.equals("11")) return CW_TYPE_WEBCAM;
 		if (type.equals("12")) return CW_TYPE_LOCATIONLESS;
-		if (type.equals("")) return CW_TYPE_CITO;
 		if (type.equals("50")) return CW_TYPE_PARKING;
 		if (type.equals("51")) return CW_TYPE_STAGE;
 		if (type.equals("52")) return CW_TYPE_QUESTION;
@@ -261,8 +256,6 @@
 		if (type.equals("55")) return CW_TYPE_REFERENCE;
 		if (type.equals("453")) return CW_TYPE_MEGA_EVENT;
 		if (type.equals("1858")) return CW_TYPE_WHEREIGO;
-		if (type.equals("")) return CW_TYPE_APE;
-		if (type.equals("")) return CW_TYPE_MAZE;
 		if (type.equals("137")) return CW_TYPE_EARTH;
 		
 		throw new IllegalArgumentException("unmatched argument "+type+" in CacheSizeNew v1Converter()");
@@ -277,6 +270,28 @@
 	 */
 	public static final byte v2Converter(byte type) throws IllegalArgumentException  {
 		switch (type) {
+		case -128: return CW_TYPE_CUSTOM;
+		case -126: return CW_TYPE_TRADITIONAL;
+		case -125: return CW_TYPE_MULTI;
+		case -124: return CW_TYPE_VIRTUAL;
+		case -123: return CW_TYPE_LETTERBOX;
+		case -122: return CW_TYPE_EVENT;
+		case -121: return CW_TYPE_QUIZ;
+		case -120: return CW_TYPE_UNKNOWN;
+		case -119: return CW_TYPE_MOVING;
+		case -118: return CW_TYPE_DRIVE_IN;
+		case -117: return CW_TYPE_WEBCAM;
+		case -116: return CW_TYPE_LOCATIONLESS;
+		case -115: return CW_TYPE_CITO;
+		case -78: return CW_TYPE_PARKING;
+		case -77: return CW_TYPE_STAGE;
+		case -76: return CW_TYPE_QUESTION;
+		case -75: return CW_TYPE_FINAL;
+		case -74: return CW_TYPE_TRAILHEAD;
+		case -73: return CW_TYPE_REFERENCE;
+		case 101: return CW_TYPE_MEGA_EVENT;
+		case 100: return CW_TYPE_WHEREIGO;
+		case 9: return CW_TYPE_EARTH;
 		default: throw new IllegalArgumentException("unmatched argument "+type+" in CacheSizeNew v2Converter()");
 		}
 	}
@@ -541,7 +556,6 @@
 	}
 	
 	//TODO: do we actually need this one
-	
 	/**
 	 * generate human readable type description for exporters
 	 * @param id internal type id



From greiol at mail.berlios.de  Sun May 17 21:11:08 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Sun, 17 May 2009 21:11:08 +0200
Subject: [Cachewolf-svn] r1818 - in trunk: . resources src/CacheWolf
	src/CacheWolf/navi src/exp
Message-ID: <200905171911.n4HJB8FZ014578@sheep.berlios.de>

Author: greiol
Date: 2009-05-17 21:10:50 +0200 (Sun, 17 May 2009)
New Revision: 1818

Added:
   trunk/resources/typeApe.png
   trunk/resources/typeMaze.png
   trunk/src/CacheWolf/GuiImageBroker.java
Modified:
   trunk/build.xml
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/CacheList.java
   trunk/src/CacheWolf/CacheSize.java
   trunk/src/CacheWolf/CacheType.java
   trunk/src/CacheWolf/CalcPanel.java
   trunk/src/CacheWolf/DetailsPanel.java
   trunk/src/CacheWolf/FilterScreen.java
   trunk/src/CacheWolf/GPXImporter.java
   trunk/src/CacheWolf/MainTab.java
   trunk/src/CacheWolf/OCXMLImporter.java
   trunk/src/CacheWolf/Parser.java
   trunk/src/CacheWolf/RadarPanel.java
   trunk/src/CacheWolf/ShowCacheInBrowser.java
   trunk/src/CacheWolf/SpiderGC.java
   trunk/src/CacheWolf/myInteractivePanel.java
   trunk/src/CacheWolf/myTableControl.java
   trunk/src/CacheWolf/myTableModel.java
   trunk/src/CacheWolf/navi/GotoPanel.java
   trunk/src/CacheWolf/navi/MovingMap.java
   trunk/src/exp/ExploristExporter.java
   trunk/src/exp/Exporter.java
   trunk/src/exp/GPXExporter.java
   trunk/src/exp/HTMLExporter.java
   trunk/src/exp/KMLExporter.java
   trunk/src/exp/MSARCSVExporter.java
   trunk/src/exp/TPLExporter.java
   trunk/src/exp/TomTomExporter.java
Log:
mergend in new CacheType class
some expoters still do have known issues

Modified: trunk/build.xml
===================================================================
--- trunk/build.xml	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/build.xml	2009-05-17 19:10:50 UTC (rev 1818)
@@ -55,7 +55,7 @@
 	<property name="assemble.dir" value="assemble"/>
 
 	<!-- lists of files to be packaged, this should become less confusing later on -->
-	<property name="template.files" value="*/*.tpl"/>
+	<property name="template.files" value="*.tpl"/>
 	<property name="icons.gui.files" value="dnf.gif,bug.gif,red.png,yellow.png,blue.png"/>
 	<property name="icons.log.files" value="traffic_cone.gif,recommendedlog.gif,icon_smile.gif,icon_sad.gif,icon_rsvp.gif,icon_note.gif,icon_needsmaint.gif,icon_maint.gif,icon_enabled.gif,icon_disabled.gif,icon_camera.gif,icon_attended.gif,big_smile.gif,coord_update.gif,icon_greenlight.gif,icon_redlight.gif"/>
 	<property name="icons.cache.files" value="11.gif,8.gif,6.gif,5.gif,4.gif,3.gif,2.gif,1858.gif,13.gif,137.gif,12.gif"/>
@@ -239,54 +239,54 @@
 
 	<target name="copyres" description="copy images to the assembly directory">
 		<!-- copy templates -->
-		<copy todir="${assemble.dir}">
+		<copy todir="${assemble.dir}" failonerror="true" verbose="true">
 			<fileset dir="res_noewe">
 				<include name="${template.files}"/>
 			</fileset>
 		</copy>
 		<!-- copy gui icons -->
-		<copy todir="${assemble.dir}">
+		<copy todir="${assemble.dir}" failonerror="true" verbose="true">
 			<fileset dir="res_noewe" includes="${icons.gui.files}"/>
 		</copy>
 		<!-- copy browser icons -->
-		<copy todir="${assemble.dir}">
+		<copy todir="${assemble.dir}" failonerror="true" verbose="true">
 			<fileset dir="res_noewe" includes="${icons.browser.files}"/>
 		</copy>
 		<!-- copy cache icons -->
-		<copy todir="${assemble.dir}">
+		<copy todir="${assemble.dir}" failonerror="true" verbose="true">
 			<fileset dir="res_noewe" includes="${icons.cache.files}"/>
 		</copy>
 		<!-- copy log icons -->
-		<copy todir="${assemble.dir}">
+		<copy todir="${assemble.dir}" failonerror="true" verbose="true">
 			<fileset dir="res_noewe" includes="${icons.log.files}"/>
 		</copy>
 		<!-- copy webmapservices -->
-		<copy todir="${assemble.dir}/webmapservices">
+		<copy todir="${assemble.dir}/webmapservices" failonerror="true" verbose="true">
 			<fileset dir="res_noewe/webmapservices"/>
 		</copy>
 		<!-- copy languages -->
-		<copy todir="${assemble.dir}/languages">
+		<copy todir="${assemble.dir}/languages" failonerror="true" verbose="true">
 			<fileset dir="res_noewe/languages"/>
 		</copy>
 		<!-- copy attributes -->
-		<copy todir="${assemble.dir}/attributes">
+		<copy todir="${assemble.dir}/attributes" failonerror="true" verbose="true">
 			<fileset dir="resources/attributes"/>
 		</copy>
 		<!-- copy addons -->
-		<copy todir="${assemble.dir}">
+		<copy todir="${assemble.dir}" failonerror="true" verbose="true">
 			<fileset dir="res_noewe">
 				<include name="Garmin*.zip"/>
 				<include name="POI*.zip"/>
 			</fileset>
 		</copy>
 		<!-- copy logo -->
-		<copy todir="${assemble.dir}" file="resources/CacheWolf.ico"/>
+		<copy todir="${assemble.dir}" file="resources/CacheWolf.ico" failonerror="true" verbose="true"/>
 		<!-- copy documentation -->
-		<copy todir="${assemble.dir}">
+		<copy todir="${assemble.dir}" failonerror="true" verbose="true">
 			<fileset dir="res_noewe" includes="${doc.files}"/>
 		</copy>
 		<!-- spider.def -->
-		<copy todir="${assemble.dir}" file="res_noewe/spider.def"/>
+		<copy todir="${assemble.dir}" file="res_noewe/spider.def" failonerror="true" verbose="true"/>
 	</target>
 
 	<target name="compilecabhelper" description="helper classes for building cabs" if="build.cab">

Copied: trunk/resources/typeApe.png (from rev 1817, experiments/greiol/resources/typeApe.png)

Copied: trunk/resources/typeMaze.png (from rev 1817, experiments/greiol/resources/typeMaze.png)

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -65,7 +65,7 @@
 	/** The size of the cache (as per GC cache sizes Micro, Small, ....) */
 	private byte cacheSize = CacheSize.CW_SIZE_NOTCHOSEN;
 	/** The distance from the centre in km */
-	public double kilom = -1; int bla = 0;
+	public double kilom = -1;
 	public double lastKilom = -2; // Cache last value
 	public int lastMetric = -1; // Cache last metric
 	public String lastDistance = ""; // Cache last distance
@@ -78,7 +78,7 @@
 	/** The terrain rating of the cache from 1 to 5 in .5 incements */
 	private String terrain = EMPTY;
 	/** The cache type (@see CacheType for translation table)  */
-	private byte type = -128; 
+	private byte type = CacheType.CW_TYPE_ERROR; 
 	/** True if the cache has been archived */
 	private boolean archived = false;
 	/** True if the cache is available for searching */
@@ -164,9 +164,11 @@
 		        start = xmlString.indexOf('"');
 		        end = xmlString.indexOf('"', start + 1);
 		        setCacheName(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+		        
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setCacheOwner(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+		        
 		        // Assume coordinates are in decimal format
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
@@ -178,94 +180,130 @@
 		                notDecSep, decSep));
 		        pos = new CWPoint(lat, lon);
 		        LatLon = pos.toString();
+		        
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setDateHidden(xmlString.substring(start + 1, end));
 		        // Convert the US format to YYYY-MM-DD if necessary
 		        if (getDateHidden().indexOf('/') > -1)
 			        setDateHidden(DateFormat.MDY2YMD(getDateHidden()));
+		        
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setWayPoint(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+		        
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setCacheStatus(xmlString.substring(start + 1, end));
+		        
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
-	            setType(Integer.parseInt(xmlString.substring(start + 1, end)));
+		        try {
+		        	setType(CacheType.v1Converter((xmlString.substring(start + 1, end))));
+		        } catch (IllegalArgumentException ex) {
+		        	setType(CacheType.CW_TYPE_ERROR);
+		        	Global.getPref().log(wayPoint, ex, true);
+		        	setIncomplete(true);
+		        }
+	            
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 	            setHard(CacheHolder.terrHard_OC2GC(xmlString.substring(start + 1, end)));
-		        start = xmlString.indexOf('"', end + 1);
+
+	            start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 	            setTerrain(CacheHolder.terrHard_OC2GC(xmlString.substring(start + 1, end)));
 		        // The next item was 'dirty' but this is no longer used.
-		        start = xmlString.indexOf('"', end + 1);
+
+	            start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setFiltered(xmlString.substring(start + 1, end).equals("true"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
+		        try {
+		        	setCacheSize(CacheSize.v1Converter(xmlString.substring(start + 1, end)));
+		        } catch (IllegalArgumentException ex) {
+		        	setCacheSize(CacheSize.CW_SIZE_ERROR);
+		        	Global.getPref().log(wayPoint, ex, true);
+		        	setIncomplete(true);
+		        }
 		        
-		        setCacheSize(CacheSize.v1Converter(xmlString.substring(start + 1, end)));
-		        
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setAvailable(xmlString.substring(start + 1, end).equals("true"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setArchived(xmlString.substring(start + 1, end).equals("true"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setHas_bugs(xmlString.substring(start + 1, end).equals("true"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setBlack(xmlString.substring(start + 1, end).equals("true"));
 		        if (is_black() != Global.getProfile().showBlacklisted())
 			        setFiltered(true);
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setOwned(xmlString.substring(start + 1, end).equals("true"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setFound(xmlString.substring(start + 1, end).equals("true"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setNew(xmlString.substring(start + 1, end).equals("true"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setLog_updated(xmlString.substring(start + 1, end).equals("true"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setUpdated(xmlString.substring(start + 1, end).equals("true"));
 		        // for backwards compatibility set value to true, if it is not in the file
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setHTML(!xmlString.substring(start + 1, end).equals("false"));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 	            setNoFindLogs((byte)Convert.toInt(xmlString.substring(start + 1, end)));
-		        start = xmlString.indexOf('"', end + 1);
+
+	            start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setOcCacheID(xmlString.substring(start + 1, end));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
-		        setIncomplete(xmlString.substring(start + 1, end).equals("true"));
+		        setIncomplete(xmlString.substring(start + 1, end).equals("true") || incomplete);
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setLastSyncOC(xmlString.substring(start + 1, end));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setNumRecommended(Convert.toInt(xmlString.substring(start + 1, end)));
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		        setNumFoundsSinceRecommendation(Convert.toInt(xmlString.substring(start + 1, end)));
 		        recommendationScore = LogList.getScore(getNumRecommended(),
 		                getNumFoundsSinceRecommendation());
-	            start = xmlString.indexOf('"', end + 1);
+
+		        start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            if (start > -1 && end > -1) {
 		            setAttributesYes(Convert.parseLong(xmlString.substring(start + 1, end)));
 
+
 		        start = xmlString.indexOf('"', end + 1);
 		        end = xmlString.indexOf('"', start + 1);
 		            if (start > -1 && end > -1)
@@ -275,9 +313,11 @@
 	            start = xmlString.indexOf('"');
 	            end = xmlString.indexOf('"', start + 1);
 	            setCacheName(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            setCacheOwner(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+	            
 	            // Assume coordinates are in decimal format
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
@@ -289,32 +329,40 @@
 	                    notDecSep, decSep));
 	            pos = new CWPoint(lat, lon);
 	            LatLon = pos.toString();
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            setDateHidden(xmlString.substring(start + 1, end));
 	            // Convert the US format to YYYY-MM-DD if necessary
 	            if (getDateHidden().indexOf('/') > -1)
 		            setDateHidden(DateFormat.MDY2YMD(getDateHidden()));
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            setWayPoint(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            setCacheStatus(xmlString.substring(start + 1, end));
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            setOcCacheID(xmlString.substring(start + 1, end));
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            setLastSyncOC(xmlString.substring(start + 1, end));
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            setNumRecommended(Convert.toInt(xmlString.substring(start + 1, end)));
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 	            setNumFoundsSinceRecommendation(Convert.toInt(xmlString.substring(start + 1, end)));
 	            recommendationScore = LogList.getScore(getNumRecommended(),
 	                    getNumFoundsSinceRecommendation());
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
 		        if (start > -1 && end > -1) {
@@ -325,12 +373,15 @@
 			        if (start > -1 && end > -1)
 				        setAttributesNo(Convert.parseLong(xmlString.substring(start + 1, end)));
 		        }
+		        
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
-	            this.long2boolFields(Convert.parseLong(xmlString.substring(start + 1, end)));	            
+	            this.long2boolFields(Convert.parseLong(xmlString.substring(start + 1, end)));
+	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
-	            this.long2byteFields(Convert.parseLong(xmlString.substring(start + 1, end)));	            
+	            this.long2byteFields(Convert.parseLong(xmlString.substring(start + 1, end)));	  
+	            
 	            if (is_black() != Global.getProfile().showBlacklisted())
 		            setFiltered(true);
             }
@@ -1116,8 +1167,8 @@
 	 * Gets the type of cache as integer.
 	 * @return Cache type
 	 */
-	public int getType() {
-		return CacheType.toInt(type);
+	public byte getType() {
+		return type;
     }
 
 	/**
@@ -1125,8 +1176,8 @@
 	 * and byte internally of CacheHolder, some conversion has to be done.
 	 * @param type Cache Type
 	 */
-	public void setType(int type) {
-		byte newType = CacheType.toByte(type);
+	public void setType(byte type) {
+		byte newType = type;
 		Global.getProfile().notifyUnsavedChanges(newType != this.type);		
     	this.type = newType;
     }

Modified: trunk/src/CacheWolf/CacheList.java
===================================================================
--- trunk/src/CacheWolf/CacheList.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/CacheList.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -92,7 +92,7 @@
 				 CacheHolder ch=cacheList.get(idx);
 				 wayPoint=ch.getWayPoint();
 				 IconAndText imgDrag=new IconAndText();
-				 imgDrag.addColumn(CacheType.cache2Img(ch.getType()));
+				 imgDrag.addColumn(GuiImageBroker.getTypeImage(ch.getType()));
 				 imgDrag.addColumn(ch.getWayPoint());
 				 dc.dragData=dc.startImageDrag(imgDrag,new Point(8,8),this);
 			 } 
@@ -313,7 +313,7 @@
 			// Add cache reference to hidden list
 			cacheList.add(ch);
 			// Add Cache and cache icon to visible list
-			lstCaches.addItem((new MenuItem()).iconize(ch.getWayPoint()+"   "+ch.getCacheName(),CacheType.cache2Img(ch.getType()),true));
+			lstCaches.addItem((new MenuItem()).iconize(ch.getWayPoint()+"   "+ch.getCacheName(),GuiImageBroker.getTypeImage(ch.getType()),true));
 		    dirty=true;
 			return true;
 		} else

Modified: trunk/src/CacheWolf/CacheSize.java
===================================================================
--- trunk/src/CacheWolf/CacheSize.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/CacheSize.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -1,100 +1,116 @@
 package CacheWolf;
 
+/**
+ * Handels all aspects of converting cache size information from
+ * and to the various im- and exporters as well as for converting
+ * legavy profiles to current standard
+ */
 public final class CacheSize {
 
 	/*
 	 * internal representation of cache sizes in CacheHolder we just made them
 	 * up ;-)
 	 */
-	static final protected byte CW_SIZE_NOTCHOSEN = 0;
-	static final protected byte CW_SIZE_OTHER = 1;
-	static final protected byte CW_SIZE_MICRO = 2;
-	static final protected byte CW_SIZE_SMALL = 3;
-	static final protected byte CW_SIZE_REGULAR = 4;
-	static final protected byte CW_SIZE_LARGE = 5;
-	static final protected byte CW_SIZE_VERYLARGE = 6;
-	static final protected byte CW_SIZE_NONE = 7;
-	static final protected byte CW_SIZE_VIRTUAL = 8;
+	/** container size not chosen */
+	public static final byte CW_SIZE_NOTCHOSEN = 0;
+	/** container size other */
+	public static final byte CW_SIZE_OTHER = 1;
+	/** container size micro */
+	public static final byte CW_SIZE_MICRO = 2;
+	/* container size small */
+	public static final byte CW_SIZE_SMALL = 3;
+	/** container size regular */
+	public static final byte CW_SIZE_REGULAR = 4;
+	/** container size large */
+	public static final byte CW_SIZE_LARGE = 5;
+	/** container size very large */
+	public static final byte CW_SIZE_VERYLARGE = 6;
+	/** container size none */
+	public static final byte CW_SIZE_NONE = 7;
+	/** container size virtual */
+	public static final byte CW_SIZE_VIRTUAL = 8;
+	/** unparsable size or missing size information should throw IllegalArgumentExceptions when found */
+	public static final byte CW_SIZE_ERROR = -1;
 
 	/*
-	 * geocaching.com size string as found by analyzing GPX files plus OC/TC
-	 * Very large
+	 * geocaching.com size strings as found by analyzing GPX files 
+	 * plus opencaching & terracaching Very large + none
 	 */
-	static final protected String GC_SIZE_MICRO = "Micro";
-	static final protected String GC_SIZE_SMALL = "Small";
-	static final protected String GC_SIZE_REGULAR = "Regular";
-	static final protected String GC_SIZE_LARGE = "Large";
-	static final protected String GC_SIZE_NOTCHOSEN = "Not chosen";
-	static final protected String GC_SIZE_OTHER = "Other";
-	static final protected String GC_SIZE_VIRTUAL = "Virtual";
-	static final protected String OCTC_SIZE_VERYLARGE = "Very large";
-	static final protected String OCTC_SIZE_NONE = "None";
+	public static final String GC_SIZE_MICRO = "Micro";
+	public static final String GC_SIZE_SMALL = "Small";
+	public static final String GC_SIZE_REGULAR = "Regular";
+	public static final String GC_SIZE_LARGE = "Large";
+	public static final String GC_SIZE_NOTCHOSEN = "Not chosen";
+	public static final String GC_SIZE_OTHER = "Other";
+	public static final String GC_SIZE_VIRTUAL = "Virtual";
+	public static final String OCTC_SIZE_VERYLARGE = "Very large";
+	public static final String OCTC_SIZE_NONE = "None";
 
 	/*
 	 * OpenCaching Size IDs see
 	 * http://oc-server.svn.sourceforge.net/viewvc/oc-server/doc/sql/static-data/data.sql?view=markup
 	 */
-	static final protected String OC_SIZE_OTHER = "1";
-	static final protected String OC_SIZE_MICRO = "2";
-	static final protected String OC_SIZE_SMALL = "3";
-	static final protected String OC_SIZE_NORMAL = "4";
-	static final protected String OC_SIZE_LARGE = "5";
-	static final protected String OC_SIZE_VERYLARGE = "6";
-	static final protected String OC_SIZE_NONE = "7";
+	public static final String OC_SIZE_OTHER = "1";
+	public static final String OC_SIZE_MICRO = "2";
+	public static final String OC_SIZE_SMALL = "3";
+	public static final String OC_SIZE_NORMAL = "4";
+	public static final String OC_SIZE_LARGE = "5";
+	public static final String OC_SIZE_VERYLARGE = "6";
+	public static final String OC_SIZE_NONE = "7";
 
 	/*
 	 * TerraCaching Size IDs taken from old GPXimporter (?? reliable source ??)
 	 */
-	static final protected String TC_SIZE_MICRO = "1";
-	static final protected String TC_SIZE_MEDIUM = "2";
-	static final protected String TC_SIZE_REGULAR = "3";
-	static final protected String TC_SIZE_LARGE = "4";
-	static final protected String TC_SIZE_VERYLARGE = "4";
+	public static final String TC_SIZE_MICRO = "1";
+	public static final String TC_SIZE_MEDIUM = "2";
+	public static final String TC_SIZE_REGULAR = "3";
+	public static final String TC_SIZE_LARGE = "4";
+	public static final String TC_SIZE_VERYLARGE = "4";
 
 	/*
 	 * images to show in CW index panel we use less images than sizes since all
 	 * non physical caches are represented by the same symbol
 	 */
 	/** GUI image for micro caches */
-	static final protected String CW_GUIIMG_MICRO = "sizeMicro.png";
+	public static final String CW_GUIIMG_MICRO = "sizeMicro.png";
 	/** GUI image for small caches */
-	static final protected String CW_GUIIMG_SMALL = "sizeSmall.png";
+	public static final String CW_GUIIMG_SMALL = "sizeSmall.png";
 	/** GUI image for regular / normal caches */
-	static final protected String CW_GUIIMG_NORMAL = "sizeReg.png";
+	public static final String CW_GUIIMG_NORMAL = "sizeReg.png";
 	/** GUI image for large caches */
-	static final protected String CW_GUIIMG_LARGE = "sizeLarge.png";
+	public static final String CW_GUIIMG_LARGE = "sizeLarge.png";
 	/** GUI image for non physical caches */
-	static final protected String CW_GUIIMG_NONPHYSICAL = "sizeNonPhysical.png";
+	public static final String CW_GUIIMG_NONPHYSICAL = "sizeNonPhysical.png";
 	/** GUI image for very large caches */
-	static final protected String CW_GUIIMG_VERYLARGE = "sizeVLarge.png";
+	public static final String CW_GUIIMG_VERYLARGE = "sizeVLarge.png";
 
 	/*
 	 * IDs for the sizePics[] array in TableModel therefore they must start with
 	 * 0 and be consecutive
 	 */
-	static final protected byte CW_GUIIMGID_MICRO = 0;
-	static final protected byte CW_GUIIMGID_SMALL = 1;
-	static final protected byte CW_GUIIMGID_NORMAL = 2;
-	static final protected byte CW_GUIIMGID_LARGE = 3;
-	static final protected byte CW_GUIIMGID_NONPHYSICAL = 4;
-	static final protected byte CW_GUIIMGID_VERYLARGE = 5;
+	public static final byte CW_GUIIMGID_MICRO = 0;
+	public static final byte CW_GUIIMGID_SMALL = 1;
+	public static final byte CW_GUIIMGID_NORMAL = 2;
+	public static final byte CW_GUIIMGID_LARGE = 3;
+	public static final byte CW_GUIIMGID_NONPHYSICAL = 4;
+	public static final byte CW_GUIIMGID_VERYLARGE = 5;
 
 	/*
 	 * total number of different size images will be used to det the dimension
 	 * of sizePics[] array in TableModel
 	 */
-	static final protected byte CW_TOTAL_SIZE_IMAGES = 6;
+	public static final byte CW_TOTAL_SIZE_IMAGES = 6;
 
 	/*
 	 * bit masks to be used with the filter function
 	 */
-	static final protected byte CW_FILTER_MICRO = 0x01 << 0;
-	static final protected byte CW_FILTER_SMALL = 0x01 << 1;
-	static final protected byte CW_FILTER_NORMAL = 0x01 << 2;
-	static final protected byte CW_FILTER_LARGE = 0x01 << 3;
-	static final protected byte CW_FILTER_VERYLARGE = 0x01 << 4;
-	static final protected byte CW_FILTER_NONPHYSICAL = 0x01 << 5;
-	static final protected byte CW_FILTER_ALL = CW_FILTER_MICRO
+	public static final byte CW_FILTER_MICRO = 0x01 << 0;
+	public static final byte CW_FILTER_SMALL = 0x01 << 1;
+	public static final byte CW_FILTER_NORMAL = 0x01 << 2;
+	public static final byte CW_FILTER_LARGE = 0x01 << 3;
+	public static final byte CW_FILTER_VERYLARGE = 0x01 << 4;
+	public static final byte CW_FILTER_NONPHYSICAL = 0x01 << 5;
+	public static final byte CW_FILTER_ALL = CW_FILTER_MICRO
 			| CW_FILTER_SMALL | CW_FILTER_NORMAL | CW_FILTER_LARGE
 			| CW_FILTER_NONPHYSICAL | CW_FILTER_VERYLARGE;
 
@@ -115,7 +131,7 @@
 	 * @throws IllegalArgumentException
 	 *             if there is no image associated to the id
 	 */
-	public static String sizeImageForId(byte id) {
+	public static String sizeImageForId(byte id) throws IllegalArgumentException {
 		switch (id) {
 			case CW_GUIIMGID_MICRO:
 				return CW_GUIIMG_MICRO;
@@ -144,7 +160,7 @@
 	 * @throws IllegalArgumentException
 	 *             if cwsize can not be mapped to a CW_SIZE constant
 	 */
-	public static String cw2ExportString(byte size) {
+	public static String cw2ExportString(byte size) throws IllegalArgumentException {
 		switch (size) {
 			case CW_SIZE_MICRO:
 				return GC_SIZE_MICRO;
@@ -181,7 +197,7 @@
 	 *             (CW_SIZE_*)
 	 */
 
-	public static byte tcGpxString2Cw(String tcstring) {
+	public static byte tcGpxString2Cw(String tcstring) throws IllegalArgumentException {
 		if (tcstring.equals(TC_SIZE_MICRO)) {
 			return CW_SIZE_MICRO;
 		} else if (tcstring.equals(TC_SIZE_MEDIUM)) {
@@ -209,7 +225,7 @@
 	 *             (CW_SIZE_*)
 	 */
 
-	public static byte gcGpxString2Cw(String gcstring) {
+	public static byte gcGpxString2Cw(String gcstring) throws IllegalArgumentException {
 		if (gcstring.equals(GC_SIZE_MICRO)) {
 			return CW_SIZE_MICRO;
 		} else if (gcstring.equals(GC_SIZE_SMALL)) {
@@ -240,7 +256,7 @@
 	 *             if spiderstring can not be mapped to internal representation
 	 *             (CW_SIZE_*)
 	 */
-	public static byte gcSpiderString2Cw(String spiderstring) {
+	public static byte gcSpiderString2Cw(String spiderstring) throws IllegalArgumentException {
 		// at the moment both sources use the same strings
 		return gcGpxString2Cw(spiderstring);
 	}
@@ -255,7 +271,7 @@
 	 * @trows IllegalArgumentException if ocxmlstring can not be mapped to a
 	 *        CW_SIZE_*
 	 */
-	public static byte ocXmlString2Cw(String ocxmlstring) {
+	public static byte ocXmlString2Cw(String ocxmlstring) throws IllegalArgumentException {
 		if (ocxmlstring.equals(OC_SIZE_OTHER)) {
 			return CW_SIZE_OTHER;
 		} else if (ocxmlstring.equals(OC_SIZE_MICRO)) {
@@ -284,7 +300,7 @@
 	 * @throws IllegalArgumentException
 	 *             if size can not be mapped
 	 */
-	public static byte guiSizeImageId(byte size) {
+	public static byte guiSizeImageId(byte size) throws IllegalArgumentException {
 		switch (size) {
 			case CW_SIZE_MICRO:
 				return CW_GUIIMGID_MICRO;
@@ -310,15 +326,15 @@
 	}
 
 	/**
-	 * convert an "old style" size string to the new internal representation
+	 * convert v1 style size string to the new internal representation
 	 * 
 	 * @param v1Size
 	 *            old size string
 	 * @return CW internal representation of cache size
-	 * @throws if v1Size can not be mapped
+	 * @throws IllegalArgumentException if v1Size can not be mapped
 	 * @deprecated remove once v1 file version compatibility is abandoned
 	 */
-	public static final byte v1Converter(String v1Size) {
+	public static final byte v1Converter(String v1Size) throws IllegalArgumentException {
 		if (v1Size.equals(GC_SIZE_MICRO)) {
 			return CW_SIZE_MICRO;
 		} else if (v1Size.equals(GC_SIZE_SMALL)) {
@@ -346,23 +362,6 @@
 		}
 	}
 	
-	public static final byte v2Converter(byte v2Size) {
-		switch(v2Size) {
-			case CW_SIZE_MICRO: // fall through
-			case CW_SIZE_SMALL: // fall through
-			case CW_SIZE_REGULAR: // fall through
-			case CW_SIZE_LARGE: // fall through
-			case CW_SIZE_NOTCHOSEN: // fall through
-			case CW_SIZE_OTHER: // fall through
-			case CW_SIZE_VIRTUAL: // fall through
-			case CW_SIZE_NONE: // fall through
-			case CW_SIZE_VERYLARGE: return v2Size;
-			case -1: return CW_SIZE_NOTCHOSEN; // -1 was catch all in v2
-			default:
-				throw (new IllegalArgumentException("unmatched argument " + v2Size + " in v2Converter()"));
-		}
-	}
-
 	/**
 	 * return a bit mask representing the caches size for use in the Filter
 	 * 
@@ -372,8 +371,7 @@
 	 * @throws IllegalArgumentException
 	 *             if size can not be mapped to a bit mask
 	 */
-
-	public static byte getFilterPattern(byte size) {
+	public static byte getFilterPattern(byte size) throws IllegalArgumentException {
 		switch (size) {
 			case CW_SIZE_MICRO:
 				return CW_FILTER_MICRO;
@@ -408,7 +406,7 @@
 	 *             if size can not be mapped
 	 */
 
-	public static String getExportShortId(byte size) {
+	public static String getExportShortId(byte size) throws IllegalArgumentException {
 		switch (size) {
 			case CW_SIZE_MICRO:
 				return "m";
@@ -440,12 +438,19 @@
 	 * @see guiSizeStrings2CwSize
 	 * @see cwSizeId2GuiSizeId
 	 */
-
 	public static String[] guiSizeStrings() {
 		// make sure strings appear in ascending order for CW_SIZE_*
-		String ret[] = new String[] { GC_SIZE_NOTCHOSEN, GC_SIZE_OTHER,
-				GC_SIZE_MICRO, GC_SIZE_SMALL, GC_SIZE_REGULAR, GC_SIZE_LARGE,
-				OCTC_SIZE_VERYLARGE, OCTC_SIZE_NONE, GC_SIZE_VIRTUAL };
+		String ret[] = new String[] { 
+				GC_SIZE_NOTCHOSEN, 
+				GC_SIZE_OTHER,
+				GC_SIZE_MICRO, 
+				GC_SIZE_SMALL, 
+				GC_SIZE_REGULAR, 
+				GC_SIZE_LARGE,
+				OCTC_SIZE_VERYLARGE, 
+				OCTC_SIZE_NONE, 
+				GC_SIZE_VIRTUAL 
+				};
 		return ret;
 	}
 
@@ -460,7 +465,7 @@
 	 * @see cwSizeId2GuiSizeId
 	 * @see guiSizeStrings
 	 */
-	public static byte guiSizeStrings2CwSize(String id) {
+	public static byte guiSizeStrings2CwSize(String id) throws IllegalArgumentException {
 		// map the strings in guiSizeStrings() back to cw byte types
 		if (id.equals(GC_SIZE_NOTCHOSEN)) {
 			return CW_SIZE_NOTCHOSEN;
@@ -495,7 +500,7 @@
 	 * @see guiSizeStrings2CwSize
 	 * @see cwSizeId2GuiSizeId
 	 */
-	public static int cwSizeId2GuiSizeId(byte id) {
+	public static int cwSizeId2GuiSizeId(byte id) throws IllegalArgumentException {
 		switch (id) {
 		case CW_SIZE_NOTCHOSEN:
 			return 0;

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/CacheType.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -1,348 +1,579 @@
-/**
- * 
- */
-package CacheWolf;
-
-import ewe.fx.Image;
-import ewe.sys.Vm;
-
-
-/**
- * @author Kalle
- * Class for dealing with different cachetypes from gc and oc
- */
-
-/**
-*	Listing of types and mappings
-*	
-*	OC		GC		Comment		Regel
-*	1		8		Other			1->8
-*	2		2		Traditional		2->2
-*	3		3		Multi			3->3
-*	4		4		Virtual		4->4
-*	5		11		Webcam		5->11
-*	6		6		Event			6->6
-*	7		8		Quiz			7->8
-*	8		??		Math			8->108 (ok)
-*	9		??		Moving		9->109 (ok)
-*	10		??		Drive-In		10->110 (ok)
-*/
-
-public class CacheType {
-	private static Image cacheImages[] = new Image[138]; // Images are used by TableControl
-	public static final int WHERIGO=100; // The cache we mapped the wherigo to
-	public static final int MEGA_EVENT=101; // Mapping for Mega Event 
-	static {
-		cacheImages[0] = new Image("0.png");
-		//cacheImages[1] = new Image();
-		cacheImages[2] = new Image("2.png");
-		cacheImages[3] = new Image("3.png");
-		cacheImages[4] = new Image("4.png");
-		cacheImages[5] = new Image("5.png");
-		cacheImages[6] = new Image("6.png");
-		cacheImages[8] = new Image("8.png");
-		//cacheImages[9] = new Image();
-		//cacheImages[10] = new Image();
-		cacheImages[11] = new Image("11.png");
-		cacheImages[12] = new Image("12.png");
-		cacheImages[13] = new Image("13.png");
-		//additional waypoints, begin with 50
-		cacheImages[50] = new Image("pkg.png");
-		cacheImages[51] = new Image("stage.png");
-		cacheImages[52] = new Image("puzzle.png");
-		cacheImages[53] = new Image("flag.png");
-		cacheImages[54] = new Image("trailhead.png");
-		cacheImages[55] = new Image("waypoint.png");
-
-		cacheImages[108] = new Image("108.png");
-		cacheImages[109] = new Image("109.png");
-		cacheImages[110] = new Image("110.png");
-		cacheImages[137] = new Image("137.png");
-		cacheImages[WHERIGO] = new Image("1858.png");  // Fudge as whereigo is really 1858
-		cacheImages[MEGA_EVENT] = new Image("453.png");
-	}
-
-	//Types from gc.com
-	static protected final int GC_TRADITIONAL = 2;
-	static protected final int GC_MULTI = 3;
-	static protected final int GC_VIRTUAL = 4;
-	static protected final int GC_LETTERBOX = 5;
-	static protected final int GC_EVENT = 6;
-	static protected final int GC_UNKNOWN = 8;
-	static protected final int GC_WEBCAM = 11;
-	static protected final int GC_LOCATIONLESS = 12;
-	static protected final int GC_CITO = 13;
-	static protected final int GC_EARTH = 137;
-	static protected final int GC_MEGA_EVENT = 453;
-	// additional waypoints have no numbers in GPX Files, so lets use our own.
-	static protected final int GC_AW_PARKING = 50;
-	static protected final int GC_AW_STAGE_OF_MULTI = 51;
-	static protected final int GC_AW_QUESTION = 52;
-	static protected final int GC_AW_FINAL = 53;
-	static protected final int GC_AW_TRAILHEAD = 54;
-	static protected final int GC_AW_REFERENCE = 55;
-	
-	//Types from oc.de
-	static protected final int OC_UNKNOWN = 1;
-	static protected final int OC_TRADITIONAL = 2;
-	static protected final int OC_MULTI = 3;
-	static protected final int OC_VIRTUAL = 4;
-	static protected final int OC_WEBCAM = 5;
-	static protected final int OC_EVENT = 6;
-	static protected final int OC_QUIZ = 7;
-	static protected final int OC_MATH = 8;
-	static protected final int OC_MOVING = 9;
-	static protected final int OC_DRIVE_IN = 10;
-	
-	//Our own mapping
-	static protected final int CW_TRADITIONAL = 2;
-	static protected final int CW_MULTI = 3;
-	static protected final int CW_VIRTUAL = 4;
-	static protected final int CW_LETTERBOX = 5;
-	static protected final int CW_EVENT = 6;
-	static protected final int CW_QUIZ = 7;
-	static protected final int CW_UNKNOWN = 8;
-	static protected final int CW_MATH = 8;
-	static protected final int CW_MOVING = 9;
-	static protected final int CW_DRIVE_IN = 10;
-	static protected final int CW_WEBCAM = 11;
-	static protected final int CW_LOCATIONLESS = 12;
-	static protected final int CW_CITO = 13;
-	static protected final int CW_EARTH = 137;
-	static protected final int CW_MEGA_EVENT = 453;
-	static protected final int CW_WHERIGO = 1858;
-	static protected final int CW_PARKING = 50;
-	static protected final int CW_STAGE_OF_MULTI = 51;
-	static protected final int CW_QUESTION = 52;
-	static protected final int CW_FINAL = 53;
-	static protected final int CW_TRAILHEAD = 54;
-	static protected final int CW_REFERENCE = 55;
-	static protected final int CW_CNT_TYPES = 20;
-
-	//Sources
-	static protected final int SRC_GC = 1;
-	static protected final int SRC_OC = 2;
-	static protected final int SRC_CW = 3;
-
-	//pictures
-	static protected final String CW_PIC_UNKNOWN = "8.png";
-	static protected final String CW_PIC_TRADITIONAL = "2.png";
-	static protected final String CW_PIC_MULTI = "3.png";
-	static protected final String CW_PIC_VIRTUAL = "4.png";
-	static protected final String CW_PIC_WEBCAM = "11.png";
-	static protected final String CW_PIC_EVENT = "6.png";
-	static protected final String CW_PIC_QUIZ = "8.png";
-	static protected final String CW_PIC_MATH = "108.png";
-	static protected final String CW_PIC_MOVING = "109.png";
-	static protected final String CW_PIC_DRIVE_IN = "110.png";
-	static protected final String CW_PIC_LETTERBOX = "5.png";
-	static protected final String CW_PIC_LOCATIONLESS = "12.png";
-	static protected final String CW_PIC_CITO = "13.png";
-	static protected final String CW_PIC_EARTH = "137.png";
-	static protected final String CW_PIC_MEGA_EVENT = "453.png";
-	static protected final String CW_PIC_WHERIGO = "1858.png";
-	static protected final String CW_PIC_PARKING = "pkg.png";
-	static protected final String CW_PIC_STAGE_OF_MULTI = "stage.png";
-	static protected final String CW_PIC_QUESTION = "puzzle.png";
-	static protected final String CW_PIC_FINAL = "flag.png";
-	static protected final String CW_PIC_TRAILHEAD = "trailhead.png";
-	static protected final String CW_PIC_REFERENCE = "waypoint.png";
-	
-	//fields
-	int type = 0;
-	
-	// array with names and types for exporters
-	public final static int WPT_TEXT = 0;
-	public final static int WPT_NUM = 1;
-
-	public static String[][] wayType = {{"Custom","0"},{"Traditional","2"},
-			{"Multi","3"}, {"Virtual","4"},
-			{"Letterbox","5"},{"Event","6"},
-			{"Mega Event","453"}, {"Mystery","8"},
-			{"Webcam","11"},{"Locationless","12"},
-			{"CITO","13"},{"Earthcache","137"},
-			{"Parking","50"},{"Stage","51"},
-			{"Question","52"},{"Final","53"},
-			{"Trailhead","54"},{"Reference","55"},{"WhereIGo","1858"}};
-
-	public static String shortType(int typeNum){
-		String shortType = new String("O");
-		if(typeNum == 0) shortType = "C";
-		if(typeNum == 2) shortType = "T";
-		if(typeNum == 3) shortType = "M";
-		if(typeNum == 4) shortType = "V";
-		if(typeNum == 5) shortType = "L";
-		if(typeNum == 6) shortType = "O";
-		if(typeNum == 11) shortType = "W";
-		if(typeNum == 8) shortType = "U";
-		if(typeNum == 12) shortType = "O";
-		if(typeNum == 13) shortType = "O";
-		if(typeNum == 137) shortType = "E";
-		if(typeNum == 453) shortType = "O";
-		if(typeNum == 1858) shortType = "O";
-		if(typeNum == 50) shortType = "P";
-		if(typeNum == 51) shortType = "S";
-		if(typeNum == 52) shortType = "Q";
-		if(typeNum == 53) shortType = "F";
-		if(typeNum == 54) shortType = "H";
-		if(typeNum == 55) shortType = "R";
-		return shortType;
-	}
-	public static String transType(int geoNum){
-		String geo = new String("Unknown");
-		if(geoNum == 2) geo = "Traditional Cache";
-		if(geoNum == 3) geo = "Multi-cache";
-		if(geoNum == 4) geo = "Virtual Cache";
-		if(geoNum == 5) geo = "Letterbox Hybrid";
-		if(geoNum == 6) geo = "Event Cache";
-		if(geoNum == 11) geo = "Webcam Cache";
-		if(geoNum == 8) geo = "Unknown Cache";
-		if(geoNum == 12) geo = "Locationless Cache";
-		if(geoNum == 13) geo = "Cache In Trash Out Event";
-		if(geoNum == 137) geo = "Earthcache";
-		if(geoNum == 453) geo = "Mega Event Cache";
-		if(geoNum == 1858) geo = "WhereIGo Cache";
-		if(geoNum == 50) geo = "Parking Area";
-		if(geoNum == 51) geo = "Stages of a Multicache";
-		if(geoNum == 52) geo = "Question to Answer";
-		if(geoNum == 53) geo = "Final Location";
-		if(geoNum == 54) geo = "Trailhead";
-		if(geoNum == 55) geo = "Reference Point";
-		return geo;
-	}
-	
-	/**
-	 * Returns the image name of a given internal type
-	 * @param type Type of cache
-	 * @return The image name of the cache
-	 */
-	public static String type2pic(int type) {
-		switch(type) {
-			case CW_TRADITIONAL:	return CW_PIC_TRADITIONAL;
-			case CW_MULTI:			return CW_PIC_MULTI;
-			case CW_VIRTUAL:		return CW_PIC_VIRTUAL;
-			case CW_LETTERBOX:		return CW_PIC_LETTERBOX;
-			case CW_EVENT:			return CW_PIC_EVENT;
-			case CW_QUIZ:			return CW_PIC_QUIZ;
-			case CW_UNKNOWN:		return CW_PIC_UNKNOWN;
-			case CW_MOVING:			return CW_PIC_MOVING;
-			case CW_DRIVE_IN:		return CW_PIC_DRIVE_IN;
-			case CW_WEBCAM:			return CW_PIC_WEBCAM;
-			case CW_LOCATIONLESS:	return CW_PIC_LOCATIONLESS;
-			case CW_CITO:			return CW_PIC_CITO;
-			case CW_EARTH:			return CW_PIC_EARTH;
-			case CW_MEGA_EVENT:		return CW_PIC_MEGA_EVENT;
-			case CW_WHERIGO:	    return CW_PIC_WHERIGO;
-			case CW_PARKING:		return CW_PIC_PARKING;
-			case CW_STAGE_OF_MULTI:	return CW_PIC_STAGE_OF_MULTI;
-			case CW_QUESTION:		return CW_PIC_QUESTION;
-			case CW_FINAL:			return CW_PIC_FINAL;
-			case CW_TRAILHEAD:		return CW_PIC_TRAILHEAD;
-			case CW_REFERENCE:		return CW_PIC_REFERENCE;
-			default:		return "no_picture.png";
-		}
-	}
-
-	public static boolean isAddiWpt(int type){
-		return (type >= 50 && type <= 55);
-	}
-
-	public static int typeText2Number(String typeText){
-		if (typeText.equals("Traditional Cache") || typeText.equals("Traditional")|| typeText.equals("Classic")) return 2;
-		if (typeText.equals("Multi-cache") || typeText.equals("Multi") || typeText.equals("Offset")) return 3;
-		if (typeText.equals("Virtual Cache") || typeText.equals("Virtual")) return 4;
-		if (typeText.equals("Letterbox Hybrid")) return 5;
-		if (typeText.equals("Event Cache") || typeText.equals("Event")) return 6;
-		if (typeText.equals("Unknown Cache") || typeText.equals("Other") || typeText.equals("Quiz")) return 8;
-		if (typeText.equals("Webcam Cache") || typeText.equals("Webcam")) return 11;
-		if (typeText.equals("Locationless (Reverse) Cache")) return 12;
-		if (typeText.equals("Cache In Trash Out Event")) return 13;
-		if (typeText.equals("Earthcache") || typeText.equals("Earth")) return 137;
-		if (typeText.equals("Mega-Event Cache")) return 453;
-		if (typeText.equals("Wherigo Cache")) return 1858;
-		if (typeText.equals("Waypoint|Parking Area")) return 50;
-		if (typeText.equals("Waypoint|Stages of a Multicache")) return 51;
-		if (typeText.equals("Waypoint|Question to Answer")) return 52;
-		if (typeText.equals("Waypoint|Final Coordinates")||typeText.equals("Waypoint|Final Location")) return 53;
-		if (typeText.equals("Waypoint|Trailhead")) return 54;
-		if (typeText.equals("Waypoint|Reference Point")) return 55;
-		Vm.debug("Unknown Cache Type:" + typeText);
-		return 0;
-	}
-
-	/**
-		*	Method to translate opencaching types to geocaching types.
-		*	Required to be "backwards" compatible :-(
-		*	OC		GC		Comment		Regel
-		*	1		8		Other			1->8
-		*	2		2		Traditional		2->2
-		*	3		3		Multi			3->3
-		*	4		4		Virtual		4->4
-		*	5		11		Webcam		5->11
-		*	6		6		Event			6->6
-		*	7		8		Quiz			7->8
-		*	8		??		Math			8->108 (ok)
-		*	9		??		Moving		9->109 (ok)
-		*	10		??		Drive-In		10->110 (ok)
-		*/
-		public static int transOCType(int type){
-			if(type == 1) return 8;
-			if(type == 2) return 2;
-			if(type == 3) return 3;	
-			if(type == 4) return 4;
-			if(type == 5) return 11;
-			if(type == 6) return 6;
-			if(type == 7) return 8;
-			if(type >= 8 || type <= 10) return 8;
-	/* Not supportet at the moment
-			if(type.equals("8")) return "108";
-			if(type.equals("9")) return "109";
-			if(type.equals("10")) return "110";
-	*/
-			//no match found? return custom type!
-			return 0;
-		}
-
-		
-	public static Image cache2Img(int cacheType) {
-		int index = cacheType;
-		switch (cacheType) {
-			case 1858: index =  WHERIGO; break;
-			case 453:  index =  MEGA_EVENT; break;
-		}
-		return cacheImages[index];
-	}
-	
-	/**
-	 * Packs the cache type into the range of a byte. For the int values which don't fit in the 
-	 * byte range, some conversion has to be done.
-	 * @param cacheType Cache Type as integer
-	 * @return A corresponding byte value. 
-	 */
-	public static byte toByte(int cacheType) {
-		int result = cacheType-128;
-		switch (cacheType) {
-			case 1858: result =  WHERIGO; break;
-			case 453:  result =  MEGA_EVENT; break;
-			default: result = cacheType-128;
-		}
-		return (byte)(result);
-	}
-	
-	/**
-	 * Unpacks the cache type from byte to int. 
-	 * @param cacheType Cache type as byte
-	 * @return The cache type as int
-	 */
-	public static int toInt(byte cacheType) {
-		int result;
-		switch (cacheType) {
-		case WHERIGO:     result =  1858; break;
-		case MEGA_EVENT:  result =  453; break;
-		default: result = cacheType+128;
-		}
-		return result;
-	}
-	
-
-}
+package CacheWolf;
+
+/**
+ * Handels all aspects of converting cache type information from
+ * and to the various im- and exporters as well as for converting
+ * legavy profiles to current standard
+ * 
+ * Do not instantiate this class, only use it in a static way
+ */
+public final class CacheType {
+	
+	/** custom waypoint */
+	public static final byte CW_TYPE_CUSTOM = 0;
+	/** traditional cache (GC,OC) */
+	public static final byte CW_TYPE_TRADITIONAL = 2;
+	/** multi cache (GC,OC) */
+	public static final byte CW_TYPE_MULTI = 3;
+	/** virtual cache (GC) */
+	public static final byte CW_TYPE_VIRTUAL = 4;
+	/** letterbox cache (GC) */
+	public static final byte CW_TYPE_LETTERBOX = 5;
+	/** event cache (OC,GC) */
+	public static final byte CW_TYPE_EVENT = 6;
+	/** quiz cache (OC) */
+	public static final byte CW_TYPE_QUIZ = 7;
+	/** unknown cache (GC) */
+	public static final byte CW_TYPE_UNKNOWN = 8;
+	/** math cache (OC) */
+	public static final byte CW_TYPE_MATH = 108;
+	/** moving cache (OC) */
+	public static final byte CW_TYPE_MOVING = 9;
+	/** drive in cache (OC) */
+	public static final byte CW_TYPE_DRIVE_IN = 10;
+	/** webcam cache (GC,OC) */
+	public static final byte CW_TYPE_WEBCAM = 11;
+	/** locationless cache (GC) */
+	public static final byte CW_TYPE_LOCATIONLESS = 12;
+	/** CITO cache (GC,OC)*/
+	public static final byte CW_TYPE_CITO = 13;
+	/** Additional Waypoint Parking (GC) */
+	public static final byte CW_TYPE_PARKING = 50;
+	/** Additional Waypoint Stage of a Multi (GC) */
+	public static final byte CW_TYPE_STAGE = 51;
+	/** Additional Waypoint Question to answer (GC) */
+	public static final byte CW_TYPE_QUESTION = 52;
+	/** Additional Waypoint Final (GC) */
+	public static final byte CW_TYPE_FINAL = 53;
+	/** Additional Waypoint Trailhead (GC) */
+	public static final byte CW_TYPE_TRAILHEAD = 54;
+	/** Additional Waypoint Reference (GC) */
+	public static final byte CW_TYPE_REFERENCE = 55;
+	/** Mega Event Cache (GC) */
+	public static final byte CW_TYPE_MEGA_EVENT = 100;
+	/** WhereIGo Cache (GC) */
+	public static final byte CW_TYPE_WHEREIGO = 101;
+	/** Project Ape cache (GC)*/
+	public static final byte CW_TYPE_APE = 102;
+	/** Adenture Maze Exhibit (GC)*/
+	public static final byte CW_TYPE_MAZE = 103;
+	/** Earth Cache (GC) */
+	public static final byte CW_TYPE_EARTH = 104;
+	/** unrecognized cache type or missing information, should throw IllegalArgumentExceptions when found */
+	public static final byte CW_TYPE_ERROR = -1;
+	
+	/** image for custom waypoints */
+	public static final String CW_GUIIMG_CUSTOM = "0.png";
+	/** image for traditional cache (GC,OC) */
+	public static final String CW_GUIIMG_TRADITIONAL = "2.png";
+	/** image for multi cache (GC,OC) */
+	public static final String CW_GUIIMG_MULTI = "3.png";
+	/** image for virtual cache (GC) */
+	public static final String CW_GUIIMG_VIRTUAL = "4.png";
+	/** image for letterbox cache (GC) */
+	public static final String CW_GUIIMG_LETTERBOX = "5.png";
+	/** image for event cache (OC,GC) */
+	public static final String CW_GUIIMG_EVENT = "6.png";
+	/** image for quiz cache (OC) */
+	public static final String CW_GUIIMG_QUIZ = "8.png";
+	/** image for unknown cache (GC) */
+	public static final String CW_GUIIMG_UNKNOWN = "8.png";
+	/** image for math cache (OC) */
+	public static final String CW_GUIIMG_MATH = "108.png";
+	/** image for moving cache (OC) */
+	public static final String CW_GUIIMG_MOVING = "109.png";
+	/** image for drive in cache (OC) */
+	public static final String CW_GUIIMG_DRIVE_IN = "110.png";
+	/** image for webcam cache (GC,OC) */
+	public static final String CW_GUIIMG_WEBCAM = "11.png";
+	/** image for locationless cache (GC) */
+	public static final String CW_GUIIMG_LOCATIONLESS = "12.png";
+	/** image for CITO cache (GC,OC)*/
+	public static final String CW_GUIIMG_CITO = "13.png";
+	/** image for Additional Waypoint Parking (GC) */
+	public static final String CW_GUIIMG_PARKING = "pkg.png";
+	/** image for Additional Waypoint Stage of a Multi (GC) */
+	public static final String CW_GUIIMG_STAGE = "stage.png";
+	/** image for Additional Waypoint Question to answer (GC) */
+	public static final String CW_GUIIMG_QUESTION = "puzzle.png";
+	/** image for Additional Waypoint Final (GC) */
+	public static final String CW_GUIIMG_FINAL = "flag.png";
+	/** image for Additional Waypoint Trailhead (GC) */
+	public static final String CW_GUIIMG_TRAILHEAD = "trailhead.png";
+	/** image for Additional Waypoint Reference Point (GC) */
+	public static final String CW_GUIIMG_REFERENCE = "waypoint.png";
+	/** image for Mega Event Cache (GC) */
+	public static final String CW_GUIIMG_MEGA_EVENT = "453.png";
+	/** image for WhereIGo Cache (GC) */
+	public static final String CW_GUIIMG_WHEREIGO = "1858.png";
+	/** image for Project Ape cache (GC)*/
+	public static final String CW_GUIIMG_APE = "typeApe.png";
+	/** image for Adenture Maze Exhibit (GC)*/
+	public static final String CW_GUIIMG_MAZE = "typeMaze.png";
+	/** image for Earth Cache (GC) */
+	public static final String CW_GUIIMG_EARTH = "137.png";
+	
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_CUSTOM = "Custom";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_TRADI = "Tradi";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_MULTI = "Multi";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_VIRTUAL = "Virtual";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_LETTERBOX = "Letterbox";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_EVENT = "Event";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_MEGAEVENT = "Mega Event";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_WEBCAM = "Webcam";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_UNKNOWN = "Mystery";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_LOCATIONLESS = "Locationless";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_CITO = "CITO";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_EARTH = "Earthcache";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_WHEREIGO = "WherIGo";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_PARKING = "Addi: Parking";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_STAGE = "Addi: Stage";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_QUESTION = "Addi: Question";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_FINAL = "Addi: Final";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_TRAILHEAD = "Addi: Trailhead";
+	/** GUI string for custom waypoit */
+	public static final String CW_GUISTR_REFERENCE = "Addi: Reference";
+	
+	/** GPX identifier for Traditional caches */
+	public static final String GC_GPX_TRADITIONAL = "Traditional Cache";
+	/** GPX identifier for Multi caches */
+	public static final String GC_GPX_MULTI = "Multi-cache";
+	/** GPX identifier for virtual caches */
+	public static final String GC_GPX_VIRTUAL = "Virtual Cache";
+	/** GPX identifier for Letterbox hybrids */
+	public static final String GC_GPX_LETTERBOX = "Letterbox Hybrid";
+	/** GPX identifier for Event caches */
+	public static final String GC_GPX_EVENT = "Event Cache";
+	/** GPX identifier for Unknown or Mystery caches */ 
+	public static final String GC_GPX_UNKNOWN = "Unknown Cache";
+	/** GPX identifier for Webcam caches */
+	public static final String GC_GPX_WEBCAM = "Webcam Cache";
+	/** GPX identifier for Locationless caches */
+	public static final String GC_GPX_LOCATIONLESS = "Locationless (Reverse) Cache";
+	/** GPX identifier for CITO events */
+	public static final String GC_GPX_CITO = "Cache In Trash Out Event";
+	/** GPX identifier for Earth caches */
+	public static final String GC_GPX_EARTH = "Earthcache";
+	/** GPX identifier for Mega Events */
+	public static final String GC_GPX_MEGA_EVENT = "Mega-Event Cache";
+	/** GPX identifier for WhereIGo caches */
+	public static final String GC_GPX_WHEREIGO = "Wherigo Cache";
+	/** GPX identifier for additional waypoint Parking */
+	public static final String GC_GPX_PARKING = "Waypoint|Parking Area";
+	/** GPX identifier for additional waypoint Stage */
+	public static final String GC_GPX_STAGE = "Waypoint|Stages of a Multicache";
+	/** GPX identifier for additional waypoint QTA */
+	public static final String GC_GPX_QUESTION = "Waypoint|Question to Answer";
+	/** GPX identifier for additional waypoint Final */
+	public static final String GC_GPX_FINAL = "Waypoint|Final Coordinates";
+	/** GPX identifier for additional waypoint Trailhead */
+	public static final String GC_GPX_TRAILHEAD = "Waypoint|Trailhead";
+	/** GPX identifier for additional waypoint Reference Point */
+	public static final String GC_GPX_REFERENCE = "Waypoint|Reference Point";
+	/** GPX identifier for additional waypoint Adventure Maze Exhibit Events */
+	public static final String GC_GPX_MAZE = "GPS Adventures Exhibit"; 
+	/** GPX identifier for additional waypoint Project Ape caches */
+	public static final String GC_GPX_APE = "Project APE Cache"; 
+	
+	/**  constructor does nothing */
+	public CacheType() {
+
+	}
+	
+	/**
+	 * translate cache type to a short version for compact exporters or "smart" cache names. 
+	 * @param type CacheWolf internal type information
+	 * @return abbreviation of cache type
+	 * @throws IllegalArgumentException if <code>type</code> can not be mapped
+	 */
+	public static String getExportShortId(byte type) throws IllegalArgumentException {
+		switch (type){
+		case CW_TYPE_CUSTOM: return "C";
+		case CW_TYPE_TRADITIONAL: return "T";
+		case CW_TYPE_MULTI: return "M";
+		case CW_TYPE_VIRTUAL: return "V";
+		case CW_TYPE_LETTERBOX: return "L";
+		case CW_TYPE_EVENT: return "X";
+		case CW_TYPE_WEBCAM: return "W";
+		case CW_TYPE_UNKNOWN: return "U";
+		case CW_TYPE_LOCATIONLESS: return "O";
+		case CW_TYPE_CITO: return "X";
+		case CW_TYPE_EARTH: return "E";
+		case CW_TYPE_MEGA_EVENT: return "X";
+		case CW_TYPE_WHEREIGO: return "G";
+		case CW_TYPE_PARKING: return "P";
+		case CW_TYPE_STAGE: return "S";
+		case CW_TYPE_QUESTION: return "Q";
+		case CW_TYPE_FINAL: return "F";
+		case CW_TYPE_TRAILHEAD: return "H";
+		case CW_TYPE_REFERENCE: return "R";
+		case CW_TYPE_APE: return "T";
+		case CW_TYPE_MAZE: return "X";
+		default: throw new IllegalArgumentException("unmatched argument "+type+" in CacheSizeNew getExportShortId()");
+		}
+	}
+	
+	/**
+	 * convert version1 type information to current values
+	 * @param type version1 cache type information
+	 * @return current version cache type information
+	 * @throws IllegalArgumentException if <code>size</code> can not be mapped to internal representation
+	 * @deprecated remove once v1 file version compatibility is abandoned
+	 */
+	public static final byte v1Converter(String type) throws IllegalArgumentException  {
+		if (type.equals("0")) return CW_TYPE_CUSTOM;
+		if (type.equals("2")) return CW_TYPE_TRADITIONAL;
+		if (type.equals("3")) return CW_TYPE_MULTI;
+		if (type.equals("4")) return CW_TYPE_VIRTUAL;
+		if (type.equals("5")) return CW_TYPE_LETTERBOX;
+		if (type.equals("6")) return CW_TYPE_EVENT;
+		if (type.equals("8")) return CW_TYPE_UNKNOWN;
+		if (type.equals("11")) return CW_TYPE_WEBCAM;
+		if (type.equals("12")) return CW_TYPE_LOCATIONLESS;
+		if (type.equals("50")) return CW_TYPE_PARKING;
+		if (type.equals("51")) return CW_TYPE_STAGE;
+		if (type.equals("52")) return CW_TYPE_QUESTION;
+		if (type.equals("53")) return CW_TYPE_FINAL;
+		if (type.equals("54")) return CW_TYPE_TRAILHEAD;
+		if (type.equals("55")) return CW_TYPE_REFERENCE;
+		if (type.equals("453")) return CW_TYPE_MEGA_EVENT;
+		if (type.equals("1858")) return CW_TYPE_WHEREIGO;
+		if (type.equals("137")) return CW_TYPE_EARTH;
+		
+		throw new IllegalArgumentException("unmatched argument "+type+" in CacheSizeNew v1Converter()");
+	}
+
+	/**
+	 * convert version1 type information to current values
+	 * @param type version2 cache type information
+	 * @return current version cache type information
+	 * @throws IllegalArgumentException if <code>size</code> can not be mapped to internal representation
+	 * @deprecated remove once v2 file version compatibility is abandoned
+	 */
+	public static final byte v2Converter(byte type) throws IllegalArgumentException  {
+		switch (type) {
+		case -128: return CW_TYPE_CUSTOM;
+		case -126: return CW_TYPE_TRADITIONAL;
+		case -125: return CW_TYPE_MULTI;
+		case -124: return CW_TYPE_VIRTUAL;
+		case -123: return CW_TYPE_LETTERBOX;
+		case -122: return CW_TYPE_EVENT;
+		case -121: return CW_TYPE_QUIZ;
+		case -120: return CW_TYPE_UNKNOWN;
+		case -119: return CW_TYPE_MOVING;
+		case -118: return CW_TYPE_DRIVE_IN;
+		case -117: return CW_TYPE_WEBCAM;
+		case -116: return CW_TYPE_LOCATIONLESS;
+		case -115: return CW_TYPE_CITO;
+		case -78: return CW_TYPE_PARKING;
+		case -77: return CW_TYPE_STAGE;
+		case -76: return CW_TYPE_QUESTION;
+		case -75: return CW_TYPE_FINAL;
+		case -74: return CW_TYPE_TRAILHEAD;
+		case -73: return CW_TYPE_REFERENCE;
+		case 101: return CW_TYPE_MEGA_EVENT;
+		case 100: return CW_TYPE_WHEREIGO;
+		case 9: return CW_TYPE_EARTH;
+		default: throw new IllegalArgumentException("unmatched argument "+type+" in CacheSizeNew v2Converter()");
+		}
+	}
+	
+	/**
+	 * check if a given waypoint type is an additional waypoint
+	 * @param type waypoint type to check 
+	 * @return true if it is an additional waypint, false otherwise
+	 */
+	public static final boolean isAddiWpt(byte type) {
+		switch (type) {
+		case CW_TYPE_PARKING: // fall through
+		case CW_TYPE_STAGE: // fall through
+		case CW_TYPE_QUESTION: // fall through
+		case CW_TYPE_FINAL: // fall through
+		case CW_TYPE_TRAILHEAD: // fall through
+		case CW_TYPE_REFERENCE: return true;
+		default: return false;
+		}
+		
+	}
+	
+	/**
+	 * create list of cache types to be shown in GUI drop down lists
+	 * @return list of cache types to be shown in GUI drop down list
+	 * @see guiSelect2Cw
+	 * @see cw2GuiSelect
+	 */
+	//TODO: move to a class "closer" to the gui?
+	public static final String[] guiTypeStrings() {
+		String ret[] = new String[] {
+				CW_GUISTR_CUSTOM,
+				CW_GUISTR_TRADI,
+				CW_GUISTR_MULTI,
+				CW_GUISTR_VIRTUAL,
+				CW_GUISTR_LETTERBOX,
+				CW_GUISTR_EVENT,
+				CW_GUISTR_MEGAEVENT,
+				CW_GUISTR_WEBCAM,
+				CW_GUISTR_UNKNOWN,
+				CW_GUISTR_LOCATIONLESS,
+				CW_GUISTR_CITO,
+				CW_GUISTR_EARTH,
+				CW_GUISTR_WHEREIGO,
+				CW_GUISTR_PARKING,
+				CW_GUISTR_STAGE,
+				CW_GUISTR_QUESTION,
+				CW_GUISTR_FINAL,
+				CW_GUISTR_TRAILHEAD,
+				CW_GUISTR_REFERENCE
+			};
+		return ret;
+	}
+	
+	/**
+	 * translate GUI drop down index selection back to internally stored type
+	 * @param selection index value from drop down list
+	 * @return internal type
+	 * @throws IllegalArgumentException if <code>selection</code> can not be matched
+	 * @see guiTypeStrings
+	 * @see cw2GuiSelect
+	 */
+	//TODO: move to a class "closer" to the gui?
+	public static final byte guiSelect2Cw(int selection) throws IllegalArgumentException {
+		// make sure to reflect the order of guiTypeStrings()
+		switch (selection) {
+		case  0: return CW_TYPE_CUSTOM;
+		case  1: return CW_TYPE_TRADITIONAL;
+		case  2: return CW_TYPE_MULTI;
+		case  3: return CW_TYPE_VIRTUAL;
+		case  4: return CW_TYPE_LETTERBOX;
+		case  5: return CW_TYPE_EVENT;
+		case  6: return CW_TYPE_MEGA_EVENT;
+		case  7: return CW_TYPE_WEBCAM;
+		case  8: return CW_TYPE_UNKNOWN;
+		case  9: return CW_TYPE_LOCATIONLESS;
+		case 10: return CW_TYPE_CITO;
+		case 11: return CW_TYPE_EARTH;
+		case 12: return CW_TYPE_WHEREIGO;
+		case 13: return CW_TYPE_PARKING;
+		case 14: return CW_TYPE_STAGE;
+		case 15: return CW_TYPE_QUESTION;
+		case 16: return CW_TYPE_FINAL;
+		case 17: return CW_TYPE_TRAILHEAD;
+		case 18: return CW_TYPE_REFERENCE;
+		default: throw new IllegalArgumentException("unmatched argument "+selection+" in CacheSize guiSelect2Cw()");
+		}
+	}
+	
+	/**
+	 * translate cache type to position of index to highlight in GUI cache type drop down list 
+	 * @param id internal id of cache type
+	 * @return index of the cache type in GUI list
+	 * @throws IllegalArgumentException if <code>id</code> can not be matched
+	 * @see guiTypeStrings
+	 * @see guiSelect2Cw
+	 */
+	//TODO: move to a class "closer" to the gui?
+	public static final int cw2GuiSelect(byte id) throws IllegalArgumentException {
+		switch (id) {
+		case CW_TYPE_CUSTOM: return 0;
+		case CW_TYPE_TRADITIONAL: return 1;
+		case CW_TYPE_MULTI: return 2;
+		case CW_TYPE_VIRTUAL: return 3;
+		case CW_TYPE_LETTERBOX: return 4;
+		case CW_TYPE_EVENT: return 5;
+		case CW_TYPE_MEGA_EVENT: return 6;
+		case CW_TYPE_WEBCAM: return 7;
+		case CW_TYPE_UNKNOWN: return 8;
+		case CW_TYPE_LOCATIONLESS: return 9;
+		case CW_TYPE_CITO: return 10;
+		case CW_TYPE_EARTH: return 11;
+		case CW_TYPE_WHEREIGO: return 12;
+		case CW_TYPE_PARKING: return 13;
+		case CW_TYPE_STAGE: return 14;
+		case CW_TYPE_QUESTION: return 15;
+		case CW_TYPE_FINAL: return 16;
+		case CW_TYPE_TRAILHEAD: return 17;
+		case CW_TYPE_REFERENCE: return 18;
+		default: throw new IllegalArgumentException("unmatched argument "+id+" in CacheSize cw2GuiSelect()");
+		}
+	}
+	
+	/**
+	 * convert the strings found in import of GPX from GC, OC or TC to internal cache type 
+	 * @param gpxType type information found in GPX
+	 * @return internal cache type
+	 * @throws IllegalArgumentException if <code>gpxType</code> can not be matched
+	 */
+	public static final byte gpxType2CwType(String gpxType) throws IllegalArgumentException {
+		if (gpxType.equals(GC_GPX_TRADITIONAL) || gpxType.equals("Traditional")|| gpxType.equals("Classic")) return CW_TYPE_TRADITIONAL;
+		if (gpxType.equals(GC_GPX_MULTI) || gpxType.equals("Multi") || gpxType.equals("Offset")) return CW_TYPE_MULTI;
+		if (gpxType.equals(GC_GPX_VIRTUAL) || gpxType.equals("Virtual")) return CW_TYPE_VIRTUAL;
+		if (gpxType.equals(GC_GPX_LETTERBOX)) return CW_TYPE_LETTERBOX;
+		if (gpxType.equals(GC_GPX_EVENT) || gpxType.equals("Event")) return CW_TYPE_EVENT;
+		if (gpxType.equals(GC_GPX_UNKNOWN) || gpxType.equals("Other") || gpxType.equals("Quiz")) return CW_TYPE_UNKNOWN;
+		if (gpxType.equals(GC_GPX_WEBCAM) || gpxType.equals("Webcam")) return CW_TYPE_WEBCAM;
+		if (gpxType.equals(GC_GPX_LOCATIONLESS)) return CW_TYPE_LOCATIONLESS;
+		if (gpxType.equals(GC_GPX_CITO)) return CW_TYPE_CITO;
+		if (gpxType.equals(GC_GPX_EARTH) || gpxType.equals("Earth")) return CW_TYPE_EARTH;
+		if (gpxType.equals(GC_GPX_MEGA_EVENT)) return CW_TYPE_MEGA_EVENT;
+		if (gpxType.equals(GC_GPX_WHEREIGO)) return CW_TYPE_WHEREIGO;
+		if (gpxType.equals(GC_GPX_PARKING)) return CW_TYPE_PARKING;
+		if (gpxType.equals(GC_GPX_STAGE)) return CW_TYPE_STAGE;
+		if (gpxType.equals(GC_GPX_QUESTION)) return CW_TYPE_QUESTION;
+		if (gpxType.equals(GC_GPX_FINAL)||gpxType.equals("Waypoint|Final Location")) return CW_TYPE_FINAL;
+		if (gpxType.equals(GC_GPX_TRAILHEAD)) return CW_TYPE_TRAILHEAD;
+		if (gpxType.equals(GC_GPX_REFERENCE)) return CW_TYPE_REFERENCE;
+		if (gpxType.equals(GC_GPX_MAZE)) return CW_TYPE_MAZE;
+		if (gpxType.equals(GC_GPX_APE)) return CW_TYPE_APE;
+		throw new IllegalArgumentException("unmatched argument "+gpxType+" in CacheSize gpxType2CwType()");
+	}
+	
+	/**
+	 * convert the cache type information from an OC XML import to internal cache type
+	 * @param ocType cache type found in OC XML
+	 * @return internal cache type
+	 * @throws IllegalArgumentException if <code>ocType</code> can not be macthed
+	 */
+	public static final byte ocType2CwType(String ocType) throws IllegalArgumentException {
+		if(ocType.equals("1")) return CW_TYPE_UNKNOWN;
+		if(ocType.equals("2")) return CW_TYPE_TRADITIONAL;
+		if(ocType.equals("3")) return CW_TYPE_MULTI;	
+		if(ocType.equals("4")) return CW_TYPE_VIRTUAL;
+		if(ocType.equals("5")) return CW_TYPE_WEBCAM;
+		if(ocType.equals("6")) return CW_TYPE_EVENT;
+		if(ocType.equals("7")) return CW_TYPE_UNKNOWN;
+		if(ocType.equals("8")) return CW_TYPE_UNKNOWN;
+		if(ocType.equals("9")) return CW_TYPE_UNKNOWN;
+		if(ocType.equals("10")) return CW_TYPE_UNKNOWN;
+		throw new IllegalArgumentException("unmatched argument "+ocType+" in CacheSize ocType2CwType()");
+	}
+	
+	/**
+	 * convert type information discovered by GC spider to internal type information
+	 * @param gcType type information from GC spider
+	 * @return internal representation of cache type
+	 * @throws IllegalArgumentException if <code>gcType</code> can not be matched
+	 */
+	public static final byte gcSpider2CwType(String gcType) throws IllegalArgumentException {
+		if (gcType.equals("2")) { return CW_TYPE_TRADITIONAL; }
+		if (gcType.equals("3")) { return CW_TYPE_MULTI; }
+		if (gcType.equals("4")) { return CW_TYPE_VIRTUAL; }
+		if (gcType.equals("5")) { return CW_TYPE_LETTERBOX; }
+		if (gcType.equals("6")) { return CW_TYPE_EVENT; }
+		if (gcType.equals("8")) { return CW_TYPE_UNKNOWN; }
+		if (gcType.equals("9")) { return CW_TYPE_APE; }
+		if (gcType.equals("11")) { return CW_TYPE_WEBCAM; }
+		if (gcType.equals("12")) { return CW_TYPE_LOCATIONLESS; }
+		if (gcType.equals("13")) { return CW_TYPE_CITO; }
+		if (gcType.equals("137")) { return CW_TYPE_EARTH; }
+		if (gcType.equals("453")) { return CW_TYPE_MEGA_EVENT; }
+		if (gcType.equals("1304")) { return CW_TYPE_MAZE; }
+		if (gcType.equals("1858")) { return CW_TYPE_WHEREIGO; }
+		throw new IllegalArgumentException("unmatched argument "+gcType+" in CacheSize gcSpider2CwType()");
+	}
+	
+	/**
+	 * map cache types to images
+	 * @param id internal cache type id
+	 * @return non qualified name of image
+	 * @throws IllegalArgumentException if <code>id</code> can not be matched
+	 */
+	public static final String typeImageForId(byte id) throws IllegalArgumentException {
+		switch (id) {
+		case CW_TYPE_CUSTOM: return "CW_GUIIMG_CUSTOM";
+		case CW_TYPE_TRADITIONAL: return CW_GUIIMG_TRADITIONAL;
+		case CW_TYPE_MULTI: return CW_GUIIMG_MULTI;
+		case CW_TYPE_VIRTUAL: return CW_GUIIMG_VIRTUAL;
+		case CW_TYPE_LETTERBOX: return CW_GUIIMG_LETTERBOX;
+		case CW_TYPE_EVENT: return CW_GUIIMG_EVENT;
+		case CW_TYPE_WEBCAM: return CW_GUIIMG_WEBCAM;
+		case CW_TYPE_UNKNOWN: return CW_GUIIMG_UNKNOWN;
+		case CW_TYPE_LOCATIONLESS: return CW_GUIIMG_LOCATIONLESS;
+		case CW_TYPE_CITO: return CW_GUIIMG_CITO;
+		case CW_TYPE_EARTH: return CW_GUIIMG_EARTH;
+		case CW_TYPE_MEGA_EVENT: return CW_GUIIMG_MEGA_EVENT;
+		case CW_TYPE_WHEREIGO: return CW_GUIIMG_WHEREIGO;
+		case CW_TYPE_PARKING: return CW_GUIIMG_PARKING;
+		case CW_TYPE_STAGE: return CW_GUIIMG_STAGE;
+		case CW_TYPE_QUESTION: return CW_GUIIMG_QUESTION;
+		case CW_TYPE_FINAL: return CW_GUIIMG_FINAL;
+		case CW_TYPE_TRAILHEAD: return CW_GUIIMG_TRAILHEAD;
+		case CW_TYPE_REFERENCE: return CW_GUIIMG_REFERENCE;
+		case CW_TYPE_APE: return CW_GUIIMG_APE;
+		case CW_TYPE_MAZE: return CW_GUIIMG_MAZE;
+		default: throw new IllegalArgumentException("unmatched argument "+id+" in CacheSize typeImageForId()");
+		}
+	}
+	
+	/**
+	 * generate type description matching those of GC for GPX export
+	 * @param id internal type id
+	 * @return type information in GC.com GPX format 
+	 * @throws IllegalArgumentException
+	 */
+	public static final String id2GpxString(byte id) throws IllegalArgumentException {
+		switch (id) {
+		case CW_TYPE_TRADITIONAL: return GC_GPX_TRADITIONAL;
+		case CW_TYPE_MULTI: return GC_GPX_MULTI;
+		case CW_TYPE_VIRTUAL: return GC_GPX_VIRTUAL;
+		case CW_TYPE_LETTERBOX: return GC_GPX_LETTERBOX;
+		case CW_TYPE_EVENT: return GC_GPX_EVENT;
+		case CW_TYPE_UNKNOWN: return GC_GPX_UNKNOWN;
+		case CW_TYPE_WEBCAM: return GC_GPX_WEBCAM;
+		case CW_TYPE_LOCATIONLESS: return GC_GPX_LOCATIONLESS;
+		case CW_TYPE_CITO: return GC_GPX_CITO;
+		case CW_TYPE_EARTH: return GC_GPX_EARTH;
+		case CW_TYPE_MEGA_EVENT: return GC_GPX_MEGA_EVENT;
+		case CW_TYPE_WHEREIGO: return GC_GPX_WHEREIGO;
+		case CW_TYPE_PARKING: return GC_GPX_PARKING;
+		case CW_TYPE_STAGE: return GC_GPX_STAGE;
+		case CW_TYPE_QUESTION: return GC_GPX_QUESTION;
+		case CW_TYPE_FINAL: return GC_GPX_FINAL;
+		case CW_TYPE_TRAILHEAD: return GC_GPX_TRAILHEAD;
+		case CW_TYPE_REFERENCE: return GC_GPX_REFERENCE;
+		case CW_TYPE_MAZE: return GC_GPX_MAZE;
+		case CW_TYPE_APE: return GC_GPX_APE;
+		default: throw new IllegalArgumentException("unmatched argument "+id+" in CacheSize id2GpxString()");
+		}
+		
+	}
+	
+	//TODO: do we actually need this one
+	/**
+	 * generate human readable type description for exporters
+	 * @param id internal type id
+	 * @return human readable description of waypoint type for exporters  
+	 * @throws IllegalArgumentException if <code>id</code> is not a valid cache type
+	 */
+	public static final String cw2ExportString(byte id) throws IllegalArgumentException {
+		String ret;
+		try {
+			ret = id2GpxString(id);
+			// check for | in additional waypoints and only use the string after |
+			int pipePosistion = ret.indexOf("|");
+			if (pipePosistion > -1) {
+				ret = ret.substring(pipePosistion);
+			}
+		} catch (IllegalArgumentException ex) {
+			ret = "";
+		}
+		return ret;
+	}
+}

Modified: trunk/src/CacheWolf/CalcPanel.java
===================================================================
--- trunk/src/CacheWolf/CalcPanel.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/CalcPanel.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -62,9 +62,9 @@
 		cacheDB = profile.cacheDB;
 		
 		
-		TopP.addNext(chkDD =new mCheckBox("d.d?"),CellConstants.DONTSTRETCH, CellConstants.WEST);
-		TopP.addNext(chkDMM =new mCheckBox("d?m.m\'"),CellConstants.DONTSTRETCH, CellConstants.WEST);
-		TopP.addNext(chkDMS =new mCheckBox("d?m\'s\""),CellConstants.DONTSTRETCH,CellConstants.WEST);
+		TopP.addNext(chkDD =new mCheckBox("d.d???"),CellConstants.DONTSTRETCH, CellConstants.WEST);
+		TopP.addNext(chkDMM =new mCheckBox("d???m.m\'"),CellConstants.DONTSTRETCH, CellConstants.WEST);
+		TopP.addNext(chkDMS =new mCheckBox("d???m\'s\""),CellConstants.DONTSTRETCH,CellConstants.WEST);
 		TopP.addNext(chkUTM =new mCheckBox("UTM"),CellConstants.DONTSTRETCH, CellConstants.WEST);
 		TopP.addLast(chkGK =new mCheckBox("GK"),CellConstants.DONTSTRETCH, CellConstants.WEST);
 
@@ -200,7 +200,7 @@
 				coordOut = coordInp.project(bd.degrees, bd.distance);
 				ch.LatLon = coordOut.toString();
 				ch.pos.set(coordOut);
-				ch.setType(51); // see CacheType.GC_AW_STAGE_OF_MULTI // TODO unfertig
+				ch.setType(CacheType.CW_TYPE_STAGE); // TODO unfertig
 				mainT.newWaypoint(ch);
 			}
 			

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/DetailsPanel.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -17,7 +17,7 @@
 	mInput inpHidden = new mInput();
 	mInput inpOwner = new mInput();
 	mButton btnDelete,btnCenter, btnAddDateTime;
-	mChoice chcType = new mChoice(new String[]{"Custom", "Traditional", "Multi", "Virtual", "Letterbox", "Event", "Mega Event", "Mystery", "Webcam", "Locationless", "CITO", "Earthcache", "wherIGo", "Addi: Parking", "Addi: Stage", "Addi: Question", "Addi: Final","Addi: Trailhead","Addi: Reference"},0);
+	mChoice chcType = new mChoice(CacheType.guiTypeStrings(),0);
 	mChoice chcSize = new mChoice(CacheSize.guiSizeStrings(),0);
 	mComboBox chcStatus = new mComboBox(new String[]{"", MyLocale.getMsg(313,"Flag 1"), MyLocale.getMsg(314,"Flag 2"), MyLocale.getMsg(315,"Flag 3"), MyLocale.getMsg(316,"Flag 4"), MyLocale.getMsg(317,"Search"), MyLocale.getMsg(318,"Found"), MyLocale.getMsg(319,"Not Found"), MyLocale.getMsg(320,"Owner")},0);
 	mButton btnNewWpt, btnShowBug, btnShowMap, btnGoto, btnAddPicture, btnBlack, btnNotes, btnSave, btnCancel;
@@ -189,7 +189,7 @@
 			// If the cache status contains a date, do not overwrite it with 'found' message
 			if(ch.is_found() == true) chcStatus.setText(MyLocale.getMsg(318,"Found"));
 		}
-		chcType.setInt(transType(ch.getType()));
+		chcType.setInt(CacheType.cw2GuiSelect(ch.getType()));
 		if(ch.is_black()){
 			btnBlack.image = imgBlack;
 		} else {
@@ -217,87 +217,14 @@
 		if(isBigScreen)	mNotes.setText(ch.getExistingDetails().getCacheNotes());
 	}
 	
-	
 	/**
-	*	Translate the cache type to the value in the cache type dropdown
-	*	control.
-	*/
-	private int transType(int type){
-		// TODO Hab ich so eine ?bersetzungstabelle nicht schon an anderer Stelle gesehen ??? Redundanz ??
-		int c_type = 0;
-		int tt = 0;
-		tt = type;
-		switch(tt){
-			case 0: c_type = 0; break;
-			case 2: c_type = 1; break;
-			case 3: c_type = 2; break;
-			case 4: c_type = 3; break;
-			case 5: c_type = 4; break;
-			case 6: c_type = 5; break;
-			case 453: c_type = 6;break;
-			case 8: c_type = 7; break;
-			case 11: c_type = 8; break; //Earth
-			case 12: c_type = 9; break;
-			case 13: c_type = 10; break;
-			case 137: c_type = 11;break;
-			case 1858: c_type = 12; break;
-			case 50: c_type = 13;break;
-			case 51: c_type = 14;break;
-			case 52: c_type = 15;break;
-			case 53: c_type = 16;break;
-			case 54: c_type = 17;break;
-			case 55: c_type = 18;break;
-
-			default: Vm.debug("Unknown cachetype: " + type);
-					break;
-		}
-		return c_type;
-	}
-	
-	/**
-	*	Method to translate a selected cache type in the drop down control
-	*	to a "true" cache type.<br>
-	*	This transformation is required to ease the display of the cache type
-	*	icon in the table display.
-	*/
-	public int transSelect(int num){
-		int ret = 0;
-		switch(num){
-			case 0: ret = 0; break;
-			case 1: ret = 2; break;
-			case 2: ret = 3; break;
-			case 3: ret = 4; break;
-			case 4: ret = 5; break;
-			case 5: ret = 6; break;
-			case 6: ret = 453; break;
-			case 7: ret = 8; break;
-			case 8: ret = 11; break;
-			case 9: ret = 12; break;
-			case 10: ret = 13; break;
-			case 11: ret = 137; break;
-			case 12: ret = 1858; break;
-			case 13: ret = 50; break;
-			case 14: ret = 51; break;
-			case 15: ret = 52; break;
-			case 16: ret = 53; break;
-			case 17: ret = 54; break;
-			case 18: ret = 55; break;
-
-			default: Vm.debug("Unknown cachetype: " + num);
-			break;
-
-		} //switch
-		return ret;
-	}
-	
-	/**
 	 * if is addi -> returns the respective AddiWpt
 	 * if is main -> returns the respective MainWpt 
 	 *
 	 */
 	public void createWptName() {
 		String wpt = inpWaypoint.getText().toUpperCase();
-		if (CacheType.isAddiWpt(transSelect(chcType.getInt())) && 
+		if (CacheType.isAddiWpt(CacheType.guiSelect2Cw(chcType.getInt())) && 
 				(Global.mainTab.mainCache.startsWith("GC")||Global.mainTab.mainCache.startsWith("OC")||Global.mainTab.mainCache.startsWith("CW")) &&
 				wpt.startsWith("CW")) {
 			// for what was this?:
@@ -305,7 +232,7 @@
 			
 			inpWaypoint.setText(Global.getProfile().getNewAddiWayPointName(Global.mainTab.mainCache));
 		} 
-		if (!CacheType.isAddiWpt(transSelect(chcType.getInt())) && !(wpt.startsWith("GC") 
+		if (!CacheType.isAddiWpt(CacheType.guiSelect2Cw(chcType.getInt())) && !(wpt.startsWith("GC") 
 				|| wpt.startsWith("OC") || wpt.startsWith("CW")) ) {
 			inpWaypoint.setText(Global.getProfile().getNewWayPointName());
 		}
@@ -394,7 +321,7 @@
 				CacheHolder ch = new CacheHolder();
 				ch.LatLon = thisCache.LatLon;
 				ch.pos = new CWPoint( thisCache.pos );
-				ch.setType(51);
+				ch.setType(CacheType.CW_TYPE_STAGE);
 				Global.mainTab.newWaypoint(ch);
 			}
 			else if (ev.target == btnGoto){
@@ -496,8 +423,8 @@
 		  thisCache.setCacheName(inpName.getText().trim());
 		  thisCache.LatLon = thisCache.pos.toString();
 		  thisCache.setDateHidden(inpHidden.getText().trim());
-		  int oldType=thisCache.getType();
-		  thisCache.setType(transSelect(chcType.getInt()));
+		  byte oldType=thisCache.getType();
+		  thisCache.setType(CacheType.guiSelect2Cw(chcType.getInt()));
 		 // thisCache.saveCacheDetails(profile.dataDir); // this is redundant, because all changes affecting the details are immediately saved
 		  // Now update the table
 		  CacheHolder ch = thisCache; // TODO variable ch is redundant

Modified: trunk/src/CacheWolf/FilterScreen.java
===================================================================
--- trunk/src/CacheWolf/FilterScreen.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/FilterScreen.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -15,18 +15,18 @@
 	private static final Color COLOR_FILTERACTIVE=new Color(0,255,0);
 	private static final Color COLOR_FILTERALL=new Color(255,0,0); // Red
     	
-	private mButton btnCancel, btnApply,btnRoute,
-				    btnSaveFlt, btnDelFlt,
-					btnBearing,btnTypes,btnAttributes,btnRatings,btnContainer,btnSearch,btnAddi, btnSelect,btnDeselect,btnCacheAttributes;
+	private mButton btnCancel, btnApply, btnRoute, btnSaveFlt, btnDelFlt,
+					btnBearing, btnTypes, btnAttributes, btnRatings, btnContainer, btnSearch,
+					btnAddi, btnSelect, btnDeselect, btnCacheAttributes;
 	
 	private mChoice chcDist, chcDiff, chcTerr, chcAttrib;
 	private mCheckBox chkFound, chkNotFound, chkTrad, chkVirtual, chkEvent, chkEarth, chkMega,
 					  chkOwned, chkNotOwned, chkMulti, chkLetter, chkWebcam, chkMystery, chkLocless,
-	                  chkCustom,chkParking,	chkStage, chkQuestion, chkFinal, chkTrailhead, chkReference,
+	                  chkCustom, chkParking, chkStage, chkQuestion, chkFinal, chkTrailhead, chkReference,
 					  chkMicro,chkSmall,chkRegular,chkLarge,chkVeryLarge,chkOther,chkCito,
-	                  chkArchived,chkNotArchived, chkAvailable,chkNotAvailable,
+	                  chkArchived, chkNotArchived, chkAvailable, chkNotAvailable,
 					  chkNW, chkNNW , chkN , chkNNE, chkNE, chkENE, chkE, chkESE, chkSE, chkSSE, chkS,
-					  chkSSW, chkSW, chkWSW, chkW, chkWNW,chkWherigo;
+					  chkSSW, chkSW, chkWSW, chkW, chkWNW, chkWherigo;
 	private mComboBox chcStatus, fltList;
 	private mCheckBox chkUseRegexp;
 	

Modified: trunk/src/CacheWolf/GPXImporter.java
===================================================================
--- trunk/src/CacheWolf/GPXImporter.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/GPXImporter.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -386,7 +386,7 @@
 		
 		// aditional wapypoint
 		if (name.equals("type")&& inWpt && !inCache && strData.startsWith("Waypoint")){
-			holder.setType(CacheType.typeText2Number(strData));
+			holder.setType(CacheType.gpxType2CwType(strData));
 			holder.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
 		}
 		
@@ -408,7 +408,7 @@
 			return;
 		}
 		if ((name.equals("groundspeak:type") || name.equals("type")|| name.equals("terra:style"))&& inCache){
-			holder.setType(CacheType.typeText2Number(strData));
+			holder.setType(CacheType.gpxType2CwType(strData));
 			return;
 		}
 		if (name.equals("groundspeak:container")|| name.equals("container")){

Copied: trunk/src/CacheWolf/GuiImageBroker.java (from rev 1817, experiments/greiol/src/CacheWolf/GuiImageBroker.java)

Modified: trunk/src/CacheWolf/MainTab.java
===================================================================
--- trunk/src/CacheWolf/MainTab.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/MainTab.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -305,7 +305,7 @@
 			profile.setAddiRef(pCh);
 		} else { 
 			pCh.setWayPoint(profile.getNewWayPointName());
-			pCh.setType(0);
+			pCh.setType(CacheType.CW_TYPE_CUSTOM);
 			lastselected=pCh.getWayPoint();
 		}
 		pCh.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);

Modified: trunk/src/CacheWolf/OCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/OCXMLImporter.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/OCXMLImporter.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -354,7 +354,7 @@
 			cacheID = atts.getValue("id");
 		}
 		if(name.equals("type")){
-			holder.setType(CacheType.transOCType(new Integer(atts.getValue("id")).intValue())); 
+			holder.setType(CacheType.ocType2CwType(atts.getValue("id")));
 			return;
 		}
 		if(name.equals("status")){

Modified: trunk/src/CacheWolf/Parser.java
===================================================================
--- trunk/src/CacheWolf/Parser.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/Parser.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -691,10 +691,10 @@
 				String stage=MyLocale.formatLong(i,"00");
 				String stageWpt="$"+stage+waypointName.substring(2);
 				String stageName = "Stage "+(i+1);
-				int type = 51;
+				byte type = CacheType.CW_TYPE_STAGE;
 				if (i == nStages - 1) {
 					stageName = "Final";
-					type = 53;
+					type = CacheType.CW_TYPE_FINAL;
 				}
 				didCreateWp|=createWptIfNeeded(stage+waypointName.substring(2), stageName, type);
 				op.append("IF "+stageWpt+"=\"\" THEN\n");
@@ -1095,7 +1095,7 @@
 		}
 	}
 
-	private boolean createWptIfNeeded(String wayPoint, String name, int type){
+	private boolean createWptIfNeeded(String wayPoint, String name, byte type){
 	   	int ci=Global.getProfile().getCacheIndex(wayPoint);
     	if (ci >= 0) return false;
 

Modified: trunk/src/CacheWolf/RadarPanel.java
===================================================================
--- trunk/src/CacheWolf/RadarPanel.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/RadarPanel.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -132,9 +132,9 @@
 							iActP.addImage(aImg);
 						}
 					}
-					Image imgCache=CacheType.cache2Img(holder.getType());
+					Image imgCache=GuiImageBroker.getTypeImage(holder.getType());
 					// If we have no image for the cache type use a question mark
-					if (imgCache==null) imgCache=CacheType.cache2Img(8); 
+					if (imgCache==null) imgCache=GuiImageBroker.getTypeImage(CacheType.CW_TYPE_UNKNOWN); 
 					rpi = new RadarPanelImage(imgCache);
 					rpi.wayPoint = holder.getWayPoint();
 					rpi.rownum = i;

Modified: trunk/src/CacheWolf/ShowCacheInBrowser.java
===================================================================
--- trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -65,9 +65,9 @@
 			if(chD.isVisible()){
 				Vm.showWait(true);
 				try {
-					if (chD.getWayPoint().startsWith("OC"))
-						tpl.setParam("TYPE", "\"file://"+FileBase.getProgramDirectory()+"/"+CacheType.transOCType(chD.getType())+".gif\"");
-					else	
+//					if (chD.getWayPoint().startsWith("OC"))
+//						tpl.setParam("TYPE", "\"file://"+FileBase.getProgramDirectory()+"/"+CacheType.transOCType(chD.getType())+".gif\"");
+//					else	
 						tpl.setParam("TYPE", "\"file://"+FileBase.getProgramDirectory()+"/"+chD.getType()+".gif\"");
 					tpl.setParam("SIZE", CacheSize.cw2ExportString(chD.getCacheSize()));
 					tpl.setParam("WAYPOINT", chD.getWayPoint());
@@ -193,7 +193,7 @@
 							addis.put("WAYPOINT",ch.getWayPoint());
 							addis.put("NAME",ch.getCacheName());
 							addis.put("LATLON",ch.LatLon);
-							addis.put("IMG","<img src=\""+CacheType.type2pic(ch.getType())+"\">");
+							addis.put("IMG","<img src=\""+CacheType.typeImageForId(ch.getType())+"\">");
 							addis.put("LONGDESC",ch.getExistingDetails().LongDescription); // Do we need to treat longDesc as above ?
 							addiVect.add(addis);
 						}

Modified: trunk/src/CacheWolf/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/SpiderGC.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/SpiderGC.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -969,10 +969,10 @@
 	 * @param doc A previously fetched cachepage
 	 * @return the waypoint type (Tradi, Multi, etc.)
 	 */
-	private int getType(String doc) throws Exception{
+	private byte getType(String doc) throws Exception {
 		inRex = new Regex(p.getProp("cacheTypeRex"));
 		inRex.search(doc);
-		if(inRex.didMatch()) return new Integer(inRex.stringMatched(1)).intValue();
+		if(inRex.didMatch()) return CacheType.gcSpider2CwType(inRex.stringMatched(1));
 		else return 0;
 	}
 
@@ -982,7 +982,7 @@
 	 * @param chD Cache Details
 	 * @return A HTML string containing the logs
 	 */
-	private LogList getLogs(String doc, CacheHolderDetail chD) throws Exception{
+	private LogList getLogs(String doc, CacheHolderDetail chD) throws Exception {
 		String icon = "";
 		String name = "";
 		String logText = "";
@@ -1331,7 +1331,7 @@
 				typeRex.search(rowBlock);
 				hd.setCacheName(nameRex.stringMatched(1));
 				if(koordRex.didMatch()) hd.setLatLon(koordRex.stringMatched(1));
-				if(typeRex.didMatch()) hd.setType(CacheType.typeText2Number("Waypoint|"+typeRex.stringMatched(1)));
+				if(typeRex.didMatch()) hd.setType(CacheType.gpxType2CwType("Waypoint|"+typeRex.stringMatched(1)));
 				rowBlock = exRowBlock.findNext();
 				descRex.search(rowBlock);
 				hd.getFreshDetails().setLongDescription(descRex.stringMatched(1));

Modified: trunk/src/CacheWolf/myInteractivePanel.java
===================================================================
--- trunk/src/CacheWolf/myInteractivePanel.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/myInteractivePanel.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -110,7 +110,7 @@
 		CacheHolder ch=Global.getProfile().cacheDB.get(wayPoint);
 		if (ch != null) {
 			 IconAndText icnDrag=new IconAndText();
-			 icnDrag.addColumn(CacheType.cache2Img(ch.getType()));
+			 icnDrag.addColumn(GuiImageBroker.getTypeImage(ch.getType()));
 			 icnDrag.addColumn(ch.getWayPoint());
 			 dc.dragData=dc.startImageDrag(icnDrag,new Point(8,8),this);
 			 //if (dc instanceof ImageDragContext) Vm.debug(">>>>Is Image drag");

Modified: trunk/src/CacheWolf/myTableControl.java
===================================================================
--- trunk/src/CacheWolf/myTableControl.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/myTableControl.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -298,7 +298,7 @@
 			 wayPoint=ch.getWayPoint();
 			 //Vm.debug("Waypoint : "+ch.wayPoint);
 			 imgDrag=new IconAndText();
-			 imgDrag.addColumn(CacheType.cache2Img(ch.getType()));
+			 imgDrag.addColumn(GuiImageBroker.getTypeImage(ch.getType()));
 			 imgDrag.addColumn(ch.getWayPoint());
 			 dc.dragData=dc.startImageDrag(imgDrag,new Point(8,8),this);
 		 } else super.startDragging(dc);

Modified: trunk/src/CacheWolf/myTableModel.java
===================================================================
--- trunk/src/CacheWolf/myTableModel.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/myTableModel.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -291,7 +291,7 @@
 						else 
 							return checkboxUnticked;
 					case 1: // Type
-						return CacheType.cache2Img(ch.getType());
+						return GuiImageBroker.getTypeImage(ch.getType());
 					case 2: // Difficulty;
 						return ch.getHard();
 					case 3: // Terrain

Modified: trunk/src/CacheWolf/navi/GotoPanel.java
===================================================================
--- trunk/src/CacheWolf/navi/GotoPanel.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/navi/GotoPanel.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -3,6 +3,7 @@
 import CacheWolf.CWPoint;
 import CacheWolf.CacheDB;
 import CacheWolf.CacheHolder;
+import CacheWolf.CacheType;
 import CacheWolf.CoordsScreen;
 import CacheWolf.DetailsPanel;
 import CacheWolf.Global;
@@ -92,11 +93,11 @@
 		//Format selection for coords		
 		//context menu
 		mnuContextFormt = new Menu();
-		mnuContextFormt.addItem(miDD = new MenuItem("d.d?"));
+		mnuContextFormt.addItem(miDD = new MenuItem("d.d???"));
 		miDD.modifiers &= ~MenuItem.Checked;
-		mnuContextFormt.addItem(miDMM = new MenuItem("d?m.m\'"));
+		mnuContextFormt.addItem(miDMM = new MenuItem("d???m.m\'"));
 		miDMM.modifiers |= MenuItem.Checked;
-		mnuContextFormt.addItem(miDMS = new MenuItem("d?m\'s\""));
+		mnuContextFormt.addItem(miDMS = new MenuItem("d???m\'s\""));
 		miDMS.modifiers &= ~MenuItem.Checked;
 		mnuContextFormt.addItem(miUTM = new MenuItem("UTM"));
 		miUTM.modifiers &= ~MenuItem.Checked;
@@ -171,7 +172,7 @@
 
 		//while (true){
 //		int notinterpreted = 0;
-//		if (myGPS.examine("@??H @??H?@??HH???????H")) { notinterpreted = 0;} else notinterpreted++;
+//		if (myGPS.examine("@??????H @??????H???@??????HH?????????????????????H")) { notinterpreted = 0;} else notinterpreted++;
 //		if (notinterpreted > 5) myGPS.noInterpretableData();
 //		// myGPS.noInterpretableData();
 
@@ -408,7 +409,7 @@
 				CacheHolder ch = new CacheHolder();
 				ch.LatLon = myNavigation.gpsPos.toString();
 				ch.pos = new CWPoint(myNavigation.gpsPos);
-				ch.setType(51); // see CacheType.GC_AW_STAGE_OF_MULTI // TODO unfertig
+				ch.setType(CacheType.CW_TYPE_STAGE); // see CacheType.GC_AW_STAGE_OF_MULTI // TODO unfertig
 				mainT.newWaypoint(ch);
 			}
 			// change destination waypoint

Modified: trunk/src/CacheWolf/navi/MovingMap.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMap.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/CacheWolf/navi/MovingMap.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -5,6 +5,7 @@
 import CacheWolf.CacheHolder;
 import CacheWolf.CacheType;
 import CacheWolf.Global;
+import CacheWolf.GuiImageBroker;
 import CacheWolf.InfoBox;
 import CacheWolf.MainTab;
 import CacheWolf.MyLocale;
@@ -380,7 +381,7 @@
 			for (int i=cacheDB.size()-1; i>=0; i--) {
 				ch = cacheDB.get(i);
 				if (ch.is_Checked && ch.isVisible() && ch != mainT.ch) {
-					if (ch.pos.isValid()) addSymbol(ch.getCacheName(), ch, CacheType.cache2Img(ch.getType()), ch.pos);
+					if (ch.pos.isValid()) addSymbol(ch.getCacheName(), ch, GuiImageBroker.getTypeImage(ch.getType()), ch.pos);
 				}
 			}
 		}
@@ -402,7 +403,7 @@
 		}
 		if (ch != null) {
 			addSymbol("selectedCache", MARK_CACHE_IMAGE, ch.pos);
-			addSymbolIfNecessary(ch.getCacheName(), ch, CacheType.cache2Img(ch.getType()), ch.pos);
+			addSymbolIfNecessary(ch.getCacheName(), ch, GuiImageBroker.getTypeImage(ch.getType()), ch.pos);
 		}
 		markedCache = ch;
 	}
@@ -1043,7 +1044,7 @@
 			return;
 		}
 		if (currentMap == null && newmap == null) {
-			// (new MessageBox("Information", "F?r die aktuelle Position steht keine Karte zur Verf?ng, bitte w?hlen Sie eine manuell", MessageBox.OKB)).execute();
+			// (new MessageBox("Information", "F???r die aktuelle Position steht keine Karte zur Verf???ng, bitte w???hlen Sie eine manuell", MessageBox.OKB)).execute();
 			posCircle.where.set(cll); // choosemap calls setmap with posCircle-coos
 			try {
 				setMap( ((MapListEntry)maps.elementAt(maps.getCount() - 4)).getMap(), where); // beware: "-4" only works if the empty maps were added last see MapsList.addEmptyMaps
@@ -1082,7 +1083,7 @@
 		if (posCircleX >= 0 && posCircleX <= w && posCircleY >= 0 && posCircleY <= h && ll.isValid()) {
 			posCircleOnScreen = java.lang.Boolean.TRUE;
 			pX = posCircleX; // posCircle is inside the screen
-			pY = posCircleY; // TODO eigentlich interessiert, ob nach dem evtl. Kartenwechsel PosCircle on Screen ist. So wie es jetzt ist, kann 2mal der gleiche Aufruf zum laden unterschiedlicher Karten f?hren, wenn vorher PosCircle nicht auf dem SChirm war, nach dem ersten Laden aber schon.
+			pY = posCircleY; // TODO eigentlich interessiert, ob nach dem evtl. Kartenwechsel PosCircle on Screen ist. So wie es jetzt ist, kann 2mal der gleiche Aufruf zum laden unterschiedlicher Karten f???hren, wenn vorher PosCircle nicht auf dem SChirm war, nach dem ersten Laden aber schon.
 			cll = new CWPoint(ll);
 		} else { // when posCircle out of screen - use centre of screen as point which as to be included in the map
 			cll = ScreenXY2LatLon(w/2, h/2);
@@ -1130,7 +1131,7 @@
 	public void loadMapForAllCaches(){
 		Area sur = Global.getProfile().getSourroundingArea(true);
 		if (sur == null) {
-			(new MessageBox(MyLocale.getMsg(4207, "Error"), MyLocale.getMsg(4215, "Keine  Caches mit H?ckchen ausgew?hlt"), FormBase.OKB)).execute();
+			(new MessageBox(MyLocale.getMsg(4207, "Error"), MyLocale.getMsg(4215, "Keine  Caches mit H???ckchen ausgew???hlt"), FormBase.OKB)).execute();
 			return;
 		}
 		MapInfoObject newmap = maps.getMapForArea(sur.topleft, sur.buttomright);
@@ -1488,9 +1489,9 @@
 	MenuItem hideMapMI = new MenuItem(MyLocale.getMsg(4240, "Hide map"), new IconAndText(new mImage("map_off.png"), MyLocale.getMsg(4241, "Hide map"), null, CellConstants.RIGHT));
 	// automatic
 	MenuItem mapChangeModusMI = new MenuItem(MyLocale.getMsg(4242, "Modus for automatic map change"), MenuItem.Separator, null);;
-	MenuItem highestResGpsDestMI = new MenuItem(MyLocale.getMsg(4244, "Highest res. containing dest. & cur. position"), new IconAndText(new mImage("res_gps_goto.png"), MyLocale.getMsg(4245, "Highest res. containing dest. & cur. position"), null, CellConstants.RIGHT)); //immer h?chste Aufl?sung w?hlen, die akt. Pos. und Ziel enthalten 
-	MenuItem highestResolutionMI = new MenuItem(MyLocale.getMsg(4246, "Highest resolution"), new IconAndText(new mImage("res_high.png"), MyLocale.getMsg(4247, "Highest resolution"), null, CellConstants.RIGHT)); //immer h?chste Aufl?sung w?hlen 
-	MenuItem keepManResolutionMI = new MenuItem(MyLocale.getMsg(4248, "Keep manual resolution"), new IconAndText(new mImage("res_manuell.png"), MyLocale.getMsg(4249, "Keep manual resolution"), null, CellConstants.RIGHT)); // manuell gew?hlte Aufl?sung beibehalten  
+	MenuItem highestResGpsDestMI = new MenuItem(MyLocale.getMsg(4244, "Highest res. containing dest. & cur. position"), new IconAndText(new mImage("res_gps_goto.png"), MyLocale.getMsg(4245, "Highest res. containing dest. & cur. position"), null, CellConstants.RIGHT)); //immer h???chste Aufl???sung w???hlen, die akt. Pos. und Ziel enthalten 
+	MenuItem highestResolutionMI = new MenuItem(MyLocale.getMsg(4246, "Highest resolution"), new IconAndText(new mImage("res_high.png"), MyLocale.getMsg(4247, "Highest resolution"), null, CellConstants.RIGHT)); //immer h???chste Aufl???sung w???hlen 
+	MenuItem keepManResolutionMI = new MenuItem(MyLocale.getMsg(4248, "Keep manual resolution"), new IconAndText(new mImage("res_manuell.png"), MyLocale.getMsg(4249, "Keep manual resolution"), null, CellConstants.RIGHT)); // manuell gew???hlte Aufl???sung beibehalten  
 	// manuell
 	MenuItem mapChangeResMI = new MenuItem(MyLocale.getMsg(4250, "Change resolution manually"), MenuItem.Separator, null);;
 	MenuItem AllCachesResMI = new MenuItem(MyLocale.getMsg(4252, "Load a map containing all marked caches"),  new IconAndText(new mImage("loupe_all.png"), MyLocale.getMsg(4253, "Load a map containing all marked caches"), null, CellConstants.RIGHT));   

Modified: trunk/src/exp/ExploristExporter.java
===================================================================
--- trunk/src/exp/ExploristExporter.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/exp/ExploristExporter.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -246,8 +246,8 @@
 		
 		if (!add.equals("")) { // Set Picture in Explorist to Virtual
 			sb.append("Virtual Cache");
-		} else if (ch.getType() != 8) { // Rewrite Unknown Caches
-			sb.append(CacheType.transType(ch.getType()));
+		} else if (ch.getType() != CacheType.CW_TYPE_UNKNOWN) { // Rewrite Unknown Caches
+			sb.append(CacheType.cw2ExportString(ch.getType()));
 		} else {
 			sb.append("Mystery Cache");
 		}

Modified: trunk/src/exp/Exporter.java
===================================================================
--- trunk/src/exp/Exporter.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/exp/Exporter.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -411,7 +411,7 @@
 
     public static String getShortDetails( CacheHolder ch ) {
     	StringBuffer strBuf = new StringBuffer(7);
-    	strBuf.append(CacheType.shortType(ch.getType()).toLowerCase());			
+    	strBuf.append(CacheType.getExportShortId(ch.getType()).toLowerCase());			
     	if (!ch.isAddiWpt()) {
     		if ( (ch.getHard().length() > 0) && (ch.getTerrain().length() > 0) ) {
     			strBuf.append(ch.getHard().charAt(0));

Modified: trunk/src/exp/GPXExporter.java
===================================================================
--- trunk/src/exp/GPXExporter.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/exp/GPXExporter.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -71,7 +71,7 @@
 				} else {
 					strBuf.append("    <sym>Geocache</sym>\r\n");
 				}
-				strBuf.append("    <type>Geocache|").append(CacheType.transType(ch.getType())).append("</type>\r\n");
+				strBuf.append("    <type>Geocache|").append(CacheType.id2GpxString(ch.getType())).append("</type>\r\n");
 				String dummyAvailable = ch.is_available() ? STRING_TRUE:STRING_FALSE;
 				String dummyArchived = ch.is_archived() ? STRING_TRUE:STRING_FALSE;
 				strBuf.append("    <groundspeak:cache id=\"").append( ch.GetCacheID() ).append( "\" available=\"" ).append( dummyAvailable ).append( "\" archived=\"" ).append( dummyArchived).append( "\" xmlns:groundspeak=\"http://www.groundspeak.com/cache/1/0\">\r\n");
@@ -79,7 +79,7 @@
 				strBuf.append("      <groundspeak:placed_by>").append(SafeXML.cleanGPX(ch.getCacheOwner())).append("</groundspeak:placed_by>\r\n");
 				//todo low prio: correct owner-id
 				strBuf.append("      <groundspeak:owner id=\"23\">").append(SafeXML.cleanGPX(ch.getCacheOwner())+"</groundspeak:owner>\r\n");
-				strBuf.append("      <groundspeak:type>").append(CacheType.transType(ch.getType())).append("</groundspeak:type>\r\n");
+				strBuf.append("      <groundspeak:type>").append(CacheType.id2GpxString(ch.getType())).append("</groundspeak:type>\r\n");
 				strBuf.append("      <groundspeak:container>").append(CacheSize.cw2ExportString(ch.getCacheSize())).append("</groundspeak:container>\r\n");
 				//for Colorado/Oregon: 2.0 -> 2
 				String diffTerr = ch.getHard().replace(',','.');
@@ -149,8 +149,8 @@
 				strBuf.append("    </groundspeak:cache>\r\n");
 			}else {
 				// there is no HTML in the description of addi wpts
-				strBuf.append("    <sym>").append(CacheType.transType(ch.getType())).append("</sym>\r\n");
-				strBuf.append("    <type>Waypoint|").append(CacheType.transType(ch.getType())).append("</type>\r\n");
+				strBuf.append("    <sym>").append(CacheType.id2GpxString(ch.getType())).append("</sym>\r\n");
+				strBuf.append("    <type>Waypoint|").append(CacheType.id2GpxString(ch.getType())).append("</type>\r\n");
 			}
 			strBuf.append("  </wpt>\r\n");
 		}catch(Exception e){

Modified: trunk/src/exp/HTMLExporter.java
===================================================================
--- trunk/src/exp/HTMLExporter.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/exp/HTMLExporter.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -84,7 +84,7 @@
 				if(	ch.isVisible()){
 					det=ch.getExistingDetails();
 					varParams = new Hashtable();
-					varParams.put("TYPE", CacheType.transType(ch.getType()));
+					varParams.put("TYPE", CacheType.cw2ExportString(ch.getType()));
 					varParams.put("SIZE", CacheSize.cw2ExportString(ch.getCacheSize()));
 					varParams.put("WAYPOINT", ch.getWayPoint());
 					varParams.put("NAME", ch.getCacheName());
@@ -100,7 +100,7 @@
 					//We can generate the individual page here!
 					try{
 						Template page_tpl = new Template(template_init_page);
-						page_tpl.setParam("TYPE", CacheType.transType(ch.getType()));
+						page_tpl.setParam("TYPE", CacheType.cw2ExportString(ch.getType()));
 						page_tpl.setParam("SIZE", CacheSize.cw2ExportString(ch.getCacheSize()));
 						page_tpl.setParam("WAYPOINT", ch.getWayPoint());
 						page_tpl.setParam("NAME", ch.getCacheName());
@@ -116,92 +116,120 @@
 							page_tpl.setParam("DESCRIPTION", modifyLongDesc(det,targetDir));
 						else {
 							String dummyText = new String();
+							try {
 							dummyText = STRreplace.replace(det.LongDescription, "\n", "<br>");
+							} catch (NullPointerException e) {
+								dummyText = "CacheWolf Error: Missing Long Description";
+						}
 							page_tpl.setParam("DESCRIPTION",dummyText);
-							
 						}
-						page_tpl.setParam("HINTS", det.Hints);
-						page_tpl.setParam("DECRYPTEDHINTS", Common.rot13(det.Hints));
+						try {
+							page_tpl.setParam("HINTS", det.Hints);
+						} catch (NullPointerException e) { 
+							page_tpl.setParam("HINTS", "CacheWolf Error: Hint information missing");
+						}
+						try {
+							page_tpl.setParam("DECRYPTEDHINTS", Common.rot13(det.Hints));
+						} catch (NullPointerException e) { 
+							page_tpl.setParam("DECRYPTEDHINTS", Common.rot13("CacheWolf Error: Hint information missing"));
+						}
+						
 						StringBuffer sb=new StringBuffer(2000);
-						for(int j = 0; j<det.CacheLogs.size(); j++){
-							sb.append(STRreplace.replace(det.CacheLogs.getLog(j).toHtml(),"http://www.geocaching.com/images/icons/",null));
-							sb.append("<br>");
-							icon=det.CacheLogs.getLog(j).getIcon();
-							if (logIcons.find(icon)<0) logIcons.add(icon); // Add the icon to list of icons to copy to dest directory
-						}
-						page_tpl.setParam("LOGS", sb.toString());
-						page_tpl.setParam("NOTES", STRreplace.replace(det.getCacheNotes(), "\n","<br>")); 
+						try {
+							for(int j = 0; j<det.CacheLogs.size(); j++){
+								sb.append(STRreplace.replace(det.CacheLogs.getLog(j).toHtml(),"http://www.geocaching.com/images/icons/",null));
+								sb.append("<br>");
+								icon=det.CacheLogs.getLog(j).getIcon();
+								if (logIcons.find(icon)<0) logIcons.add(icon); // Add the icon to list of icons to copy to dest directory
+							}
+						} catch (Exception e) { Vm.debug("P "+e); } //TODO: find out what is going wrong and especially why
+						try {
+							page_tpl.setParam("LOGS", sb.toString());
+						} catch (Exception e) { Vm.debug("Q "+e); } //TODO: find out what is going wrong and especially why
+						try {
+							page_tpl.setParam("NOTES", STRreplace.replace(det.getCacheNotes(), "\n","<br>"));
+						} catch (Exception e) { Vm.debug("R "+e); } //TODO: find out what is going wrong and especially why
 						// Cache Images
-						cacheImg.clear();
-						for(int j = 0; j<det.Images.size(); j++){
-							imgParams = new Hashtable();
-							String imgFile = new String((String)det.Images.get(j));
-							imgParams.put("FILE", imgFile);
-							if (j < det.ImagesText.size())
-								imgParams.put("TEXT",det.ImagesText.get(j));
-							else
-								imgParams.put("TEXT",imgFile);
-							DataMover.copy(profile.dataDir + imgFile,targetDir + imgFile);
-							cacheImg.add(imgParams);
-						}
-						page_tpl.setParam("cacheImg", cacheImg);
-						// Log images
-						logImg.clear();
-						for(int j = 0; j<det.LogImages.size(); j++){
-							logImgParams = new Hashtable();
-							String logImgFile = (String) det.LogImages.get(j);
-							logImgParams.put("FILE", logImgFile);
-							if (j < det.LogImagesText.size())
-								logImgParams.put("TEXT",det.LogImagesText.get(j));
-							else
-								logImgParams.put("TEXT",logImgFile);
-							DataMover.copy(profile.dataDir + logImgFile,targetDir + logImgFile);
-							logImg.add(logImgParams);
-						}
-						page_tpl.setParam("logImg", logImg);
-						// User images
-						usrImg.clear();
-						for(int j = 0; j<det.UserImages.size(); j++){
-							usrImgParams = new Hashtable();
-							String usrImgFile = new String((String)det.UserImages.get(j));
-							usrImgParams.put("FILE", usrImgFile);
-							if (j < det.UserImagesText.size())
-								usrImgParams.put("TEXT",det.UserImagesText.get(j));
-							else
-								usrImgParams.put("TEXT",usrImgFile);
-							DataMover.copy(profile.dataDir + usrImgFile,targetDir + usrImgFile);
-							usrImg.add(usrImgParams);
-						}
+						try {
+							cacheImg.clear();
+							for(int j = 0; j<det.Images.size(); j++){
+								imgParams = new Hashtable();
+								String imgFile = new String((String)det.Images.get(j));
+								imgParams.put("FILE", imgFile);
+								if (j < det.ImagesText.size())
+									imgParams.put("TEXT",det.ImagesText.get(j));
+								else
+									imgParams.put("TEXT",imgFile);
+								DataMover.copy(profile.dataDir + imgFile,targetDir + imgFile);
+								cacheImg.add(imgParams);
+							}
+						} catch (Exception e) { Vm.debug("S "+e); } //TODO: find out what is going wrong and especially why
+						try {
+							page_tpl.setParam("cacheImg", cacheImg);
+							// Log images
+							logImg.clear();
+							for(int j = 0; j<det.LogImages.size(); j++){
+								logImgParams = new Hashtable();
+								String logImgFile = (String) det.LogImages.get(j);
+								logImgParams.put("FILE", logImgFile);
+								if (j < det.LogImagesText.size())
+									logImgParams.put("TEXT",det.LogImagesText.get(j));
+								else
+									logImgParams.put("TEXT",logImgFile);
+								DataMover.copy(profile.dataDir + logImgFile,targetDir + logImgFile);
+								logImg.add(logImgParams);
+							}
+						} catch (Exception e) { Vm.debug("T "+e); } //TODO: find out what is going wrong and especially why
+						try {
+							page_tpl.setParam("logImg", logImg);
+							// User images
+							usrImg.clear();
+							for(int j = 0; j<det.UserImages.size(); j++){
+								usrImgParams = new Hashtable();
+								String usrImgFile = new String((String)det.UserImages.get(j));
+								usrImgParams.put("FILE", usrImgFile);
+								if (j < det.UserImagesText.size())
+									usrImgParams.put("TEXT",det.UserImagesText.get(j));
+								else
+									usrImgParams.put("TEXT",usrImgFile);
+								DataMover.copy(profile.dataDir + usrImgFile,targetDir + usrImgFile);
+								usrImg.add(usrImgParams);
+							}
+						} catch (Exception e) { Vm.debug("U "+e); } //TODO: find out what is going wrong and especially why
+						
 						page_tpl.setParam("userImg", usrImg);
 
 						// Map images
 						mapImg.clear();
 						mapImgParams = new Hashtable();
+						
 						String mapImgFile = new String(ch.getWayPoint() + "_map.gif");
 						// check if map file exists
 						File test = new File(profile.dataDir + mapImgFile);
-						if (test.exists()) {
-							mapImgParams.put("FILE", mapImgFile);
-							mapImgParams.put("TEXT",mapImgFile);
-							DataMover.copy(profile.dataDir + mapImgFile,targetDir + mapImgFile);
-							mapImg.add(mapImgParams);
-							
-							mapImgParams = new Hashtable();
-							mapImgFile = ch.getWayPoint() + "_map_2.gif";
-							mapImgParams.put("FILE", mapImgFile);
-							mapImgParams.put("TEXT",mapImgFile);
-							DataMover.copy(profile.dataDir + mapImgFile,targetDir + mapImgFile);
-							mapImg.add(mapImgParams);
-	
-							page_tpl.setParam("mapImg", mapImg);
-						}
-
-						
-						PrintWriter pagefile = new PrintWriter(new BufferedWriter(new FileWriter(targetDir + ch.getWayPoint()+".html")));
-						pagefile.print(page_tpl.output());
-						pagefile.close();
+						try {
+							if (test.exists()) {
+								mapImgParams.put("FILE", mapImgFile);
+								mapImgParams.put("TEXT",mapImgFile);
+								DataMover.copy(profile.dataDir + mapImgFile,targetDir + mapImgFile);
+								mapImg.add(mapImgParams);
+								
+								mapImgParams = new Hashtable();
+								mapImgFile = ch.getWayPoint() + "_map_2.gif";
+								mapImgParams.put("FILE", mapImgFile);
+								mapImgParams.put("TEXT",mapImgFile);
+								DataMover.copy(profile.dataDir + mapImgFile,targetDir + mapImgFile);
+								mapImg.add(mapImgParams);
+		
+								page_tpl.setParam("mapImg", mapImg);
+							}
+						} catch (Exception e) { Vm.debug("V "+e); } //TODO: find out what is going wrong and especially why
+						try {
+							PrintWriter pagefile = new PrintWriter(new BufferedWriter(new FileWriter(targetDir + ch.getWayPoint()+".html")));
+							pagefile.print(page_tpl.output());
+							pagefile.close();
+						} catch (Exception e) { Vm.debug("W "+e); }  //TODO: find out what is going wrong and especially why
 					}catch(Exception e){
-						Vm.debug("Problem writing waypoint html file");
+						Vm.debug("Problem writing waypoint html file"+e);
 					}
 				}//if is black, filtered
 			}

Modified: trunk/src/exp/KMLExporter.java
===================================================================
--- trunk/src/exp/KMLExporter.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/exp/KMLExporter.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -17,7 +17,7 @@
 import ewe.util.zip.ZipEntry;
 import ewe.util.zip.ZipException;
 import ewe.util.zip.ZipFile;
-import CacheWolf.*;
+import CacheWolf.*; // if we would use public instead of protected we would not need this.
 
 /**
 *	Class to export the cache database (index) to an KML-File
@@ -98,7 +98,7 @@
 					tmp = (Vector)entry.getValue();
 					// skip over empty cachetypes
 					if (tmp.size() == 0) continue;
-					outp.print(startFolder(CacheType.transType(new Integer((String)entry.getKey()).intValue())));
+					outp.print(startFolder(CacheType.cw2ExportString(CacheType.guiSelect2Cw(new Integer((String)entry.getKey()).byteValue()))));
 
 					for(int i = 0; i<tmp.size(); i++){
 						ch = (CacheHolder) tmp.get(i);
@@ -160,15 +160,15 @@
 		for (int i = 0; i < categoryNames.length; i++) {
 			outCacheDB[i] = new Hashtable();
 			// create the roots for the cachetypes
-			for (int j = 0; j < CacheType.wayType.length; j++) {
-				outCacheDB[i].put(CacheType.wayType[j][CacheType.WPT_NUM], new Vector());
+			for (int j = 0; j < CacheType.guiTypeStrings().length; j++) {
+				outCacheDB[i].put(String.valueOf(CacheType.guiSelect2Cw(j)), new Vector());
 			}
 		}
 
 		// fill structure with data from cacheDB
 		for(int i = 0; i<cacheDB.size(); i++){
 			ch=cacheDB.get(i);
-			// TODO Das Argument nach STring zu casten gef?llt mir nicht ganz...
+			// TODO Das Argument nach STring zu casten gef???llt mir nicht ganz...
 			if(ch.isVisible() && !ch.isAddiWpt()){
 				if (ch.is_found()) { tmp = (Vector) outCacheDB[FOUND].get(String.valueOf(ch.getType()));}
 				else if (ch.is_owned()) { tmp = (Vector) outCacheDB[OWNED].get(String.valueOf(ch.getType()));}
@@ -225,8 +225,8 @@
 			int len;
 			String entName, fileName; 
 
-			for (int i = 0; i < CacheType.wayType.length; i++) {
-				fileName = CacheType.type2pic(Convert.parseInt(CacheType.wayType[i][CacheType.WPT_NUM]));
+			for (int i = 0; i < CacheType.guiTypeStrings().length; i++) {
+				fileName = CacheType.typeImageForId(CacheType.guiSelect2Cw(i));
 				entName = "GoogleEarthIcons/" + fileName;
 				zipEnt = zif.getEntry(entName);
 				if (zipEnt == null) continue;
@@ -284,7 +284,7 @@
 		strBuf.append("      <IconStyle>\r\n");
 		strBuf.append("         <Icon>\r\n");
 //		strBuf.append("            <href>"+ File.getProgramDirectory()+ "/" + CacheType.type2pic(Convert.parseInt(ch.type))+ "</href>\r\n");
-		strBuf.append("            <href>"+ CacheType.type2pic(ch.getType())+ "</href>\r\n");
+		strBuf.append("            <href>"+ CacheType.typeImageForId(ch.getType())+ "</href>\r\n");
 		strBuf.append("         </Icon>\r\n");
 		strBuf.append("      </IconStyle>\r\n");
 		strBuf.append("      <LabelStyle>\r\n");

Modified: trunk/src/exp/MSARCSVExporter.java
===================================================================
--- trunk/src/exp/MSARCSVExporter.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/exp/MSARCSVExporter.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -5,7 +5,7 @@
 /**
  * Class to export the cache database (index) to an CSV File which can bei easy
  * importet bei MS AutoRoute (testet with AR 2001 German) Format of the file:
- * Name;Breitengrad;L???ngengrad;Typ1;Typ2;Waypoint;Datum;Hyperlink
+ * Name;Breitengrad;L?ngengrad;Typ1;Typ2;Waypoint;Datum;Hyperlink
  * 
  */
 public class MSARCSVExporter extends Exporter {
@@ -26,7 +26,7 @@
 		StringBuffer str = new StringBuffer(200);
 		str.append("\"" + ch.getWayPoint() + " - " + ch.getCacheName() + "\";");
 		str.append(lat + ";" + lon +";");
-		str.append("\"" + CacheType.transType(ch.getType())+ "\";");
+		str.append("\"" + CacheType.cw2ExportString(ch.getType())+ "\";");
 		str.append("\"" + CacheSize.cw2ExportString(ch.getCacheSize()) + "\";");
 		str.append("\"" + ch.getWayPoint() + "\";");
 		str.append("\"" + ch.getDateHidden() + "\";");

Modified: trunk/src/exp/TPLExporter.java
===================================================================
--- trunk/src/exp/TPLExporter.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/exp/TPLExporter.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -194,8 +194,8 @@
 						Regex dec = new Regex("[,.]",myFilter.decSep);
 						if (myFilter.badChars != null) rex = new Regex("["+myFilter.badChars+"]","");
 						varParams = new Hashtable();
-						varParams.put("TYPE", CacheType.transType(ch.getType()));
-						varParams.put("SHORTTYPE", CacheType.transType(ch.getType()).substring(0,1));
+						varParams.put("TYPE", CacheType.cw2ExportString(ch.getType()));
+						varParams.put("SHORTTYPE", CacheType.getExportShortId(ch.getType()));
 						varParams.put("SIZE", CacheSize.cw2ExportString(ch.getCacheSize()));
 						varParams.put("SHORTSIZE", CacheSize.getExportShortId(ch.getCacheSize()));
 						varParams.put("WAYPOINT", ch.getWayPoint());

Modified: trunk/src/exp/TomTomExporter.java
===================================================================
--- trunk/src/exp/TomTomExporter.java	2009-05-17 18:41:01 UTC (rev 1817)
+++ trunk/src/exp/TomTomExporter.java	2009-05-17 19:10:50 UTC (rev 1818)
@@ -85,14 +85,14 @@
 		ext = format==TT_ASC?".asc":".ov2";
 		try{
 			//loop through type
-			for(int j = 0; j < CacheType.wayType.length; j++){
-				fileName = dirName + "/" + prefix + CacheType.wayType[j][TT_WPT_TEXT]+ ext;
+			for(int j = 0; j < CacheType.guiTypeStrings().length; j++){
+				fileName = dirName + "/" + prefix + CacheType.guiTypeStrings()[j]+ ext;
 				dfile = new File(fileName);
 				dfile.delete();
 				out =  new RandomAccessFile(fileName,"rw");
 				for(int i = 0; i<cacheDB.size(); i++){
 					holder=cacheDB.get(i);
-					if(holder.getType() == new Integer(CacheType.wayType[j][TT_WPT_NUM]).intValue() && holder.isVisible() == false){
+					if(holder.getType() == new Integer(CacheType.guiSelect2Cw(j)).intValue() && holder.isVisible() == false){
 						currExp++;
 						h.progress = (float)currExp/(float)counter;
 						h.changed();
@@ -110,7 +110,7 @@
 				if (dfile.length()==0) {
 					dfile.delete();
 				} else {
-					copyIcon(j, dirName + "/" + prefix + CacheType.wayType[j][TT_WPT_TEXT]); 
+					copyIcon(j, dirName + "/" + prefix + CacheType.guiTypeStrings()[j]); 
 				}
 			}//for wayType
 			pbf.exit(0);
@@ -259,7 +259,7 @@
 			int len;
 			String entName; 
 			
-			entName = "TomTomIcons/"+ "GC-" + CacheType.wayType[intWayType][TT_WPT_TEXT] + ".bmp";
+			entName = "TomTomIcons/"+ "GC-" + CacheType.guiTypeStrings()[intWayType] + ".bmp";
 			zipEnt = zif.getEntry(entName);
 			if (zipEnt == null) return;
 			
@@ -272,10 +272,10 @@
 		    fos.close();
 		    fis.close();
 		} catch (ZipException e) {
-			Vm.debug("Problem copying Icon" + "GC-" + CacheType.wayType[intWayType][TT_WPT_TEXT] + ".bmp" );
+			Vm.debug("Problem copying Icon" + "GC-" + CacheType.guiTypeStrings()[intWayType] + ".bmp" );
 			e.printStackTrace();
 		} catch (IOException e) {
-			Vm.debug("Problem copying Icon" + "GC-" + CacheType.wayType[intWayType][TT_WPT_TEXT] + ".bmp" );
+			Vm.debug("Problem copying Icon" + "GC-" + CacheType.guiTypeStrings()[intWayType] + ".bmp" );
 			e.printStackTrace();
 		}
 



From greiol at mail.berlios.de  Sun May 17 22:58:51 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Sun, 17 May 2009 22:58:51 +0200
Subject: [Cachewolf-svn] r1819 - trunk/src/CacheWolf
Message-ID: <200905172058.n4HKwpGC029634@sheep.berlios.de>

Author: greiol
Date: 2009-05-17 22:58:49 +0200 (Sun, 17 May 2009)
New Revision: 1819

Modified:
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/CacheType.java
   trunk/src/CacheWolf/GuiImageBroker.java
Log:
activated v2 type support

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-17 19:10:50 UTC (rev 1818)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-17 20:58:49 UTC (rev 1819)
@@ -380,7 +380,11 @@
 	            
 	            start = xmlString.indexOf('"', end + 1);
 	            end = xmlString.indexOf('"', start + 1);
-	            this.long2byteFields(Convert.parseLong(xmlString.substring(start + 1, end)));	  
+	            if (version == 2) {
+	            	long2byteFieldsv2(Convert.parseLong(xmlString.substring(start + 1, end)));
+	            } else {
+	            	long2byteFields(Convert.parseLong(xmlString.substring(start + 1, end)));
+	            }
 	            
 	            if (is_black() != Global.getProfile().showBlacklisted())
 		            setFiltered(true);
@@ -913,6 +917,28 @@
 		this.setCacheSize(byteFromLong(value, 4));
 		this.setNoFindLogs((byteFromLong(value, 5)));
 	}
+	
+	/**
+	 * convert a v2 byte filed to the current structures
+	 * @param value
+	 */
+	private void long2byteFieldsv2(long value) {
+		setHard(CacheHolder.terrHard_byte2String(byteFromLong(value, 1)));
+		setTerrain(CacheHolder.terrHard_byte2String(byteFromLong(value, 2)));
+		try {
+			setType(CacheType.v2Converter(byteFromLong(value, 3)));
+		} catch (IllegalArgumentException ex) {
+			setType(CacheType.CW_TYPE_UNKNOWN);
+			setIncomplete(true);
+		}
+		try {
+			setCacheSize(byteFromLong(value, 4));
+		} catch (IllegalArgumentException ex) {
+			setCacheSize(CacheSize.CW_SIZE_ERROR);
+			setIncomplete(true);
+		}
+		setNoFindLogs((byteFromLong(value, 5)));
+	}
 
 	/**
 	 * Extracts a byte from a long value. The position is the number of the 8-bit block
@@ -943,7 +969,7 @@
 		this.setLog_updated((value & this.bool2BitMask(true, 9)) != 0);
 		this.setUpdated((value & this.bool2BitMask(true, 10)) != 0);
 		this.setHTML((value & this.bool2BitMask(true, 11)) != 0);
-		this.setIncomplete((value & this.bool2BitMask(true, 12)) != 0);
+		this.setIncomplete(((value & this.bool2BitMask(true, 12)) != 0) || this.is_incomplete());
 	}
 	
 	/**

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-05-17 19:10:50 UTC (rev 1818)
+++ trunk/src/CacheWolf/CacheType.java	2009-05-17 20:58:49 UTC (rev 1819)
@@ -290,7 +290,7 @@
 		case -74: return CW_TYPE_TRAILHEAD;
 		case -73: return CW_TYPE_REFERENCE;
 		case 101: return CW_TYPE_MEGA_EVENT;
-		case 100: return CW_TYPE_WHEREIGO;
+		case -62: return CW_TYPE_WHEREIGO;
 		case 9: return CW_TYPE_EARTH;
 		default: throw new IllegalArgumentException("unmatched argument "+type+" in CacheSizeNew v2Converter()");
 		}

Modified: trunk/src/CacheWolf/GuiImageBroker.java
===================================================================
--- trunk/src/CacheWolf/GuiImageBroker.java	2009-05-17 19:10:50 UTC (rev 1818)
+++ trunk/src/CacheWolf/GuiImageBroker.java	2009-05-17 20:58:49 UTC (rev 1819)
@@ -39,7 +39,7 @@
 		new Image(CacheType.CW_GUIIMG_UNKNOWN),		// 18
 		new Image(CacheType.CW_GUIIMG_VIRTUAL),		// 19
 		new Image(CacheType.CW_GUIIMG_WEBCAM),		// 20
-		new Image(CacheType.CW_GUISTR_WHEREIGO)		// 21
+		new Image(CacheType.CW_GUIIMG_WHEREIGO)		// 21
 	};
 	
 	// TODO: move size images here



From engywuck at mail.berlios.de  Mon May 18 15:15:58 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Mon, 18 May 2009 15:15:58 +0200
Subject: [Cachewolf-svn] r1820 - trunk/src/CacheWolf
Message-ID: <200905181315.n4IDFwsF005422@sheep.berlios.de>

Author: engywuck
Date: 2009-05-18 15:15:57 +0200 (Mon, 18 May 2009)
New Revision: 1820

Modified:
   trunk/src/CacheWolf/CacheHolder.java
Log:
Saving properties CacheHolder.hasNote() and CacheHolder.hasSolver() in cacheholders bit field (at position 13 and 14).

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-17 20:58:49 UTC (rev 1819)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-18 13:15:57 UTC (rev 1820)
@@ -885,7 +885,9 @@
 		             bool2BitMask(this.is_log_updated(), 9) |
 		             bool2BitMask(this.is_updated(), 10)    |
 		             bool2BitMask(this.is_HTML(), 11)       |
-		             bool2BitMask(this.is_incomplete(), 12);		             
+		             bool2BitMask(this.is_incomplete(), 12) |
+		             bool2BitMask(this.hasNote(), 13)       |
+		             bool2BitMask(this.hasSolver(), 14);		             
 		return value;
 	}
 
@@ -970,6 +972,8 @@
 		this.setUpdated((value & this.bool2BitMask(true, 10)) != 0);
 		this.setHTML((value & this.bool2BitMask(true, 11)) != 0);
 		this.setIncomplete(((value & this.bool2BitMask(true, 12)) != 0) || this.is_incomplete());
+		this.setHasNote((value & this.bool2BitMask(true, 13)) != 0);
+		this.setHasSolver((value & this.bool2BitMask(true, 14)) != 0);
 	}
 	
 	/**



From mik77 at mail.berlios.de  Mon May 18 19:17:49 2009
From: mik77 at mail.berlios.de (mik77 at mail.berlios.de)
Date: Mon, 18 May 2009 19:17:49 +0200
Subject: [Cachewolf-svn] r1821 - trunk/src/CacheWolf
Message-ID: <200905181717.n4IHHnCt009097@sheep.berlios.de>

Author: mik77
Date: 2009-05-18 19:17:46 +0200 (Mon, 18 May 2009)
New Revision: 1821

Modified:
   trunk/src/CacheWolf/SpiderGC.java
Log:
update found status when spidering own finds

Modified: trunk/src/CacheWolf/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/SpiderGC.java	2009-05-18 13:15:57 UTC (rev 1820)
+++ trunk/src/CacheWolf/SpiderGC.java	2009-05-18 17:17:46 UTC (rev 1821)
@@ -468,6 +468,9 @@
 							} else if (ch.is_available()!=is_available_GC) { // Update the database with the cache status
 								pref.log("Updating status of "+waypoint+" to "+(is_available_GC?"available":"not available"));
 								ch.setAvailable(is_available_GC);
+							} else if (spiderAllFinds && !ch.is_found()) { // Update the database with the cache status
+								pref.log("Updating status of "+waypoint+" to found");
+								ch.setFound(true);								
 							} else {
 								cachesToUpdate.remove( ch.getWayPoint() );
 							}



From greiol at mail.berlios.de  Mon May 18 20:14:15 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Mon, 18 May 2009 20:14:15 +0200
Subject: [Cachewolf-svn] r1822 - in trunk: res_noewe src/CacheWolf src/exp
Message-ID: <200905181814.n4IIEF2V023355@sheep.berlios.de>

Author: greiol
Date: 2009-05-18 20:14:12 +0200 (Mon, 18 May 2009)
New Revision: 1822

Modified:
   trunk/res_noewe/POIIcons.zip
   trunk/src/CacheWolf/CacheType.java
   trunk/src/CacheWolf/GuiImageBroker.java
   trunk/src/exp/TomTomExporter.java
Log:
fixed TomtomExporter (hopefully)
removed "Dokumenmte und Einstellungen" from POIIcons.zip
added second mapping for whereigo to v2 cachetype converter
fixed some typos


Modified: trunk/res_noewe/POIIcons.zip
===================================================================
(Binary files differ)

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-05-18 17:17:46 UTC (rev 1821)
+++ trunk/src/CacheWolf/CacheType.java	2009-05-18 18:14:12 UTC (rev 1822)
@@ -291,6 +291,7 @@
 		case -73: return CW_TYPE_REFERENCE;
 		case 101: return CW_TYPE_MEGA_EVENT;
 		case -62: return CW_TYPE_WHEREIGO;
+		case 100: return CW_TYPE_WHEREIGO; // yes, it can be either of those
 		case 9: return CW_TYPE_EARTH;
 		default: throw new IllegalArgumentException("unmatched argument "+type+" in CacheSizeNew v2Converter()");
 		}
@@ -569,8 +570,8 @@
 			// check for | in additional waypoints and only use the string after |
 			int pipePosistion = ret.indexOf("|");
 			if (pipePosistion > -1) {
-				ret = ret.substring(pipePosistion);
-			}
+				ret = ret.substring(pipePosistion+1);
+			} //TODO: check for exceeding max length
 		} catch (IllegalArgumentException ex) {
 			ret = "";
 		}

Modified: trunk/src/CacheWolf/GuiImageBroker.java
===================================================================
--- trunk/src/CacheWolf/GuiImageBroker.java	2009-05-18 17:17:46 UTC (rev 1821)
+++ trunk/src/CacheWolf/GuiImageBroker.java	2009-05-18 18:14:12 UTC (rev 1822)
@@ -10,7 +10,7 @@
 
 public final class GuiImageBroker {
 	
-	// TODO: check with Image an mImage
+	// TODO: check with Image and mImage
 	
 	/**
 	 * images to be displayed for cache types in GUI

Modified: trunk/src/exp/TomTomExporter.java
===================================================================
--- trunk/src/exp/TomTomExporter.java	2009-05-18 17:17:46 UTC (rev 1821)
+++ trunk/src/exp/TomTomExporter.java	2009-05-18 18:14:12 UTC (rev 1822)
@@ -1,6 +1,5 @@
 package exp;
 
-
 import CacheWolf.*;
 import ewe.ui.*;
 import ewe.util.*;
@@ -20,10 +19,7 @@
 	CacheDB cacheDB;
 	Preferences pref;
 	Profile profile;
-
 	
-
-	
 	public TomTomExporter() {
 		profile = Global.getProfile();
 		pref = Global.getPref();
@@ -68,13 +64,13 @@
 		String ext, fileName = null;
 
 		CacheHolder holder;
-		ProgressBarForm pbf = new ProgressBarForm();
+		ProgressBarForm progressForm = new ProgressBarForm();
 		Handle h = new Handle();
 		int currExp, counter;
 		
-		pbf.showMainTask = false;
-		pbf.setTask(h,"Exporting ...");
-		pbf.exec();
+		progressForm.showMainTask = false;
+		progressForm.setTask(h,"Exporting ...");
+		progressForm.exec();
 		
 		currExp = 0;
 		counter = 0;
@@ -83,16 +79,23 @@
 		}
 		
 		ext = format==TT_ASC?".asc":".ov2";
+
 		try{
 			//loop through type
 			for(int j = 0; j < CacheType.guiTypeStrings().length; j++){
-				fileName = dirName + "/" + prefix + CacheType.guiTypeStrings()[j]+ ext;
+				String typeName = CacheType.guiTypeStrings()[j];
+				if (typeName.startsWith("Addi: ")) {
+					typeName = typeName.substring(6);
+				}
+				
+				fileName = dirName + "/" + prefix + typeName + ext;
 				dfile = new File(fileName);
 				dfile.delete();
 				out =  new RandomAccessFile(fileName,"rw");
 				for(int i = 0; i<cacheDB.size(); i++){
 					holder=cacheDB.get(i);
-					if(holder.getType() == new Integer(CacheType.guiSelect2Cw(j)).intValue() && holder.isVisible() == false){
+
+					if(holder.getType() == CacheType.guiSelect2Cw(j) && holder.isVisible() == true){
 						currExp++;
 						h.progress = (float)currExp/(float)counter;
 						h.changed();
@@ -110,15 +113,14 @@
 				if (dfile.length()==0) {
 					dfile.delete();
 				} else {
-					copyIcon(j, dirName + "/" + prefix + CacheType.guiTypeStrings()[j]); 
+					copyIcon(j, dirName + "/" + prefix,typeName); 
 				}
 			}//for wayType
-			pbf.exit(0);
+			progressForm.exit(0);
 		} catch (IOException e){
 			Vm.debug("Problem creating file! " + fileName);
 			e.printStackTrace();
 		}//try
-		
 	}
 	
 	public void writeSingleFile(int format, String fileName){
@@ -158,7 +160,7 @@
 				}//if
 			}//for
 			out.close();
-			copyIcon(0, fileName.substring(0,fileName.indexOf(".")));
+			copyIcon(0, fileName.substring(0,fileName.indexOf(".")),"");
 			pbf.exit(0);
 		}catch (Exception e){
 			Vm.debug("Problem writing to file! " + fileName);
@@ -194,7 +196,6 @@
 		return;
 	}
 
-	
 	public void writeRecordBinary(RandomAccessFile outp, CacheHolder ch, String lat, String lon){
 		int d,data;
 		double latlon;
@@ -252,34 +253,32 @@
 		return;
 	}
 	
-	public void copyIcon(int intWayType, String filename){
+	public void copyIcon(int intWayType, String prefix, String typeName){
 		try {
 			ZipFile zif = new ZipFile (FileBase.getProgramDirectory() + "/POIIcons.zip");
 			ZipEntry zipEnt;
 			int len;
 			String entName; 
 			
-			entName = "TomTomIcons/"+ "GC-" + CacheType.guiTypeStrings()[intWayType] + ".bmp";
+			entName = "TomTomIcons/"+ "GC-" + typeName + ".bmp";
 			zipEnt = zif.getEntry(entName);
 			if (zipEnt == null) return;
 			
 		    byte[] buff = new byte[ zipEnt.getSize() ];
 		    InputStream  fis = zif.getInputStream(zipEnt);
-		    FileOutputStream fos = new FileOutputStream( filename + ".bmp");
+		    FileOutputStream fos = new FileOutputStream( prefix + typeName + ".bmp");
 		    while( 0 < (len = fis.read( buff )) )
 		      fos.write( buff, 0, len );
 		    fos.flush();
 		    fos.close();
 		    fis.close();
 		} catch (ZipException e) {
-			Vm.debug("Problem copying Icon" + "GC-" + CacheType.guiTypeStrings()[intWayType] + ".bmp" );
+			Vm.debug("Problem copying Icon" + "GC-" + typeName + ".bmp" );
 			e.printStackTrace();
 		} catch (IOException e) {
-			Vm.debug("Problem copying Icon" + "GC-" + CacheType.guiTypeStrings()[intWayType] + ".bmp" );
+			Vm.debug("Problem copying Icon" + "GC-" + typeName + ".bmp" );
 			e.printStackTrace();
 		}
-
-		
 	}
 	
 }



From engywuck at mail.berlios.de  Mon May 18 20:31:37 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Mon, 18 May 2009 20:31:37 +0200
Subject: [Cachewolf-svn] r1823 - trunk/src/CacheWolf
Message-ID: <200905181831.n4IIVbR1025623@sheep.berlios.de>

Author: engywuck
Date: 2009-05-18 20:31:35 +0200 (Mon, 18 May 2009)
New Revision: 1823

Modified:
   trunk/src/CacheWolf/DetailsPanel.java
   trunk/src/CacheWolf/FilterScreen.java
Log:
Design change on filter screen regarding list of named filters. Now CW always asks for an ID for the named filter and it is no longer possible to directly enter text in the filter list. This is preventing the SIP to appear and we can avoid rearranging the buttons.

Additionally: The type and size fields in the details panel don't cycle their content anymore when unintentionally clicked with the mouse or the pen. 

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-05-18 18:14:12 UTC (rev 1822)
+++ trunk/src/CacheWolf/DetailsPanel.java	2009-05-18 18:31:35 UTC (rev 1823)
@@ -97,12 +97,14 @@
 
 		this.addNext(new mLabel(MyLocale.getMsg(300,"Type:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.NORTHWEST));
 		CellPanel line1Panel = new CellPanel();
+		chcType.alwaysDrop = true;
 		line1Panel.addNext(chcType,CellConstants.HSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
 		line1Panel.addLast(lblDiff=new mLabel(MyLocale.getMsg(1000,"D")+": 5.5"),CellConstants.DONTSTRETCH,(CellConstants.DONTFILL|CellConstants.EAST));
 		this.addLast(line1Panel,DONTSTRETCH,HFILL).setTag(CellConstants.SPAN, new Dimension(2,1));
 		
 		this.addNext(new mLabel(MyLocale.getMsg(301,"Size:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 		CellPanel line2Panel = new CellPanel();
+		chcSize.alwaysDrop = true;
 		line2Panel.addNext(chcSize,CellConstants.HSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
 		line2Panel.addLast(lblTerr=new mLabel(MyLocale.getMsg(1001,"T")+": 5.5"),CellConstants.DONTSTRETCH,(CellConstants.DONTFILL|CellConstants.EAST));
 		this.addLast(line2Panel,DONTSTRETCH,HFILL).setTag(CellConstants.SPAN, new Dimension(2,1));

Modified: trunk/src/CacheWolf/FilterScreen.java
===================================================================
--- trunk/src/CacheWolf/FilterScreen.java	2009-05-18 18:14:12 UTC (rev 1822)
+++ trunk/src/CacheWolf/FilterScreen.java	2009-05-18 18:31:35 UTC (rev 1823)
@@ -27,7 +27,8 @@
 	                  chkArchived, chkNotArchived, chkAvailable, chkNotAvailable,
 					  chkNW, chkNNW , chkN , chkNNE, chkNE, chkENE, chkE, chkESE, chkSE, chkSSE, chkS,
 					  chkSSW, chkSW, chkWSW, chkW, chkWNW, chkWherigo;
-	private mComboBox chcStatus, fltList;
+	private mComboBox chcStatus;
+	private mChoice   fltList;
 	private mCheckBox chkUseRegexp;
 	
 	private mInput inpDist, inpTerr, inpDiff;
@@ -273,22 +274,6 @@
 		frmScreen.borderStyle=UIConstants.BDR_RAISEDOUTER|UIConstants.BDR_SUNKENINNER|UIConstants.BF_BOTTOM;
 		this.addLast(frmScreen,HSTRETCH,HFILL);
 		
-		// Had to move the button panel to the top, so that the SIP can't display over the 
-		// filter list field - in case we want to enter a new filter name.
-		CellPanel savDelPanel = new CellPanel(); // Panel for "save" and "delete" button
-		savDelPanel.equalWidths = true;
-		mImage savImg=new mImage("clsave.png"); savImg.transparentColor=new Color(255,0,0);
-		savDelPanel.addNext(btnSaveFlt = new mButton(savImg),STRETCH,FILL);
-		savDelPanel.addLast(btnDelFlt = new mButton(new mImage("trash.png")),STRETCH,FILL);
-		Panel fltListPanel = new Panel();
-		fltListPanel.addLast(fltList = new mComboBox());
-		fltListPanel.addLast(savDelPanel);
-		Panel btPanel = new Panel();
-		btPanel.addNext(btnCancel = new mButton(MyLocale.getMsg(708,"Cancel")),CellConstants.STRETCH, CellConstants.FILL);
-		btPanel.addNext(btnApply = new mButton(MyLocale.getMsg(709,"Apply")),CellConstants.STRETCH, CellConstants.FILL);
-		btPanel.addLast(fltListPanel,CellConstants.STRETCH, CellConstants.FILL);
-//		btPanel.addLast(btnRoute = new mButton("Route"),CellConstants.STRETCH, CellConstants.FILL);
-		addLast(btPanel.setTag(CellConstants.SPAN, new Dimension(3,1)), CellConstants.STRETCH, CellConstants.FILL);
 
 		CellPanel pnlButtons=new CellPanel();
 		pnlButtons.addLast(new mLabel("Filter"));
@@ -313,9 +298,21 @@
 		cp.addItem(pnlCacheAttributes,"Attr",null);
 		addLast(cp,VSTRETCH,FILL);
 
-		// ***********
-		// Here: Former position of Cancel/Apply buttons
-		// ***********
+		CellPanel savDelPanel = new CellPanel(); // Panel for "save" and "delete" button
+		savDelPanel.equalWidths = true;
+		mImage savImg=new mImage("clsave.png"); savImg.transparentColor=new Color(255,0,0);
+		savDelPanel.addNext(btnSaveFlt = new mButton(savImg),STRETCH,FILL);
+		savDelPanel.addLast(btnDelFlt = new mButton(new mImage("trash.png")),STRETCH,FILL);
+		Panel fltListPanel = new Panel();
+		fltListPanel.addLast(fltList = new mChoice());
+		fltListPanel.addLast(savDelPanel);
+		CellPanel btPanel = new CellPanel();
+		btPanel.equalWidths = true;
+		btPanel.addNext(fltListPanel,CellConstants.STRETCH, CellConstants.FILL);
+		btPanel.addNext(btnCancel = new mButton(MyLocale.getMsg(708,"Cancel")),CellConstants.STRETCH, CellConstants.FILL);
+		btPanel.addLast(btnApply = new mButton(MyLocale.getMsg(709,"Apply")),CellConstants.STRETCH, CellConstants.FILL);
+//		btPanel.addLast(btnRoute = new mButton("Route"),CellConstants.STRETCH, CellConstants.FILL);
+		addLast(btPanel.setTag(CellConstants.SPAN, new Dimension(3,1)), CellConstants.STRETCH, CellConstants.FILL);
 		
 		int sw = MyLocale.getScreenWidth(); int sh = MyLocale.getScreenHeight(); 
 		Preferences pref = Global.getPref();int fs = pref.fontSize;
@@ -635,20 +632,22 @@
 				String ID = fltList.getText();
 				FilterData data = getDataFromScreen();
 				MessageBox mBox;
-				if (ID.equals("")) {
-					mBox = new MessageBox(MyLocale.getMsg(221,"No filter name"), MyLocale.getMsg(222,"Please enter a name for the filter") , FormBase.IDOK);
-					mBox.execute();
-				} else if (Global.getPref().hasFilter(ID)) {
-					mBox = new MessageBox(MyLocale.getMsg(221,"Overwrite Filter?"), MyLocale.getMsg(222,"The filter already exists. Overwrite it?") , FormBase.IDYES |FormBase.IDNO);
-					if (mBox.execute() == FormBase.IDYES){
-						Global.getPref().addFilter(ID, data);
+				InputBox inp = new InputBox("ID");
+				String newID = inp.input(ID, 20);
+				if (newID != null && !newID.equals("")) {
+					if (Global.getPref().hasFilter(newID)) {
+						mBox = new MessageBox(MyLocale.getMsg(221,"Overwrite Filter?"), MyLocale.getMsg(222,"The filter already exists. Overwrite it?") , FormBase.IDYES |FormBase.IDNO);
+						if (mBox.execute() == FormBase.IDYES){
+							Global.getPref().addFilter(newID, data);
+							savedFiltersChanged = true;
+							buildFilterList();
+						} 
+					} else {
+						Global.getPref().addFilter(newID, data);
 						savedFiltersChanged = true;
+						buildFilterList();
 					}	
-				} else {
-					Global.getPref().addFilter(ID, data);
-					savedFiltersChanged = true;
 				}	
-				buildFilterList();
 			} else if (ev.target == btnDelFlt) {
 				String ID = fltList.getText();
 				if (!ID.equals("")) {
@@ -725,11 +724,11 @@
 	 * reflects the filters that are currenty in memory.
 	 */
 	private void buildFilterList() {
-		while (fltList.choice.itemsSize()>0) {
-			fltList.choice.deleteItem(0);
+		while (fltList.itemsSize()>0) {
+			fltList.deleteItem(0);
 		}
-		fltList.choice.addItems(Global.getPref().getFilterIDs());
-		fltList.choice.updateItems();
+		fltList.addItems(Global.getPref().getFilterIDs());
+		fltList.updateItems();
 	}
 	
 	/**



From greiol at mail.berlios.de  Mon May 18 21:54:31 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Mon, 18 May 2009 21:54:31 +0200
Subject: [Cachewolf-svn] r1824 - in trunk: resources src/CacheWolf src/exp
Message-ID: <200905181954.n4IJsVAa005132@sheep.berlios.de>

Author: greiol
Date: 2009-05-18 21:54:29 +0200 (Mon, 18 May 2009)
New Revision: 1824

Added:
   trunk/resources/guiError.png
Modified:
   trunk/src/CacheWolf/FilterScreen.java
   trunk/src/CacheWolf/GuiImageBroker.java
   trunk/src/exp/KMLExporter.java
   trunk/src/exp/TPLExporter.java
Log:
added general error image
flagged tplexporter and kml expoter as broken (others do seem to work)
filterscrenn now fetches type images from guiimagebroker

Added: trunk/resources/guiError.png
===================================================================
(Binary files differ)


Property changes on: trunk/resources/guiError.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/src/CacheWolf/FilterScreen.java
===================================================================
--- trunk/src/CacheWolf/FilterScreen.java	2009-05-18 18:31:35 UTC (rev 1823)
+++ trunk/src/CacheWolf/FilterScreen.java	2009-05-18 19:54:29 UTC (rev 1824)
@@ -85,8 +85,10 @@
 	}
 	private myChkBox addiWptChk;
 	
-	private mButton addImg(String imgName) {
-		mButton mb=new mButton(new mImage(imgName)); mb.borderWidth=0; mb.modify(NotEditable|PreferredSizeOnly,0);
+	private mButton addImg(Image image) {
+		mButton mb = new mButton(image);
+		mb.borderWidth=0; 
+		mb.modify(NotEditable|PreferredSizeOnly,0);
 		return mb;
 	}
 	private void addTitle(CellPanel c, String pTitle) {
@@ -174,48 +176,48 @@
 		//////////////////////////
 		
 		addTitle(pnlCacheTypes,MyLocale.getMsg(719,"Cache types"));
-		pnlCacheTypes.addNext(addImg("2.png"));
+		pnlCacheTypes.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_TRADITIONAL)));
 		pnlCacheTypes.addNext(chkTrad = new mCheckBox("Traditonal"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("3.png"));
+		pnlCacheTypes.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_MULTI)));
 		pnlCacheTypes.addLast(chkMulti = new mCheckBox("Multi"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("4.png"));
+		pnlCacheTypes.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_VIRTUAL)));
 		pnlCacheTypes.addNext(chkVirtual = new mCheckBox("Virtual"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("5.png"));
+		pnlCacheTypes.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_LETTERBOX)));
 		pnlCacheTypes.addLast(chkLetter = new mCheckBox("Letterbox"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("6.png"));
+		pnlCacheTypes.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_EVENT)));
 		pnlCacheTypes.addNext(chkEvent = new mCheckBox("Event"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("11.png"));
+		pnlCacheTypes.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_WEBCAM)));
 		pnlCacheTypes.addLast(chkWebcam = new mCheckBox("Webcam"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("8.png"));
+		pnlCacheTypes.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_UNKNOWN)));
 		pnlCacheTypes.addNext(chkMystery = new mCheckBox("Mystery"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("137.png"));
+		pnlCacheTypes.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_EARTH)));
 		pnlCacheTypes.addLast(chkEarth = new mCheckBox("Earth"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("12.png"));
+		pnlCacheTypes.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_LOCATIONLESS)));
 		pnlCacheTypes.addNext(chkLocless = new mCheckBox("Locationless"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("453.png"));
+		pnlCacheTypes.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_MEGA_EVENT)));
 		pnlCacheTypes.addLast(chkMega = new mCheckBox("Mega-Ev."), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg("13.png"));
+		pnlCacheTypes.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_VIRTUAL)));
 		pnlCacheTypes.addNext(chkCito = new mCheckBox("Cito-Ev."), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
 		//pnlCacheTypes.addLast(addiWptChk = new mCheckBox("Add. Wpt"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		//pnlCacheTypes.addLast(new mLabel(""));
-		pnlCacheTypes.addNext(addImg("0.png"));
+		pnlCacheTypes.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_CUSTOM)));
 		pnlCacheTypes.addLast(chkCustom = new mCheckBox("Custom"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 
-		pnlCacheTypes.addNext(addImg("1858.png"));
+		pnlCacheTypes.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_WHEREIGO)));
 		pnlCacheTypes.addNext(chkWherigo = new myChkBox("WherIGo"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 
-		pnlCacheTypes.addNext(addImg("110.png"));
+		pnlCacheTypes.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_DRIVE_IN)));
 		pnlCacheTypes.addNext(addiWptChk = new myChkBox("Add. Wpt"), CellConstants.DONTSTRETCH, CellConstants.FILL);
 
 		//addiWptChk.modify(0,NotAnEditor);
@@ -223,17 +225,17 @@
 		// Panel 5 - Addi waypoints
 		//////////////////////////
 		addTitle(pnlAddi,MyLocale.getMsg(726,"Additional waypoints"));
-		pnlAddi.addNext(addImg("pkg.png"));
+		pnlAddi.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_PARKING)));
 		pnlAddi.addNext(chkParking = new mCheckBox("Parking"), CellConstants.DONTSTRETCH, CellConstants.FILL);
-		pnlAddi.addNext(addImg("stage.png"));
+		pnlAddi.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_STAGE)));
 		pnlAddi.addLast(chkStage = new mCheckBox("Stage"), CellConstants.DONTSTRETCH, CellConstants.FILL);
-		pnlAddi.addNext(addImg("puzzle.png"));
+		pnlAddi.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_QUESTION)));
 		pnlAddi.addNext(chkQuestion = new mCheckBox("Question"), CellConstants.DONTSTRETCH, CellConstants.FILL);
-		pnlAddi.addNext(addImg("flag.png"));
+		pnlAddi.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_FINAL)));
 		pnlAddi.addLast(chkFinal = new mCheckBox("Final"), CellConstants.DONTSTRETCH, CellConstants.FILL);
-		pnlAddi.addNext(addImg("trailhead.png"));
+		pnlAddi.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_TRAILHEAD)));
 		pnlAddi.addNext(chkTrailhead = new mCheckBox("Trailhead"), CellConstants.DONTSTRETCH, CellConstants.FILL);
-		pnlAddi.addNext(addImg("waypoint.png"));
+		pnlAddi.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_REFERENCE)));
 		pnlAddi.addLast(chkReference = new mCheckBox("Reference"), CellConstants.DONTSTRETCH, CellConstants.FILL);
         pnlAddi.addLast(new mLabel(""),VSTRETCH,FILL);		
 

Modified: trunk/src/CacheWolf/GuiImageBroker.java
===================================================================
--- trunk/src/CacheWolf/GuiImageBroker.java	2009-05-18 18:31:35 UTC (rev 1823)
+++ trunk/src/CacheWolf/GuiImageBroker.java	2009-05-18 19:54:29 UTC (rev 1824)
@@ -12,6 +12,9 @@
 	
 	// TODO: check with Image and mImage
 	
+	/** image to be displayed in case of error */
+	public static Image imageError = new Image("guiError.png");
+	
 	/**
 	 * images to be displayed for cache types in GUI
 	 * @see getTypeImage
@@ -82,8 +85,6 @@
 		case CacheType.CW_TYPE_WEBCAM: return typeImages[20];
 		case CacheType.CW_TYPE_WHEREIGO: return typeImages[21];
 		default: throw new IllegalArgumentException("unmatched id "+id+" in GuiImageBroker getTypeImage()");
-		}
-		
+		}	
 	}
-
 }

Modified: trunk/src/exp/KMLExporter.java
===================================================================
--- trunk/src/exp/KMLExporter.java	2009-05-18 18:31:35 UTC (rev 1823)
+++ trunk/src/exp/KMLExporter.java	2009-05-18 19:54:29 UTC (rev 1824)
@@ -1,5 +1,7 @@
 package exp;
 
+//FIXME: broken!
+
 import ewe.io.BufferedWriter;
 import ewe.io.File;
 import ewe.io.FileBase;

Modified: trunk/src/exp/TPLExporter.java
===================================================================
--- trunk/src/exp/TPLExporter.java	2009-05-18 18:31:35 UTC (rev 1823)
+++ trunk/src/exp/TPLExporter.java	2009-05-18 19:54:29 UTC (rev 1824)
@@ -25,6 +25,8 @@
 
 package exp;
 
+//FIXME: broken
+
 import CacheWolf.CWPoint;
 import CacheWolf.CacheDB;
 import CacheWolf.CacheHolder;



From mik77 at mail.berlios.de  Mon May 18 22:03:40 2009
From: mik77 at mail.berlios.de (mik77 at mail.berlios.de)
Date: Mon, 18 May 2009 22:03:40 +0200
Subject: [Cachewolf-svn] r1825 - in trunk: res_noewe/languages src/CacheWolf
Message-ID: <200905182003.n4IK3eFL006351@sheep.berlios.de>

Author: mik77
Date: 2009-05-18 22:03:35 +0200 (Mon, 18 May 2009)
New Revision: 1825

Modified:
   trunk/res_noewe/languages/DE.cfg
   trunk/res_noewe/languages/EN.cfg
   trunk/src/CacheWolf/GPXImporter.java
   trunk/src/CacheWolf/MainMenu.java
   trunk/src/CacheWolf/OCXMLImporter.java
   trunk/src/CacheWolf/OCXMLImporterScreen.java
   trunk/src/CacheWolf/Preferences.java
   trunk/src/CacheWolf/SpiderGC.java
Log:
- additional spider options in import dialog (spider TBs, max Logs)
- show import dialog on update
- save and load preferences in import dialog

Modified: trunk/res_noewe/languages/DE.cfg
===================================================================
--- trunk/res_noewe/languages/DE.cfg	2009-05-18 19:54:29 UTC (rev 1824)
+++ trunk/res_noewe/languages/DE.cfg	2009-05-18 20:03:35 UTC (rev 1825)
@@ -409,6 +409,8 @@
 		1622=Gefundene Caches nicht laden
 		1623=Max. Anzahl:
 		1624=+Caches
+		1625=TBs downloaden
+		1626=Max. Logs:
 		1700=Fehler in Zeile:
 		1701=Spalte:
 		1702=Variable nicht definiert:
@@ -734,6 +736,7 @@
 		5000=Lade Cacheliste
 		5001=Hilfswegpunkte k%f6nnnen nicht direkt gespidert werden.%0aBitte zus%e4tzlich den Vater anhaken.
 		5002=: Diese Funktion steht gegenw%e4rtig nur f%fcr Geocaching.com und Opencaching.de zur Verf%fcgung.
+		5003=Optionen
 		5497=Fehler: Ein Tag in spider.def fehlt
 		5498=Login nicht m%f6glich. Fehler beim Laden der Seite nach Login.
 		5499=Fehler beim Laden der Login Seite.%0aBitte %fcberpr%fcfen Sie Ihre Internetverbindung.

Modified: trunk/res_noewe/languages/EN.cfg
===================================================================
--- trunk/res_noewe/languages/EN.cfg	2009-05-18 19:54:29 UTC (rev 1824)
+++ trunk/res_noewe/languages/EN.cfg	2009-05-18 20:03:35 UTC (rev 1825)
@@ -386,8 +386,8 @@
 		1514=Cannot recalculate distances, because the GPS position is not set
 		1600=Opencahing.de Download
 		1601=Distance:
-		1602=Download Images
-		1603=Download Maps
+		1602=Download images
+		1603=Download maps
 		1604=Cancel
 		1605=OK
 		1606=redownload all
@@ -409,6 +409,8 @@
 		1622=Exclude found caches
 		1623=Max. number:
 		1624=+caches
+		1625=Download TBs
+		1626=Max. logs:
 		1700=Error on line:
 		1701= position:
 		1702=Variable not defined:
@@ -725,6 +727,7 @@
 		5000=Load Cachelist
 		5001=Can't spider additional waypoint directly.%0aPlease check main cache.
 		5002=: At the moment this function is only applicable for geocaching.com and opencaching.de.
+		5003=Options
 		5497=Error missing tag in spider.def
 		5500=Error
 		5501=Login failed! Wrong account or password?

Modified: trunk/src/CacheWolf/GPXImporter.java
===================================================================
--- trunk/src/CacheWolf/GPXImporter.java	2009-05-18 19:54:29 UTC (rev 1824)
+++ trunk/src/CacheWolf/GPXImporter.java	2009-05-18 20:03:35 UTC (rev 1825)
@@ -84,7 +84,7 @@
 			ewe.io.Reader r;
 			String file;
 			
-			OCXMLImporterScreen options = new OCXMLImporterScreen("Spider Options", OCXMLImporterScreen.IMAGES);
+			OCXMLImporterScreen options = new OCXMLImporterScreen(MyLocale.getMsg(5510,"Spider Options"), OCXMLImporterScreen.IMAGES| OCXMLImporterScreen.ISGC);
 			if (options.execute() == FormBase.IDCANCEL) {	return; }
 			//String dist = options.distanceInput.getText();
 			//if (dist.length()== 0) return;

Modified: trunk/src/CacheWolf/MainMenu.java
===================================================================
--- trunk/src/CacheWolf/MainMenu.java	2009-05-18 19:54:29 UTC (rev 1824)
+++ trunk/src/CacheWolf/MainMenu.java	2009-05-18 20:03:35 UTC (rev 1825)
@@ -699,6 +699,9 @@
 		CacheDB cacheDB=profile.cacheDB;
 		CacheHolder ch;
 		
+		OCXMLImporterScreen options = new OCXMLImporterScreen(MyLocale.getMsg(5003,"Options"), OCXMLImporterScreen.IMAGES| OCXMLImporterScreen.TRAVELBUGS| OCXMLImporterScreen.MAXLOGS);
+		if (options.execute() == FormBase.IDCANCEL) {	return; }
+		
 		SpiderGC spider = new SpiderGC(pref, profile, false);
 		OCXMLImporter ocSync = new OCXMLImporter(pref, profile);
 		//Vm.debug("ByPass? " + profile.byPassIndexActive);

Modified: trunk/src/CacheWolf/OCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/OCXMLImporter.java	2009-05-18 19:54:29 UTC (rev 1824)
+++ trunk/src/CacheWolf/OCXMLImporter.java	2009-05-18 20:03:35 UTC (rev 1825)
@@ -127,7 +127,7 @@
 			+ "modifiedsince=" + lastS
 			+ "&cache=1"
 			+ "&cachedesc=1";
-		if (pref.downloadPicsOC) url += "&picture=1";
+		if (pref.downloadPics) url += "&picture=1";
 		else url += "&picture=0";
 		url += "&cachelog=1"
 			+ "&removedobject=0"
@@ -184,7 +184,7 @@
 			+ "modifiedsince=" + lastS
 			+ "&cache=1"
 			+ "&cachedesc=1";
-		if (pref.downloadPicsOC) url += "&picture=1";
+		if (pref.downloadPics) url += "&picture=1";
 		else url += "&picture=0";
 		url += "&cachelog=1"
 			+ "&removedobject=0"
@@ -504,7 +504,7 @@
 
 		if (!ignoreDesc){
 			if (name.equals("cachedesc")){
-				if (pref.downloadPicsOC && holder.is_HTML()) {
+				if (pref.downloadPics && holder.is_HTML()) {
 					String fetchUrl, imgTag, imgAltText;
 					Regex imgRegexUrl = new Regex("(<img[^>]*src=[\"\']([^>^\"^\']*)[^>]*>|<img[^>]*src=([^>^\"^\'^ ]*)[^>]*>)"); //  Ergebnis enth?lt keine Anf?hrungszeichen
 					Regex imgRegexAlt = new Regex("(?:alt=[\"\']([^>^\"^\']*)|alt=([^>^\"^\'^ ]*))"); // get alternative text for Pic
@@ -581,7 +581,7 @@
 					holder.getFreshDetails().Images.add(fileName);
 				}
 				else {
-					if (pref.downloadPicsOC) {
+					if (pref.downloadPics) {
 						holder.getFreshDetails().Images.add(fetch(fetchURL, fileName));
 					}
 				}

Modified: trunk/src/CacheWolf/OCXMLImporterScreen.java
===================================================================
--- trunk/src/CacheWolf/OCXMLImporterScreen.java	2009-05-18 19:54:29 UTC (rev 1824)
+++ trunk/src/CacheWolf/OCXMLImporterScreen.java	2009-05-18 20:03:35 UTC (rev 1825)
@@ -3,6 +3,7 @@
  */
 package CacheWolf;
 
+import ewe.sys.Convert;
 import ewe.ui.*;
 
 /**
@@ -16,29 +17,35 @@
 	Preferences pref;
 	mInput distanceInput;
 	mInput maxNumberInput;
-	mCheckBox imagesCheckBox, /*mapsCheckBox, */ missingCheckBox, foundCheckBox;
+	mInput maxLogsInput;
+	mCheckBox imagesCheckBox, /*mapsCheckBox, */ missingCheckBox, foundCheckBox, travelbugsCheckBox;
 	mLabel distLbl;
 	mLabel maxNumberLbl;
 	mLabel distUnit;
+	boolean isGC = true;
 	static int DIST = 1;
 	static int IMAGES = 2;
 	static int ALL = 4;
 	static int INCLUDEFOUND = 8;
 	static int ISGC = 16;
 	static int MAXNUMBER = 32;
+	static int TRAVELBUGS = 64;
+	static int MAXLOGS = 128;
 
 	
 	public OCXMLImporterScreen(String title, int options) {
 		super();
 		pref = Global.getPref(); // myPreferences sollte sp?ter auch diese Einstellungen speichern
 		
+		isGC = ((options & ISGC) > 0);
+		
 		this.title = title;
 		if ((options & DIST) > 0) {
 			this.addNext(distLbl = new mLabel(MyLocale.getMsg(1601,"Distance:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 			distanceInput = new mInput();
 			String dist1;
 			String dist2;
-			if ((options & ISGC) > 0) {
+			if (isGC) {
 				dist1 = Global.getProfile().getDistGC();
 				dist2 = Global.getProfile().getDistOC();
 			} else {
@@ -61,17 +68,31 @@
 			} else {
 				maxNumberInput.setText(Integer.toString(pref.maxSpiderNumber));
 			}
-			maxNumberInput.setText(Integer.toString(pref.maxSpiderNumber));
 			this.addNext(maxNumberInput,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 			this.addLast( new mLabel(MyLocale.getMsg(1624," caches")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 		}
+		
+		if ((options & MAXLOGS) > 0) {
+			this.addNext(new mLabel(MyLocale.getMsg(1626,"Max. logs:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
+			maxLogsInput = new mInput();
+			maxLogsInput.setText(Convert.toString(pref.maxLogsToSpider));
+			this.addLast(maxLogsInput,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
+		}
 
 		if ((options & IMAGES) > 0) {
 			imagesCheckBox = new mCheckBox();
 			imagesCheckBox.setText(MyLocale.getMsg(1602,"Download Images"));
-			imagesCheckBox.setState(true); // @ToDo: aus Prefs
+			imagesCheckBox.setState(pref.downloadPics);
 			this.addLast(imagesCheckBox, CellConstants.DONTSTRETCH, CellConstants.DONTFILL|CellConstants.WEST);
 		}
+		
+		if ((options & TRAVELBUGS) > 0) {
+			travelbugsCheckBox = new mCheckBox();
+			travelbugsCheckBox.setText(MyLocale.getMsg(1625,"Download TBs"));
+			travelbugsCheckBox.setState(pref.downloadTBs);
+			this.addLast(travelbugsCheckBox, CellConstants.DONTSTRETCH, CellConstants.DONTFILL|CellConstants.WEST);
+		}
+		
 		if((options & INCLUDEFOUND) > 0){
 			foundCheckBox = new mCheckBox();
 			foundCheckBox.setText(MyLocale.getMsg(1622,"Exclude found caches"));
@@ -82,7 +103,7 @@
 		if((options & ALL) > 0){
 			missingCheckBox = new mCheckBox();
 			missingCheckBox.setText(MyLocale.getMsg(1606,"Alle erneut downloaden"));
-			missingCheckBox.setState(false); // @ToDo: aus Prefs
+			missingCheckBox.setState(pref.downloadmissingOC);
 			this.addLast(missingCheckBox, CellConstants.DONTSTRETCH, CellConstants.DONTFILL|CellConstants.WEST);
 		}
 
@@ -101,9 +122,11 @@
 			}
 			if (ev.target == okB){
 				    // distOC wird hier noch nicht in Pref eingetragen, damit noch gepr?ft werden kann, ob es gr??er oder kleiner ist als vorher
-					if (imagesCheckBox!=null) pref.downloadPicsOC = imagesCheckBox.state;
+					if (imagesCheckBox!=null) pref.downloadPics = imagesCheckBox.state;
 					if (missingCheckBox!=null) pref.downloadmissingOC = missingCheckBox.state;
-					// TODO: sofort speichern?
+					if (travelbugsCheckBox!=null) pref.downloadTBs = travelbugsCheckBox.state;
+					if (maxLogsInput!=null) pref.maxLogsToSpider=Common.parseInt(maxLogsInput.getText());
+					pref.savePreferences();
 				this.close(FormBase.IDOK);
 				}
 		}

Modified: trunk/src/CacheWolf/Preferences.java
===================================================================
--- trunk/src/CacheWolf/Preferences.java	2009-05-18 19:54:29 UTC (rev 1824)
+++ trunk/src/CacheWolf/Preferences.java	2009-05-18 20:03:35 UTC (rev 1825)
@@ -181,8 +181,6 @@
 	public String garminGPSBabelOptions="";
 	/** Max. length for Garmin waypoint names (for etrex which can only accept 6 chars) */
 	public int garminMaxLen=0;
-	public boolean downloadPicsOC = true; //TODO Sollten die auch im Profil gespeichert werden mit Preferences als default Werte ?
-	public boolean downloadMapsOC = true;
 	public boolean downloadmissingOC = false;
 	/** The currently used centre point, can be different from the profile's centrepoint. This is used
 	 *  for spidering */
@@ -217,6 +215,10 @@
 	public boolean exportTravelbugs = false;
 	/** Try to make a MyFinds GPX when exporting to GPX */
 	public boolean exportGpxAsMyFinds = true;
+	/** Download images when loading cache data */
+	public boolean downloadPics = true;
+	/** Download TB information when loading cache data */
+	public boolean downloadTBs = true;
 
 	//////////////////////////////////////////////
 	/** The debug switch (Can be used to activate dormant code) by adding
@@ -313,8 +315,6 @@
 			baseDir = atts.getValue("dir");
 		}
 		else if (name.equals("opencaching")) {
-			downloadPicsOC = Boolean.valueOf(atts.getValue("downloadPics")).booleanValue();
-			downloadMapsOC = Boolean.valueOf(atts.getValue("downloadMaps")).booleanValue();
 			downloadmissingOC = Boolean.valueOf(atts.getValue("downloadmissing")).booleanValue();
 
 		}
@@ -391,6 +391,10 @@
 			if (tmp != null) spiderUpdates=Convert.parseInt(tmp);
 			tmp = atts.getValue("maxSpiderNumber");
 			if (tmp != null) maxSpiderNumber=Convert.parseInt(tmp);
+			tmp = atts.getValue("downloadPics");
+			if (tmp != null) downloadPics=Boolean.valueOf(tmp).booleanValue();
+			tmp = atts.getValue("downloadTBs");
+			if (tmp != null) downloadTBs=Boolean.valueOf(tmp).booleanValue();
 		}
 		else if (name.equals("details")) {
 			maxDetails=Common.parseInt(atts.getValue("cacheSize"));
@@ -468,16 +472,16 @@
 			outp.print("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n");
 			outp.print("<preferences>\n");
 			outp.print("    <locale language=\"" + SafeXML.strxmlencode(language) + "\"/>\n");
-			outp.print("	<basedir dir = \"" + SafeXML.strxmlencode(baseDir) + "\"/>\n");
+			outp.print("    <basedir dir = \"" + SafeXML.strxmlencode(baseDir) + "\"/>\n");
 			outp.print("    <lastprofile autoreload=\"" + SafeXML.strxmlencode(autoReloadLastProfile) + "\">" + SafeXML.strxmlencode(lastProfile) + "</lastprofile>\n"); //RB
-			outp.print("	<alias name =\""+ SafeXML.clean(myAlias) +"\" password=\""+SafeXML.clean(password)+"\" />\n");
-			outp.print("	<alias2 name =\""+ SafeXML.clean(myAlias2) +"\"/>\n");
-			outp.print("	<gcmemberid name =\""+ SafeXML.clean(gcMemberId) +"\"/>\n");
-			outp.print("	<browser name = \"" + SafeXML.strxmlencode(browser) + "\"/>\n");
-			outp.print("	<proxy prx = \"" + SafeXML.strxmlencode(myproxy) + "\" prt = \"" + SafeXML.strxmlencode(myproxyport) + "\" active = \"" + SafeXML.strxmlencode(proxyActive) + "\" />\n");
-			outp.print("	<port portname = \"" + SafeXML.strxmlencode(mySPO.portName) + "\" baud = \"" + SafeXML.strxmlencode(mySPO.baudRate) + "\"/>\n");
-			outp.print("	<portforward active= \"" + SafeXML.strxmlencode(Convert.toString(forwardGPS)) + "\" destinationHost = \"" + SafeXML.strxmlencode(forwardGpsHost) + "\"/>\n");
-			outp.print("	<portlog active= \"" + SafeXML.strxmlencode(Convert.toString(logGPS)) + "\" logTimer = \"" + SafeXML.strxmlencode(logGPSTimer) + "\"/>\n");
+			outp.print("    <alias name =\""+ SafeXML.clean(myAlias) +"\" password=\""+SafeXML.clean(password)+"\" />\n");
+			outp.print("    <alias2 name =\""+ SafeXML.clean(myAlias2) +"\"/>\n");
+			outp.print("    <gcmemberid name =\""+ SafeXML.clean(gcMemberId) +"\"/>\n");
+			outp.print("    <browser name = \"" + SafeXML.strxmlencode(browser) + "\"/>\n");
+			outp.print("    <proxy prx = \"" + SafeXML.strxmlencode(myproxy) + "\" prt = \"" + SafeXML.strxmlencode(myproxyport) + "\" active = \"" + SafeXML.strxmlencode(proxyActive) + "\" />\n");
+			outp.print("    <port portname = \"" + SafeXML.strxmlencode(mySPO.portName) + "\" baud = \"" + SafeXML.strxmlencode(mySPO.baudRate) + "\"/>\n");
+			outp.print("    <portforward active= \"" + SafeXML.strxmlencode(Convert.toString(forwardGPS)) + "\" destinationHost = \"" + SafeXML.strxmlencode(forwardGpsHost) + "\"/>\n");
+			outp.print("    <portlog active= \"" + SafeXML.strxmlencode(Convert.toString(logGPS)) + "\" logTimer = \"" + SafeXML.strxmlencode(logGPSTimer) + "\"/>\n");
 			outp.print("    <font size =\"" + SafeXML.strxmlencode(fontSize) + "\"/>\n");
 			outp.print("    <screen menuattop=\""+menuAtTop+"\" tabsattop=\""+tabsAtTop+"\" showstatus=\""+showStatus+"\" hasclosebutton=\""+hasCloseButton+
 	                "\" h=\""+myAppHeight+"\" w=\""+myAppWidth+"\" />\n");
@@ -490,14 +494,14 @@
 			outp.print("    <solver ignorevariablecase=\"" + SafeXML.strxmlencode(solverIgnoreCase) + "\" degMode=\"" + SafeXML.strxmlencode(solverDegMode) + "\" />\n");
 			outp.print("    <garmin connection = \"" + SafeXML.strxmlencode(garminConn) + "\" GPSBabelOptions = \"" + SafeXML.strxmlencode(garminGPSBabelOptions) + "\" MaxWaypointLength = \"" + SafeXML.strxmlencode(garminMaxLen) +
 					        "\" addDetailsToWaypoint = \"" + SafeXML.strxmlencode(addDetailsToWaypoint) + "\" addDetailsToName = \"" + SafeXML.strxmlencode(addDetailsToName) + "\" />\n");
-			outp.print("    <opencaching downloadPicsOC=\"" + SafeXML.strxmlencode(downloadPicsOC) + "\" downloadMaps=\"" + SafeXML.strxmlencode(downloadMapsOC) + "\" downloadMissing=\"" + SafeXML.strxmlencode(downloadmissingOC) + "\"/>\n");
-			outp.print("	<location lat = \"" + SafeXML.strxmlencode(curCentrePt.getLatDeg(CWPoint.DD)) + "\" long = \"" + SafeXML.strxmlencode(curCentrePt.getLonDeg(CWPoint.DD)) + "\"/>\n");
-			outp.print("    <spider forcelogin=\"" + SafeXML.strxmlencode(forceLogin) + "\" spiderUpdates=\"" + SafeXML.strxmlencode(spiderUpdates) + "\" maxSpiderNumber=\"" + SafeXML.strxmlencode(maxSpiderNumber) + "\"/>\n");
+			outp.print("    <opencaching downloadMissing=\"" + SafeXML.strxmlencode(downloadmissingOC) + "\"/>\n");
+			outp.print("    <location lat = \"" + SafeXML.strxmlencode(curCentrePt.getLatDeg(CWPoint.DD)) + "\" long = \"" + SafeXML.strxmlencode(curCentrePt.getLonDeg(CWPoint.DD)) + "\"/>\n");
+			outp.print("    <spider forcelogin=\"" + SafeXML.strxmlencode(forceLogin) + "\" spiderUpdates=\"" + SafeXML.strxmlencode(spiderUpdates) + "\" maxSpiderNumber=\"" + SafeXML.strxmlencode(maxSpiderNumber) + "\" downloadPics=\"" + SafeXML.strxmlencode(downloadPics) + "\" downloadTBs=\"" + SafeXML.strxmlencode(downloadTBs) +"\"/>\n");
 			outp.print("    <gotopanel northcentered=\"" + SafeXML.strxmlencode(northCenteredGoto) + "\" />\n");
 			outp.print("    <details cacheSize=\"" + SafeXML.strxmlencode(maxDetails) + "\" delete=\"" + SafeXML.strxmlencode(deleteDetails) + "\"/>\n");
 			outp.print("    <metric type=\"" + SafeXML.strxmlencode(metricSystem) + "\"/>\n");
 			outp.print("    <export numberOfLogsToExport=\"" + SafeXML.strxmlencode(numberOfLogsToExport) + "\" exportTravelbugs=\"" + SafeXML.strxmlencode(exportTravelbugs) + "\" exportGpxAsMyFinds=\"" + SafeXML.strxmlencode(exportGpxAsMyFinds) + "\"/>\n");
-			if (customMapsPath!=null) outp.print("	<mapspath dir = \"" + SafeXML.strxmlencode(customMapsPath.replace('\\','/')) + "\"/>\n");
+			if (customMapsPath!=null) outp.print("    <mapspath dir = \"" + SafeXML.strxmlencode(customMapsPath.replace('\\','/')) + "\"/>\n");
 			// Saving filters
 			String[] filterIDs = this.getFilterIDs();
 			for (int i=0; i<filterIDs.length; i++){

Modified: trunk/src/CacheWolf/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/SpiderGC.java	2009-05-18 19:54:29 UTC (rev 1824)
+++ trunk/src/CacheWolf/SpiderGC.java	2009-05-18 20:03:35 UTC (rev 1825)
@@ -223,7 +223,7 @@
 		try{
 			// Read the cache data from GC.COM and compare to old data
 			boolean loadAllLogs = (MAXLOGS > 5);
-			ret=getCacheByWaypointName(ch,true,true,false,loadAllLogs);
+			ret=getCacheByWaypointName(ch,true,pref.downloadPics,pref.downloadTBs,false,loadAllLogs);
 			// Save the spidered data
 			if (ret == 1) {
 				CacheHolder cacheInDB = cacheDB.get(number);
@@ -306,12 +306,12 @@
 
 		OCXMLImporterScreen options;
 		if (spiderAllFinds) {
-			options = new OCXMLImporterScreen(MyLocale.getMsg(5510,"Spider Options"), OCXMLImporterScreen.MAXNUMBER|OCXMLImporterScreen.IMAGES| OCXMLImporterScreen.ISGC);
+			options = new OCXMLImporterScreen(MyLocale.getMsg(5510,"Spider Options"), OCXMLImporterScreen.MAXNUMBER|OCXMLImporterScreen.IMAGES| OCXMLImporterScreen.ISGC| OCXMLImporterScreen.TRAVELBUGS| OCXMLImporterScreen.MAXLOGS);
 			if (options.execute() == FormBase.IDCANCEL) {return; }
 
 			distance = 1;
 		} else {
-			options = new OCXMLImporterScreen(MyLocale.getMsg(5510,"Spider Options"),	OCXMLImporterScreen.MAXNUMBER|OCXMLImporterScreen.INCLUDEFOUND | OCXMLImporterScreen.DIST| OCXMLImporterScreen.IMAGES| OCXMLImporterScreen.ISGC);
+			options = new OCXMLImporterScreen(MyLocale.getMsg(5510,"Spider Options"),	OCXMLImporterScreen.MAXNUMBER|OCXMLImporterScreen.INCLUDEFOUND | OCXMLImporterScreen.DIST| OCXMLImporterScreen.IMAGES| OCXMLImporterScreen.ISGC| OCXMLImporterScreen.TRAVELBUGS| OCXMLImporterScreen.MAXLOGS);
 			if (options.execute() == FormBase.IDCANCEL) {return; }
 			String dist = options.distanceInput.getText();
 			if (dist.length()== 0) return;
@@ -339,6 +339,7 @@
 		boolean maxNumberAbort = false;
 
 		boolean getImages = options.imagesCheckBox.getState();
+		boolean getTBs = options.travelbugsCheckBox.getState();
 		options.close(0);
 
 		//max distance in miles for URL, so we can get more than 80km
@@ -553,7 +554,7 @@
 				infB.setInfo(MyLocale.getMsg(5513,"Loading: ") + wpt +" (" + (i+1) + " / " + totalCachesToLoad + ")");
 				holder = new CacheHolder();
 				holder.setWayPoint(wpt);
-				int test = getCacheByWaypointName(holder,false,getImages,doNotgetFound,loadAllLogs);
+				int test = getCacheByWaypointName(holder,false,getImages,getTBs,doNotgetFound,loadAllLogs);
 				if (test == -1) {
 					infB.close(0);
 					break;
@@ -608,12 +609,13 @@
 	 * @param CacheHolderDetail chD The element wayPoint must be set to the name of a waypoint
 	 * @param boolean isUpdate True if an existing cache is being updated, false if it is a new cache
 	 * @param boolean fetchImages True if the pictures are to be fetched
+	 * @param boolean fetchTBs True if the TBs are to be fetched
 	 * @param boolean doNotGetFound True if the cache is not to be spidered if it has already been found
 	 * @param boolean fetchAllLogs True if all logs are to be fetched (by adding option '&logs=y' to command line).
 	 *     This is normally false when spidering from GPXImport as the logs are part of the GPX file, and true otherwise
 	 * @return -1 if the infoBox was closed (cancel spidering), 0 if there was an error (continue with next cache), 1 if everything ok
 	 */
-	private int getCacheByWaypointName(CacheHolder ch, boolean isUpdate, boolean fetchImages, boolean doNotGetFound, boolean fetchAllLogs) {
+	private int getCacheByWaypointName(CacheHolder ch, boolean isUpdate, boolean fetchImages, boolean fetchTBs, boolean doNotGetFound, boolean fetchAllLogs) {
 		int ret = 1;
 		while (true) {
 			String completeWebPage;
@@ -760,7 +762,7 @@
 						// Bugs
 						//==========
 						// As there may be several bugs, we check whether the user has aborted
-						if (!infB.isClosed) getBugs(ch.getFreshDetails(),completeWebPage);
+						if (!infB.isClosed && fetchTBs) getBugs(ch.getFreshDetails(),completeWebPage);
 						ch.setHas_bugs(ch.getFreshDetails().Travelbugs.size()>0);
 
 						//==========



From mik77 at mail.berlios.de  Mon May 18 22:16:58 2009
From: mik77 at mail.berlios.de (mik77 at mail.berlios.de)
Date: Mon, 18 May 2009 22:16:58 +0200
Subject: [Cachewolf-svn] r1826 - trunk/res_noewe
Message-ID: <200905182016.n4IKGwj3008719@sheep.berlios.de>

Author: mik77
Date: 2009-05-18 22:16:57 +0200 (Mon, 18 May 2009)
New Revision: 1826

Modified:
   trunk/res_noewe/info.html
Log:
Added greiol to dev-list.

Modified: trunk/res_noewe/info.html
===================================================================
--- trunk/res_noewe/info.html	2009-05-18 20:03:35 UTC (rev 1825)
+++ trunk/res_noewe/info.html	2009-05-18 20:16:57 UTC (rev 1826)
@@ -3,7 +3,7 @@
 <font face="Tahoma" size = "3">
 <strong>A geocaching programm</strong><br>
 <font face="Tahoma" size = "2"><em>
-from Bilbowolf, Kalli, Pfeffer, salzkammergut, MiK, Blackeye501, mirabilos, Kappler, Engywuck<br>
+from Bilbowolf, Kalli, Pfeffer, salzkammergut, MiK, Blackeye501, mirabilos, Kappler, Engywuck, greiol<br>
 for Windows, Linux and Pocket PC</em><br>
 <br>
 CacheWolf was created sometime 2003 to enable paperless caching with a Sharp Zaurus.



From greiol at mail.berlios.de  Tue May 19 00:07:42 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Tue, 19 May 2009 00:07:42 +0200
Subject: [Cachewolf-svn] r1827 - in trunk/src: CacheWolf exp
Message-ID: <200905182207.n4IM7g5k022887@sheep.berlios.de>

Author: greiol
Date: 2009-05-19 00:07:35 +0200 (Tue, 19 May 2009)
New Revision: 1827

Added:
   trunk/src/CacheWolf/CacheTerrDiff.java
Modified:
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/DetailsPanel.java
   trunk/src/CacheWolf/Filter.java
   trunk/src/CacheWolf/GPXImporter.java
   trunk/src/CacheWolf/MyComparer.java
   trunk/src/CacheWolf/OCXMLImporter.java
   trunk/src/CacheWolf/ShowCacheInBrowser.java
   trunk/src/CacheWolf/SpiderGC.java
   trunk/src/CacheWolf/myTableModel.java
   trunk/src/exp/ExploristExporter.java
   trunk/src/exp/Exporter.java
   trunk/src/exp/GPXExporter.java
   trunk/src/exp/HTMLExporter.java
   trunk/src/exp/TPLExporter.java
   trunk/src/exp/TomTomExporter.java
Log:
added class CacheTerrDiff

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-18 20:16:57 UTC (rev 1826)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-18 22:07:35 UTC (rev 1827)
@@ -25,28 +25,6 @@
 public class CacheHolder {
 	protected static final String NOBEARING = "?";
 	protected static final String EMPTY = "";
-	protected static final byte DT_EMPTY = 0;
-	protected static final byte DT_10 = 10;
-	protected static final byte DT_15 = 15;
-	protected static final byte DT_20 = 20;
-	protected static final byte DT_25 = 25;
-	protected static final byte DT_30 = 30;
-	protected static final byte DT_35 = 35;
-	protected static final byte DT_40 = 40;
-	protected static final byte DT_45 = 45;
-	protected static final byte DT_50 = 50;
-	protected static final byte DT_UNKNOWN = -1;
-	protected static final String DT_EMPTY_TXT = "";
-	protected static final String DT_10_TXT = "1";
-	protected static final String DT_15_TXT = "1.5";
-	protected static final String DT_20_TXT = "2";
-	protected static final String DT_25_TXT = "2.5";
-	protected static final String DT_30_TXT = "3";
-	protected static final String DT_35_TXT = "3.5";
-	protected static final String DT_40_TXT = "4";
-	protected static final String DT_45_TXT = "4.5";
-	protected static final String DT_50_TXT = "5";
-	protected static final String DT_UNKNOWN_TXT = "?";
 
 	/** Cachestatus is Found, Not found or a date in format yyyy-mm-dd hh:mm for found date */
 	private String cacheStatus = EMPTY;
@@ -74,9 +52,9 @@
 	/** The angle (0=North, 180=South) from the current centre to this point */
 	public double degrees = 0;
 	/** The difficulty of the cache from 1 to 5 in .5 incements */ 
-	private String hard = EMPTY;
+	private byte hard = CacheTerrDiff.CW_DT_ERROR;
 	/** The terrain rating of the cache from 1 to 5 in .5 incements */
-	private String terrain = EMPTY;
+	private byte terrain = CacheTerrDiff.CW_DT_ERROR;
 	/** The cache type (@see CacheType for translation table)  */
 	private byte type = CacheType.CW_TYPE_ERROR; 
 	/** True if the cache has been archived */
@@ -103,8 +81,6 @@
 	public boolean is_flaged = false;
 	/** True if the cache has been selected using the tick box in the list view */
 	public boolean is_Checked = false;
-	/** Not used: This attribute is saved with the cache and read back but never set */
-//	public String dirty = EMPTY;
 	/** The unique OC cache ID */
 	private String ocCacheID = EMPTY;
 	/** The number of times this cache has not been found (max. 5) */
@@ -160,238 +136,256 @@
 	public CacheHolder(String xmlString, int version) {
 		int start,end;
 	        try {
-			if (version == 1) {
-		        start = xmlString.indexOf('"');
-		        end = xmlString.indexOf('"', start + 1);
-		        setCacheName(SafeXML.cleanback(xmlString.substring(start + 1, end)));
-		        
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setCacheOwner(SafeXML.cleanback(xmlString.substring(start + 1, end)));
-		        
-		        // Assume coordinates are in decimal format
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        double lat = Convert.parseDouble(xmlString.substring(start + 1, end).replace(
-		                notDecSep, decSep));
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        double lon = Convert.parseDouble(xmlString.substring(start + 1, end).replace(
-		                notDecSep, decSep));
-		        pos = new CWPoint(lat, lon);
-		        LatLon = pos.toString();
-		        
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setDateHidden(xmlString.substring(start + 1, end));
-		        // Convert the US format to YYYY-MM-DD if necessary
-		        if (getDateHidden().indexOf('/') > -1)
-			        setDateHidden(DateFormat.MDY2YMD(getDateHidden()));
-		        
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setWayPoint(SafeXML.cleanback(xmlString.substring(start + 1, end)));
-		        
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setCacheStatus(xmlString.substring(start + 1, end));
-		        
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        try {
-		        	setType(CacheType.v1Converter((xmlString.substring(start + 1, end))));
-		        } catch (IllegalArgumentException ex) {
-		        	setType(CacheType.CW_TYPE_ERROR);
-		        	Global.getPref().log(wayPoint, ex, true);
-		        	setIncomplete(true);
-		        }
-	            
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-	            setHard(CacheHolder.terrHard_OC2GC(xmlString.substring(start + 1, end)));
-
-	            start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-	            setTerrain(CacheHolder.terrHard_OC2GC(xmlString.substring(start + 1, end)));
-		        // The next item was 'dirty' but this is no longer used.
-
-	            start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setFiltered(xmlString.substring(start + 1, end).equals("true"));
-
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        try {
-		        	setCacheSize(CacheSize.v1Converter(xmlString.substring(start + 1, end)));
-		        } catch (IllegalArgumentException ex) {
-		        	setCacheSize(CacheSize.CW_SIZE_ERROR);
-		        	Global.getPref().log(wayPoint, ex, true);
-		        	setIncomplete(true);
-		        }
-		        
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setAvailable(xmlString.substring(start + 1, end).equals("true"));
-
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setArchived(xmlString.substring(start + 1, end).equals("true"));
-
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setHas_bugs(xmlString.substring(start + 1, end).equals("true"));
-
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setBlack(xmlString.substring(start + 1, end).equals("true"));
-		        if (is_black() != Global.getProfile().showBlacklisted())
-			        setFiltered(true);
-
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setOwned(xmlString.substring(start + 1, end).equals("true"));
-
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setFound(xmlString.substring(start + 1, end).equals("true"));
-
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setNew(xmlString.substring(start + 1, end).equals("true"));
-
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setLog_updated(xmlString.substring(start + 1, end).equals("true"));
-
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setUpdated(xmlString.substring(start + 1, end).equals("true"));
-		        // for backwards compatibility set value to true, if it is not in the file
-
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setHTML(!xmlString.substring(start + 1, end).equals("false"));
-
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-	            setNoFindLogs((byte)Convert.toInt(xmlString.substring(start + 1, end)));
-
-	            start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setOcCacheID(xmlString.substring(start + 1, end));
-
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setIncomplete(xmlString.substring(start + 1, end).equals("true") || incomplete);
-
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setLastSyncOC(xmlString.substring(start + 1, end));
-
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setNumRecommended(Convert.toInt(xmlString.substring(start + 1, end)));
-
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		        setNumFoundsSinceRecommendation(Convert.toInt(xmlString.substring(start + 1, end)));
-		        recommendationScore = LogList.getScore(getNumRecommended(),
-		                getNumFoundsSinceRecommendation());
-
-		        start = xmlString.indexOf('"', end + 1);
-	            end = xmlString.indexOf('"', start + 1);
-	            if (start > -1 && end > -1) {
-		            setAttributesYes(Convert.parseLong(xmlString.substring(start + 1, end)));
-
-
-		        start = xmlString.indexOf('"', end + 1);
-		        end = xmlString.indexOf('"', start + 1);
-		            if (start > -1 && end > -1)
-			            setAttributesNo(Convert.parseLong(xmlString.substring(start + 1, end)));
-	            }
-            } else if (version == 3 || version == 2) {
-	            start = xmlString.indexOf('"');
-	            end = xmlString.indexOf('"', start + 1);
-	            setCacheName(SafeXML.cleanback(xmlString.substring(start + 1, end)));
-	            
-	            start = xmlString.indexOf('"', end + 1);
-	            end = xmlString.indexOf('"', start + 1);
-	            setCacheOwner(SafeXML.cleanback(xmlString.substring(start + 1, end)));
-	            
-	            // Assume coordinates are in decimal format
-	            start = xmlString.indexOf('"', end + 1);
-	            end = xmlString.indexOf('"', start + 1);
-	            double lat = Convert.parseDouble(xmlString.substring(start + 1, end).replace(
-	                    notDecSep, decSep));
-	            start = xmlString.indexOf('"', end + 1);
-	            end = xmlString.indexOf('"', start + 1);
-	            double lon = Convert.parseDouble(xmlString.substring(start + 1, end).replace(
-	                    notDecSep, decSep));
-	            pos = new CWPoint(lat, lon);
-	            LatLon = pos.toString();
-	            
-	            start = xmlString.indexOf('"', end + 1);
-	            end = xmlString.indexOf('"', start + 1);
-	            setDateHidden(xmlString.substring(start + 1, end));
-	            // Convert the US format to YYYY-MM-DD if necessary
-	            if (getDateHidden().indexOf('/') > -1)
-		            setDateHidden(DateFormat.MDY2YMD(getDateHidden()));
-	            
-	            start = xmlString.indexOf('"', end + 1);
-	            end = xmlString.indexOf('"', start + 1);
-	            setWayPoint(SafeXML.cleanback(xmlString.substring(start + 1, end)));
-	            
-	            start = xmlString.indexOf('"', end + 1);
-	            end = xmlString.indexOf('"', start + 1);
-	            setCacheStatus(xmlString.substring(start + 1, end));
-	            
-	            start = xmlString.indexOf('"', end + 1);
-	            end = xmlString.indexOf('"', start + 1);
-	            setOcCacheID(xmlString.substring(start + 1, end));
-	            
-	            start = xmlString.indexOf('"', end + 1);
-	            end = xmlString.indexOf('"', start + 1);
-	            setLastSyncOC(xmlString.substring(start + 1, end));
-	            
-	            start = xmlString.indexOf('"', end + 1);
-	            end = xmlString.indexOf('"', start + 1);
-	            setNumRecommended(Convert.toInt(xmlString.substring(start + 1, end)));
-	            
-	            start = xmlString.indexOf('"', end + 1);
-	            end = xmlString.indexOf('"', start + 1);
-	            setNumFoundsSinceRecommendation(Convert.toInt(xmlString.substring(start + 1, end)));
-	            recommendationScore = LogList.getScore(getNumRecommended(),
-	                    getNumFoundsSinceRecommendation());
-	            
-	            start = xmlString.indexOf('"', end + 1);
-	            end = xmlString.indexOf('"', start + 1);
-		        if (start > -1 && end > -1) {
-			        setAttributesYes(Convert.parseLong(xmlString.substring(start + 1, end)));
-
+				if (version == 1) {
+			        start = xmlString.indexOf('"');
+			        end = xmlString.indexOf('"', start + 1);
+			        setCacheName(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+			        
 			        start = xmlString.indexOf('"', end + 1);
 			        end = xmlString.indexOf('"', start + 1);
-			        if (start > -1 && end > -1)
-				        setAttributesNo(Convert.parseLong(xmlString.substring(start + 1, end)));
-		        }
-		        
-	            start = xmlString.indexOf('"', end + 1);
-	            end = xmlString.indexOf('"', start + 1);
-	            this.long2boolFields(Convert.parseLong(xmlString.substring(start + 1, end)));
-	            
-	            start = xmlString.indexOf('"', end + 1);
-	            end = xmlString.indexOf('"', start + 1);
-	            if (version == 2) {
-	            	long2byteFieldsv2(Convert.parseLong(xmlString.substring(start + 1, end)));
-	            } else {
-	            	long2byteFields(Convert.parseLong(xmlString.substring(start + 1, end)));
+			        setCacheOwner(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+			        
+			        // Assume coordinates are in decimal format
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        double lat = Convert.parseDouble(xmlString.substring(start + 1, end).replace(
+			                notDecSep, decSep));
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        double lon = Convert.parseDouble(xmlString.substring(start + 1, end).replace(
+			                notDecSep, decSep));
+			        pos = new CWPoint(lat, lon);
+			        LatLon = pos.toString();
+			        
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setDateHidden(xmlString.substring(start + 1, end));
+			        // Convert the US format to YYYY-MM-DD if necessary
+			        if (getDateHidden().indexOf('/') > -1)
+				        setDateHidden(DateFormat.MDY2YMD(getDateHidden()));
+			        
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setWayPoint(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+			        
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setCacheStatus(xmlString.substring(start + 1, end));
+			        
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        try {
+			        	setType(CacheType.v1Converter((xmlString.substring(start + 1, end))));
+			        } catch (IllegalArgumentException ex) {
+			        	setType(CacheType.CW_TYPE_ERROR);
+			        	if (Global.getPref().debug) Global.getPref().log(wayPoint, ex, true);
+			        }
+		            
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        try {
+			        	setHard(CacheTerrDiff.v1Converter(xmlString.substring(start + 1, end)));
+			        } catch (IllegalArgumentException ex) {
+			        	setHard(CacheTerrDiff.CW_DT_ERROR);
+			        	if (Global.getPref().debug) Global.getPref().log(wayPoint, ex, true);
+			        }
+	
+		            start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        try {
+			        	setTerrain(CacheTerrDiff.v1Converter(xmlString.substring(start + 1, end)));
+			        } catch (IllegalArgumentException ex) {
+			        	setTerrain(CacheTerrDiff.CW_DT_ERROR);
+			        	if (Global.getPref().debug) Global.getPref().log(wayPoint, ex, true);
+			        }
+	
+			        // The next item was 'dirty' but this is no longer used.
+		            start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setFiltered(xmlString.substring(start + 1, end).equals("true"));
+	
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        try {
+			        	setCacheSize(CacheSize.v1Converter(xmlString.substring(start + 1, end)));
+			        } catch (IllegalArgumentException ex) {
+			        	setCacheSize(CacheSize.CW_SIZE_ERROR);
+			        	if (Global.getPref().debug) Global.getPref().log(wayPoint, ex, true);
+			        }
+			        
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setAvailable(xmlString.substring(start + 1, end).equals("true"));
+	
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setArchived(xmlString.substring(start + 1, end).equals("true"));
+	
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setHas_bugs(xmlString.substring(start + 1, end).equals("true"));
+	
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setBlack(xmlString.substring(start + 1, end).equals("true"));
+			        if (is_black() != Global.getProfile().showBlacklisted())
+				        setFiltered(true);
+	
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setOwned(xmlString.substring(start + 1, end).equals("true"));
+	
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setFound(xmlString.substring(start + 1, end).equals("true"));
+	
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setNew(xmlString.substring(start + 1, end).equals("true"));
+	
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setLog_updated(xmlString.substring(start + 1, end).equals("true"));
+	
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setUpdated(xmlString.substring(start + 1, end).equals("true"));
+			        // for backwards compatibility set value to true, if it is not in the file
+	
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setHTML(!xmlString.substring(start + 1, end).equals("false"));
+	
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+		            setNoFindLogs((byte)Convert.toInt(xmlString.substring(start + 1, end)));
+	
+		            start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setOcCacheID(xmlString.substring(start + 1, end));
+	
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setIncomplete(xmlString.substring(start + 1, end).equals("true") || incomplete);
+	
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setLastSyncOC(xmlString.substring(start + 1, end));
+	
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setNumRecommended(Convert.toInt(xmlString.substring(start + 1, end)));
+	
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			        setNumFoundsSinceRecommendation(Convert.toInt(xmlString.substring(start + 1, end)));
+			        recommendationScore = LogList.getScore(getNumRecommended(),
+			                getNumFoundsSinceRecommendation());
+	
+			        start = xmlString.indexOf('"', end + 1);
+		            end = xmlString.indexOf('"', start + 1);
+		            if (start > -1 && end > -1) {
+			            setAttributesYes(Convert.parseLong(xmlString.substring(start + 1, end)));
+	
+	
+			        start = xmlString.indexOf('"', end + 1);
+			        end = xmlString.indexOf('"', start + 1);
+			            if (start > -1 && end > -1)
+				            setAttributesNo(Convert.parseLong(xmlString.substring(start + 1, end)));
+		            }
+	            } else if (version == 3 || version == 2) {
+		            start = xmlString.indexOf('"');
+		            end = xmlString.indexOf('"', start + 1);
+		            setCacheName(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+		            
+		            start = xmlString.indexOf('"', end + 1);
+		            end = xmlString.indexOf('"', start + 1);
+		            setCacheOwner(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+		            
+		            // Assume coordinates are in decimal format
+		            start = xmlString.indexOf('"', end + 1);
+		            end = xmlString.indexOf('"', start + 1);
+		            double lat = Convert.parseDouble(xmlString.substring(start + 1, end).replace(
+		                    notDecSep, decSep));
+		            start = xmlString.indexOf('"', end + 1);
+		            end = xmlString.indexOf('"', start + 1);
+		            double lon = Convert.parseDouble(xmlString.substring(start + 1, end).replace(
+		                    notDecSep, decSep));
+		            pos = new CWPoint(lat, lon);
+		            LatLon = pos.toString();
+		            
+		            start = xmlString.indexOf('"', end + 1);
+		            end = xmlString.indexOf('"', start + 1);
+		            setDateHidden(xmlString.substring(start + 1, end));
+		            // Convert the US format to YYYY-MM-DD if necessary
+		            if (getDateHidden().indexOf('/') > -1)
+			            setDateHidden(DateFormat.MDY2YMD(getDateHidden()));
+		            
+		            start = xmlString.indexOf('"', end + 1);
+		            end = xmlString.indexOf('"', start + 1);
+		            setWayPoint(SafeXML.cleanback(xmlString.substring(start + 1, end)));
+		            
+		            start = xmlString.indexOf('"', end + 1);
+		            end = xmlString.indexOf('"', start + 1);
+		            setCacheStatus(xmlString.substring(start + 1, end));
+		            
+		            start = xmlString.indexOf('"', end + 1);
+		            end = xmlString.indexOf('"', start + 1);
+		            setOcCacheID(xmlString.substring(start + 1, end));
+		            
+		            start = xmlString.indexOf('"', end + 1);
+		            end = xmlString.indexOf('"', start + 1);
+		            setLastSyncOC(xmlString.substring(start + 1, end));
+		            
+		            start = xmlString.indexOf('"', end + 1);
+		            end = xmlString.indexOf('"', start + 1);
+		            setNumRecommended(Convert.toInt(xmlString.substring(start + 1, end)));
+		            
+		            start = xmlString.indexOf('"', end + 1);
+		            end = xmlString.indexOf('"', start + 1);
+		            setNumFoundsSinceRecommendation(Convert.toInt(xmlString.substring(start + 1, end)));
+		            recommendationScore = LogList.getScore(getNumRecommended(),
+		                    getNumFoundsSinceRecommendation());
+		            
+		            start = xmlString.indexOf('"', end + 1);
+		            end = xmlString.indexOf('"', start + 1);
+			        if (start > -1 && end > -1) {
+				        setAttributesYes(Convert.parseLong(xmlString.substring(start + 1, end)));
+	
+				        start = xmlString.indexOf('"', end + 1);
+				        end = xmlString.indexOf('"', start + 1);
+				        if (start > -1 && end > -1)
+					        setAttributesNo(Convert.parseLong(xmlString.substring(start + 1, end)));
+			        }
+			        
+		            start = xmlString.indexOf('"', end + 1);
+		            end = xmlString.indexOf('"', start + 1);
+		            this.long2boolFields(Convert.parseLong(xmlString.substring(start + 1, end)));
+		            
+		            start = xmlString.indexOf('"', end + 1);
+		            end = xmlString.indexOf('"', start + 1);
+		            if (version == 2) {
+		            	long2byteFieldsv2(Convert.parseLong(xmlString.substring(start + 1, end)));
+		            } else {
+		            	long2byteFields(Convert.parseLong(xmlString.substring(start + 1, end)));
+		            }
+		            
+		            if (is_black() != Global.getProfile().showBlacklisted())
+			            setFiltered(true);
 	            }
-	            
-	            if (is_black() != Global.getProfile().showBlacklisted())
-		            setFiltered(true);
-            }
 	        } catch (Exception ex) {
 	        	Global.getPref().log("Ignored Exception in CacheHolder()", ex, true);
 	        }
+	        
+	        if (type == CacheType.CW_TYPE_ERROR) {
+	        	setIncomplete(true);
+	        } else {
+	        	if (! isAddiWpt() && 
+	        		(terrain == CacheTerrDiff.CW_DT_ERROR 
+	        		|| hard == CacheTerrDiff.CW_DT_ERROR 
+	        		|| cacheSize == CacheSize.CW_SIZE_ERROR)
+	        	) setIncomplete(true);
+	        }
         }
 	
 	/**
@@ -493,18 +487,10 @@
 		this.setAvailable(ch.is_available());
 		this.setOwned(ch.is_owned());
 		this.setFiltered(ch.is_filtered());
-//		this.setLog_updated(ch.is_log_updated());
-//		this.setUpdated(ch.is_updated());
 		this.setIncomplete(ch.is_incomplete());
 		this.setBlack(ch.is_black());
 		this.addiWpts = ch.addiWpts;
 		this.mainCache=ch.mainCache;
-//		this.setNew(ch.is_new());
-		// I don't think that updating a cache with current data should affect the state
-		// if a cache is checked or a search result. So the following two assignments are
-		// removed.
-//		this.is_flaged = ch.is_flaged;
-//		this.is_Checked = ch.is_Checked;
 		this.setOcCacheID(ch.getOcCacheID());
 		this.setNoFindLogs(ch.getNoFindLogs());
 		this.setHas_bugs(ch.has_bugs());
@@ -772,13 +758,6 @@
 		}
 	}
 
-	/*
-public void finalize() {nObjects--;
-   Vm.debug("Destroying CacheHolder "+wayPoint);
-   Vm.debug("CacheHolder: "+nObjects+" objects left");
-}
-	 */
-	
 	public String GetStatusDate() {
 		String statusDate = "";
 		
@@ -900,8 +879,8 @@
 	 * @return long value representing the byte field
 	 */
 	private long byteFields2long() {
-		long value = byteBitMask(CacheHolder.terrHard_String2byte(hard), 1)    | 
-		byteBitMask(CacheHolder.terrHard_String2byte(terrain), 2)   |
+		long value = byteBitMask(hard, 1)    | 
+		byteBitMask(terrain, 2)   |
 		byteBitMask(this.type, 3)    |
 		byteBitMask(cacheSize, 4)|
 		byteBitMask(this.noFindLogs, 5);		             
@@ -913,11 +892,14 @@
 	 * @param value The long value which contains up to 8 bytes.
 	 */
 	private void long2byteFields(long value) {
-		this.setHard(CacheHolder.terrHard_byte2String(byteFromLong(value, 1)));
-		this.setTerrain(CacheHolder.terrHard_byte2String(byteFromLong(value, 2)));
-		this.type = byteFromLong(value, 3);
-		this.setCacheSize(byteFromLong(value, 4));
-		this.setNoFindLogs((byteFromLong(value, 5)));
+		setHard(byteFromLong(value, 1));
+		setTerrain(byteFromLong(value, 2));
+		setType(byteFromLong(value, 3));
+		setCacheSize(byteFromLong(value, 4));
+		setNoFindLogs((byteFromLong(value, 5)));
+		if (getHard() == -1 || getTerrain() == 1 || getType() == -1 || getCacheSize() == -1 ) {
+			setIncomplete(true);
+		}
 	}
 	
 	/**
@@ -925,21 +907,22 @@
 	 * @param value
 	 */
 	private void long2byteFieldsv2(long value) {
-		setHard(CacheHolder.terrHard_byte2String(byteFromLong(value, 1)));
-		setTerrain(CacheHolder.terrHard_byte2String(byteFromLong(value, 2)));
+		setHard(byteFromLong(value, 1));
+		setTerrain(byteFromLong(value, 2));
 		try {
 			setType(CacheType.v2Converter(byteFromLong(value, 3)));
 		} catch (IllegalArgumentException ex) {
 			setType(CacheType.CW_TYPE_UNKNOWN);
-			setIncomplete(true);
 		}
 		try {
 			setCacheSize(byteFromLong(value, 4));
 		} catch (IllegalArgumentException ex) {
 			setCacheSize(CacheSize.CW_SIZE_ERROR);
-			setIncomplete(true);
 		}
 		setNoFindLogs((byteFromLong(value, 5)));
+		if (getHard() == -1 || getTerrain() == 1) {
+			setIncomplete(true);
+		}
 	}
 
 	/**
@@ -1105,95 +1088,25 @@
     	this.cacheSize = cacheSize;
     }
 
-	public String getHard() {
+	public byte getHard() {
     	return hard;
     }
 
-	public void setHard(String hard) {
-		Global.getProfile().notifyUnsavedChanges(!hard.equals(this.hard));		
+	public void setHard(byte hard) {
+		Global.getProfile().notifyUnsavedChanges(hard != this.hard);		
     	this.hard = hard;
     }
 
-	public String getTerrain() {
+	public byte getTerrain() {
     	return terrain;
     }
 
-	public void setTerrain(String terrain) {
-		Global.getProfile().notifyUnsavedChanges(!terrain.equals(this.terrain));		
+	public void setTerrain(byte terrain) {
+		Global.getProfile().notifyUnsavedChanges(terrain != this.terrain);		
     	this.terrain = terrain;
     }
 
 	/**
-	 * The string representation of the internal value for difficulty and terrain values.
-	 * @param value Difficulty or terrain voting as byte
-	 * @return String representation of the value
-	 */
-	private static String terrHard_byte2String(byte value) {
-		String result;
-		switch (value) {
-		case DT_EMPTY: result = DT_EMPTY_TXT; break;
-		case DT_10: result = DT_10_TXT; break;
-		case DT_15: result = DT_15_TXT; break;
-		case DT_20: result = DT_20_TXT; break;
-		case DT_25: result = DT_25_TXT; break;
-		case DT_30: result = DT_30_TXT; break;
-		case DT_35: result = DT_35_TXT; break;
-		case DT_40: result = DT_40_TXT; break;
-		case DT_45: result = DT_45_TXT; break;
-		case DT_50: result = DT_50_TXT; break;
-		default: result = DT_UNKNOWN_TXT;
-		} 
-		return result;
-	}
-
-	/**
-	 * Decoding the String represenations of difficulty or terrain values to internal (byte) values.
-	 * The format of the String values has to be like 1 ; 1.5 ; 3 ; 4.5<br>
-	 * Other formats won't be recognized.
-     * @param value String representation of the difficulty/terrain
-     * @return The internal byte value for the difficulty/terrain
-     */
-    private static byte terrHard_String2byte(String value) {
-	    byte result;
-	    if (value.equals(DT_EMPTY_TXT)) {
-			result = DT_EMPTY;
-		} else if (value.equals(DT_10_TXT)) {
-			result = DT_10;
-		} else if (value.equals(DT_15_TXT)) {
-			result = DT_15;
-		} else if (value.equals(DT_20_TXT)) {
-			result = DT_20;
-		} else if (value.equals(DT_25_TXT)) {
-			result = DT_25;
-		} else if (value.equals(DT_30_TXT)) {
-			result = DT_30;
-		} else if (value.equals(DT_35_TXT)) {
-			result = DT_35;
-		} else if (value.equals(DT_40_TXT)) {
-			result = DT_40;
-		} else if (value.equals(DT_45_TXT)) {
-			result = DT_45;
-		} else if (value.equals(DT_50_TXT)) {
-			result = DT_50;
-		} else {
-			result = DT_UNKNOWN;
-		}
-	    return result;
-    }
-
-	/**
-	 * Converting the OC format of difficulty values (1,0 ; 3,5) to GC format (1 ; 3.5). If the
-	 * format is already GC, then it is returned unchanged. 
-     * @param pValue String to convert
-     * @return Converted String
-     */
-    public static String terrHard_OC2GC(String pValue) {
-	    String value = pValue.replace(',', '.');
-	    if (value.endsWith(".0")) value = value.substring(0,1);
-	    return value;
-    }
- 
-	/**
 	 * Gets the type of cache as integer.
 	 * @return Cache type
 	 */
@@ -1436,7 +1349,6 @@
 		Global.getProfile().notifyUnsavedChanges(hasNote != this.hasNote);		
 		this.hasNote = hasNote;
 	}
-	
 
 }
 

Added: trunk/src/CacheWolf/CacheTerrDiff.java
===================================================================
--- trunk/src/CacheWolf/CacheTerrDiff.java	2009-05-18 20:16:57 UTC (rev 1826)
+++ trunk/src/CacheWolf/CacheTerrDiff.java	2009-05-18 22:07:35 UTC (rev 1827)
@@ -0,0 +1,105 @@
+package CacheWolf;
+
+/**
+ * Handles all aspects of converting terrain and difficulty
+ * infromations from legacy file versions and various im-
+ * and expoters
+ * 
+ * Only use the class in a static way, do not instantiate it
+ */
+public class CacheTerrDiff {
+	
+	/** terrain or difficulty 1.0 */
+	protected static final byte CW_DT_10 = 10;
+	/** terrain or difficulty 1.5 */
+	protected static final byte CW_DT_15 = 15;
+	/** terrain or difficulty 2.0 */
+	protected static final byte CW_DT_20 = 20;
+	/** terrain or difficulty 2.5 */
+	protected static final byte CW_DT_25 = 25;
+	/** terrain or difficulty 3.0 */
+	protected static final byte CW_DT_30 = 30;
+	/** terrain or difficulty 3.5 */
+	protected static final byte CW_DT_35 = 35;
+	/** terrain or difficulty 4.0 */
+	protected static final byte CW_DT_40 = 40;
+	/** terrain or difficulty 4.5 */
+	protected static final byte CW_DT_45 = 45;
+	/** terrain or difficulty 5.0 */
+	protected static final byte CW_DT_50 = 50;
+	/** wrong terrain or difficulty */
+	protected static final byte CW_DT_ERROR = -1;
+
+	/** constructor dies nothing */
+	public CacheTerrDiff() {
+	}
+	
+	/**
+	 * convert "old style" terran and difficulty information to the new format.
+	 * 
+	 * since it is also used by the importes it is not flagged as deprecated
+	 * @param v1TerrDiff a string representation of terrain or difficulty
+	 * @return internal representation of terrain or difficulty
+	 * @throws IllegalArgumentException if <code>v1TerrDiff</code> can not be mapped
+	 */
+	static final byte v1Converter(String v1TerrDiff) throws IllegalArgumentException {
+		if (v1TerrDiff == null) {
+			throw new IllegalArgumentException("error mapping terrain or difficulty");
+		}
+		v1TerrDiff = v1TerrDiff.replace(',', '.');
+		if (v1TerrDiff.equals("1") || v1TerrDiff.equals("1.0")) return CW_DT_10;
+		if (v1TerrDiff.equals("2") || v1TerrDiff.equals("2.0")) return CW_DT_20;
+		if (v1TerrDiff.equals("3") || v1TerrDiff.equals("3.0")) return CW_DT_30;
+		if (v1TerrDiff.equals("4") || v1TerrDiff.equals("4.0")) return CW_DT_40;
+		if (v1TerrDiff.equals("5") || v1TerrDiff.equals("5.0")) return CW_DT_50;
+		
+		if (v1TerrDiff.equals("1.5")) return CW_DT_15;
+		if (v1TerrDiff.equals("2.5")) return CW_DT_25;
+		if (v1TerrDiff.equals("3.5")) return CW_DT_35;
+		if (v1TerrDiff.equals("4.5")) return CW_DT_45;
+		
+		throw new IllegalArgumentException("error mapping terrain or difficulty");
+	}
+	
+	/**
+	 * generate strings of terrain and difficulty for general use
+	 * @param td internal terrain or difficulty value
+	 * @return long version of terrain or difficulty (includeing .0)
+	 * @throws IllegalArgumentException
+	 */
+	public static final String longDT(byte td) throws IllegalArgumentException {
+		switch(td) {
+		case CW_DT_10: return "1.0";
+		case CW_DT_15: return "1.5";
+		case CW_DT_20: return "2.0";
+		case CW_DT_25: return "2.5";
+		case CW_DT_30: return "3.0";
+		case CW_DT_35: return "3.5";
+		case CW_DT_40: return "4.0";
+		case CW_DT_45: return "4.5";
+		case CW_DT_50: return "5.0";
+		default: throw new IllegalArgumentException("unmapped terrain or diffulty "+td);
+		}
+	}
+
+	/**
+	 * generate strings of terrain and difficulty information for GC.com-like GPX exports
+	 * @param td internal terrain or difficulty value
+	 * @return short version of terrainor difficulty (omit .0)
+	 * @throws IllegalArgumentException
+	 */
+	public static final String shortDT(byte td) throws IllegalArgumentException {
+		switch(td) {
+		case CW_DT_10: return "1";
+		case CW_DT_15: return "1.5";
+		case CW_DT_20: return "2";
+		case CW_DT_25: return "2.5";
+		case CW_DT_30: return "3";
+		case CW_DT_35: return "3.5";
+		case CW_DT_40: return "4";
+		case CW_DT_45: return "4.5";
+		case CW_DT_50: return "5";
+		default: throw new IllegalArgumentException("unmapped terrain or diffulty "+td);
+		}
+	}
+}

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-05-18 20:16:57 UTC (rev 1826)
+++ trunk/src/CacheWolf/DetailsPanel.java	2009-05-18 22:07:35 UTC (rev 1827)
@@ -213,8 +213,10 @@
 		chcSize.setInt(ch.getCacheSize());
 
 		attV.showImages(ch.getCacheDetails(true).attributes);
-		lblTerr.setText((ch.getTerrain().length()>0) ? (MyLocale.getMsg(1001,"T")+": "+ch.getTerrain()) : "");
-		lblDiff.setText((ch.getHard().length()>0)    ? (MyLocale.getMsg(1000,"D")+": "+ch.getHard()) : ""); 
+		lblTerr.setText((ch.getTerrain() != CacheTerrDiff.CW_DT_ERROR) ? 
+				(MyLocale.getMsg(1001,"T")+": "+CacheTerrDiff.longDT(ch.getTerrain())) : "");
+		lblDiff.setText((ch.getHard() != CacheTerrDiff.CW_DT_ERROR) ? 
+				(MyLocale.getMsg(1000,"D")+": "+CacheTerrDiff.longDT(ch.getHard())) : ""); 
 
 		if(isBigScreen)	mNotes.setText(ch.getExistingDetails().getCacheNotes());
 	}

Modified: trunk/src/CacheWolf/Filter.java
===================================================================
--- trunk/src/CacheWolf/Filter.java	2009-05-18 20:16:57 UTC (rev 1826)
+++ trunk/src/CacheWolf/Filter.java	2009-05-18 22:07:35 UTC (rev 1827)
@@ -485,7 +485,7 @@
 	        // Filter criterium 4: Difficulty
 	        ///////////////////////////////
 	        if (fscDiff > 0.0) {
-		        dummyd1 = Common.parseDouble(ch.getHard());
+		        dummyd1 = ch.getHard() / 10D;
 		        if (diffdirec == SMALLER && dummyd1 > fscDiff) {
 			        cacheFiltered = true; break;
 		        }
@@ -500,7 +500,7 @@
 	        // Filter criterium 5: Terrain
 	        ///////////////////////////////
 	        if (fscTerr > 0.0) {
-		        dummyd1 = Common.parseDouble(ch.getTerrain());
+	        	dummyd1 = ch.getTerrain() / 10D;
 		        if (terrdirec == SMALLER && dummyd1 > fscTerr) {
 			        cacheFiltered = true; break;
 		        }
@@ -511,11 +511,7 @@
 			        cacheFiltered = true; break;
 		        }
 	        }
-	        //Vm.debug(ch.wayPoint+" Found"+ch.is_found+"  FoundyMe="+foundByMe+"   notFoundByMe="+notFoundByMe);
-	        //Vm.debug(ch.wayPoint+" Owned"+ch.is_owned+"  OwnedByMe="+ownedByMe+"   notOwnedByMe="+notOwnedByMe);
-	        //Vm.debug(ch.wayPoint+" Archived"+ch.is_archived+"  Archived="+archived+"   notArchived="+notArchived);
-	        //Vm.debug(ch.wayPoint+" Available"+ch.is_available+"  Available="+available+"   notAvailable="+notAvailable);
-	        //Vm.debug("Blacklisted: "+ch.is_black);
+
 	        ///////////////////////////////
 	        // Filter criterium 6: Found by me
 	        ///////////////////////////////

Modified: trunk/src/CacheWolf/GPXImporter.java
===================================================================
--- trunk/src/CacheWolf/GPXImporter.java	2009-05-18 20:16:57 UTC (rev 1826)
+++ trunk/src/CacheWolf/GPXImporter.java	2009-05-18 22:07:35 UTC (rev 1827)
@@ -400,11 +400,11 @@
 			return;
 		}
 		if (name.equals("groundspeak:difficulty") || name.equals("difficulty") || name.equals("terra:mental_challenge")) {
-			holder.setHard(strData);
+			holder.setHard(CacheTerrDiff.v1Converter(strData));
 			return;
 		}
 		if (name.equals("groundspeak:terrain")|| name.equals("terrain")|| name.equals("terra:physical_challenge")) {
-			holder.setTerrain(strData);
+			holder.setTerrain(CacheTerrDiff.v1Converter(strData));
 			return;
 		}
 		if ((name.equals("groundspeak:type") || name.equals("type")|| name.equals("terra:style"))&& inCache){

Modified: trunk/src/CacheWolf/MyComparer.java
===================================================================
--- trunk/src/CacheWolf/MyComparer.java	2009-05-18 20:16:57 UTC (rev 1826)
+++ trunk/src/CacheWolf/MyComparer.java	2009-05-18 22:07:35 UTC (rev 1827)
@@ -25,12 +25,12 @@
 		} else if (colToCompare==2) {
 			for (int i=0; i<visibleSize; i++) {
 				CacheHolder ch=cacheDB.get(i);
-				ch.sort=ch.getHard();
+				ch.sort=CacheTerrDiff.longDT(ch.getHard());
 			}
 		} else if (colToCompare==3) {
 			for (int i=0; i<visibleSize; i++) {
 				CacheHolder ch=cacheDB.get(i);
-				ch.sort=ch.getTerrain();
+				ch.sort=CacheTerrDiff.longDT(ch.getTerrain());
 			}
 		} else if (colToCompare==4) {
 			for (int i=0; i<visibleSize; i++) {

Modified: trunk/src/CacheWolf/OCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/OCXMLImporter.java	2009-05-18 20:16:57 UTC (rev 1826)
+++ trunk/src/CacheWolf/OCXMLImporter.java	2009-05-18 22:07:35 UTC (rev 1827)
@@ -483,11 +483,11 @@
 			return;
 		}
 		if(name.equals("difficulty")) {
-			holder.setHard(CacheHolder.terrHard_OC2GC(strData));
+			holder.setHard(CacheTerrDiff.v1Converter(strData));
 			return;
 		}
 		if(name.equals("terrain")) {
-			holder.setTerrain(CacheHolder.terrHard_OC2GC(strData));
+			holder.setTerrain(CacheTerrDiff.v1Converter(strData));
 			return;
 		}
 		if(name.equals("datehidden")) {

Modified: trunk/src/CacheWolf/ShowCacheInBrowser.java
===================================================================
--- trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-05-18 20:16:57 UTC (rev 1826)
+++ trunk/src/CacheWolf/ShowCacheInBrowser.java	2009-05-18 22:07:35 UTC (rev 1827)
@@ -73,10 +73,8 @@
 					tpl.setParam("WAYPOINT", chD.getWayPoint());
 					tpl.setParam("CACHE_NAME", chD.getCacheName());
 					tpl.setParam("OWNER", chD.getCacheOwner());
-					if (chD.getHard().endsWith(".0")) chD.setHard(chD.getHard().substring(0,chD.getHard().length()-2));
-					tpl.setParam("DIFFICULTY", (String) diff.get(chD.getHard().replace(',','.')));
-					if (chD.getTerrain().endsWith(".0")) chD.setTerrain(chD.getTerrain().substring(0,chD.getTerrain().length()-2));
-					tpl.setParam("TERRAIN", (String) terr.get(chD.getTerrain().replace(',','.')));
+					tpl.setParam("DIFFICULTY", CacheTerrDiff.longDT(chD.getHard()));
+					tpl.setParam("TERRAIN", CacheTerrDiff.longDT(chD.getTerrain()));
 					tpl.setParam("DISTANCE", chD.getDistance().replace(',','.'));
 					tpl.setParam("BEARING", chD.bearing);
 					if (chD.pos!=null && chD.pos.isValid()) {

Modified: trunk/src/CacheWolf/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/SpiderGC.java	2009-05-18 20:16:57 UTC (rev 1826)
+++ trunk/src/CacheWolf/SpiderGC.java	2009-05-18 22:07:35 UTC (rev 1827)
@@ -728,12 +728,12 @@
 						else pref.log("Got size");
 
 						pref.log("Trying difficulty");
-						ch.setHard(getDiff(completeWebPage));
+						ch.setHard(CacheTerrDiff.v1Converter(getDiff(completeWebPage)));
 						if (pref.debug) pref.log("Hard: " + ch.getHard());
 						else pref.log("Got difficulty");
 
 						pref.log("Trying terrain");
-						ch.setTerrain(getTerr(completeWebPage));
+						ch.setTerrain(CacheTerrDiff.v1Converter(getTerr(completeWebPage)));
 						if (pref.debug) pref.log("Terr: " + ch.getTerrain());
 						else pref.log("Got terrain");
 

Modified: trunk/src/CacheWolf/myTableModel.java
===================================================================
--- trunk/src/CacheWolf/myTableModel.java	2009-05-18 20:16:57 UTC (rev 1826)
+++ trunk/src/CacheWolf/myTableModel.java	2009-05-18 22:07:35 UTC (rev 1827)
@@ -293,9 +293,9 @@
 					case 1: // Type
 						return GuiImageBroker.getTypeImage(ch.getType());
 					case 2: // Difficulty;
-						return ch.getHard();
+						return CacheTerrDiff.longDT(ch.getHard());
 					case 3: // Terrain
-						return ch.getTerrain();
+						return CacheTerrDiff.longDT(ch.getTerrain());
 					case 4: // Waypoint
 						if (showExtraWptInfo) {
 							if(ch.is_incomplete()) return ch.getIconAndTextWP(4, fm);

Modified: trunk/src/exp/ExploristExporter.java
===================================================================
--- trunk/src/exp/ExploristExporter.java	2009-05-18 20:16:57 UTC (rev 1826)
+++ trunk/src/exp/ExploristExporter.java	2009-05-18 22:07:35 UTC (rev 1827)
@@ -263,9 +263,9 @@
 		
 		sb.append(toGsDateFormat(lastFound)); // lastFound - DDMMYYY, YYY = year - 1900
 		sb.append(",");
-		sb.append(removeCommas(ch.getHard()));
+		sb.append(CacheTerrDiff.longDT(ch.getHard()));
 		sb.append(",");
-		sb.append(removeCommas(ch.getTerrain()));
+		sb.append(CacheTerrDiff.longDT(ch.getTerrain()));
 		sb.append("*41");
 		return Exporter.simplifyString(sb.toString() + "\r\n");
 	}

Modified: trunk/src/exp/Exporter.java
===================================================================
--- trunk/src/exp/Exporter.java	2009-05-18 20:16:57 UTC (rev 1826)
+++ trunk/src/exp/Exporter.java	2009-05-18 22:07:35 UTC (rev 1827)
@@ -413,17 +413,9 @@
     	StringBuffer strBuf = new StringBuffer(7);
     	strBuf.append(CacheType.getExportShortId(ch.getType()).toLowerCase());			
     	if (!ch.isAddiWpt()) {
-    		if ( (ch.getHard().length() > 0) && (ch.getTerrain().length() > 0) ) {
-    			strBuf.append(ch.getHard().charAt(0));
-    			if ( ch.getHard().endsWith(".5") ) {
-    				strBuf.append("5");
-    			}
-    			strBuf.append("/");
-    			strBuf.append(ch.getTerrain().charAt(0));
-    			if ( ch.getTerrain().endsWith(".5") ) {
-    				strBuf.append("5");
-    			}
-    		}
+   			strBuf.append(ch.getHard());
+   			strBuf.append("/");
+   			strBuf.append(ch.getTerrain());
     		strBuf.append(CacheSize.getExportShortId(ch.getCacheSize()));
     	}
 

Modified: trunk/src/exp/GPXExporter.java
===================================================================
--- trunk/src/exp/GPXExporter.java	2009-05-18 20:16:57 UTC (rev 1826)
+++ trunk/src/exp/GPXExporter.java	2009-05-18 22:07:35 UTC (rev 1827)
@@ -82,15 +82,10 @@
 				strBuf.append("      <groundspeak:type>").append(CacheType.id2GpxString(ch.getType())).append("</groundspeak:type>\r\n");
 				strBuf.append("      <groundspeak:container>").append(CacheSize.cw2ExportString(ch.getCacheSize())).append("</groundspeak:container>\r\n");
 				//for Colorado/Oregon: 2.0 -> 2
-				String diffTerr = ch.getHard().replace(',','.');
-				if ( diffTerr.endsWith( ".0" ) ) {
-					diffTerr = diffTerr.substring(0, 1);
-				}
+				String diffTerr = CacheTerrDiff.shortDT(ch.getHard());
+				
 				strBuf.append("      <groundspeak:difficulty>").append(diffTerr).append("</groundspeak:difficulty>\r\n");
-				diffTerr = ch.getTerrain().replace(',','.');
-				if ( diffTerr.endsWith( ".0" ) ) {
-					diffTerr = diffTerr.substring(0, 1);
-				}
+				diffTerr = CacheTerrDiff.shortDT(ch.getTerrain());
 				strBuf.append("      <groundspeak:terrain>").append(diffTerr).append("</groundspeak:terrain>\r\n");
 				
 				strBuf.append("      <groundspeak:country>").append(SafeXML.cleanGPX(det.Country)+"</groundspeak:country>\r\n");

Modified: trunk/src/exp/HTMLExporter.java
===================================================================
--- trunk/src/exp/HTMLExporter.java	2009-05-18 20:16:57 UTC (rev 1826)
+++ trunk/src/exp/HTMLExporter.java	2009-05-18 22:07:35 UTC (rev 1827)
@@ -89,8 +89,8 @@
 					varParams.put("WAYPOINT", ch.getWayPoint());
 					varParams.put("NAME", ch.getCacheName());
 					varParams.put("OWNER", ch.getCacheOwner());
-					varParams.put("DIFFICULTY", ch.getHard());
-					varParams.put("TERRAIN", ch.getTerrain());
+					varParams.put("DIFFICULTY", CacheTerrDiff.longDT(ch.getHard()));
+					varParams.put("TERRAIN", CacheTerrDiff.longDT(ch.getTerrain()));
 					varParams.put("DISTANCE", ch.getDistance());
 					varParams.put("BEARING", ch.bearing);
 					varParams.put("LATLON", ch.LatLon);

Modified: trunk/src/exp/TPLExporter.java
===================================================================
--- trunk/src/exp/TPLExporter.java	2009-05-18 20:16:57 UTC (rev 1826)
+++ trunk/src/exp/TPLExporter.java	2009-05-18 22:07:35 UTC (rev 1827)
@@ -202,8 +202,8 @@
 						varParams.put("SHORTSIZE", CacheSize.getExportShortId(ch.getCacheSize()));
 						varParams.put("WAYPOINT", ch.getWayPoint());
 						varParams.put("OWNER", ch.getCacheOwner());
-						varParams.put("DIFFICULTY", dec.replaceAll(ch.getHard()));
-						varParams.put("TERRAIN", dec.replaceAll(ch.getTerrain()));
+						varParams.put("DIFFICULTY", String.valueOf(ch.getHard()));
+						varParams.put("TERRAIN", String.valueOf(ch.getTerrain()));
 						varParams.put("DISTANCE", dec.replaceAll(ch.getDistance()));
 						varParams.put("BEARING", ch.bearing);
 						varParams.put("LATLON", ch.LatLon);

Modified: trunk/src/exp/TomTomExporter.java
===================================================================
--- trunk/src/exp/TomTomExporter.java	2009-05-18 20:16:57 UTC (rev 1826)
+++ trunk/src/exp/TomTomExporter.java	2009-05-18 22:07:35 UTC (rev 1827)
@@ -183,9 +183,9 @@
 			outp.writeBytes(" by ");
 			outp.writeBytes(ch.getCacheOwner());
 			outp.writeBytes("- ");             
-			outp.writeBytes(ch.getHard());
+			outp.writeBytes(String.valueOf(ch.getHard()));
 			outp.writeBytes("/");
-			outp.writeBytes(ch.getTerrain());
+			outp.writeBytes(String.valueOf(ch.getTerrain()));
 			outp.writeBytes(" - ");
 			outp.writeBytes(CacheSize.cw2ExportString(ch.getCacheSize()));
 			outp.writeBytes("\"\r\n");
@@ -203,7 +203,7 @@
 		try {
 			d = 2;
 			outp.writeByte((byte)d);
-			data = ch.getWayPoint().length()+ch.getCacheName().length()+ch.getCacheOwner().length()+ch.getHard().length()+ch.getTerrain().length()+CacheSize.cw2ExportString(ch.getCacheSize()).length()+27;
+			data = ch.getWayPoint().length()+ch.getCacheName().length()+ch.getCacheOwner().length()+String.valueOf(ch.getHard()).length()+String.valueOf(ch.getTerrain()).length()+CacheSize.cw2ExportString(ch.getCacheSize()).length()+27;
 			writeIntBinary(outp, data);
 			latlon = Common.parseDouble(lon);
 			latlon *=100000;
@@ -221,9 +221,9 @@
 			//und data = holder.wayPoint.length()+holder.CacheName.length()+.....
 			//wider um 1 erh?hen
 			outp.writeBytes("- ");             
-			outp.writeBytes(ch.getHard());
+			outp.writeBytes(String.valueOf(ch.getHard()));
 			outp.writeBytes("/");
-			outp.writeBytes(ch.getTerrain());
+			outp.writeBytes(String.valueOf(ch.getTerrain()));
 			outp.writeBytes(" - ");
 			outp.writeBytes(CacheSize.cw2ExportString(ch.getCacheSize()));
 			d = 0;



From greiol at mail.berlios.de  Tue May 19 08:03:31 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Tue, 19 May 2009 08:03:31 +0200
Subject: [Cachewolf-svn] r1828 - trunk/src/CacheWolf
Message-ID: <200905190603.n4J63VJF004926@sheep.berlios.de>

Author: greiol
Date: 2009-05-19 08:03:28 +0200 (Tue, 19 May 2009)
New Revision: 1828

Modified:
   trunk/src/CacheWolf/CalcPanel.java
Log:
fixed charset issue

Modified: trunk/src/CacheWolf/CalcPanel.java
===================================================================
--- trunk/src/CacheWolf/CalcPanel.java	2009-05-18 22:07:35 UTC (rev 1827)
+++ trunk/src/CacheWolf/CalcPanel.java	2009-05-19 06:03:28 UTC (rev 1828)
@@ -62,9 +62,9 @@
 		cacheDB = profile.cacheDB;
 		
 		
-		TopP.addNext(chkDD =new mCheckBox("d.d???"),CellConstants.DONTSTRETCH, CellConstants.WEST);
-		TopP.addNext(chkDMM =new mCheckBox("d???m.m\'"),CellConstants.DONTSTRETCH, CellConstants.WEST);
-		TopP.addNext(chkDMS =new mCheckBox("d???m\'s\""),CellConstants.DONTSTRETCH,CellConstants.WEST);
+		TopP.addNext(chkDD =new mCheckBox("d.d?"),CellConstants.DONTSTRETCH, CellConstants.WEST);
+		TopP.addNext(chkDMM =new mCheckBox("d?m.m\'"),CellConstants.DONTSTRETCH, CellConstants.WEST);
+		TopP.addNext(chkDMS =new mCheckBox("d?m\'s\""),CellConstants.DONTSTRETCH,CellConstants.WEST);
 		TopP.addNext(chkUTM =new mCheckBox("UTM"),CellConstants.DONTSTRETCH, CellConstants.WEST);
 		TopP.addLast(chkGK =new mCheckBox("GK"),CellConstants.DONTSTRETCH, CellConstants.WEST);
 



From engywuck at mail.berlios.de  Tue May 19 15:31:30 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Tue, 19 May 2009 15:31:30 +0200
Subject: [Cachewolf-svn] r1829 - trunk/src/CacheWolf
Message-ID: <200905191331.n4JDVUCj031324@sheep.berlios.de>

Author: engywuck
Date: 2009-05-19 15:31:23 +0200 (Tue, 19 May 2009)
New Revision: 1829

Modified:
   trunk/src/CacheWolf/MyComparer.java
Log:
Now sorting is possible for the new columns "Notes exist" and "Solver exists".

Modified: trunk/src/CacheWolf/MyComparer.java
===================================================================
--- trunk/src/CacheWolf/MyComparer.java	2009-05-19 06:03:28 UTC (rev 1828)
+++ trunk/src/CacheWolf/MyComparer.java	2009-05-19 13:31:23 UTC (rev 1829)
@@ -95,6 +95,24 @@
 				else
 					ch.sort="\uFFFF";
 			}			
+		} else if (colToCompare==15) {
+		    for (int i=0; i<visibleSize; i++) {
+		        CacheHolder ch=cacheDB.get(i);
+		        if (ch.hasSolver()) {
+		            ch.sort="1";
+		        } else {
+		            ch.sort="2";
+		        }
+		    }
+		} else if (colToCompare==16) {
+		    for (int i=0; i<visibleSize; i++) {
+		        CacheHolder ch=cacheDB.get(i);
+		        if (ch.hasNote()) {
+		            ch.sort="1";
+		        } else {
+		            ch.sort="2";
+		        }
+		    }
 		}
 	}
 	



From greiol at mail.berlios.de  Tue May 19 20:40:01 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Tue, 19 May 2009 20:40:01 +0200
Subject: [Cachewolf-svn] r1830 - in trunk/src: CacheWolf exp
Message-ID: <200905191840.n4JIe16K006860@sheep.berlios.de>

Author: greiol
Date: 2009-05-19 20:39:59 +0200 (Tue, 19 May 2009)
New Revision: 1830

Modified:
   trunk/src/CacheWolf/CacheSize.java
   trunk/src/CacheWolf/CacheTerrDiff.java
   trunk/src/CacheWolf/CacheType.java
   trunk/src/exp/KMLExporter.java
Log:
fixed google earth export
fixed typos

Modified: trunk/src/CacheWolf/CacheSize.java
===================================================================
--- trunk/src/CacheWolf/CacheSize.java	2009-05-19 13:31:23 UTC (rev 1829)
+++ trunk/src/CacheWolf/CacheSize.java	2009-05-19 18:39:59 UTC (rev 1830)
@@ -1,9 +1,9 @@
 package CacheWolf;
 
 /**
- * Handels all aspects of converting cache size information from
+ * Handles all aspects of converting cache size information from
  * and to the various im- and exporters as well as for converting
- * legavy profiles to current standard
+ * legacy profiles to current standard
  */
 public final class CacheSize {
 
@@ -96,7 +96,7 @@
 	public static final byte CW_GUIIMGID_VERYLARGE = 5;
 
 	/*
-	 * total number of different size images will be used to det the dimension
+	 * total number of different size images will be used to set the dimension
 	 * of sizePics[] array in TableModel
 	 */
 	public static final byte CW_TOTAL_SIZE_IMAGES = 6;
@@ -127,9 +127,9 @@
 	 * 
 	 * @param id
 	 *            size identifier matching the CW_GUIIMGID_ constants
-	 * @return filenam of image to be displayed for id
+	 * @return filename of image to be displayed for id
 	 * @throws IllegalArgumentException
-	 *             if there is no image associated to the id
+	 *             if there is no image associated to the <code>id</code>
 	 */
 	public static String sizeImageForId(byte id) throws IllegalArgumentException {
 		switch (id) {
@@ -158,7 +158,7 @@
 	 *            CW internal representation of cache size
 	 * @return string representation of CacheWolf internal cache size
 	 * @throws IllegalArgumentException
-	 *             if cwsize can not be mapped to a CW_SIZE constant
+	 *             if <code>cwsize</code> can not be mapped to a CW_SIZE constant
 	 */
 	public static String cw2ExportString(byte size) throws IllegalArgumentException {
 		switch (size) {
@@ -190,10 +190,10 @@
 	 * internal representation
 	 * 
 	 * @param tcstring
-	 *            size information extracted from a TC GPX inport
+	 *            size information extracted from a TC GPX import
 	 * @return CacheWolf internal representation of size information
 	 * @throws IllegalArgumentException
-	 *             if tcstring can not be mapped to internal representation
+	 *             if <code>tcstring</code> can not be mapped to internal representation
 	 *             (CW_SIZE_*)
 	 */
 
@@ -218,10 +218,10 @@
 	 * representation
 	 * 
 	 * @param gcstring
-	 *            size information extracted from a GPX inport
+	 *            size information extracted from a GPX import
 	 * @return CacheWolf internal representation of size information
 	 * @throws IllegalArgumentException
-	 *             if gcstring can not be mapped to internal representation
+	 *             if <code>gcstring</code> can not be mapped to internal representation
 	 *             (CW_SIZE_*)
 	 */
 
@@ -250,10 +250,10 @@
 	 * representation for CacheHolder
 	 * 
 	 * @param spiderstring
-	 *            string identified by the spider as containing size iformation
+	 *            string identified by the spider as containing size information
 	 * @return CacheWolf internal representation of size information
 	 * @throws IllegalArgumentException
-	 *             if spiderstring can not be mapped to internal representation
+	 *             if <code>spiderstring</code> can not be mapped to internal representation
 	 *             (CW_SIZE_*)
 	 */
 	public static byte gcSpiderString2Cw(String spiderstring) throws IllegalArgumentException {
@@ -268,7 +268,7 @@
 	 * @param ocxmlstring
 	 *            string extracted from OC-XML attribute size
 	 * @return CacheWolf internal representation of size information
-	 * @trows IllegalArgumentException if ocxmlstring can not be mapped to a
+	 * @trows IllegalArgumentException if <code>ocxmlstring</code> can not be mapped to a
 	 *        CW_SIZE_*
 	 */
 	public static byte ocXmlString2Cw(String ocxmlstring) throws IllegalArgumentException {
@@ -298,7 +298,7 @@
 	 *            CW internal representation of cache size
 	 * @return filename of image to be displayed in main panel as size icon
 	 * @throws IllegalArgumentException
-	 *             if size can not be mapped
+	 *             if <code>size</code> can not be mapped
 	 */
 	public static byte guiSizeImageId(byte size) throws IllegalArgumentException {
 		switch (size) {
@@ -331,7 +331,7 @@
 	 * @param v1Size
 	 *            old size string
 	 * @return CW internal representation of cache size
-	 * @throws IllegalArgumentException if v1Size can not be mapped
+	 * @throws IllegalArgumentException if <code>v1Size</code> can not be mapped
 	 * @deprecated remove once v1 file version compatibility is abandoned
 	 */
 	public static final byte v1Converter(String v1Size) throws IllegalArgumentException {
@@ -369,7 +369,7 @@
 	 *            CW internal representation of cache size
 	 * @return a bit mask for the filter function
 	 * @throws IllegalArgumentException
-	 *             if size can not be mapped to a bit mask
+	 *             if <code>size</code> can not be mapped to a bit mask
 	 */
 	public static byte getFilterPattern(byte size) throws IllegalArgumentException {
 		switch (size) {
@@ -403,7 +403,7 @@
 	 *            CW internal representation of cache size
 	 * @return a one letter String for cache size
 	 * @throws IllegalArgumentException
-	 *             if size can not be mapped
+	 *             if <code>size</code> can not be mapped
 	 */
 
 	public static String getExportShortId(byte size) throws IllegalArgumentException {
@@ -458,10 +458,10 @@
 	 * map a string chosen from the DetailsPanel Size drop down list back to
 	 * internal representation
 	 * 
-	 * @param id
-	 * @return
+	 * @param id string selected in the list
+	 * @return cw type information
 	 * @throws IllegalArgumentException
-	 *             if id can not be mapped
+	 *             if <code>id</code> can not be mapped
 	 * @see cwSizeId2GuiSizeId
 	 * @see guiSizeStrings
 	 */
@@ -496,7 +496,7 @@
 	 *            internal id to be mapped
 	 * @return index of internal size in array
 	 * @throws IllegalArgumentException
-	 *             if id can not be mapped
+	 *             if <code>id</code> can not be mapped
 	 * @see guiSizeStrings2CwSize
 	 * @see cwSizeId2GuiSizeId
 	 */

Modified: trunk/src/CacheWolf/CacheTerrDiff.java
===================================================================
--- trunk/src/CacheWolf/CacheTerrDiff.java	2009-05-19 13:31:23 UTC (rev 1829)
+++ trunk/src/CacheWolf/CacheTerrDiff.java	2009-05-19 18:39:59 UTC (rev 1830)
@@ -2,8 +2,8 @@
 
 /**
  * Handles all aspects of converting terrain and difficulty
- * infromations from legacy file versions and various im-
- * and expoters
+ * informations from legacy file versions and various im-
+ * and exporters
  * 
  * Only use the class in a static way, do not instantiate it
  */
@@ -35,9 +35,9 @@
 	}
 	
 	/**
-	 * convert "old style" terran and difficulty information to the new format.
+	 * convert "old style" terrain and difficulty information to the new format.
 	 * 
-	 * since it is also used by the importes it is not flagged as deprecated
+	 * since it is also used by the importers it is not flagged as depreciated
 	 * @param v1TerrDiff a string representation of terrain or difficulty
 	 * @return internal representation of terrain or difficulty
 	 * @throws IllegalArgumentException if <code>v1TerrDiff</code> can not be mapped
@@ -64,7 +64,7 @@
 	/**
 	 * generate strings of terrain and difficulty for general use
 	 * @param td internal terrain or difficulty value
-	 * @return long version of terrain or difficulty (includeing .0)
+	 * @return long version of terrain or difficulty (including .0)
 	 * @throws IllegalArgumentException
 	 */
 	public static final String longDT(byte td) throws IllegalArgumentException {
@@ -85,7 +85,7 @@
 	/**
 	 * generate strings of terrain and difficulty information for GC.com-like GPX exports
 	 * @param td internal terrain or difficulty value
-	 * @return short version of terrainor difficulty (omit .0)
+	 * @return short version of terrain or difficulty (omit .0)
 	 * @throws IllegalArgumentException
 	 */
 	public static final String shortDT(byte td) throws IllegalArgumentException {

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-05-19 13:31:23 UTC (rev 1829)
+++ trunk/src/CacheWolf/CacheType.java	2009-05-19 18:39:59 UTC (rev 1830)
@@ -1,9 +1,9 @@
 package CacheWolf;
 
 /**
- * Handels all aspects of converting cache type information from
+ * Handles all aspects of converting cache type information from
  * and to the various im- and exporters as well as for converting
- * legavy profiles to current standard
+ * legacy profiles to current standard
  * 
  * Do not instantiate this class, only use it in a static way
  */
@@ -227,7 +227,7 @@
 		case CW_TYPE_REFERENCE: return "R";
 		case CW_TYPE_APE: return "T";
 		case CW_TYPE_MAZE: return "X";
-		default: throw new IllegalArgumentException("unmatched argument "+type+" in CacheSizeNew getExportShortId()");
+		default: throw new IllegalArgumentException("unmatched argument "+type+" in CacheSize getExportShortId()");
 		}
 	}
 	
@@ -258,7 +258,7 @@
 		if (type.equals("1858")) return CW_TYPE_WHEREIGO;
 		if (type.equals("137")) return CW_TYPE_EARTH;
 		
-		throw new IllegalArgumentException("unmatched argument "+type+" in CacheSizeNew v1Converter()");
+		throw new IllegalArgumentException("unmatched argument "+type+" in CacheSize v1Converter()");
 	}
 
 	/**
@@ -293,7 +293,7 @@
 		case -62: return CW_TYPE_WHEREIGO;
 		case 100: return CW_TYPE_WHEREIGO; // yes, it can be either of those
 		case 9: return CW_TYPE_EARTH;
-		default: throw new IllegalArgumentException("unmatched argument "+type+" in CacheSizeNew v2Converter()");
+		default: throw new IllegalArgumentException("unmatched argument "+type+" in CacheSize v2Converter()");
 		}
 	}
 	

Modified: trunk/src/exp/KMLExporter.java
===================================================================
--- trunk/src/exp/KMLExporter.java	2009-05-19 13:31:23 UTC (rev 1829)
+++ trunk/src/exp/KMLExporter.java	2009-05-19 18:39:59 UTC (rev 1830)
@@ -1,7 +1,12 @@
 package exp;
 
-//FIXME: broken!
-
+import CacheWolf.CWPoint;
+import CacheWolf.CacheHolder;
+import CacheWolf.CacheHolderDetail;
+import CacheWolf.CacheType;
+import CacheWolf.Preferences;
+import CacheWolf.Profile;
+import CacheWolf.SafeXML;
 import ewe.io.BufferedWriter;
 import ewe.io.File;
 import ewe.io.FileBase;
@@ -10,16 +15,16 @@
 import ewe.io.IOException;
 import ewe.io.InputStream;
 import ewe.io.PrintWriter;
-import ewe.sys.Convert;
 import ewe.sys.Handle;
 import ewe.sys.Vm;
 import ewe.ui.ProgressBarForm;
-import ewe.util.*;
+import ewe.util.Hashtable;
+import ewe.util.Iterator;
+import ewe.util.Vector;
 import ewe.util.Map.MapEntry;
 import ewe.util.zip.ZipEntry;
 import ewe.util.zip.ZipException;
 import ewe.util.zip.ZipFile;
-import CacheWolf.*; // if we would use public instead of protected we would not need this.
 
 /**
 *	Class to export the cache database (index) to an KML-File
@@ -100,7 +105,7 @@
 					tmp = (Vector)entry.getValue();
 					// skip over empty cachetypes
 					if (tmp.size() == 0) continue;
-					outp.print(startFolder(CacheType.cw2ExportString(CacheType.guiSelect2Cw(new Integer((String)entry.getKey()).byteValue()))));
+					outp.print(startFolder(CacheType.cw2ExportString(new Integer((String)entry.getKey()).byteValue())));
 
 					for(int i = 0; i<tmp.size(); i++){
 						ch = (CacheHolder) tmp.get(i);



From greiol at mail.berlios.de  Wed May 20 07:45:01 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Wed, 20 May 2009 07:45:01 +0200
Subject: [Cachewolf-svn] r1831 - trunk/src/exp
Message-ID: <200905200545.n4K5j1g6024353@sheep.berlios.de>

Author: greiol
Date: 2009-05-20 07:44:57 +0200 (Wed, 20 May 2009)
New Revision: 1831

Modified:
   trunk/src/exp/TPLExporter.java
Log:
hopefully fixed

Modified: trunk/src/exp/TPLExporter.java
===================================================================
--- trunk/src/exp/TPLExporter.java	2009-05-19 18:39:59 UTC (rev 1830)
+++ trunk/src/exp/TPLExporter.java	2009-05-20 05:44:57 UTC (rev 1831)
@@ -162,7 +162,7 @@
 		int counter = 0;
 		for(int i = 0; i<cacheDB.size();i++){
 			ch = cacheDB.get(i);
-			if(cacheDB.get(i).isVisible() == false) counter++;
+			if(cacheDB.get(i).isVisible() == true) counter++;
 		}
 		pbf.showMainTask = false;
 		pbf.setTask(h,"Exporting ...");



From engywuck at mail.berlios.de  Wed May 20 09:30:19 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Wed, 20 May 2009 09:30:19 +0200
Subject: [Cachewolf-svn] r1832 - trunk/src/CacheWolf
Message-ID: <200905200730.n4K7UJXc002894@sheep.berlios.de>

Author: engywuck
Date: 2009-05-20 09:30:17 +0200 (Wed, 20 May 2009)
New Revision: 1832

Modified:
   trunk/src/CacheWolf/Rebuild.java
Log:
Rebuild of index: Deleting xml files after rebuild now doesn't generate NullPointerException when there are directories in the profile.

Modified: trunk/src/CacheWolf/Rebuild.java
===================================================================
--- trunk/src/CacheWolf/Rebuild.java	2009-05-20 05:44:57 UTC (rev 1831)
+++ trunk/src/CacheWolf/Rebuild.java	2009-05-20 07:30:17 UTC (rev 1832)
@@ -74,8 +74,12 @@
 				if (xmlFiles[i]!=null){	
 					h.progress = ((float)nDeleted++)/(float)(orphans-nAdded);
 					h.changed();
-					String wayPoint=xmlFiles[i].substring(0,xmlFiles[i].indexOf('.'));
-					dm.deleteCacheFiles(wayPoint,prof.dataDir);
+					int dotPos = xmlFiles[i].indexOf('.');
+					if (dotPos > 0) {
+					    // This may appear when there are directories in the profile
+					    String wayPoint=xmlFiles[i].substring(0,dotPos);
+					    dm.deleteCacheFiles(wayPoint,prof.dataDir);
+					}
 				}
 			}
 		}



From greiol at mail.berlios.de  Wed May 20 18:39:58 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Wed, 20 May 2009 18:39:58 +0200
Subject: [Cachewolf-svn] r1833 - trunk/src/CacheWolf
Message-ID: <200905201639.n4KGdwv0028435@sheep.berlios.de>

Author: greiol
Date: 2009-05-20 18:39:55 +0200 (Wed, 20 May 2009)
New Revision: 1833

Modified:
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/DetailsPanel.java
Log:
set incomplete if cacheholder can not read details file
panel caches exceptions now


Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-20 07:30:17 UTC (rev 1832)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-20 16:39:55 UTC (rev 1833)
@@ -665,11 +665,14 @@
 			try {
 				details.readCache(Global.getProfile().dataDir);
 			} catch (IOException e) {
-				if (alarmuser && !maybenew) {
-					(new MessageBox("Error", "Could not read cache details for cache: "
-					        + this.getWayPoint(), FormBase.OKB)).execute();
+				if (! maybenew ) {
+					if (alarmuser) {
+						(new MessageBox("Error", "Could not read cache details for cache: "
+						        + this.getWayPoint(), FormBase.OKB)).execute();
+					}
+					details = null;
+					this.setIncomplete(true);
 				}
-				if (!maybenew) details = null;
 			}
 			if (details != null
 					  // for importing/spidering reasons helper objects with same waypoint are created

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-05-20 07:30:17 UTC (rev 1832)
+++ trunk/src/CacheWolf/DetailsPanel.java	2009-05-20 16:39:55 UTC (rev 1833)
@@ -213,10 +213,22 @@
 		chcSize.setInt(ch.getCacheSize());
 
 		attV.showImages(ch.getCacheDetails(true).attributes);
-		lblTerr.setText((ch.getTerrain() != CacheTerrDiff.CW_DT_ERROR) ? 
+		try {
+			lblTerr.setText((ch.getTerrain() != CacheTerrDiff.CW_DT_ERROR) ? 
 				(MyLocale.getMsg(1001,"T")+": "+CacheTerrDiff.longDT(ch.getTerrain())) : "");
-		lblDiff.setText((ch.getHard() != CacheTerrDiff.CW_DT_ERROR) ? 
-				(MyLocale.getMsg(1000,"D")+": "+CacheTerrDiff.longDT(ch.getHard())) : ""); 
+		} catch (IllegalArgumentException ex) {
+			ch.setTerrain(CacheTerrDiff.CW_DT_ERROR);
+			ch.setIncomplete(true);
+			lblTerr.setText("");
+		}
+		try {
+			lblDiff.setText((ch.getHard() != CacheTerrDiff.CW_DT_ERROR) ? 
+				(MyLocale.getMsg(1000,"D")+": "+CacheTerrDiff.longDT(ch.getHard())) : "");
+		} catch (IllegalArgumentException ex) {
+			ch.setHard(CacheTerrDiff.CW_DT_ERROR);
+			ch.setIncomplete(true);
+			lblDiff.setText("");
+		}
 
 		if(isBigScreen)	mNotes.setText(ch.getExistingDetails().getCacheNotes());
 	}



From mik77 at mail.berlios.de  Thu May 21 13:45:37 2009
From: mik77 at mail.berlios.de (mik77 at mail.berlios.de)
Date: Thu, 21 May 2009 13:45:37 +0200
Subject: [Cachewolf-svn] r1834 - in trunk: . res_noewe res_noewe/languages
	src/CacheWolf
Message-ID: <200905211145.n4LBjbEi020255@sheep.berlios.de>

Author: mik77
Date: 2009-05-21 13:45:33 +0200 (Thu, 21 May 2009)
New Revision: 1834

Modified:
   trunk/getRes.bat
   trunk/res_noewe/languages/DE.cfg
   trunk/res_noewe/languages/EN.cfg
   trunk/res_noewe/spider.def
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/OCXMLImporterScreen.java
   trunk/src/CacheWolf/SpiderGC.java
Log:
- spider single cache types
- show page number when spidering
- adapt to small GC changes (__VIEWSTATE1)
- don't mark all addis as incomplete
- use big icons in debug enviroment

Modified: trunk/getRes.bat
===================================================================
--- trunk/getRes.bat	2009-05-20 16:39:55 UTC (rev 1833)
+++ trunk/getRes.bat	2009-05-21 11:45:33 UTC (rev 1834)
@@ -8,7 +8,8 @@
 copy .\resources\*.* .\work\*.*
 copy .\res_noewe\*.* .\work\*.*
 mkdir .\work\attributes
-copy .\resources\attributes\*.* .\work\attributes\*.*
+copy .\resources\attributes-big\*.* .\work\attributes\*.*
+copy .\resources\attributes\*-non.gif .\work\attributes\*.*
 mkdir .\work\webmapservices
 copy .\res_noewe\webmapservices\*.* .\work\webmapservices\*.*
 mkdir .\work\languages

Modified: trunk/res_noewe/languages/DE.cfg
===================================================================
--- trunk/res_noewe/languages/DE.cfg	2009-05-20 16:39:55 UTC (rev 1833)
+++ trunk/res_noewe/languages/DE.cfg	2009-05-21 11:45:33 UTC (rev 1834)
@@ -411,6 +411,7 @@
 		1624=+Caches
 		1625=TBs downloaden
 		1626=Max. Logs:
+		1627=Alle Caches
 		1700=Fehler in Zeile:
 		1701=Spalte:
 		1702=Variable nicht definiert:
@@ -761,6 +762,7 @@
 		5518=+Caches in der Datenbank sollten aktualisiert werden. Jetzt aktualisieren?
 		5519=Information
 		5520=Nur das eingestellte Maximum an Caches wurde geladen.%0aWiederholen sie das Spidern sp%e4ter um weitere Caches zu laden.%0aEs wurden keine vorhandenen Caches aktualisiert.
+		5521=Seite+
 		6000=Guid
 		6001=Name
 		6002=Track#

Modified: trunk/res_noewe/languages/EN.cfg
===================================================================
--- trunk/res_noewe/languages/EN.cfg	2009-05-20 16:39:55 UTC (rev 1833)
+++ trunk/res_noewe/languages/EN.cfg	2009-05-21 11:45:33 UTC (rev 1834)
@@ -411,6 +411,7 @@
 		1624=+caches
 		1625=Download TBs
 		1626=Max. logs:
+		1627=All caches
 		1700=Error on line:
 		1701= position:
 		1702=Variable not defined:
@@ -750,6 +751,7 @@
 		5518=+caches in database need an update. Update now?
 		5519=Information
 		5520=Only the given maximum of caches were loaded.%0aRepeat spidering later to load more caches.%0aNo already existing caches were updated.
+		5521=Page+
 		6000=Guid
 		6001=Name
 		6002=track#

Modified: trunk/res_noewe/spider.def
===================================================================
--- trunk/res_noewe/spider.def	2009-05-20 16:39:55 UTC (rev 1833)
+++ trunk/res_noewe/spider.def	2009-05-21 11:45:33 UTC (rev 1834)
@@ -28,6 +28,7 @@
 # Version 4.4 - 20090314 firstPageFinds string added
 # Version 4.5 - 20090315 strings for spidering country/state/logId
 # Version 4.6 - 20090406 Fix for country/state (did not work with US caches)
+# Version 4.7 - 20090521 Strings for single cache types added
 #============================================================
 # A suffix of Rex indicates a regular expression
 # A suffix of ExStart indicates the start of an Extractor search pattern
@@ -57,6 +58,21 @@
 firstLine          = http://www.geocaching.com/seek/nearest.aspx?
 nextListPage       = /seek/nearest.aspx
 
+onlyWherigo         = &tx=0544fa55-772d-4e5c-96a9-36a51ebcf5c9
+onlyMegaEvent       = &tx=69eb8535-b718-4b35-ae3c-a856a55b0874
+onlyEarth           = &tx=c66f5cf3-9523-4549-b8dd-759cd2f18db8
+onlyUnknown         = &tx=40861821-1835-4e11-b666-8d41064d03fe
+onlyMulti           = &tx=a5f6d0ad-d2f2-4011-8c14-940a9ebf3c74
+onlyVirtual         = &tx=294d4360-ac86-4c83-84dd-8113ef678d7e
+onlyLetterboxHybrid = &tx=4bdd8fb2-d7bc-453f-a9c5-968563b15d24
+onlyTraditional     = &tx=32bc9333-5e52-4957-b0f6-5a2c8fc7b257
+onlyEvent           = &tx=69eb8534-b718-4b35-ae3c-a856a55b0874
+onlyCito            = &tx=57150806-bc1a-42d6-9cf0-538d171a2d22
+onlyWebcam          = &tx=31d2ae3c-c358-4b5f-8dcd-2185bf472d3d
+
+onlyProjectAPE      = &tx=2555690d-b2bc-4b55-b5ac-0cb704c0b768
+onlyGPSAdventure    = &tx=72e69af2-7986-4990-afd9-bc16cbbb4ce3
+
 #--------------------------------------
 #Section2: Get cachepage by name
 #--------------------------------------

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-20 16:39:55 UTC (rev 1833)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-21 11:45:33 UTC (rev 1834)
@@ -900,7 +900,7 @@
 		setType(byteFromLong(value, 3));
 		setCacheSize(byteFromLong(value, 4));
 		setNoFindLogs((byteFromLong(value, 5)));
-		if (getHard() == -1 || getTerrain() == 1 || getType() == -1 || getCacheSize() == -1 ) {
+		if ( ( (!isAddiWpt()) && ( getHard() == -1 || getTerrain() == 1 || getCacheSize() == -1 ) ) || (getType() == -1) ) {
 			setIncomplete(true);
 		}
 	}

Modified: trunk/src/CacheWolf/OCXMLImporterScreen.java
===================================================================
--- trunk/src/CacheWolf/OCXMLImporterScreen.java	2009-05-20 16:39:55 UTC (rev 1833)
+++ trunk/src/CacheWolf/OCXMLImporterScreen.java	2009-05-21 11:45:33 UTC (rev 1834)
@@ -3,6 +3,7 @@
  */
 package CacheWolf;
 
+import CacheWolf.SpiderGC.SpiderProperties;
 import ewe.sys.Convert;
 import ewe.ui.*;
 
@@ -15,6 +16,7 @@
 public class OCXMLImporterScreen extends Form {
 	mButton cancelB, okB;
 	Preferences pref;
+	mChoice chcType;
 	mInput distanceInput;
 	mInput maxNumberInput;
 	mInput maxLogsInput;
@@ -31,6 +33,7 @@
 	static int MAXNUMBER = 32;
 	static int TRAVELBUGS = 64;
 	static int MAXLOGS = 128;
+	static int TYPE = 256;
 
 	
 	public OCXMLImporterScreen(String title, int options) {
@@ -40,6 +43,24 @@
 		isGC = ((options & ISGC) > 0);
 		
 		this.title = title;
+				
+		if ((options & TYPE) > 0) {
+			this.addLast( chcType = new mChoice(new String[] {
+					MyLocale.getMsg(1627,"All caches"),	
+					CacheType.CW_GUISTR_TRADI,
+					CacheType.CW_GUISTR_MULTI,
+					CacheType.CW_GUISTR_VIRTUAL,
+					CacheType.CW_GUISTR_LETTERBOX,
+					CacheType.CW_GUISTR_EVENT,
+					CacheType.CW_GUISTR_MEGAEVENT,
+					CacheType.CW_GUISTR_WEBCAM,
+					CacheType.CW_GUISTR_UNKNOWN,
+					CacheType.CW_GUISTR_CITO,
+					CacheType.CW_GUISTR_EARTH,
+					CacheType.CW_GUISTR_WHEREIGO
+				},0), CellConstants.STRETCH, (CellConstants.FILL|CellConstants.WEST));
+		}
+
 		if ((options & DIST) > 0) {
 			this.addNext(distLbl = new mLabel(MyLocale.getMsg(1601,"Distance:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 			distanceInput = new mInput();
@@ -132,4 +153,55 @@
 		}
 		super.onEvent(ev);
 	}
+	
+	public String getCacheTypeRestriction(SpiderProperties p){
+		String cacheTypeRestriction = "";
+
+		if (chcType!=null){
+			try {
+				switch (chcType.getInt()) {
+				case  0:
+					cacheTypeRestriction = "";
+					break;
+				case  1: 
+					cacheTypeRestriction = p.getProp("onlyTraditional");
+					break;
+				case  2:
+					cacheTypeRestriction = p.getProp("onlyMulti");
+					break;
+				case  3:
+					cacheTypeRestriction = p.getProp("onlyVirtual") ;
+					break;
+				case  4:
+					cacheTypeRestriction = p.getProp("onlyLetterboxHybrid");
+					break;
+				case  5:
+					cacheTypeRestriction = p.getProp("onlyEvent");
+					break;
+				case  6:
+					cacheTypeRestriction = p.getProp("onlyMegaEvent");
+					break;
+				case  7:
+					cacheTypeRestriction = p.getProp("onlyWebcam");
+					break;
+				case  8:
+					cacheTypeRestriction = p.getProp("onlyUnknown");
+					break;
+				case 9:
+					cacheTypeRestriction = p.getProp("onlyCito");
+					break;
+				case 10:
+					cacheTypeRestriction = p.getProp("onlyEarth");
+					break;
+				case 11:
+					cacheTypeRestriction = p.getProp("onlyWherigo");
+					break;
+				default:
+					cacheTypeRestriction = "";
+				}
+			}catch (Exception ex) { // Some tag missing from spider.def
+			}
+		}
+		return cacheTypeRestriction;
+	}
 }

Modified: trunk/src/CacheWolf/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/SpiderGC.java	2009-05-20 16:39:55 UTC (rev 1833)
+++ trunk/src/CacheWolf/SpiderGC.java	2009-05-21 11:45:33 UTC (rev 1834)
@@ -52,6 +52,7 @@
 	private static Preferences pref;
 	private Profile profile;
 	private static String viewstate = "";
+	private static String viewstate1 = "";
 	private static String eventvalidation = "";
 	private static String cookieID = "";
 	private static String cookieSession = "";
@@ -60,7 +61,7 @@
 	private CacheDB cacheDB;
 	private Vector cachesToLoad = new Vector();
 	private InfoBox infB;
-	private static myProperties p=null;
+	private static SpiderProperties p=null;
 
 	public SpiderGC(Preferences prf, Profile profile, boolean bypass){
 		this.profile=profile;
@@ -68,7 +69,7 @@
 		pref = prf;
 		if (p==null) {
 			pref.logInit();
-			p=new myProperties();
+			p=new SpiderProperties();
 		}
 		MAXLOGS=pref.maxLogsToSpider;
 	}
@@ -120,6 +121,7 @@
 		if (!localInfB.isClosed) { // If user has not aborted, we continue
 			Regex rexCookieID = new Regex("(?i)Set-Cookie: userid=(.*?);.*");
 			Regex rexViewstate = new Regex("id=\"__VIEWSTATE\" value=\"(.*?)\" />");
+			Regex rexViewstate1 = new Regex("id=\"__VIEWSTATE1\" value=\"(.*?)\" />");
 			Regex rexEventvalidation = new Regex("id=\"__EVENTVALIDATION\" value=\"(.*?)\" />");
 			Regex rexCookieSession = new Regex("(?i)Set-Cookie: ASP.NET_SessionId=(.*?);.*");
 			rexViewstate.search(start);
@@ -179,6 +181,13 @@
 				pref.log("[login]:Viewstate not found");
 			}
 			viewstate = rexViewstate.stringMatched(1);
+			
+			rexViewstate1.search(start);
+			if (!rexViewstate1.didMatch()) {
+				pref.log("[login]:Viewstate1 not found");
+			}
+			viewstate1 = rexViewstate1.stringMatched(1);
+			
 			rexCookieID.search(start);
 			if (!rexCookieID.didMatch()) {
 				pref.log("[login]:CookieID not found. Using old one.");
@@ -295,6 +304,7 @@
 		}
 		String start = "";
 		Regex rexViewstate = new Regex("id=\"__VIEWSTATE\" value=\"(.*)\" />");
+		Regex rexViewstate1 = new Regex("id=\"__VIEWSTATE1\" value=\"(.*)\" />");
 		Regex rexEventvalidation = new Regex("id=\"__EVENTVALIDATION\" value=\"(.*)\" />");
 		String doc = "";
 
@@ -303,15 +313,15 @@
 		}
 
 		boolean doNotgetFound = false;
-
+		
 		OCXMLImporterScreen options;
 		if (spiderAllFinds) {
-			options = new OCXMLImporterScreen(MyLocale.getMsg(5510,"Spider Options"), OCXMLImporterScreen.MAXNUMBER|OCXMLImporterScreen.IMAGES| OCXMLImporterScreen.ISGC| OCXMLImporterScreen.TRAVELBUGS| OCXMLImporterScreen.MAXLOGS);
+			options = new OCXMLImporterScreen(MyLocale.getMsg(5510,"Spider Options"), OCXMLImporterScreen.MAXNUMBER|OCXMLImporterScreen.IMAGES| OCXMLImporterScreen.ISGC| OCXMLImporterScreen.TRAVELBUGS| OCXMLImporterScreen.MAXLOGS| OCXMLImporterScreen.TYPE);
 			if (options.execute() == FormBase.IDCANCEL) {return; }
 
 			distance = 1;
 		} else {
-			options = new OCXMLImporterScreen(MyLocale.getMsg(5510,"Spider Options"),	OCXMLImporterScreen.MAXNUMBER|OCXMLImporterScreen.INCLUDEFOUND | OCXMLImporterScreen.DIST| OCXMLImporterScreen.IMAGES| OCXMLImporterScreen.ISGC| OCXMLImporterScreen.TRAVELBUGS| OCXMLImporterScreen.MAXLOGS);
+			options = new OCXMLImporterScreen(MyLocale.getMsg(5510,"Spider Options"),	OCXMLImporterScreen.MAXNUMBER|OCXMLImporterScreen.INCLUDEFOUND | OCXMLImporterScreen.DIST| OCXMLImporterScreen.IMAGES| OCXMLImporterScreen.ISGC| OCXMLImporterScreen.TRAVELBUGS| OCXMLImporterScreen.MAXLOGS| OCXMLImporterScreen.TYPE);
 			if (options.execute() == FormBase.IDCANCEL) {return; }
 			String dist = options.distanceInput.getText();
 			if (dist.length()== 0) return;
@@ -340,6 +350,9 @@
 
 		boolean getImages = options.imagesCheckBox.getState();
 		boolean getTBs = options.travelbugsCheckBox.getState();
+		
+		String cacheTypeRestriction = options.getCacheTypeRestriction(p);
+
 		options.close(0);
 
 		//max distance in miles for URL, so we can get more than 80km
@@ -383,6 +396,7 @@
 			                              + p.getProp("maxDistance") + Integer.toString( (int)saveDistanceInMiles );			
 				if(doNotgetFound) ln = ln + p.getProp("showOnlyFound");
 			}
+			ln = ln + cacheTypeRestriction;
 			pref.log("Getting first page: "+ln);
 			start = fetch(ln);
 			pref.log("Got first page");
@@ -403,12 +417,13 @@
 			Vm.showWait(false);
 			return;
 		}
+		int page = 0;
 		int found_on_page = 0;
 		try {
 			//Loop till maximum distance has been found or no more caches are in the list
 			while(distance > 0){
 				if (infB.isClosed) break;
-		
+						
 				rexViewstate.search(start);
 				if(rexViewstate.didMatch()){
 					viewstate = rexViewstate.stringMatched(1);
@@ -418,6 +433,15 @@
 					pref.log("Viewstate not found");
 				}
 				
+				rexViewstate1.search(start);
+				if(rexViewstate1.didMatch()){
+					viewstate1 = rexViewstate1.stringMatched(1);
+					//Vm.debug("ViewState: " + viewstate);
+				} else {
+					viewstate1 = "";
+					pref.log("Viewstate1 not found");
+				}
+				
 				rexEventvalidation.search(start);
 				if(rexEventvalidation.didMatch()){
 					eventvalidation = rexEventvalidation.stringMatched(1);
@@ -479,7 +503,10 @@
 					} else distance = 0;
 					lineRex.searchFrom(dummy, lineRex.matchedTo());
 				}
-				infB.setInfo(MyLocale.getMsg(5511,"Found ") + cachesToLoad.size() + MyLocale.getMsg(5512," caches"));
+				
+				page++;
+				infB.setInfo(MyLocale.getMsg(5521,"Page ") + page + "\n" + MyLocale.getMsg(5511,"Found ") + cachesToLoad.size() + MyLocale.getMsg(5512," caches"));
+
 				if(found_on_page < 20) distance = 0;
 				if (spiderAllFinds) {
 					postStr = p.getProp("firstLine");
@@ -488,6 +515,7 @@
 							                             + p.getProp("maxDistance") + Integer.toString( (int)saveDistanceInMiles );			
 					if(doNotgetFound) postStr = postStr + p.getProp("showOnlyFound");
 				}
+				postStr = postStr + cacheTypeRestriction;
 				if(distance > 0){
 					page_number++;
 					if(page_number >= 15) page_number = 5;
@@ -499,8 +527,10 @@
 					}
 					doc = URL.encodeURL("__EVENTTARGET",false) +"="+ URL.encodeURL(strNextPage,false)
 					    + "&" + URL.encodeURL("__EVENTARGUMENT",false) +"="+ URL.encodeURL("",false)
+					    + "&" + URL.encodeURL("__VIEWSTATEFIELDCOUNT",false) +"=2"
 					    + "&" + URL.encodeURL("__VIEWSTATE",false) +"="+ URL.encodeURL(viewstate,false)
-					    + "&" + URL.encodeURL("__EVENTVALIDATION",false) +"="+ URL.encodeURL(eventvalidation,false);
+					    + "&" + URL.encodeURL("__VIEWSTATE1",false) +"="+ URL.encodeURL(viewstate1,false);
+//					    + "&" + URL.encodeURL("__EVENTVALIDATION",false) +"="+ URL.encodeURL(eventvalidation,false);
 					try{
 						start = "";
 						pref.log("Fetching next list page:" + doc);
@@ -1606,8 +1636,8 @@
 		}
 	}
 
-	private class myProperties extends Properties {
-		myProperties() {
+	public class SpiderProperties extends Properties {
+		SpiderProperties() {
 			super();
 			try {
 				load(new FileInputStream(FileBase.getProgramDirectory()+"/spider.def"));



From mik77 at mail.berlios.de  Thu May 21 14:36:05 2009
From: mik77 at mail.berlios.de (mik77 at mail.berlios.de)
Date: Thu, 21 May 2009 14:36:05 +0200
Subject: [Cachewolf-svn] r1835 - trunk/src/CacheWolf
Message-ID: <200905211236.n4LCa5fv027644@sheep.berlios.de>

Author: mik77
Date: 2009-05-21 14:36:04 +0200 (Thu, 21 May 2009)
New Revision: 1835

Modified:
   trunk/src/CacheWolf/CacheHolderDetail.java
Log:
Update attributes when updating CacheHolderDetail

Modified: trunk/src/CacheWolf/CacheHolderDetail.java
===================================================================
--- trunk/src/CacheWolf/CacheHolderDetail.java	2009-05-21 11:45:33 UTC (rev 1834)
+++ trunk/src/CacheWolf/CacheHolderDetail.java	2009-05-21 12:36:04 UTC (rev 1835)
@@ -125,6 +125,8 @@
 		  }
 		  this.Travelbugs = newCh.Travelbugs;
 		  
+		  if (newCh.attributes.getCount() > 0) this.attributes = newCh.attributes;
+		  
 		  // URL
 		  this.URL = newCh.URL;
 		  



From greiol at mail.berlios.de  Thu May 21 23:00:10 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Thu, 21 May 2009 23:00:10 +0200
Subject: [Cachewolf-svn] r1836 - experiments
Message-ID: <200905212100.n4LL0A5u000782@sheep.berlios.de>

Author: greiol
Date: 2009-05-21 23:00:09 +0200 (Thu, 21 May 2009)
New Revision: 1836

Removed:
   experiments/greiol/
Log:
clean up experiments after merge



From greiol at mail.berlios.de  Thu May 21 23:15:20 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Thu, 21 May 2009 23:15:20 +0200
Subject: [Cachewolf-svn] r1837 - in trunk/src: CacheWolf exp
Message-ID: <200905212115.n4LLFK6P001714@sheep.berlios.de>

Author: greiol
Date: 2009-05-21 23:15:18 +0200 (Thu, 21 May 2009)
New Revision: 1837

Modified:
   trunk/src/CacheWolf/CacheTerrDiff.java
   trunk/src/CacheWolf/myTableModel.java
   trunk/src/exp/TPLExporter.java
Log:
better handle AWs

Modified: trunk/src/CacheWolf/CacheTerrDiff.java
===================================================================
--- trunk/src/CacheWolf/CacheTerrDiff.java	2009-05-21 21:00:09 UTC (rev 1836)
+++ trunk/src/CacheWolf/CacheTerrDiff.java	2009-05-21 21:15:18 UTC (rev 1837)
@@ -29,6 +29,8 @@
 	protected static final byte CW_DT_50 = 50;
 	/** wrong terrain or difficulty */
 	protected static final byte CW_DT_ERROR = -1;
+	/** terrain or difficulty for additional waypoints */
+	protected static final byte CW_DT_ADDITIONAL = 0;
 
 	/** constructor dies nothing */
 	public CacheTerrDiff() {

Modified: trunk/src/CacheWolf/myTableModel.java
===================================================================
--- trunk/src/CacheWolf/myTableModel.java	2009-05-21 21:00:09 UTC (rev 1836)
+++ trunk/src/CacheWolf/myTableModel.java	2009-05-21 21:15:18 UTC (rev 1837)
@@ -293,9 +293,17 @@
 					case 1: // Type
 						return GuiImageBroker.getTypeImage(ch.getType());
 					case 2: // Difficulty;
-						return CacheTerrDiff.longDT(ch.getHard());
+						if (ch.isAddiWpt()) {
+							return "";
+						} else {
+							return CacheTerrDiff.longDT(ch.getHard());
+						}
 					case 3: // Terrain
-						return CacheTerrDiff.longDT(ch.getTerrain());
+						if (ch.isAddiWpt()) {
+							return "";
+						} else {
+							return CacheTerrDiff.longDT(ch.getTerrain());
+						}
 					case 4: // Waypoint
 						if (showExtraWptInfo) {
 							if(ch.is_incomplete()) return ch.getIconAndTextWP(4, fm);

Modified: trunk/src/exp/TPLExporter.java
===================================================================
--- trunk/src/exp/TPLExporter.java	2009-05-21 21:00:09 UTC (rev 1836)
+++ trunk/src/exp/TPLExporter.java	2009-05-21 21:15:18 UTC (rev 1837)
@@ -25,8 +25,6 @@
 
 package exp;
 
-//FIXME: broken
-
 import CacheWolf.CWPoint;
 import CacheWolf.CacheDB;
 import CacheWolf.CacheHolder;



From mik77 at mail.berlios.de  Fri May 22 09:37:33 2009
From: mik77 at mail.berlios.de (mik77 at mail.berlios.de)
Date: Fri, 22 May 2009 09:37:33 +0200
Subject: [Cachewolf-svn] r1838 - branches/bugfix_1.0/src/CacheWolf
Message-ID: <200905220737.n4M7bW1q000777@sheep.berlios.de>

Author: mik77
Date: 2009-05-22 09:37:24 +0200 (Fri, 22 May 2009)
New Revision: 1838

Modified:
   branches/bugfix_1.0/src/CacheWolf/SpiderGC.java
Log:
Small correction for GC change.

Modified: branches/bugfix_1.0/src/CacheWolf/SpiderGC.java
===================================================================
--- branches/bugfix_1.0/src/CacheWolf/SpiderGC.java	2009-05-21 21:15:18 UTC (rev 1837)
+++ branches/bugfix_1.0/src/CacheWolf/SpiderGC.java	2009-05-22 07:37:24 UTC (rev 1838)
@@ -50,6 +50,7 @@
 	private static Preferences pref;
 	private Profile profile;
 	private static String viewstate = "";
+	private static String viewstate1 = "";
 	private static String eventvalidation = "";
 	private static String cookieID = "";
 	private static String cookieSession = "";
@@ -299,6 +300,7 @@
 		}
 		String start = "";
 		Regex rexViewstate = new Regex("id=\"__VIEWSTATE\" value=\"(.*)\" />");
+		Regex rexViewstate1 = new Regex("id=\"__VIEWSTATE1\" value=\"(.*)\" />");
 		Regex rexEventvalidation = new Regex("id=\"__EVENTVALIDATION\" value=\"(.*)\" />");
 		String doc = "";
 
@@ -357,7 +359,7 @@
 			//Loop till maximum distance has been found or no more caches are in the list
 			while(distance > 0){
 				if (infB.isClosed) break;
-		
+						
 				rexViewstate.search(start);
 				if(rexViewstate.didMatch()){
 					viewstate = rexViewstate.stringMatched(1);
@@ -367,6 +369,14 @@
 					pref.log("Viewstate not found");
 				}
 				
+				rexViewstate1.search(start);
+				if(rexViewstate1.didMatch()){
+					viewstate1 = rexViewstate1.stringMatched(1);
+				} else {
+					viewstate1 = "";
+					pref.log("Viewstate1 not found");
+				}
+				
 				rexEventvalidation.search(start);
 				if(rexEventvalidation.didMatch()){
 					eventvalidation = rexEventvalidation.stringMatched(1);
@@ -427,8 +437,9 @@
 					}
 					doc = URL.encodeURL("__EVENTTARGET",false) +"="+ URL.encodeURL(strNextPage,false)
 					    + "&" + URL.encodeURL("__EVENTARGUMENT",false) +"="+ URL.encodeURL("",false)
+					    + "&" + URL.encodeURL("__VIEWSTATEFIELDCOUNT",false) +"=2"
 					    + "&" + URL.encodeURL("__VIEWSTATE",false) +"="+ URL.encodeURL(viewstate,false)
-					    + "&" + URL.encodeURL("__EVENTVALIDATION",false) +"="+ URL.encodeURL(eventvalidation,false);
+					    + "&" + URL.encodeURL("__VIEWSTATE1",false) +"="+ URL.encodeURL(viewstate1,false);
 					try{
 						start = "";
 						pref.log("Fetching next list page:" + doc);



From mik77 at mail.berlios.de  Fri May 22 11:31:39 2009
From: mik77 at mail.berlios.de (mik77 at mail.berlios.de)
Date: Fri, 22 May 2009 11:31:39 +0200
Subject: [Cachewolf-svn] r1839 - in
	branches/bugfix_1.0/res_noewe/webmapservices: . untested
Message-ID: <200905220931.n4M9VdSF016407@sheep.berlios.de>

Author: mik77
Date: 2009-05-22 11:31:23 +0200 (Fri, 22 May 2009)
New Revision: 1839

Added:
   branches/bugfix_1.0/res_noewe/webmapservices/de-sn_p.wms
   branches/bugfix_1.0/res_noewe/webmapservices/de-sn_t10.wms
   branches/bugfix_1.0/res_noewe/webmapservices/de-sn_t25.wms
   branches/bugfix_1.0/res_noewe/webmapservices/de-sn_t50.wms
   branches/bugfix_1.0/res_noewe/webmapservices/eu_topo_osm.wms
   branches/bugfix_1.0/res_noewe/webmapservices/it-52_t10.wms
   branches/bugfix_1.0/res_noewe/webmapservices/it-52_t10bw.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/
   branches/bugfix_1.0/res_noewe/webmapservices/untested/at-3_p.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/at-3_t50.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/at_p.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-bb_t10.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-bb_t25.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-bw_p.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-bw_t50.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-by_p.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-by_t50.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-he_p.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-he_t100.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-he_t50.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-mv_p.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-mv_t10.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-mv_t25.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-mv_t50.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-ni_pt.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-ni_t100.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-nw_p.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-nw_t10.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-nw_t25.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-nw_t50.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-rp_p.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-rp_t50.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-th_p.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de-th_t50.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de_t.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de_t1000.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de_t200.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/de_t500.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/es-an_p.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/es-an_t.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/es-an_t1.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/es-ar_p.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/es-ar_t.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/es-cn_p.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/es-cn_t.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/es-cn_ts.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/fr_t.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/it-88_m.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/it-88_p.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/it-88_t10.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/it_t.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/jp-t.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/pt_t500.wms
   branches/bugfix_1.0/res_noewe/webmapservices/untested/us_t.wms
Modified:
   branches/bugfix_1.0/res_noewe/webmapservices/de-st_photo.wms
   branches/bugfix_1.0/res_noewe/webmapservices/de-st_topo_10.wms
   branches/bugfix_1.0/res_noewe/webmapservices/de-st_topo_50.wms
Log:
WMS update from trunk

Added: branches/bugfix_1.0/res_noewe/webmapservices/de-sn_p.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/de-sn_p.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/de-sn_p.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,33 @@
+TakenFromUrl:   http://www.landesvermessung.sachsen.de/inhalt/geo/basis/basis_dienste.html
+GetCapabilitiesUrl: http://www.landesvermessung.sachsen.de/ias/basiskarte4/service/SRV4DOPFREE/WMSFREE_TK/wmsservice?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities
+Name:	de.Sachsen photo SF 0,1..247
+MapType:	photo
+MainUrl:            http://www.landesvermessung.sachsen.de/ias/basiskarte4/service/SRV4DOPFREE/WMSFREE_TK/wmsservice?
+ServiceTypeUrlPart: SERVICE=WMS
+VersionUrlPart:     VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf: 31468 
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31468
+RequestUrlPart:     REQUEST=GetMap
+#LayersUrlPart:     LAYERS=MS|Luftbilder||
+#LayersUrlPart:     LAYERS=bw|Graustufen||
+#LayersUrlPart:     LAYERS=ortho|Sachsen 1999-2004|0.000498903|0.0498903
+#LayersUrlPart:     LAYERS=ortho_pan06|Sachsen 2006-2008|0.000498903|4.98853
+#LayersUrlPart:     LAYERS=ortho_flut|Flut 2002|0.000498903|0.0498903
+#LayersUrlPart:     LAYERS=ir|Farbe (infrarot)||
+#LayersUrlPart:     LAYERS=ortho_cir06|Sachsen 2006-2008|0.000498903|4.98853
+#LayersUrlPart:     LAYERS=c|Farbe (RGB)||
+#LayersUrlPart:     LAYERS=ortho_color|Mittelsachsen 2002|0.000498903|0.0498903
+#LayersUrlPart:     LAYERS=ortho_rgb06_lowres|Sachsen 2006-2008 LowRes|4.98853|4989.03
+#LayersUrlPart:     LAYERS=ortho_rgb06|Sachsen 2006-2008|0.000498903|4.98853
+LayersUrlPart:	LAYERS=c
+StylesUrlPart:     STYLES=
+ImageFormatUrlPart:FORMAT=image/png
+BoundingBoxTopLeftWGS84:	N 51.85920 E 011.76510
+BoundingBoxButtomRightWGS84:	N 50.02940 E 015.13580
+MinScale:   0.13
+MaxScale:   350
+RecommendedScale:   1
+ImageFileExtension: .png
+#Karten teils ausserhalb Sachsens werden weiss oder nicht bedient (Verweis auf BBox)
+#Skalierung 0,1 bis 247  : 240(340/1,414) erfasst ganz Sachsen
+#LayersUrlPart:     LAYERS=MS geht auch (wie c), andere nicht getestet

Added: branches/bugfix_1.0/res_noewe/webmapservices/de-sn_t10.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/de-sn_t10.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/de-sn_t10.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,44 @@
+TakenFromUrl:   http://www.landesvermessung.sachsen.de/inhalt/geo/basis/basis_dienste.html
+GetCapabilitiesUrl:   http://www.landesvermessung.sachsen.de/ias/basiskarte4/service/SRV4TKFREE/WMSFREE_TK/wmsservice?REQUEST=GetCapabilities
+Name:	de.Sachsen topo 10 SF 0,038..1,76
+MapType:   topo
+MainUrl:   http://www.landesvermessung.sachsen.de/ias/basiskarte4/service/SRV4TKFREE/WMSFREE_TK/wmsservice?
+ServiceTypeUrlPart:   SERVICE=WMS 
+VersionUrlPart:   VERSION=1.1.1 
+CoordinateReferenceSystemCacheWolf: 31468 
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:31468
+RequestUrlPart:   REQUEST=GetMap
+#LayersUrlPart:     LAYERS=MS|Topogr. Karten||
+#LayersUrlPart:     LAYERS=UEB|Uebersicht|62.3629|1247.26
+#LayersUrlPart:     LAYERS=TK100|TK 100||
+#LayersUrlPart:     LAYERS=tk100v|TK 100 - Vegetation|12.4726|62.3629
+#LayersUrlPart:     LAYERS=tk100i|TK 100 - Hoehenlinien|12.4726|62.3629
+#LayersUrlPart:     LAYERS=tk100w|TK 100 - Gewaesser|12.4726|62.3629
+#LayersUrlPart:     LAYERS=tk100g|TK 100 - Grundriss|12.4726|62.3629
+#LayersUrlPart:     LAYERS=tk100s|TK 100 - Schriften|12.4726|62.3629
+#LayersUrlPart:     LAYERS=TK50|TK 50||
+#LayersUrlPart:     LAYERS=tk50v|TK 50 - Vegetation|4.98903|12.4726
+#LayersUrlPart:     LAYERS=tk50i|TK 50 - Hoehenlinien|4.98903|12.4726
+#LayersUrlPart:     LAYERS=tk50w|TK 50 - Gewaesser|4.98903|12.4726
+#LayersUrlPart:     LAYERS=tk50g|TK 50 - Grundriss|4.98903|12.4726
+#LayersUrlPart:     LAYERS=TK25|TK 25||
+#LayersUrlPart:     LAYERS=tk25v|TK 25 - Vegetation|2.49451|4.98903
+#LayersUrlPart:     LAYERS=tk25i|TK 25 - Hoehenlinien|2.49451|4.98903
+#LayersUrlPart:     LAYERS=tk25w|TK 25 - Gewaesser|2.49451|4.98903
+#LayersUrlPart:     LAYERS=tk25g|TK 25 - Grundriss|2.49451|4.98903
+#LayersUrlPart:     LAYERS=TK10|TK 10||
+#LayersUrlPart:     LAYERS=tk10v|TK 10 - Vegetation|0.0503892|2.49451
+#LayersUrlPart:     LAYERS=tk10i|TK 10 - Hoehenlinien|0.0503892|2.49451
+#LayersUrlPart:     LAYERS=tk10w|TK 10 - Gewaesser|0.0503892|2.49451
+#LayersUrlPart:     LAYERS=tk10g|TK 10 - Grundriss|0.0503892|2.49451
+LayersUrlPart:	LAYERS=TK10
+#LayersUrlPart:   LAYERS=tk10v,tk10i,tk10g,tk10w
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 51.8592 E 11.7651
+BoundingBoxButtomRightWGS84:   N 50.0294 E 15.1358
+MinScale:   0.0503892
+MaxScale:   2.49451
+RecommendedScale:   1.0
+ImageFileExtension: .png
+#MinScale 0,0503892 = 0,035630545018565180516539026730974 Praktisch aber 0,038 da CW noch mal was runter korrigiert
\ No newline at end of file

Added: branches/bugfix_1.0/res_noewe/webmapservices/de-sn_t25.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/de-sn_t25.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/de-sn_t25.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,44 @@
+TakenFromUrl:   http://www.landesvermessung.sachsen.de/inhalt/geo/basis/basis_dienste.html
+GetCapabilitiesUrl:   http://www.landesvermessung.sachsen.de/ias/basiskarte4/service/SRV4TKFREE/WMSFREE_TK/wmsservice?REQUEST=GetCapabilities
+Name:	de.Sachsen topo 25 SF 1,77..3,52
+MapType:   topo
+MainUrl:   http://www.landesvermessung.sachsen.de/ias/basiskarte4/service/SRV4TKFREE/WMSFREE_TK/wmsservice?
+ServiceTypeUrlPart:   SERVICE=WMS 
+VersionUrlPart:   VERSION=1.1.1 
+CoordinateReferenceSystemCacheWolf: 31468 
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:31468
+RequestUrlPart:   REQUEST=GetMap
+#LayersUrlPart:     LAYERS=MS|Topogr. Karten||
+#LayersUrlPart:     LAYERS=UEB|Uebersicht|62.3629|1247.26
+#LayersUrlPart:     LAYERS=TK100|TK 100||
+#LayersUrlPart:     LAYERS=tk100v|TK 100 - Vegetation|12.4726|62.3629
+#LayersUrlPart:     LAYERS=tk100i|TK 100 - Hoehenlinien|12.4726|62.3629
+#LayersUrlPart:     LAYERS=tk100w|TK 100 - Gewaesser|12.4726|62.3629
+#LayersUrlPart:     LAYERS=tk100g|TK 100 - Grundriss|12.4726|62.3629
+#LayersUrlPart:     LAYERS=tk100s|TK 100 - Schriften|12.4726|62.3629
+#LayersUrlPart:     LAYERS=TK50|TK 50||
+#LayersUrlPart:     LAYERS=tk50v|TK 50 - Vegetation|4.98903|12.4726
+#LayersUrlPart:     LAYERS=tk50i|TK 50 - Hoehenlinien|4.98903|12.4726
+#LayersUrlPart:     LAYERS=tk50w|TK 50 - Gewaesser|4.98903|12.4726
+#LayersUrlPart:     LAYERS=tk50g|TK 50 - Grundriss|4.98903|12.4726
+#LayersUrlPart:     LAYERS=TK25|TK 25||
+#LayersUrlPart:     LAYERS=tk25v|TK 25 - Vegetation|2.49451|4.98903
+#LayersUrlPart:     LAYERS=tk25i|TK 25 - Hoehenlinien|2.49451|4.98903
+#LayersUrlPart:     LAYERS=tk25w|TK 25 - Gewaesser|2.49451|4.98903
+#LayersUrlPart:     LAYERS=tk25g|TK 25 - Grundriss|2.49451|4.98903
+#LayersUrlPart:     LAYERS=TK10|TK 10||
+#LayersUrlPart:     LAYERS=tk10v|TK 10 - Vegetation|0.0503892|2.49451
+#LayersUrlPart:     LAYERS=tk10i|TK 10 - Hoehenlinien|0.0503892|2.49451
+#LayersUrlPart:     LAYERS=tk10w|TK 10 - Gewaesser|0.0503892|2.49451
+#LayersUrlPart:     LAYERS=tk10g|TK 10 - Grundriss|0.0503892|2.49451
+LayersUrlPart:	LAYERS=TK25
+#LayersUrlPart:   LAYERS=tk25,tk25i,tk25g,tk25w
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 51.8592 E 11.7651
+BoundingBoxButtomRightWGS84:   N 50.0294 E 15.1358
+MinScale:   2.49452
+MaxScale:   4.98903
+RecommendedScale:   2.5
+ImageFileExtension: .png
+#MinScale 2,49451 = 1,7638849367376546650931502697142 Praktisch aber 1,77
\ No newline at end of file

Added: branches/bugfix_1.0/res_noewe/webmapservices/de-sn_t50.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/de-sn_t50.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/de-sn_t50.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,45 @@
+TakenFromUrl:   http://www.landesvermessung.sachsen.de/inhalt/geo/basis/basis_dienste.html
+GetCapabilitiesUrl:   http://www.landesvermessung.sachsen.de/ias/basiskarte4/service/SRV4TKFREE/WMSFREE_TK/wmsservice?REQUEST=GetCapabilities
+Name:	de.Sachsen topo 50 SF 3,54..8,82
+MapType:   topo
+MainUrl:   http://www.landesvermessung.sachsen.de/ias/basiskarte4/service/SRV4TKFREE/WMSFREE_TK/wmsservice?
+ServiceTypeUrlPart:   SERVICE=WMS 
+VersionUrlPart:   VERSION=1.1.1 
+CoordinateReferenceSystemCacheWolf: 31468 
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:31468
+RequestUrlPart:   REQUEST=GetMap
+#LayersUrlPart:     LAYERS=MS|Topogr. Karten||
+#LayersUrlPart:     LAYERS=UEB|Uebersicht|62.3629|1247.26
+#LayersUrlPart:     LAYERS=TK100|TK 100||
+#LayersUrlPart:     LAYERS=tk100v|TK 100 - Vegetation|12.4726|62.3629
+#LayersUrlPart:     LAYERS=tk100i|TK 100 - Hoehenlinien|12.4726|62.3629
+#LayersUrlPart:     LAYERS=tk100w|TK 100 - Gewaesser|12.4726|62.3629
+#LayersUrlPart:     LAYERS=tk100g|TK 100 - Grundriss|12.4726|62.3629
+#LayersUrlPart:     LAYERS=tk100s|TK 100 - Schriften|12.4726|62.3629
+#LayersUrlPart:     LAYERS=TK50|TK 50||
+#LayersUrlPart:     LAYERS=tk50v|TK 50 - Vegetation|4.98903|12.4726
+#LayersUrlPart:     LAYERS=tk50i|TK 50 - Hoehenlinien|4.98903|12.4726
+#LayersUrlPart:     LAYERS=tk50w|TK 50 - Gewaesser|4.98903|12.4726
+#LayersUrlPart:     LAYERS=tk50g|TK 50 - Grundriss|4.98903|12.4726
+#LayersUrlPart:     LAYERS=TK25|TK 25||
+#LayersUrlPart:     LAYERS=tk25v|TK 25 - Vegetation|2.49451|4.98903
+#LayersUrlPart:     LAYERS=tk25i|TK 25 - Hoehenlinien|2.49451|4.98903
+#LayersUrlPart:     LAYERS=tk25w|TK 25 - Gewaesser|2.49451|4.98903
+#LayersUrlPart:     LAYERS=tk25g|TK 25 - Grundriss|2.49451|4.98903
+#LayersUrlPart:     LAYERS=TK10|TK 10||
+#LayersUrlPart:     LAYERS=tk10v|TK 10 - Vegetation|0.0503892|2.49451
+#LayersUrlPart:     LAYERS=tk10i|TK 10 - Hoehenlinien|0.0503892|2.49451
+#LayersUrlPart:     LAYERS=tk10w|TK 10 - Gewaesser|0.0503892|2.49451
+#LayersUrlPart:     LAYERS=tk10g|TK 10 - Grundriss|0.0503892|2.49451
+LayersUrlPart:	LAYERS=TK50
+#LayersUrlPart:   LAYERS=tk50,tk50i,tk50g,tk50w
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 51.8592 E 11.7651
+BoundingBoxButtomRightWGS84:   N 50.0294 E 15.1358
+MinScale:   4.9
+MaxScale:   13
+RecommendedScale:   5
+ImageFileExtension: .png
+#MinScale 4.98903 = 3.527776944543121195661544547872 Praktisch aber 3.53
+#MaxScale 12,4726 = 8,8194600390273326528419713907889
\ No newline at end of file

Modified: branches/bugfix_1.0/res_noewe/webmapservices/de-st_photo.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/de-st_photo.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/de-st_photo.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -1,7 +1,6 @@
-# please refer to readme_wms.txt for an explantion of this file format
 TakenFromUrl:	http://www.lvermgeo.sachsen-anhalt.de/de/geoservice/viewer/main.htm
 GetCapabilitiesUrl:	http://lsa-st317.sachsen-anhalt.de/geodatenportal/servlet/gtEntryPoint?REQUEST=GetCapabilities&VERSION=1.1.1&SERVICE=WMS
-Name:	de.st Luftbild
+Name:	de.Sachsen-Anhalt photo
 MapType:	photo
 MainUrl:	http://lsa-st317.sachsen-anhalt.de/geodatenportal/servlet/gtEntryPoint?
 ServiceTypeUrlPart:	SERVICE=WMS 

Modified: branches/bugfix_1.0/res_noewe/webmapservices/de-st_topo_10.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/de-st_topo_10.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/de-st_topo_10.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -1,9 +1,9 @@
-# please refer to readme_wms.txt for an explantion of this file format
 TakenFromUrl:	http://www.lvermgeo.sachsen-anhalt.de/de/geoservice/viewer/main.htm
 GetCapabilitiesUrl:	http://lsa-st317.sachsen-anhalt.de/geodatenportal/servlet/gtEntryPoint?REQUEST=GetCapabilities&VERSION=1.1.1&SERVICE=WMS
-Name:	de.st Topo 10
+Name:	de.Sachsen-Anhalt topo 10
 MapType:	topo
 MainUrl:	http://lsa-st317.sachsen-anhalt.de/geodatenportal/servlet/gtEntryPoint?
+#MainUrl:            http://geoportal.geodaten.sachsen-anhalt.de/geodatenportal/servlet/gtEntryPoint?
 ServiceTypeUrlPart:	SERVICE=WMS 
 VersionUrlPart:	VERSION=1.1.1 
 CoordinateReferenceSystemCacheWolf:   31468

Modified: branches/bugfix_1.0/res_noewe/webmapservices/de-st_topo_50.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/de-st_topo_50.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/de-st_topo_50.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -1,9 +1,9 @@
-# please refer to readme_wms.txt for an explantion of this file format
 TakenFromUrl:	http://www.lvermgeo.sachsen-anhalt.de/de/geoservice/viewer/main.htm
 GetCapabilitiesUrl:	http://lsa-st317.sachsen-anhalt.de/geodatenportal/servlet/gtEntryPoint?REQUEST=GetCapabilities&VERSION=1.1.1&SERVICE=WMS
-Name:	de.st Topo 50
+Name:	de.Sachsen-Anhalt topo 50
 MapType:	topo
 MainUrl:	http://lsa-st317.sachsen-anhalt.de/geodatenportal/servlet/gtEntryPoint?
+#MainUrl:            http://geoportal.geodaten.sachsen-anhalt.de/geodatenportal/servlet/gtEntryPoint?
 ServiceTypeUrlPart:	SERVICE=WMS 
 VersionUrlPart:	VERSION=1.1.1 
 CoordinateReferenceSystemCacheWolf:   31468

Added: branches/bugfix_1.0/res_noewe/webmapservices/eu_topo_osm.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/eu_topo_osm.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/eu_topo_osm.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,20 @@
+# de_topo_OSM.wms - Version 0.2
+TakenFromUrl: http://www.wheregroup.com/de/freier_wms_mit_openstreetmap_daten
+GetCapabilitiesUrl: http://osm.wheregroup.com/cgi-bin/mapserv?map=/data/umn/osm/osm_basic.map&REQUEST=GetCapabilities&SERVICE=WMS&VERSION=1.1.1
+Name: eu OpenStreetMap
+MainUrl:  http://osm.wheregroup.com/cgi-bin/osm_basic.xml?
+MapType:  topo
+ServiceTypeUrlPart:   SERVICE=WMS 
+VersionUrlPart:   VERSION=1.1.1 
+CoordinateReferenceSystemCacheWolf: 4326
+CoordinateReferenceSystemUrlPart: SRS=EPSG:4326
+RequestUrlPart: REQUEST=GetMap
+LayersUrlPart:  LAYERS=Landwirtschaft,Industriegebiet,Bauland,Gruenflaeche,unkultiviertes_Land,Park,Naherholungsgebiet,Wald,Wiese,Wasser,Fluesse,Baeche,Kanal,Insel,Kueste,Strand,Fussgaengerzone,Fussgaengerweg,Radweg,Wege,Wohnstrasse,Zufahrtswege,einfache_Strasse,Landstrasse,Bundesstrasse,Kraftfahrstrasse,Autobahn,Ortschaft,Weiler,Dorf,Stadt,Grossstadt,Bahn,Bahnhof,Gebaeude
+StylesUrlPart:  STYLES=
+ImageFormatUrlPart: FORMAT=image/png
+BoundingBoxTopLeftWGS84:  N 74.1 W 10.4
+BoundingBoxButtomRightWGS84:  N 35.7 E 43.0
+MinScale: 0.6
+MaxScale: 99.99
+RecommendedScale: 5
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/it-52_t10.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/it-52_t10.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/it-52_t10.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,293 @@
+TakenFromUrl:   http://www.rete.toscana.it/sett/territorio/carto/repertorio/geoscopio_wms/
+GetCapabilitiesUrl:      http://web.rete.toscana.it/sgrwms/com.rt.wms.RTmap?ServiceName=_rt_wms_topogr&service=WMS&request=GetCapabilities
+Name:   it.Toskana topo 10
+MapType: topo
+#MainUrl:   http://web.rete.toscana.it:80/sgrwms/com.rt.wms.RTmap/_rt_wms_topogr?
+#MainUrl:   http://web.rete.toscana.it:80/sgrwms/com.rt.wms.RTmap/_rt_wms?
+MainUrl:    http://web.rete.toscana.it/sgrwms/com.rt.wms.RTmap?
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.0
+CoordinateReferenceSystemCacheWolf:   3003
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:3003
+RequestUrlPart:   REQUEST=GetMap
+#LayersUrlPart:     LAYERS=_idita|ITALIA||
+#LayersUrlPart:     LAYERS=_idbati|BATIMETRICHE||
+#LayersUrlPart:     LAYERS=otf10k78|OFC 1:10.000 - 1978||
+#LayersUrlPart:     LAYERS=otf10k93|OFC 1:10.000 - 1993||
+#LayersUrlPart:     LAYERS=otf10k96|OFC 1:10.000 - 1996||
+#LayersUrlPart:     LAYERS=otf10k99|OFC 1:10.000 - 1999||
+#LayersUrlPart:     LAYERS=otf10k00|OFC 1:10.000 - 2000||
+#LayersUrlPart:     LAYERS=otf10k01|OFC 1:10.000 - 2001||
+#LayersUrlPart:     LAYERS=otf10k02|OFC 1:10.000 - 2002||
+#LayersUrlPart:     LAYERS=otf10k03|OFC 1:10.000 - 2003||
+#LayersUrlPart:     LAYERS=otf10k04|OFC 1:10.000 - 2004||
+#LayersUrlPart:     LAYERS=otf10k05|OFC 1:10.000 - 2005||
+#LayersUrlPart:     LAYERS=otf10k06|OFC 1:10.000 - 2006||
+#LayersUrlPart:     LAYERS=otf10k0306|OFC 1:10.000 - 03-06||
+#LayersUrlPart:     LAYERS=_idhills|HILLSHADE DA DTM CTR10k||
+#LayersUrlPart:     LAYERS=idhildtmlid05|HILLSHADE DA DTM RILIEVO LIDAR 2005||
+#LayersUrlPart:     LAYERS=idhildtmlid06|HILLSHADE DA DTM RILIEVO LIDAR 2006||
+#LayersUrlPart:     LAYERS=idhildtmlid07|HILLSHADE DA DTM RILIEVO LIDAR 2007||
+#LayersUrlPart:     LAYERS=idhildsmlid05|HILLSHADE DA DSM RILIEVO LIDAR 2005||
+#LayersUrlPart:     LAYERS=idhildsmlid06|HILLSHADE DA DSM RILIEVO LIDAR 2006||
+#LayersUrlPart:     LAYERS=idhildsmlid07|HILLSHADE DA DSM RILIEVO LIDAR 2007||
+#LayersUrlPart:     LAYERS=rst100k|MAPPA 1:100.000||
+#LayersUrlPart:     LAYERS=rst25k_igm|MAPPA 1:25.000||
+#LayersUrlPart:     LAYERS=idrst10k|CARTA TECNICA REGIONALE 10.000||
+#LayersUrlPart:     LAYERS=rstcatast|Mappa Catastale 1:5.000||
+#LayersUrlPart:     LAYERS=rst2k_liv2|C.T.R. 1:2.000 Liv2||
+#LayersUrlPart:     LAYERS=rst2k_liv3|C.T.R. 1:2.000 Liv3||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1987|C.T.R. 1:2.000 Liv3 - 1987||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1988|C.T.R. 1:2.000 Liv3 - 1988||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1989|C.T.R. 1:2.000 Liv3 - 1989||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1991|C.T.R. 1:2.000 Liv3 - 1991||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1992|C.T.R. 1:2.000 Liv3 - 1992||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1993|C.T.R. 1:2.000 Liv3 - 1993||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1994|C.T.R. 1:2.000 Liv3 - 1994||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1995|C.T.R. 1:2.000 Liv3 - 1995||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1996|C.T.R. 1:2.000 Liv3 - 1996||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1997|C.T.R. 1:2.000 Liv3 - 1997||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1998|C.T.R. 1:2.000 Liv3 - 1998||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1999|C.T.R. 1:2.000 Liv3 - 1999||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2000|C.T.R. 1:2.000 Liv3 - 2000||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2001|C.T.R. 1:2.000 Liv3 - 2001||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2002|C.T.R. 1:2.000 Liv3 - 2002||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2003|C.T.R. 1:2.000 Liv3 - 2003||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2004|C.T.R. 1:2.000 Liv3 - 2004||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2005|C.T.R. 1:2.000 Liv3 - 2005||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2006|C.T.R. 1:2.000 Liv3 - 2006||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2007|C.T.R. 1:2.000 Liv3 - 2007||
+#LayersUrlPart:     LAYERS=idbfmc|FOGLI CATASTALI|0|NaN
+#LayersUrlPart:     LAYERS=idquotf10k78|QUADRO DI UNIONE - OFC 1:10.000 (78)||
+#LayersUrlPart:     LAYERS=idquotf10k93|QUADRO DI UNIONE - OFC 1:10.000 (93)||
+#LayersUrlPart:     LAYERS=idquotf10k96|QUADRO DI UNIONE - OFC 1:10.000 (96)||
+#LayersUrlPart:     LAYERS=idquotf10k99|QUADRO DI UNIONE - OFC 1:10.000 (99)||
+#LayersUrlPart:     LAYERS=idquotf10k00|QUADRO DI UNIONE - OFC 1:10.000 (00)||
+#LayersUrlPart:     LAYERS=idquotf10k01|QUADRO DI UNIONE - OFC 1:10.000 (01)||
+#LayersUrlPart:     LAYERS=idquotf10k02|QUADRO DI UNIONE - OFC 1:10.000 (02)||
+#LayersUrlPart:     LAYERS=idquotf10k03|QUADRO DI UNIONE - OFC 1:10.000 (03)||
+#LayersUrlPart:     LAYERS=idquotf10k04|QUADRO DI UNIONE - OFC 1:10.000 (04)||
+#LayersUrlPart:     LAYERS=idquotf10k05|QUADRO DI UNIONE - OFC 1:10.000 (05)||
+#LayersUrlPart:     LAYERS=idquotf10k06|QUADRO DI UNIONE - OFC 1:10.000 (06)||
+#LayersUrlPart:     LAYERS=idquctr10k|QUADRO DI UNIONE - CTR 1:10.000||
+#LayersUrlPart:     LAYERS=idqumc5k|QUADRO DI UNIONE - MC 1:5.000||
+#LayersUrlPart:     LAYERS=idquctr2kliv2|QUADRO DI UNIONE - CTR 1:2.000 Liv.2||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1987|QU - CTR 1:2.000 Liv.3 - 1987||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1988|QU - CTR 1:2.000 Liv.3 - 1988||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1989|QU - CTR 1:2.000 Liv.3 - 1989||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1991|QU - CTR 1:2.000 Liv.3 - 1991||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1992|QU - CTR 1:2.000 Liv.3 - 1992||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1993|QU - CTR 1:2.000 Liv.3 - 1993||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1994|QU - CTR 1:2.000 Liv.3 - 1994||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1995|QU - CTR 1:2.000 Liv.3 - 1995||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1996|QU - CTR 1:2.000 Liv.3 - 1996||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1997|QU - CTR 1:2.000 Liv.3 - 1997||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1998|QU - CTR 1:2.000 Liv.3 - 1998||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1999|QU - CTR 1:2.000 Liv.3 - 1999||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2000|QU - CTR 1:2.000 Liv.3 - 2000||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2001|QU - CTR 1:2.000 Liv.3 - 2001||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2002|QU - CTR 1:2.000 Liv.3 - 2002||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2003|QU - CTR 1:2.000 Liv.3 - 2003||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2004|QU - CTR 1:2.000 Liv.3 - 2004||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2005|QU - CTR 1:2.000 Liv.3 - 2005||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2006|QU - CTR 1:2.000 Liv.3 - 2006||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2007|QU - CTR 1:2.000 Liv.3 - 2007||
+#LayersUrlPart:     LAYERS=idqudtmctr10k|QUADRO DI UNIONE - DTM da CTR10K||
+#LayersUrlPart:     LAYERS=idqulidar05|QUADRO DI UNIONE - LIDAR 2005||
+#LayersUrlPart:     LAYERS=idqulidar06|QUADRO DI UNIONE - LIDAR 2006||
+#LayersUrlPart:     LAYERS=idqulidar07|QUADRO DI UNIONE - LIDAR 2007||
+#LayersUrlPart:     LAYERS=idisoipse|CURVE DI LIVELLO|0|NaN
+#LayersUrlPart:     LAYERS=idpuntiquot|PUNTI QUOTATI|0|NaN
+#LayersUrlPart:     LAYERS=idcorsi|IDROGRAFIA - CORSI|0|NaN
+#LayersUrlPart:     LAYERS=idareabagnata|IDROGRAFIA - AREA BAGNATA|0|NaN
+#LayersUrlPart:     LAYERS=idinfrferrovia|LINEE FERR.|0|NaN
+#LayersUrlPart:     LAYERS=idstradeestesa|STRADE|0|NaN
+#LayersUrlPart:     LAYERS=_idstradegallerie|STRADE GALLERIE|0|NaN
+#LayersUrlPart:     LAYERS=idedifici10k|EDIFICATO 1:10.000|0|NaN
+#LayersUrlPart:     LAYERS=idedifici2k|EDIFICATO 1:2.000|0|NaN
+#LayersUrlPart:     LAYERS=idterritmontani|TERRITORI MONTANI||
+#LayersUrlPart:     LAYERS=idambturist|AMBITI TURISTICI||
+#LayersUrlPart:     LAYERS=idambterrcaccia|AMBITI TERRITORIALI CACCIA||
+#LayersUrlPart:     LAYERS=idasl|ASL||
+#LayersUrlPart:     LAYERS=idzss|ZONE SOCIO SANITARIE||
+#LayersUrlPart:     LAYERS=idatorif|ATO RIFIUTI||
+#LayersUrlPart:     LAYERS=idatorisidr|ATO RISORSE IDRICHE||
+#LayersUrlPart:     LAYERS=iddisind95|DISTRETTI INDUSTRIALI 95||
+#LayersUrlPart:     LAYERS=iddisind99|DISTRETTI INDUSTRIALI 99||
+#LayersUrlPart:     LAYERS=iddisscol|DISTRETTI SCOLASTICI||
+#LayersUrlPart:     LAYERS=idsisecoloc|SISTEMI ECONOMICI LOCALI||
+#LayersUrlPart:     LAYERS=idsisproloc|SISTEMI PRODUTTIVI LOCALI||
+#LayersUrlPart:     LAYERS=idsisterloc|SISTEMI TERRITORIALI LOCALI||
+#LayersUrlPart:     LAYERS=idcommont|COMUNITA MONTANE (LR.82/2000)||
+#LayersUrlPart:     LAYERS=idcommont2008|COMUNITA MONTANE (LR.37/2008)||
+#LayersUrlPart:     LAYERS=idareametrop|AREE METROPOLITANE||
+#LayersUrlPart:     LAYERS=idcircondari|CIRCONDARI||
+#LayersUrlPart:     LAYERS=idcentroamm|SEDI AMMINISTRATIVE||
+#LayersUrlPart:     LAYERS=idptcst|PTC SISTEMI TERRITORIALI||
+#LayersUrlPart:     LAYERS=idptcsst|PTC SOTTOSISTEMI TERRITORIALI||
+#LayersUrlPart:     LAYERS=idptcstl|PTC SISTEMI TERRITORIALI LOCALI||
+#LayersUrlPart:     LAYERS=idptcsf_a|PTC SISTEMI FUNZIONALI (A)||
+#LayersUrlPart:     LAYERS=idptcsf_l|PTC SISTEMI FUNZIONALI (L)||
+#LayersUrlPart:     LAYERS=idptcsf_p|PTC SISTEMI FUNZIONALI (P)||
+#LayersUrlPart:     LAYERS=idptcssf_l|PTC SOTTOSISTEMI FUNZIONALI (L)||
+#LayersUrlPart:     LAYERS=idptcinvstrutt_a|PTC INVARIANTI STRUTTURALI (A)||
+#LayersUrlPart:     LAYERS=idptcinvstrutt_l|PTC INVARIANTI STRUTTURALI (L)||
+#LayersUrlPart:     LAYERS=idptcinvstrutt_p|PTC INVARIANTI STRUTTURALI (P)||
+#LayersUrlPart:     LAYERS=idptcintgeomorf|PTC INTEGRITA` GEOMORFOLOGICA||
+#LayersUrlPart:     LAYERS=idptcintidraulic|PTC INTEGRITA` IDRAULICA||
+#LayersUrlPart:     LAYERS=idptcintacquif|PTC INTEGRITA` ACQUIFERI||
+#LayersUrlPart:     LAYERS=idptcrisinsed|PTC RISORSE INSEDIAMENTI||
+#LayersUrlPart:     LAYERS=idptcrismobil_l|PTC RISORSE MOBILITA (L)||
+#LayersUrlPart:     LAYERS=idptcrisrur_epf_a|PTC RISORSE RURALI-INSEDIAMENTI E AREE AGRICOLE (A)||
+#LayersUrlPart:     LAYERS=idptcrisrur_cea_a|PTC RISORSE RURALI-CARATT.ECONOMICO-AGRARIA (A)||
+#LayersUrlPart:     LAYERS=idptcrisrur_raa_a|PTC RISORSE RURALI-RISORSE AGRO-AMBIENTALI (A)||
+#LayersUrlPart:     LAYERS=idptcrisrur_dtr_a|PTC RISORSE RURALI-DEGRADO DEL TERRITORIO (A)||
+#LayersUrlPart:     LAYERS=idptcrisrur_epf_p|PTC RISORSE RURALI-INSEDIAMENTI E AREE AGRICOLE (P)||
+#LayersUrlPart:     LAYERS=idptcrisrur_raa_p|PTC RISORSE RURALI-RISORSE AGRO-AMBIENTALI (P)||
+#LayersUrlPart:     LAYERS=idst|PS SISTEMI TERRITORIALI||
+#LayersUrlPart:     LAYERS=idsst|PS SOTTOSISTEMI TERRITORIALI||
+#LayersUrlPart:     LAYERS=idasst|PS AMBITI DI SOTTOSISTEMA TERRITORIALE||
+#LayersUrlPart:     LAYERS=idsf_a|PS SISTEMI FUNZIONALI (A)||
+#LayersUrlPart:     LAYERS=idsf_l|PS SISTEMI FUNZIONALI (L)||
+#LayersUrlPart:     LAYERS=idsf_p|PS SISTEMI FUNZIONALI (P)||
+#LayersUrlPart:     LAYERS=idssf_a|PS SOTTOSISTEMI FUNZIONALI (A)||
+#LayersUrlPart:     LAYERS=idssf_l|PS SOTTOSISTEMI FUNZIONALI (L)||
+#LayersUrlPart:     LAYERS=idssf_p|PS SOTTOSISTEMI FUNZIONALI (P)||
+#LayersUrlPart:     LAYERS=idutoe|PS UTOE||
+#LayersUrlPart:     LAYERS=idinvstrutt_a|PS INVARIANTI STRUTTURALI (A)||
+#LayersUrlPart:     LAYERS=idinvstrutt_l|PS INVARIANTI STRUTTURALI (L)||
+#LayersUrlPart:     LAYERS=idinvstrutt_p|PS INVARIANTI STRUTTURALI (P)||
+#LayersUrlPart:     LAYERS=idpericgeomorf|PS PERICOLOSITA GEOMORFOLOGICA||
+#LayersUrlPart:     LAYERS=idpericidraulic|PS PERICOLOSITA IDRAULICA||
+#LayersUrlPart:     LAYERS=idregurb_asa_a|RU - AMBITI A.S.A (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_asa_p|RU - AMBITI A.S.A (P)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_desuso_a|RU - DEST.USO PREV. (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_pa_a|RU - AMBITI PIANI ATTUATIVI (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ca_a|RU - CENTRI ABITATI (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_ferr_a|RU - FERROVIA (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_strloc_a|RU - STRADA LOCALE (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_strurb_a|RU - STRADA URBANA (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_extraurb_a|RU - STRADA EXTRAURBANA (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_autostr_a|RU - AUTOSTRADA (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_pcp_l|RU - PISTA CICLAB. E PEDON. (L)|0|NaN
+#LayersUrlPart:     LAYERS=idpccazon|ZONIZZAZIONE ACUSTICA||
+#LayersUrlPart:     LAYERS=idpccaspt|AREE SPETTACOLO TEMPORANEO||
+#LayersUrlPart:     LAYERS=idquptc|QUADRO DI UNIONE - PTC||
+#LayersUrlPart:     LAYERS=idqups|QUADRO DI UNIONE - PS||
+#LayersUrlPart:     LAYERS=idquru|QUADRO DI UNIONE - RU||
+#LayersUrlPart:     LAYERS=idqupcca|QUADRO DI UNIONE - PCCA||
+#LayersUrlPart:     LAYERS=idzrcimiter|Z.R. CIMITERIALE (DPR 285/90)||
+#LayersUrlPart:     LAYERS=idzrstradal|Z.R. STRADALE (DPR 495/92)||
+#LayersUrlPart:     LAYERS=idzraeroport|Z.R. AEROPORTUALE (DM 31/10/97)||
+#LayersUrlPart:     LAYERS=idzpv0000000001|PROD. VINI - VINO NOBILE DI MONTEPULCIANO||
+#LayersUrlPart:     LAYERS=idzpv0000000002|PROD. VINI - ROSSO DI MONTEPULCIANO||
+#LayersUrlPart:     LAYERS=idzpv0000000003|PROD. VINI - VIN SANTO DI MONTEPULCIANO||
+#LayersUrlPart:     LAYERS=idzpv0000000004|PROD. VINI - BRUNELLO DI MONTALCINO||
+#LayersUrlPart:     LAYERS=idzpv0000000005|PROD. VINI - MOSCADELLO DI MONTALCINO||
+#LayersUrlPart:     LAYERS=idzpv0000000006|PROD. VINI - ROSSO DI MONTALCINO||
+#LayersUrlPart:     LAYERS=idzpv0000000007|PROD. VINI - SANT`ANTIMO||
+#LayersUrlPart:     LAYERS=idzpv0000000008|PROD. VINI - VALDICHIANA||
+#LayersUrlPart:     LAYERS=idzpv0000000009|PROD. VINI - VAL D`ARBIA||
+#LayersUrlPart:     LAYERS=idzpv0000000011|PROD. VINI - VIN SANTO DEL CHIANTI CLASSICO||
+#LayersUrlPart:     LAYERS=idzpv0000000012|PROD. VINI - TERRE DI CASOLE||
+#LayersUrlPart:     LAYERS=idzpv0000000013|PROD. VINI - VERNACCIA DI SAN GIMIGNANO||
+#LayersUrlPart:     LAYERS=idzpv0000000014|PROD. VINI - SAN GIMIGNANO||
+#LayersUrlPart:     LAYERS=idzpv0000000015|PROD. VINI - BARCO REALE DI CARMIGNANO||
+#LayersUrlPart:     LAYERS=idzpv0000000016|PROD. VINI - CARMIGNANO||
+#LayersUrlPart:     LAYERS=idzpv0000000017|PROD. VINI - BIANCO PISANO DI SAN TORPE`||
+#LayersUrlPart:     LAYERS=idzpv0000000019|PROD. VINI - MONTESCUDAIO||
+#LayersUrlPart:     LAYERS=idzpv0000000020|PROD. VINI - CANDIA DEI COLLI APUANI||
+#LayersUrlPart:     LAYERS=idzpv0000000021|PROD. VINI - COLLI DI LUNI||
+#LayersUrlPart:     LAYERS=idzpv0000000022|PROD. VINI - COLLINE LUCCHESI||
+#LayersUrlPart:     LAYERS=idzpv0000000023|PROD. VINI - MONTECARLO||
+#LayersUrlPart:     LAYERS=idzpv0000000024|PROD. VINI - TERRATICO DI BIBBONA||
+#LayersUrlPart:     LAYERS=idzpv0000000025|PROD. VINI - BOLGHERI||
+#LayersUrlPart:     LAYERS=idzpv0000000027|PROD. VINI - ELBA||
+#LayersUrlPart:     LAYERS=idzpv0000000028|PROD. VINI - POMINO||
+#LayersUrlPart:     LAYERS=idzpv0000000029|PROD. VINI - ALTA VALLE DELLA GREVE||
+#LayersUrlPart:     LAYERS=idzpv0000000030|PROD. VINI - BIANCO DELL`EMPOLESE||
+#LayersUrlPart:     LAYERS=idzpv0000000031|PROD. VINI - CORTONA||
+#LayersUrlPart:     LAYERS=idzpv0000000037|PROD. VINI - PIETRAVIVA||
+#LayersUrlPart:     LAYERS=idzpv0000000045|PROD. VINI - ANSONICA COSTA DELL`ARGENTARIO||
+#LayersUrlPart:     LAYERS=idzpv0000000040|PROD. VINI - CAPALBIO||
+#LayersUrlPart:     LAYERS=idzpv0000000038|PROD. VINI - MONTEREGIO DI MASSA MARITTIMA||
+#LayersUrlPart:     LAYERS=idzpv0000000039|PROD. VINI - MORELLINO DI SCANSANO||
+#LayersUrlPart:     LAYERS=idzpv0000000041|PROD. VINI - PARRINA||
+#LayersUrlPart:     LAYERS=idzpv0000000042|PROD. VINI - SOVANA||
+#LayersUrlPart:     LAYERS=idzpv0000000043|PROD. VINI - BIANCO DI PITIGLIANO||
+#LayersUrlPart:     LAYERS=idzpv0000000010|PROD. VINI - ORCIA||
+#LayersUrlPart:     LAYERS=idzpv0000000018|PROD. VINI - MONTECASTELLI||
+#LayersUrlPart:     LAYERS=idzpv0000000026|PROD. VINI - VAL DI CORNIA||
+#LayersUrlPart:     LAYERS=idzpv0000000033|PROD. VINI - COLLI DELLA TOSCANA CENTRALE||
+#LayersUrlPart:     LAYERS=idzpv0000000035|PROD. VINI - COLLI DELL`ETRURIA CENTRALE||
+#LayersUrlPart:     LAYERS=idzpv0000000036|PROD. VINI - VIN SANTO DEL CHIANTI||
+#LayersUrlPart:     LAYERS=idzpv0000000044|PROD. VINI - MAREMMA TOSCANA||
+#LayersUrlPart:     LAYERS=idzpv0000000046|PROD. VINI - MONTECUCCO||
+#LayersUrlPart:     LAYERS=idzpv0000000034|PROD. VINI - CHIANTI||
+#LayersUrlPart:     LAYERS=idzpv0000000047|PROD. VINI - BIANCO DELLA VAL DI NIEVOLE||
+#LayersUrlPart:     LAYERS=idzpv0000000032|PROD. VINI - TOSCANO O TOSCANA||
+#LayersUrlPart:     LAYERS=idzpv0000000048|PROD. VINI - VAL DI MAGRA||
+#LayersUrlPart:     LAYERS=idszpv0000000001|SOTTOZONA PROD. VINI - CHIANTI COLLI SENESI||
+#LayersUrlPart:     LAYERS=idszpv0000000002|SOTTOZONA PROD. VINI - CHIANTI CLASSICO||
+#LayersUrlPart:     LAYERS=idszpv0000000003|SOTTOZONA PROD. VINI - CHIANTI COLLINE PISANE||
+#LayersUrlPart:     LAYERS=idszpv0000000004|SOTTOZONA PROD. VINI - BOLGHERI: BOLGHERI SASSICAIA||
+#LayersUrlPart:     LAYERS=idszpv0000000005|SOTTOZONA PROD. VINI - VAL DI CORNIA: VAL DI CORNIA SUVERETO||
+#LayersUrlPart:     LAYERS=idszpv0000000006|SOTTOZONA PROD. VINI - CHIANTI RUFINA||
+#LayersUrlPart:     LAYERS=idszpv0000000007|SOTTOZONA PROD. VINI - CHIANTI COLLI FIORENTINI||
+#LayersUrlPart:     LAYERS=idszpv0000000008|SOTTOZONA PROD. VINI - CHIANTI MONTESPERTOLI||
+#LayersUrlPart:     LAYERS=idszpv0000000009|SOTTOZONA PROD. VINI - CHIANTI COLLI ARETINI||
+#LayersUrlPart:     LAYERS=idszpv0000000010|SOTTOZONA PROD. VINI - CHIANTI MONTALBANO||
+#LayersUrlPart:     LAYERS=idcentriabit|CENTRI ABITATI||
+#LayersUrlPart:     LAYERS=idsezcens_2001_cab|ISTAT 2001 - CENTRI ABITATI|0|NaN
+#LayersUrlPart:     LAYERS=idsezcens_2001_nab|ISTAT 2001 - NUCLEI ABITATI|0|NaN
+#LayersUrlPart:     LAYERS=idsezcens_2001_lpr|ISTAT 2001 - LOC. PROD.|0|NaN
+#LayersUrlPart:     LAYERS=idsezcens_2001_csp|ISTAT 2001 - CASE SPARSE|0|NaN
+#LayersUrlPart:     LAYERS=idpartoscoem|PARCO APPENNINO TOSCO-EMILIANO|0|NaN
+#LayersUrlPart:     LAYERS=idparforcas|PARCO DELLE FORESTE CASENTINESI|0|NaN
+#LayersUrlPart:     LAYERS=idpararctos|PARCO ARCIPELAGO TOSCANO|0|NaN
+#LayersUrlPart:     LAYERS=idparreg|PARCO REGIONALE|0|NaN
+#LayersUrlPart:     LAYERS=idparprov|PARCO PROVINCIALE|0|NaN
+#LayersUrlPart:     LAYERS=idrisnatprov|RISERVA NATURALE PROVINCIALE|0|NaN
+#LayersUrlPart:     LAYERS=idrisnatstat|RISERVA NATURALE STATALE|0|NaN
+#LayersUrlPart:     LAYERS=idanpil|AREA NATURALE PROTETTA DI INTERESSE LOCALE|0|NaN
+#LayersUrlPart:     LAYERS=idsir|SITI DI IMPORTANZA REGIONALE||
+#LayersUrlPart:     LAYERS=idramsar|ZONE UMIDE (RAMSAR)||
+#LayersUrlPart:     LAYERS=idmonum_a|VINC MONUMENTALE (A)||
+#LayersUrlPart:     LAYERS=idarch_a|VINC ARCHEOLOGICO (A)||
+#LayersUrlPart:     LAYERS=ididrogeol|VINC IDROGEOLOGICO||
+#LayersUrlPart:     LAYERS=idpae1_a|D.Lgls42/04,art.134 (A)||
+#LayersUrlPart:     LAYERS=idpae2m|D.Lgls42/04,art.142 - lett.m ZONE ARCHEOL.||
+#LayersUrlPart:     LAYERS=idpae2i|D.Lgls42/04,art.142 - lett.i ZONE UMIDE||
+#LayersUrlPart:     LAYERS=idpae2h|D.Lgls42/04,art.142 - lett.h USI CIVICI||
+#LayersUrlPart:     LAYERS=idpae2g|D.Lgls42/04,art.142 - lett.g BOSCHI||
+#LayersUrlPart:     LAYERS=idpae2f|D.Lgls42/04,art.142 - lett.f AREE PROTETTE||
+#LayersUrlPart:     LAYERS=idpae2e|D.Lgls42/04,art.142 - lett.e CIRCHI GLACIALI||
+#LayersUrlPart:     LAYERS=idpae2d|D.Lgls42/04,art.142 - lett.d MONTAGNE||
+#LayersUrlPart:     LAYERS=idpae2c|D.Lgls42/04,art.142 - lett.c FIUMI||
+#LayersUrlPart:     LAYERS=idpae2b|D.Lgls42/04,art.142 - lett.b LAGHI||
+#LayersUrlPart:     LAYERS=idpae2a|D.Lgls42/04,art.142 - lett.a COSTE||
+#LayersUrlPart:     LAYERS=idift8593|IFT 400m 1985-1993|0|NaN
+#LayersUrlPart:     LAYERS=idarprod|AREE PRODUTTIVE||
+#LayersUrlPart:     LAYERS=idsentcai|SENTIERI CAI - 2005||
+#LayersUrlPart:     LAYERS=idrifcai|RIFUGI CAI - 2005||
+#LayersUrlPart:     LAYERS=idgrotte|GROTTE||
+#LayersUrlPart:     LAYERS=_idreg|REGIONE||
+#LayersUrlPart:     LAYERS=idprov|PROVINCE||
+#LayersUrlPart:     LAYERS=idcomuni|COMUNI||
+#LayersUrlPart:     LAYERS=idcomuniline|COMUNI LINEARI||
+#LayersUrlPart:     LAYERS=idtoponctr10k|TOPONOMASTICA|0|NaN
+#LayersUrlPart:     LAYERS=_idlocabit|LOCALITA ABITATE||
+#LayersUrlPart:     LAYERS=copyright|theCopyright||
+LayersUrlPart:   LAYERS=otf10k0306,idisoipse,idtoponctr10k,idedifici10k,idareabagnata,idcorsi,idinfrferrovia,_idreg,idstradeestesa
+#H?henlinien,Namen,Geb?ude,Wasser,?Wasserwege,Eisenbahn,Regionen,Strassen+Wege mit Namen,
+#vorher : idisoipse,idtoponctr10k,_idbati,idedifici10k,idedifici2k,idareabagnata,idcorsi,idinfrferrovia,_idreg,idstradeestesa,_idstradegallerie
+StylesUrlPart:   STYLES=Default,Default,Default,Default,Default,Default,Default,Default
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 44.500805 E 9.642548
+BoundingBoxButtomRightWGS84:   N 42.168745 E 12.462359
+MinScale:   0
+MaxScale:   70 
+# maxscale 14.14214
+#H?henlinien nur bei Scale unter 4.0
+RecommendedScale:   1
+ImageFileExtension: .png
\ No newline at end of file

Added: branches/bugfix_1.0/res_noewe/webmapservices/it-52_t10bw.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/it-52_t10bw.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/it-52_t10bw.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,291 @@
+TakenFromUrl:   http://www.rete.toscana.it/sett/territorio/carto/repertorio/geoscopio_wms/
+GetCapabilitiesUrl:      http://web.rete.toscana.it/sgrwms/com.rt.wms.RTmap?ServiceName=_rt_wms_cartografia&service=WMS&request=GetCapabilities
+Name:   it.Toskana topo 10 black/white
+#MainUrl:   http://web.rete.toscana.it:80/sgrwms/com.rt.wms.RTmap/_rt_wms_cartografia?
+MainUrl:   http://web.rete.toscana.it/sgrwms/com.rt.wms.RTmap?
+MapType: topo
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.0
+CoordinateReferenceSystemCacheWolf:   3003
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:3003
+RequestUrlPart:   REQUEST=GetMap
+#LayersUrlPart:     LAYERS=_idita|ITALIA||
+#LayersUrlPart:     LAYERS=_idbati|BATIMETRICHE||
+#LayersUrlPart:     LAYERS=otf10k78|OFC 1:10.000 - 1978||
+#LayersUrlPart:     LAYERS=otf10k93|OFC 1:10.000 - 1993||
+#LayersUrlPart:     LAYERS=otf10k96|OFC 1:10.000 - 1996||
+#LayersUrlPart:     LAYERS=otf10k99|OFC 1:10.000 - 1999||
+#LayersUrlPart:     LAYERS=otf10k00|OFC 1:10.000 - 2000||
+#LayersUrlPart:     LAYERS=otf10k01|OFC 1:10.000 - 2001||
+#LayersUrlPart:     LAYERS=otf10k02|OFC 1:10.000 - 2002||
+#LayersUrlPart:     LAYERS=otf10k03|OFC 1:10.000 - 2003||
+#LayersUrlPart:     LAYERS=otf10k04|OFC 1:10.000 - 2004||
+#LayersUrlPart:     LAYERS=otf10k05|OFC 1:10.000 - 2005||
+#LayersUrlPart:     LAYERS=otf10k06|OFC 1:10.000 - 2006||
+#LayersUrlPart:     LAYERS=otf10k0306|OFC 1:10.000 - 03-06||
+#LayersUrlPart:     LAYERS=_idhills|HILLSHADE DA DTM CTR10k||
+#LayersUrlPart:     LAYERS=idhildtmlid05|HILLSHADE DA DTM RILIEVO LIDAR 2005||
+#LayersUrlPart:     LAYERS=idhildtmlid06|HILLSHADE DA DTM RILIEVO LIDAR 2006||
+#LayersUrlPart:     LAYERS=idhildtmlid07|HILLSHADE DA DTM RILIEVO LIDAR 2007||
+#LayersUrlPart:     LAYERS=idhildsmlid05|HILLSHADE DA DSM RILIEVO LIDAR 2005||
+#LayersUrlPart:     LAYERS=idhildsmlid06|HILLSHADE DA DSM RILIEVO LIDAR 2006||
+#LayersUrlPart:     LAYERS=idhildsmlid07|HILLSHADE DA DSM RILIEVO LIDAR 2007||
+#LayersUrlPart:     LAYERS=rst100k|MAPPA 1:100.000||
+#LayersUrlPart:     LAYERS=rst25k_igm|MAPPA 1:25.000||
+#LayersUrlPart:     LAYERS=idrst10k|CARTA TECNICA REGIONALE 10.000||
+#LayersUrlPart:     LAYERS=rstcatast|Mappa Catastale 1:5.000||
+#LayersUrlPart:     LAYERS=rst2k_liv2|C.T.R. 1:2.000 Liv2||
+#LayersUrlPart:     LAYERS=rst2k_liv3|C.T.R. 1:2.000 Liv3||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1987|C.T.R. 1:2.000 Liv3 - 1987||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1988|C.T.R. 1:2.000 Liv3 - 1988||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1989|C.T.R. 1:2.000 Liv3 - 1989||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1991|C.T.R. 1:2.000 Liv3 - 1991||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1992|C.T.R. 1:2.000 Liv3 - 1992||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1993|C.T.R. 1:2.000 Liv3 - 1993||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1994|C.T.R. 1:2.000 Liv3 - 1994||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1995|C.T.R. 1:2.000 Liv3 - 1995||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1996|C.T.R. 1:2.000 Liv3 - 1996||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1997|C.T.R. 1:2.000 Liv3 - 1997||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1998|C.T.R. 1:2.000 Liv3 - 1998||
+#LayersUrlPart:     LAYERS=rst2k_liv3_1999|C.T.R. 1:2.000 Liv3 - 1999||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2000|C.T.R. 1:2.000 Liv3 - 2000||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2001|C.T.R. 1:2.000 Liv3 - 2001||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2002|C.T.R. 1:2.000 Liv3 - 2002||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2003|C.T.R. 1:2.000 Liv3 - 2003||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2004|C.T.R. 1:2.000 Liv3 - 2004||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2005|C.T.R. 1:2.000 Liv3 - 2005||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2006|C.T.R. 1:2.000 Liv3 - 2006||
+#LayersUrlPart:     LAYERS=rst2k_liv3_2007|C.T.R. 1:2.000 Liv3 - 2007||
+#LayersUrlPart:     LAYERS=idbfmc|FOGLI CATASTALI|0|NaN
+#LayersUrlPart:     LAYERS=idquotf10k78|QUADRO DI UNIONE - OFC 1:10.000 (78)||
+#LayersUrlPart:     LAYERS=idquotf10k93|QUADRO DI UNIONE - OFC 1:10.000 (93)||
+#LayersUrlPart:     LAYERS=idquotf10k96|QUADRO DI UNIONE - OFC 1:10.000 (96)||
+#LayersUrlPart:     LAYERS=idquotf10k99|QUADRO DI UNIONE - OFC 1:10.000 (99)||
+#LayersUrlPart:     LAYERS=idquotf10k00|QUADRO DI UNIONE - OFC 1:10.000 (00)||
+#LayersUrlPart:     LAYERS=idquotf10k01|QUADRO DI UNIONE - OFC 1:10.000 (01)||
+#LayersUrlPart:     LAYERS=idquotf10k02|QUADRO DI UNIONE - OFC 1:10.000 (02)||
+#LayersUrlPart:     LAYERS=idquotf10k03|QUADRO DI UNIONE - OFC 1:10.000 (03)||
+#LayersUrlPart:     LAYERS=idquotf10k04|QUADRO DI UNIONE - OFC 1:10.000 (04)||
+#LayersUrlPart:     LAYERS=idquotf10k05|QUADRO DI UNIONE - OFC 1:10.000 (05)||
+#LayersUrlPart:     LAYERS=idquotf10k06|QUADRO DI UNIONE - OFC 1:10.000 (06)||
+#LayersUrlPart:     LAYERS=idquctr10k|QUADRO DI UNIONE - CTR 1:10.000||
+#LayersUrlPart:     LAYERS=idqumc5k|QUADRO DI UNIONE - MC 1:5.000||
+#LayersUrlPart:     LAYERS=idquctr2kliv2|QUADRO DI UNIONE - CTR 1:2.000 Liv.2||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1987|QU - CTR 1:2.000 Liv.3 - 1987||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1988|QU - CTR 1:2.000 Liv.3 - 1988||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1989|QU - CTR 1:2.000 Liv.3 - 1989||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1991|QU - CTR 1:2.000 Liv.3 - 1991||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1992|QU - CTR 1:2.000 Liv.3 - 1992||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1993|QU - CTR 1:2.000 Liv.3 - 1993||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1994|QU - CTR 1:2.000 Liv.3 - 1994||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1995|QU - CTR 1:2.000 Liv.3 - 1995||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1996|QU - CTR 1:2.000 Liv.3 - 1996||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1997|QU - CTR 1:2.000 Liv.3 - 1997||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1998|QU - CTR 1:2.000 Liv.3 - 1998||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_1999|QU - CTR 1:2.000 Liv.3 - 1999||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2000|QU - CTR 1:2.000 Liv.3 - 2000||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2001|QU - CTR 1:2.000 Liv.3 - 2001||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2002|QU - CTR 1:2.000 Liv.3 - 2002||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2003|QU - CTR 1:2.000 Liv.3 - 2003||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2004|QU - CTR 1:2.000 Liv.3 - 2004||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2005|QU - CTR 1:2.000 Liv.3 - 2005||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2006|QU - CTR 1:2.000 Liv.3 - 2006||
+#LayersUrlPart:     LAYERS=idquctr2kliv3_2007|QU - CTR 1:2.000 Liv.3 - 2007||
+#LayersUrlPart:     LAYERS=idqudtmctr10k|QUADRO DI UNIONE - DTM da CTR10K||
+#LayersUrlPart:     LAYERS=idqulidar05|QUADRO DI UNIONE - LIDAR 2005||
+#LayersUrlPart:     LAYERS=idqulidar06|QUADRO DI UNIONE - LIDAR 2006||
+#LayersUrlPart:     LAYERS=idqulidar07|QUADRO DI UNIONE - LIDAR 2007||
+#LayersUrlPart:     LAYERS=idisoipse|CURVE DI LIVELLO|0|NaN
+#LayersUrlPart:     LAYERS=idpuntiquot|PUNTI QUOTATI|0|NaN
+#LayersUrlPart:     LAYERS=idcorsi|IDROGRAFIA - CORSI|0|NaN
+#LayersUrlPart:     LAYERS=idareabagnata|IDROGRAFIA - AREA BAGNATA|0|NaN
+#LayersUrlPart:     LAYERS=idinfrferrovia|LINEE FERR.|0|NaN
+#LayersUrlPart:     LAYERS=idstradeestesa|STRADE|0|NaN
+#LayersUrlPart:     LAYERS=_idstradegallerie|STRADE GALLERIE|0|NaN
+#LayersUrlPart:     LAYERS=idedifici10k|EDIFICATO 1:10.000|0|NaN
+#LayersUrlPart:     LAYERS=idedifici2k|EDIFICATO 1:2.000|0|NaN
+#LayersUrlPart:     LAYERS=idterritmontani|TERRITORI MONTANI||
+#LayersUrlPart:     LAYERS=idambturist|AMBITI TURISTICI||
+#LayersUrlPart:     LAYERS=idambterrcaccia|AMBITI TERRITORIALI CACCIA||
+#LayersUrlPart:     LAYERS=idasl|ASL||
+#LayersUrlPart:     LAYERS=idzss|ZONE SOCIO SANITARIE||
+#LayersUrlPart:     LAYERS=idatorif|ATO RIFIUTI||
+#LayersUrlPart:     LAYERS=idatorisidr|ATO RISORSE IDRICHE||
+#LayersUrlPart:     LAYERS=iddisind95|DISTRETTI INDUSTRIALI 95||
+#LayersUrlPart:     LAYERS=iddisind99|DISTRETTI INDUSTRIALI 99||
+#LayersUrlPart:     LAYERS=iddisscol|DISTRETTI SCOLASTICI||
+#LayersUrlPart:     LAYERS=idsisecoloc|SISTEMI ECONOMICI LOCALI||
+#LayersUrlPart:     LAYERS=idsisproloc|SISTEMI PRODUTTIVI LOCALI||
+#LayersUrlPart:     LAYERS=idsisterloc|SISTEMI TERRITORIALI LOCALI||
+#LayersUrlPart:     LAYERS=idcommont|COMUNITA MONTANE (LR.82/2000)||
+#LayersUrlPart:     LAYERS=idcommont2008|COMUNITA MONTANE (LR.37/2008)||
+#LayersUrlPart:     LAYERS=idareametrop|AREE METROPOLITANE||
+#LayersUrlPart:     LAYERS=idcircondari|CIRCONDARI||
+#LayersUrlPart:     LAYERS=idcentroamm|SEDI AMMINISTRATIVE||
+#LayersUrlPart:     LAYERS=idptcst|PTC SISTEMI TERRITORIALI||
+#LayersUrlPart:     LAYERS=idptcsst|PTC SOTTOSISTEMI TERRITORIALI||
+#LayersUrlPart:     LAYERS=idptcstl|PTC SISTEMI TERRITORIALI LOCALI||
+#LayersUrlPart:     LAYERS=idptcsf_a|PTC SISTEMI FUNZIONALI (A)||
+#LayersUrlPart:     LAYERS=idptcsf_l|PTC SISTEMI FUNZIONALI (L)||
+#LayersUrlPart:     LAYERS=idptcsf_p|PTC SISTEMI FUNZIONALI (P)||
+#LayersUrlPart:     LAYERS=idptcssf_l|PTC SOTTOSISTEMI FUNZIONALI (L)||
+#LayersUrlPart:     LAYERS=idptcinvstrutt_a|PTC INVARIANTI STRUTTURALI (A)||
+#LayersUrlPart:     LAYERS=idptcinvstrutt_l|PTC INVARIANTI STRUTTURALI (L)||
+#LayersUrlPart:     LAYERS=idptcinvstrutt_p|PTC INVARIANTI STRUTTURALI (P)||
+#LayersUrlPart:     LAYERS=idptcintgeomorf|PTC INTEGRITA` GEOMORFOLOGICA||
+#LayersUrlPart:     LAYERS=idptcintidraulic|PTC INTEGRITA` IDRAULICA||
+#LayersUrlPart:     LAYERS=idptcintacquif|PTC INTEGRITA` ACQUIFERI||
+#LayersUrlPart:     LAYERS=idptcrisinsed|PTC RISORSE INSEDIAMENTI||
+#LayersUrlPart:     LAYERS=idptcrismobil_l|PTC RISORSE MOBILITA (L)||
+#LayersUrlPart:     LAYERS=idptcrisrur_epf_a|PTC RISORSE RURALI-INSEDIAMENTI E AREE AGRICOLE (A)||
+#LayersUrlPart:     LAYERS=idptcrisrur_cea_a|PTC RISORSE RURALI-CARATT.ECONOMICO-AGRARIA (A)||
+#LayersUrlPart:     LAYERS=idptcrisrur_raa_a|PTC RISORSE RURALI-RISORSE AGRO-AMBIENTALI (A)||
+#LayersUrlPart:     LAYERS=idptcrisrur_dtr_a|PTC RISORSE RURALI-DEGRADO DEL TERRITORIO (A)||
+#LayersUrlPart:     LAYERS=idptcrisrur_epf_p|PTC RISORSE RURALI-INSEDIAMENTI E AREE AGRICOLE (P)||
+#LayersUrlPart:     LAYERS=idptcrisrur_raa_p|PTC RISORSE RURALI-RISORSE AGRO-AMBIENTALI (P)||
+#LayersUrlPart:     LAYERS=idst|PS SISTEMI TERRITORIALI||
+#LayersUrlPart:     LAYERS=idsst|PS SOTTOSISTEMI TERRITORIALI||
+#LayersUrlPart:     LAYERS=idasst|PS AMBITI DI SOTTOSISTEMA TERRITORIALE||
+#LayersUrlPart:     LAYERS=idsf_a|PS SISTEMI FUNZIONALI (A)||
+#LayersUrlPart:     LAYERS=idsf_l|PS SISTEMI FUNZIONALI (L)||
+#LayersUrlPart:     LAYERS=idsf_p|PS SISTEMI FUNZIONALI (P)||
+#LayersUrlPart:     LAYERS=idssf_a|PS SOTTOSISTEMI FUNZIONALI (A)||
+#LayersUrlPart:     LAYERS=idssf_l|PS SOTTOSISTEMI FUNZIONALI (L)||
+#LayersUrlPart:     LAYERS=idssf_p|PS SOTTOSISTEMI FUNZIONALI (P)||
+#LayersUrlPart:     LAYERS=idutoe|PS UTOE||
+#LayersUrlPart:     LAYERS=idinvstrutt_a|PS INVARIANTI STRUTTURALI (A)||
+#LayersUrlPart:     LAYERS=idinvstrutt_l|PS INVARIANTI STRUTTURALI (L)||
+#LayersUrlPart:     LAYERS=idinvstrutt_p|PS INVARIANTI STRUTTURALI (P)||
+#LayersUrlPart:     LAYERS=idpericgeomorf|PS PERICOLOSITA GEOMORFOLOGICA||
+#LayersUrlPart:     LAYERS=idpericidraulic|PS PERICOLOSITA IDRAULICA||
+#LayersUrlPart:     LAYERS=idregurb_asa_a|RU - AMBITI A.S.A (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_asa_p|RU - AMBITI A.S.A (P)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_desuso_a|RU - DEST.USO PREV. (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_pa_a|RU - AMBITI PIANI ATTUATIVI (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ca_a|RU - CENTRI ABITATI (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_ferr_a|RU - FERROVIA (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_strloc_a|RU - STRADA LOCALE (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_strurb_a|RU - STRADA URBANA (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_extraurb_a|RU - STRADA EXTRAURBANA (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_autostr_a|RU - AUTOSTRADA (A)|0|NaN
+#LayersUrlPart:     LAYERS=idregurb_ir_pcp_l|RU - PISTA CICLAB. E PEDON. (L)|0|NaN
+#LayersUrlPart:     LAYERS=idpccazon|ZONIZZAZIONE ACUSTICA||
+#LayersUrlPart:     LAYERS=idpccaspt|AREE SPETTACOLO TEMPORANEO||
+#LayersUrlPart:     LAYERS=idquptc|QUADRO DI UNIONE - PTC||
+#LayersUrlPart:     LAYERS=idqups|QUADRO DI UNIONE - PS||
+#LayersUrlPart:     LAYERS=idquru|QUADRO DI UNIONE - RU||
+#LayersUrlPart:     LAYERS=idqupcca|QUADRO DI UNIONE - PCCA||
+#LayersUrlPart:     LAYERS=idzrcimiter|Z.R. CIMITERIALE (DPR 285/90)||
+#LayersUrlPart:     LAYERS=idzrstradal|Z.R. STRADALE (DPR 495/92)||
+#LayersUrlPart:     LAYERS=idzraeroport|Z.R. AEROPORTUALE (DM 31/10/97)||
+#LayersUrlPart:     LAYERS=idzpv0000000001|PROD. VINI - VINO NOBILE DI MONTEPULCIANO||
+#LayersUrlPart:     LAYERS=idzpv0000000002|PROD. VINI - ROSSO DI MONTEPULCIANO||
+#LayersUrlPart:     LAYERS=idzpv0000000003|PROD. VINI - VIN SANTO DI MONTEPULCIANO||
+#LayersUrlPart:     LAYERS=idzpv0000000004|PROD. VINI - BRUNELLO DI MONTALCINO||
+#LayersUrlPart:     LAYERS=idzpv0000000005|PROD. VINI - MOSCADELLO DI MONTALCINO||
+#LayersUrlPart:     LAYERS=idzpv0000000006|PROD. VINI - ROSSO DI MONTALCINO||
+#LayersUrlPart:     LAYERS=idzpv0000000007|PROD. VINI - SANT`ANTIMO||
+#LayersUrlPart:     LAYERS=idzpv0000000008|PROD. VINI - VALDICHIANA||
+#LayersUrlPart:     LAYERS=idzpv0000000009|PROD. VINI - VAL D`ARBIA||
+#LayersUrlPart:     LAYERS=idzpv0000000011|PROD. VINI - VIN SANTO DEL CHIANTI CLASSICO||
+#LayersUrlPart:     LAYERS=idzpv0000000012|PROD. VINI - TERRE DI CASOLE||
+#LayersUrlPart:     LAYERS=idzpv0000000013|PROD. VINI - VERNACCIA DI SAN GIMIGNANO||
+#LayersUrlPart:     LAYERS=idzpv0000000014|PROD. VINI - SAN GIMIGNANO||
+#LayersUrlPart:     LAYERS=idzpv0000000015|PROD. VINI - BARCO REALE DI CARMIGNANO||
+#LayersUrlPart:     LAYERS=idzpv0000000016|PROD. VINI - CARMIGNANO||
+#LayersUrlPart:     LAYERS=idzpv0000000017|PROD. VINI - BIANCO PISANO DI SAN TORPE`||
+#LayersUrlPart:     LAYERS=idzpv0000000019|PROD. VINI - MONTESCUDAIO||
+#LayersUrlPart:     LAYERS=idzpv0000000020|PROD. VINI - CANDIA DEI COLLI APUANI||
+#LayersUrlPart:     LAYERS=idzpv0000000021|PROD. VINI - COLLI DI LUNI||
+#LayersUrlPart:     LAYERS=idzpv0000000022|PROD. VINI - COLLINE LUCCHESI||
+#LayersUrlPart:     LAYERS=idzpv0000000023|PROD. VINI - MONTECARLO||
+#LayersUrlPart:     LAYERS=idzpv0000000024|PROD. VINI - TERRATICO DI BIBBONA||
+#LayersUrlPart:     LAYERS=idzpv0000000025|PROD. VINI - BOLGHERI||
+#LayersUrlPart:     LAYERS=idzpv0000000027|PROD. VINI - ELBA||
+#LayersUrlPart:     LAYERS=idzpv0000000028|PROD. VINI - POMINO||
+#LayersUrlPart:     LAYERS=idzpv0000000029|PROD. VINI - ALTA VALLE DELLA GREVE||
+#LayersUrlPart:     LAYERS=idzpv0000000030|PROD. VINI - BIANCO DELL`EMPOLESE||
+#LayersUrlPart:     LAYERS=idzpv0000000031|PROD. VINI - CORTONA||
+#LayersUrlPart:     LAYERS=idzpv0000000037|PROD. VINI - PIETRAVIVA||
+#LayersUrlPart:     LAYERS=idzpv0000000045|PROD. VINI - ANSONICA COSTA DELL`ARGENTARIO||
+#LayersUrlPart:     LAYERS=idzpv0000000040|PROD. VINI - CAPALBIO||
+#LayersUrlPart:     LAYERS=idzpv0000000038|PROD. VINI - MONTEREGIO DI MASSA MARITTIMA||
+#LayersUrlPart:     LAYERS=idzpv0000000039|PROD. VINI - MORELLINO DI SCANSANO||
+#LayersUrlPart:     LAYERS=idzpv0000000041|PROD. VINI - PARRINA||
+#LayersUrlPart:     LAYERS=idzpv0000000042|PROD. VINI - SOVANA||
+#LayersUrlPart:     LAYERS=idzpv0000000043|PROD. VINI - BIANCO DI PITIGLIANO||
+#LayersUrlPart:     LAYERS=idzpv0000000010|PROD. VINI - ORCIA||
+#LayersUrlPart:     LAYERS=idzpv0000000018|PROD. VINI - MONTECASTELLI||
+#LayersUrlPart:     LAYERS=idzpv0000000026|PROD. VINI - VAL DI CORNIA||
+#LayersUrlPart:     LAYERS=idzpv0000000033|PROD. VINI - COLLI DELLA TOSCANA CENTRALE||
+#LayersUrlPart:     LAYERS=idzpv0000000035|PROD. VINI - COLLI DELL`ETRURIA CENTRALE||
+#LayersUrlPart:     LAYERS=idzpv0000000036|PROD. VINI - VIN SANTO DEL CHIANTI||
+#LayersUrlPart:     LAYERS=idzpv0000000044|PROD. VINI - MAREMMA TOSCANA||
+#LayersUrlPart:     LAYERS=idzpv0000000046|PROD. VINI - MONTECUCCO||
+#LayersUrlPart:     LAYERS=idzpv0000000034|PROD. VINI - CHIANTI||
+#LayersUrlPart:     LAYERS=idzpv0000000047|PROD. VINI - BIANCO DELLA VAL DI NIEVOLE||
+#LayersUrlPart:     LAYERS=idzpv0000000032|PROD. VINI - TOSCANO O TOSCANA||
+#LayersUrlPart:     LAYERS=idzpv0000000048|PROD. VINI - VAL DI MAGRA||
+#LayersUrlPart:     LAYERS=idszpv0000000001|SOTTOZONA PROD. VINI - CHIANTI COLLI SENESI||
+#LayersUrlPart:     LAYERS=idszpv0000000002|SOTTOZONA PROD. VINI - CHIANTI CLASSICO||
+#LayersUrlPart:     LAYERS=idszpv0000000003|SOTTOZONA PROD. VINI - CHIANTI COLLINE PISANE||
+#LayersUrlPart:     LAYERS=idszpv0000000004|SOTTOZONA PROD. VINI - BOLGHERI: BOLGHERI SASSICAIA||
+#LayersUrlPart:     LAYERS=idszpv0000000005|SOTTOZONA PROD. VINI - VAL DI CORNIA: VAL DI CORNIA SUVERETO||
+#LayersUrlPart:     LAYERS=idszpv0000000006|SOTTOZONA PROD. VINI - CHIANTI RUFINA||
+#LayersUrlPart:     LAYERS=idszpv0000000007|SOTTOZONA PROD. VINI - CHIANTI COLLI FIORENTINI||
+#LayersUrlPart:     LAYERS=idszpv0000000008|SOTTOZONA PROD. VINI - CHIANTI MONTESPERTOLI||
+#LayersUrlPart:     LAYERS=idszpv0000000009|SOTTOZONA PROD. VINI - CHIANTI COLLI ARETINI||
+#LayersUrlPart:     LAYERS=idszpv0000000010|SOTTOZONA PROD. VINI - CHIANTI MONTALBANO||
+#LayersUrlPart:     LAYERS=idcentriabit|CENTRI ABITATI||
+#LayersUrlPart:     LAYERS=idsezcens_2001_cab|ISTAT 2001 - CENTRI ABITATI|0|NaN
+#LayersUrlPart:     LAYERS=idsezcens_2001_nab|ISTAT 2001 - NUCLEI ABITATI|0|NaN
+#LayersUrlPart:     LAYERS=idsezcens_2001_lpr|ISTAT 2001 - LOC. PROD.|0|NaN
+#LayersUrlPart:     LAYERS=idsezcens_2001_csp|ISTAT 2001 - CASE SPARSE|0|NaN
+#LayersUrlPart:     LAYERS=idpartoscoem|PARCO APPENNINO TOSCO-EMILIANO|0|NaN
+#LayersUrlPart:     LAYERS=idparforcas|PARCO DELLE FORESTE CASENTINESI|0|NaN
+#LayersUrlPart:     LAYERS=idpararctos|PARCO ARCIPELAGO TOSCANO|0|NaN
+#LayersUrlPart:     LAYERS=idparreg|PARCO REGIONALE|0|NaN
+#LayersUrlPart:     LAYERS=idparprov|PARCO PROVINCIALE|0|NaN
+#LayersUrlPart:     LAYERS=idrisnatprov|RISERVA NATURALE PROVINCIALE|0|NaN
+#LayersUrlPart:     LAYERS=idrisnatstat|RISERVA NATURALE STATALE|0|NaN
+#LayersUrlPart:     LAYERS=idanpil|AREA NATURALE PROTETTA DI INTERESSE LOCALE|0|NaN
+#LayersUrlPart:     LAYERS=idsir|SITI DI IMPORTANZA REGIONALE||
+#LayersUrlPart:     LAYERS=idramsar|ZONE UMIDE (RAMSAR)||
+#LayersUrlPart:     LAYERS=idmonum_a|VINC MONUMENTALE (A)||
+#LayersUrlPart:     LAYERS=idarch_a|VINC ARCHEOLOGICO (A)||
+#LayersUrlPart:     LAYERS=ididrogeol|VINC IDROGEOLOGICO||
+#LayersUrlPart:     LAYERS=idpae1_a|D.Lgls42/04,art.134 (A)||
+#LayersUrlPart:     LAYERS=idpae2m|D.Lgls42/04,art.142 - lett.m ZONE ARCHEOL.||
+#LayersUrlPart:     LAYERS=idpae2i|D.Lgls42/04,art.142 - lett.i ZONE UMIDE||
+#LayersUrlPart:     LAYERS=idpae2h|D.Lgls42/04,art.142 - lett.h USI CIVICI||
+#LayersUrlPart:     LAYERS=idpae2g|D.Lgls42/04,art.142 - lett.g BOSCHI||
+#LayersUrlPart:     LAYERS=idpae2f|D.Lgls42/04,art.142 - lett.f AREE PROTETTE||
+#LayersUrlPart:     LAYERS=idpae2e|D.Lgls42/04,art.142 - lett.e CIRCHI GLACIALI||
+#LayersUrlPart:     LAYERS=idpae2d|D.Lgls42/04,art.142 - lett.d MONTAGNE||
+#LayersUrlPart:     LAYERS=idpae2c|D.Lgls42/04,art.142 - lett.c FIUMI||
+#LayersUrlPart:     LAYERS=idpae2b|D.Lgls42/04,art.142 - lett.b LAGHI||
+#LayersUrlPart:     LAYERS=idpae2a|D.Lgls42/04,art.142 - lett.a COSTE||
+#LayersUrlPart:     LAYERS=idift8593|IFT 400m 1985-1993|0|NaN
+#LayersUrlPart:     LAYERS=idarprod|AREE PRODUTTIVE||
+#LayersUrlPart:     LAYERS=idsentcai|SENTIERI CAI - 2005||
+#LayersUrlPart:     LAYERS=idrifcai|RIFUGI CAI - 2005||
+#LayersUrlPart:     LAYERS=idgrotte|GROTTE||
+#LayersUrlPart:     LAYERS=_idreg|REGIONE||
+#LayersUrlPart:     LAYERS=idprov|PROVINCE||
+#LayersUrlPart:     LAYERS=idcomuni|COMUNI||
+#LayersUrlPart:     LAYERS=idcomuniline|COMUNI LINEARI||
+#LayersUrlPart:     LAYERS=idtoponctr10k|TOPONOMASTICA|0|NaN
+#LayersUrlPart:     LAYERS=_idlocabit|LOCALITA ABITATE||
+#LayersUrlPart:     LAYERS=copyright|theCopyright||
+#vorher LayersUrlPart:   LAYERS=idrst10k,rst100k,rst25k_igm
+#LayersUrlPart:   LAYERS=idrst10k
+LayersUrlPart:   LAYERS=otf10k0306,idrst10k
+StylesUrlPart:   STYLES=Default,Default,Default,Default,Default,Default,Default,Default
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 44.500805 E 9.642548
+BoundingBoxButtomRightWGS84:   N 42.168745 E 12.462359
+MinScale:   0
+MaxScale:   71
+#Scale 2 and 3 are scaled versions of scale 1. Scale 5 and 6 are scaled versions of scale 4
+RecommendedScale:   1
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/at-3_p.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/at-3_p.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/at-3_p.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,50 @@
+TakenFromUrl:       http://www.intermap1.noel.gv.at:80/wmsconnector/com.esri.wms.Esrimap/pgo?
+GetCapabilitiesUrl: http://www.intermap1.noel.gv.at:80/wmsconnector/com.esri.wms.Esrimap/pgo?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities
+Name:               at.Niederoesterreich photo
+MapType:                        photo
+MainUrl:            http://www.intermap1.noel.gv.at:80/wmsconnector/com.esri.wms.Esrimap/pgo?
+ServiceTypeUrlPart: SERVICE=WMS
+VersionUrlPart:     VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf: 4326
+CoordinateReferenceSystemUrlPart: SRS=EPSG:4326
+# 31466 31467 4326
+# SRS=EPSG:31466 SRS=EPSG:31467 SRS=EPSG:4326
+RequestUrlPart:     REQUEST=GetMap
+#LayersUrlPart:     LAYERS=oek200|OEK200||
+#LayersUrlPart:     LAYERS=oek50|OEK50||
+#LayersUrlPart:     LAYERS=ortho1m_sw|Orthofoto SW||
+#LayersUrlPart:     LAYERS=isolinien|Isolinien|NaN|NaN
+#LayersUrlPart:     LAYERS=Polygondecker|Polygondecker||
+#LayersUrlPart:     LAYERS=Ziel_2_Gebiet|Ziel_2_Gebiet|NaN|99999999
+#LayersUrlPart:     LAYERS=Uebergangsgebiet|Uebergangsgebiet|NaN|99999999
+#LayersUrlPart:     LAYERS=Vogelschutzrichtlinie|Vogelschutzrichtlinie (SPA)||
+#LayersUrlPart:     LAYERS=Habitatrichtlinie|Habitat-Richtlinie (PSCI)||
+#LayersUrlPart:     LAYERS=Naturpark|Naturpark||
+#LayersUrlPart:     LAYERS=Landschaftsschutzgebiet|Landschaftsschutzgebiet||
+#LayersUrlPart:     LAYERS=Nationalpark|Nationalpark||
+#LayersUrlPart:     LAYERS=Naturschutzgebiet|Naturschutzgebiet||
+#LayersUrlPart:     LAYERS=Luftfahrthindernis|Luftfahrthindernis||
+#LayersUrlPart:     LAYERS=Grundwasserrahmenverfuegung|Grundwasser Rahmenverf??gung|NaN|99999999
+#LayersUrlPart:     LAYERS=Quellschongebiet|Quellschongebiet|NaN|99999999
+#LayersUrlPart:     LAYERS=Grundwasserschongebiet|Grundwasser Schongebiet|NaN|99999999
+#LayersUrlPart:     LAYERS=Grundwasserschutzgebiet|Grundwasser Schutzgebiet|NaN|99999999
+#LayersUrlPart:     LAYERS=hq100|Hochwasseranschlaglinie HQ100|NaN|99999999
+#LayersUrlPart:     LAYERS=wep|Waldentwicklungsplan|NaN|99999999
+#LayersUrlPart:     LAYERS=flu_50t|Fliessgewaesser||
+#LayersUrlPart:     LAYERS=see|Stehende Gew??sser||
+#LayersUrlPart:     LAYERS=radwanderrouten|Radwanderrouten||
+#LayersUrlPart:     LAYERS=PolitischeGemeinden|Politische Gemeinden||
+#LayersUrlPart:     LAYERS=PolitischeBezirke|Politische Bezirke||
+#LayersUrlPart:     LAYERS=Nuts3Regionen|Nuts3 Regionen|NaN|99999999
+#LayersUrlPart:     LAYERS=Landesgrenzen|Landesgrenzen||
+LayersUrlPart:     LAYERS=ortho1m_sw,flu_50t,see
+StylesUrlPart:     STYLES=
+ImageFormatUrlPart:FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 49.112935  E 14.243781
+BoundingBoxButtomRightWGS84:   N 47.297627 E 17.481360
+#BBox_Mitte: N 48.205281 E 15.862571
+MinScale:   0
+MaxScale:   45
+RecommendedScale:   1
+ImageFileExtension: .png
+# Kalibrierung ?

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/at-3_t50.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/at-3_t50.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/at-3_t50.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,50 @@
+TakenFromUrl:       http://www.intermap1.noel.gv.at:80/wmsconnector/com.esri.wms.Esrimap/pgo?
+GetCapabilitiesUrl: http://www.intermap1.noel.gv.at:80/wmsconnector/com.esri.wms.Esrimap/pgo?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities
+Name:               at.Niederoesterreich topo 50
+MapType:                        topo
+MainUrl:            http://www.intermap1.noel.gv.at:80/wmsconnector/com.esri.wms.Esrimap/pgo?
+ServiceTypeUrlPart: SERVICE=WMS
+VersionUrlPart:     VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf: 4326
+CoordinateReferenceSystemUrlPart: SRS=EPSG:4326
+RequestUrlPart:     REQUEST=GetMap
+#LayersUrlPart:     LAYERS=oek200|OEK200||
+#LayersUrlPart:     LAYERS=oek50|OEK50||
+#LayersUrlPart:     LAYERS=ortho1m_sw|Orthofoto SW||
+#LayersUrlPart:     LAYERS=isolinien|Isolinien|NaN|NaN
+#LayersUrlPart:     LAYERS=Polygondecker|Polygondecker||
+#LayersUrlPart:     LAYERS=Ziel_2_Gebiet|Ziel_2_Gebiet|NaN|99999999
+#LayersUrlPart:     LAYERS=Uebergangsgebiet|Uebergangsgebiet|NaN|99999999
+#LayersUrlPart:     LAYERS=Vogelschutzrichtlinie|Vogelschutzrichtlinie (SPA)||
+#LayersUrlPart:     LAYERS=Habitatrichtlinie|Habitat-Richtlinie (PSCI)||
+#LayersUrlPart:     LAYERS=Naturpark|Naturpark||
+#LayersUrlPart:     LAYERS=Landschaftsschutzgebiet|Landschaftsschutzgebiet||
+#LayersUrlPart:     LAYERS=Nationalpark|Nationalpark||
+#LayersUrlPart:     LAYERS=Naturschutzgebiet|Naturschutzgebiet||
+#LayersUrlPart:     LAYERS=Luftfahrthindernis|Luftfahrthindernis||
+#LayersUrlPart:     LAYERS=Grundwasserrahmenverfuegung|Grundwasser Rahmenverf??gung|NaN|99999999
+#LayersUrlPart:     LAYERS=Quellschongebiet|Quellschongebiet|NaN|99999999
+#LayersUrlPart:     LAYERS=Grundwasserschongebiet|Grundwasser Schongebiet|NaN|99999999
+#LayersUrlPart:     LAYERS=Grundwasserschutzgebiet|Grundwasser Schutzgebiet|NaN|99999999
+#LayersUrlPart:     LAYERS=hq100|Hochwasseranschlaglinie HQ100|NaN|99999999
+#LayersUrlPart:     LAYERS=wep|Waldentwicklungsplan|NaN|99999999
+#LayersUrlPart:     LAYERS=flu_50t|Fliessgewaesser||
+#LayersUrlPart:     LAYERS=see|Stehende Gew??sser||
+#LayersUrlPart:     LAYERS=radwanderrouten|Radwanderrouten||
+#LayersUrlPart:     LAYERS=PolitischeGemeinden|Politische Gemeinden||
+#LayersUrlPart:     LAYERS=PolitischeBezirke|Politische Bezirke||
+#LayersUrlPart:     LAYERS=Nuts3Regionen|Nuts3 Regionen|NaN|99999999
+#LayersUrlPart:     LAYERS=Landesgrenzen|Landesgrenzen||
+LayersUrlPart:     LAYERS=oek50,flu_50t,see
+StylesUrlPart:     STYLES=
+ImageFormatUrlPart:FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 49.112935  E 14.243781
+BoundingBoxButtomRightWGS84:   N 47.297627 E 17.481360
+MinScale:   0
+MaxScale:   45
+RecommendedScale:   5
+ImageFileExtension: .png
+# BBox ev. etwas zu weit s?dlich
+# keine Fehlermeldung bei Koordinaten ausserhalb
+# Skalierung ab 1 bis 15 (teils 17,5) (daruberhinaus nur die Wasserlayer)
+# Kalibrierung passt nicht zu Google

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/at_p.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/at_p.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/at_p.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,42 @@
+TakenFromUrl:   http://www.geoland.at
+GetCapabilitiesUrl:   http://www.geoland.at/geolandWMS/service.aspx?Name=geoland_at_wms&Service=WMS&Version=1.1.1&Request=GetCapabilities
+Name:   at photo
+MapType:   photo
+MainUrl:   http://www.geoland.at/geolandWMS/service.aspx?
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:   4326
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:4326
+RequestUrlPart:   REQUEST=GetMap
+#LayersUrlPart:   LAYERS=Bezirke		<ScaleHint min="0.935071009578714" max="187.08941170883" /> 
+#LayersUrlPart:   LAYERS=Gemeinden		<ScaleHint min="0.935071009578714" max="187.08866335268" /> 
+#LayersUrlPart:   LAYERS=Landesgrenzen		<ScaleHint min="0.935071009578714" max="9354.45187653775" />
+#LayersUrlPart:   LAYERS=Natura2000_SPA		<ScaleHint min="0.935071009578714" max="1870.89074948563" /> Natura 2000 Vogelschutzrichtlinie (SPA)
+#LayersUrlPart:   LAYERS=Natura2000_pSCI	<ScaleHint min="0.935071009578714" max="1870.89074948563" /> Natura 2000 Habitatrichtlinie (SCI)
+#LayersUrlPart:   LAYERS=Naturpark		<ScaleHint min="0.935071009578714" max="1870.89074948563" /> 
+#LayersUrlPart:   LAYERS=Landschaftsschutzgebiet<ScaleHint min="0.935071009578714" max="1870.89074948563" /> 
+#LayersUrlPart:   LAYERS=Nationalpark		<ScaleHint min="0.935071009578714" max="1870.89074948563" /> 
+#LayersUrlPart:   LAYERS=Naturschutzgebiet	<ScaleHint min="0.935071009578714" max="1870.89074948563" /> 
+#LayersUrlPart:   LAYERS=Autobahn		<ScaleHint min="0.935071009578714" max="748.356524301095" />
+#LayersUrlPart:   LAYERS=Landesstr_B		<ScaleHint min="0.935071009578714" max="748.356524301095" /> 
+#LayersUrlPart:   LAYERS=Landesstr_L		<ScaleHint min="0.935071009578714" max="187.08941170883" />
+#LayersUrlPart:   LAYERS=Orientierungskarte	<ScaleHint min="0" max="9.35482605461281" />
+#LayersUrlPart:   LAYERS=S/W-Orthofoto		<ScaleHint min="0.935071009578714" max="9.35482605461281" />
+#LayersUrlPart:   LAYERS=Radwanderrouten	<ScaleHint min="3.74140657254004" max="187.08941170883" /> 
+#LayersUrlPart:   LAYERS=Startbild		<ScaleHint min="74.8363633684521" max="3741.78112479318" /> Hintergrund
+#LayersUrlPart:   LAYERS=Geonamen		<ScaleHint min="0.935071009578714" max="5.61229694784759" /> Orts- und Flurnamen
+#LayersUrlPart:   LAYERS=Flug_Orthofoto		<ScaleHint min="0.935071009578714" max="1870.89074948563" /> Flugjahr Orthofoto
+#LayersUrlPart:   LAYERS=Flug_ALS		<ScaleHint min="0.935071009578714" max="1870.89074948563" /> Flugjahr Laserscanning
+#LayersUrlPart:   LAYERS=S/W-Orthofoto,Bezirke,Gemeinden,Landesgrenzen,Autobahn,Landesstr_B,Landesstr_L,Radwanderrouten
+LayersUrlPart:   LAYERS=S/W-Orthofoto,Orientierungskarte,Geonamen,Autobahn,Landesstr_B,Landesstr_L
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 49.027050  E 9.529250
+BoundingBoxButtomRightWGS84:   N 46.357433 E 17.202733
+MinScale:   0
+MaxScale:   45
+RecommendedScale:   1
+ImageFileExtension: .png
+# nicht ?berall Luftbilder
+# nicht ?berall gut kalibriert
+# bis Skalierung 4,3 gibts noch Fotos, ab 4,5 nur noch Strassen (schlecht kalibriert)

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-bb_t10.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-bb_t10.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-bb_t10.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,19 @@
+TakenFromUrl:   http://isk.geobasis-bb.de/index.php?cms=1101
+GetCapabilitiesUrl:   http://isk.geobasis-bb.de/ows/dnm010.php?SERVICE=WMS&REQUEST=GetCapabilities&VERSION=1.1.1
+Name:   de.Berlin/Brandenburg topo 10
+MapType:   topo
+MainUrl:   http://isk.geobasis-bb.de/ows/dnm010.php?
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:   4326
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:4326
+RequestUrlPart:   REQUEST=GetMap
+LayersUrlPart:   LAYERS=bg,siedlung,transport,vegetation,gewaesser,gewaessernamen,ortsnamen,strassennamen
+StylesUrlPart:   STYLES=2
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 53.5 E 11.2
+BoundingBoxButtomRightWGS84:   N 51.3 E 14.8
+MinScale:   0.0
+MaxScale:   14.001
+RecommendedScale:   1
+ImageFileExtension:   .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-bb_t25.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-bb_t25.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-bb_t25.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,19 @@
+TakenFromUrl:   http://isk.geobasis-bb.de/index.php?cms=1101
+GetCapabilitiesUrl:   http://isk.geobasis-bb.de/ows/dnm025.php?SERVICE=WMS&REQUEST=GetCapabilities&VERSION=1.1.1%2
+Name:   de.Berlin/Brandenburg topo 25
+MapType:   topo
+MainUrl:   http://isk.geobasis-bb.de/ows/dnm025.php?
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:   4326
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:4326
+RequestUrlPart:   REQUEST=GetMap
+LayersUrlPart:   LAYERS=bg,siedlung,transport,vegetation,gewaesser,gewaessernamen,ortsnamen,strassennamen
+StylesUrlPart:   STYLES=2
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 53.5 E 11.2
+BoundingBoxButtomRightWGS84:   N 51.3 E 14.8
+MinScale:   0.0
+MaxScale:   11.0485
+RecommendedScale:   2.5
+ImageFileExtension:   .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-bw_p.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-bw_p.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-bw_p.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,19 @@
+TakenFromUrl:   http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:   http://www.lv-bw.de/dv/capabilities.xml?login=dv&pw=anonymous&REQUEST=GetCapabilities&VERSION=1.1.0&SERVICE=WMS
+Name:   de.Baden-Wuerttemberg photo
+MapType:   photo
+MainUrl:   http://www.lv-bw.de/dv/service/getrds2.asp?login=dv&pw=anonymous&
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:   31467
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:31467
+RequestUrlPart:   REQUEST=GetMap
+LayersUrlPart:   LAYERS=DVDOP2
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 50.00 E 7.60
+BoundingBoxButtomRightWGS84:   N 47.40 E 10.00
+MinScale:   0.01
+MaxScale:   43
+RecommendedScale:   2.5
+ImageFileExtension: .png 
\ No newline at end of file

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-bw_t50.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-bw_t50.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-bw_t50.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,19 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Internetadressen
+GetCapabilitiesUrl:	http://www.lv-bw.de/dv/capabilities.xml?login=dv&pw=anonymous&REQUEST=GetCapabilities&VERSION=1.1.0&SERVICE=WMS
+Name:	de.Baden-Wuerttemberg topo 50
+MapType:	topo
+MainUrl:	http://www.lv-bw.de/dv/service/getrds2.asp?login=dv&pw=anonymous&
+ServiceTypeUrlPart:	SERVICE=WMS 
+VersionUrlPart:	VERSION=1.1.1 
+CoordinateReferenceSystemCacheWolf:	31467 
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31467
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=DVTK50K
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/png
+BoundingBoxTopLeftWGS84:	N 50.00 E 7.60
+BoundingBoxButtomRightWGS84:	N 47.40 E 10.00
+MinScale:	0.01
+MaxScale:	40
+RecommendedScale:	5.0
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-by_p.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-by_p.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-by_p.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,19 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://www.geodaten.bayern.de/ogc/getogc.cgi?REQUEST=GetCapabilities&VERSION=1.1.0&SERVICE=WMS
+Name:	de.Bayern photo
+MapType:	photo
+MainUrl:	http://www.geodaten.bayern.de/ogc/getogc.cgi?
+ServiceTypeUrlPart:	SERVICE=WMS 
+VersionUrlPart:	VERSION=1.1.1 
+CoordinateReferenceSystemCacheWolf: 31468 
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31468
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=DOP
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/png
+BoundingBoxTopLeftWGS84:	N 50.6269 E 8.89292
+BoundingBoxButtomRightWGS84:	N 47.0828 E 13.9782
+MinScale:	2.82
+MaxScale:	200
+RecommendedScale:	2.0
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-by_t50.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-by_t50.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-by_t50.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,19 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://www.geodaten.bayern.de/ogc/getogc.cgi?REQUEST=GetCapabilities&VERSION=1.1.0&SERVICE=WMS
+Name:	de.Bayern topo 50
+MapType:	topo
+MainUrl:	http://www.geodaten.bayern.de/ogc/getogc.cgi?
+ServiceTypeUrlPart:	SERVICE=WMS 
+VersionUrlPart:	VERSION=1.1.1 
+CoordinateReferenceSystemCacheWolf: 31468 
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31468
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=TK50
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/png
+BoundingBoxTopLeftWGS84:	N 50.6269 E 8.89292
+BoundingBoxButtomRightWGS84:	N 47.0828 E 13.9782
+MinScale:	0.997806
+MaxScale:	24.9451
+RecommendedScale:	5.0
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-he_p.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-he_p.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-he_p.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,20 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://lika.hessen.de/cgi-bin/lika-services/de-viewer/access/ogc-free-images.plx?REQUEST=GetCapabilities&VERSION=1.1.0&SERVICE=WMS
+Name:	de.Hessen photo
+MapType:	photo
+MainUrl:	http://lika.hessen.de/cgi-bin/lika-services/de-viewer/access/ogc-free-images.plx?
+ServiceTypeUrlPart:	SERVICE=WMS 
+VersionUrlPart:	VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:	31467
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31467
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=DOP04F1
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/jpeg
+BoundingBoxTopLeftWGS84:	N 51.6697 E 7.69911
+BoundingBoxButtomRightWGS84:	N 49.3455 E 11.3986
+MinScale:   0.399122
+MaxScale:   9.97806
+RecommendedScale:   0.4
+ImageFileExtension: .jpg
+

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-he_t100.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-he_t100.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-he_t100.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,21 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://lika.hessen.de/cgi-bin/lika-services/de-viewer/access/ogc-free-maps.plx?REQUEST=GetCapabilities&VERSION=1.1.0&SERVICE=WMS
+Name:	de.Hessen topo 100
+MapType:	topo
+MainUrl:	http://lika.hessen.de/cgi-bin/lika-services/de-viewer/access/ogc-free-maps.plx?
+LayersName: 
+ServiceTypeUrlPart:	SERVICE=WMS 
+VersionUrlPart:	VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:	31467
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31467
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=ATKPG50-N1
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/png
+BoundingBoxTopLeftWGS84:	N 51.6697 E 7.69911
+BoundingBoxButtomRightWGS84:	N 49.3455 E 11.3986
+MinScale:	1.49671
+MaxScale:	99.7806
+RecommendedScale:	10.0
+ImageFileExtension: .png
+

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-he_t50.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-he_t50.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-he_t50.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,20 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://lika.hessen.de/cgi-bin/lika-services/de-viewer/access/ogc-free-maps.plx?REQUEST=GetCapabilities&VERSION=1.1.0&SERVICE=WMS
+Name:	de.Hessen topo 50
+MapType:	topo
+MainUrl:	http://lika.hessen.de/cgi-bin/lika-services/de-viewer/access/ogc-free-maps.plx?
+ServiceTypeUrlPart:	SERVICE=WMS 
+VersionUrlPart:	VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:	31467
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31467
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=ATKPG25-N1
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/png
+BoundingBoxTopLeftWGS84:	N 51.6697 E 7.69911
+BoundingBoxButtomRightWGS84:	N 49.3455 E 11.3986
+MinScale:	1.49671
+MaxScale:	49.8903
+RecommendedScale:	5.0
+ImageFileExtension: .png
+

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-mv_p.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-mv_p.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-mv_p.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,19 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://www.gaia-mv.de/dienste/DOP?REQUEST=GetCapabilities&VERSION=1.1.1&SERVICE=WMS
+Name:	de.Mecklenburg-Vorpommern photo
+MapType:	photo
+MainUrl:	http://www.gaia-mv.de/dienste/DOP?
+ServiceTypeUrlPart:	SERVICE=WMS 
+VersionUrlPart:	VERSION=1.1.1 
+CoordinateReferenceSystemCacheWolf: 31468 
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31468
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=DOP
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/jpeg
+BoundingBoxTopLeftWGS84:	N 54.8209 E 10.3394
+BoundingBoxButtomRightWGS84:	N 53.0392 E 14.477
+MinScale:	0.000374177136322228
+MaxScale:	37.4180878093591
+RecommendedScale:	0.4
+ImageFileExtension: .jpg

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-mv_t10.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-mv_t10.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-mv_t10.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,19 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://www.gaia-mv.de/dienste/DTK10f?REQUEST=GetCapabilities&VERSION=1.1.1&SERVICE=WMS
+Name:	de.Mecklenburg-Vorpommern topo 10
+MapType:	topo
+MainUrl:	http://www.gaia-mv.de/dienste/DTK10f?
+ServiceTypeUrlPart:	SERVICE=WMS 
+VersionUrlPart:	VERSION=1.1.1 
+CoordinateReferenceSystemCacheWolf: 31468 
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31468
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=DTK10f
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/png
+BoundingBoxTopLeftWGS84:	N 54.8209 E 10.3394
+BoundingBoxButtomRightWGS84:	N 53.0392 E 14.477
+MinScale:	0.186714391024792
+MaxScale:	11.2256882668032
+RecommendedScale:	1.0
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-mv_t25.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-mv_t25.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-mv_t25.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,19 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://www.gaia-mv.de/dienste/DTK25Vf?REQUEST=GetCapabilities&VERSION=1.1.1&SERVICE=WMS
+Name:	de.Mecklenburg-Vorpommern topo 25
+MapType:	topo
+MainUrl:	http://www.gaia-mv.de/dienste/DTK25Vf?
+ServiceTypeUrlPart:	SERVICE=WMS 
+VersionUrlPart:	VERSION=1.1.1 
+CoordinateReferenceSystemCacheWolf: 31468 
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31468
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=DTK25Vf
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/png
+BoundingBoxTopLeftWGS84:	N 54.8209 E 10.3394
+BoundingBoxButtomRightWGS84:	N 53.0392 E 14.477
+MinScale:	1.87051150447482
+MaxScale:	18.7092309932477
+RecommendedScale:	2.5
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-mv_t50.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-mv_t50.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-mv_t50.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,19 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://www.gaia-mv.de/dienste/DTK50Vf?REQUEST=GetCapabilities&VERSION=1.1.1&SERVICE=WMS
+Name:	de.Mecklenburg-Vorpommern topo 50
+MapType:	topo
+MainUrl:	http://www.gaia-mv.de/dienste/DTK50Vf?
+ServiceTypeUrlPart:	SERVICE=WMS 
+VersionUrlPart:	VERSION=1.1.1 
+CoordinateReferenceSystemCacheWolf: 31468 
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31468
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=DTK50Vf
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/png
+BoundingBoxTopLeftWGS84:	N 54.8209 E 10.3394
+BoundingBoxButtomRightWGS84:	N 53.0392 E 14.477
+MinScale:	5.6122828676971
+MaxScale:	28.0636594013034
+RecommendedScale:	5.0
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-ni_pt.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-ni_pt.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-ni_pt.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,20 @@
+TakenFromUrl:	http://www.umwelt.niedersachsen.de/master/C7065327_N6991478_L20_D0_I598.html
+GetCapabilitiesUrl:	http://geoportal.geodaten.niedersachsen.de/geodatenportal/servlet/gtEntryPoint?SERVICE=WMS&REQUEST=GetCapabilities&VERSION=1.1.1
+Name:	de.Niedersachsen photo/topo
+MapType:	photo
+MainUrl:	http://geoportal.geodaten.niedersachsen.de/geodatenportal/servlet/gtEntryPoint?
+ServiceTypeUrlPart:	SERVICE=WMS 
+VersionUrlPart:	VERSION=1.1.1 
+CoordinateReferenceSystemCacheWolf: 31466 31467 31468 31469
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31466 SRS=EPSG:31467 SRS=EPSG:31468 SRS=EPSG:31469
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=layer_1512,layer_1513,layer_1514,layer_1507,layer_1508,layer_1509,layer_1510,layer_1511,layer_1515
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/png
+# transformed from Gau?-Kr?ger into wgs84
+BoundingBoxTopLeftWGS84:	N 53.99192 E 006.62073
+BoundingBoxButtomRightWGS84:	N 51.27316 E 011.58000
+MinScale:	0.267412
+MaxScale:	59899.495
+RecommendedScale:	5.0
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-ni_t100.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-ni_t100.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-ni_t100.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,19 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://www.mapserver.niedersachsen.de/freezoneogc/mapserverogc?REQUEST=GetCapabilities&VERSION=1.1.1&SERVICE=WMS
+Name:	de.Niedersachsen topo 100
+MapType:	topo
+MainUrl:	http://www.mapserver.niedersachsen.de/freezoneogc/mapserverogc?
+ServiceTypeUrlPart:	SERVICE=WMS 
+VersionUrlPart:	VERSION=1.1.1 
+CoordinateReferenceSystemCacheWolf: 31467
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31467
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=TK100
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/png
+BoundingBoxTopLeftWGS84:	N 54.940306 E 6.180364
+BoundingBoxButtomRightWGS84:	N 50.502795 E 13.683332
+MinScale:	6.76160460880501
+MaxScale:	52.82503600628914
+RecommendedScale:	15.0
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-nw_p.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-nw_p.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-nw_p.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,20 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://www.gis2.nrw.de/wmsconnector/wms/luftbild?REQUEST=GetCapabilities&VERSION=1.1.0&SERVICE=WMS	
+Name:	de.Nordrhein-Westfalen photo
+MainUrl:	http://www.gis2.nrw.de/wmsconnector/wms/luftbild? 
+MapType: photo
+ServiceTypeUrlPart:	SERVICE=WMS 
+VersionUrlPart:	VERSION=1.1.0 
+CoordinateReferenceSystemCacheWolf:	31466 31467
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31466 SRS=EPSG:31467
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=Orthophoto%20Str.%202,Orthophoto%20Str.%203
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/png
+BoundingBoxTopLeftWGS84:	N 52.7691 E 5.673
+BoundingBoxButtomRightWGS84:	N 49.9944 E 10.142
+MinScale:	0.1795783591567183
+MaxScale:	5.611823723647454
+RecommendedScale:	0.5
+ImageFileExtension: .png
+

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-nw_t10.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-nw_t10.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-nw_t10.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,19 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://www.geoserver.nrw.de/GeoOgcWms1.3/servlet/DTK10?SERVICE=WMS&REQUEST=GetCapabilities&VERSION=1.1.0
+Name:   de.Nordrhein-Westfalen topo 10
+MapType:	topo
+MainUrl:   http://www.geoserver.nrw.de:80/GeoOgcWms1.3/servlet/DTK10?
+ServiceTypeUrlPart:	SERVICE=WMS
+VersionUrlPart:	VERSION=1.1.0
+CoordinateReferenceSystemCacheWolf:	31466 31467
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31466 SRS=EPSG:31467
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=Raster%3ADTK10%3ADtk10G
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/png
+BoundingBoxTopLeftWGS84:	N 52.7729742 E 5.672412
+BoundingBoxButtomRightWGS84:	N 49.998341 E 10.1417782
+MinScale:   0.0
+MaxScale:   14.001
+RecommendedScale:	1
+ImageFileExtension:	.png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-nw_t25.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-nw_t25.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-nw_t25.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,21 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://www.geoserver.nrw.de/GeoOgcWms1.3/servlet/TK25?REQUEST=GetCapabilities&VERSION=1.1.0&SERVICE=WMS
+Name:   de.Nordrhein-Westfalen topo 25
+MapType:	topo
+MainUrl:	http://www.geoserver.nrw.de:80/GeoOgcWms1.3/servlet/TK25?
+ServiceTypeUrlPart:	SERVICE=WMS
+VersionUrlPart:	VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:	31466 31467
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31466 SRS=EPSG:31467
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=Raster%3ATK25%5FKMF%3AFarbkombination
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/png
+BoundingBoxTopLeftWGS84:	N 52.7691 E 05.673
+BoundingBoxButtomRightWGS84:	N 49.9944 E 010.142
+MinScale:   0.0
+# the hintscale delivered from the getCapilibitiesUrl is a little bit higher (11.667) but this leads sometimes to empty maps
+# I tested that 11.0485 is probably the real MaxScale
+MaxScale:   11.0485
+RecommendedScale:	2.5
+ImageFileExtension:	.png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-nw_t50.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-nw_t50.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-nw_t50.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,19 @@
+TakenFromUrl:   http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Dialogbox
+GetCapabilitiesUrl:   http://www.geoserver.nrw.de/GeoOgcWms1.3/servlet/TK50?SERVICE=WMS&REQUEST=GetCapabilities&VERSION=1.1.0
+Name: de.Nordrhein-Westfalen topo 50
+MapType:   topo
+MainUrl:   http://www.geoserver.nrw.de:80/GeoOgcWms1.3/servlet/TK50?
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.0
+CoordinateReferenceSystemCacheWolf:   31466 31467
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:31466 SRS=EPSG:31467
+RequestUrlPart:   REQUEST=GetMap
+LayersUrlPart:   LAYERS=Raster%3ATK50%5FKMF%3AFarbkombination
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 52.7691 E 5.673
+BoundingBoxButtomRightWGS84:   N 49.9944 E 10.142
+MinScale:   0.0
+MaxScale:   23.335
+RecommendedScale:   5
+ImageFileExtension: .png
\ No newline at end of file

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-rp_p.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-rp_p.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-rp_p.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,28 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://geodaten.service24.rlp.de/cgi-bin/wms.cgi?REQUEST=GetCapabilities&VERSION=1.1.0&SERVICE=WMS
+Name:	de.Rheinland-Pfalz photo
+MapType:	photo
+MainUrl:	http://geodaten.service24.rlp.de/cgi-bin/wms.cgi?
+ServiceTypeUrlPart:	SERVICE=WMS 
+VersionUrlPart:	VERSION=1.1.1 
+CoordinateReferenceSystemCacheWolf:   31466 31467
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:31466 SRS=EPSG:31467
+RequestUrlPart:   REQUEST=GetMap
+#LayersUrlPart:     LAYERS=rlp:rlp|VermKV RLP||
+#LayersUrlPart:     LAYERS=rlp:ovw|?bersichtskarte Relief|100.001|5000
+#LayersUrlPart:     LAYERS=freedop:dop|Luftbilder|0.495|24.95
+#LayersUrlPart:     LAYERS=rlp:uek500|?bersichtskarte 1:500.000|60.001|100
+#LayersUrlPart:     LAYERS=rlp:uek250|?bersichtskarte 1:250.000|30.001|60
+#LayersUrlPart:     LAYERS=rlp:tk100|TK 1:100.000|15.001|30
+#LayersUrlPart:     LAYERS=rlp:tk50|TK 1:50.000|8.001|15
+#LayersUrlPart:     LAYERS=rlp:tk25|TK 1:25.000|1|8
+#LayersUrlPart:     LAYERS=likar:likar|Liegenschaftskarte-WA|0.001|3
+LayersUrlPart:   LAYERS=freedop%3Adop
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 50.400 E 6.000
+BoundingBoxButtomRightWGS84:   N 49.300 E 8.200
+MinScale:   0.5
+MaxScale:   24.95
+RecommendedScale:	0.4
+ImageFileExtension: .png 

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-rp_t50.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-rp_t50.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-rp_t50.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,28 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://geodaten.service24.rlp.de/cgi-bin/wms.cgi?REQUEST=GetCapabilities&VERSION=1.1.0&SERVICE=WMS
+Name:	de.Rheinland-Pfalz topo 50
+MapType:	topo
+MainUrl:	http://geodaten.service24.rlp.de/cgi-bin/wms.cgi?
+ServiceTypeUrlPart:	SERVICE=WMS 
+VersionUrlPart:	VERSION=1.1.1 
+CoordinateReferenceSystemCacheWolf:   31466 31467
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:31466 SRS=EPSG:31467
+#LayersUrlPart:     LAYERS=rlp:rlp|VermKV RLP||
+#LayersUrlPart:     LAYERS=rlp:ovw|?bersichtskarte Relief|100.001|5000
+#LayersUrlPart:     LAYERS=freedop:dop|Luftbilder|0.495|24.95
+#LayersUrlPart:     LAYERS=rlp:uek500|?bersichtskarte 1:500.000|60.001|100
+#LayersUrlPart:     LAYERS=rlp:uek250|?bersichtskarte 1:250.000|30.001|60
+#LayersUrlPart:     LAYERS=rlp:tk100|TK 1:100.000|15.001|30
+#LayersUrlPart:     LAYERS=rlp:tk50|TK 1:50.000|8.001|15
+#LayersUrlPart:     LAYERS=rlp:tk25|TK 1:25.000|1|8
+#LayersUrlPart:     LAYERS=likar:likar|Liegenschaftskarte-WA|0.001|3
+RequestUrlPart:   REQUEST=GetMap
+LayersUrlPart:   LAYERS=rlp%3Atk50
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 50.400 E 6.000
+BoundingBoxButtomRightWGS84:   N 49.300 E 8.200
+MinScale:   1
+MaxScale:   45
+RecommendedScale:	5.0
+ImageFileExtension: .png 
\ No newline at end of file

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-th_p.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-th_p.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-th_p.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,20 @@
+TakenFromUrl:	http://www.thueringen.de/de/tlvermgeo/onlineservice/web_map_service/content.html
+GetCapabilitiesUrl:	http://www.webmap-test.thueringen.de/deegreewms/wms?service=WMS&version=1.1.1&request=GetCapabilities
+Name:	de.Thueringen photo
+MapType:	photo
+MainUrl:	http://www.webmap-test.thueringen.de/deegreewms/wms?
+ServiceTypeUrlPart:	SERVICE=WMS 
+VersionUrlPart:	VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:	31468
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31468
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=Orthophotos_TH-2m
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/jpeg
+BoundingBoxTopLeftWGS84:	N 52.0000 E 9.5000
+BoundingBoxButtomRightWGS84:	N 50.0000 E 13.0000
+MinScale:   0.399122
+MaxScale:   9.97806
+RecommendedScale:   2.0
+ImageFileExtension: .jpg
+

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de-th_t50.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de-th_t50.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de-th_t50.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,20 @@
+TakenFromUrl:	http://www.thueringen.de/de/tlvermgeo/onlineservice/web_map_service/content.html
+GetCapabilitiesUrl:	http://www.webmap-test.thueringen.de/deegreewms/wms?service=WMS&version=1.1.1&request=GetCapabilities
+Name:	de.Thueringen topo 50
+MapType:	topo
+MainUrl:	http://www.webmap-test.thueringen.de/deegreewms/wms?
+ServiceTypeUrlPart:	SERVICE=WMS 
+VersionUrlPart:	VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:	31468
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31468
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=Top.Karte_50_gesamt
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/png
+BoundingBoxTopLeftWGS84:	N 52.0000 E 9.5000
+BoundingBoxButtomRightWGS84:	N 50.0000 E 13.0000
+MinScale:	1.49671
+MaxScale:	49.8903
+RecommendedScale:	5.0
+ImageFileExtension: .png
+

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de_t.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de_t.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de_t.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,19 @@
+TakenFromUrl:   http://www.wheregroup.com/de/freier_wms_mit_openstreetmap_daten
+GetCapabilitiesUrl:   http://osm.wheregroup.com/cgi-bin/mapserv?map=/data/umn/osm/osm_basic.map&REQUEST=GetCapabilities&SERVICE=WMS&VERSION=1.1.1   
+Name:   de OSM
+MainUrl:   http://osm.wheregroup.com/cgi-bin/osm_basic.xml?
+MapType: topo
+ServiceTypeUrlPart:   SERVICE=WMS 
+VersionUrlPart:   VERSION=1.1.1 
+CoordinateReferenceSystemCacheWolf:   31467 4326
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:31467 SRS=EPSG:4326
+RequestUrlPart:   REQUEST=GetMap
+LayersUrlPart:   LAYERS=Landwirtschaft,Industriegebiet,Bauland,Gruenflaeche,unkultiviertes_Land,Park,Naherholungsgebiet,Wald,Wiese,Wasser,Fluesse,Baeche,Kanal,Insel,Kueste,Strand,Fussgaengerzone,Fussgaengerweg,Radweg,Wege,Wohnstrasse,Zufahrtswege,einfache_Strasse,Landstrasse,Bundesstrasse,Kraftfahrstrasse,Autobahn,Ortschaft,Weiler,Dorf,Stadt,Grossstadt,Bahn,Bahnhof,Gebaeude
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 55.0960681 E 6.07358734
+BoundingBoxButtomRightWGS84:   N 47.161701 E 16.05521058
+MinScale:   0.6
+MaxScale:   99.99
+RecommendedScale:   1
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de_t1000.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de_t1000.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de_t1000.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,20 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://gdz1.leipzig.ifag.de/servlet/com.esri.wms.Esrimap?servicename=dtk200_500_1000_a10_gk4_wms&service=WMS&version=1.1.1&request=GetCapabilities
+Name:	de topo 1000
+MainUrl:	http://gdz1.leipzig.ifag.de/servlet/com.esri.wms.Esrimap?servicename=dtk200_500_1000_a10_gk4_wms&
+MapType:	topo
+ServiceTypeUrlPart:	SERVICE=WMS
+VersionUrlPart:	VERSION=1.1.0
+CoordinateReferenceSystemCacheWolf:	31468 
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31468
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=DTK1000
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/png
+BoundingBoxTopLeftWGS84:	N 54.937 E 6.00242837
+BoundingBoxButtomRightWGS84:	N 46.95 E 16.12332498
+# there is no scale hint in the getCapabilities answer :-( --> allow all
+#MinScale:	0.01
+#MaxScale:	40
+RecommendedScale:	100
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de_t200.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de_t200.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de_t200.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,20 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://gdz1.leipzig.ifag.de/servlet/com.esri.wms.Esrimap?servicename=dtk200_500_1000_a10_gk4_wms&service=WMS&version=1.1.1&request=GetCapabilities
+Name:	de topo 200
+MainUrl:	http://gdz1.leipzig.ifag.de/servlet/com.esri.wms.Esrimap?servicename=dtk200_500_1000_a10_gk4_wms&
+MapType:	topo
+ServiceTypeUrlPart:	SERVICE=WMS
+VersionUrlPart:	VERSION=1.1.0
+CoordinateReferenceSystemCacheWolf:	31468 
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31468
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=DTK200-V
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/png
+BoundingBoxTopLeftWGS84:	N 55.0960681 E 6.07358734
+BoundingBoxButtomRightWGS84:	N 47.161701 E 16.05521058
+# there is no scale hint in the getCapabilities answer :-( --> allow all
+#MinScale:	0.01
+#MaxScale:	40
+RecommendedScale:	20
+ImageFileExtension: .png
\ No newline at end of file

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/de_t500.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/de_t500.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/de_t500.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,20 @@
+TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
+GetCapabilitiesUrl:	http://gdz1.leipzig.ifag.de/servlet/com.esri.wms.Esrimap?servicename=dtk200_500_1000_a10_gk4_wms&service=WMS&version=1.1.1&request=GetCapabilities
+Name:	de topo 500
+MainUrl:	http://gdz1.leipzig.ifag.de/servlet/com.esri.wms.Esrimap?servicename=dtk200_500_1000_a10_gk4_wms&
+MapType:	topo
+ServiceTypeUrlPart:	SERVICE=WMS
+VersionUrlPart:	VERSION=1.1.0
+CoordinateReferenceSystemCacheWolf:	31468 
+CoordinateReferenceSystemUrlPart:	SRS=EPSG:31468
+RequestUrlPart:	REQUEST=GetMap
+LayersUrlPart:	LAYERS=DTK500-V
+StylesUrlPart:	STYLES=
+ImageFormatUrlPart:	FORMAT=image/png
+BoundingBoxTopLeftWGS84:	N 54.9369973 E 6.00184962
+BoundingBoxButtomRightWGS84:	N 46.959702 E 16.12339886
+# there is no scale hint in the getCapabilities answer :-( --> allow all
+#MinScale:	0.01
+#MaxScale:	40
+RecommendedScale:	50
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/es-an_p.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/es-an_p.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/es-an_p.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,20 @@
+TakenFromUrl:   http://www.idee.es/CatalogoServicios/cat2/indexWMS.html
+GetCapabilitiesUrl:   http://www.juntadeandalucia.es/medioambiente/servmap/wms/LANDSAT2004?REQUEST=GetCapabilities&SERVICE=WMS
+Name:   es.andalucia photo
+MapType:   photo
+MainUrl:   http://www.juntadeandalucia.es/medioambiente/servmap/wms/LANDSAT2004?
+LayersName:
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:   4326
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:4326
+RequestUrlPart:   REQUEST=GetMap
+LayersUrlPart:   LAYERS=0
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 38.748  W 7.587
+BoundingBoxButtomRightWGS84:   N 35.947 W 1.602
+MinScale:   0
+MaxScale:   49.8902848429637
+RecommendedScale:   1.000
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/es-an_t.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/es-an_t.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/es-an_t.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,20 @@
+TakenFromUrl:   http://www.andaluciajunta.es/IDEAndalucia/OGC.shtml#ogc18
+GetCapabilitiesUrl:   http://andaluciajunta.es/IDEAndalucia/IDEAwms/wms/mta10r_95?REQUEST=GetCapabilities&SERVICE=WMS
+Name:   es.andalucia topo 10_95
+MapType:   topo
+MainUrl:   http://andaluciajunta.es/IDEAndalucia/IDEAwms/wms/mta10r_95?
+LayersName:
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:   4326
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:4326
+RequestUrlPart:   REQUEST=GetMap
+LayersUrlPart:   LAYERS=mta10r
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 38.748  W 7.587
+BoundingBoxButtomRightWGS84:   N 35.947 W 1.602
+MinScale:   0
+MaxScale:   49.8902848429637
+RecommendedScale:   5.000
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/es-an_t1.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/es-an_t1.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/es-an_t1.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,20 @@
+TakenFromUrl:   http://www.andaluciajunta.es/IDEAndalucia/OGC.shtml#ogc2
+GetCapabilitiesUrl:   http://andaluciajunta.es/IDEAndalucia/IDEAwms/wms/mta10r?REQUEST=GetCapabilities&SERVICE=WMS
+Name:   es.andalucia topo 10
+MapType:   topo
+MainUrl:   http://andaluciajunta.es/IDEAndalucia/IDEAwms/wms/mta10r?
+LayersName:
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:   4326
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:4326
+RequestUrlPart:   REQUEST=GetMap
+LayersUrlPart:   LAYERS=mta10r
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 38.748  W 7.587
+BoundingBoxButtomRightWGS84:   N 35.947 W 1.602
+MinScale:   0
+MaxScale:   49.8902848429637
+RecommendedScale:   5.000
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/es-ar_p.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/es-ar_p.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/es-ar_p.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,34 @@
+TakenFromUrl:   http://www.idee.es/CatalogoServicios/cat2/indexWMS.html
+GetCapabilitiesUrl:   http://sitar.aragon.es/AragonWMS?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities
+Name:   es.aragon photo
+MapType:   photo
+MainUrl:   http://sitar.aragon.es/AragonWMS?
+LayersName: Carretera
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:   4326
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:4326
+RequestUrlPart:   REQUEST=GetMap
+#
+#LayersUrlPart:   LAYERS=ComunidadAutonoma,Provincia # Skal 260-2080
+#LayersUrlPart:   LAYERS=Comarca,ToponimoComarca # Skal 91-260
+#LayersUrlPart:   LAYERS=Municipio,Ferrocarril,Localidad,Altimetria,Carretera,Rio,ToponimoLocalidad,ToponimoMunicipio # skal 3,9-91
+#LayersUrlPart:   LAYERS=Planimetria5000,CurvaDirectora5000,CurvaNivel5000 # skal 0-1,3
+#LayersUrlPart:   LAYERS=Alti1000Ter,Alti1000Hue,Alti1000Zar,Plani1000Ter,Plani1000Hue,Plani1000Zar # skal 0-0,9
+#LayersUrlPart:   LAYERS=ComarcaLocalidad,ToponimoProvincia,ToponimoRio
+#LayersUrlPart:   LAYERS=Ortofoto,FechaOrtofoto,PNOA_2006_30,PNOA_2006_31
+#
+#LayersUrlPart:   LAYERS=Ortofoto #Skal=0,6..3,9; 4 geht auch
+#LayersUrlPart:   LAYERS=Carretera #Skal ab 5 geht
+#LayersUrlPart:   LAYERS=Municipio # Kommunalgrenzen
+#
+#LayersUrlPart:   LAYERS=Municipio,Ferrocarril,Localidad,Altimetria,Carretera,Rio,ToponimoLocalidad,ToponimoMunicipio
+LayersUrlPart:   LAYERS=Ortofoto,Planimetria5000,CurvaDirectora5000,CurvaNivel5000
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 42.945  W 2.19
+BoundingBoxButtomRightWGS84:   N 39.813 E 0.805
+MinScale:   0
+MaxScale:   72
+RecommendedScale:   1
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/es-ar_t.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/es-ar_t.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/es-ar_t.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,34 @@
+TakenFromUrl:   http://www.idee.es/CatalogoServicios/cat2/indexWMS.html
+GetCapabilitiesUrl:   http://sitar.aragon.es/AragonWMS?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities
+Name:   es.aragon topo
+MapType:   topo
+MainUrl:   http://sitar.aragon.es/AragonWMS?
+LayersName: Carretera
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:   4326
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:4326
+RequestUrlPart:   REQUEST=GetMap
+#
+#LayersUrlPart:   LAYERS=ComunidadAutonoma,Provincia # Skal 260-2080
+#LayersUrlPart:   LAYERS=Comarca,ToponimoComarca # Skal 91-260
+#LayersUrlPart:   LAYERS=Municipio,Ferrocarril,Localidad,Altimetria,Carretera,Rio,ToponimoLocalidad,ToponimoMunicipio # skal 3,9-91
+#LayersUrlPart:   LAYERS=Planimetria5000,CurvaDirectora5000,CurvaNivel5000 # skal 0-1,3
+#LayersUrlPart:   LAYERS=Alti1000Ter,Alti1000Hue,Alti1000Zar,Plani1000Ter,Plani1000Hue,Plani1000Zar # skal 0-0,9
+#LayersUrlPart:   LAYERS=ComarcaLocalidad,ToponimoProvincia,ToponimoRio
+#LayersUrlPart:   LAYERS=Ortofoto,FechaOrtofoto,PNOA_2006_30,PNOA_2006_31
+#
+#LayersUrlPart:   LAYERS=Ortofoto #Skal=0,6..3,9; 4 geht auch
+#LayersUrlPart:   LAYERS=Carretera #Skal ab 5 geht
+#LayersUrlPart:   LAYERS=Municipio # Kommunalgrenzen
+#
+LayersUrlPart:   LAYERS=Municipio,Ferrocarril,Localidad,Altimetria,Carretera,Rio,ToponimoLocalidad,ToponimoMunicipio
+#LayersUrlPart:   LAYERS=Ortofoto,Planimetria5000,CurvaDirectora5000,CurvaNivel5000
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 42.945  W 2.19
+BoundingBoxButtomRightWGS84:   N 39.813 E 0.805
+MinScale:   0
+MaxScale:   72
+RecommendedScale:   5
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/es-cn_p.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/es-cn_p.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/es-cn_p.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,21 @@
+TakenFromUrl:       http://idecan1.grafcan.es/ServicioWMS/OrtoExpress?
+GetCapabilitiesUrl: http://idecan1.grafcan.es/ServicioWMS/OrtoExpress?REQUEST=GetCapabilities&SERVICE=WMS&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities
+Name:               es.Canarias photo
+MapType:                        photo
+MainUrl:            http://idecan1.grafcan.es/ServicioWMS/OrtoExpress?REQUEST=GetCapabilities&SERVICE=WMS&
+ServiceTypeUrlPart: SERVICE=WMS
+VersionUrlPart:     VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:  4326
+CoordinateReferenceSystemUrlPart: SRS=EPSG:4326 
+RequestUrlPart:     REQUEST=GetMap
+#LayersUrlPart:     LAYERS=WMS_OrtoExpress|IDECanarias OrtoExpress||
+#LayersUrlPart:     LAYERS=ortoexpress|OrtoExpress||
+LayersUrlPart:     LAYERS=WMS_OrtoExpress
+StylesUrlPart:     STYLES=
+ImageFormatUrlPart:FORMAT=image/jpeg
+BoundingBoxTopLeftWGS84: N 29.8305 W 18.3099
+BoundingBoxButtomRightWGS84: N 26.1839 W 13.1373
+MinScale:   0
+MaxScale:   45
+RecommendedScale:   5
+ImageFileExtension: .jpg

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/es-cn_t.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/es-cn_t.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/es-cn_t.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,20 @@
+TakenFromUrl:   http://www.idecan.grafcan.es/idecan/content/view/24/36/#servicio2
+GetCapabilitiesUrl:   http://idecan2.grafcan.es/ServicioWMS/carto5?REQUEST=GetCapabilities&SERVICE=WMS
+Name:   es.Canarias topo
+MapType:   topo
+MainUrl:   http://idecan2.grafcan.es/ServicioWMS/carto5?
+LayersName:
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:   4326
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:4326
+RequestUrlPart:   REQUEST=GetMap
+LayersUrlPart:   LAYERS=WMS_CARTO5
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 29.8305 W 18.3099
+BoundingBoxButtomRightWGS84:   N 26.1839 W 13.137
+MinScale:   1.49671
+MaxScale:   174.0000
+RecommendedScale:   5.000
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/es-cn_ts.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/es-cn_ts.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/es-cn_ts.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,22 @@
+TakenFromUrl:   http://www.idee.es/CatalogoServicios/cat2/indexWMS.html
+GetCapabilitiesUrl:   http://idecan2.grafcan.es/ServicioWMS/Callejero?REQUEST=GetCapabilities&SERVICE=WMS
+Name:   es.Canarias streets
+MapType:   topo
+MainUrl:   http://idecan2.grafcan.es/ServicioWMS/Callejero?
+LayersName:
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:   4326
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:4326
+RequestUrlPart:   REQUEST=GetMap
+#LayersUrlPart:   LAYERS=TOPO,CONS,VIAS,MUN,FONDO,NUMP,POI
+LayersUrlPart:   LAYERS=WMS_CA
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 29.8305 W 18.3099
+BoundingBoxButtomRightWGS84:   N 26.1839 W 13.137
+MinScale:   0
+MaxScale:   2500.0000
+RecommendedScale:   5.000
+#RecommendedScale:   1.000 da stehen dann auch Strassennamen mit drin
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/fr_t.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/fr_t.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/fr_t.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,41 @@
+TakenFromUrl:       http://www.geosignal.org/cgi-bin/wmsmap?version=1.1.1&service=WMS&request=GetLegendGraphic&layer=Voirie&format=image/png
+GetCapabilitiesUrl: http://www.geosignal.org/cgi-bin/wmsmap?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities
+Name:               fr topo 4000
+MapType:                        topo
+MainUrl:            http://www.geosignal.org/cgi-bin/wmsmap?
+ServiceTypeUrlPart: SERVICE=WMS
+VersionUrlPart:     VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:  4326
+CoordinateReferenceSystemUrlPart: SRS=EPSG:4326 
+RequestUrlPart:     REQUEST=GetMap
+#LayersUrlPart:     LAYERS=Serveur Geosignal|Serveur Geosignal||
+#LayersUrlPart:     LAYERS=Monde|Pays du monde||
+#LayersUrlPart:     LAYERS=RASTER4000k|Raster France 1/4 000 000|935.443|0
+#LayersUrlPart:     LAYERS=RASTER1000k|Raster France 1/1 000 000|280.633|935.443
+#LayersUrlPart:     LAYERS=RASTER500k|Raster France 1/500 000|140.316|280.633
+#LayersUrlPart:     LAYERS=RASTER250k|Raster France 1/250 000|65.481|140.316
+#LayersUrlPart:     LAYERS=RASTER100k|Raster France 1/100 000|28.0633|65.481
+#LayersUrlPart:     LAYERS=RASTER50k|Raster France 1/50 000|14.0316|28.0633
+#LayersUrlPart:     LAYERS=RASTER25k|Raster France 1/25 000|5.61266|14.0316
+#LayersUrlPart:     LAYERS=RASTER5k|Raster France 1/5 000|0.374177|5.61266
+#LayersUrlPart:     LAYERS=Communes|Communes||
+#LayersUrlPart:     LAYERS=Cantons|Cantons||
+#LayersUrlPart:     LAYERS=Arrondissements|Arrondissements||
+#LayersUrlPart:     LAYERS=Departements|Departements||
+#LayersUrlPart:     LAYERS=Regions|Regions||
+#LayersUrlPart:     LAYERS=Voirie|Voirie urbaine||
+#LayersUrlPart:     LAYERS=Autres|Autres equipements routiers||
+#LayersUrlPart:     LAYERS=Secondaires|Routes Secondaires||
+#LayersUrlPart:     LAYERS=Departementales|Routes Departementales||
+#LayersUrlPart:     LAYERS=Nationales|Routes Nationales||
+#LayersUrlPart:     LAYERS=Autoroutes|Autoroutes||
+#LayersUrlPart:     LAYERS=CommunesXY|Ponctuels des communes||
+LayersUrlPart:     LAYERS=RASTER4000k,Communes,Cantons,Arrondissements,Departements,Regions,Voirie,Autres,Secondaires,Departementales,Nationales,Autoroutes,CommunesXY
+StylesUrlPart:     STYLES=
+ImageFormatUrlPart:FORMAT=image/png
+BoundingBoxTopLeftWGS84: N 51.2918 W 6.06258
+BoundingBoxButtomRightWGS84: N 41.1632 E 10.8783
+MinScale:   0
+MaxScale:   45
+RecommendedScale:   5
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/it-88_m.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/it-88_m.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/it-88_m.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,30 @@
+TakenFromUrl:   http://wiki.gfoss.it/index.php/GIS_Open_Data#Italia
+GetCapabilitiesUrl:   http://webgis.regione.sardegna.it/wmsconnector/com.esri.wms.Esrimap/ras_wms?request=getcapabilities&service=WMS&version=1.1.1
+Name:   it.Sardinien photo+topo10
+MapType:   topo
+MainUrl:   http://webgis.regione.sardegna.it/wmsconnector/com.esri.wms.Esrimap/ras_wms?
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:   3003
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:3003
+RequestUrlPart:   REQUEST=GetMap
+# Topographisch schwarz/weiss
+#LayersUrlPart:   LAYERS=CTR10K%20raster
+# Luftbild farbig
+#LayersUrlPart:   LAYERS=mosaico_2006IT_1,mosaico_2006IT_2,mosaico_2006IT_3,mosaico_2006IT_4,mosaico_2006IT_5,mosaico_2006IT_6,mosaico_2006IT_7,mosaico_2006IT_8,mosaico_2006IT_9,CTR10K%20raster
+# Luftbild schwarz/weiss
+#LayersUrlPart:   LAYERS=sardegna_2003gb_1,sardegna_2003gb_2,sardegna_2003gb_3,sardegna_2003gb_4,sardegna_2003gb_5,sardegna_2003gb_6,sardegna_2003gb_7,sardegna_2003gb_8,sardegna_2003gb_9,CTR10K%20raster
+# farbiges Luftbild mit Raterdaten ?berlagert 
+#LayersUrlPart:   LAYERS=mosaico_2006IT_1,CTR10K%20raster
+# farbiges Luftbild anscheinend nur die layer entsprchend der Skalierung angeben ( es tun nur die Skalierungen 1 bis 4)
+#LayersUrlPart:   LAYERS=mosaico_2006IT_1
+LayersUrlPart:   LAYERS=mosaico_2006IT_1,CTR10K%20raster
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 41.400307 E 7.964019
+BoundingBoxButtomRightWGS84:   N 38.792131 E 10.022418
+MinScale:   1
+MaxScale:   3
+#RecommendedScale:   1.000 sonst kann man die Topodaten nicht lesen bzw es werden keine Fotos geladen
+RecommendedScale:   1.000
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/it-88_p.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/it-88_p.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/it-88_p.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,30 @@
+TakenFromUrl:   http://wiki.gfoss.it/index.php/GIS_Open_Data#Italia
+GetCapabilitiesUrl:   http://webgis.regione.sardegna.it/wmsconnector/com.esri.wms.Esrimap/ras_wms?request=getcapabilities&service=WMS&version=1.1.1
+Name:   it.Sardinien photo
+MapType:   photo
+MainUrl:   http://webgis.regione.sardegna.it/wmsconnector/com.esri.wms.Esrimap/ras_wms?
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:   3003
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:3003
+RequestUrlPart:   REQUEST=GetMap
+# Topographisch schwarz/weiss
+#LayersUrlPart:   LAYERS=CTR10K%20raster
+# Luftbild farbig
+#LayersUrlPart:   LAYERS=mosaico_2006IT_1,mosaico_2006IT_2,mosaico_2006IT_3,mosaico_2006IT_4,mosaico_2006IT_5,mosaico_2006IT_6,mosaico_2006IT_7,mosaico_2006IT_8,mosaico_2006IT_9,CTR10K%20raster
+# Luftbild schwarz/weiss
+#LayersUrlPart:   LAYERS=sardegna_2003gb_1,sardegna_2003gb_2,sardegna_2003gb_3,sardegna_2003gb_4,sardegna_2003gb_5,sardegna_2003gb_6,sardegna_2003gb_7,sardegna_2003gb_8,sardegna_2003gb_9,CTR10K%20raster
+# farbiges Luftbild mit Raterdaten ?berlagert 
+#LayersUrlPart:   LAYERS=mosaico_2006IT_1,CTR10K%20raster
+# farbiges Luftbild anscheinend nur die layer entsprchend der Skalierung angeben ( es tun nur die Skalierungen 1 bis 4)
+#LayersUrlPart:   LAYERS=mosaico_2006IT_1
+LayersUrlPart:   LAYERS=mosaico_2006IT_4
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 41.400307 E 7.964019
+BoundingBoxButtomRightWGS84:   N 38.792131 E 10.022418
+MinScale:   4
+MaxScale:   6
+# RecommendedScale:   1.000
+RecommendedScale:   4
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/it-88_t10.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/it-88_t10.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/it-88_t10.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,30 @@
+TakenFromUrl:   http://wiki.gfoss.it/index.php/GIS_Open_Data#Italia
+GetCapabilitiesUrl:   http://webgis.regione.sardegna.it/wmsconnector/com.esri.wms.Esrimap/ras_wms?request=getcapabilities&service=WMS&version=1.1.1
+Name:   it.Sardinien topo 10
+MapType:   topo
+MainUrl:   http://webgis.regione.sardegna.it/wmsconnector/com.esri.wms.Esrimap/ras_wms?
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:   3003
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:3003
+RequestUrlPart:   REQUEST=GetMap
+# Topographisch schwarz/weiss
+#LayersUrlPart:   LAYERS=CTR10K%20raster
+# Luftbild farbig
+#LayersUrlPart:   LAYERS=mosaico_2006IT_1,mosaico_2006IT_2,mosaico_2006IT_3,mosaico_2006IT_4,mosaico_2006IT_5,mosaico_2006IT_6,mosaico_2006IT_7,mosaico_2006IT_8,mosaico_2006IT_9,CTR10K%20raster
+# Luftbild schwarz/weiss
+#LayersUrlPart:   LAYERS=sardegna_2003gb_1,sardegna_2003gb_2,sardegna_2003gb_3,sardegna_2003gb_4,sardegna_2003gb_5,sardegna_2003gb_6,sardegna_2003gb_7,sardegna_2003gb_8,sardegna_2003gb_9,CTR10K%20raster
+# farbiges Luftbild mit Raterdaten ?berlagert 
+#LayersUrlPart:   LAYERS=mosaico_2006IT_1,CTR10K%20raster
+# farbiges Luftbild anscheinend nur die layer entsprchend der Skalierung angeben ( es tun nur die Skalierungen 1 bis 4)
+#LayersUrlPart:   LAYERS=mosaico_2006IT_1
+LayersUrlPart:   LAYERS=CTR10K%20raster
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/png
+BoundingBoxTopLeftWGS84:   N 41.400307 E 7.964019
+BoundingBoxButtomRightWGS84:   N 38.792131 E 10.022418
+MinScale:   1
+MaxScale:   3
+#RecommendedScale:   1 - 2.000 bei gr?sserer Skalierung wird es un?bersichtlich
+RecommendedScale:   1.000
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/it_t.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/it_t.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/it_t.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,19 @@
+TakenFromUrl: http://wiki.gfoss.it/index.php/GIS_Open_Data#Italia
+GetCapabilitiesUrl: http://151.13.182.121/geoserver/wms?service=WMS&request=GetCapabilities
+Name: it topo 25
+MapType: topo
+MainUrl: http://151.13.182.121/geoserver/wms?
+ServiceTypeUrlPart: SERVICE=WMS
+VersionUrlPart: VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf: 31466 31467 4326
+CoordinateReferenceSystemUrlPart: SRS=EPSG:31466 SRS=EPSG:31467 SRS=EPSG:4326
+RequestUrlPart: REQUEST=GetMap
+LayersUrlPart: LAYERS=cnr_imaa:igm25000
+StylesUrlPart: STYLES=raster
+ImageFormatUrlPart: FORMAT=image/png
+BoundingBoxTopLeftWGS84: N 47.165454 E 6.581957
+BoundingBoxButtomRightWGS84: N 35.485254 E 18.548357
+MinScale: 0.0
+MaxScale: 23.335
+RecommendedScale: 5
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/jp-t.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/jp-t.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/jp-t.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,37 @@
+TakenFromUrl:       http://www.esri.com
+GetCapabilitiesUrl: http://www.geographynetwork.ne.jp/ogc/wms?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities
+Name:               jp topo
+MapType:                        topo
+MainUrl:            http://www.geographynetwork.ne.jp/ogc/wms?
+ServiceTypeUrlPart: SERVICE=WMS
+VersionUrlPart:     VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:  4326
+CoordinateReferenceSystemUrlPart: SRS=EPSG:4326 
+RequestUrlPart:     REQUEST=GetMap
+#LayersUrlPart:     LAYERS=1|Hill Shade||
+#LayersUrlPart:     LAYERS=0|Elevation||
+#LayersUrlPart:     LAYERS=2|Cities||
+#LayersUrlPart:     LAYERS=3|Cities(small scale)||
+#LayersUrlPart:     LAYERS=4|Prefectures||
+#LayersUrlPart:     LAYERS=5|Rivers||
+#LayersUrlPart:     LAYERS=6|Rivers(small scale)||
+#LayersUrlPart:     LAYERS=7|Water||
+#LayersUrlPart:     LAYERS=8|Water(small scale)||
+#LayersUrlPart:     LAYERS=9|Streets||
+#LayersUrlPart:     LAYERS=10|Railways||
+#LayersUrlPart:     LAYERS=11|Railways(small scale)||
+#LayersUrlPart:     LAYERS=12|Stations||
+#LayersUrlPart:     LAYERS=13|Major Roads||
+#LayersUrlPart:     LAYERS=14|Major Roads(small scale)||
+#LayersUrlPart:     LAYERS=15|Location Name||
+#LayersUrlPart:     LAYERS=16|Public Facilities||
+#LayersUrlPart:     LAYERS=17|Control Points||
+LayersUrlPart:     LAYERS=1,0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17
+StylesUrlPart:     STYLES=
+ImageFormatUrlPart:FORMAT=image/png
+BoundingBoxTopLeftWGS84: N 45.576199 E 122.521907
+BoundingBoxButtomRightWGS84: N 20.424949 E 145.888782
+MinScale:   0
+MaxScale:   45
+RecommendedScale:   5
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/pt_t500.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/pt_t500.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/pt_t500.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,21 @@
+TakenFromUrl:       http://mapas.igeo.pt
+GetCapabilitiesUrl: http://mapas.igeo.pt/wms/sc500k?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities
+Name:               pt topo 500
+MapType:                        topo
+MainUrl:            http://mapas.igeo.pt/wms/sc500k?
+ServiceTypeUrlPart: SERVICE=WMS
+VersionUrlPart:     VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:  4326
+CoordinateReferenceSystemUrlPart: SRS=EPSG:4326 
+RequestUrlPart:     REQUEST=GetMap
+#LayersUrlPart:     LAYERS=500k|Servidor WMS Produtos IGP - Carta de Portugal 1:500 000 (Continente)|0.249451424214819|249451.424214819
+#LayersUrlPart:     LAYERS=sc500k|Carta de Portugal Continental 1:500.000|0.249451424214819|249451.424214819
+LayersUrlPart:     LAYERS=sc500k
+StylesUrlPart:     STYLES=
+ImageFormatUrlPart:FORMAT=image/png
+BoundingBoxTopLeftWGS84: N 42.2787 W 10.1943
+BoundingBoxButtomRightWGS84: N 36.7636 W 5.71067
+MinScale:   0
+MaxScale:   45
+RecommendedScale:   5
+ImageFileExtension: .png

Added: branches/bugfix_1.0/res_noewe/webmapservices/untested/us_t.wms
===================================================================
--- branches/bugfix_1.0/res_noewe/webmapservices/untested/us_t.wms	2009-05-22 07:37:24 UTC (rev 1838)
+++ branches/bugfix_1.0/res_noewe/webmapservices/untested/us_t.wms	2009-05-22 09:31:23 UTC (rev 1839)
@@ -0,0 +1,19 @@
+TakenFromUrl:   http://www.perrygeo.net/wordpress/?p=35
+GetCapabilitiesUrl:      -
+Name:   us topo 24
+MainUrl:   http://terraservice.net/ogcmap.ashx?
+MapType: topo
+ServiceTypeUrlPart:   SERVICE=WMS
+VersionUrlPart:   VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:   4326
+CoordinateReferenceSystemUrlPart:   SRS=EPSG:4326
+RequestUrlPart:   REQUEST=GetMap
+LayersUrlPart:   LAYERS=DRG
+StylesUrlPart:   STYLES=
+ImageFormatUrlPart:   FORMAT=image/jpeg
+BoundingBoxTopLeftWGS84:   N 75.0 W 179.9
+BoundingBoxButtomRightWGS84:   N 20.0 W 60.0
+MinScale:   0
+MaxScale:   45
+RecommendedScale:   5
+ImageFileExtension: .jpg



From mik77 at mail.berlios.de  Fri May 22 13:07:34 2009
From: mik77 at mail.berlios.de (mik77 at mail.berlios.de)
Date: Fri, 22 May 2009 13:07:34 +0200
Subject: [Cachewolf-svn] r1840 - in trunk: . src/CacheWolf
Message-ID: <200905221107.n4MB7YbZ021049@sheep.berlios.de>

Author: mik77
Date: 2009-05-22 13:07:05 +0200 (Fri, 22 May 2009)
New Revision: 1840

Modified:
   trunk/currentversions.txt
   trunk/src/CacheWolf/Version.java
Log:
Update of the version files for bugfix release 1.0.1839

Modified: trunk/currentversions.txt
===================================================================
--- trunk/currentversions.txt	2009-05-22 09:31:23 UTC (rev 1839)
+++ trunk/currentversions.txt	2009-05-22 11:07:05 UTC (rev 1840)
@@ -1,7 +1,7 @@
 # Release
 T0VersionMajor: 1
 T0VersionMinor: 0
-T0SvnRevision: 1532
+T0SvnRevision: 1839
 
 # ReleaseCandidate
 T1VersionMajor: 1
@@ -15,9 +15,9 @@
 
 # InDevelopmentNewest
 T3VersionMajor: 1
-T3VersionMinor: 0
+T3VersionMinor: 1
 #T3SvnRevision: http://flyingfish.freewrt.org:8180/job/Cachewolf/lastBuild/ (?i)Revision[\\s]*[:=][\\s]*[\\\\r]*[\\\\n]*[\\s]*([0-9]*)
 T3SvnRevision: http://pub.naturalnet.de/~nik/own/CacheWolf-BE/zcurrent.txt [\\s]*[\\\\r]*[\\\\n]*[\\s]*([0-9]*)
 
-RecommendedType: 3
+RecommendedType: 1
 

Modified: trunk/src/CacheWolf/Version.java
===================================================================
--- trunk/src/CacheWolf/Version.java	2009-05-22 09:31:23 UTC (rev 1839)
+++ trunk/src/CacheWolf/Version.java	2009-05-22 11:07:05 UTC (rev 1840)
@@ -13,7 +13,7 @@
 
 public class Version {
 	static final int VER_MAJOR = 1;
-	static final int VER_MINOR = 0;
+	static final int VER_MINOR = 1;
 	static final String VER_SVN ="$LastChangedRevision$"; // the number is automatically replaced by subversion to the latest versionnumer of this file (svn:keywords LastChangedRevision)
 	static final int SVN_REVISION = 20090512;
 	static final int VERSION_TYPE = 3;



From greiol at mail.berlios.de  Fri May 22 16:45:18 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Fri, 22 May 2009 16:45:18 +0200
Subject: [Cachewolf-svn] r1841 - in trunk/src: CacheWolf exp
Message-ID: <200905221445.n4MEjIkF031890@sheep.berlios.de>

Author: greiol
Date: 2009-05-22 16:45:15 +0200 (Fri, 22 May 2009)
New Revision: 1841

Modified:
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/SpiderGC.java
   trunk/src/exp/HTMLExporter.java
Log:
fix htmlexporter
set proper non error values for size, terrain and difficulty of AWs in gc.com spider

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-22 11:07:05 UTC (rev 1840)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-22 14:45:15 UTC (rev 1841)
@@ -900,7 +900,7 @@
 		setType(byteFromLong(value, 3));
 		setCacheSize(byteFromLong(value, 4));
 		setNoFindLogs((byteFromLong(value, 5)));
-		if ( ( (!isAddiWpt()) && ( getHard() == -1 || getTerrain() == 1 || getCacheSize() == -1 ) ) || (getType() == -1) ) {
+		if (( getHard() == -1 || getTerrain() == -1 || getCacheSize() == -1 ) || getType() == -1 ) {
 			setIncomplete(true);
 		}
 	}

Modified: trunk/src/CacheWolf/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/SpiderGC.java	2009-05-22 11:07:05 UTC (rev 1840)
+++ trunk/src/CacheWolf/SpiderGC.java	2009-05-22 14:45:15 UTC (rev 1841)
@@ -1371,6 +1371,9 @@
 				descRex.search(rowBlock);
 				hd.getFreshDetails().setLongDescription(descRex.stringMatched(1));
 				hd.setFound(is_found);
+				hd.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
+				hd.setHard(CacheTerrDiff.CW_DT_ADDITIONAL);
+				hd.setTerrain(CacheTerrDiff.CW_DT_ADDITIONAL);
 				if (idx<0){
 					cacheDB.add(hd);
 					hd.save();
@@ -1385,6 +1388,7 @@
 					}
 				}
 				rowBlock = exRowBlock.findNext();
+
 			}
 		}
 	}

Modified: trunk/src/exp/HTMLExporter.java
===================================================================
--- trunk/src/exp/HTMLExporter.java	2009-05-22 11:07:05 UTC (rev 1840)
+++ trunk/src/exp/HTMLExporter.java	2009-05-22 14:45:15 UTC (rev 1841)
@@ -85,12 +85,39 @@
 					det=ch.getExistingDetails();
 					varParams = new Hashtable();
 					varParams.put("TYPE", CacheType.cw2ExportString(ch.getType()));
-					varParams.put("SIZE", CacheSize.cw2ExportString(ch.getCacheSize()));
 					varParams.put("WAYPOINT", ch.getWayPoint());
 					varParams.put("NAME", ch.getCacheName());
 					varParams.put("OWNER", ch.getCacheOwner());
-					varParams.put("DIFFICULTY", CacheTerrDiff.longDT(ch.getHard()));
-					varParams.put("TERRAIN", CacheTerrDiff.longDT(ch.getTerrain()));
+					if (ch.isAddiWpt()) {
+						varParams.put("SIZE", "");
+						varParams.put("DIFFICULTY", "");
+						varParams.put("TERRAIN", "");
+					} else {
+						try {
+							varParams.put("SIZE", CacheSize.cw2ExportString(ch.getCacheSize()));
+						} catch (IllegalArgumentException ex) {
+							varParams.put("SIZE", "");
+							if (Global.getPref().debug) {
+								Global.getPref().log(ch.getWayPoint()+" has wrong size ", ex);
+							}
+						}
+						try {
+							varParams.put("DIFFICULTY", CacheTerrDiff.longDT(ch.getHard()));
+						} catch (IllegalArgumentException ex) {
+							varParams.put("DIFFICULTY", "");
+							if (Global.getPref().debug) {
+								Global.getPref().log(ch.getWayPoint()+" has wrong difficulty ", ex);
+							}
+						}
+						try {
+							varParams.put("TERRAIN", CacheTerrDiff.longDT(ch.getTerrain()));
+						} catch (IllegalArgumentException ex) {
+							varParams.put("TERRAIN", "");
+							if (Global.getPref().debug) {
+								Global.getPref().log(ch.getWayPoint()+" has wrong terrain ", ex);
+							}
+						}
+					}
 					varParams.put("DISTANCE", ch.getDistance());
 					varParams.put("BEARING", ch.bearing);
 					varParams.put("LATLON", ch.LatLon);



From greiol at mail.berlios.de  Fri May 22 18:40:50 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Fri, 22 May 2009 18:40:50 +0200
Subject: [Cachewolf-svn] r1842 - trunk/src/CacheWolf
Message-ID: <200905221640.n4MGeoab022035@sheep.berlios.de>

Author: greiol
Date: 2009-05-22 18:40:48 +0200 (Fri, 22 May 2009)
New Revision: 1842

Modified:
   trunk/src/CacheWolf/DetailsPanel.java
   trunk/src/CacheWolf/myTableModel.java
Log:
only show threaddumps if in  debug mode

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-05-22 14:45:15 UTC (rev 1841)
+++ trunk/src/CacheWolf/DetailsPanel.java	2009-05-22 16:40:48 UTC (rev 1842)
@@ -213,21 +213,28 @@
 		chcSize.setInt(ch.getCacheSize());
 
 		attV.showImages(ch.getCacheDetails(true).attributes);
-		try {
-			lblTerr.setText((ch.getTerrain() != CacheTerrDiff.CW_DT_ERROR) ? 
-				(MyLocale.getMsg(1001,"T")+": "+CacheTerrDiff.longDT(ch.getTerrain())) : "");
-		} catch (IllegalArgumentException ex) {
-			ch.setTerrain(CacheTerrDiff.CW_DT_ERROR);
-			ch.setIncomplete(true);
+		if (ch.isAddiWpt()) {
 			lblTerr.setText("");
-		}
-		try {
-			lblDiff.setText((ch.getHard() != CacheTerrDiff.CW_DT_ERROR) ? 
-				(MyLocale.getMsg(1000,"D")+": "+CacheTerrDiff.longDT(ch.getHard())) : "");
-		} catch (IllegalArgumentException ex) {
-			ch.setHard(CacheTerrDiff.CW_DT_ERROR);
-			ch.setIncomplete(true);
 			lblDiff.setText("");
+		} else {
+			try {
+				lblTerr.setText((ch.getTerrain() != CacheTerrDiff.CW_DT_ERROR) ? 
+					(MyLocale.getMsg(1001,"T")+": "+CacheTerrDiff.longDT(ch.getTerrain())) : "");
+			} catch (IllegalArgumentException ex) {
+				ch.setTerrain(CacheTerrDiff.CW_DT_ERROR);
+				ch.setIncomplete(true);
+				if (Global.getPref().debug) Global.getPref().log(ch.getWayPoint()+" has wrong terrain ", ex);
+				lblTerr.setText("");
+			}
+			try {
+				lblDiff.setText((ch.getHard() != CacheTerrDiff.CW_DT_ERROR) ? 
+					(MyLocale.getMsg(1000,"D")+": "+CacheTerrDiff.longDT(ch.getHard())) : "");
+			} catch (IllegalArgumentException ex) {
+				ch.setHard(CacheTerrDiff.CW_DT_ERROR);
+				ch.setIncomplete(true);
+				if (Global.getPref().debug) Global.getPref().log(ch.getWayPoint()+" has wrong difficulty ", ex);
+				lblDiff.setText("");
+			}
 		}
 
 		if(isBigScreen)	mNotes.setText(ch.getExistingDetails().getCacheNotes());

Modified: trunk/src/CacheWolf/myTableModel.java
===================================================================
--- trunk/src/CacheWolf/myTableModel.java	2009-05-22 14:45:15 UTC (rev 1841)
+++ trunk/src/CacheWolf/myTableModel.java	2009-05-22 16:40:48 UTC (rev 1842)
@@ -230,7 +230,7 @@
 					lastColorFG.set(ta.foreground);
 					lastRow = row;
 				} catch (Exception e) {
-					Global.getPref().log("Ignored Exception in myTableModel.TableCellAttributes()", e, true);
+					if (Global.getPref().debug) Global.getPref().log("Ignored Exception in myTableModel.TableCellAttributes()", e, true);
 				};
 			} else  {
 				// Here: We already had this row.
@@ -359,7 +359,7 @@
 				} // Switch
 			} // if
 		} catch (Exception e) {
-			Global.getPref().log("Ignored Exception in myTableModel.getCellData()", e, true);
+			if (Global.getPref().debug) Global.getPref().log("Ignored Exception in myTableModel.getCellData()",e, true);
 		return null;
 	}
 		return null;



From mik77 at mail.berlios.de  Sat May 23 02:49:15 2009
From: mik77 at mail.berlios.de (mik77 at mail.berlios.de)
Date: Sat, 23 May 2009 02:49:15 +0200
Subject: [Cachewolf-svn] r1843 - trunk/src/CacheWolf
Message-ID: <200905230049.n4N0nFFL028285@sheep.berlios.de>

Author: mik77
Date: 2009-05-23 02:49:12 +0200 (Sat, 23 May 2009)
New Revision: 1843

Modified:
   trunk/src/CacheWolf/FilterScreen.java
Log:
Correct CITO icon in filter screen

Modified: trunk/src/CacheWolf/FilterScreen.java
===================================================================
--- trunk/src/CacheWolf/FilterScreen.java	2009-05-22 16:40:48 UTC (rev 1842)
+++ trunk/src/CacheWolf/FilterScreen.java	2009-05-23 00:49:12 UTC (rev 1843)
@@ -206,7 +206,7 @@
 		pnlCacheTypes.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_MEGA_EVENT)));
 		pnlCacheTypes.addLast(chkMega = new mCheckBox("Mega-Ev."), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
-		pnlCacheTypes.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_VIRTUAL)));
+		pnlCacheTypes.addNext(addImg(GuiImageBroker.getTypeImage(CacheType.CW_TYPE_CITO)));
 		pnlCacheTypes.addNext(chkCito = new mCheckBox("Cito-Ev."), CellConstants.DONTSTRETCH, CellConstants.FILL);
 		
 		//pnlCacheTypes.addLast(addiWptChk = new mCheckBox("Add. Wpt"), CellConstants.DONTSTRETCH, CellConstants.FILL);



From mik77 at mail.berlios.de  Sat May 23 23:48:42 2009
From: mik77 at mail.berlios.de (mik77 at mail.berlios.de)
Date: Sat, 23 May 2009 23:48:42 +0200
Subject: [Cachewolf-svn] r1844 - trunk/src/CacheWolf
Message-ID: <200905232148.n4NLmg8M005903@sheep.berlios.de>

Author: mik77
Date: 2009-05-23 23:48:40 +0200 (Sat, 23 May 2009)
New Revision: 1844

Modified:
   trunk/src/CacheWolf/Filter.java
Log:
Use cache type constants in filter (fixes earth cache bug for example)

Modified: trunk/src/CacheWolf/Filter.java
===================================================================
--- trunk/src/CacheWolf/Filter.java	2009-05-23 00:49:12 UTC (rev 1843)
+++ trunk/src/CacheWolf/Filter.java	2009-05-23 21:48:40 UTC (rev 1844)
@@ -378,43 +378,43 @@
 	        if (hasTypeMatchPattern) { // Only do the checks if we have a filter
 		        cacheTypePattern = 0;
 		        // As each cache can only have one type, we can use else if and set the type
-		        if (ch.getType() == 0)
+		        if (ch.getType() == CacheType.CW_TYPE_CUSTOM)
 			        cacheTypePattern = CUSTOM;
-		        else if (ch.getType() == 2)
+		        else if (ch.getType() == CacheType.CW_TYPE_TRADITIONAL)
 			        cacheTypePattern = TRADITIONAL;
-		        else if (ch.getType() == 3)
+		        else if (ch.getType() == CacheType.CW_TYPE_MULTI)
 			        cacheTypePattern = MULTI;
-		        else if (ch.getType() == 4)
+		        else if (ch.getType() == CacheType.CW_TYPE_VIRTUAL)
 			        cacheTypePattern = VIRTUAL;
-		        else if (ch.getType() == 5)
+		        else if (ch.getType() == CacheType.CW_TYPE_LETTERBOX)
 			        cacheTypePattern = LETTER;
-		        else if (ch.getType() == 6)
+		        else if (ch.getType() == CacheType.CW_TYPE_EVENT)
 			        cacheTypePattern = EVENT;
-		        else if (ch.getType() == 8)
+		        else if (ch.getType() == CacheType.CW_TYPE_UNKNOWN)
 			        cacheTypePattern = MYSTERY;
-		        else if (ch.getType() == 11)
+		        else if (ch.getType() == CacheType.CW_TYPE_WEBCAM)
 			        cacheTypePattern = WEBCAM;
-		        else if (ch.getType() == 12)
+		        else if (ch.getType() == CacheType.CW_TYPE_LOCATIONLESS)
 			        cacheTypePattern = LOCLESS;
-		        else if (ch.getType() == 137)
+		        else if (ch.getType() == CacheType.CW_TYPE_EARTH)
 			        cacheTypePattern = EARTH;
-		        else if (ch.getType() == 453)
+		        else if (ch.getType() == CacheType.CW_TYPE_MEGA_EVENT)
 			        cacheTypePattern = MEGA;
-		        else if (ch.getType() == 50)
+		        else if (ch.getType() == CacheType.CW_TYPE_PARKING)
 			        cacheTypePattern = PARKING;
-		        else if (ch.getType() == 51)
+		        else if (ch.getType() == CacheType.CW_TYPE_STAGE)
 			        cacheTypePattern = STAGE;
-		        else if (ch.getType() == 52)
+		        else if (ch.getType() == CacheType.CW_TYPE_QUESTION)
 			        cacheTypePattern = QUESTION;
-		        else if (ch.getType() == 53)
+		        else if (ch.getType() == CacheType.CW_TYPE_FINAL)
 			        cacheTypePattern = FINAL;
-		        else if (ch.getType() == 54)
+		        else if (ch.getType() == CacheType.CW_TYPE_TRAILHEAD)
 			        cacheTypePattern = TRAILHEAD;
-		        else if (ch.getType() == 55)
+		        else if (ch.getType() == CacheType.CW_TYPE_REFERENCE)
 			        cacheTypePattern = REFERENCE;
-		        else if (ch.getType() == 13)
+		        else if (ch.getType() == CacheType.CW_TYPE_CITO)
 			        cacheTypePattern = CITO;
-		        else if (ch.getType() == 1858)
+		        else if (ch.getType() == CacheType.CW_TYPE_WHEREIGO)
 			        cacheTypePattern = WHERIGO;
 		        if ((cacheTypePattern & typeMatchPattern) == 0) {
 			        cacheFiltered = true; break;



From araber95 at mail.berlios.de  Sun May 24 12:11:02 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Sun, 24 May 2009 12:11:02 +0200
Subject: [Cachewolf-svn] r1845 - trunk/src/CacheWolf
Message-ID: <200905241011.n4OAB2vR004094@sheep.berlios.de>

Author: araber95
Date: 2009-05-24 12:11:01 +0200 (Sun, 24 May 2009)
New Revision: 1845

Modified:
   trunk/src/CacheWolf/SpiderGC.java
Log:
question to input passwort only if passwort is empty in preferences!

Modified: trunk/src/CacheWolf/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/SpiderGC.java	2009-05-23 21:48:40 UTC (rev 1844)
+++ trunk/src/CacheWolf/SpiderGC.java	2009-05-24 10:11:01 UTC (rev 1845)
@@ -94,11 +94,13 @@
 		InfoBox localInfB = new InfoBox(MyLocale.getMsg(5506,"Password"), MyLocale.getMsg(5505,"Enter Password"), InfoBox.INPUT);
 		localInfB.feedback.setText(passwort); // Remember the PWD for next time
 		localInfB.feedback.isPassword=true;
-		int code = localInfB.execute();
-		passwort = localInfB.getInput();
+		int code=FormBase.IDOK;
+		if (passwort.equals("")) {
+			code = localInfB.execute();
+			passwort = localInfB.getInput();
+		}
 		localInfB.close(0);
 		if(code != FormBase.IDOK) return code;
-
 		// Now start the login proper
 		localInfB = new InfoBox(MyLocale.getMsg(5507,"Status"), MyLocale.getMsg(5508,"Logging in..."));
 		localInfB.exec();



From greiol at mail.berlios.de  Sun May 24 18:30:18 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Sun, 24 May 2009 18:30:18 +0200
Subject: [Cachewolf-svn] r1846 - trunk/src/CacheWolf
Message-ID: <200905241630.n4OGUISl032170@sheep.berlios.de>

Author: greiol
Date: 2009-05-24 18:30:16 +0200 (Sun, 24 May 2009)
New Revision: 1846

Modified:
   trunk/src/CacheWolf/Version.java
Log:
build number fixed

Modified: trunk/src/CacheWolf/Version.java
===================================================================
--- trunk/src/CacheWolf/Version.java	2009-05-24 10:11:01 UTC (rev 1845)
+++ trunk/src/CacheWolf/Version.java	2009-05-24 16:30:16 UTC (rev 1846)
@@ -15,7 +15,7 @@
 	static final int VER_MAJOR = 1;
 	static final int VER_MINOR = 1;
 	static final String VER_SVN ="$LastChangedRevision$"; // the number is automatically replaced by subversion to the latest versionnumer of this file (svn:keywords LastChangedRevision)
-	static final int SVN_REVISION = 20090512;
+	static final int SVN_REVISION = Common.parseInt(VER_SVN.substring(VER_SVN.indexOf(" ")+1, VER_SVN.lastIndexOf(" ")));
 	static final int VERSION_TYPE = 3;
 	public static final String[] VERSION_TYPES = {
 		"Release", 



From greiol at mail.berlios.de  Mon May 25 23:30:26 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Mon, 25 May 2009 23:30:26 +0200
Subject: [Cachewolf-svn] r1847 - trunk/src/CacheWolf
Message-ID: <200905252130.n4PLUQWl025248@sheep.berlios.de>

Author: greiol
Date: 2009-05-25 23:30:24 +0200 (Mon, 25 May 2009)
New Revision: 1847

Modified:
   trunk/src/CacheWolf/CacheHolder.java
Log:
fix htmlexporter
set proper non error values for size, terrain and difficulty of AWs in gc.com spider

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-24 16:30:16 UTC (rev 1846)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-25 21:30:24 UTC (rev 1847)
@@ -183,36 +183,51 @@
 		            
 			        start = xmlString.indexOf('"', end + 1);
 			        end = xmlString.indexOf('"', start + 1);
-			        try {
-			        	setHard(CacheTerrDiff.v1Converter(xmlString.substring(start + 1, end)));
-			        } catch (IllegalArgumentException ex) {
-			        	setHard(CacheTerrDiff.CW_DT_ERROR);
-			        	if (Global.getPref().debug) Global.getPref().log(wayPoint, ex, true);
+			        if (isAddiWpt() || getType() == CacheType.CW_TYPE_CUSTOM) {
+			        	setHard(CacheTerrDiff.CW_DT_ADDITIONAL);
+			        } else {
+				        try {
+				        	setHard(CacheTerrDiff.v1Converter(xmlString.substring(start + 1, end)));
+				        } catch (IllegalArgumentException ex) {
+				        	setHard(CacheTerrDiff.CW_DT_ERROR);
+				        	setIncomplete(true);
+				        	if (Global.getPref().debug) Global.getPref().log(wayPoint, ex, true);
+				        }
 			        }
-	
-		            start = xmlString.indexOf('"', end + 1);
-			        end = xmlString.indexOf('"', start + 1);
-			        try {
-			        	setTerrain(CacheTerrDiff.v1Converter(xmlString.substring(start + 1, end)));
-			        } catch (IllegalArgumentException ex) {
-			        	setTerrain(CacheTerrDiff.CW_DT_ERROR);
-			        	if (Global.getPref().debug) Global.getPref().log(wayPoint, ex, true);
-			        }
-	
+			        start = xmlString.indexOf('"', end + 1);
+				    end = xmlString.indexOf('"', start + 1);
+				    if (isAddiWpt() || getType() == CacheType.CW_TYPE_CUSTOM) {
+				    	setTerrain(CacheTerrDiff.CW_DT_ADDITIONAL);
+				    } else {
+					    try {
+					    	setTerrain(CacheTerrDiff.v1Converter(xmlString.substring(start + 1, end)));
+					    } catch (IllegalArgumentException ex) {
+					    	setTerrain(CacheTerrDiff.CW_DT_ERROR);
+					    	setIncomplete(true);
+					    	if (Global.getPref().debug) Global.getPref().log(wayPoint, ex, true);
+				        }
+				    }
 			        // The next item was 'dirty' but this is no longer used.
 		            start = xmlString.indexOf('"', end + 1);
 			        end = xmlString.indexOf('"', start + 1);
 			        setFiltered(xmlString.substring(start + 1, end).equals("true"));
 	
+			        if (isAddiWpt() || getType() == CacheType.CW_TYPE_CUSTOM) {
+			        	
+			        } 
 			        start = xmlString.indexOf('"', end + 1);
 			        end = xmlString.indexOf('"', start + 1);
-			        try {
-			        	setCacheSize(CacheSize.v1Converter(xmlString.substring(start + 1, end)));
-			        } catch (IllegalArgumentException ex) {
-			        	setCacheSize(CacheSize.CW_SIZE_ERROR);
-			        	if (Global.getPref().debug) Global.getPref().log(wayPoint, ex, true);
+			        if (isAddiWpt() || getType() == CacheType.CW_TYPE_CUSTOM) {
+			        	setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
+			        } else {
+				        try {
+				        	setCacheSize(CacheSize.v1Converter(xmlString.substring(start + 1, end)));
+				        } catch (IllegalArgumentException ex) {
+				        	setCacheSize(CacheSize.CW_SIZE_ERROR);
+				        	setIncomplete(true);
+				        	if (Global.getPref().debug) Global.getPref().log(wayPoint, ex, true);
+				        }
 			        }
-			        
 			        start = xmlString.indexOf('"', end + 1);
 			        end = xmlString.indexOf('"', start + 1);
 			        setAvailable(xmlString.substring(start + 1, end).equals("true"));
@@ -376,16 +391,6 @@
 	        } catch (Exception ex) {
 	        	Global.getPref().log("Ignored Exception in CacheHolder()", ex, true);
 	        }
-	        
-	        if (type == CacheType.CW_TYPE_ERROR) {
-	        	setIncomplete(true);
-	        } else {
-	        	if (! isAddiWpt() && 
-	        		(terrain == CacheTerrDiff.CW_DT_ERROR 
-	        		|| hard == CacheTerrDiff.CW_DT_ERROR 
-	        		|| cacheSize == CacheSize.CW_SIZE_ERROR)
-	        	) setIncomplete(true);
-	        }
         }
 	
 	/**



From greiol at mail.berlios.de  Mon May 25 23:48:29 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Mon, 25 May 2009 23:48:29 +0200
Subject: [Cachewolf-svn] r1848 - trunk/src/CacheWolf
Message-ID: <200905252148.n4PLmTUf026543@sheep.berlios.de>

Author: greiol
Date: 2009-05-25 23:48:28 +0200 (Mon, 25 May 2009)
New Revision: 1848

Modified:
   trunk/src/CacheWolf/CacheType.java
Log:
oc type 10 is a drive in and therefore closer to a traditional

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-05-25 21:30:24 UTC (rev 1847)
+++ trunk/src/CacheWolf/CacheType.java	2009-05-25 21:48:28 UTC (rev 1848)
@@ -450,7 +450,7 @@
 	 * convert the cache type information from an OC XML import to internal cache type
 	 * @param ocType cache type found in OC XML
 	 * @return internal cache type
-	 * @throws IllegalArgumentException if <code>ocType</code> can not be macthed
+	 * @throws IllegalArgumentException if <code>ocType</code> can not be matched
 	 */
 	public static final byte ocType2CwType(String ocType) throws IllegalArgumentException {
 		if(ocType.equals("1")) return CW_TYPE_UNKNOWN;
@@ -462,7 +462,7 @@
 		if(ocType.equals("7")) return CW_TYPE_UNKNOWN;
 		if(ocType.equals("8")) return CW_TYPE_UNKNOWN;
 		if(ocType.equals("9")) return CW_TYPE_UNKNOWN;
-		if(ocType.equals("10")) return CW_TYPE_UNKNOWN;
+		if(ocType.equals("10")) return CW_TYPE_TRADITIONAL;
 		throw new IllegalArgumentException("unmatched argument "+ocType+" in CacheSize ocType2CwType()");
 	}
 	



From greiol at mail.berlios.de  Tue May 26 01:15:41 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Tue, 26 May 2009 01:15:41 +0200
Subject: [Cachewolf-svn] r1849 - trunk/src/CacheWolf
Message-ID: <200905252315.n4PNFf6W005436@sheep.berlios.de>

Author: greiol
Date: 2009-05-26 01:15:34 +0200 (Tue, 26 May 2009)
New Revision: 1849

Modified:
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/CacheType.java
   trunk/src/CacheWolf/Profile.java
Log:
added constant for file format version to profile
save profile after importing a legacy format
recreate missing waypoint.xml files and convert all waypoint.xml to current version when updating
update notes and solver booleans already during legacy import

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-25 21:48:28 UTC (rev 1848)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-25 23:15:34 UTC (rev 1849)
@@ -388,6 +388,15 @@
 		            if (is_black() != Global.getProfile().showBlacklisted())
 			            setFiltered(true);
 	            }
+				if (version < Profile.CURRENTFILEFORMAT) {
+		            // forceload of details, creates waypoint.xml if missing
+		            details = getCacheDetails(true, false);
+		            // make sure details get (re)written in new format
+		            details.hasUnsavedChanges = true;
+		            // update information on notes and solver info
+		            setHasNote(!details.getCacheNotes().equals(""));
+					setHasSolver(!details.getSolver().equals(""));
+				}
 	        } catch (Exception ex) {
 	        	Global.getPref().log("Ignored Exception in CacheHolder()", ex, true);
 	        }

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-05-25 21:48:28 UTC (rev 1848)
+++ trunk/src/CacheWolf/CacheType.java	2009-05-25 23:15:34 UTC (rev 1849)
@@ -462,7 +462,7 @@
 		if(ocType.equals("7")) return CW_TYPE_UNKNOWN;
 		if(ocType.equals("8")) return CW_TYPE_UNKNOWN;
 		if(ocType.equals("9")) return CW_TYPE_UNKNOWN;
-		if(ocType.equals("10")) return CW_TYPE_TRADITIONAL;
+		if(ocType.equals("10")) return CW_TYPE_TRADITIONAL; // drive in
 		throw new IllegalArgumentException("unmatched argument "+ocType+" in CacheSize ocType2CwType()");
 	}
 	

Modified: trunk/src/CacheWolf/Profile.java
===================================================================
--- trunk/src/CacheWolf/Profile.java	2009-05-25 21:48:28 UTC (rev 1848)
+++ trunk/src/CacheWolf/Profile.java	2009-05-25 23:15:34 UTC (rev 1849)
@@ -58,6 +58,8 @@
 	private boolean hasUnsavedChanges = false;
 	public boolean byPassIndexActive = false;
 	private int indexXmlVersion;
+	/** version number of current format for index.xml and waypoint.xml */
+	protected static int CURRENTFILEFORMAT = 3;
 
 	//TODO Add other settings, such as max. number of logs to spider
 	//TODO Add settings for the preferred mapper to allow for maps other than expedia and other resolutions
@@ -252,6 +254,11 @@
 				} else if (text.indexOf("<VERSION")>=0) {
 					int start=text.indexOf("value = \"")+9;
 					indexXmlVersion  = Integer.valueOf(text.substring(start,text.indexOf("\"",start))).intValue();
+					if (indexXmlVersion > CURRENTFILEFORMAT) {
+						Global.getPref().log("unsupported file format");
+						clearProfile();
+						return;
+					}
 				} else if (text.indexOf("<SYNCOC")>=0) {
 					int start=text.indexOf("date = \"")+8;
 					setLast_sync_opencaching(text.substring(start,text.indexOf("\"",start)));
@@ -330,6 +337,9 @@
 			//Vm.debug("End  :"+endT.format("H:mm:ss.SSS"));	
 			// Build references between caches and addi wpts
 			buildReferences();
+			if (indexXmlVersion < CURRENTFILEFORMAT) {
+				saveIndex(Global.getPref(), true);
+			}
 		} catch (FileNotFoundException e) {
 			Global.getPref().log("index.xml not found in directory "+dataDir); // Normal when profile is opened for first time
 			//e.printStackTrace();



From engywuck at mail.berlios.de  Tue May 26 08:54:37 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Tue, 26 May 2009 08:54:37 +0200
Subject: [Cachewolf-svn] r1850 - trunk/src/CacheWolf
Message-ID: <200905260654.n4Q6sbwe007316@sheep.berlios.de>

Author: engywuck
Date: 2009-05-26 08:54:35 +0200 (Tue, 26 May 2009)
New Revision: 1850

Modified:
   trunk/src/CacheWolf/CacheHolder.java
Log:
Filter modification no longer needed for Black status.

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-25 23:15:34 UTC (rev 1849)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-26 06:54:35 UTC (rev 1850)
@@ -243,8 +243,6 @@
 			        start = xmlString.indexOf('"', end + 1);
 			        end = xmlString.indexOf('"', start + 1);
 			        setBlack(xmlString.substring(start + 1, end).equals("true"));
-			        if (is_black() != Global.getProfile().showBlacklisted())
-				        setFiltered(true);
 	
 			        start = xmlString.indexOf('"', end + 1);
 			        end = xmlString.indexOf('"', start + 1);
@@ -384,9 +382,6 @@
 		            } else {
 		            	long2byteFields(Convert.parseLong(xmlString.substring(start + 1, end)));
 		            }
-		            
-		            if (is_black() != Global.getProfile().showBlacklisted())
-			            setFiltered(true);
 	            }
 				if (version < Profile.CURRENTFILEFORMAT) {
 		            // forceload of details, creates waypoint.xml if missing
@@ -395,7 +390,7 @@
 		            details.hasUnsavedChanges = true;
 		            // update information on notes and solver info
 		            setHasNote(!details.getCacheNotes().equals(""));
-					setHasSolver(!details.getSolver().equals(""));
+			    setHasSolver(!details.getSolver().equals(""));
 				}
 	        } catch (Exception ex) {
 	        	Global.getPref().log("Ignored Exception in CacheHolder()", ex, true);



From kappler at mail.berlios.de  Tue May 26 11:16:40 2009
From: kappler at mail.berlios.de (kappler at mail.berlios.de)
Date: Tue, 26 May 2009 11:16:40 +0200
Subject: [Cachewolf-svn] r1851 - trunk/src/CacheWolf
Message-ID: <200905260916.n4Q9GeqB018861@sheep.berlios.de>

Author: kappler
Date: 2009-05-26 11:16:12 +0200 (Tue, 26 May 2009)
New Revision: 1851

Modified:
   trunk/src/CacheWolf/Rebuild.java
Log:
Rebuild: Version of WP-XMLs was not identified correctly

Modified: trunk/src/CacheWolf/Rebuild.java
===================================================================
--- trunk/src/CacheWolf/Rebuild.java	2009-05-26 06:54:35 UTC (rev 1850)
+++ trunk/src/CacheWolf/Rebuild.java	2009-05-26 09:16:12 UTC (rev 1851)
@@ -10,14 +10,14 @@
 public class Rebuild {
 	String [] xmlFiles;
 	private int cacheXmlVersion;
-	
+
 	public Rebuild() { // Public constructor
 	}
-	
-	public void rebuild() {	
+
+	public void rebuild() {
 		int i;
 		Profile prof=Global.getProfile();
-		
+
 		myProgressBarForm pbf = new myProgressBarForm();
 		Handle h = new Handle();
 		pbf.setTask(h,MyLocale.getMsg(209,"Rebuilding index"));
@@ -32,7 +32,7 @@
 			if (pos<0) continue;
 			String wayPoint=xmlFiles[i].substring(0,pos).toUpperCase();
 			if (wayPoint.equalsIgnoreCase("index") || 			// Check for index.xml and index.bak
-				prof.getCacheIndex(wayPoint)>=0)		// Check for waypoints already in database 
+				prof.getCacheIndex(wayPoint)>=0)		// Check for waypoints already in database
 				xmlFiles[i]=null;   				// Remove existing caches or index.xml
 			else {
 				//ewe.sys.Vm.debug("Orphan: "+wayPoint);
@@ -56,7 +56,7 @@
 				}
 				if (pbf.isClosed) break;
 			}
-			(new MessageBox(MyLocale.getMsg(327, "Information"), 
+			(new MessageBox(MyLocale.getMsg(327, "Information"),
 					  MyLocale.getMsg(210,"Caches nicht in index.xml: ")+orphans+
 					  MyLocale.getMsg(211,"\nDavon hinzugef?gt: ")+nAdded
 					, FormBase.OKB)).execute();
@@ -64,14 +64,14 @@
 			prof.saveIndex(Global.getPref(),true);
 		}
 		if (orphans!=nAdded && (new MessageBox(MyLocale.getMsg(327, "Information"),
-					MyLocale.getMsg(212,"Delete all .xml files not in index.xml and associated pictures"), 
+					MyLocale.getMsg(212,"Delete all .xml files not in index.xml and associated pictures"),
 					FormBase.YESB | FormBase.NOB)).execute()==FormBase.YESB) {
 			h = new Handle();
 			pbf.setTask(h,MyLocale.getMsg(213,"Deleting orphans"));
 			DataMover dm=new DataMover();
 			int nDeleted=0;
 			for (i=0; i<xmlFiles.length; i++) {
-				if (xmlFiles[i]!=null){	
+				if (xmlFiles[i]!=null){
 					h.progress = ((float)nDeleted++)/(float)(orphans-nAdded);
 					h.changed();
 					int dotPos = xmlFiles[i].indexOf('.');
@@ -96,8 +96,8 @@
 			cacheXmlVersion = 1; // Initial guess
 			// Check that we have not accidentally listed another xml file in the directory
 			if (text.indexOf("<CACHEDETAILS>")<0 || (start=text.indexOf("<CACHE "))<0) return null;
-			if ((vstart = text.indexOf("<VERSION = \"")) >= 0) {
-				cacheXmlVersion = Integer.valueOf(text.substring(vstart+9, text.indexOf("\"", vstart+9))).intValue();
+			if ((vstart = text.indexOf("<VERSION value = \"")) >= 0) {
+				cacheXmlVersion = Integer.valueOf(text.substring(vstart+18, text.indexOf("\"", vstart+18))).intValue();
 			}
 			end=text.indexOf("/>",start);
 			return text.substring(start,end+2);
@@ -113,6 +113,6 @@
 			return true;
 		 }
 	 }
-	 
-	
+
+
 }



From araber95 at mail.berlios.de  Tue May 26 15:11:56 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Tue, 26 May 2009 15:11:56 +0200
Subject: [Cachewolf-svn] r1852 - in trunk/res_noewe/webmapservices: .
	untested
Message-ID: <200905261311.n4QDBuu5012370@sheep.berlios.de>

Author: araber95
Date: 2009-05-26 15:11:53 +0200 (Tue, 26 May 2009)
New Revision: 1852

Added:
   trunk/res_noewe/webmapservices/de-ni_p.wms
   trunk/res_noewe/webmapservices/de-ni_t100.wms
   trunk/res_noewe/webmapservices/de-ni_t25.wms
Removed:
   trunk/res_noewe/webmapservices/de-ni_topo-photo_auto.wms
   trunk/res_noewe/webmapservices/de-ni_topo_100.wms
   trunk/res_noewe/webmapservices/untested/de-ni_pt.wms
   trunk/res_noewe/webmapservices/untested/de-ni_t100.wms
Log:
reflecting changes of wms-servers for Niedersachsen

Added: trunk/res_noewe/webmapservices/de-ni_p.wms
===================================================================
--- trunk/res_noewe/webmapservices/de-ni_p.wms	2009-05-26 09:16:12 UTC (rev 1851)
+++ trunk/res_noewe/webmapservices/de-ni_p.wms	2009-05-26 13:11:53 UTC (rev 1852)
@@ -0,0 +1,42 @@
+TakenFromUrl:       http://www.umwelt.niedersachsen.de/master/C7089178_N7088657_L20_D0_I598.html
+GetCapabilitiesUrl: http://www.umweltkarten.niedersachsen.de/arcgis/services/GR_Gebiete/MapServer/WMSServer?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities
+Name:               de.Niedersachsen photo c SF=0..1,95
+MapType:                        photo
+MainUrl:            http://www.umweltkarten.niedersachsen.de/arcgis/services/GR_Gebiete/MapServer/WMSServer?
+ServiceTypeUrlPart: SERVICE=WMS
+VersionUrlPart:     VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:  31467
+CoordinateReferenceSystemUrlPart: SRS=EPSG:31467 
+RequestUrlPart:     REQUEST=GetMap
+#LayersUrlPart:     LAYERS=0|Gebiete mit gesamtstaatlicher repr?sentativer Bedeutung|2.772396|Infinity
+#LayersUrlPart:     LAYERS=1|Flie?gew?sserschutzsystem Verbindungsgew?sser|2.772396|Infinity
+#LayersUrlPart:     LAYERS=2|Flie?gew?sserschutzsystem Hauptgew?sser und Auen|2.772396|Infinity
+#LayersUrlPart:     LAYERS=3|Moorschutzprogramm Neubewertung|2,772396|Infinity
+#LayersUrlPart:     LAYERS=4|Moorschutzprogramm Teil II|2.772396|Infinity
+#LayersUrlPart:     LAYERS=5|Abgrenzung des Hochmoorkomplexes MSP Teil I|2.772396|Infinity
+#LayersUrlPart:     LAYERS=6|Moorschutzprogramm (MSP) Teil I|2.772396|Infinity
+#LayersUrlPart:     LAYERS=7|Untere  Naturschutzbeh?rden|2.772396|Infinity
+#LayersUrlPart:     LAYERS=8|Landkreise||
+#LayersUrlPart:     LAYERS=9|Ortslagen|99.000000|237.600000
+#LayersUrlPart:     LAYERS=10|Grosse Seen|198.000000|Infinity
+#LayersUrlPart:     LAYERS=11|Gro?e Fl?sse|198.000000|Infinity
+#LayersUrlPart:     LAYERS=12|Orthophoto Farbe|0.0|2.772000
+#LayersUrlPart:     LAYERS=13|DTK 25|2.772396|4.950000
+#LayersUrlPart:     LAYERS=14|TK 50|4.950396|9.900000
+#LayersUrlPart:     LAYERS=15|TK 100|9.900396|29.700000
+#LayersUrlPart:     LAYERS=16|TK 500|29.700396|99.000000
+#LayersUrlPart:     LAYERS=17|Autobahnen||
+#LayersUrlPart:     LAYERS=18|Schrift: Gro?e Orte||
+#LayersUrlPart:     LAYERS=19|Schrift: Kleine Orte||
+LayersUrlPart:     LAYERS=12
+StylesUrlPart:     STYLES=
+ImageFormatUrlPart:FORMAT=image/png
+BoundingBoxTopLeftWGS84: N 53.898485 E 6.600296
+BoundingBoxButtomRightWGS84: N 51.265165 E 11.665345
+MinScale:   0
+MaxScale:   2.772396
+RecommendedScale:   1
+#MinSFInput:0
+#MaxSFInput:1,9586
+ImageFileExtension: .png
+#weitere Overlays hinzuf?gen geht bei Photo nicht.
\ No newline at end of file

Added: trunk/res_noewe/webmapservices/de-ni_t100.wms
===================================================================
--- trunk/res_noewe/webmapservices/de-ni_t100.wms	2009-05-26 09:16:12 UTC (rev 1851)
+++ trunk/res_noewe/webmapservices/de-ni_t100.wms	2009-05-26 13:11:53 UTC (rev 1852)
@@ -0,0 +1,23 @@
+TakenFromUrl:       http://www.lgn.de
+GetCapabilitiesUrl: http://www.mapserver.niedersachsen.de/freezoneogc/mapserverogc?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities
+Name:               de.Niedersachsen t100 c SF=4.78..37.35
+MapType:                        topo
+MainUrl:            http://www.mapserver.niedersachsen.de/freezoneogc/mapserverogc?
+ServiceTypeUrlPart: SERVICE=WMS
+VersionUrlPart:     VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:  31467
+CoordinateReferenceSystemUrlPart: SRS=EPSG:31467 
+RequestUrlPart:     REQUEST=GetMap
+#LayersUrlPart:     LAYERS=DUEKN5000|Uebersichtskarte 1:5000000|232.14267523852232|4887.214215547839
+#LayersUrlPart:     LAYERS=DUEKN1000|Uebersichtskarte 1:1000000|52.82503600628914|422.6002880503131
+#LayersUrlPart:     LAYERS=DUEKN500|Uebersichtskarte 1:500000|17.86128289273423|198.4586988081581
+#LayersUrlPart:     LAYERS=TK100|Topographische Karte 1:100000|6,76160460880501|52.82503600628914
+LayersUrlPart:     LAYERS=TK100
+StylesUrlPart:     STYLES=
+ImageFormatUrlPart:FORMAT=image/png
+BoundingBoxTopLeftWGS84: N 54.9403 E 6.1804
+BoundingBoxButtomRightWGS84: N 50.5028 E 13.6833
+MinScale:   6.76160460880501
+MaxScale:   52.82503600628914
+RecommendedScale:   5
+ImageFileExtension: .png

Added: trunk/res_noewe/webmapservices/de-ni_t25.wms
===================================================================
--- trunk/res_noewe/webmapservices/de-ni_t25.wms	2009-05-26 09:16:12 UTC (rev 1851)
+++ trunk/res_noewe/webmapservices/de-ni_t25.wms	2009-05-26 13:11:53 UTC (rev 1852)
@@ -0,0 +1,44 @@
+TakenFromUrl:       http://www.umwelt.niedersachsen.de/master/C7089178_N7088657_L20_D0_I598.html
+GetCapabilitiesUrl: http://www.umweltkarten.niedersachsen.de/arcgis/services/GR_Gebiete/MapServer/WMSServer?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities
+Name:               de.Niedersachsen t25 b/w ?c SF=1,95..3,5
+MapType:                        topo
+MainUrl:            http://www.umweltkarten.niedersachsen.de/arcgis/services/GR_Gebiete/MapServer/WMSServer?
+ServiceTypeUrlPart: SERVICE=WMS
+VersionUrlPart:     VERSION=1.1.1
+CoordinateReferenceSystemCacheWolf:  31467
+CoordinateReferenceSystemUrlPart: SRS=EPSG:31467 
+RequestUrlPart:     REQUEST=GetMap
+#LayersUrlPart:     LAYERS=0|Gebiete mit gesamtstaatlicher repr?sentativer Bedeutung|2.772396|Infinity
+#LayersUrlPart:     LAYERS=1|Flie?gew?sserschutzsystem Verbindungsgew?sser|2.772396|Infinity
+#LayersUrlPart:     LAYERS=2|Flie?gew?sserschutzsystem Hauptgew?sser und Auen|2.772396|Infinity
+#LayersUrlPart:     LAYERS=3|Moorschutzprogramm Neubewertung|2,772396|Infinity
+#LayersUrlPart:     LAYERS=4|Moorschutzprogramm Teil II|2.772396|Infinity
+#LayersUrlPart:     LAYERS=5|Abgrenzung des Hochmoorkomplexes MSP Teil I|2.772396|Infinity
+#LayersUrlPart:     LAYERS=6|Moorschutzprogramm (MSP) Teil I|2.772396|Infinity
+#LayersUrlPart:     LAYERS=7|Untere  Naturschutzbeh?rden|2.772396|Infinity
+#LayersUrlPart:     LAYERS=8|Landkreise||
+#LayersUrlPart:     LAYERS=9|Ortslagen|99.000000|237.600000
+#LayersUrlPart:     LAYERS=10|Grosse Seen|198.000000|Infinity
+#LayersUrlPart:     LAYERS=11|Gro?e Fl?sse|198.000000|Infinity
+#LayersUrlPart:     LAYERS=12|Orthophoto Farbe|0.0|2.772000
+#LayersUrlPart:     LAYERS=13|DTK 25|2.772396|4.950000
+#LayersUrlPart:     LAYERS=14|TK 50|4.950396|9.900000
+#LayersUrlPart:     LAYERS=15|TK 100|9.900396|29.700000
+#LayersUrlPart:     LAYERS=16|TK 500|29.700396|99.000000
+#LayersUrlPart:     LAYERS=17|Autobahnen||
+#LayersUrlPart:     LAYERS=18|Schrift: Gro?e Orte||
+#LayersUrlPart:     LAYERS=19|Schrift: Kleine Orte||
+LayersUrlPart:     LAYERS=13,1,3,4,5,6,17,18,19
+#LayersUrlPart:     LAYERS=13
+#LayersUrlPart:     LAYERS=13,17,18,19
+StylesUrlPart:     STYLES=
+ImageFormatUrlPart:FORMAT=image/png
+BoundingBoxTopLeftWGS84: N 54.001848 E 6.579380
+BoundingBoxButtomRightWGS84: N 51.372735 E 11.734608
+        <LatLonBoundingBox minx="6.579380" miny="51.372735" maxx="11.734608" maxy="54.001848" />
+MinScale:   2.772396
+MaxScale:   4.950000
+RecommendedScale:   2,5
+#MinSFInput:1,9586
+#MaxSFInput:3,5001
+ImageFileExtension: .png

Deleted: trunk/res_noewe/webmapservices/de-ni_topo-photo_auto.wms
===================================================================
--- trunk/res_noewe/webmapservices/de-ni_topo-photo_auto.wms	2009-05-26 09:16:12 UTC (rev 1851)
+++ trunk/res_noewe/webmapservices/de-ni_topo-photo_auto.wms	2009-05-26 13:11:53 UTC (rev 1852)
@@ -1,22 +0,0 @@
-# please refer to readme_wms.txt for an explantion of this file format
-# taken from: ip-trace from niedersachenviewerPlus
-TakenFromUrl:	http://www.umwelt.niedersachsen.de/master/C7065327_N6991478_L20_D0_I598.html
-GetCapabilitiesUrl:	http://geoportal.geodaten.niedersachsen.de/geodatenportal/servlet/gtEntryPoint?SERVICE=WMS&REQUEST=GetCapabilities&VERSION=1.1.1
-Name:	de.ni Topo-Photo AutoDetail
-MapType:	topo
-MainUrl:	http://geoportal.geodaten.niedersachsen.de/geodatenportal/servlet/gtEntryPoint?
-ServiceTypeUrlPart:	SERVICE=WMS 
-VersionUrlPart:	VERSION=1.1.1 
-CoordinateReferenceSystemCacheWolf: 31466 31467 31468 31469
-CoordinateReferenceSystemUrlPart:	SRS=EPSG:31466 SRS=EPSG:31467 SRS=EPSG:31468 SRS=EPSG:31469
-RequestUrlPart:	REQUEST=GetMap
-LayersUrlPart:	LAYERS=layer_1512,layer_1513,layer_1514,layer_1507,layer_1508,layer_1509,layer_1510,layer_1511,layer_1515
-StylesUrlPart:	STYLES=
-ImageFormatUrlPart:	FORMAT=image/png
-# transformed from Gau?-Kr?ger into wgs84
-BoundingBoxTopLeftWGS84:	N 53.99192 E 006.62073
-BoundingBoxButtomRightWGS84:	N 51.27316 E 011.58000
-MinScale:	0.267412
-MaxScale:	59899.495
-RecommendedScale:	5.0
-ImageFileExtension: .png

Deleted: trunk/res_noewe/webmapservices/de-ni_topo_100.wms
===================================================================
--- trunk/res_noewe/webmapservices/de-ni_topo_100.wms	2009-05-26 09:16:12 UTC (rev 1851)
+++ trunk/res_noewe/webmapservices/de-ni_topo_100.wms	2009-05-26 13:11:53 UTC (rev 1852)
@@ -1,20 +0,0 @@
-# please refere to readme_wms.txt for an explantion of this file format
-TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
-GetCapabilitiesUrl:	http://www.mapserver.niedersachsen.de/freezoneogc/mapserverogc?REQUEST=GetCapabilities&VERSION=1.1.1&SERVICE=WMS
-Name:	de.ni Topo 100
-MapType:	topo
-MainUrl:	http://www.mapserver.niedersachsen.de/freezoneogc/mapserverogc?
-ServiceTypeUrlPart:	SERVICE=WMS 
-VersionUrlPart:	VERSION=1.1.1 
-CoordinateReferenceSystemCacheWolf: 31467
-CoordinateReferenceSystemUrlPart:	SRS=EPSG:31467
-RequestUrlPart:	REQUEST=GetMap
-LayersUrlPart:	LAYERS=TK100
-StylesUrlPart:	STYLES=
-ImageFormatUrlPart:	FORMAT=image/png
-BoundingBoxTopLeftWGS84:	N 54.940306 E 6.180364
-BoundingBoxButtomRightWGS84:	N 50.502795 E 13.683332
-MinScale:	6.76160460880501
-MaxScale:	52.82503600628914
-RecommendedScale:	15.0
-ImageFileExtension: .png

Deleted: trunk/res_noewe/webmapservices/untested/de-ni_pt.wms
===================================================================
--- trunk/res_noewe/webmapservices/untested/de-ni_pt.wms	2009-05-26 09:16:12 UTC (rev 1851)
+++ trunk/res_noewe/webmapservices/untested/de-ni_pt.wms	2009-05-26 13:11:53 UTC (rev 1852)
@@ -1,20 +0,0 @@
-TakenFromUrl:	http://www.umwelt.niedersachsen.de/master/C7065327_N6991478_L20_D0_I598.html
-GetCapabilitiesUrl:	http://geoportal.geodaten.niedersachsen.de/geodatenportal/servlet/gtEntryPoint?SERVICE=WMS&REQUEST=GetCapabilities&VERSION=1.1.1
-Name:	de.Niedersachsen photo/topo
-MapType:	photo
-MainUrl:	http://geoportal.geodaten.niedersachsen.de/geodatenportal/servlet/gtEntryPoint?
-ServiceTypeUrlPart:	SERVICE=WMS 
-VersionUrlPart:	VERSION=1.1.1 
-CoordinateReferenceSystemCacheWolf: 31466 31467 31468 31469
-CoordinateReferenceSystemUrlPart:	SRS=EPSG:31466 SRS=EPSG:31467 SRS=EPSG:31468 SRS=EPSG:31469
-RequestUrlPart:	REQUEST=GetMap
-LayersUrlPart:	LAYERS=layer_1512,layer_1513,layer_1514,layer_1507,layer_1508,layer_1509,layer_1510,layer_1511,layer_1515
-StylesUrlPart:	STYLES=
-ImageFormatUrlPart:	FORMAT=image/png
-# transformed from Gau?-Kr?ger into wgs84
-BoundingBoxTopLeftWGS84:	N 53.99192 E 006.62073
-BoundingBoxButtomRightWGS84:	N 51.27316 E 011.58000
-MinScale:	0.267412
-MaxScale:	59899.495
-RecommendedScale:	5.0
-ImageFileExtension: .png

Deleted: trunk/res_noewe/webmapservices/untested/de-ni_t100.wms
===================================================================
--- trunk/res_noewe/webmapservices/untested/de-ni_t100.wms	2009-05-26 09:16:12 UTC (rev 1851)
+++ trunk/res_noewe/webmapservices/untested/de-ni_t100.wms	2009-05-26 13:11:53 UTC (rev 1852)
@@ -1,19 +0,0 @@
-TakenFromUrl:	http://deutschlandviewer.bayern.de/deutschlandviewer/D_Viewer_Hilfe/Hilfe_D_Viewer.htm#Geodaten
-GetCapabilitiesUrl:	http://www.mapserver.niedersachsen.de/freezoneogc/mapserverogc?REQUEST=GetCapabilities&VERSION=1.1.1&SERVICE=WMS
-Name:	de.Niedersachsen topo 100
-MapType:	topo
-MainUrl:	http://www.mapserver.niedersachsen.de/freezoneogc/mapserverogc?
-ServiceTypeUrlPart:	SERVICE=WMS 
-VersionUrlPart:	VERSION=1.1.1 
-CoordinateReferenceSystemCacheWolf: 31467
-CoordinateReferenceSystemUrlPart:	SRS=EPSG:31467
-RequestUrlPart:	REQUEST=GetMap
-LayersUrlPart:	LAYERS=TK100
-StylesUrlPart:	STYLES=
-ImageFormatUrlPart:	FORMAT=image/png
-BoundingBoxTopLeftWGS84:	N 54.940306 E 6.180364
-BoundingBoxButtomRightWGS84:	N 50.502795 E 13.683332
-MinScale:	6.76160460880501
-MaxScale:	52.82503600628914
-RecommendedScale:	15.0
-ImageFileExtension: .png



From araber95 at mail.berlios.de  Tue May 26 16:02:19 2009
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Tue, 26 May 2009 16:02:19 +0200
Subject: [Cachewolf-svn] r1853 - trunk/res_noewe/webmapservices
Message-ID: <200905261402.n4QE2JGj026066@sheep.berlios.de>

Author: araber95
Date: 2009-05-26 16:02:18 +0200 (Tue, 26 May 2009)
New Revision: 1853

Modified:
   trunk/res_noewe/webmapservices/de-ni_t25.wms
Log:
correcting the  correction (unnecessary line deleted)

Modified: trunk/res_noewe/webmapservices/de-ni_t25.wms
===================================================================
--- trunk/res_noewe/webmapservices/de-ni_t25.wms	2009-05-26 13:11:53 UTC (rev 1852)
+++ trunk/res_noewe/webmapservices/de-ni_t25.wms	2009-05-26 14:02:18 UTC (rev 1853)
@@ -35,7 +35,6 @@
 ImageFormatUrlPart:FORMAT=image/png
 BoundingBoxTopLeftWGS84: N 54.001848 E 6.579380
 BoundingBoxButtomRightWGS84: N 51.372735 E 11.734608
-        <LatLonBoundingBox minx="6.579380" miny="51.372735" maxx="11.734608" maxy="54.001848" />
 MinScale:   2.772396
 MaxScale:   4.950000
 RecommendedScale:   2,5



From engywuck at mail.berlios.de  Tue May 26 18:46:01 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Tue, 26 May 2009 18:46:01 +0200
Subject: [Cachewolf-svn] r1854 - trunk/src/CacheWolf
Message-ID: <200905261646.n4QGk1FI031328@sheep.berlios.de>

Author: engywuck
Date: 2009-05-26 18:45:55 +0200 (Tue, 26 May 2009)
New Revision: 1854

Modified:
   trunk/src/CacheWolf/CacheSize.java
   trunk/src/CacheWolf/CacheType.java
   trunk/src/CacheWolf/myTableModel.java
Log:
Fixing some bugs which lead to unneeded exceptions:
-- Allowing "Not Chosen" and "Not chosen" as size in v1 profiles
-- Adding CITO type in v1 String to Byte converter
-- Using emtpy string in table for difficulty and terrain on custom waypoints 

Modified: trunk/src/CacheWolf/CacheSize.java
===================================================================
--- trunk/src/CacheWolf/CacheSize.java	2009-05-26 14:02:18 UTC (rev 1853)
+++ trunk/src/CacheWolf/CacheSize.java	2009-05-26 16:45:55 UTC (rev 1854)
@@ -343,7 +343,7 @@
 			return CW_SIZE_REGULAR;
 		} else if (v1Size.equals(GC_SIZE_LARGE)) {
 			return CW_SIZE_LARGE;
-		} else if (v1Size.equals(GC_SIZE_NOTCHOSEN)) {
+		} else if (v1Size.toLowerCase().equals(GC_SIZE_NOTCHOSEN.toLowerCase())) {
 			return CW_SIZE_NOTCHOSEN;
 		} else if (v1Size.equals(GC_SIZE_OTHER)) {
 			return CW_SIZE_OTHER;

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-05-26 14:02:18 UTC (rev 1853)
+++ trunk/src/CacheWolf/CacheType.java	2009-05-26 16:45:55 UTC (rev 1854)
@@ -248,6 +248,7 @@
 		if (type.equals("8")) return CW_TYPE_UNKNOWN;
 		if (type.equals("11")) return CW_TYPE_WEBCAM;
 		if (type.equals("12")) return CW_TYPE_LOCATIONLESS;
+		if (type.equals("13")) return CW_TYPE_CITO;
 		if (type.equals("50")) return CW_TYPE_PARKING;
 		if (type.equals("51")) return CW_TYPE_STAGE;
 		if (type.equals("52")) return CW_TYPE_QUESTION;

Modified: trunk/src/CacheWolf/myTableModel.java
===================================================================
--- trunk/src/CacheWolf/myTableModel.java	2009-05-26 14:02:18 UTC (rev 1853)
+++ trunk/src/CacheWolf/myTableModel.java	2009-05-26 16:45:55 UTC (rev 1854)
@@ -293,13 +293,15 @@
 					case 1: // Type
 						return GuiImageBroker.getTypeImage(ch.getType());
 					case 2: // Difficulty;
-						if (ch.isAddiWpt()) {
+						// FIXME Needs optimizing when code is stable
+						if (ch.isAddiWpt() || ch.getType()==CacheType.CW_TYPE_CUSTOM) {
 							return "";
 						} else {
 							return CacheTerrDiff.longDT(ch.getHard());
 						}
 					case 3: // Terrain
-						if (ch.isAddiWpt()) {
+						// FIXME Needs optimizing when code is stable
+						if (ch.isAddiWpt() || ch.getType()==CacheType.CW_TYPE_CUSTOM) {
 							return "";
 						} else {
 							return CacheTerrDiff.longDT(ch.getTerrain());



From engywuck at mail.berlios.de  Tue May 26 19:42:37 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Tue, 26 May 2009 19:42:37 +0200
Subject: [Cachewolf-svn] r1855 - trunk/src/CacheWolf
Message-ID: <200905261742.n4QHgbgL023562@sheep.berlios.de>

Author: engywuck
Date: 2009-05-26 19:42:35 +0200 (Tue, 26 May 2009)
New Revision: 1855

Modified:
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/OCXMLImporter.java
Log:
Fixing some issues:
-- Invalid difficulty, terrain and size values for addis or custom wp from v2 profiles are replaced by reasonable values, as they don't have their own or can't be updated to remove incomplete flag
-- Typo for terrain check fixed
-- Removing incomplete flag when OC update of cache is finished

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-26 16:45:55 UTC (rev 1854)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-26 17:42:35 UTC (rev 1855)
@@ -926,14 +926,19 @@
 		} catch (IllegalArgumentException ex) {
 			setType(CacheType.CW_TYPE_UNKNOWN);
 		}
-		try {
-			setCacheSize(byteFromLong(value, 4));
-		} catch (IllegalArgumentException ex) {
-			setCacheSize(CacheSize.CW_SIZE_ERROR);
-		}
+		setCacheSize(byteFromLong(value, 4));
 		setNoFindLogs((byteFromLong(value, 5)));
-		if (getHard() == -1 || getTerrain() == 1) {
-			setIncomplete(true);
+		if (getHard() == -1 || getTerrain() == -1 || getCacheSize() == -1) {
+			if (this.isAddiWpt() || this.getType()==CacheType.CW_TYPE_CUSTOM) {
+				// Addis don't have their own values for difficulty, terrain and size
+				// Custom waypoints can't be updated to remove incomplete flag, so we 
+				// have to set reasonable values.
+				if (getHard() == -1) setHard(CacheTerrDiff.CW_DT_ADDITIONAL);
+				if (getTerrain() == -1) setTerrain(CacheTerrDiff.CW_DT_ADDITIONAL);
+				if (getCacheSize() == -1) setCacheSize(CacheSize.CW_SIZE_NONE);
+			} else {
+				setIncomplete(true);
+			}
 		}
 	}
 

Modified: trunk/src/CacheWolf/OCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/OCXMLImporter.java	2009-05-26 16:45:55 UTC (rev 1854)
+++ trunk/src/CacheWolf/OCXMLImporter.java	2009-05-26 17:42:35 UTC (rev 1855)
@@ -438,6 +438,7 @@
 			// update (overwrite) data
 			else {
 				holder.setNew(false);
+				holder.setIncomplete(false);
 				cacheDB.get(index).update(holder);
 				// save ocCacheID, in case, the previous data is from GPX
 				DBindexID.put(holder.getOcCacheID(), new Integer(index));



From engywuck at mail.berlios.de  Tue May 26 20:51:50 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Tue, 26 May 2009 20:51:50 +0200
Subject: [Cachewolf-svn] r1856 - in trunk: res_noewe/languages src/CacheWolf
Message-ID: <200905261851.n4QIpoJx017859@sheep.berlios.de>

Author: engywuck
Date: 2009-05-26 20:51:48 +0200 (Tue, 26 May 2009)
New Revision: 1856

Modified:
   trunk/res_noewe/languages/DE.cfg
   trunk/res_noewe/languages/EN.cfg
   trunk/src/CacheWolf/Profile.java
Log:
Displaying message box when converting old format files to new format, so that the users is warned that this may take some time.

Modified: trunk/res_noewe/languages/DE.cfg
===================================================================
--- trunk/res_noewe/languages/DE.cfg	2009-05-26 17:42:35 UTC (rev 1855)
+++ trunk/res_noewe/languages/DE.cfg	2009-05-26 18:51:48 UTC (rev 1856)
@@ -682,6 +682,7 @@
 		4404=Konnte keine Verbindung zum GPS-Empf%e4nger %0a herstellen. Fehler beim %f6ffnen des seriellen Ports%0a
 		4405=%0aM%f6gliche Gr%fcnde:%0a Falscher Port %0a Ein anderes Programm blokiert den Anschluss %0a gilt nur auf Loox-Ger%e4ten: ge%f6ffneter Infrarot-Port blockiert das GPS
 		4406=Kopieren Sie java_ewe.dll in das Verzeichnis des CacheWolf-Programms
+		4407=Die vorgefundenen Dateien entsprechen nicht dem aktuellen Format.%0aDaher werden sie nun in das aktuelle Format konvertiert. Abh%e4ngig von der Gr%f6%dfe des Profils und dem verwendeten Rechner kann das einige Minuten dauern. Wir bitten um Geduld.
 		4500=Ges:
 		4501=Gez:
 		4502=Gef:

Modified: trunk/res_noewe/languages/EN.cfg
===================================================================
--- trunk/res_noewe/languages/EN.cfg	2009-05-26 17:42:35 UTC (rev 1855)
+++ trunk/res_noewe/languages/EN.cfg	2009-05-26 18:51:48 UTC (rev 1856)
@@ -671,6 +671,7 @@
 		4404=Could not connect to GPS-receiver.%0a Error while opening serial Port%0a
 		4405=%0apossible reasons:\n Another (GPS-)program is blocking the port%0awrong port%0aOn Loox: active infra-red port is blocking GPS"
 		4406=Please copy jave_ewe.dll into the directory of the cachewolf program
+		4407=The profile files are not in the current format.%0aTherefore they are now converted to the current format. Depending of the size of the profile and the computer involved this may take some minutes. Please bear with us until the conversion is done.
 		4500=Tot:
 		4501=Vis:
 		4502=Fnd:

Modified: trunk/src/CacheWolf/Profile.java
===================================================================
--- trunk/src/CacheWolf/Profile.java	2009-05-26 17:42:35 UTC (rev 1855)
+++ trunk/src/CacheWolf/Profile.java	2009-05-26 18:51:48 UTC (rev 1856)
@@ -11,6 +11,8 @@
 import ewe.sys.Convert;
 import ewe.sys.Handle;
 import ewe.sys.Vm;
+import ewe.ui.FormBase;
+import ewe.ui.MessageBox;
 import ewe.ui.ProgressBarForm;
 
 /**
@@ -259,6 +261,9 @@
 						clearProfile();
 						return;
 					}
+					if (indexXmlVersion < CURRENTFILEFORMAT) {
+						new MessageBox(MyLocale.getMsg(144, "Warning"), MyLocale.getMsg(4407, "The profile files are not in the current format.%0aTherefore they are now converted to the current format. Depending of the size of the profile and the computer involved this may take some minutes. Please bear with us until the conversion is done."), FormBase.OKB).execute();
+					}
 				} else if (text.indexOf("<SYNCOC")>=0) {
 					int start=text.indexOf("date = \"")+8;
 					setLast_sync_opencaching(text.substring(start,text.indexOf("\"",start)));



From engywuck at mail.berlios.de  Tue May 26 20:56:52 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Tue, 26 May 2009 20:56:52 +0200
Subject: [Cachewolf-svn] r1857 - trunk/src/CacheWolf
Message-ID: <200905261856.n4QIuqsC018389@sheep.berlios.de>

Author: engywuck
Date: 2009-05-26 20:56:51 +0200 (Tue, 26 May 2009)
New Revision: 1857

Modified:
   trunk/src/CacheWolf/CacheHolder.java
Log:
Corrected an unbalance in writing and reading the filter state. This may require to apply the filter once the profile is read.

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-26 18:51:48 UTC (rev 1856)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-26 18:56:51 UTC (rev 1857)
@@ -865,7 +865,7 @@
 		// To get the same list of visible caches after loading a profile,
 		// the property isVisible() is saved instead of is_filtered(), but at 
 		// the place where is_filtered() is read.
-		long value = bool2BitMask(this.isVisible(), 1)    | 
+		long value = bool2BitMask(!this.isVisible(), 1)     | 
 		             bool2BitMask(this.is_available(), 2)   |
 		             bool2BitMask(this.is_archived(), 3)    |
 		             bool2BitMask(this.has_bugs(), 4)       |
@@ -960,7 +960,7 @@
 	 * @param value The bit field as long value
 	 */
 	private void long2boolFields(long value) {
-		this.setFiltered((value & this.bool2BitMask(true, 1)) == 0);
+		this.setFiltered((value & this.bool2BitMask(true, 1)) != 0);
 		this.setAvailable((value & this.bool2BitMask(true, 2)) != 0);
 		this.setArchived((value & this.bool2BitMask(true, 3)) != 0);
 		this.setHas_bugs((value & this.bool2BitMask(true, 4)) != 0);



From engywuck at mail.berlios.de  Tue May 26 21:19:58 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Tue, 26 May 2009 21:19:58 +0200
Subject: [Cachewolf-svn] r1858 - trunk/src/CacheWolf
Message-ID: <200905261919.n4QJJwOk021411@sheep.berlios.de>

Author: engywuck
Date: 2009-05-26 21:19:57 +0200 (Tue, 26 May 2009)
New Revision: 1858

Modified:
   trunk/src/CacheWolf/Profile.java
Log:
Bugfix: Conversion warning now also appears when loading v1 profiles.

Modified: trunk/src/CacheWolf/Profile.java
===================================================================
--- trunk/src/CacheWolf/Profile.java	2009-05-26 18:56:51 UTC (rev 1857)
+++ trunk/src/CacheWolf/Profile.java	2009-05-26 19:19:57 UTC (rev 1858)
@@ -234,9 +234,16 @@
 			Extractor ex = new Extractor(null, " = \"", "\" ", 0, true);
 			
 			//ewe.sys.Time startT=new ewe.sys.Time();
+			boolean convertWarningDisplayed = false;
 			while ((text = in.readLine()) != null){
 				// Check for Line with cache data
 				if (text.indexOf("<CACHE ")>=0){
+					if (indexXmlVersion < CURRENTFILEFORMAT && !convertWarningDisplayed) {
+						if (indexXmlVersion < CURRENTFILEFORMAT) {
+							convertWarningDisplayed = true;
+							new MessageBox(MyLocale.getMsg(144, "Warning"), MyLocale.getMsg(4407, "The profile files are not in the current format.%0aTherefore they are now converted to the current format. Depending of the size of the profile and the computer involved this may take some minutes. Please bear with us until the conversion is done."), FormBase.OKB).execute();
+						}
+					}
 					CacheHolder ch=new CacheHolder(text,indexXmlVersion);
 					cacheDB.add(ch);
 				} else if (text.indexOf("<CENTRE")>=0) { // lat=  lon=
@@ -261,9 +268,6 @@
 						clearProfile();
 						return;
 					}
-					if (indexXmlVersion < CURRENTFILEFORMAT) {
-						new MessageBox(MyLocale.getMsg(144, "Warning"), MyLocale.getMsg(4407, "The profile files are not in the current format.%0aTherefore they are now converted to the current format. Depending of the size of the profile and the computer involved this may take some minutes. Please bear with us until the conversion is done."), FormBase.OKB).execute();
-					}
 				} else if (text.indexOf("<SYNCOC")>=0) {
 					int start=text.indexOf("date = \"")+8;
 					setLast_sync_opencaching(text.substring(start,text.indexOf("\"",start)));



From engywuck at mail.berlios.de  Tue May 26 21:55:26 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Tue, 26 May 2009 21:55:26 +0200
Subject: [Cachewolf-svn] r1859 - trunk/resources
Message-ID: <200905261955.n4QJtQHq025714@sheep.berlios.de>

Author: engywuck
Date: 2009-05-26 21:55:25 +0200 (Tue, 26 May 2009)
New Revision: 1859

Modified:
   trunk/resources/notes_exist.png
   trunk/resources/solver_exists.png
Log:
Changing image files for existing solver and note entries, which (hopefully) will display under Ewe.

Modified: trunk/resources/notes_exist.png
===================================================================
(Binary files differ)

Modified: trunk/resources/solver_exists.png
===================================================================
(Binary files differ)



From engywuck at mail.berlios.de  Tue May 26 22:33:07 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Tue, 26 May 2009 22:33:07 +0200
Subject: [Cachewolf-svn] r1860 - trunk/resources
Message-ID: <200905262033.n4QKX7x1030944@sheep.berlios.de>

Author: engywuck
Date: 2009-05-26 22:33:06 +0200 (Tue, 26 May 2009)
New Revision: 1860

Modified:
   trunk/resources/solver_exists.png
Log:
Using transparent image.

Modified: trunk/resources/solver_exists.png
===================================================================
(Binary files differ)



From greiol at mail.berlios.de  Wed May 27 16:53:26 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Wed, 27 May 2009 16:53:26 +0200
Subject: [Cachewolf-svn] r1861 - in trunk/src: . CacheWolf exp
Message-ID: <200905271453.n4RErQu2024765@sheep.berlios.de>

Author: greiol
Date: 2009-05-27 16:53:11 +0200 (Wed, 27 May 2009)
New Revision: 1861

Removed:
   trunk/src/io/
Modified:
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/CacheSize.java
   trunk/src/CacheWolf/CacheTerrDiff.java
   trunk/src/CacheWolf/CacheType.java
   trunk/src/CacheWolf/DetailsPanel.java
   trunk/src/CacheWolf/GuiImageBroker.java
   trunk/src/CacheWolf/SpiderGC.java
   trunk/src/exp/HTMLExporter.java
Log:
removed several try-catch-blocks for speed
html expoter now handles missing details better

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-26 20:33:06 UTC (rev 1860)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-27 14:53:11 UTC (rev 1861)
@@ -184,7 +184,7 @@
 			        start = xmlString.indexOf('"', end + 1);
 			        end = xmlString.indexOf('"', start + 1);
 			        if (isAddiWpt() || getType() == CacheType.CW_TYPE_CUSTOM) {
-			        	setHard(CacheTerrDiff.CW_DT_ADDITIONAL);
+			        	setHard(CacheTerrDiff.CW_DT_UNSET);
 			        } else {
 				        try {
 				        	setHard(CacheTerrDiff.v1Converter(xmlString.substring(start + 1, end)));
@@ -197,7 +197,7 @@
 			        start = xmlString.indexOf('"', end + 1);
 				    end = xmlString.indexOf('"', start + 1);
 				    if (isAddiWpt() || getType() == CacheType.CW_TYPE_CUSTOM) {
-				    	setTerrain(CacheTerrDiff.CW_DT_ADDITIONAL);
+				    	setTerrain(CacheTerrDiff.CW_DT_UNSET);
 				    } else {
 					    try {
 					    	setTerrain(CacheTerrDiff.v1Converter(xmlString.substring(start + 1, end)));
@@ -933,8 +933,8 @@
 				// Addis don't have their own values for difficulty, terrain and size
 				// Custom waypoints can't be updated to remove incomplete flag, so we 
 				// have to set reasonable values.
-				if (getHard() == -1) setHard(CacheTerrDiff.CW_DT_ADDITIONAL);
-				if (getTerrain() == -1) setTerrain(CacheTerrDiff.CW_DT_ADDITIONAL);
+				if (getHard() == -1) setHard(CacheTerrDiff.CW_DT_UNSET);
+				if (getTerrain() == -1) setTerrain(CacheTerrDiff.CW_DT_UNSET);
 				if (getCacheSize() == -1) setCacheSize(CacheSize.CW_SIZE_NONE);
 			} else {
 				setIncomplete(true);

Modified: trunk/src/CacheWolf/CacheSize.java
===================================================================
--- trunk/src/CacheWolf/CacheSize.java	2009-05-26 20:33:06 UTC (rev 1860)
+++ trunk/src/CacheWolf/CacheSize.java	2009-05-27 14:53:11 UTC (rev 1861)
@@ -525,4 +525,26 @@
 		}
 
 	}
+	
+	/**
+	 * checks if a given size information would be valid for use with CacheWolf.
+	 * takes about 1/20th of the time a try {} catch {} block would need, so use this
+	 * function if you just want to check
+	 * @param size size information to check
+	 * @return true if size is valid, false otherwise
+	 */
+	public static boolean isValidSize(byte size) {
+		switch (size) {
+		case CW_SIZE_NOTCHOSEN: return true;
+		case CW_SIZE_OTHER: return true;
+		case CW_SIZE_MICRO: return true;
+		case CW_SIZE_SMALL: return true;
+		case CW_SIZE_REGULAR: return true;
+		case CW_SIZE_LARGE: return true;
+		case CW_SIZE_VERYLARGE: return true;
+		case CW_SIZE_NONE: return true;
+		case CW_SIZE_VIRTUAL: return true;
+		default: return false;
+		}
+	}
 }

Modified: trunk/src/CacheWolf/CacheTerrDiff.java
===================================================================
--- trunk/src/CacheWolf/CacheTerrDiff.java	2009-05-26 20:33:06 UTC (rev 1860)
+++ trunk/src/CacheWolf/CacheTerrDiff.java	2009-05-27 14:53:11 UTC (rev 1861)
@@ -29,8 +29,8 @@
 	protected static final byte CW_DT_50 = 50;
 	/** wrong terrain or difficulty */
 	protected static final byte CW_DT_ERROR = -1;
-	/** terrain or difficulty for additional waypoints */
-	protected static final byte CW_DT_ADDITIONAL = 0;
+	/** terrain or difficulty for additional/custom waypoints */
+	protected static final byte CW_DT_UNSET = 0;
 
 	/** constructor dies nothing */
 	public CacheTerrDiff() {
@@ -104,4 +104,26 @@
 		default: throw new IllegalArgumentException("unmapped terrain or diffulty "+td);
 		}
 	}
+	
+	/**
+	 * check if a given difficulty or terrain is valid
+	 * takes about 1/20th of the time a try {} catch{} block needs
+	 * so use this function instead
+	 * @param td terrain or difficulty to check
+	 * @return true if terrain or difficulty is valid, false otherwise
+	 */
+	public static final boolean isValidTD(byte td) {
+		switch (td) {
+		case CW_DT_10: return true;
+		case CW_DT_15: return true;
+		case CW_DT_20: return true;
+		case CW_DT_25: return true;
+		case CW_DT_30: return true;
+		case CW_DT_35: return true;
+		case CW_DT_40: return true;
+		case CW_DT_45: return true;
+		case CW_DT_50: return true;
+		default: return false;
+		}
+	}
 }

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-05-26 20:33:06 UTC (rev 1860)
+++ trunk/src/CacheWolf/CacheType.java	2009-05-27 14:53:11 UTC (rev 1861)
@@ -291,8 +291,8 @@
 		case -74: return CW_TYPE_TRAILHEAD;
 		case -73: return CW_TYPE_REFERENCE;
 		case 101: return CW_TYPE_MEGA_EVENT;
-		case -62: return CW_TYPE_WHEREIGO;
-		case 100: return CW_TYPE_WHEREIGO; // yes, it can be either of those
+		case -62: return CW_TYPE_WHEREIGO; // yes, it can be either of these
+		case 100: return CW_TYPE_WHEREIGO; // yes, it can be either of these
 		case 9: return CW_TYPE_EARTH;
 		default: throw new IllegalArgumentException("unmatched argument "+type+" in CacheSize v2Converter()");
 		}
@@ -557,7 +557,7 @@
 		
 	}
 	
-	//TODO: do we actually need this one
+	//TODO: do we actually need this one?
 	/**
 	 * generate human readable type description for exporters
 	 * @param id internal type id
@@ -578,4 +578,35 @@
 		}
 		return ret;
 	}
+	
+	/**
+	 * checks if the given type would be valid for internal use in cachewolf
+	 * @param type type value to be checked
+	 * @return true if <code>type</code> matches on of the CacheWolf types, false otherwise
+	 */
+	public static final boolean isValidType(byte type) {
+		switch (type) {
+		case CW_TYPE_TRADITIONAL: return true;
+		case CW_TYPE_MULTI: return true;
+		case CW_TYPE_VIRTUAL: return true;
+		case CW_TYPE_LETTERBOX: return true;
+		case CW_TYPE_EVENT: return true;
+		case CW_TYPE_UNKNOWN: return true;
+		case CW_TYPE_WEBCAM: return true;
+		case CW_TYPE_LOCATIONLESS: return true;
+		case CW_TYPE_CITO: return true;
+		case CW_TYPE_EARTH: return true;
+		case CW_TYPE_MEGA_EVENT: return true;
+		case CW_TYPE_WHEREIGO: return true;
+		case CW_TYPE_PARKING: return true;
+		case CW_TYPE_STAGE: return true;
+		case CW_TYPE_QUESTION: return true;
+		case CW_TYPE_FINAL: return true;
+		case CW_TYPE_TRAILHEAD: return true;
+		case CW_TYPE_REFERENCE: return true;
+		case CW_TYPE_MAZE: return true;
+		case CW_TYPE_APE: return true;
+		default: return false;
+		}
+	}
 }

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-05-26 20:33:06 UTC (rev 1860)
+++ trunk/src/CacheWolf/DetailsPanel.java	2009-05-27 14:53:11 UTC (rev 1861)
@@ -213,27 +213,23 @@
 		chcSize.setInt(ch.getCacheSize());
 
 		attV.showImages(ch.getCacheDetails(true).attributes);
-		if (ch.isAddiWpt()) {
+		if (ch.isAddiWpt() || ch.getType() == CacheType.CW_TYPE_CUSTOM) {
 			lblTerr.setText("");
 			lblDiff.setText("");
 		} else {
-			try {
-				lblTerr.setText((ch.getTerrain() != CacheTerrDiff.CW_DT_ERROR) ? 
-					(MyLocale.getMsg(1001,"T")+": "+CacheTerrDiff.longDT(ch.getTerrain())) : "");
-			} catch (IllegalArgumentException ex) {
-				ch.setTerrain(CacheTerrDiff.CW_DT_ERROR);
-				ch.setIncomplete(true);
-				if (Global.getPref().debug) Global.getPref().log(ch.getWayPoint()+" has wrong terrain ", ex);
+			if (CacheTerrDiff.isValidTD(ch.getTerrain())) {
+				lblTerr.setText(MyLocale.getMsg(1001,"T")+": "+CacheTerrDiff.longDT(ch.getTerrain()));
+			} else {
 				lblTerr.setText("");
-			}
-			try {
-				lblDiff.setText((ch.getHard() != CacheTerrDiff.CW_DT_ERROR) ? 
-					(MyLocale.getMsg(1000,"D")+": "+CacheTerrDiff.longDT(ch.getHard())) : "");
-			} catch (IllegalArgumentException ex) {
-				ch.setHard(CacheTerrDiff.CW_DT_ERROR);
 				ch.setIncomplete(true);
-				if (Global.getPref().debug) Global.getPref().log(ch.getWayPoint()+" has wrong difficulty ", ex);
+				if (Global.getPref().debug) Global.getPref().log(ch.getWayPoint()+" has wrong terrain "+ch.getTerrain());
+			}
+			if (CacheTerrDiff.isValidTD(ch.getHard())) {
+				lblDiff.setText(MyLocale.getMsg(1000,"D")+": "+CacheTerrDiff.longDT(ch.getHard()));
+			} else {
 				lblDiff.setText("");
+				ch.setIncomplete(true);
+				if (Global.getPref().debug) Global.getPref().log(ch.getWayPoint()+" has wrong difficulty "+ch.getHard());
 			}
 		}
 

Modified: trunk/src/CacheWolf/GuiImageBroker.java
===================================================================
--- trunk/src/CacheWolf/GuiImageBroker.java	2009-05-26 20:33:06 UTC (rev 1860)
+++ trunk/src/CacheWolf/GuiImageBroker.java	2009-05-27 14:53:11 UTC (rev 1861)
@@ -58,9 +58,8 @@
 	 * select image to be displayed for a given cache type
 	 * @param id internal cache type id
 	 * @return <code>Image</code> object to be displayed
-	 * @throws IllegalArgumentException if <code>id</code> has no associated image
 	 */
-	public static Image getTypeImage(byte id) throws IllegalArgumentException {
+	public static Image getTypeImage(byte id) {
 		switch (id) {
 		case CacheType.CW_TYPE_CUSTOM: return typeImages[0];
 		case CacheType.CW_TYPE_APE: return typeImages[1];
@@ -84,7 +83,7 @@
 		case CacheType.CW_TYPE_VIRTUAL: return typeImages[19];
 		case CacheType.CW_TYPE_WEBCAM: return typeImages[20];
 		case CacheType.CW_TYPE_WHEREIGO: return typeImages[21];
-		default: throw new IllegalArgumentException("unmatched id "+id+" in GuiImageBroker getTypeImage()");
+		default: return imageError;
 		}	
 	}
 }

Modified: trunk/src/CacheWolf/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/SpiderGC.java	2009-05-26 20:33:06 UTC (rev 1860)
+++ trunk/src/CacheWolf/SpiderGC.java	2009-05-27 14:53:11 UTC (rev 1861)
@@ -1374,8 +1374,8 @@
 				hd.getFreshDetails().setLongDescription(descRex.stringMatched(1));
 				hd.setFound(is_found);
 				hd.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
-				hd.setHard(CacheTerrDiff.CW_DT_ADDITIONAL);
-				hd.setTerrain(CacheTerrDiff.CW_DT_ADDITIONAL);
+				hd.setHard(CacheTerrDiff.CW_DT_UNSET);
+				hd.setTerrain(CacheTerrDiff.CW_DT_UNSET);
 				if (idx<0){
 					cacheDB.add(hd);
 					hd.save();

Modified: trunk/src/exp/HTMLExporter.java
===================================================================
--- trunk/src/exp/HTMLExporter.java	2009-05-26 20:33:06 UTC (rev 1860)
+++ trunk/src/exp/HTMLExporter.java	2009-05-27 14:53:11 UTC (rev 1861)
@@ -88,35 +88,17 @@
 					varParams.put("WAYPOINT", ch.getWayPoint());
 					varParams.put("NAME", ch.getCacheName());
 					varParams.put("OWNER", ch.getCacheOwner());
-					if (ch.isAddiWpt()) {
+					if (ch.isAddiWpt() || CacheType.CW_TYPE_CUSTOM == ch.getType()) {
 						varParams.put("SIZE", "");
 						varParams.put("DIFFICULTY", "");
 						varParams.put("TERRAIN", "");
 					} else {
-						try {
-							varParams.put("SIZE", CacheSize.cw2ExportString(ch.getCacheSize()));
-						} catch (IllegalArgumentException ex) {
-							varParams.put("SIZE", "");
-							if (Global.getPref().debug) {
-								Global.getPref().log(ch.getWayPoint()+" has wrong size ", ex);
-							}
-						}
-						try {
-							varParams.put("DIFFICULTY", CacheTerrDiff.longDT(ch.getHard()));
-						} catch (IllegalArgumentException ex) {
-							varParams.put("DIFFICULTY", "");
-							if (Global.getPref().debug) {
-								Global.getPref().log(ch.getWayPoint()+" has wrong difficulty ", ex);
-							}
-						}
-						try {
-							varParams.put("TERRAIN", CacheTerrDiff.longDT(ch.getTerrain()));
-						} catch (IllegalArgumentException ex) {
-							varParams.put("TERRAIN", "");
-							if (Global.getPref().debug) {
-								Global.getPref().log(ch.getWayPoint()+" has wrong terrain ", ex);
-							}
-						}
+						varParams.put("SIZE", CacheSize.isValidSize(ch.getCacheSize())?
+								CacheSize.cw2ExportString(ch.getCacheSize()):"");
+						varParams.put("DIFFICULTY", CacheTerrDiff.isValidTD(ch.getHard())? 
+								CacheTerrDiff.longDT(ch.getHard()):"");
+						varParams.put("TERRAIN", CacheTerrDiff.isValidTD(ch.getTerrain())?
+								CacheTerrDiff.longDT(ch.getTerrain()):"");
 					}
 					varParams.put("DISTANCE", ch.getDistance());
 					varParams.put("BEARING", ch.bearing);
@@ -127,57 +109,38 @@
 					//We can generate the individual page here!
 					try{
 						Template page_tpl = new Template(template_init_page);
-						page_tpl.setParam("TYPE", CacheType.cw2ExportString(ch.getType()));
-						page_tpl.setParam("SIZE", CacheSize.cw2ExportString(ch.getCacheSize()));
+						page_tpl.setParam("TYPE", varParams.get("TYPE").toString());
+						page_tpl.setParam("SIZE", varParams.get("SIZE").toString());
 						page_tpl.setParam("WAYPOINT", ch.getWayPoint());
 						page_tpl.setParam("NAME", ch.getCacheName());
 						page_tpl.setParam("OWNER", ch.getCacheOwner());
-						page_tpl.setParam("DIFFICULTY", ch.getHard());
-						page_tpl.setParam("TERRAIN", ch.getTerrain());
+						page_tpl.setParam("DIFFICULTY", varParams.get("DIFFICULTY").toString());
+						page_tpl.setParam("TERRAIN", varParams.get("TERRAIN").toString());
 						page_tpl.setParam("DISTANCE", ch.getDistance());
 						page_tpl.setParam("BEARING", ch.bearing);
 						page_tpl.setParam("LATLON", ch.LatLon);
 						page_tpl.setParam("STATUS", ch.getCacheStatus());
 						page_tpl.setParam("DATE", ch.getDateHidden());
-						if (ch.is_HTML())
-							page_tpl.setParam("DESCRIPTION", modifyLongDesc(det,targetDir));
-						else {
-							String dummyText = new String();
-							try {
-							dummyText = STRreplace.replace(det.LongDescription, "\n", "<br>");
-							} catch (NullPointerException e) {
-								dummyText = "CacheWolf Error: Missing Long Description";
-						}
-							page_tpl.setParam("DESCRIPTION",dummyText);
-						}
-						try {
+						if (det != null) {
+							if (ch.is_HTML()) {
+								page_tpl.setParam("DESCRIPTION", modifyLongDesc(det,targetDir));
+							} else {
+								page_tpl.setParam("DESCRIPTION",STRreplace.replace(det.LongDescription, "\n", "<br>"));
+							}
 							page_tpl.setParam("HINTS", det.Hints);
-						} catch (NullPointerException e) { 
-							page_tpl.setParam("HINTS", "CacheWolf Error: Hint information missing");
-						}
-						try {
 							page_tpl.setParam("DECRYPTEDHINTS", Common.rot13(det.Hints));
-						} catch (NullPointerException e) { 
-							page_tpl.setParam("DECRYPTEDHINTS", Common.rot13("CacheWolf Error: Hint information missing"));
-						}
-						
-						StringBuffer sb=new StringBuffer(2000);
-						try {
+							
+							StringBuffer sb=new StringBuffer(2000);
 							for(int j = 0; j<det.CacheLogs.size(); j++){
 								sb.append(STRreplace.replace(det.CacheLogs.getLog(j).toHtml(),"http://www.geocaching.com/images/icons/",null));
 								sb.append("<br>");
 								icon=det.CacheLogs.getLog(j).getIcon();
 								if (logIcons.find(icon)<0) logIcons.add(icon); // Add the icon to list of icons to copy to dest directory
 							}
-						} catch (Exception e) { Vm.debug("P "+e); } //TODO: find out what is going wrong and especially why
-						try {
+							
 							page_tpl.setParam("LOGS", sb.toString());
-						} catch (Exception e) { Vm.debug("Q "+e); } //TODO: find out what is going wrong and especially why
-						try {
 							page_tpl.setParam("NOTES", STRreplace.replace(det.getCacheNotes(), "\n","<br>"));
-						} catch (Exception e) { Vm.debug("R "+e); } //TODO: find out what is going wrong and especially why
-						// Cache Images
-						try {
+							
 							cacheImg.clear();
 							for(int j = 0; j<det.Images.size(); j++){
 								imgParams = new Hashtable();
@@ -190,9 +153,8 @@
 								DataMover.copy(profile.dataDir + imgFile,targetDir + imgFile);
 								cacheImg.add(imgParams);
 							}
-						} catch (Exception e) { Vm.debug("S "+e); } //TODO: find out what is going wrong and especially why
-						try {
 							page_tpl.setParam("cacheImg", cacheImg);
+							
 							// Log images
 							logImg.clear();
 							for(int j = 0; j<det.LogImages.size(); j++){
@@ -206,9 +168,8 @@
 								DataMover.copy(profile.dataDir + logImgFile,targetDir + logImgFile);
 								logImg.add(logImgParams);
 							}
-						} catch (Exception e) { Vm.debug("T "+e); } //TODO: find out what is going wrong and especially why
-						try {
 							page_tpl.setParam("logImg", logImg);
+							
 							// User images
 							usrImg.clear();
 							for(int j = 0; j<det.UserImages.size(); j++){
@@ -222,18 +183,16 @@
 								DataMover.copy(profile.dataDir + usrImgFile,targetDir + usrImgFile);
 								usrImg.add(usrImgParams);
 							}
-						} catch (Exception e) { Vm.debug("U "+e); } //TODO: find out what is going wrong and especially why
-						
-						page_tpl.setParam("userImg", usrImg);
+							page_tpl.setParam("userImg", usrImg);
+							
+							// Map images
+							mapImg.clear();
+							mapImgParams = new Hashtable();
+							
+							String mapImgFile = new String(ch.getWayPoint() + "_map.gif");
+							// check if map file exists
+							File test = new File(profile.dataDir + mapImgFile);
 
-						// Map images
-						mapImg.clear();
-						mapImgParams = new Hashtable();
-						
-						String mapImgFile = new String(ch.getWayPoint() + "_map.gif");
-						// check if map file exists
-						File test = new File(profile.dataDir + mapImgFile);
-						try {
 							if (test.exists()) {
 								mapImgParams.put("FILE", mapImgFile);
 								mapImgParams.put("TEXT",mapImgFile);
@@ -249,12 +208,21 @@
 		
 								page_tpl.setParam("mapImg", mapImg);
 							}
-						} catch (Exception e) { Vm.debug("V "+e); } //TODO: find out what is going wrong and especially why
-						try {
-							PrintWriter pagefile = new PrintWriter(new BufferedWriter(new FileWriter(targetDir + ch.getWayPoint()+".html")));
-							pagefile.print(page_tpl.output());
-							pagefile.close();
-						} catch (Exception e) { Vm.debug("W "+e); }  //TODO: find out what is going wrong and especially why
+						} else {
+							page_tpl.setParam("DESCRIPTION", "");
+							page_tpl.setParam("HINTS", "");
+							page_tpl.setParam("DECRYPTEDHINTS", "");
+							page_tpl.setParam("LOGS", "");
+							page_tpl.setParam("NOTES", "");
+							page_tpl.setParam("cacheImg", cacheImg);
+							page_tpl.setParam("logImg", ""); // ???
+							page_tpl.setParam("userImg", ""); // ???
+							page_tpl.setParam("mapImg", ""); // ???
+						}
+						
+						PrintWriter pagefile = new PrintWriter(new BufferedWriter(new FileWriter(targetDir + ch.getWayPoint()+".html")));
+						pagefile.print(page_tpl.output());
+						pagefile.close();
 					}catch(Exception e){
 						Vm.debug("Problem writing waypoint html file"+e);
 					}



From engywuck at mail.berlios.de  Wed May 27 20:02:15 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Wed, 27 May 2009 20:02:15 +0200
Subject: [Cachewolf-svn] r1862 - in trunk: res_noewe/languages src/CacheWolf
Message-ID: <200905271802.n4RI2FMD027351@sheep.berlios.de>

Author: engywuck
Date: 2009-05-27 20:02:09 +0200 (Wed, 27 May 2009)
New Revision: 1862

Modified:
   trunk/res_noewe/languages/DE.cfg
   trunk/res_noewe/languages/EN.cfg
   trunk/res_noewe/languages/FR.cfg
   trunk/res_noewe/languages/NL.cfg
   trunk/src/CacheWolf/LogList.java
   trunk/src/CacheWolf/MainMenu.java
   trunk/src/CacheWolf/SearchBox.java
   trunk/src/CacheWolf/SearchCache.java
Log:
Enhanced searching facility: Now possible to search in logs, too.

Modified: trunk/res_noewe/languages/DE.cfg
===================================================================
--- trunk/res_noewe/languages/DE.cfg	2009-05-27 14:53:11 UTC (rev 1861)
+++ trunk/res_noewe/languages/DE.cfg	2009-05-27 18:02:09 UTC (rev 1862)
@@ -114,6 +114,7 @@
 		222=Der Filter existiert schon. %dcberschreiben?
 		223=Filter l%f6schen?
 		224=+- Den gespeicherten Filter l%f6schen? 
+		225=Auch in Logs
 		299=Regul%e4rer Ausdruck
 		300=Type:
 		301=Gr%f6%dfe:

Modified: trunk/res_noewe/languages/EN.cfg
===================================================================
--- trunk/res_noewe/languages/EN.cfg	2009-05-27 14:53:11 UTC (rev 1861)
+++ trunk/res_noewe/languages/EN.cfg	2009-05-27 18:02:09 UTC (rev 1862)
@@ -114,6 +114,7 @@
 		222=This filter already exists. Overwrite it?
 		223=Delete filter?
 		224=+- Delete the saved filter?
+		225=Also in logs
 		299=Regular expression
 		300=Type:
 		301=Size:

Modified: trunk/res_noewe/languages/FR.cfg
===================================================================
--- trunk/res_noewe/languages/FR.cfg	2009-05-27 14:53:11 UTC (rev 1861)
+++ trunk/res_noewe/languages/FR.cfg	2009-05-27 18:02:09 UTC (rev 1862)
@@ -111,6 +111,7 @@
 		222=Ce filtre existe d%e9j%e0. %c9craser-le?
 		223=Effacer filtre?
 		224=+- Effacer ce filtre enregistr%e9?
+		225=Aussi dans logs
 		299=Expression rationnelle
 		300=Type:
 		301=Gabarit:

Modified: trunk/res_noewe/languages/NL.cfg
===================================================================
--- trunk/res_noewe/languages/NL.cfg	2009-05-27 14:53:11 UTC (rev 1861)
+++ trunk/res_noewe/languages/NL.cfg	2009-05-27 18:02:09 UTC (rev 1862)
@@ -103,6 +103,7 @@
 		222=De filter exiteerd al. Overschrijven?
 		223=Filter verwijderen?
 		224=+- Deze filter verwijderen?
+		225=Ook in logs
 		299=Reguliere expressie
 		300=Type:
 		301=Grote:

Modified: trunk/src/CacheWolf/LogList.java
===================================================================
--- trunk/src/CacheWolf/LogList.java	2009-05-27 14:53:11 UTC (rev 1861)
+++ trunk/src/CacheWolf/LogList.java	2009-05-27 18:02:09 UTC (rev 1862)
@@ -6,6 +6,7 @@
 	/** The Vector containing the Log objects 
 	 * The list is always sorted in descending order */
 	private Vector logList=new Vector(10);
+	private static final StringBuffer buffer = new StringBuffer();
 
 	/** Construct an empty Log list */
 	public LogList() { // Public constructor
@@ -131,4 +132,17 @@
 	 public static int getScore(int numrecommends, int numfoundlogs) {
 		 return Math.round((((float)numrecommends * (float)numrecommends +1f ) / (numfoundlogs / 10f +1f))*100f);
 	 }
+	 
+	 /**
+	  * Returns a simple concatenation of all Log texts of the list. Intended for text search in 
+	  * Logs.
+	 * @return All log messages
+	 */
+	public String allMessages() {
+		 buffer.setLength(0);
+		 for (int i=0; i<logList.size(); i++) {
+			 buffer.append(((Log)logList.get(i)).getMessage());
+		 }
+		 return buffer.toString();
+	 }
 }

Modified: trunk/src/CacheWolf/MainMenu.java
===================================================================
--- trunk/src/CacheWolf/MainMenu.java	2009-05-27 14:53:11 UTC (rev 1861)
+++ trunk/src/CacheWolf/MainMenu.java	2009-05-27 18:02:09 UTC (rev 1862)
@@ -39,6 +39,7 @@
 	private FilterScreen scnFilter=new FilterScreen();
 	private boolean addExeToGpsbabel = false;
 	private static boolean searchInDescriptionAndNotes = false;
+	private static boolean searchInLogs = false;
 
 	public MainMenu(Form f){
 		father = f;
@@ -248,11 +249,12 @@
 
 	public static void search() {
 		SearchBox inp = new SearchBox(MyLocale.getMsg(119,"Search for:"));
-		String srch = inp.input(null,"",searchInDescriptionAndNotes,10);
+		String srch = inp.input(null,"",searchInDescriptionAndNotes,searchInLogs,10);
 		if (srch != null) {
 			searchInDescriptionAndNotes = inp.useNoteDesc();
+			searchInLogs = inp.useLogs();
 			SearchCache ssc = new SearchCache(Global.getProfile().cacheDB);
-			ssc.search(srch, searchInDescriptionAndNotes);
+			ssc.search(srch, searchInDescriptionAndNotes, searchInLogs);
 			Global.mainTab.tbP.refreshTable();
 		}
 	}

Modified: trunk/src/CacheWolf/SearchBox.java
===================================================================
--- trunk/src/CacheWolf/SearchBox.java	2009-05-27 14:53:11 UTC (rev 1861)
+++ trunk/src/CacheWolf/SearchBox.java	2009-05-27 18:02:09 UTC (rev 1862)
@@ -15,6 +15,7 @@
 public class SearchBox extends InputBox {
 
 	protected mCheckBox useNoteDesc;
+	protected mCheckBox useLogs;
 	protected boolean buildingForm = false;
 
 	/**
@@ -30,24 +31,27 @@
 	 * the value is null.
 	 * @param initialValue Initial value to display in the search box
 	 * @param checkUseNoteDesc Initial value for check box
+	 * @param checkUseLogs Initial value for check box
 	 * @param pWidth ?
 	 * @return String to search for if ok is pressed and a string is entered, <code>null</code> otherwise.
 	 */
-	public String input(String initialValue, boolean checkUseNoteDesc, int pWidth) {
-		return this.input(null, initialValue, checkUseNoteDesc, pWidth);
+	public String input(String initialValue, boolean checkUseNoteDesc, boolean checkUseLogs, int pWidth) {
+		return this.input(null, initialValue, checkUseNoteDesc, checkUseLogs, pWidth);
 	}
 	
-	protected String input(Frame pParent, String initialValue, boolean checkUseNoteDesc, int pWidth) {
+	protected String input(Frame pParent, String initialValue, boolean checkUseNoteDesc, boolean checkUseLogs, int pWidth) {
 		String result;
 		buildingForm = true;
 		useNoteDesc = new mCheckBox(MyLocale.getMsg(218,"Also in description/notes"));//,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 		useNoteDesc.setState(checkUseNoteDesc);		
+		useLogs = new mCheckBox(MyLocale.getMsg(21888,"Also in logs"));//,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
+		useLogs.setState(checkUseLogs);		
 		result = super.input(pParent, initialValue, pWidth);
 		return result;
     }
 	
 	/**
-	 * Queries the check box if it is checked or not.
+	 * Queries the check box to search in Notes and Description if it is checked or not.
 	 * @return <code>True</code> if check box is checked, <code>false</code> if not.
 	 */
 	public boolean useNoteDesc() {
@@ -57,6 +61,18 @@
 		}
 		return result;
 	}
+
+	/**
+	 * Queries the check box to search in Logs if it is checked or not.
+	 * @return <code>True</code> if check box is checked, <code>false</code> if not.
+	 */
+	public boolean useLogs() {
+		boolean result = false;
+		if (useLogs != null) {
+			result = useLogs.getState();
+		}
+		return result;
+	}
 	
 	public Control addLast(Control c) {
 		// This method is a dirty hack, because in InputBox every thing, from creation of the 
@@ -89,6 +105,9 @@
 		if (useNoteDesc != null) {
 			this.addLast(useNoteDesc,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 		}
+		if (useLogs != null) {
+			this.addLast(useLogs,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
+		}
     }
 
 

Modified: trunk/src/CacheWolf/SearchCache.java
===================================================================
--- trunk/src/CacheWolf/SearchCache.java	2009-05-27 14:53:11 UTC (rev 1861)
+++ trunk/src/CacheWolf/SearchCache.java	2009-05-27 18:02:09 UTC (rev 1862)
@@ -20,13 +20,13 @@
 	* and / or cache name) is flagged as matching. The search only
 	* acts on the filtered (=visible) set of caches
 	*/
-	public void search(String searchStr, boolean searchInDescriptionAndNotes){
+	public void search(String searchStr, boolean searchInDescriptionAndNotes, boolean searchInLogs){
 		if(searchStr.length()>0){
 			Global.getProfile().selectionChanged = true;
 			searchStr = searchStr.toUpperCase();
 			CacheHolder ch;
 			int counter = 0;
-			if (searchInDescriptionAndNotes) {
+			if (searchInDescriptionAndNotes || searchInLogs) {
 				for(int i=0 ; i<cacheDB.size(); i++) {
 					if (!cacheDB.get(i).isVisible()) break;
 					counter++;
@@ -48,7 +48,9 @@
 				   ch.getCacheStatus().toUpperCase().indexOf(searchStr)<0 &&
 				   (! searchInDescriptionAndNotes || 
 					ch.getExistingDetails().LongDescription.toUpperCase().indexOf(searchStr)<0 &&
-					ch.getExistingDetails().getCacheNotes().toUpperCase().indexOf(searchStr)<0)){
+					ch.getExistingDetails().getCacheNotes().toUpperCase().indexOf(searchStr)<0)&&
+				   (! searchInLogs ||
+					ch.getExistingDetails().CacheLogs.allMessages().toUpperCase().indexOf(searchStr)<0)){
 					ch.is_flaged = false;
 				} else
 					ch.is_flaged=true;



From engywuck at mail.berlios.de  Wed May 27 20:03:52 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Wed, 27 May 2009 20:03:52 +0200
Subject: [Cachewolf-svn] r1863 - trunk/src/CacheWolf
Message-ID: <200905271803.n4RI3qdn027498@sheep.berlios.de>

Author: engywuck
Date: 2009-05-27 20:03:51 +0200 (Wed, 27 May 2009)
New Revision: 1863

Modified:
   trunk/src/CacheWolf/SearchBox.java
Log:
Oops, wrong value for message ID.

Modified: trunk/src/CacheWolf/SearchBox.java
===================================================================
--- trunk/src/CacheWolf/SearchBox.java	2009-05-27 18:02:09 UTC (rev 1862)
+++ trunk/src/CacheWolf/SearchBox.java	2009-05-27 18:03:51 UTC (rev 1863)
@@ -44,7 +44,7 @@
 		buildingForm = true;
 		useNoteDesc = new mCheckBox(MyLocale.getMsg(218,"Also in description/notes"));//,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 		useNoteDesc.setState(checkUseNoteDesc);		
-		useLogs = new mCheckBox(MyLocale.getMsg(21888,"Also in logs"));//,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
+		useLogs = new mCheckBox(MyLocale.getMsg(225,"Also in logs"));//,CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
 		useLogs.setState(checkUseLogs);		
 		result = super.input(pParent, initialValue, pWidth);
 		return result;



From engywuck at mail.berlios.de  Wed May 27 20:10:56 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Wed, 27 May 2009 20:10:56 +0200
Subject: [Cachewolf-svn] r1864 - in trunk/src/CacheWolf: . navi
Message-ID: <200905271810.n4RIAuqI028199@sheep.berlios.de>

Author: engywuck
Date: 2009-05-27 20:10:53 +0200 (Wed, 27 May 2009)
New Revision: 1864

Modified:
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/CacheTerrDiff.java
   trunk/src/CacheWolf/CacheType.java
   trunk/src/CacheWolf/FilterScreen.java
   trunk/src/CacheWolf/GuiImageBroker.java
   trunk/src/CacheWolf/OCXMLImporter.java
   trunk/src/CacheWolf/navi/MovingMap.java
Log:
A little cleanup (compiler warnings, unneeded code, ...)

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-27 18:03:51 UTC (rev 1863)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-27 18:10:53 UTC (rev 1864)
@@ -212,9 +212,6 @@
 			        end = xmlString.indexOf('"', start + 1);
 			        setFiltered(xmlString.substring(start + 1, end).equals("true"));
 	
-			        if (isAddiWpt() || getType() == CacheType.CW_TYPE_CUSTOM) {
-			        	
-			        } 
 			        start = xmlString.indexOf('"', end + 1);
 			        end = xmlString.indexOf('"', start + 1);
 			        if (isAddiWpt() || getType() == CacheType.CW_TYPE_CUSTOM) {

Modified: trunk/src/CacheWolf/CacheTerrDiff.java
===================================================================
--- trunk/src/CacheWolf/CacheTerrDiff.java	2009-05-27 18:03:51 UTC (rev 1863)
+++ trunk/src/CacheWolf/CacheTerrDiff.java	2009-05-27 18:10:53 UTC (rev 1864)
@@ -33,7 +33,7 @@
 	protected static final byte CW_DT_UNSET = 0;
 
 	/** constructor dies nothing */
-	public CacheTerrDiff() {
+	private CacheTerrDiff() { // no instantiation needed 
 	}
 	
 	/**

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-05-27 18:03:51 UTC (rev 1863)
+++ trunk/src/CacheWolf/CacheType.java	2009-05-27 18:10:53 UTC (rev 1864)
@@ -194,7 +194,7 @@
 	public static final String GC_GPX_APE = "Project APE Cache"; 
 	
 	/**  constructor does nothing */
-	public CacheType() {
+	private CacheType() { // no instantiation needed
 
 	}
 	

Modified: trunk/src/CacheWolf/FilterScreen.java
===================================================================
--- trunk/src/CacheWolf/FilterScreen.java	2009-05-27 18:03:51 UTC (rev 1863)
+++ trunk/src/CacheWolf/FilterScreen.java	2009-05-27 18:10:53 UTC (rev 1864)
@@ -85,8 +85,8 @@
 	}
 	private myChkBox addiWptChk;
 	
-	private mButton addImg(Image image) {
-		mButton mb = new mButton(image);
+	private mButton addImg(Image pImage) {
+		mButton mb = new mButton(pImage);
 		mb.borderWidth=0; 
 		mb.modify(NotEditable|PreferredSizeOnly,0);
 		return mb;

Modified: trunk/src/CacheWolf/GuiImageBroker.java
===================================================================
--- trunk/src/CacheWolf/GuiImageBroker.java	2009-05-27 18:03:51 UTC (rev 1863)
+++ trunk/src/CacheWolf/GuiImageBroker.java	2009-05-27 18:10:53 UTC (rev 1864)
@@ -51,7 +51,7 @@
 	};
 
 	/** constructor does nothing */
-	public GuiImageBroker() {
+	private GuiImageBroker() { // no instantiation needed
 	}
 	
 	/**

Modified: trunk/src/CacheWolf/OCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/OCXMLImporter.java	2009-05-27 18:03:51 UTC (rev 1863)
+++ trunk/src/CacheWolf/OCXMLImporter.java	2009-05-27 18:10:53 UTC (rev 1864)
@@ -688,29 +688,6 @@
 
 
 	/**
-	 *	Method to translate opencaching size types to geocaching types.
-	 *	Required to be "backwards" compatible :-(
-	 *	OC	GC	Comment	Rule
-	 *	1	5	other size	1->5
-	 *	2 	1	micro		2->1
-	 *	3 	2	small		3->2
-	 *	4	3	normal		4->3
-	 *	5 	4	large		5->4
-	 *	6	6	very large	6->6
-	 *	7	7	no container	7->7
-	 */
-	private String transSize(String type){
-		if(type.equals("1")) return "Other";
-		if(type.equals("2")) return "Micro";
-		if(type.equals("3")) return "Small";
-		if(type.equals("4")) return "Regular";
-		if(type.equals("5")) return "Large";
-		if(type.equals("6")) return "Very Large";
-		if(type.equals("7")) return "None";
-		return "0";
-	}
-
-	/**
 	 * Method to iterate through cache database and look for cacheID.
 	 * Returns value >= 0 if cacheID is found, else -1
 	 */

Modified: trunk/src/CacheWolf/navi/MovingMap.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMap.java	2009-05-27 18:03:51 UTC (rev 1863)
+++ trunk/src/CacheWolf/navi/MovingMap.java	2009-05-27 18:10:53 UTC (rev 1864)
@@ -3,7 +3,6 @@
 import CacheWolf.CWPoint;
 import CacheWolf.CacheDB;
 import CacheWolf.CacheHolder;
-import CacheWolf.CacheType;
 import CacheWolf.Global;
 import CacheWolf.GuiImageBroker;
 import CacheWolf.InfoBox;



From greiol at mail.berlios.de  Thu May 28 22:07:31 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Thu, 28 May 2009 22:07:31 +0200
Subject: [Cachewolf-svn] r1865 - trunk/src/CacheWolf
Message-ID: <200905282007.n4SK7VbL013808@sheep.berlios.de>

Author: greiol
Date: 2009-05-28 22:07:29 +0200 (Thu, 28 May 2009)
New Revision: 1865

Modified:
   trunk/src/CacheWolf/CacheType.java
Log:
for those with funny gpx files. it's a bad world out there ;-)

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-05-27 18:10:53 UTC (rev 1864)
+++ trunk/src/CacheWolf/CacheType.java	2009-05-28 20:07:29 UTC (rev 1865)
@@ -421,7 +421,6 @@
 	 * convert the strings found in import of GPX from GC, OC or TC to internal cache type 
 	 * @param gpxType type information found in GPX
 	 * @return internal cache type
-	 * @throws IllegalArgumentException if <code>gpxType</code> can not be matched
 	 */
 	public static final byte gpxType2CwType(String gpxType) throws IllegalArgumentException {
 		if (gpxType.equals(GC_GPX_TRADITIONAL) || gpxType.equals("Traditional")|| gpxType.equals("Classic")) return CW_TYPE_TRADITIONAL;
@@ -444,7 +443,7 @@
 		if (gpxType.equals(GC_GPX_REFERENCE)) return CW_TYPE_REFERENCE;
 		if (gpxType.equals(GC_GPX_MAZE)) return CW_TYPE_MAZE;
 		if (gpxType.equals(GC_GPX_APE)) return CW_TYPE_APE;
-		throw new IllegalArgumentException("unmatched argument "+gpxType+" in CacheSize gpxType2CwType()");
+		return CW_TYPE_CUSTOM;
 	}
 	
 	/**



From greiol at mail.berlios.de  Fri May 29 15:31:01 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Fri, 29 May 2009 15:31:01 +0200
Subject: [Cachewolf-svn] r1866 - in trunk: resources src/CacheWolf
Message-ID: <200905291331.n4TDV1Sv010577@sheep.berlios.de>

Author: greiol
Date: 2009-05-29 15:30:53 +0200 (Fri, 29 May 2009)
New Revision: 1866

Modified:
   trunk/resources/guiError.png
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/GPXImporter.java
   trunk/src/CacheWolf/MyComparer.java
   trunk/src/CacheWolf/myTableModel.java
Log:
use more obvious icon for errors in gui
gpx importer needs to set terrain and difficuly for additional waypoints

Modified: trunk/resources/guiError.png
===================================================================
(Binary files differ)

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2009-05-28 20:07:29 UTC (rev 1865)
+++ trunk/src/CacheWolf/CacheHolder.java	2009-05-29 13:30:53 UTC (rev 1866)
@@ -1038,7 +1038,7 @@
 	public IconAndText getIconAndTextWP(int level, FontMetrics fm) {
 		if (level != iconAndTextWPLevel || iconAndTextWP == null) {
 			switch (level) {
-				case 4: iconAndTextWP = new IconAndText(myTableModel.skull, this.getWayPoint(), fm); break;
+				case 4: iconAndTextWP = new IconAndText(GuiImageBroker.imageError, this.getWayPoint(), fm); break;
 				case 3: iconAndTextWP = new IconAndText(myTableModel.yellow, this.getWayPoint(), fm); break;
 				case 2: iconAndTextWP = new IconAndText(myTableModel.red, this.getWayPoint(), fm); break;
 				case 1: iconAndTextWP = new IconAndText(myTableModel.blue, this.getWayPoint(), fm); break;

Modified: trunk/src/CacheWolf/GPXImporter.java
===================================================================
--- trunk/src/CacheWolf/GPXImporter.java	2009-05-28 20:07:29 UTC (rev 1865)
+++ trunk/src/CacheWolf/GPXImporter.java	2009-05-29 13:30:53 UTC (rev 1866)
@@ -388,6 +388,8 @@
 		if (name.equals("type")&& inWpt && !inCache && strData.startsWith("Waypoint")){
 			holder.setType(CacheType.gpxType2CwType(strData));
 			holder.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
+			holder.setHard(CacheTerrDiff.CW_DT_UNSET);
+			holder.setTerrain(CacheTerrDiff.CW_DT_UNSET);
 		}
 		
 		if ((name.equals("groundspeak:name")|| name.equals("terra:name")) && inCache) {

Modified: trunk/src/CacheWolf/MyComparer.java
===================================================================
--- trunk/src/CacheWolf/MyComparer.java	2009-05-28 20:07:29 UTC (rev 1865)
+++ trunk/src/CacheWolf/MyComparer.java	2009-05-29 13:30:53 UTC (rev 1866)
@@ -25,12 +25,12 @@
 		} else if (colToCompare==2) {
 			for (int i=0; i<visibleSize; i++) {
 				CacheHolder ch=cacheDB.get(i);
-				ch.sort=CacheTerrDiff.longDT(ch.getHard());
+				ch.sort=String.valueOf(ch.getHard());
 			}
 		} else if (colToCompare==3) {
 			for (int i=0; i<visibleSize; i++) {
 				CacheHolder ch=cacheDB.get(i);
-				ch.sort=CacheTerrDiff.longDT(ch.getTerrain());
+				ch.sort=String.valueOf(ch.getTerrain());
 			}
 		} else if (colToCompare==4) {
 			for (int i=0; i<visibleSize; i++) {

Modified: trunk/src/CacheWolf/myTableModel.java
===================================================================
--- trunk/src/CacheWolf/myTableModel.java	2009-05-28 20:07:29 UTC (rev 1865)
+++ trunk/src/CacheWolf/myTableModel.java	2009-05-29 13:30:53 UTC (rev 1866)
@@ -45,7 +45,7 @@
 			MyLocale.getMsg(1040,"N")};
 	
 	private static Image noFindLogs[] = new Image[4];
-	public static mImage red, blue, yellow, skull; // green
+	public static mImage red, blue, yellow; // skull, green
 	private Image checkboxTicked,checkboxUnticked;
 	private mImage bug;
 	private boolean sortAsc = false;
@@ -79,7 +79,7 @@
 		blue = new mImage("blue.png"); blue.transparentColor=Color.White;
 		//green = new mImage("green.png");green.transparentColor=Color.White;
 		yellow = new mImage("yellow.png");yellow.transparentColor=Color.White;
-		skull = new mImage("skull.png");skull.transparentColor=Color.DarkBlue;
+		//skull = new mImage("skull.png");skull.transparentColor=Color.DarkBlue;
 		bug = new mImage("bug_table.png");bug.transparentColor=Color.DarkBlue;
 		checkboxTicked = new Image("checkboxTicked.png");
 		checkboxUnticked= new Image("checkboxUnticked.png");



From salzkammergut at mail.berlios.de  Fri May 29 19:36:35 2009
From: salzkammergut at mail.berlios.de (salzkammergut at mail.berlios.de)
Date: Fri, 29 May 2009 19:36:35 +0200
Subject: [Cachewolf-svn] r1867 - in trunk: res_noewe src/exp
Message-ID: <200905291736.n4THaZQm014471@sheep.berlios.de>

Author: salzkammergut
Date: 2009-05-29 19:36:32 +0200 (Fri, 29 May 2009)
New Revision: 1867

Modified:
   trunk/res_noewe/Garmin User Symbols.zip
   trunk/src/exp/LocExporter.java
Log:
Updated version of garmin user symbols exporter. Can now map caches depending on status, is_found, difficulty, terrain and size. Detailed description in readme.txt in ZIP archive.

Modified: trunk/res_noewe/Garmin User Symbols.zip
===================================================================
(Binary files differ)

Modified: trunk/src/exp/LocExporter.java
===================================================================
--- trunk/src/exp/LocExporter.java	2009-05-29 13:30:53 UTC (rev 1866)
+++ trunk/src/exp/LocExporter.java	2009-05-29 17:36:32 UTC (rev 1867)
@@ -4,7 +4,9 @@
 import ewe.io.FileBase;
 import ewesoft.xml.*;
 import ewesoft.xml.sax.*;
+import ewe.util.Vector;
 
+
 /**
 *	Class to export the cache database into an geocaching .loc file that may be exported
 *	by GPSBabel to a Garmin GPS.
@@ -92,8 +94,7 @@
 	 */
 	private class GarminMap extends MinML {
 
-		private IconMap[] symbols=new IconMap[24];
-		private int mapSize=0;
+		private Vector symbols=new Vector(24);
 
 		String lastName;
 		public void readGarminMap(){
@@ -112,21 +113,27 @@
 		public void startElement(String name, AttributeList atts){
 			lastName=name;
 			if (name.equals("icon")) {
-				symbols[mapSize]=new IconMap(atts.getValue("type"),atts.getValue("name"),atts.getValue("found"));
-				mapSize++;
+				symbols.add(new IconMap(atts.getValue("type"),atts.getValue("name"),atts.getValue("found"),
+						atts.getValue("size"),atts.getValue("terrain"),atts.getValue("difficulty"),
+						atts.getValue("status")));
 			}
 		}
 
 		public String getIcon(CacheHolder ch) {
-			// First check if there is a mapping for "cache found"
-			if (ch.is_found()) {
-				for (int i=0; i<mapSize; i++)
-					// TODO Geht das noch sch?ner...? ................ <------------------------------>
-					if (symbols[i].onlyIfFound!=null && symbols[i].type.equals(String.valueOf(ch.getType()))) return symbols[i].name;
+			int mapSize=symbols.size();
+			// Try each icon in turn
+			for (int i=0; i<mapSize; i++) {
+				IconMap icon=(IconMap) symbols.get(i);
+				Boolean match=true;
+				// If a certainattribute is not null it must match the current caches values
+				match&=(icon.type==null) || ch.getType()==0 || icon.type.equals(String.valueOf(ch.getType()));
+				match&=(icon.size==null) || ch.getCacheSize()==0 || icon.size.equalsIgnoreCase(CacheSize.getExportShortId(ch.getCacheSize()));
+				match&=(icon.terrain==null) || ch.getTerrain()==0 || icon.terrain.equals(CacheTerrDiff.shortDT(ch.getTerrain()));
+				match&=(icon.difficulty==null) ||  ch.getHard()==0 || icon.difficulty.equals(CacheTerrDiff.shortDT(ch.getHard()));
+				match&=(icon.status==null) ||  ch.getCacheStatus().startsWith(icon.status);
+				match&=(icon.found==null) || ch.is_found();
+				if (match) return icon.name;
 			}
-			// Now try mapping the cache irrespective of the "found" status
-			for (int i=0; i<mapSize; i++)
-				if (symbols[i].type.equals(String.valueOf(ch.getType()))) return symbols[i].name;
 
 			// If it is not a mapped type, just use the standard mapping
 			if (ch.is_found())
@@ -138,15 +145,20 @@
 		private class IconMap {
 			public String type;
 			public String name;
-			public Boolean onlyIfFound;
+			public String size;
+			public String terrain;
+			public String difficulty;
+			public String found;
+			public String status;
 
-			IconMap(String type, String name, String onlyIfFound) {
+			IconMap(String type, String name, String found, String size, String terrain, String difficulty, String status) {
 				this.type=type;
 				this.name=name;
-				if (onlyIfFound!=null && onlyIfFound.equals("1"))
-					this.onlyIfFound=Boolean.TRUE;
-				else
-					this.onlyIfFound=null;
+				this.found=found;
+				this.size=size;
+				this.terrain=terrain;
+				this.difficulty=difficulty;
+				this.status=status;
 			}
 		}
 



From salzkammergut at mail.berlios.de  Fri May 29 19:52:19 2009
From: salzkammergut at mail.berlios.de (salzkammergut at mail.berlios.de)
Date: Fri, 29 May 2009 19:52:19 +0200
Subject: [Cachewolf-svn] r1868 - trunk/res_noewe
Message-ID: <200905291752.n4THqJQv016387@sheep.berlios.de>

Author: salzkammergut
Date: 2009-05-29 19:52:17 +0200 (Fri, 29 May 2009)
New Revision: 1868

Modified:
   trunk/res_noewe/Garmin User Symbols.zip
Log:
Garminmap.xml: Small fix in readme.txt

Modified: trunk/res_noewe/Garmin User Symbols.zip
===================================================================
(Binary files differ)



From salzkammergut at mail.berlios.de  Fri May 29 20:01:14 2009
From: salzkammergut at mail.berlios.de (salzkammergut at mail.berlios.de)
Date: Fri, 29 May 2009 20:01:14 +0200
Subject: [Cachewolf-svn] r1869 - trunk/src/exp
Message-ID: <200905291801.n4TI1ELm017711@sheep.berlios.de>

Author: salzkammergut
Date: 2009-05-29 20:01:13 +0200 (Fri, 29 May 2009)
New Revision: 1869

Modified:
   trunk/src/exp/LocExporter.java
Log:
LocExporter: Rrestored compatibility with Java 1.3

Modified: trunk/src/exp/LocExporter.java
===================================================================
--- trunk/src/exp/LocExporter.java	2009-05-29 17:52:17 UTC (rev 1868)
+++ trunk/src/exp/LocExporter.java	2009-05-29 18:01:13 UTC (rev 1869)
@@ -124,14 +124,14 @@
 			// Try each icon in turn
 			for (int i=0; i<mapSize; i++) {
 				IconMap icon=(IconMap) symbols.get(i);
-				Boolean match=true;
+				boolean match=true;
 				// If a certainattribute is not null it must match the current caches values
-				match&=(icon.type==null) || ch.getType()==0 || icon.type.equals(String.valueOf(ch.getType()));
-				match&=(icon.size==null) || ch.getCacheSize()==0 || icon.size.equalsIgnoreCase(CacheSize.getExportShortId(ch.getCacheSize()));
-				match&=(icon.terrain==null) || ch.getTerrain()==0 || icon.terrain.equals(CacheTerrDiff.shortDT(ch.getTerrain()));
-				match&=(icon.difficulty==null) ||  ch.getHard()==0 || icon.difficulty.equals(CacheTerrDiff.shortDT(ch.getHard()));
-				match&=(icon.status==null) ||  ch.getCacheStatus().startsWith(icon.status);
-				match&=(icon.found==null) || ch.is_found();
+				match=match && (icon.type==null) || ch.getType()==0 || icon.type.equals(String.valueOf(ch.getType()));
+				match=match && (icon.size==null) || ch.getCacheSize()==0 || icon.size.equalsIgnoreCase(CacheSize.getExportShortId(ch.getCacheSize()));
+				match=match && (icon.terrain==null) || ch.getTerrain()==0 || icon.terrain.equals(CacheTerrDiff.shortDT(ch.getTerrain()));
+				match=match && (icon.difficulty==null) ||  ch.getHard()==0 || icon.difficulty.equals(CacheTerrDiff.shortDT(ch.getHard()));
+				match=match && (icon.status==null) ||  ch.getCacheStatus().startsWith(icon.status);
+				match=match && (icon.found==null) || ch.is_found();
 				if (match) return icon.name;
 			}
 



From greiol at mail.berlios.de  Fri May 29 20:15:14 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Fri, 29 May 2009 20:15:14 +0200
Subject: [Cachewolf-svn] r1870 - trunk/src/CacheWolf
Message-ID: <200905291815.n4TIFEgr018866@sheep.berlios.de>

Author: greiol
Date: 2009-05-29 20:15:12 +0200 (Fri, 29 May 2009)
New Revision: 1870

Modified:
   trunk/src/CacheWolf/DetailsPanel.java
   trunk/src/CacheWolf/GPXImporter.java
   trunk/src/CacheWolf/MainTab.java
Log:
preset new waypoints created via menu or detail panel with some sane defaults
in gpx importer preset caches that are mapped to custom type with some sane values

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-05-29 18:01:13 UTC (rev 1869)
+++ trunk/src/CacheWolf/DetailsPanel.java	2009-05-29 18:15:12 UTC (rev 1870)
@@ -341,6 +341,9 @@
 				ch.LatLon = thisCache.LatLon;
 				ch.pos = new CWPoint( thisCache.pos );
 				ch.setType(CacheType.CW_TYPE_STAGE);
+				ch.setHard(CacheTerrDiff.CW_DT_UNSET);
+				ch.setTerrain(CacheTerrDiff.CW_DT_UNSET);
+				ch.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
 				Global.mainTab.newWaypoint(ch);
 			}
 			else if (ev.target == btnGoto){

Modified: trunk/src/CacheWolf/GPXImporter.java
===================================================================
--- trunk/src/CacheWolf/GPXImporter.java	2009-05-29 18:01:13 UTC (rev 1869)
+++ trunk/src/CacheWolf/GPXImporter.java	2009-05-29 18:15:12 UTC (rev 1870)
@@ -411,6 +411,11 @@
 		}
 		if ((name.equals("groundspeak:type") || name.equals("type")|| name.equals("terra:style"))&& inCache){
 			holder.setType(CacheType.gpxType2CwType(strData));
+			if (holder.getType() == CacheType.CW_TYPE_CUSTOM) {
+				holder.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
+				holder.setHard(CacheTerrDiff.CW_DT_UNSET);
+				holder.setTerrain(CacheTerrDiff.CW_DT_UNSET);
+			}
 			return;
 		}
 		if (name.equals("groundspeak:container")|| name.equals("container")){

Modified: trunk/src/CacheWolf/MainTab.java
===================================================================
--- trunk/src/CacheWolf/MainTab.java	2009-05-29 18:01:13 UTC (rev 1869)
+++ trunk/src/CacheWolf/MainTab.java	2009-05-29 18:15:12 UTC (rev 1870)
@@ -306,6 +306,9 @@
 		} else { 
 			pCh.setWayPoint(profile.getNewWayPointName());
 			pCh.setType(CacheType.CW_TYPE_CUSTOM);
+			pCh.setHard(CacheTerrDiff.CW_DT_UNSET);
+			pCh.setTerrain(CacheTerrDiff.CW_DT_UNSET);
+			pCh.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
 			lastselected=pCh.getWayPoint();
 		}
 		pCh.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);



From engywuck at mail.berlios.de  Sat May 30 09:43:02 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Sat, 30 May 2009 09:43:02 +0200
Subject: [Cachewolf-svn] r1871 - trunk/src/CacheWolf
Message-ID: <200905300743.n4U7h2cq022805@sheep.berlios.de>

Author: engywuck
Date: 2009-05-30 09:43:01 +0200 (Sat, 30 May 2009)
New Revision: 1871

Modified:
   trunk/src/CacheWolf/DetailsPanel.java
Log:
Consider a cache as found, even if only a date is entered in the details panel.

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-05-29 18:15:12 UTC (rev 1870)
+++ trunk/src/CacheWolf/DetailsPanel.java	2009-05-30 07:43:01 UTC (rev 1871)
@@ -184,9 +184,9 @@
 	    btnWayLoc.setText(ch.pos.toString());
 		inpHidden.setText(ch.getDateHidden());
 		inpOwner.setText(ch.getCacheOwner());
-		if (ch.getCacheStatus().length()>=10 && ch.getCacheStatus().charAt(4)=='-')
+		if (ch.getCacheStatus().length()>=10 && ch.getCacheStatus().charAt(4)=='-') {
 			chcStatus.setText(MyLocale.getMsg(318,"Found")+" "+ch.getCacheStatus());
-		else {
+		} else {
 			chcStatus.setText(ch.getCacheStatus());
 			// If the cache status contains a date, do not overwrite it with 'found' message
 			if(ch.is_found() == true) chcStatus.setText(MyLocale.getMsg(318,"Found"));
@@ -419,11 +419,18 @@
 		// the CacheHolder object which sits in cacheDB
 		  // Strip the found message if the status contains a date
 		if (chcStatus.getText().startsWith(MyLocale.getMsg(318,"Found")) && 
-				  chcStatus.getText().length()>=MyLocale.getMsg(318,"Found").length()+11)
+				  chcStatus.getText().length()>=MyLocale.getMsg(318,"Found").length()+11) {
 			  thisCache.setCacheStatus(chcStatus.getText().substring(MyLocale.getMsg(318,"Found").length()+1));
-		  else	  
+		} else { 	  
 			  thisCache.setCacheStatus(chcStatus.getText());
-		  thisCache.setFound(chcStatus.getText().startsWith(MyLocale.getMsg(318,"Found")));
+		}
+		if (! thisCache.is_found() && thisCache.getCacheStatus().length()>=10 && thisCache.getCacheStatus().charAt(4)=='-') {
+			// Use same heuristic condition as in setDetails(CacheHolder) to determine, if this cache
+			// has to considered as found.
+			thisCache.setFound(true);
+		} else {
+			thisCache.setFound(chcStatus.getText().startsWith(MyLocale.getMsg(318,"Found")));
+		}	
 		  thisCache.setCacheOwner(inpOwner.getText().trim());
 		  thisCache.setOwned(thisCache.getCacheStatus().equals(MyLocale.getMsg(320,"Owner")));
 		  // Avoid setting is_owned if alias is empty and username is empty



From engywuck at mail.berlios.de  Sat May 30 10:55:09 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Sat, 30 May 2009 10:55:09 +0200
Subject: [Cachewolf-svn] r1872 - trunk/src/CacheWolf
Message-ID: <200905300855.n4U8t9hD016820@sheep.berlios.de>

Author: engywuck
Date: 2009-05-30 10:55:05 +0200 (Sat, 30 May 2009)
New Revision: 1872

Modified:
   trunk/src/CacheWolf/SpiderGC.java
Log:
Avoiding deletion of is_found() state from a spider run that doesn't spider all logs.

Modified: trunk/src/CacheWolf/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/SpiderGC.java	2009-05-30 07:43:01 UTC (rev 1871)
+++ trunk/src/CacheWolf/SpiderGC.java	2009-05-30 08:55:05 UTC (rev 1872)
@@ -239,6 +239,12 @@
 			if (ret == 1) {
 				CacheHolder cacheInDB = cacheDB.get(number);
 				cacheInDB.initStates(false);
+				if (cacheInDB.is_found() && !ch.is_found() && ! loadAllLogs) {
+					// If the number of logs to spider is 5 or less, then the "not found" information
+					// of the spidered cache is not credible. In this case it should not overwrite
+					// the "found" state of an existing cache.
+					ch.setFound(true);
+				}
 				cacheInDB.update(ch);
 				cacheInDB.save();
 			}



From engywuck at mail.berlios.de  Sat May 30 17:35:21 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Sat, 30 May 2009 17:35:21 +0200
Subject: [Cachewolf-svn] r1873 - trunk/src/CacheWolf
Message-ID: <200905301535.n4UFZLil028115@sheep.berlios.de>

Author: engywuck
Date: 2009-05-30 17:35:19 +0200 (Sat, 30 May 2009)
New Revision: 1873

Modified:
   trunk/src/CacheWolf/DetailsPanel.java
Log:
Now changing a coordinate in the details panel leads to saving of index file when CacheWolf is ended.

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-05-30 08:55:05 UTC (rev 1872)
+++ trunk/src/CacheWolf/DetailsPanel.java	2009-05-30 15:35:19 UTC (rev 1873)
@@ -357,6 +357,7 @@
 				if (cs.execute()== FormBase.IDOK){
 					dirty_details=true;
 					coords = cs.getCoords();
+					Global.getProfile().notifyUnsavedChanges(!thisCache.pos.toString().equals(coords.toString()));
 					thisCache.pos.set(coords);
 					btnWayLoc.setText(coords.toString());
 					thisCache.LatLon=coords.toString();



From engywuck at mail.berlios.de  Sat May 30 17:44:49 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Sat, 30 May 2009 17:44:49 +0200
Subject: [Cachewolf-svn] r1874 - trunk/src/CacheWolf
Message-ID: <200905301544.n4UFinlv028753@sheep.berlios.de>

Author: engywuck
Date: 2009-05-30 17:44:48 +0200 (Sat, 30 May 2009)
New Revision: 1874

Modified:
   trunk/src/CacheWolf/DetailsPanel.java
Log:
Reformatting DetailPanel.java, which was very hard to read. No functional changes.

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2009-05-30 15:35:19 UTC (rev 1873)
+++ trunk/src/CacheWolf/DetailsPanel.java	2009-05-30 15:44:48 UTC (rev 1874)
@@ -5,152 +5,192 @@
 import ewe.sys.*;
 
 /**
-*	Class to create the panel to show the cache details.<br>
-*	Also allows for creation of a custom waypoint.<br>
-*
-*   
-*/
-public class DetailsPanel extends CellPanel{
+ * Class to create the panel to show the cache details.<br>
+ * Also allows for creation of a custom waypoint.<br>
+ */
+public class DetailsPanel extends CellPanel {
+
 	mInput inpWaypoint = new mInput();
 	mInput inpName = new mInput();
 	mButton btnWayLoc = new mButton();
 	mInput inpHidden = new mInput();
 	mInput inpOwner = new mInput();
-	mButton btnDelete,btnCenter, btnAddDateTime;
-	mChoice chcType = new mChoice(CacheType.guiTypeStrings(),0);
-	mChoice chcSize = new mChoice(CacheSize.guiSizeStrings(),0);
-	mComboBox chcStatus = new mComboBox(new String[]{"", MyLocale.getMsg(313,"Flag 1"), MyLocale.getMsg(314,"Flag 2"), MyLocale.getMsg(315,"Flag 3"), MyLocale.getMsg(316,"Flag 4"), MyLocale.getMsg(317,"Search"), MyLocale.getMsg(318,"Found"), MyLocale.getMsg(319,"Not Found"), MyLocale.getMsg(320,"Owner")},0);
-	mButton btnNewWpt, btnShowBug, btnShowMap, btnGoto, btnAddPicture, btnBlack, btnNotes, btnSave, btnCancel;
-	mButton btnFoundDate,btnHiddenDate;
+	mButton btnDelete, btnCenter, btnAddDateTime;
+	mChoice chcType = new mChoice(CacheType.guiTypeStrings(), 0);
+	mChoice chcSize = new mChoice(CacheSize.guiSizeStrings(), 0);
+
+	mComboBox chcStatus = new mComboBox(new String[] { "", MyLocale.getMsg(313, "Flag 1"),
+	        MyLocale.getMsg(314, "Flag 2"), MyLocale.getMsg(315, "Flag 3"),
+	        MyLocale.getMsg(316, "Flag 4"), MyLocale.getMsg(317, "Search"),
+	        MyLocale.getMsg(318, "Found"), MyLocale.getMsg(319, "Not Found"),
+	        MyLocale.getMsg(320, "Owner") }, 0);
+
+	mButton btnNewWpt, btnShowBug, btnShowMap, btnGoto, btnAddPicture, btnBlack, btnNotes, btnSave,
+	        btnCancel;
+	mButton btnFoundDate, btnHiddenDate;
+	CellPanel pnlTools = new CellPanel();
+	mTextPad mNotes;
+
+	mImage imgBlack;
+	mImage imgBlackNo;
+	mImage imgShowBug, imgShowBugNo, imgNewWpt, imgGoto;
+	mImage imgShowMaps, imgAddImages, imgNotes;
+	mLabel lblDiff, lblTerr;
+
 	CacheDB cacheDB;
 	CacheHolder thisCache;
 	int dbIndex = -1;
-	CellPanel pnlTools = new CellPanel(); 
+
 	AttributesViewer attV;
-	mTextPad mNotes;
-	
+
 	private boolean dirty_notes = false;
 	private boolean dirty_details = false;
 	private boolean blackStatus = false;
-	private boolean blackStatusChanged=false;
+	private boolean blackStatusChanged = false;
 	private boolean needsTableUpdate = false;
 	private boolean isBigScreen = false;
-	
+
 	Preferences pref; // Test
 	Profile profile;
-	mImage imgBlack;
-	mImage imgBlackNo;
-	mImage imgShowBug, imgShowBugNo,imgNewWpt,imgGoto;
-	mImage imgShowMaps,imgAddImages,imgNotes;
-	mLabel lblDiff, lblTerr;
-	
-	public DetailsPanel(){
+
+
+	public DetailsPanel() {
 		pref = Global.getPref();
-		profile=Global.getProfile();
+		profile = Global.getProfile();
 		cacheDB = profile.cacheDB;
-		////////////////////
+		// //////////////////
 		// Tools
-		////////////////////
+		// //////////////////
 		// Use larger Button-Icons on VGA-mobiles
 		int sw = MyLocale.getScreenWidth();
-		String imagesize="";
-		if (Vm.isMobile() && sw >= 400) imagesize="_vga";  
+		String imagesize = "";
+		if (Vm.isMobile() && sw >= 400)
+			imagesize = "_vga";
 		// Button 1: New Waypoint
-		pnlTools.addNext(btnNewWpt = new mButton(imgNewWpt=new mImage("newwpt"+imagesize+".png"))); 
-		btnNewWpt.setToolTip(MyLocale.getMsg(311,"Create Waypoint"));
-		PenEvent.wantPenMoved(btnNewWpt,PenEvent.WANT_PEN_MOVED_ONOFF,true);
-		imgNewWpt.transparentColor=new Color(255,0,0);
+		pnlTools.addNext(btnNewWpt = new mButton(imgNewWpt = new mImage("newwpt" + imagesize
+		        + ".png")));
+		btnNewWpt.setToolTip(MyLocale.getMsg(311, "Create Waypoint"));
+		PenEvent.wantPenMoved(btnNewWpt, PenEvent.WANT_PEN_MOVED_ONOFF, true);
+		imgNewWpt.transparentColor = new Color(255, 0, 0);
 		// Button 2: Goto
-		pnlTools.addNext(btnGoto = new mButton(imgGoto=new mImage("goto"+imagesize+".png")));//Goto.gif funzt manchmal nicht
-		imgGoto.transparentColor=Color.White;
-		btnGoto.setToolTip(MyLocale.getMsg(345,"Goto these coordinates"));
+		pnlTools.addNext(btnGoto = new mButton(imgGoto = new mImage("goto" + imagesize + ".png")));// Goto.gif
+																									// funzt
+																									// manchmal
+																									// nicht
+		imgGoto.transparentColor = Color.White;
+		btnGoto.setToolTip(MyLocale.getMsg(345, "Goto these coordinates"));
 		// Button 3: Travelbugs
-		imgShowBug = new mImage("bug"+imagesize+".gif");
-		imgShowBugNo = new mImage("bug_no"+imagesize+".gif");
-		pnlTools.addNext(btnShowBug = new mButton(imgShowBugNo)); 
-		//btnShowBug.modify(Control.Disabled,0);
-		btnShowBug.setToolTip(MyLocale.getMsg(346,"Show travelbugs"));
+		imgShowBug = new mImage("bug" + imagesize + ".gif");
+		imgShowBugNo = new mImage("bug_no" + imagesize + ".gif");
+		pnlTools.addNext(btnShowBug = new mButton(imgShowBugNo));
+		// btnShowBug.modify(Control.Disabled,0);
+		btnShowBug.setToolTip(MyLocale.getMsg(346, "Show travelbugs"));
 		// Button 4: Show Map
-		pnlTools.addNext(btnShowMap = new mButton(imgShowMaps = new mImage("globe_small"+imagesize+".gif"))); 
-		btnShowMap.setToolTip(MyLocale.getMsg(347,"Show map"));
+		pnlTools.addNext(btnShowMap = new mButton(imgShowMaps = new mImage("globe_small"
+		        + imagesize + ".gif")));
+		btnShowMap.setToolTip(MyLocale.getMsg(347, "Show map"));
 		// Button 5: Add images
-		pnlTools.addNext(btnAddPicture = new mButton(imgAddImages = new mImage("images"+imagesize+".gif"))); 
-		btnAddPicture.setToolTip(MyLocale.getMsg(348,"Add user pictures"));
+		pnlTools.addNext(btnAddPicture = new mButton(imgAddImages = new mImage("images" + imagesize
+		        + ".gif")));
+		btnAddPicture.setToolTip(MyLocale.getMsg(348, "Add user pictures"));
 		// Button 6: Toggle blacklist status
-		imgBlackNo = new mImage("no_black"+imagesize+".png"); imgBlackNo.transparentColor=Color.Black;
-		imgBlack = new mImage("is_black"+imagesize+".png"); imgBlack.transparentColor=Color.White;
-		pnlTools.addNext(btnBlack=new mButton(imgBlackNo)); 
-		btnBlack.setToolTip(MyLocale.getMsg(349,"Toggle Blacklist status"));
+		imgBlackNo = new mImage("no_black" + imagesize + ".png");
+		imgBlackNo.transparentColor = Color.Black;
+		imgBlack = new mImage("is_black" + imagesize + ".png");
+		imgBlack.transparentColor = Color.White;
+		pnlTools.addNext(btnBlack = new mButton(imgBlackNo));
+		btnBlack.setToolTip(MyLocale.getMsg(349, "Toggle Blacklist status"));
 		// Button 7: Notes
-		pnlTools.addNext(btnNotes=new mButton(imgNotes=new mImage("notes"+imagesize+".gif"))); imgNotes.transparentColor=Color.DarkBlue;
-		btnNotes.setToolTip(MyLocale.getMsg(351,"Add/Edit notes"));
+		pnlTools
+		        .addNext(btnNotes = new mButton(imgNotes = new mImage("notes" + imagesize + ".gif")));
+		imgNotes.transparentColor = Color.DarkBlue;
+		btnNotes.setToolTip(MyLocale.getMsg(351, "Add/Edit notes"));
 		// Button 8: Date/time stamp
-		pnlTools.addLast(btnAddDateTime = new mButton(new mImage("date_time"+imagesize+".gif"))); 
-		btnAddDateTime.setToolTip(MyLocale.getMsg(350,"Add timestamp to notes"));
-		//showMap.modify(Control.Disabled,0);
-		pnlTools.stretchFirstRow=true;
-		this.addLast(pnlTools,CellConstants.DONTSTRETCH, CellConstants.WEST).setTag(SPAN,new Dimension(3,1));;
-		
-		////////////////////
+		pnlTools
+		        .addLast(btnAddDateTime = new mButton(new mImage("date_time" + imagesize + ".gif")));
+		btnAddDateTime.setToolTip(MyLocale.getMsg(350, "Add timestamp to notes"));
+		// showMap.modify(Control.Disabled,0);
+		pnlTools.stretchFirstRow = true;
+		this.addLast(pnlTools, CellConstants.DONTSTRETCH, CellConstants.WEST).setTag(SPAN,
+		        new Dimension(3, 1));
+		;
+
+		// //////////////////
 		// Main body of screen
-		////////////////////
+		// //////////////////
 
-		this.addNext(new mLabel(MyLocale.getMsg(300,"Type:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.NORTHWEST));
+		this.addNext(new mLabel(MyLocale.getMsg(300, "Type:")), CellConstants.DONTSTRETCH,
+		        (CellConstants.DONTFILL | CellConstants.NORTHWEST));
 		CellPanel line1Panel = new CellPanel();
 		chcType.alwaysDrop = true;
-		line1Panel.addNext(chcType,CellConstants.HSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
-		line1Panel.addLast(lblDiff=new mLabel(MyLocale.getMsg(1000,"D")+": 5.5"),CellConstants.DONTSTRETCH,(CellConstants.DONTFILL|CellConstants.EAST));
-		this.addLast(line1Panel,DONTSTRETCH,HFILL).setTag(CellConstants.SPAN, new Dimension(2,1));
-		
-		this.addNext(new mLabel(MyLocale.getMsg(301,"Size:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
+		line1Panel.addNext(chcType, CellConstants.HSTRETCH,
+		        (CellConstants.HFILL | CellConstants.WEST));
+		line1Panel.addLast(lblDiff = new mLabel(MyLocale.getMsg(1000, "D") + ": 5.5"),
+		        CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.EAST));
+		this.addLast(line1Panel, DONTSTRETCH, HFILL)
+		        .setTag(CellConstants.SPAN, new Dimension(2, 1));
+
+		this.addNext(new mLabel(MyLocale.getMsg(301, "Size:")), CellConstants.DONTSTRETCH,
+		        (CellConstants.DONTFILL | CellConstants.WEST));
 		CellPanel line2Panel = new CellPanel();
 		chcSize.alwaysDrop = true;
-		line2Panel.addNext(chcSize,CellConstants.HSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
-		line2Panel.addLast(lblTerr=new mLabel(MyLocale.getMsg(1001,"T")+": 5.5"),CellConstants.DONTSTRETCH,(CellConstants.DONTFILL|CellConstants.EAST));
-		this.addLast(line2Panel,DONTSTRETCH,HFILL).setTag(CellConstants.SPAN, new Dimension(2,1));
-		
-		this.addNext(new mLabel(MyLocale.getMsg(302,"Waypoint:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
-		this.addLast(inpWaypoint.setTag(CellConstants.SPAN, new Dimension(2,1)),CellConstants.DONTSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
-		
-		this.addNext(new mLabel(MyLocale.getMsg(303,"Name:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
-		this.addLast(inpName.setTag(CellConstants.SPAN, new Dimension(2,1)),CellConstants.DONTSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
-		
-		this.addNext(new mLabel(MyLocale.getMsg(304,"Location:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
-		this.addLast(btnWayLoc.setTag(CellConstants.SPAN, new Dimension(2,1)),CellConstants.HSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
-		
-		this.addNext(new mLabel(MyLocale.getMsg(307,"Status:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
-		CellPanel cp=new CellPanel();
-		cp.addNext(chcStatus,CellConstants.HSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
-		cp.addLast(btnFoundDate=new mButton(new mImage("calendar"+imagesize+".png")),DONTSTRETCH,DONTFILL);
-		this.addLast(cp,DONTSTRETCH,HFILL).setTag(CellConstants.SPAN, new Dimension(2,1));
-		
-		this.addNext(new mLabel(MyLocale.getMsg(306,"Owner:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
-		this.addLast(inpOwner.setTag(CellConstants.SPAN, new Dimension(2,1)),CellConstants.DONTSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
-		
-		this.addNext(new mLabel(MyLocale.getMsg(305,"Hidden on:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
-		CellPanel ip=new CellPanel();
-		ip.addNext(inpHidden,CellConstants.HSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
-		ip.addLast(btnHiddenDate=new mButton(new mImage("calendar"+imagesize+".png")),DONTSTRETCH,DONTFILL);
-		this.addLast(ip,DONTSTRETCH,HFILL).setTag(CellConstants.SPAN, new Dimension(2,1));
-		inpHidden.modifyAll(DisplayOnly,0);
-		
-		//btnNotes = new mButton("Notes");
-		//this.addLast(btnNotes.setTag(Control.SPAN, new Dimension(3,1)),CellConstants.DONTSTRETCH, (CellConstants.HFILL|CellConstants.WEST));
-		//this.addNext(new mLabel(MyLocale.getMsg(308,"Notes:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
-		//this.addLast(btnCenter = new mButton(MyLocale.getMsg(309,"Make Centre")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
-//		this.addLast(btnDelete = new mButton(MyLocale.getMsg(310,"Delete")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
-		attV=new AttributesViewer();
+		line2Panel.addNext(chcSize, CellConstants.HSTRETCH,
+		        (CellConstants.HFILL | CellConstants.WEST));
+		line2Panel.addLast(lblTerr = new mLabel(MyLocale.getMsg(1001, "T") + ": 5.5"),
+		        CellConstants.DONTSTRETCH, (CellConstants.DONTFILL | CellConstants.EAST));
+		this.addLast(line2Panel, DONTSTRETCH, HFILL)
+		        .setTag(CellConstants.SPAN, new Dimension(2, 1));
+
+		this.addNext(new mLabel(MyLocale.getMsg(302, "Waypoint:")), CellConstants.DONTSTRETCH,
+		        (CellConstants.DONTFILL | CellConstants.WEST));
+		this.addLast(inpWaypoint.setTag(CellConstants.SPAN, new Dimension(2, 1)),
+		        CellConstants.DONTSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
+
+		this.addNext(new mLabel(MyLocale.getMsg(303, "Name:")), CellConstants.DONTSTRETCH,
+		        (CellConstants.DONTFILL | CellConstants.WEST));
+		this.addLast(inpName.setTag(CellConstants.SPAN, new Dimension(2, 1)),
+		        CellConstants.DONTSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
+
+		this.addNext(new mLabel(MyLocale.getMsg(304, "Location:")), CellConstants.DONTSTRETCH,
+		        (CellConstants.DONTFILL | CellConstants.WEST));
+		this.addLast(btnWayLoc.setTag(CellConstants.SPAN, new Dimension(2, 1)),
+		        CellConstants.HSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
+
+		this.addNext(new mLabel(MyLocale.getMsg(307, "Status:")), CellConstants.DONTSTRETCH,
+		        (CellConstants.DONTFILL | CellConstants.WEST));
+		CellPanel cp = new CellPanel();
+		cp.addNext(chcStatus, CellConstants.HSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
+		cp.addLast(btnFoundDate = new mButton(new mImage("calendar" + imagesize + ".png")),
+		        DONTSTRETCH, DONTFILL);
+		this.addLast(cp, DONTSTRETCH, HFILL).setTag(CellConstants.SPAN, new Dimension(2, 1));
+
+		this.addNext(new mLabel(MyLocale.getMsg(306, "Owner:")), CellConstants.DONTSTRETCH,
+		        (CellConstants.DONTFILL | CellConstants.WEST));
+		this.addLast(inpOwner.setTag(CellConstants.SPAN, new Dimension(2, 1)),
+		        CellConstants.DONTSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
+
+		this.addNext(new mLabel(MyLocale.getMsg(305, "Hidden on:")), CellConstants.DONTSTRETCH,
+		        (CellConstants.DONTFILL | CellConstants.WEST));
+		CellPanel ip = new CellPanel();
+		ip.addNext(inpHidden, CellConstants.HSTRETCH, (CellConstants.HFILL | CellConstants.WEST));
+		ip.addLast(btnHiddenDate = new mButton(new mImage("calendar" + imagesize + ".png")),
+		        DONTSTRETCH, DONTFILL);
+		this.addLast(ip, DONTSTRETCH, HFILL).setTag(CellConstants.SPAN, new Dimension(2, 1));
+		inpHidden.modifyAll(DisplayOnly, 0);
+
+		attV = new AttributesViewer();
 		this.addLast(attV);
-		
-		if ((MyLocale.getScreenWidth() >= 400) && (MyLocale.getScreenHeight() >= 600)){
-			isBigScreen = true;  
-			this.addLast(new mLabel(MyLocale.getMsg(308,"Notes:")),CellConstants.DONTSTRETCH, (CellConstants.DONTFILL|CellConstants.WEST));
+
+		if ((MyLocale.getScreenWidth() >= 400) && (MyLocale.getScreenHeight() >= 600)) {
+			isBigScreen = true;
+			this.addLast(new mLabel(MyLocale.getMsg(308, "Notes:")), CellConstants.DONTSTRETCH,
+			        (CellConstants.DONTFILL | CellConstants.WEST));
 			mNotes = new mTextPad();
-			mNotes.modify(ControlConstants.NotEditable,0);
+			mNotes.modify(ControlConstants.NotEditable, 0);
 			this.addLast(new MyScrollBarPanel(mNotes));
 		}
 	}
-	
+
 	public void clear() {
 		attV.clear();
 	}
@@ -158,55 +198,58 @@
 	public void setNeedsTableUpdate(boolean tableUpdate) {
 		needsTableUpdate = tableUpdate;
 	}
-	
+
 	public boolean needsTableUpdate() {
 		return needsTableUpdate;
 	}
-	
+
 	public boolean isDirty() {
 		return dirty_notes || dirty_details || needsTableUpdate;
 	}
+
 	public boolean hasBlackStatusChanged() {
 		return blackStatusChanged;
 	}
-	
-	
+
 	/**
-	* @param chD details of the cache to display
-	* @param dbindex index in cacheDB, in which changes will be saved
-	*/
-	public void setDetails(CacheHolder ch){
+	 * @param chD
+	 *            details of the cache to display
+	 * @param dbindex
+	 *            index in cacheDB, in which changes will be saved
+	 */
+	public void setDetails(CacheHolder ch) {
 		thisCache = ch;
 		dirty_notes = false;
 		dirty_details = false;
 		inpWaypoint.setText(ch.getWayPoint());
 		inpName.setText(ch.getCacheName());
-	    btnWayLoc.setText(ch.pos.toString());
+		btnWayLoc.setText(ch.pos.toString());
 		inpHidden.setText(ch.getDateHidden());
 		inpOwner.setText(ch.getCacheOwner());
-		if (ch.getCacheStatus().length()>=10 && ch.getCacheStatus().charAt(4)=='-') {
-			chcStatus.setText(MyLocale.getMsg(318,"Found")+" "+ch.getCacheStatus());
+		if (ch.getCacheStatus().length() >= 10 && ch.getCacheStatus().charAt(4) == '-') {
+			chcStatus.setText(MyLocale.getMsg(318, "Found") + " " + ch.getCacheStatus());
 		} else {
 			chcStatus.setText(ch.getCacheStatus());
 			// If the cache status contains a date, do not overwrite it with 'found' message
-			if(ch.is_found() == true) chcStatus.setText(MyLocale.getMsg(318,"Found"));
+			if (ch.is_found() == true)
+				chcStatus.setText(MyLocale.getMsg(318, "Found"));
 		}
 		chcType.setInt(CacheType.cw2GuiSelect(ch.getType()));
-		if(ch.is_black()){
+		if (ch.is_black()) {
 			btnBlack.image = imgBlack;
 		} else {
 			btnBlack.image = imgBlackNo;
 		}
-		blackStatus=ch.is_black(); 
-		blackStatusChanged=false;
+		blackStatus = ch.is_black();
+		blackStatusChanged = false;
 		btnBlack.repaintNow();
 		if (inpWaypoint.getText().length() == 0)
 			createWptName();
-		if(ch.has_bugs() == true) {
-			//btnShowBug.modify(Control.Disabled,1);
+		if (ch.has_bugs() == true) {
+			// btnShowBug.modify(Control.Disabled,1);
 			btnShowBug.image = imgShowBug;
 		} else {
-			//btnShowBug.modify(Control.Disabled,0);
+			// btnShowBug.modify(Control.Disabled,0);
 			btnShowBug.image = imgShowBugNo;
 		}
 		btnShowBug.repaintNow();
@@ -218,299 +261,339 @@
 			lblDiff.setText("");
 		} else {
 			if (CacheTerrDiff.isValidTD(ch.getTerrain())) {
-				lblTerr.setText(MyLocale.getMsg(1001,"T")+": "+CacheTerrDiff.longDT(ch.getTerrain()));
+				lblTerr.setText(MyLocale.getMsg(1001, "T") + ": "
+				        + CacheTerrDiff.longDT(ch.getTerrain()));
 			} else {
 				lblTerr.setText("");
 				ch.setIncomplete(true);
-				if (Global.getPref().debug) Global.getPref().log(ch.getWayPoint()+" has wrong terrain "+ch.getTerrain());
+				if (Global.getPref().debug)
+					Global.getPref()
+					        .log(ch.getWayPoint() + " has wrong terrain " + ch.getTerrain());
 			}
 			if (CacheTerrDiff.isValidTD(ch.getHard())) {
-				lblDiff.setText(MyLocale.getMsg(1000,"D")+": "+CacheTerrDiff.longDT(ch.getHard()));
+				lblDiff.setText(MyLocale.getMsg(1000, "D") + ": "
+				        + CacheTerrDiff.longDT(ch.getHard()));
 			} else {
 				lblDiff.setText("");
 				ch.setIncomplete(true);
-				if (Global.getPref().debug) Global.getPref().log(ch.getWayPoint()+" has wrong difficulty "+ch.getHard());
+				if (Global.getPref().debug)
+					Global.getPref()
+					        .log(ch.getWayPoint() + " has wrong difficulty " + ch.getHard());
 			}
 		}
 
-		if(isBigScreen)	mNotes.setText(ch.getExistingDetails().getCacheNotes());
+		if (isBigScreen)
+			mNotes.setText(ch.getExistingDetails().getCacheNotes());
 	}
-	
+
 	/**
-	 * if is addi -> returns the respective AddiWpt
-	 * if is main -> returns the respective MainWpt 
-	 *
+	 * if is addi -> returns the respective AddiWpt if is main -> returns the respective MainWpt
 	 */
 	public void createWptName() {
 		String wpt = inpWaypoint.getText().toUpperCase();
-		if (CacheType.isAddiWpt(CacheType.guiSelect2Cw(chcType.getInt())) && 
-				(Global.mainTab.mainCache.startsWith("GC")||Global.mainTab.mainCache.startsWith("OC")||Global.mainTab.mainCache.startsWith("CW")) &&
-				wpt.startsWith("CW")) {
+		if (CacheType.isAddiWpt(CacheType.guiSelect2Cw(chcType.getInt()))
+		        && (Global.mainTab.mainCache.startsWith("GC")
+		                || Global.mainTab.mainCache.startsWith("OC") || Global.mainTab.mainCache
+		                .startsWith("CW")) && wpt.startsWith("CW")) {
 			// for what was this?:
-			Global.mainTab.lastselected=Global.mainTab.mainCache; //I don't know exactly, but it's needed for creating a series of Addis
-			
-			inpWaypoint.setText(Global.getProfile().getNewAddiWayPointName(Global.mainTab.mainCache));
-		} 
-		if (!CacheType.isAddiWpt(CacheType.guiSelect2Cw(chcType.getInt())) && !(wpt.startsWith("GC") 
-				|| wpt.startsWith("OC") || wpt.startsWith("CW")) ) {
+			Global.mainTab.lastselected = Global.mainTab.mainCache; // I don't know exactly, but
+																	// it's needed for creating a
+																	// series of Addis
+
+			inpWaypoint.setText(Global.getProfile()
+			        .getNewAddiWayPointName(Global.mainTab.mainCache));
+		}
+		if (!CacheType.isAddiWpt(CacheType.guiSelect2Cw(chcType.getInt()))
+		        && !(wpt.startsWith("GC") || wpt.startsWith("OC") || wpt.startsWith("CW"))) {
 			inpWaypoint.setText(Global.getProfile().getNewWayPointName());
 		}
 	}
-	
+
 	/**
-	*	Method to react to a user input.
-	*/
-	public void onEvent(Event ev){
-		if (ev instanceof DataChangeEvent ) {
+	 * Method to react to a user input.
+	 */
+	public void onEvent(Event ev) {
+		if (ev instanceof DataChangeEvent) {
 			if (ev.target == inpWaypoint) {
 				// If user used lower case -> convert directly to upper case
 				inpWaypoint.setText(inpWaypoint.getText().toUpperCase());
 			}
 			dirty_details = true;
-			needsTableUpdate  = true;
+			needsTableUpdate = true;
 			// profile.hasUnsavedChanges=true;
-			if (ev.target==chcType) {
+			if (ev.target == chcType) {
 				createWptName();
 			}
 		}
-		if(ev instanceof ControlEvent && ev.type == ControlEvent.PRESSED){
-			if(ev.target == btnNotes){
-				dirty_notes=true; // TODO I think this is redundant, because the notes are saved seperately by the notes screen itself
+		if (ev instanceof ControlEvent && ev.type == ControlEvent.PRESSED) {
+			if (ev.target == btnNotes) {
+				dirty_notes = true; // TODO I think this is redundant, because the notes are saved
+									// seperately by the notes screen itself
 				NotesScreen nsc = new NotesScreen(thisCache.getCacheDetails(true));
 				nsc.execute(this.getFrame(), Gui.CENTER_FRAME);
-				if(isBigScreen) mNotes.setText(thisCache.getCacheDetails(true).getCacheNotes());
-			}
-			else if(ev.target == btnShowMap){
+				if (isBigScreen)
+					mNotes.setText(thisCache.getCacheDetails(true).getCacheNotes());
+			} else if (ev.target == btnShowMap) {
 				Global.mainTab.SwitchToMovingMap(thisCache.pos, true);
-/*				try {
-					MapDetailForm mdf = new MapDetailForm(thisCache.wayPoint, pref, profile);
-					mdf.execute();
-				} catch (IllegalArgumentException e) {
-					MessageBox tmp = new MessageBox(MyLocale.getMsg(321,"Error"), MyLocale.getMsg(322,"Kann Bild/Karte nicht finden")+": "+e.getMessage(), MessageBox.OKB);
-					tmp.exec();
-				}
-	*/		}
-			else if(ev.target == btnShowBug){
-				//InfoScreen is = new InfoScreen(thisCache.Travelbugs.toHtml(), "Travelbugs", false, pref);
-				//is.execute();
-				TravelbugInCacheScreen ts = new TravelbugInCacheScreen(thisCache.getCacheDetails(true).Travelbugs.toHtml(), "Travelbugs");
+				/*
+				 * try { MapDetailForm mdf = new MapDetailForm(thisCache.wayPoint, pref, profile);
+				 * mdf.execute(); } catch (IllegalArgumentException e) { MessageBox tmp = new
+				 * MessageBox(MyLocale.getMsg(321,"Error"), MyLocale.getMsg(322,"Kann Bild/Karte
+				 * nicht finden")+": "+e.getMessage(), MessageBox.OKB); tmp.exec(); }
+				 */} else if (ev.target == btnShowBug) {
+				// InfoScreen is = new InfoScreen(thisCache.Travelbugs.toHtml(), "Travelbugs",
+				// false, pref);
+				// is.execute();
+				TravelbugInCacheScreen ts = new TravelbugInCacheScreen(thisCache
+				        .getCacheDetails(true).Travelbugs.toHtml(), "Travelbugs");
 				ts.execute(this.getFrame(), Gui.CENTER_FRAME);
-			}
-			else if (ev.target == btnCenter){
-				CWPoint cp=new CWPoint(thisCache.LatLon);
-				if (!cp.isValid()){
-					MessageBox tmpMB = new MessageBox(MyLocale.getMsg(312,"Error"), MyLocale.getMsg(4111,"Coordinates must be entered in the format N DD MM.MMM E DDD MM.MMM"), FormBase.OKB);
+			} else if (ev.target == btnCenter) {
+				CWPoint cp = new CWPoint(thisCache.LatLon);
+				if (!cp.isValid()) {
+					MessageBox tmpMB = new MessageBox(
+					        MyLocale.getMsg(312, "Error"),
+					        MyLocale
+					                .getMsg(4111,
+					                        "Coordinates must be entered in the format N DD MM.MMM E DDD MM.MMM"),
+					        FormBase.OKB);
 					tmpMB.exec();
-				} else {				
+				} else {
 					pref.curCentrePt.set(cp);
 					Global.mainTab.updateBearDist();
 				}
-			}
-			else if (ev.target == btnAddDateTime){
-				dirty_notes=true;
+			} else if (ev.target == btnAddDateTime) {
+				dirty_notes = true;
 				String note = thisCache.getCacheDetails(true).getCacheNotes();
 				Time dtm = new Time();
 				dtm.getTime();
 				dtm.setFormat("E dd.MM.yyyy '/' HH:mm");
-				if(note.length() > 0)	note = note + "\n" + dtm.toString();
-				else 	note = note + dtm.toString();
+				if (note.length() > 0)
+					note = note + "\n" + dtm.toString();
+				else
+					note = note + dtm.toString();
 				note = note + "\n";
 				thisCache.getCacheDetails(true).setCacheNotes(note);
 				thisCache.save();
-			}
-			else if (ev.target == btnAddPicture){
+			} else if (ev.target == btnAddPicture) {
 				thisCache.getCacheDetails(true).addUserImage(profile);
-			}
-			else if(ev.target == btnBlack){
-				if(thisCache.is_black()) {
+			} else if (ev.target == btnBlack) {
+				if (thisCache.is_black()) {
 					thisCache.setBlack(false);
 					btnBlack.image = imgBlackNo;
-				}
-				else {
+				} else {
 					thisCache.setBlack(true);
 					btnBlack.image = imgBlack;
 				}
 				blackStatus = thisCache.is_black();
 				thisCache.setAttributesToAddiWpts();
 				btnBlack.repaintNow();
-				dirty_details=true;
-				blackStatusChanged=true;
-			}
-			else if (ev.target == btnNewWpt){
+				dirty_details = true;
+				blackStatusChanged = true;
+			} else if (ev.target == btnNewWpt) {
 				CacheHolder ch = new CacheHolder();
 				ch.LatLon = thisCache.LatLon;
-				ch.pos = new CWPoint( thisCache.pos );
+				ch.pos = new CWPoint(thisCache.pos);
 				ch.setType(CacheType.CW_TYPE_STAGE);
 				ch.setHard(CacheTerrDiff.CW_DT_UNSET);
 				ch.setTerrain(CacheTerrDiff.CW_DT_UNSET);
 				ch.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
 				Global.mainTab.newWaypoint(ch);
-			}
-			else if (ev.target == btnGoto){
+			} else if (ev.target == btnGoto) {
 				// TODO if something changed saveWpt();
 				Global.mainTab.gotoPoint(thisCache.pos);
-			}
-			else if (ev.target == btnWayLoc){
-				CWPoint coords = new CWPoint(btnWayLoc.getText(),CWPoint.CW);
+			} else if (ev.target == btnWayLoc) {
+				CWPoint coords = new CWPoint(btnWayLoc.getText(), CWPoint.CW);
 				CoordsScreen cs = new CoordsScreen(true);
 				cs.setFields(coords, CWPoint.CW);
-				if (cs.execute()== FormBase.IDOK){
-					dirty_details=true;
+				if (cs.execute() == FormBase.IDOK) {
+					dirty_details = true;
 					coords = cs.getCoords();
-					Global.getProfile().notifyUnsavedChanges(!thisCache.pos.toString().equals(coords.toString()));
+					Global.getProfile().notifyUnsavedChanges(
+					        !thisCache.pos.toString().equals(coords.toString()));
 					thisCache.pos.set(coords);
 					btnWayLoc.setText(coords.toString());
-					thisCache.LatLon=coords.toString();
+					thisCache.LatLon = coords.toString();
 					// If the current centre is valid, calculate the distance and bearing to it
-					CWPoint centre=Global.getPref().curCentrePt;
-					if (centre.isValid()) thisCache.calcDistance(centre);
+					CWPoint centre = Global.getPref().curCentrePt;
+					if (centre.isValid())
+						thisCache.calcDistance(centre);
 				}
-			}
-			else if (ev.target==btnFoundDate) {
-				//DateChooser.dayFirst=true;
-				DateTimeChooser dc=new DateTimeChooser(Vm.getLocale());
-				dc.title=MyLocale.getMsg(328,"Date found"); 
-				dc.setPreferredSize(240,240);
-				String foundDate=chcStatus.getText();
-				if (foundDate.startsWith(MyLocale.getMsg(318,"Found")+" ")) foundDate=foundDate.substring(MyLocale.getMsg(318,"Found").length()+1);
-				Time t=new Time();
+			} else if (ev.target == btnFoundDate) {
+				// DateChooser.dayFirst=true;
+				DateTimeChooser dc = new DateTimeChooser(Vm.getLocale());
+				dc.title = MyLocale.getMsg(328, "Date found");
+				dc.setPreferredSize(240, 240);
+				String foundDate = chcStatus.getText();
+				if (foundDate.startsWith(MyLocale.getMsg(318, "Found") + " "))
+					foundDate = foundDate.substring(MyLocale.getMsg(318, "Found").length() + 1);
+				Time t = new Time();
 				try {
-					t.parse(foundDate,"y-M-d H:m");
-				} catch(IllegalArgumentException e) {
+					t.parse(foundDate, "y-M-d H:m");
+				} catch (IllegalArgumentException e) {
 					try {
-						t.parse(foundDate,"y-M-d");
-					} catch(IllegalArgumentException e1) {
+						t.parse(foundDate, "y-M-d");
+					} catch (IllegalArgumentException e1) {
 						// No parsable date given - should not appear
 					}
-				};
+				}
+				;
 				dc.reset(t);
-				if (dc.execute()==ewe.ui.FormBase.IDOK) {
-				  chcStatus.setText(MyLocale.getMsg(318,"Found")+" "+Convert.toString(dc.year)+"-"+MyLocale.formatLong(dc.month,"00")+"-"+MyLocale.formatLong(dc.day,"00")+" "+dc.time);
-				  dirty_details=true;
-				  //profile.hasUnsavedChanges=true;
+				if (dc.execute() == ewe.ui.FormBase.IDOK) {
+					chcStatus.setText(MyLocale.getMsg(318, "Found") + " "
+					        + Convert.toString(dc.year) + "-" + MyLocale.formatLong(dc.month, "00")
+					        + "-" + MyLocale.formatLong(dc.day, "00") + " " + dc.time);
+					dirty_details = true;
+					// profile.hasUnsavedChanges=true;
 				}
-			}
-			else if (ev.target==btnHiddenDate) {
-				DateChooser.dayFirst=true;
-				DateChooser dc=new DateChooser(Vm.getLocale());
-				dc.title=MyLocale.getMsg(329,"Hidden date"); 
-				dc.setPreferredSize(240,240);
-				if (inpHidden.getText().length()==10)
-				try {
-					dc.setDate(new Time(
-						Convert.parseInt(inpHidden.getText().substring(8)),
-					    Convert.parseInt(inpHidden.getText().substring(5,7)),
-						Convert.parseInt(inpHidden.getText().substring(0,4))));
-				} catch (NumberFormatException e) {
-					dc.reset(new Time());
+			} else if (ev.target == btnHiddenDate) {
+				DateChooser.dayFirst = true;
+				DateChooser dc = new DateChooser(Vm.getLocale());
+				dc.title = MyLocale.getMsg(329, "Hidden date");
+				dc.setPreferredSize(240, 240);
+				if (inpHidden.getText().length() == 10)
+					try {
+						dc.setDate(new Time(Convert.parseInt(inpHidden.getText().substring(8)),
+						        Convert.parseInt(inpHidden.getText().substring(5, 7)), Convert
+						                .parseInt(inpHidden.getText().substring(0, 4))));
+					} catch (NumberFormatException e) {
+						dc.reset(new Time());
+					}
+				if (dc.execute() == ewe.ui.FormBase.IDOK) {
+					inpHidden.setText(Convert.toString(dc.year) + "-"
+					        + MyLocale.formatLong(dc.month, "00") + "-"
+					        + MyLocale.formatLong(dc.day, "00"));
+					dirty_details = true;
+					// profile.hasUnsavedChanges=true;
 				}
-				if (dc.execute()==ewe.ui.FormBase.IDOK) {
-				  inpHidden.setText(Convert.toString(dc.year)+"-"+MyLocale.formatLong(dc.month,"00")+"-"+MyLocale.formatLong(dc.day,"00"));
-				  dirty_details=true;
-				  //profile.hasUnsavedChanges=true;
-				}
 			}
-			ev.consumed=true;
+			ev.consumed = true;
 		}
 	}
-	
+
 	public void saveDirtyWaypoint() {
-		// We have to update two objects: thisCache (a CacheHolderDetail) which contains 
+		// We have to update two objects: thisCache (a CacheHolderDetail) which contains
 		// the full cache which will be written to the cache.xml file AND
 		// the CacheHolder object which sits in cacheDB
-		  // Strip the found message if the status contains a date
-		if (chcStatus.getText().startsWith(MyLocale.getMsg(318,"Found")) && 
-				  chcStatus.getText().length()>=MyLocale.getMsg(318,"Found").length()+11) {
-			  thisCache.setCacheStatus(chcStatus.getText().substring(MyLocale.getMsg(318,"Found").length()+1));
-		} else { 	  
-			  thisCache.setCacheStatus(chcStatus.getText());
+		// Strip the found message if the status contains a date
+		if (chcStatus.getText().startsWith(MyLocale.getMsg(318, "Found"))
+		        && chcStatus.getText().length() >= MyLocale.getMsg(318, "Found").length() + 11) {
+			thisCache.setCacheStatus(chcStatus.getText().substring(
+			        MyLocale.getMsg(318, "Found").length() + 1));
+		} else {
+			thisCache.setCacheStatus(chcStatus.getText());
 		}
-		if (! thisCache.is_found() && thisCache.getCacheStatus().length()>=10 && thisCache.getCacheStatus().charAt(4)=='-') {
-			// Use same heuristic condition as in setDetails(CacheHolder) to determine, if this cache
+		if (!thisCache.is_found() && thisCache.getCacheStatus().length() >= 10
+		        && thisCache.getCacheStatus().charAt(4) == '-') {
+			// Use same heuristic condition as in setDetails(CacheHolder) to determine, if this
+			// cache
 			// has to considered as found.
 			thisCache.setFound(true);
 		} else {
-			thisCache.setFound(chcStatus.getText().startsWith(MyLocale.getMsg(318,"Found")));
-		}	
-		  thisCache.setCacheOwner(inpOwner.getText().trim());
-		  thisCache.setOwned(thisCache.getCacheStatus().equals(MyLocale.getMsg(320,"Owner")));
-		  // Avoid setting is_owned if alias is empty and username is empty
-		  if(thisCache.is_owned() == false){
-			  thisCache.setOwned((!pref.myAlias.equals("") && pref.myAlias.equals(thisCache.getCacheOwner())) || 
-					        (!pref.myAlias2.equals("") && pref.myAlias2.equals(thisCache.getCacheOwner())));
-		  }
-		  thisCache.setBlack(blackStatus);
-		  String oldWaypoint=thisCache.getWayPoint();
-		  thisCache.setWayPoint(inpWaypoint.getText().toUpperCase().trim());
-		  thisCache.setCacheSize(CacheSize.guiSizeStrings2CwSize(chcSize.getText()));
-		  // If the waypoint does not have a name, give it one
-		  if (thisCache.getWayPoint().equals("")) { 
-			  thisCache.setWayPoint(profile.getNewWayPointName());
-		  }
-		  //Don't allow single letter names=> Problems in updateBearingDistance
-		  // This is a hack but faster than slowing down the loop in updateBearingDistance
-		  if (thisCache.getWayPoint().length()<2) thisCache.setWayPoint(thisCache.getWayPoint()+" ");
-		  thisCache.setCacheName(inpName.getText().trim());
-		  thisCache.LatLon = thisCache.pos.toString();
-		  thisCache.setDateHidden(inpHidden.getText().trim());
-		  byte oldType=thisCache.getType();
-		  thisCache.setType(CacheType.guiSelect2Cw(chcType.getInt()));
-		 // thisCache.saveCacheDetails(profile.dataDir); // this is redundant, because all changes affecting the details are immediately saved
-		  // Now update the table
-		  CacheHolder ch = thisCache; // TODO variable ch is redundant
-		  
-	  /* The references have to be rebuilt if:
-	   *   - the cachetype changed from addi->normal or normal->addi
-	   *   - the old cachetype or the new cachetype were 'addi' and 
-	   *     the waypointname has changed 
-	   */
-	  if (CacheType.isAddiWpt(ch.getType())!=CacheType.isAddiWpt(oldType) ||
-		 ((CacheType.isAddiWpt(ch.getType()) || CacheType.isAddiWpt(oldType)) &&
-		 !thisCache.getWayPoint().equals(oldWaypoint))) {
-			  // If we changed the type to addi, check that a parent exists
-			  if (CacheType.isAddiWpt(ch.getType())) {
-				  int idx;
-				  if (ch.getWayPoint().length()<5)
-					  idx=-1;
-				  else {
-					  idx=profile.getCacheIndex("GC"+ ch.getWayPoint().substring(ch.getWayPoint().length() == 5?1:2));
-					  if (idx<0) idx=profile.getCacheIndex("OC"+ ch.getWayPoint().substring(ch.getWayPoint().length() == 5?1:2));
-					  if (idx<0) idx=profile.getCacheIndex("CW"+ ch.getWayPoint().substring(ch.getWayPoint().length() == 5?1:2));
-					  if (idx<0) (new MessageBox(MyLocale.getMsg(144,"Warning"),
-							  MyLocale.getMsg(734,"No main cache found for addi waypoint ")+" "+ch.getWayPoint()+
-							  "\n"+MyLocale.getMsg(735,"Addi Waypoints must have the format xxYYYY, where xx are any 2 chars and YYYY are the main cache's chars after the GC"),FormBase.OKB)).execute();
-				  }
-				  profile.buildReferences(); // TODO this takes quite long -> use profile.setAddiRef instead
-			  } else {
-				  profile.buildReferences(); // we have to do this to release the link between the two caches  
-			  }
-		  }
-		  // set status also on addi wpts
-		  ch.setAttributesToAddiWpts();
-		  dirty_notes=false;
-		  dirty_details=false;
-		  setNeedsTableUpdate(false);
-		  thisCache.getFreshDetails().hasUnsavedChanges = true;
+			thisCache.setFound(chcStatus.getText().startsWith(MyLocale.getMsg(318, "Found")));
+		}
+		thisCache.setCacheOwner(inpOwner.getText().trim());
+		thisCache.setOwned(thisCache.getCacheStatus().equals(MyLocale.getMsg(320, "Owner")));
+		// Avoid setting is_owned if alias is empty and username is empty
+		if (thisCache.is_owned() == false) {
+			thisCache.setOwned((!pref.myAlias.equals("") && pref.myAlias.equals(thisCache
+			        .getCacheOwner()))
+			        || (!pref.myAlias2.equals("") && pref.myAlias2
+			                .equals(thisCache.getCacheOwner())));
+		}
+		thisCache.setBlack(blackStatus);
+		String oldWaypoint = thisCache.getWayPoint();
+		thisCache.setWayPoint(inpWaypoint.getText().toUpperCase().trim());
+		thisCache.setCacheSize(CacheSize.guiSizeStrings2CwSize(chcSize.getText()));
+		// If the waypoint does not have a name, give it one
+		if (thisCache.getWayPoint().equals("")) {
+			thisCache.setWayPoint(profile.getNewWayPointName());
+		}
+		// Don't allow single letter names=> Problems in updateBearingDistance
+		// This is a hack but faster than slowing down the loop in updateBearingDistance
+		if (thisCache.getWayPoint().length() < 2)
+			thisCache.setWayPoint(thisCache.getWayPoint() + " ");
+		thisCache.setCacheName(inpName.getText().trim());
+		thisCache.LatLon = thisCache.pos.toString();
+		thisCache.setDateHidden(inpHidden.getText().trim());
+		byte oldType = thisCache.getType();
+		thisCache.setType(CacheType.guiSelect2Cw(chcType.getInt()));
+		// thisCache.saveCacheDetails(profile.dataDir); // this is redundant, because all changes
+		// affecting the details are immediately saved
+		// Now update the table
+		CacheHolder ch = thisCache; // TODO variable ch is redundant
+
+		/*
+		 * The references have to be rebuilt if: - the cachetype changed from addi->normal or
+		 * normal->addi - the old cachetype or the new cachetype were 'addi' and the waypointname
+		 * has changed
+		 */
+		if (CacheType.isAddiWpt(ch.getType()) != CacheType.isAddiWpt(oldType)
+		        || ((CacheType.isAddiWpt(ch.getType()) || CacheType.isAddiWpt(oldType)) && !thisCache
+		                .getWayPoint().equals(oldWaypoint))) {
+			// If we changed the type to addi, check that a parent exists
+			if (CacheType.isAddiWpt(ch.getType())) {
+				int idx;
+				if (ch.getWayPoint().length() < 5)
+					idx = -1;
+				else {
+					idx = profile.getCacheIndex("GC"
+					        + ch.getWayPoint().substring(ch.getWayPoint().length() == 5 ? 1 : 2));
+					if (idx < 0)
+						idx = profile.getCacheIndex("OC"
+						        + ch.getWayPoint()
+						                .substring(ch.getWayPoint().length() == 5 ? 1 : 2));
+					if (idx < 0)
+						idx = profile.getCacheIndex("CW"
+						        + ch.getWayPoint()
+						                .substring(ch.getWayPoint().length() == 5 ? 1 : 2));
+					if (idx < 0)
+						(new MessageBox(
+						        MyLocale.getMsg(144, "Warning"),
+						        MyLocale.getMsg(734, "No main cache found for addi waypoint ")
+						                + " "
+						                + ch.getWayPoint()
+						                + "\n"
+						                + MyLocale
+						                        .getMsg(
+						                                735,
+						                                "Addi Waypoints must have the format xxYYYY, where xx are any 2 chars and YYYY are the main cache's chars after the GC"),
+						        FormBase.OKB)).execute();
+				}
+				profile.buildReferences(); // TODO this takes quite long -> use profile.setAddiRef
+											// instead
+			} else {
+				profile.buildReferences(); // we have to do this to release the link between the
+											// two caches
+			}
+		}
+		// set status also on addi wpts
+		ch.setAttributesToAddiWpts();
+		dirty_notes = false;
+		dirty_details = false;
+		setNeedsTableUpdate(false);
+		thisCache.getFreshDetails().hasUnsavedChanges = true;
 	}
 
 	private class TravelbugInCacheScreen extends Form {
-		
+
 		private DispPanel disp = new DispPanel();
 		private mButton btCancel;
 		private TravelbugJourneyList tbjList;
-		
+
 		TravelbugInCacheScreen(String text, String title) {
 			this.setTitle(title);
 			this.setPreferredSize(pref.myAppWidth, pref.myAppHeight);
 			disp.setHtml(text);
-			ScrollBarPanel sbp = new MyScrollBarPanel(disp, ScrollablePanel.NeverShowHorizontalScrollers);
+			ScrollBarPanel sbp = new MyScrollBarPanel(disp,
+			        ScrollablePanel.NeverShowHorizontalScrollers);
 			this.addLast(sbp);
-			this.addLast(btCancel = new mButton(MyLocale.getMsg(3000,"Close")),CellConstants.DONTSTRETCH, CellConstants.FILL);
+			this.addLast(btCancel = new mButton(MyLocale.getMsg(3000, "Close")),
+			        CellConstants.DONTSTRETCH, CellConstants.FILL);
 		}
 
-		public void onEvent(Event ev){
-			if(ev instanceof ControlEvent && ev.type == ControlEvent.PRESSED){
-				if (ev.target == btCancel){
+		public void onEvent(Event ev) {
+			if (ev instanceof ControlEvent && ev.type == ControlEvent.PRESSED) {
+				if (ev.target == btCancel) {
 					this.close(0);
 				}
 			}
@@ -519,58 +602,67 @@
 		// Subclassed HtmlDisplay with Pop-up menu
 		private class DispPanel extends HtmlDisplay {
 			MenuItem mnuPickupTB, mnuDropTB;
-			MenuItem[] TBMenuItems=new MenuItem[2];
+			MenuItem[] TBMenuItems = new MenuItem[2];
 			Menu mnuPopup;
+
 			DispPanel() {
-				TBMenuItems[0]= mnuPickupTB = new MenuItem(MyLocale.getMsg(6016,"Pick up Travelbug"));
-				TBMenuItems[1]= mnuDropTB = new MenuItem(MyLocale.getMsg(6017,"Drop Travelbug"));
-				mnuPopup=new Menu(TBMenuItems,"");
-			} 
-			public void penRightReleased(Point p){
+				TBMenuItems[0] = mnuPickupTB = new MenuItem(MyLocale.getMsg(6016,
+				        "Pick up Travelbug"));
+				TBMenuItems[1] = mnuDropTB = new MenuItem(MyLocale.getMsg(6017, "Drop Travelbug"));
+				mnuPopup = new Menu(TBMenuItems, "");
+			}
+
+			public void penRightReleased(Point p) {
 				setMenu(mnuPopup);
-				doShowMenu(p); // direct call (not through doMenu) is neccesary because it will exclude the whole table
+				doShowMenu(p); // direct call (not through doMenu) is neccesary because it will
+								// exclude the whole table
 			}
-			public void penHeld(Point p){
+
+			public void penHeld(Point p) {
 				setMenu(mnuPopup);
 				doShowMenu(p);
 			}
-			public void popupMenuEvent(Object selectedItem){
-				if (selectedItem==mnuPickupTB) { 
-					Travelbug tb=TravelbugPickup.pickupTravelbug(thisCache.getCacheDetails(true).Travelbugs);	
-					if (tb!=null) {
-						dirty_details=true;
+
+			public void popupMenuEvent(Object selectedItem) {
+				if (selectedItem == mnuPickupTB) {
+					Travelbug tb = TravelbugPickup
+					        .pickupTravelbug(thisCache.getCacheDetails(true).Travelbugs);
+					if (tb != null) {
+						dirty_details = true;
 						// Get the list of my travelbugs
-						tbjList=new TravelbugJourneyList();
+						tbjList = new TravelbugJourneyList();
 						tbjList.readTravelbugsFile();
 						// Add the tb to this list
-						tbjList.addTbPickup(tb,Global.getProfile().name,thisCache.getWayPoint());
+						tbjList.addTbPickup(tb, Global.getProfile().name, thisCache.getWayPoint());
 						tbjList.saveTravelbugsFile();
-						tbjList=null;
+						tbjList = null;
 						setHtml(thisCache.getCacheDetails(true).Travelbugs.toHtml());
 						repaint();
-						thisCache.setHas_bugs(thisCache.getCacheDetails(true).Travelbugs.size()>0);						
+						thisCache
+						        .setHas_bugs(thisCache.getCacheDetails(true).Travelbugs.size() > 0);
 					}
-				} else if (selectedItem==mnuDropTB) {
-					tbjList=new TravelbugJourneyList();
+				} else if (selectedItem == mnuDropTB) {
+					tbjList = new TravelbugJourneyList();
 					tbjList.readTravelbugsFile();
-					TravelbugList tbl=tbjList.getMyTravelbugs();
-					TravelbugScreen tbs=new TravelbugScreen(tbl,MyLocale.getMsg(6017,"Drop a travelbug"),false);
+					TravelbugList tbl = tbjList.getMyTravelbugs();
+					TravelbugScreen tbs = new TravelbugScreen(tbl, MyLocale.getMsg(6017,
+					        "Drop a travelbug"), false);
 					tbs.execute();
-					if (tbs.selectedItem>=0) {
-						Travelbug tb=tbl.getTB(tbs.selectedItem);
+					if (tbs.selectedItem >= 0) {
+						Travelbug tb = tbl.getTB(tbs.selectedItem);
 						thisCache.getCacheDetails(true).Travelbugs.add(tb);
-						tbjList.addTbDrop(tb,Global.getProfile().name,thisCache.getWayPoint());
+						tbjList.addTbDrop(tb, Global.getProfile().name, thisCache.getWayPoint());
 					}
 					tbjList.saveTravelbugsFile();
-					tbjList=null;
-					thisCache.setHas_bugs(thisCache.getCacheDetails(true).Travelbugs.size()>0);
+					tbjList = null;
+					thisCache.setHas_bugs(thisCache.getCacheDetails(true).Travelbugs.size() > 0);
 					setHtml(thisCache.getCacheDetails(true).Travelbugs.toHtml());
 					repaint();
-					dirty_details=true;
-				} else 
+					dirty_details = true;
+				} else
 					super.popupMenuEvent(selectedItem);
 			}
-		}	
+		}
 	}
 
 }



From engywuck at mail.berlios.de  Sat May 30 18:19:54 2009
From: engywuck at mail.berlios.de (engywuck at mail.berlios.de)
Date: Sat, 30 May 2009 18:19:54 +0200
Subject: [Cachewolf-svn] r1875 - in trunk/src: CacheWolf exp
Message-ID: <200905301619.n4UGJsg3031183@sheep.berlios.de>

Author: engywuck
Date: 2009-05-30 18:19:49 +0200 (Sat, 30 May 2009)
New Revision: 1875

Modified:
   trunk/src/CacheWolf/CacheDB.java
   trunk/src/CacheWolf/DBStats.java
   trunk/src/CacheWolf/DataMover.java
   trunk/src/CacheWolf/SearchCache.java
   trunk/src/exp/ExploristExporter.java
   trunk/src/exp/Exporter.java
   trunk/src/exp/HTMLExporter.java
   trunk/src/exp/KMLExporter.java
   trunk/src/exp/TPLExporter.java
   trunk/src/exp/TomTomExporter.java
Log:
Removing code duplication.

Modified: trunk/src/CacheWolf/CacheDB.java
===================================================================
--- trunk/src/CacheWolf/CacheDB.java	2009-05-30 15:44:48 UTC (rev 1874)
+++ trunk/src/CacheWolf/CacheDB.java	2009-05-30 16:19:49 UTC (rev 1875)
@@ -250,4 +250,18 @@
 		}
 	}
 	
+	/**
+	 * Returns the number of currently visible waypoints. <br>As this number is not only dependent from
+	 * CacheHolder properties, but also from the state of the filter and so on, the determination
+	 * of this number always requires a count through all waypoints. So use with caution.
+	 * @return Number of currently visible waypoints.
+	 */
+	public int countVisible() {
+		int c=0;
+		for (int i=0; i<vectorDB.size(); i++) {
+			if (this.get(i).isVisible()) c++;
+		}
+		return c;
+	}
+	
 }

Modified: trunk/src/CacheWolf/DBStats.java
===================================================================
--- trunk/src/CacheWolf/DBStats.java	2009-05-30 15:44:48 UTC (rev 1874)
+++ trunk/src/CacheWolf/DBStats.java	2009-05-30 16:19:49 UTC (rev 1875)
@@ -57,15 +57,4 @@
 		}
 		return counter;
 	}
-}
-
-// TODO ASCExporter.java
-//TODO GPXExporter.java
-//TODO HTMLExporter.java
-//TODO KMLExporter.java
-//TODO MSARCSVExporter.java
-//TODO OVLExporter.java
-//TODO OziExporter.java
-//TODO PCX5Exporter.java
-//TODO TomTomASCExporter.ja
-//TODO TomTomOV2Exporter.ja
+}
\ No newline at end of file

Modified: trunk/src/CacheWolf/DataMover.java
===================================================================
--- trunk/src/CacheWolf/DataMover.java	2009-05-30 15:44:48 UTC (rev 1874)
+++ trunk/src/CacheWolf/DataMover.java	2009-05-30 16:19:49 UTC (rev 1875)
@@ -87,11 +87,8 @@
 		// First empty the cache so that the correct cache details are on disk
 		CacheHolder.saveAllModifiedDetails(); 
 		int size=srcDB.size();
-		int count=0;
 		// Count the number of caches to move/delete/copy
-		for(int i = 0; i<size; i++) {
-			if(srcDB.get(i).isVisible()) count++;
-		}
+		int count=srcDB.countVisible();
 		myProgressBarForm pbf = new myProgressBarForm();
 		Handle h = new Handle();
 		pbf.setTask(h,exec.title);

Modified: trunk/src/CacheWolf/SearchCache.java
===================================================================
--- trunk/src/CacheWolf/SearchCache.java	2009-05-30 15:44:48 UTC (rev 1874)
+++ trunk/src/CacheWolf/SearchCache.java	2009-05-30 16:19:49 UTC (rev 1875)
@@ -27,10 +27,7 @@
 			CacheHolder ch;
 			int counter = 0;
 			if (searchInDescriptionAndNotes || searchInLogs) {
-				for(int i=0 ; i<cacheDB.size(); i++) {
-					if (!cacheDB.get(i).isVisible()) break;
-					counter++;
-				}
+				counter = cacheDB.countVisible();
 			}
 			CWProgressBar cwp = new CWProgressBar(MyLocale.getMsg(219,"Searching..."), 0, counter, searchInDescriptionAndNotes);
 			cwp.exec();

Modified: trunk/src/exp/ExploristExporter.java
===================================================================
--- trunk/src/exp/ExploristExporter.java	2009-05-30 15:44:48 UTC (rev 1874)
+++ trunk/src/exp/ExploristExporter.java	2009-05-30 16:19:49 UTC (rev 1875)
@@ -124,11 +124,8 @@
 		pbf.setTask(h, "Exporting ...");
 		pbf.exec();
 
-		int counter = 0;
+		int counter = cacheDB.countVisible();
 		int expCount = 0;
-		for (int i = 0; i < cacheDB.size(); i++) {
-			if (cacheDB.get(i).isVisible()) counter++;
-		}
 
 		try {
 			// Set initial value for outp to calm down compiler

Modified: trunk/src/exp/Exporter.java
===================================================================
--- trunk/src/exp/Exporter.java	2009-05-30 15:44:48 UTC (rev 1874)
+++ trunk/src/exp/Exporter.java	2009-05-30 16:19:49 UTC (rev 1875)
@@ -89,11 +89,8 @@
 		pbf.setTask(h,"Exporting ...");
 		pbf.exec();
 
-		int counter = 0;
+		int counter = cacheDB.countVisible();
 		int expCount = 0;
-		for(int i = 0; i<cacheDB.size();i++){
-			if(cacheDB.get(i).isVisible()) counter++;
-		}
 
 		try{
 			PrintWriter outp =  new PrintWriter(new BufferedWriter(new FileWriter(outFile)));

Modified: trunk/src/exp/HTMLExporter.java
===================================================================
--- trunk/src/exp/HTMLExporter.java	2009-05-30 15:44:48 UTC (rev 1874)
+++ trunk/src/exp/HTMLExporter.java	2009-05-30 16:19:49 UTC (rev 1875)
@@ -67,10 +67,7 @@
 			Hashtable mapImgParams;
 
 			//Generate index page
-			int counter = 0;
-			for(int i = 0; i<cacheDB.size();i++){
-				if(cacheDB.get(i).isVisible()) counter++;
-			}
+			int counter = cacheDB.countVisible();
 			
 			pbf.showMainTask = false;
 			pbf.setTask(h,"Exporting ...");

Modified: trunk/src/exp/KMLExporter.java
===================================================================
--- trunk/src/exp/KMLExporter.java	2009-05-30 15:44:48 UTC (rev 1874)
+++ trunk/src/exp/KMLExporter.java	2009-05-30 16:19:49 UTC (rev 1875)
@@ -79,11 +79,8 @@
 		pbf.setTask(h,"Exporting ...");
 		pbf.exec();
 
-		int counter = 0;
+		int counter = cacheDB.countVisible();
 		int expCount = 0;
-		for(int i = 0; i<cacheDB.size();i++){
-			if (cacheDB.get(i).isVisible()) counter++;
-		}
 		copyIcons(outFile.getParent());
 		buildOutDB();
 		

Modified: trunk/src/exp/TPLExporter.java
===================================================================
--- trunk/src/exp/TPLExporter.java	2009-05-30 15:44:48 UTC (rev 1874)
+++ trunk/src/exp/TPLExporter.java	2009-05-30 16:19:49 UTC (rev 1875)
@@ -157,11 +157,7 @@
 		if(fc.execute() == FormBase.IDCANCEL) return;
 		File saveTo = fc.getChosenFile();
 		pref.setExportPath(expName, saveTo.getPath());
-		int counter = 0;
-		for(int i = 0; i<cacheDB.size();i++){
-			ch = cacheDB.get(i);
-			if(cacheDB.get(i).isVisible() == true) counter++;
-		}
+		int counter = cacheDB.countVisible();
 		pbf.showMainTask = false;
 		pbf.setTask(h,"Exporting ...");
 		pbf.exec();

Modified: trunk/src/exp/TomTomExporter.java
===================================================================
--- trunk/src/exp/TomTomExporter.java	2009-05-30 15:44:48 UTC (rev 1874)
+++ trunk/src/exp/TomTomExporter.java	2009-05-30 16:19:49 UTC (rev 1875)
@@ -73,10 +73,7 @@
 		progressForm.exec();
 		
 		currExp = 0;
-		counter = 0;
-		for(int i = 0; i<cacheDB.size();i++){
-			if(cacheDB.get(i).isVisible()) counter++;
-		}
+		counter = cacheDB.countVisible();
 		
 		ext = format==TT_ASC?".asc":".ov2";
 
@@ -135,11 +132,8 @@
 		pbf.setTask(h,"Exporting ...");
 		pbf.exec();
 
-		int counter = 0;
+		int counter = cacheDB.countVisible();
 		int expCount = 0;
-		for(int i = 0; i<cacheDB.size();i++){
-			if(cacheDB.get(i).isVisible()) counter++;
-		}
 
 		try{
 			dfile = new File(fileName);



From salzkammergut at mail.berlios.de  Sat May 30 21:31:58 2009
From: salzkammergut at mail.berlios.de (salzkammergut at mail.berlios.de)
Date: Sat, 30 May 2009 21:31:58 +0200
Subject: [Cachewolf-svn] r1876 - trunk/src/exp
Message-ID: <200905301931.n4UJVwuD022019@sheep.berlios.de>

Author: salzkammergut
Date: 2009-05-30 21:31:51 +0200 (Sat, 30 May 2009)
New Revision: 1876

Modified:
   trunk/src/exp/LocExporter.java
Log:
Bugfix: LocExporter. Corrected evaluation precedence of boolean expression 

Modified: trunk/src/exp/LocExporter.java
===================================================================
--- trunk/src/exp/LocExporter.java	2009-05-30 16:19:49 UTC (rev 1875)
+++ trunk/src/exp/LocExporter.java	2009-05-30 19:31:51 UTC (rev 1876)
@@ -126,12 +126,12 @@
 				IconMap icon=(IconMap) symbols.get(i);
 				boolean match=true;
 				// If a certainattribute is not null it must match the current caches values
-				match=match && (icon.type==null) || ch.getType()==0 || icon.type.equals(String.valueOf(ch.getType()));
-				match=match && (icon.size==null) || ch.getCacheSize()==0 || icon.size.equalsIgnoreCase(CacheSize.getExportShortId(ch.getCacheSize()));
-				match=match && (icon.terrain==null) || ch.getTerrain()==0 || icon.terrain.equals(CacheTerrDiff.shortDT(ch.getTerrain()));
-				match=match && (icon.difficulty==null) ||  ch.getHard()==0 || icon.difficulty.equals(CacheTerrDiff.shortDT(ch.getHard()));
-				match=match && (icon.status==null) ||  ch.getCacheStatus().startsWith(icon.status);
-				match=match && (icon.found==null) || ch.is_found();
+				match=match && ((icon.type==null) || ch.getType()==0 || icon.type.equals(String.valueOf(ch.getType())));
+				match=match && ((icon.size==null) || ch.getCacheSize()==0 || icon.size.equalsIgnoreCase(CacheSize.getExportShortId(ch.getCacheSize())));
+				match=match && ((icon.terrain==null) || ch.getTerrain()==0 || icon.terrain.equals(CacheTerrDiff.shortDT(ch.getTerrain())));
+				match=match && ((icon.difficulty==null) ||  ch.getHard()==0 || icon.difficulty.equals(CacheTerrDiff.shortDT(ch.getHard())));
+				match=match && ((icon.status==null) ||  ch.getCacheStatus().startsWith(icon.status));
+				match=match && ((icon.found==null) || ch.is_found());
 				if (match) return icon.name;
 			}
 



From greiol at mail.berlios.de  Sat May 30 22:35:53 2009
From: greiol at mail.berlios.de (greiol at mail.berlios.de)
Date: Sat, 30 May 2009 22:35:53 +0200
Subject: [Cachewolf-svn] r1877 - trunk/src/CacheWolf
Message-ID: <200905302035.n4UKZr8U029215@sheep.berlios.de>

Author: greiol
Date: 2009-05-30 22:35:51 +0200 (Sat, 30 May 2009)
New Revision: 1877

Modified:
   trunk/src/CacheWolf/CacheType.java
   trunk/src/CacheWolf/LOCXMLImporter.java
Log:
adapted LOC impoeter to new types
ran eclipse formatter on LOC importer

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2009-05-30 19:31:51 UTC (rev 1876)
+++ trunk/src/CacheWolf/CacheType.java	2009-05-30 20:35:51 UTC (rev 1877)
@@ -551,9 +551,9 @@
 		case CW_TYPE_REFERENCE: return GC_GPX_REFERENCE;
 		case CW_TYPE_MAZE: return GC_GPX_MAZE;
 		case CW_TYPE_APE: return GC_GPX_APE;
+		case CW_TYPE_CUSTOM: return CW_GUISTR_CUSTOM;
 		default: throw new IllegalArgumentException("unmatched argument "+id+" in CacheSize id2GpxString()");
 		}
-		
 	}
 	
 	//TODO: do we actually need this one?
@@ -605,6 +605,7 @@
 		case CW_TYPE_REFERENCE: return true;
 		case CW_TYPE_MAZE: return true;
 		case CW_TYPE_APE: return true;
+		case CW_TYPE_CUSTOM: return true;
 		default: return false;
 		}
 	}

Modified: trunk/src/CacheWolf/LOCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/LOCXMLImporter.java	2009-05-30 19:31:51 UTC (rev 1876)
+++ trunk/src/CacheWolf/LOCXMLImporter.java	2009-05-30 20:35:51 UTC (rev 1877)
@@ -1,31 +1,33 @@
-    /*
-    CacheWolf is a software for PocketPC, Win and Linux that 
-    enables paperless caching. 
-    It supports the sites geocaching.com and opencaching.de
-    
-    Copyright (C) 2006  CacheWolf development team
-    See http://developer.berlios.de/projects/cachewolf/
-    for more information.
-    Contact: 	bilbowolf at users.berlios.de
-    			kalli at users.berlios.de
+/*
+CacheWolf is a software for PocketPC, Win and Linux that 
+enables paperless caching. 
+It supports the sites geocaching.com and opencaching.de
 
-    This program is free software; you can redistribute it and/or modify
-    it under the terms of the GNU General Public License as published by
-    the Free Software Foundation; either version 2 of the License, or
-    (at your option) any later version.
+Copyright (C) 2006  CacheWolf development team
+See http://developer.berlios.de/projects/cachewolf/
+for more information.
+Contact: 	bilbowolf at users.berlios.de
+			kalli at users.berlios.de
 
-    This program is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-    GNU General Public License for more details.
+This program is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2 of the License, or
+(at your option) any later version.
 
-    You should have received a copy of the GNU General Public License
-    along with this program; if not, write to the Free Software
-    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-    */
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
 
+You should have received a copy of the GNU General Public License
+along with this program; if not, write to the Free Software
+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
 package CacheWolf;
 
+//TODO: move to CacheWOlf.imp
+
 import ewe.sys.Vm;
 import ewe.io.*;
 import ewesoft.xml.MinML;
@@ -33,7 +35,7 @@
 
 /**
  * @author Kalle
- *
+ * 
  */
 public class LOCXMLImporter extends MinML {
 	boolean debugXML = false;
@@ -45,61 +47,59 @@
 
 	String strData = new String();
 
-	
-	public LOCXMLImporter ( Preferences pf, Profile prof, String f ){
+	public LOCXMLImporter(Preferences pf, Profile prof, String f) {
 		pref = pf;
-		profile=prof;
+		profile = prof;
 		cacheDB = profile.cacheDB;
 		file = f;
 	}
-	
+
 	public void doIt() {
-		try{
+		try {
 			Reader r;
 			Vm.showWait(true);
-			//Test for zip.file
-						r = new FileReader(file);
-						parse(r);
-						r.close();
-			// save Index 
-			profile.saveIndex(pref,Profile.NO_SHOW_PROGRESS_BAR);
+			// Test for zip.file
+			r = new FileReader(file);
+			parse(r);
+			r.close();
+			// save Index
+			profile.saveIndex(pref, Profile.NO_SHOW_PROGRESS_BAR);
 			Vm.showWait(false);
-		}catch(Exception e){
-			//Vm.debug(e.toString());
+		} catch (Exception e) {
+			// Vm.debug(e.toString());
 			Vm.showWait(false);
 		}
-		
 	}
-	
-	public void startElement(String name, AttributeList atts){
-		if (debugXML){
+
+	public void startElement(String name, AttributeList atts) {
+		if (debugXML) {
 			for (int i = 0; i < atts.getLength(); i++) {
-				Vm.debug(" Name: " + atts.getName(i)+ " Value: "+atts.getValue(i));
+				Vm.debug(" Name: " + atts.getName(i) + " Value: "
+						+ atts.getValue(i));
 			}
 		}
-		strData ="";
-		if (name.equals("name")){
+		strData = "";
+		if (name.equals("name")) {
 			holder = getHolder(atts.getValue("id"));
 			return;
 		}
-		if (name.equals("coord")){
-			holder.pos.set(Common.parseDouble(atts.getValue("lat")),Common.parseDouble(atts.getValue("lon")));
+		if (name.equals("coord")) {
+			holder.pos.set(Common.parseDouble(atts.getValue("lat")), Common
+					.parseDouble(atts.getValue("lon")));
 			holder.LatLon = holder.pos.toString();
 			return;
 		}
+	}
 
-		
-	}
-	
-	public void endElement(String name){
-		if (name.equals("name")){
+	public void endElement(String name) {
+		if (name.equals("name")) {
 			holder.setCacheName(strData);
 		}
 
-		if (name.equals("waypoint")){
+		if (name.equals("waypoint")) {
 			int index;
 			index = cacheDB.getIndex(holder.getWayPoint());
-			if (index == -1){
+			if (index == -1) {
 				holder.setNew(true);
 				cacheDB.add(holder);
 			}
@@ -107,38 +107,40 @@
 			else {
 				holder.setNew(false);
 			}
-			// save all  (after each cache???)
+			// save all (after each cache???)
 			holder.save();
-			profile.saveIndex(pref,Profile.NO_SHOW_PROGRESS_BAR);
+			profile.saveIndex(pref, Profile.NO_SHOW_PROGRESS_BAR);
 			return;
 		}
 
-		if (name.equals("link")){
+		if (name.equals("link")) {
 			holder.getFreshDetails().URL = strData;
 			return;
 		}
-
-
-
 	}
-	
 
-	public void characters(char[] ch,int start,int length){
-		String chars = new String(ch,start,length);
+	public void characters(char[] ch, int start, int length) {
+		String chars = new String(ch, start, length);
 		strData += chars;
-		if (debugXML) Vm.debug(strData);
+		if (debugXML)
+			Vm.debug(strData);
 	}
 
-	private CacheHolder getHolder(String wpt){// See also OCXMLImporter
+	private CacheHolder getHolder(String wpt) {// See also OCXMLImporter
 		CacheHolder ch;
-		
+
 		ch = cacheDB.get(wpt);
 		if (ch == null) {
 			ch = new CacheHolder();
+			// TODO: once the cleanup is done, this should be move to
+			// CacheHolder constructor
+			ch.setType(CacheType.CW_TYPE_CUSTOM);
+			ch.setTerrain(CacheTerrDiff.CW_DT_UNSET);
+			ch.setHard(CacheTerrDiff.CW_DT_UNSET);
+			ch.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
 			ch.setWayPoint(wpt);
 		}
 		return ch;
 	}
 
-
 }



