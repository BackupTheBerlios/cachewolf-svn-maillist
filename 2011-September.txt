From apreisser at mail.berlios.de  Tue Sep  6 07:00:03 2011
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Tue,  6 Sep 2011 07:00:03 PM +0200
Subject: [Cachewolf-svn] r3074 - trunk/src/CacheWolf/view/pda
Message-ID: <20110906170003.7EAE9481235@sheep.berlios.de>

Author: apreisser
Date: 2011-09-06 19:00:02 +0200 (Tue, 06 Sep 2011)
New Revision: 3074

Modified:
   trunk/src/CacheWolf/view/pda/PDAList.java
Log:
Method for creating buttons. Makes subclassing easier.

Modified: trunk/src/CacheWolf/view/pda/PDAList.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAList.java	2011-08-28 08:22:31 UTC (rev 3073)
+++ trunk/src/CacheWolf/view/pda/PDAList.java	2011-09-06 17:00:02 UTC (rev 3074)
@@ -1,12 +1,12 @@
 package CacheWolf.view.pda;
 
+import CacheWolf.Global;
 import CacheWolf.MyLocale;
 import CacheWolf.model.DefaultListModel;
 import ewe.sys.Vm;
 import ewe.ui.CellConstants;
 import ewe.ui.ControlEvent;
 import ewe.ui.Form;
-import ewe.util.Vector;
 
 public abstract class PDAList extends Form {
 	protected static final String LINE = "Line";
@@ -17,6 +17,8 @@
 
 	protected static final String MENUE = "Menue";
 
+	private static final String NONE = "none";
+
 	public DefaultListModel model;
 	private int linesOnScreen=7;
 	PDAListButton[] listButtons;
@@ -31,7 +33,7 @@
 
 		firstLine = 0;
 		for (int i = 0; i < linesOnScreen; i++) {
-			listButtons[i] = new PDAListButton("", LINE + i);
+			listButtons[i]  = createListButton(i);
 			addLast(listButtons[i], CellConstants.STRETCH, CellConstants.FILL);
 		}
 		setupTBButtons();
@@ -45,6 +47,10 @@
 		addLast(b1, CellConstants.HSTRETCH, CellConstants.HFILL);
 	}
 
+	protected PDAListButton createListButton(int i) {
+		return new PDAListButton("", LINE + i);
+	}
+
 	public void onControlEvent(ControlEvent ev) {
 		if (ev instanceof ControlEvent) {
 			switch (ev.type) {
@@ -77,8 +83,10 @@
 			if (model != null && i + firstLine < model.size()) {
 				Object modelElement = model.get(i + firstLine);
 				listButtons[i].text = modelElement.toString();
+				listButtons[i].action = LINE+i;
 			} else {
 				listButtons[i].text = listButtons[i].fromText = listButtons[i].toText = "";
+				listButtons[i].action = NONE;
 			}
 			listButtons[i].repaint();
 		}



From apreisser at mail.berlios.de  Tue Sep  6 07:07:11 2011
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Tue,  6 Sep 2011 07:07:11 PM +0200
Subject: [Cachewolf-svn] r3075 - trunk/src/CacheWolf/view/pda
Message-ID: <20110906170712.0A9F94809F6@sheep.berlios.de>

Author: apreisser
Date: 2011-09-06 19:07:11 +0200 (Tue, 06 Sep 2011)
New Revision: 3075

Modified:
   trunk/src/CacheWolf/view/pda/PDAListButton.java
Log:
New Method for creating buttons. Makes subclassing easier.

Modified: trunk/src/CacheWolf/view/pda/PDAListButton.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAListButton.java	2011-09-06 17:00:02 UTC (rev 3074)
+++ trunk/src/CacheWolf/view/pda/PDAListButton.java	2011-09-06 17:07:11 UTC (rev 3075)
@@ -15,7 +15,7 @@
 	public PDAListButton(String newText, String newAction) {
 		super(newText);
 		action = newAction;
-		buttonObject = new PDAListButtonObject(this);
+		createButtonObject();
 
 		backGround = Color.White;
 		foreGround = Color.Black;
@@ -25,10 +25,14 @@
 		textPosition=2;
 	}
 
+	protected void createButtonObject() {
+		buttonObject = new PDAListButtonObject(this);
+	}
+
 	public void make(boolean paramBoolean) {
 		if (this.buttonObject != null)
 			return;
-		this.buttonObject = new PDAListButtonObject(this);
+		createButtonObject();
 	}
 	
 }



From apreisser at mail.berlios.de  Thu Sep  8 08:03:14 2011
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Thu,  8 Sep 2011 08:03:14 PM +0200
Subject: [Cachewolf-svn] r3076 - trunk/src/CacheWolf/view/pda
Message-ID: <20110908180314.3D0DC48125C@sheep.berlios.de>

Author: apreisser
Date: 2011-09-08 20:03:13 +0200 (Thu, 08 Sep 2011)
New Revision: 3076

Modified:
   trunk/src/CacheWolf/view/pda/PDAListButtonObject.java
Log:
Fontsize on Button adapted

Modified: trunk/src/CacheWolf/view/pda/PDAListButtonObject.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAListButtonObject.java	2011-09-06 17:07:11 UTC (rev 3075)
+++ trunk/src/CacheWolf/view/pda/PDAListButtonObject.java	2011-09-08 18:03:13 UTC (rev 3076)
@@ -2,12 +2,14 @@
 
 import ewe.fx.Color;
 import ewe.fx.Font;
+import ewe.fx.FontMetrics;
 import ewe.fx.Graphics;
 import ewe.fx.Rect;
 import ewe.ui.ButtonObject;
+import ewe.ui.Gui;
 
 public class PDAListButtonObject extends ButtonObject {
-	private PDAListButton pdaListButton;
+	protected PDAListButton pdaListButton;
 
 	public PDAListButtonObject(PDAListButton pdaListButton) {
 		super(pdaListButton);
@@ -20,8 +22,7 @@
 		if (this.text == null)
 			this.text = "";
 		drawButton(paramGraphics);
-		Rect localRect1 = paramGraphics.reduceClip(new Rect(this.borderWidth, this.borderWidth, this.size.width
-				- (this.borderWidth * 2), this.size.height - (this.borderWidth * 2)));
+		Rect localRect1 = paramGraphics.reduceClip(new Rect(this.borderWidth, this.borderWidth, this.size.width - (this.borderWidth * 2), this.size.height - (this.borderWidth * 2)));
 		try {
 			paramGraphics.setColor(foreground);
 			int x = 10;
@@ -31,26 +32,22 @@
 				x += image.getWidth();
 				x += 10;
 			}
+			
+			font = new Font(font.getName(), Font.BOLD, 40);
+			boolean found = false;
+			while (!found) {
+				Rect textRect = Gui.getSize(pdaListButton.getFontMetrics(), text, 5, 0);
+				if (textRect.width > localRect1.width && textRect.height > localRect1.height && font.getSize() > 5) {
+					font = new Font(font.getName(), Font.BOLD, font.getSize() - 1);
+					textRect = Gui.getSize(pdaListButton.getFontMetrics(), text, 5, 0);
+				} else {
+					found = true;
+				}
+			}
 			paramGraphics.setFont(this.font);
 			paramGraphics.drawText(text, x, 10);
 			Font tmpFont = new Font(font.getName(), Font.BOLD, 20);
 			paramGraphics.setFont(tmpFont);
-			if (pdaListButton.fromText != null) {
-				paramGraphics.drawText(pdaListButton.fromText, x + 15, 45);
-			}
-			if (!pdaListButton.fromLogged) {
-				paramGraphics.setColor(new Color(255, 0, 0));
-				paramGraphics.fillEllipse(x, 50, 10, 10);
-				paramGraphics.setColor(foreground);
-			}
-			if (pdaListButton.toText != null) {
-				paramGraphics.drawText(pdaListButton.toText, x + 15, 70);
-			}
-			if (!pdaListButton.toLogged) {
-				paramGraphics.setColor(new Color(255, 0, 0));
-				paramGraphics.fillEllipse(x, 75, 10, 10);
-				paramGraphics.setColor(foreground);
-			}
 		} finally {
 			paramGraphics.restoreClip(localRect1);
 		}



From araber95 at mail.berlios.de  Sat Sep 10 12:46:08 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Sat, 10 Sep 2011 12:46:08 PM +0200
Subject: [Cachewolf-svn] r3077 - trunk/src/CacheWolf/imp
Message-ID: <20110910104608.E55DB481280@sheep.berlios.de>

Author: araber95
Date: 2011-09-10 12:46:08 +0200 (Sat, 10 Sep 2011)
New Revision: 3077

Modified:
   trunk/src/CacheWolf/imp/OCXMLImporter.java
Log:
correct sideeffect by having code for changing pos only once with setter changed at svn 3045.
CacheHolder.cache_updated, changed there, is (mis)used to get description and hint in more than one language.

Modified: trunk/src/CacheWolf/imp/OCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/OCXMLImporter.java	2011-09-08 18:03:13 UTC (rev 3076)
+++ trunk/src/CacheWolf/imp/OCXMLImporter.java	2011-09-10 10:46:08 UTC (rev 3077)
@@ -139,7 +139,7 @@
 	}
 
 	/**
-	 * 
+	 *
 	 * @param number
 	 * @param infB
 	 * @return true, if some change was made to the cacheDB
@@ -630,6 +630,7 @@
 		}
 		if (name.equals("latitude")) {
 			holder.setPos(new TrackPoint(Common.parseDouble(strData), longitude));
+			holder.setUpdated(false); // todo : correct definition of usage for this 
 			return;
 		}
 		if (name.equals("difficulty")) {
@@ -670,8 +671,9 @@
 				linebraek = "<br>\n";
 			else
 				linebraek = "\n";
-
-			// this is set by "hint" a few lines down: if a long description is already updated, then this one is likely to be in another language
+			// if a long description has been entered in this run (==holder.cache_updated is true), 
+			// then this one is added (for another language)
+			// otherwise all previous descriptions will be overwritten ( or there are none yet) 
 			if (holder.is_updated())
 				holder.getCacheDetails(false).LongDescription += linebraek + processingDescLang + ":" + linebraek + strData + linebraek;
 			else
@@ -679,7 +681,7 @@
 			return;
 		}
 
-		if (name.equals("desc")) { // </desc>
+		if (name.equals("desc")) { // </desc> 
 			if (isHTML)
 				holder.getCacheDetails(false).LongDescription += SafeXML.cleanback(strData);
 			else
@@ -696,7 +698,12 @@
 				holder.getCacheDetails(false).Hints += linebreak + "[" + processingDescLang + ":]" + linebreak + Common.rot13(strData) + linebreak;
 			else
 				holder.getCacheDetails(false).Hints = "[" + processingDescLang + ":]" + linebreak + Common.rot13(strData) + linebreak;
-			holder.setUpdated(true); // remark: this is used in "shortdesc" to decide weather the description should be appended or replaced
+			// remark: 
+			// holder.cache_updated will be set to true
+			// after the subtag-infos of tag <cachedesc> have been entered 
+			// (ending with the subtag </hint>) 
+			// to possibly add the <cachedesc> for an additional language
+			holder.setUpdated(true);
 			return;
 		}
 	}



From apreisser at mail.berlios.de  Sat Sep 10 03:21:51 2011
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Sat, 10 Sep 2011 03:21:51 PM +0200
Subject: [Cachewolf-svn] r3078 - trunk/src/CacheWolf/view/pda
Message-ID: <20110910132152.254FA481270@sheep.berlios.de>

Author: apreisser
Date: 2011-09-10 15:21:51 +0200 (Sat, 10 Sep 2011)
New Revision: 3078

Modified:
   trunk/src/CacheWolf/view/pda/PDAListButtonObject.java
Log:
Problems with clipping area under PocketPC2003: NPE occurs under unkown circumstances.

Modified: trunk/src/CacheWolf/view/pda/PDAListButtonObject.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAListButtonObject.java	2011-09-10 10:46:08 UTC (rev 3077)
+++ trunk/src/CacheWolf/view/pda/PDAListButtonObject.java	2011-09-10 13:21:51 UTC (rev 3078)
@@ -1,8 +1,7 @@
 package CacheWolf.view.pda;
 
-import ewe.fx.Color;
+import CacheWolf.Global;
 import ewe.fx.Font;
-import ewe.fx.FontMetrics;
 import ewe.fx.Graphics;
 import ewe.fx.Rect;
 import ewe.ui.ButtonObject;
@@ -17,12 +16,16 @@
 	}
 
 	public void paint(Graphics paramGraphics) {
+		try{
 		if ((this.soft) && (this.control != null))
 			this.control.doBackground(paramGraphics);
 		if (this.text == null)
 			this.text = "";
 		drawButton(paramGraphics);
-		Rect localRect1 = paramGraphics.reduceClip(new Rect(this.borderWidth, this.borderWidth, this.size.width - (this.borderWidth * 2), this.size.height - (this.borderWidth * 2)));
+		Rect paramRect = new Rect(this.borderWidth, this.borderWidth, this.size.width - (this.borderWidth * 2), this.size.height - (this.borderWidth * 2));
+		Rect localRect1 = paramGraphics.reduceClip(paramRect);
+		//On PocketPC2003 sometimes reduceClip returns null. If this happens, the clipping area seems to be determined by its input parameter.
+		if (localRect1 == null) localRect1=paramRect;
 		try {
 			paramGraphics.setColor(foreground);
 			int x = 10;
@@ -33,12 +36,17 @@
 				x += 10;
 			}
 			
-			font = new Font(font.getName(), Font.BOLD, 40);
+			int fontSize = 40;
+			font = new Font(font.getName(), Font.BOLD, fontSize);
 			boolean found = false;
 			while (!found) {
 				Rect textRect = Gui.getSize(pdaListButton.getFontMetrics(), text, 5, 0);
-				if (textRect.width > localRect1.width && textRect.height > localRect1.height && font.getSize() > 5) {
-					font = new Font(font.getName(), Font.BOLD, font.getSize() - 1);
+				if (textRect.width > localRect1.width && textRect.height > localRect1.height && fontSize > 5) {
+					fontSize--;
+					Font tmpFont = new Font(font.getName(), Font.BOLD, fontSize);
+					if (tmpFont != null){
+						font = tmpFont;
+					}
 					textRect = Gui.getSize(pdaListButton.getFontMetrics(), text, 5, 0);
 				} else {
 					found = true;
@@ -51,5 +59,9 @@
 		} finally {
 			paramGraphics.restoreClip(localRect1);
 		}
+		}
+		catch(Exception e){
+			Global.getPref().log("Mysterious Exception caught!", e, true);
+		}
 	}
 }



From araber95 at mail.berlios.de  Sat Sep 10 04:56:23 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Sat, 10 Sep 2011 04:56:23 PM +0200
Subject: [Cachewolf-svn] r3079 - trunk/src/CacheWolf/imp
Message-ID: <20110910145624.351DD481270@sheep.berlios.de>

Author: araber95
Date: 2011-09-10 16:56:23 +0200 (Sat, 10 Sep 2011)
New Revision: 3079

Modified:
   trunk/src/CacheWolf/imp/SpiderGC.java
Log:
changed some login code

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-10 13:21:51 UTC (rev 3078)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-10 14:56:23 UTC (rev 3079)
@@ -1008,7 +1008,7 @@
 
 	/**
 	 * Method to spider a single cache. It assumes a login has already been performed!
-	 * 
+	 *
 	 * @return 1 if spider was successful, -1 if spider was cancelled by closing the infobox, 0 error, but continue with
 	 *         next cache
 	 */
@@ -1055,7 +1055,7 @@
 
 	/**
 	 * Fetch the coordinates of a waypoint from GC
-	 * 
+	 *
 	 * @param wayPoint
 	 *            the name of the waypoint
 	 * @return the cache coordinates
@@ -1091,19 +1091,41 @@
 	 * TODO: Translation for status text!
 	 */
 	private boolean login() {
-		
+
 		if (loggedIn && !pref.forceLogin) {
 			return true;
 		}
+		
+		if (pref.userID.length() > 0) {
+			UrlFetcher.setPermanentRequestorProperty("Cookie", null);
+			loggedIn = switchToEnglish();
+			if (loggedIn)
+				return true;
+		}
 
 		int counter = 5;
 		boolean real_return = false;
-		InfoBox localInfB = new InfoBox(MyLocale.getMsg(5507, "Status"), MyLocale.getMsg(5508, "Logging in..."));
+
+		// **0 Get password
+		String passwort = pref.password;
+		InfoBox localInfB = new InfoBox(MyLocale.getMsg(5506, "Password"), MyLocale.getMsg(5505, "Enter Password"), InfoBox.INPUT);
+		localInfB.feedback.setText(passwort);
+		localInfB.feedback.isPassword = true;
+		int code = FormBase.IDOK;
+		if (passwort.equals("")) {
+			code = localInfB.execute();
+			passwort = localInfB.getInput();
+		}
+		localInfB.close(0);
+		if (code != FormBase.IDOK)
+			return false;
+
+		localInfB = new InfoBox(MyLocale.getMsg(5507, "Status"), MyLocale.getMsg(5508, "Logging in..."));
 		localInfB.exec();
-		
+
 		while (counter > 0) {
 			counter--;
-			switch( origin_login() ) {
+			switch( origin_login(passwort) ) {
 				case 1:
 					real_return = true;
 					counter = 0;
@@ -1121,12 +1143,12 @@
 				case 4:
 					localInfB.setInfo(MyLocale.getMsg(5523, "Login error! next try...") + "(" + (5 - counter) + "/5)");
 					break;
-			}			
+			}
 		}
-		
+
 		localInfB.close(0);
 		return real_return;
-		
+
 	}
 
 	/**
@@ -1140,16 +1162,7 @@
 	 * 4 = fetch error / offline
 	 * remove messagebox and infobox
 	 */
-	private int origin_login() {
-		if (pref.userID.length() > 0) {
-			UrlFetcher.setPermanentRequestorProperty("Cookie", null);
-			loggedIn = switchToEnglish();
-			if (loggedIn) return 1;
-			//else {
-			//  (new MessageBox("Login", "Check UserID in preferences | Einstellungen.\nsee http://cachewolf.aldos.de/userid.html", FormBase.OKB)).execute();
-			//	return false;
-			//}
-		} 
+	private int origin_login(String passwort) {
 
 		loggedIn = false;
 		String loginPage, loginPageUrl, loginSuccess;
@@ -1160,25 +1173,9 @@
 			return 0;
 		}
 
-		// **0 Get password
-		String passwort = pref.password;
-		InfoBox localInfB = new InfoBox(MyLocale.getMsg(5506, "Password"), MyLocale.getMsg(5505, "Enter Password"), InfoBox.INPUT);
-		localInfB.feedback.setText(passwort);
-		localInfB.feedback.isPassword = true;
-		int code = FormBase.IDOK;
-		if (passwort.equals("")) {
-			code = localInfB.execute();
-			passwort = localInfB.getInput();
-		}
-		localInfB.close(0);
-		if (code != FormBase.IDOK)
-			return 0;
-
-		// **1 now we have user and password for login
-		//localInfB = new InfoBox(MyLocale.getMsg(5507, "Status"), MyLocale.getMsg(5508, "Logging in..."));
-		//localInfB.exec();
+		// **1 we have user and password for login
 		try {
-			loginPage = UrlFetcher.fetch(loginPageUrl); // http://www.geocaching.com/login/default.aspx
+			loginPage = UrlFetcher.fetch(loginPageUrl); // https://www.geocaching.com/login/default.aspx
 			if (loginPage.equals("")) {
 				pref.log("[login]:Could not fetch: gc.com login page " + loginPageUrl, null);
 				return 4;
@@ -1189,104 +1186,95 @@
 		}
 
 		// **2 now we can check the loginpage if logged in else log in
-		if (!localInfB.isClosed) {
-			if (loginPage.indexOf(loginSuccess) > 0) {
-				if (loginPage.indexOf(pref.myAlias) > 0) {
-					loggedIn = true;
-					// assume language is already set to EN
-					pref.log("[login]:Already logged in as " + pref.myAlias);
-				} else {
-					// it is another user, whom we should logout
-					try {
-						loginPage = UrlFetcher.fetch("http://www.geocaching.com/login/default.aspx?RESETCOMPLETE=Y");
-					} catch (final Exception ex) {
-						pref.log("[login]:Could not fetch: gc.com login page", ex);
-						return 4;
-					}
+		// assume language is already set to EN (loginSuccess has EN - Text)
+		if (loginPage.indexOf(loginSuccess) > 0) {
+			if (loginPage.indexOf(pref.myAlias) > 0) {
+				loggedIn = true;
+				pref.log("[login]:Already logged in as " + pref.myAlias);
+			} else {
+				// it is another user, whom we should logout
+				try {
+					loginPage = UrlFetcher.fetch("https://www.geocaching.com/login/default.aspx?RESET=Y");
+				} catch (final Exception ex) {
+					pref.log("[login]:Could not fetch: gc.com login page", ex);
+					return 4;
+				}
 
+			}
+		}
+		if (!loggedIn) {
+			try {
+				final Regex rexViewstate = new Regex("id=\"__VIEWSTATE\" value=\"(.*?)\" />");
+				String viewstate = "";
+				rexViewstate.search(loginPage);
+				if (rexViewstate.didMatch()) {
+					viewstate = rexViewstate.stringMatched(1);
+				} else {;
+					pref.log("[login]:__VIEWSTATE not found (before login): no login possible.", null);
+					return 0;
 				}
+
+				final StringBuffer sb = new StringBuffer(1000);
+				sb.append("__EVENTTARGET=&__EVENTARGUMENT=&"); // added for testing
+				sb.append("__VIEWSTATE=" + URL.encodeURL(viewstate, false));
+				sb.append("&ctl00%24SiteContent%24"); // changed from 24BodyContent to 24SiteContent
+				sb.append("tbUsername=" + encodeUTF8URL(Utils.encodeJavaUtf8String(pref.myAlias))); // changed myUsername to tbUsername
+				sb.append("&ctl00%24SiteContent%24");
+				sb.append("tbPassword=" + encodeUTF8URL(Utils.encodeJavaUtf8String(passwort))); // changed myPassword to tbPassword
+				sb.append("&ctl00%24SiteContent%24");
+				sb.append("cbRememberMe=on");
+				sb.append("&ctl00%24SiteContent%24");
+				sb.append("btnSignIn=Login"); // changed Button1 to btnSignIn
+				UrlFetcher.setpostData(sb.toString());
+
+				loginPage = UrlFetcher.fetch(loginPageUrl);
+			} catch (final Exception ex) {
+				pref.log("[login]:Login failed with exception.", ex);
+				return 3;
 			}
-			if (!loggedIn) {
-				try {
-					final Regex rexViewstate = new Regex("id=\"__VIEWSTATE\" value=\"(.*?)\" />");
-					String viewstate = "";
-					rexViewstate.search(loginPage);
-					if (rexViewstate.didMatch()) {
-						viewstate = rexViewstate.stringMatched(1);
-					} else {;
-						pref.log("[login]:__VIEWSTATE not found (before login): no login possible.", null);
-						return 0;
-					}
-					
-					final StringBuffer sb = new StringBuffer(1000);
-					sb.append("__EVENTTARGET=&__EVENTARGUMENT=&"); // added for testing 
-					sb.append("__VIEWSTATE=" + URL.encodeURL(viewstate, false));				
-					sb.append("&ctl00%24SiteContent%24"); // changed from 24BodyContent to 24SiteContent
-					sb.append("tbUsername=" + encodeUTF8URL(Utils.encodeJavaUtf8String(pref.myAlias))); // changed myUsername to tbUsername
-					sb.append("&ctl00%24SiteContent%24");
-					sb.append("tbPassword=" + encodeUTF8URL(Utils.encodeJavaUtf8String(passwort))); // changed myPassword to tbPassword
-					sb.append("&ctl00%24SiteContent%24");
-					sb.append("cbRememberMe=on");
-					sb.append("&ctl00%24SiteContent%24");
-					sb.append("btnSignIn=Login"); // changed Button1 to btnSignIn
-					UrlFetcher.setpostData(sb.toString());
-					
-					loginPage = UrlFetcher.fetch(loginPageUrl);
-					if (loginPage.indexOf(loginSuccess) > 0) {
-						pref.log("Login successful: " + pref.myAlias);
-						// **3 now we are logged in and get the Cookie (there are two)
-						final PropertyList pl = UrlFetcher.getDocumentProperties();
-						String docprops = "";
-						for (int i = 0; i < pl.size(); i++) {
-							final Property p = (Property) pl.get(i);
-							if (p.name.equalsIgnoreCase("Set-Cookie")) {
-								docprops += p.value;
-							}
-						}
-						final Regex rexCookieSession = new Regex("(?i)ASP.NET_SessionId=(.*?);.*");
-						rexCookieSession.search(docprops);
-						if (rexCookieSession.didMatch()) {
-							cookie = "ASP.NET_SessionId=" + rexCookieSession.stringMatched(1);
-						} else {
-							pref.log("[login]:SessionID not found.", null);
-							return 0;
-						}
-						final Regex rexCookieID = new Regex("(?i)userid=(.*?);.*");
-						rexCookieID.search(docprops);
-						if (rexCookieID.didMatch()) {
-							cookie += "; userid=" + rexCookieID.stringMatched(1);
-							// set the user id in user pref
-							pref.userID = rexCookieID.stringMatched(1);
-							pref.savePreferences();
-						} else {
-							pref.log("[login]:userID not found.", null);
-							return 0;
-						}
-						UrlFetcher.setPermanentRequestorProperty("Cookie", cookie);
-					} else {
-						pref.log("Login failed. Wrong Account or Password? " + pref.myAlias, null);
-						pref.log("[login.url]:" + loginPageUrl, null);
-						pref.log("[login.postData]:" + sb.toString(), null);
-						pref.log("[login.Answer]:" + loginPage, null);
-						return 2;
-					}
-					if (!this.switchToEnglish())
-						return 0;
-				} catch (final Exception ex) {
-					pref.log("[login]:Login failed with exception.", ex);
-					return 3;
+		}
+		
+		if (loginPage.indexOf(loginSuccess) > 0) {
+			pref.log("Login successful: " + pref.myAlias);
+			// **3 now we are logged in and get the Cookie (there are two)
+			final PropertyList pl = UrlFetcher.getDocumentProperties();
+			String docprops = "";
+			for (int i = 0; i < pl.size(); i++) {
+				final Property p = (Property) pl.get(i);
+				if (p.name.equalsIgnoreCase("Set-Cookie")) {
+					docprops += p.value;
 				}
 			}
+			final Regex rexCookieSession = new Regex("(?i)ASP.NET_SessionId=(.*?);.*");
+			rexCookieSession.search(docprops);
+			if (rexCookieSession.didMatch()) {
+				cookie = "ASP.NET_SessionId=" + rexCookieSession.stringMatched(1);
+			} else {
+				pref.log("[login]:SessionID not found.", null);
+				return 0;
+			}
+			final Regex rexCookieID = new Regex("(?i)userid=(.*?);.*");
+			rexCookieID.search(docprops);
+			if (rexCookieID.didMatch()) {
+				cookie += "; userid=" + rexCookieID.stringMatched(1);
+				// set the user id in user pref
+				pref.userID = rexCookieID.stringMatched(1);
+				pref.savePreferences();
+			} else {
+				pref.log("[login]:userID not found.", null);
+				return 0;
+			}
+			UrlFetcher.setPermanentRequestorProperty("Cookie", cookie);
+		} else {
+			pref.log("Login failed. Wrong Account or Password? " + pref.myAlias, null);
+			return 2;
 		}
+		
+		if (!this.switchToEnglish())
+			return 0;
 
-		//final boolean loginAborted = localInfB.isClosed;
-		//localInfB.close(0);
-		//if (loginAborted)
-		//	return 0;
-		//else {
-			loggedIn = true;
-			return 1;
-		//}
+		loggedIn = true;
+		return 1;
 	}
 
 	private boolean switchToEnglish() {
@@ -1780,7 +1768,7 @@
 
 	/**
 	 * check if new Update exists
-	 * 
+	 *
 	 * @param ch
 	 *            CacheHolder
 	 * @param CacheDescription
@@ -1865,7 +1853,7 @@
 
 	/**
 	 * Get num found
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return numFound
@@ -1985,7 +1973,7 @@
 
 	/**
 	 * Get the waypoint name
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return Name of waypoint to add to list
@@ -2210,9 +2198,9 @@
 
 	/*
 	 * @param CacheHolder ch
-	 * 
+	 *
 	 * @param String cacheDescGC
-	 * 
+	 *
 	 * @return boolean newLogExists
 	 */
 	private boolean newFoundExists(CacheHolder ch, String cacheDescription) {
@@ -2254,9 +2242,9 @@
 	 * Read a complete cachepage from geocaching.com including all logs. This is used both when updating already
 	 * existing caches (via spiderSingle) and when spidering around a centre. It is also used when reading a GPX file
 	 * and fetching the images.
-	 * 
+	 *
 	 * This is the workhorse function of the spider.
-	 * 
+	 *
 	 * @param CacheHolderDetail
 	 *            chD The element wayPoint must be set to the name of a waypoint
 	 * @param boolean
@@ -2462,7 +2450,7 @@
 
 	/**
 	 * Get the coordinates of the cache
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return Cache coordinates
@@ -2481,7 +2469,7 @@
 
 	/**
 	 * Get the long description
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return the long description
@@ -2516,7 +2504,7 @@
 
 	/**
 	 * Get the cache location (country and state)
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return the location (country and state) of the cache
@@ -2533,7 +2521,7 @@
 
 	/**
 	 * Get the cache name
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return the name of the cache
@@ -2550,7 +2538,7 @@
 
 	/**
 	 * Get the cache owner
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return the cache owner
@@ -2567,7 +2555,7 @@
 
 	/**
 	 * Get the date when the cache was hidden
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return Hidden date
@@ -2584,7 +2572,7 @@
 
 	/**
 	 * Get the hints
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return Cachehints
@@ -2601,7 +2589,7 @@
 
 	/**
 	 * Get the cache size
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return Cache size
@@ -2619,7 +2607,7 @@
 
 	/**
 	 * Get the Difficulty
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return The cache difficulty
@@ -2637,7 +2625,7 @@
 
 	/**
 	 * Get the terrain rating
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return Terrain rating
@@ -2655,7 +2643,7 @@
 
 	/**
 	 * Get the waypoint type
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return the waypoint type (Tradi, Multi, etc.)
@@ -2672,7 +2660,7 @@
 
 	/**
 	 * Get the logs
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @param chD
@@ -2739,7 +2727,7 @@
 
 	/**
 	 * This methods cleans up the path for inlined smilies in logtexts.
-	 * 
+	 *
 	 * @param logText
 	 * @return
 	 */
@@ -2757,7 +2745,7 @@
 	/**
 	 * Read the travelbug names from a previously fetched Cache page and then read the travelbug purpose for each
 	 * travelbug
-	 * 
+	 *
 	 * @param doc
 	 *            The previously fetched cachepage
 	 * @return A HTML formatted string with bug names and there purpose
@@ -2815,7 +2803,7 @@
 	/**
 	 * Get the images for a previously fetched cache page. Images are extracted from two areas: The long description and
 	 * the pictures section (including the spoiler)
-	 * 
+	 *
 	 * @param doc
 	 *            The previously fetched cachepage
 	 * @param chD
@@ -3002,7 +2990,7 @@
 
 	/**
 	 * Read an image from the server
-	 * 
+	 *
 	 * @param imgUrl
 	 *            The Url of the image
 	 * @param target
@@ -3024,7 +3012,7 @@
 
 	/**
 	 * Read all additional waypoints from a previously fetched cachepage.
-	 * 
+	 *
 	 * @param doc
 	 *            The previously fetched cachepage
 	 * @param wayPoint
@@ -3159,7 +3147,7 @@
 	 * Load the bug id for a given name. This method is not ideal, as there are sometimes several bugs with identical
 	 * names but different IDs. Normally the bug GUID is used which can be obtained from the cache page.<br>
 	 * Note that each bug has both an ID and a GUID.
-	 * 
+	 *
 	 * @param name
 	 *            The name (or partial name) of a travelbug
 	 * @return the id of the bug
@@ -3195,7 +3183,7 @@
 	/**
 	 * Fetch a bug's mission for a given GUID or ID. If the guid String is longer than 10 characters it is assumed to be
 	 * a GUID, otherwise it is an ID.
-	 * 
+	 *
 	 * @param guid
 	 *            the guid or id of the travelbug
 	 * @return The mission
@@ -3228,7 +3216,7 @@
 
 	/**
 	 * Fetch a bug's mission for a given tracking number
-	 * 
+	 *
 	 * @param trackNr
 	 *            the tracking number of the travelbug
 	 * @return The mission
@@ -3260,7 +3248,7 @@
 
 	/**
 	 * Fetch a bug's mission and namefor a given tracking number
-	 * 
+	 *
 	 * @param TB
 	 *            the travelbug
 	 * @return true if suceeded
@@ -3307,7 +3295,7 @@
 
 		/**
 		 * Gets an entry in spider.def by its key (tag)
-		 * 
+		 *
 		 * @param key
 		 *            The key which is attributed to a specific entry
 		 * @return The value for the key



From araber95 at mail.berlios.de  Mon Sep 12 12:27:56 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Mon, 12 Sep 2011 12:27:56 AM +0200
Subject: [Cachewolf-svn] r3080 - in trunk: res_noewe/languages src/CacheWolf
	src/CacheWolf/imp
Message-ID: <20110911222756.89058481349@sheep.berlios.de>

Author: araber95
Date: 2011-09-12 00:27:56 +0200 (Mon, 12 Sep 2011)
New Revision: 3080

Modified:
   trunk/res_noewe/languages/DE.cfg
   trunk/res_noewe/languages/EN.cfg
   trunk/res_noewe/languages/FR.cfg
   trunk/res_noewe/languages/NL.cfg
   trunk/res_noewe/languages/PL.cfg
   trunk/res_noewe/languages/SV.cfg
   trunk/src/CacheWolf/MainMenu.java
   trunk/src/CacheWolf/Preferences.java
   trunk/src/CacheWolf/imp/SpiderGC.java
Log:
1. removed menu force login
2. changed SpiderGC to UTF-8 for handling of GC languages
3. code for correct setting / resetting GC language

Modified: trunk/res_noewe/languages/DE.cfg
===================================================================
--- trunk/res_noewe/languages/DE.cfg	2011-09-10 14:56:23 UTC (rev 3079)
+++ trunk/res_noewe/languages/DE.cfg	2011-09-11 22:27:56 UTC (rev 3080)
@@ -140,7 +140,6 @@
 213=Verwaiste .xml Dateien l??schen
 214=Neuer Wegpunkt
 215=nach LOC
-216=Immer bei GC einloggen
 217=von GC Funde
 218=Auch in Beschreibung/Notizen
 219=Suche...
@@ -1105,8 +1104,8 @@
 7301=Stadt
 7302=Suchen
 7303=Abbr.
-7304=berlin, deutschland
-7305=Hauptbahnhof
+7304=Berlin
+7305=
 7306=suche...
 7307=abgebrochen durch Nutzer
 7308=Fehler bei der online Verbindung

Modified: trunk/res_noewe/languages/EN.cfg
===================================================================
--- trunk/res_noewe/languages/EN.cfg	2011-09-10 14:56:23 UTC (rev 3079)
+++ trunk/res_noewe/languages/EN.cfg	2011-09-11 22:27:56 UTC (rev 3080)
@@ -140,7 +140,6 @@
 213=Deleting orphans
 214=New Waypoint
 215=to LOC
-216=Always login to GC
 217=from GC finds
 218=Also in description/notes
 219=Searching...

Modified: trunk/res_noewe/languages/FR.cfg
===================================================================
--- trunk/res_noewe/languages/FR.cfg	2011-09-10 14:56:23 UTC (rev 3079)
+++ trunk/res_noewe/languages/FR.cfg	2011-09-11 22:27:56 UTC (rev 3080)
@@ -140,7 +140,6 @@
 213=Effacer les fichier .xml orpheline
 214=Nouveau waypoint
 215=?? LOC
-216=Toujours connecter
 217=de GC trouvailles
 218=Aussi dans description/notes
 219=Cherchant...

Modified: trunk/res_noewe/languages/NL.cfg
===================================================================
--- trunk/res_noewe/languages/NL.cfg	2011-09-10 14:56:23 UTC (rev 3079)
+++ trunk/res_noewe/languages/NL.cfg	2011-09-11 22:27:56 UTC (rev 3080)
@@ -140,7 +140,6 @@
 213=[Deleting orphans]
 214=Nieuwe Waypoint
 215=aan LOC
-216=Altijd aanmelden bij GC
 217=van GC vondsten
 218=Ook in opmerkingen/beschrijving
 219=Zoeken...

Modified: trunk/res_noewe/languages/PL.cfg
===================================================================
--- trunk/res_noewe/languages/PL.cfg	2011-09-10 14:56:23 UTC (rev 3079)
+++ trunk/res_noewe/languages/PL.cfg	2011-09-11 22:27:56 UTC (rev 3080)
@@ -140,7 +140,6 @@
 213=Usuwanie sierot
 214=Nowy WaypointUsunacUsunac
 215=LOC
-216=Zawsze loguj do GC
 217=z GC stwierdza
 218=Takze w opisie/notatkach
 219=Wyszukiwanie...

Modified: trunk/res_noewe/languages/SV.cfg
===================================================================
--- trunk/res_noewe/languages/SV.cfg	2011-09-10 14:56:23 UTC (rev 3079)
+++ trunk/res_noewe/languages/SV.cfg	2011-09-11 22:27:56 UTC (rev 3080)
@@ -140,7 +140,6 @@
 213=bort f??r??ldral??sa
 214=Ny v??gpunkt
 215=f??r LOC
-216=alltid logga in till GC
 217=fr??n GC finner
 218=??ven i beskrivningen / Notes
 219=S??ker ...

Modified: trunk/src/CacheWolf/MainMenu.java
===================================================================
--- trunk/src/CacheWolf/MainMenu.java	2011-09-10 14:56:23 UTC (rev 3079)
+++ trunk/src/CacheWolf/MainMenu.java	2011-09-11 22:27:56 UTC (rev 3080)
@@ -89,7 +89,7 @@
 	private MenuItem filtCreate, filtClear, filtInvert, filtSelected, filtNonSelected, filtBlack, filtApply;
 	private MenuItem exportLOC, exportGPS, mnuSeparator = new MenuItem("-");
 	private MenuItem orgNewWP, orgCopy, orgMove, orgDelete, orgRebuild, orgCheckNotesAndSolver;
-	public MenuItem cacheTour, orgTravelbugs, mnuForceLogin;
+	public MenuItem cacheTour, orgTravelbugs;
 	private MenuItem mnuNewProfile, mnuOpenProfile, mnuDeleteProfile, mnuRenameProfile, mnuEditCenter;
 	private Form father;
 	private TablePanel tbp;
@@ -134,12 +134,8 @@
 				mnuSeparator, //
 				loadGCVotes = new MenuItem(MyLocale.getMsg(1208, "Import ratings from GCVote")), //
 				fetchOCLink = new MenuItem(MyLocale.getMsg(1209, "Fetch link to OC - Cache")), //
-				mnuSeparator, //
-				mnuForceLogin = new MenuItem(MyLocale.getMsg(216, "Always login to GC")), //
 		};
 		Menu importMenu = new Menu(mnuImport, MyLocale.getMsg(175, "Import"));
-		if (Global.getPref().forceLogin)
-			mnuForceLogin.modifiers ^= MenuItem.Checked;
 
 		// /////////////////////////////////////////////////////////////////////
 		// subMenu for export, part of "Application" menu below
@@ -440,11 +436,6 @@
 				updateSelectedCaches(tbp);
 				pref.setOldGCLanguage();
 			}
-			if (mev.selectedItem == mnuForceLogin) {
-				mnuForceLogin.modifiers ^= MenuItem.Checked;
-				Global.getPref().forceLogin = (mnuForceLogin.modifiers & MenuItem.Checked) != 0;
-				Global.getPref().savePreferences();
-			}
 			// /////////////////////////////////////////////////////////////////////
 			// subMenu for export, part of "Application" menu
 			// /////////////////////////////////////////////////////////////////////
@@ -885,7 +876,6 @@
 		}
 
 		int spiderErrors = 0;
-		boolean forceLogin = Global.getPref().forceLogin; // To ensure that spiderSingle only logs in once if forcedLogin=true
 		for (int j = 0; j < cachesToUpdate.size(); j++) {
 			int i = ((Integer) cachesToUpdate.get(j)).intValue();
 			ch = cacheDB.get(i);
@@ -893,7 +883,7 @@
 			infB.setInfo(MyLocale.getMsg(5513, "Loading: ") + ch.getWayPoint() + " (" + (j + 1) + " / " + cachesToUpdate.size() + ")");
 			infB.redisplay();
 			if (ch.getWayPoint().substring(0, 2).equalsIgnoreCase("GC")) {
-				int test = spider.spiderSingle(i, infB, forceLogin, loadAllLogs || ch.is_found());
+				int test = spider.spiderSingle(i, infB, loadAllLogs || ch.is_found());
 				if (test == SpiderGC.SPIDER_CANCEL) {
 					infB.close(0);
 					break;
@@ -902,7 +892,6 @@
 				} else {
 					// profile.hasUnsavedChanges=true;
 				}
-				forceLogin = false;
 			} else {
 				if (!ocSync.syncSingle(i, infB)) {
 					infB.close(0);

Modified: trunk/src/CacheWolf/Preferences.java
===================================================================
--- trunk/src/CacheWolf/Preferences.java	2011-09-10 14:56:23 UTC (rev 3079)
+++ trunk/src/CacheWolf/Preferences.java	2011-09-11 22:27:56 UTC (rev 3080)
@@ -90,7 +90,7 @@
 
 	/**
 	 * Singleton pattern - return reference to Preferences
-	 * 
+	 *
 	 * @return Singleton Preferences object
 	 */
 	public static Preferences getPrefObject() {
@@ -108,7 +108,7 @@
 	 * Call this method to set the path of the config file <br>
 	 * If you call it with null it defaults to [program-dir]/pref.xml if p is a directory "pref.xml" will automatically
 	 * appended
-	 * 
+	 *
 	 * @param p
 	 */
 	public void setPathToConfigFile(String p) {
@@ -283,8 +283,7 @@
 	 * The currently used centre point, can be different from the profile's centrepoint. This is used for spidering
 	 */
 	private CWPoint curCentrePt = new CWPoint();
-	/** True if a login screen is displayed on each spider operation */
-	public boolean forceLogin = true;
+	public boolean switchGCLanguageToEnglish = false;
 	/** True if the goto panel is North centered */
 	public boolean northCenteredGoto = true;
 	/** If not null, a customs map path has been specified by the user */
@@ -362,11 +361,11 @@
 	// ////////////////////////////////////////////
 	/**
 	 * The debug switch (Can be used to activate dormant code) by adding the line:
-	 * 
+	 *
 	 * <pre>
 	 * &lt;debug value=&quot;true&quot; /&gt;
 	 * </pre>
-	 * 
+	 *
 	 * to the pref.xml file.
 	 */
 	public boolean debug = false;
@@ -422,7 +421,7 @@
 
 	/**
 	 * Tries to find a executable browser return "" if no browser found
-	 * 
+	 *
 	 * @return
 	 */
 	private String getDefaultBrowser() {
@@ -609,7 +608,6 @@
 			northCenteredGoto = Boolean.valueOf(atts.getValue("northcentered")).booleanValue();
 		} else if (name.equals("spider")) {
 			doNotGetFound = !Boolean.valueOf(atts.getValue("getFinds")).booleanValue();
-			forceLogin = Boolean.valueOf(atts.getValue("forcelogin")).booleanValue();
 			checkLog = Boolean.valueOf(atts.getValue("checkLog")).booleanValue();
 			tmp = atts.getValue("checkTBs");
 			if (tmp != null)
@@ -861,7 +859,6 @@
 			outp.print("    <opencaching lastSite=\"" + lastOCSite + "\" downloadMissing=\"" + SafeXML.strxmlencode(downloadAllOC) + "\" />\n");
 			outp.print("    <location lat=\"" + SafeXML.clean(curCentrePt.getLatDeg(TransformCoordinates.DD)) + "\" long=\"" + SafeXML.clean(curCentrePt.getLonDeg(TransformCoordinates.DD)) + "\" />\n");
 			outp.print("    <spider" //
-					+ " forcelogin=\"" + SafeXML.strxmlencode(forceLogin) + "\"" //
 					+ " spiderUpdates=\"" + SafeXML.strxmlencode(spiderUpdates) + "\"" //
 					+ " checkLog=\"" + SafeXML.strxmlencode(checkLog) + "\"" //
 					+ " checkTBs=\"" + SafeXML.strxmlencode(checkTBs) + "\"" //
@@ -926,7 +923,7 @@
 
 	/**
 	 * custom = set by the user
-	 * 
+	 *
 	 * @return custom Maps Path, null if not set
 	 */
 	public String getCustomMapsPath() {
@@ -983,8 +980,8 @@
 	 * gets the path to the calibrated maps it first tries if there are manually imported maps in
 	 * <baseDir>/maps/standard then it tries the legacy dir: <program-dir>/maps In case in both locations are no
 	 * .wfl-files it returns <baseDir>/maps/expedia - the place where the automatically downloaded maps are placed.
-	 * 
-	 * 
+	 *
+	 *
 	 */
 	public String getMapLoadPath() {
 		saveCustomMapsPath(getMapLoadPathInternal());
@@ -1100,7 +1097,7 @@
 	/**
 	 * tries to get the home data dir of the user e.g. "c:\documents and...\<user>\my documents" or "/home/<user>" in
 	 * linux if none could be identified, "/" is returned.
-	 * 
+	 *
 	 * @return
 	 */
 	public String getHomeDir() {
@@ -1139,7 +1136,7 @@
 
 	/**
 	 * Open Profile selector screen
-	 * 
+	 *
 	 * @param prof
 	 * @param showProfileSelector
 	 * @return True if a profile was selected
@@ -1266,13 +1263,13 @@
 	/**
 	 * Method to log messages to a file called log.txt It will always append to an existing file. To show the message on
 	 * the console, the global variable debug must be set. This can be done by adding
-	 * 
+	 *
 	 * <pre>
 	 * &lt;debug value=&quot;true&quot;&gt;
 	 * </pre>
-	 * 
+	 *
 	 * to the pref.xml file
-	 * 
+	 *
 	 * @param text
 	 *            to log
 	 */
@@ -1305,7 +1302,7 @@
 
 	/**
 	 * Log an exception to the log file with or without a stack trace
-	 * 
+	 *
 	 * @param text
 	 *            Optional message (Can be empty string)
 	 * @param e
@@ -1314,11 +1311,11 @@
 	 *            If true and the debug switch is true, the stack trace is appended to the log The debug switch can be
 	 *            set by including the line <i>&lt;debug value="true"&gt;&lt;/debug&gt;</i> in the pref.xml file or by
 	 *            manually setting it (i.e. in BE versions or RC versions) by including the line
-	 * 
+	 *
 	 *            <pre>
 	 * Global.getPref().debug = true;
 	 * </pre>
-	 * 
+	 *
 	 *            in Version.getRelease()
 	 */
 	public void log(String text, Throwable e, boolean withStackTrace) {
@@ -1337,7 +1334,7 @@
 	/**
 	 * Log an exception to the log file without a stack trace, i.e. where a stack trace is not needed because the
 	 * location/cause of the error is clear
-	 * 
+	 *
 	 * @param message
 	 *            Optional message (Can be empty string)
 	 * @param e
@@ -1390,7 +1387,7 @@
 	/**
 	 * <code>True</code> or <code>false</code>, depending if a filter with the given ID is saved in the
 	 * preferences.
-	 * 
+	 *
 	 * @param filterID
 	 *            ID of the filter to check
 	 * @return True or false
@@ -1402,7 +1399,7 @@
 	/**
 	 * Returns the FilterData object saved with the given ID. The ID is not saved in the object, so it may be resaved
 	 * under another ID.
-	 * 
+	 *
 	 * @param filterID
 	 *            ID of the FilterData object
 	 * @return FilterData object
@@ -1414,7 +1411,7 @@
 	/**
 	 * Adds a FilterData object to the list. If a FilterData object is already saved unter the given ID, the old object
 	 * is removed and the new one is set at its place.
-	 * 
+	 *
 	 * @param filterID
 	 *            ID to associate with the filter object
 	 * @param filter
@@ -1427,7 +1424,7 @@
 	/**
 	 * Removed the FilterData object which is saved with the given ID. If no such FilterData object exists, nothing
 	 * happens.
-	 * 
+	 *
 	 * @param filterID
 	 *            ID of FilterData object to remove
 	 */
@@ -1437,7 +1434,7 @@
 
 	/**
 	 * Returns a alphabetically sorted array of ID of saved FilterData objects.
-	 * 
+	 *
 	 * @return Array of IDs
 	 */
 	public String[] getFilterIDs() {
@@ -1502,6 +1499,7 @@
 		if (oldLanguageCtl.length() != 0)
 			try {
 				UrlFetcher.fetch(oldLanguageCtl);
+				switchGCLanguageToEnglish=true;
 			} catch (IOException e) {
 				// dann halt nicht
 			}

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-10 14:56:23 UTC (rev 3079)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-11 22:27:56 UTC (rev 3080)
@@ -530,7 +530,7 @@
 				ch.initStates(false);
 		}
 
-		// halbe Seitenl?nge eines Quadrats ums Zentrum in km
+		// halbe Seitenl??nge eines Quadrats ums Zentrum in km
 		double halfSideLength = maxDistance;
 		if (pref.metricSystem == Metrics.IMPERIAL) {
 			halfSideLength = Metrics.convertUnit(maxDistance, Metrics.MILES, Metrics.KILOMETER);
@@ -991,7 +991,7 @@
 				break;
 			final CacheHolder ch = (CacheHolder) e.nextElement();
 			infB.setInfo(MyLocale.getMsg(5513, "Loading: ") + ch.getWayPoint() + " (" + (cachesToLoad.size() + j) + " / " + totalCachesToLoad + ")");
-			final int test = spiderSingle(cacheDB.getIndex(ch), infB, false, loadAllLogs);
+			final int test = spiderSingle(cacheDB.getIndex(ch), infB, loadAllLogs);
 			if (test == SPIDER_CANCEL) {
 				break;
 			} else {
@@ -1012,7 +1012,7 @@
 	 * @return 1 if spider was successful, -1 if spider was cancelled by closing the infobox, 0 error, but continue with
 	 *         next cache
 	 */
-	public int spiderSingle(int number, InfoBox pInfB, boolean forceLogin, boolean loadAllLogs) {
+	public int spiderSingle(int number, InfoBox pInfB, boolean loadAllLogs) {
 		int ret = -1;
 		this.infB = pInfB;
 		final CacheHolder ch = new CacheHolder(); // cacheDB.get(number);
@@ -1092,10 +1092,10 @@
 	 */
 	private boolean login() {
 
-		if (loggedIn && !pref.forceLogin) {
+		if (loggedIn && !pref.switchGCLanguageToEnglish) {
 			return true;
 		}
-		
+
 		if (pref.userID.length() > 0) {
 			UrlFetcher.setPermanentRequestorProperty("Cookie", null);
 			loggedIn = switchToEnglish();
@@ -1233,7 +1233,7 @@
 				return 3;
 			}
 		}
-		
+
 		if (loginPage.indexOf(loginSuccess) > 0) {
 			pref.log("Login successful: " + pref.myAlias);
 			// **3 now we are logged in and get the Cookie (there are two)
@@ -1269,7 +1269,7 @@
 			pref.log("Login failed. Wrong Account or Password? " + pref.myAlias, null);
 			return 2;
 		}
-		
+
 		if (!this.switchToEnglish())
 			return 0;
 
@@ -1323,25 +1323,19 @@
 		ext.set(ext.findNext(), ">", "<", 0, true);
 		String oldLanguage = ext.findNext();
 		if (oldLanguage.equals("English")) {
+			pref.switchGCLanguageToEnglish=false;
 			pref.log("already English");
-			pref.oldLanguageCtl = ""; // nothing to reset
 			return true;
 		}
 		// switch to english now goes into gc account Display Preferences
 		// (is permanent, must be reset)
-		// todo as long as Textfile Encoding is CP1252 we compare with
-		// substring(1) and think koreanisch if no merge at all
-		String languages[] = { "English", "Deutsch", "Fran?ais", "Portugu?s", "Ce?tina", "Svenska", "Nederlands", "Catal?", "Polski", "Eesti", "Norsk, Bokm?l", "???", "Espa?ol" };
+		String languages[] = { "English", "Deutsch", "Fran&#231;ais", "Portugu&#234;s", "??e??tina", "Svenska", "Nederlands", "Catal&#224;", "Polski", "Eesti", "Norsk, Bokm&#229;l", "?????????", "Espa&#241;ol", "Magyar" };
 		for (int i = 0; i < languages.length; i++) {
-			if (oldLanguage.substring(1).equals(languages[i].substring(1))) {
+			if (oldLanguage.equals(languages[i])) {
 				pref.oldLanguageCtl = url + "?__EVENTTARGET=" + UrlFetcher.encodeURL("ctl00$uxLocaleList$uxLocaleList$ctl" + MyLocale.formatLong(i, "00") + "$uxLocaleItem", false);
 				break;
 			}
 		}
-		if (pref.oldLanguageCtl.length() == 0) {
-			// koreanisch
-			pref.oldLanguageCtl = url + "?__EVENTTARGET=" + UrlFetcher.encodeURL("ctl00$uxLocaleList$uxLocaleList$ctl" + "11" + "$uxLocaleItem", false);
-		}
 		final String strEnglishPage = "ctl00$uxLocaleList$uxLocaleList$ctl00$uxLocaleItem";
 		url += "?__EVENTTARGET=" + UrlFetcher.encodeURL(strEnglishPage, false);
 		try {
@@ -1541,7 +1535,7 @@
 				ch.initStates(false);
 		}
 
-		// halbe Seitenl?nge eines Quadrats ums Zentrum in km
+		// halbe Seitenl??nge eines Quadrats ums Zentrum in km
 		double halfSideLength = maxDistance;
 		if (pref.metricSystem == Metrics.IMPERIAL) {
 			halfSideLength = Metrics.convertUnit(maxDistance, Metrics.MILES, Metrics.KILOMETER);
@@ -1909,8 +1903,8 @@
 			if (ret.indexOf("ere") > -1)
 				return distanceAndDirection; // zur Zeit " Here -1"
 			// Versuch den DistanceCodeKey automatisch zu bestimmen
-			// da dieser von gc mal wieder ge????ndert wurde.
-			// todo Ben?tigt ev noch weitere Anpassungen: | am Anfang, and calc of keylength
+			// da dieser von gc mal wieder ge??ndert wurde.
+			// todo Ben??tigt ev noch weitere Anpassungen: | am Anfang, and calc of keylength
 			// String thereitis="|0.34 km|102.698";
 			// String page =
 			// fetchText("http://www.geocaching.com/seek/nearest.aspx?lat=48.48973&lng=009.26313&dist=2&f=1",false);
@@ -1942,7 +1936,7 @@
 			final String coded = ewe.net.URL.decodeURL(RexPropDistanceCode.stringMatched(1));
 			final String newkey = decodeXor(coded, thereitis);
 			final int keylength = 13;
-			// wenn nicht 13 dann newkey auf wiederholung pr????fen
+			// wenn nicht 13 dann newkey auf wiederholung pr??fen
 			DistanceCodeKey = newkey.substring(0, keylength);
 			ret = decodeXor(stmp, DistanceCodeKey).replace('|', ' ');
 			pref.log("Automatic key: " + DistanceCodeKey + " result: " + ret + Preferences.NEWLINE);



From apreisser at mail.berlios.de  Tue Sep 13 07:52:16 2011
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Tue, 13 Sep 2011 07:52:16 PM +0200
Subject: [Cachewolf-svn] r3081 - trunk/src/CacheWolf/view/pda
Message-ID: <20110913175217.310EF48125B@sheep.berlios.de>

Author: apreisser
Date: 2011-09-13 19:52:16 +0200 (Tue, 13 Sep 2011)
New Revision: 3081

Added:
   trunk/src/CacheWolf/view/pda/PDATravelbugScreen.java
Removed:
   trunk/src/CacheWolf/view/pda/PDATravelbugScreen.java
Log:
Unused Code eliminated.

Deleted: trunk/src/CacheWolf/view/pda/PDATravelbugScreen.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDATravelbugScreen.java	2011-09-11 22:27:56 UTC (rev 3080)
+++ trunk/src/CacheWolf/view/pda/PDATravelbugScreen.java	2011-09-13 17:52:16 UTC (rev 3081)
@@ -1,68 +0,0 @@
-package CacheWolf.view.pda;
-
-import CacheWolf.MyLocale;
-import CacheWolf.Travelbug;
-import CacheWolf.TravelbugList;
-import CacheWolf.model.DefaultListModel;
-import CacheWolf.view.ITravelbugScreen;
-import ewe.ui.ControlEvent;
-
-public class PDATravelbugScreen extends PDAList implements ITravelbugScreen{
-
-	/** The index into the list of travelbugs indicating the selected bug */
-	public int selectedItem=-1;
-	
-	/**
-	 * A screen to choose a travelbug from a list of bugs
-	 * @param tbl The list of travelbugs from which to choose
-	 * @param title The title of the screen
-	 * @param allowNew True if a travelbug not on the list can be selected
-	 */
-	public PDATravelbugScreen(TravelbugList tbl, String title, boolean allowNew) {
-		super();
-		model = new DefaultListModel();
-		for (int i=0;i < tbl.size();i++){
-			Travelbug tb = tbl.getTB(i);
-			model.add(tb.getName());
-		}
-		if (allowNew){
-			model.add(MyLocale.getMsg(6015,"*** OTHER ***"));
-		}
-		model.createShowSet();
-		setupTBButtons();
-}
-
-	public void onControlEvent(ControlEvent ev) {
-		if (ev instanceof ControlEvent) {
-			switch (ev.type) {
-			case ControlEvent.PRESSED:
-				if (ev.action.equals(NEXT_PAGE) ||(ev.action.equals(PREV_PAGE))) {
-					super.onControlEvent(ev);	
-				} else if (ev.action.startsWith(LINE)) {
-					selectedItem = ev.action.charAt(LINE.length()) - '0';
-//					Object clickedItem =  model.get(line + firstLine);
-//					Form form = new PDATravelbugDetailPanel(tbJourney, this);
-//					form.setPreferredSize(800, 600);
-//					form.execute();
-//					setupTBButtons();
-					exit(0);
-				} else if (ev.action.equals(MENUE)) {
-//					Form form = new PDATravelbugMenuPanel(this);
-//					form.setPreferredSize(800, 600);
-//					int execute = form.execute();
-//					if (execute == 1){
-//						exit(0);
-//					}
-					setupTBButtons();
-				}
-				break;
-			default:
-				super.onControlEvent(ev);
-			}
-		}
-	}
-
-	public int getSelectedItem() {
-		return selectedItem;
-	}
-}

Added: trunk/src/CacheWolf/view/pda/PDATravelbugScreen.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDATravelbugScreen.java	                        (rev 0)
+++ trunk/src/CacheWolf/view/pda/PDATravelbugScreen.java	2011-09-13 17:52:16 UTC (rev 3081)
@@ -0,0 +1,61 @@
+package CacheWolf.view.pda;
+
+import CacheWolf.MyLocale;
+import CacheWolf.Travelbug;
+import CacheWolf.TravelbugList;
+import CacheWolf.model.DefaultListModel;
+import CacheWolf.view.ITravelbugScreen;
+import ewe.ui.ControlEvent;
+
+public class PDATravelbugScreen extends PDAList implements ITravelbugScreen{
+
+	/** The index into the list of travelbugs indicating the selected bug */
+	public int selectedItem=-1;
+	
+	/**
+	 * A screen to choose a travelbug from a list of bugs
+	 * @param tbl The list of travelbugs from which to choose
+	 * @param title The title of the screen
+	 * @param allowNew True if a travelbug not on the list can be selected
+	 */
+	public PDATravelbugScreen(TravelbugList tbl, String title, boolean allowNew) {
+		super();
+		model = new DefaultListModel();
+		for (int i = 0; i < tbl.size(); i++) {
+			Travelbug tb = tbl.getTB(i);
+			model.add(tb.getName());
+		}
+		if (allowNew) {
+			model.add(MyLocale.getMsg(6015, "*** OTHER ***"));
+		}
+		model.createShowSet();
+		setupTBButtons();
+	}
+
+	protected PDAListButton createListButton(int i) {
+		return new PDAListButton("", LINE + i);
+	}
+
+	public void onControlEvent(ControlEvent ev) {
+		if (ev instanceof ControlEvent) {
+			switch (ev.type) {
+			case ControlEvent.PRESSED:
+				if (ev.action.equals(NEXT_PAGE) ||(ev.action.equals(PREV_PAGE))) {
+					super.onControlEvent(ev);	
+				} else if (ev.action.startsWith(LINE)) {
+					selectedItem = ev.action.charAt(LINE.length()) - '0';
+					exit(0);
+				} else if (ev.action.equals(MENUE)) {
+					setupTBButtons();
+				}
+				break;
+			default:
+				super.onControlEvent(ev);
+			}
+		}
+	}
+
+	public int getSelectedItem() {
+		return selectedItem;
+	}
+}


Property changes on: trunk/src/CacheWolf/view/pda/PDATravelbugScreen.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain



From araber95 at mail.berlios.de  Tue Sep 13 08:28:07 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Tue, 13 Sep 2011 08:28:07 PM +0200
Subject: [Cachewolf-svn] r3082 - in trunk: . src/CacheWolf src/CacheWolf/exp
	src/CacheWolf/imp src/CacheWolf/model src/CacheWolf/navi
	src/CacheWolf/navi/touchControls src/CacheWolf/utils
	src/CacheWolf/view src/CacheWolf/view/ewe src/CacheWolf/view/pda
Message-ID: <20110913182808.6C11C48125B@sheep.berlios.de>

Author: araber95
Date: 2011-09-13 20:28:07 +0200 (Tue, 13 Sep 2011)
New Revision: 3082

Modified:
   trunk/CacheWolf.launch
   trunk/src/CacheWolf/Attribute.java
   trunk/src/CacheWolf/Attributes.java
   trunk/src/CacheWolf/AttributesSelector.java
   trunk/src/CacheWolf/AttributesViewer.java
   trunk/src/CacheWolf/CWPoint.java
   trunk/src/CacheWolf/CWProgressBar.java
   trunk/src/CacheWolf/CacheDB.java
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/CacheHolderDetail.java
   trunk/src/CacheWolf/CacheImages.java
   trunk/src/CacheWolf/CacheList.java
   trunk/src/CacheWolf/CacheSize.java
   trunk/src/CacheWolf/CacheTerrDiff.java
   trunk/src/CacheWolf/CacheType.java
   trunk/src/CacheWolf/CacheWolf.java
   trunk/src/CacheWolf/CalcPanel.java
   trunk/src/CacheWolf/Common.java
   trunk/src/CacheWolf/CoordsScreen.java
   trunk/src/CacheWolf/DBStats.java
   trunk/src/CacheWolf/DataMover.java
   trunk/src/CacheWolf/DataMoverForm.java
   trunk/src/CacheWolf/DateFormat.java
   trunk/src/CacheWolf/DateTimeChooser.java
   trunk/src/CacheWolf/DescriptionPanel.java
   trunk/src/CacheWolf/DetailsPanel.java
   trunk/src/CacheWolf/Extractor.java
   trunk/src/CacheWolf/Filter.java
   trunk/src/CacheWolf/FilterData.java
   trunk/src/CacheWolf/FilterScreen.java
   trunk/src/CacheWolf/GPSPortOptions.java
   trunk/src/CacheWolf/GeoCodeGui.java
   trunk/src/CacheWolf/GeocoderOsm.java
   trunk/src/CacheWolf/Global.java
   trunk/src/CacheWolf/GuiImageBroker.java
   trunk/src/CacheWolf/HintLogPanel.java
   trunk/src/CacheWolf/HttpConnection.java
   trunk/src/CacheWolf/ImageDetailForm.java
   trunk/src/CacheWolf/ImageInfo.java
   trunk/src/CacheWolf/ImageInteractivePanel.java
   trunk/src/CacheWolf/ImagePanel.java
   trunk/src/CacheWolf/ImagePanelImage.java
   trunk/src/CacheWolf/InfoBox.java
   trunk/src/CacheWolf/InfoScreen.java
   trunk/src/CacheWolf/InputScreen.java
   trunk/src/CacheWolf/Log.java
   trunk/src/CacheWolf/LogList.java
   trunk/src/CacheWolf/MainForm.java
   trunk/src/CacheWolf/MainMenu.java
   trunk/src/CacheWolf/MainTab.java
   trunk/src/CacheWolf/Matrix.java
   trunk/src/CacheWolf/MyComparer.java
   trunk/src/CacheWolf/MyEditor.java
   trunk/src/CacheWolf/MyLocale.java
   trunk/src/CacheWolf/MyScrollBarPanel.java
   trunk/src/CacheWolf/NewProfileForm.java
   trunk/src/CacheWolf/NewProfileWizard.java
   trunk/src/CacheWolf/NotesScreen.java
   trunk/src/CacheWolf/OC.java
   trunk/src/CacheWolf/ParseLatLon.java
   trunk/src/CacheWolf/Parser.java
   trunk/src/CacheWolf/Preferences.java
   trunk/src/CacheWolf/PreferencesScreen.java
   trunk/src/CacheWolf/Profile.java
   trunk/src/CacheWolf/ProfileDataForm.java
   trunk/src/CacheWolf/ProfilesForm.java
   trunk/src/CacheWolf/RadarPanel.java
   trunk/src/CacheWolf/RadarPanelImage.java
   trunk/src/CacheWolf/Rebuild.java
   trunk/src/CacheWolf/Reducer.java
   trunk/src/CacheWolf/STRreplace.java
   trunk/src/CacheWolf/SafeXML.java
   trunk/src/CacheWolf/SearchBox.java
   trunk/src/CacheWolf/SearchCache.java
   trunk/src/CacheWolf/ShowCacheInBrowser.java
   trunk/src/CacheWolf/SolverPanel.java
   trunk/src/CacheWolf/StatusBar.java
   trunk/src/CacheWolf/TableColumnChooser.java
   trunk/src/CacheWolf/TableForm.java
   trunk/src/CacheWolf/TablePanel.java
   trunk/src/CacheWolf/Test.java
   trunk/src/CacheWolf/TokenObj.java
   trunk/src/CacheWolf/Tokenizer.java
   trunk/src/CacheWolf/Travelbug.java
   trunk/src/CacheWolf/TravelbugJourney.java
   trunk/src/CacheWolf/TravelbugJourneyList.java
   trunk/src/CacheWolf/TravelbugJourneyScreen.java
   trunk/src/CacheWolf/TravelbugList.java
   trunk/src/CacheWolf/TravelbugPickup.java
   trunk/src/CacheWolf/TravelbugScreen.java
   trunk/src/CacheWolf/UrlFetcher.java
   trunk/src/CacheWolf/Version.java
   trunk/src/CacheWolf/exp/ASCExporter.java
   trunk/src/CacheWolf/exp/DistanceComparer.java
   trunk/src/CacheWolf/exp/ExploristExporter.java
   trunk/src/CacheWolf/exp/Exporter.java
   trunk/src/CacheWolf/exp/GarminMap.java
   trunk/src/CacheWolf/exp/GpxExportNg.java
   trunk/src/CacheWolf/exp/HTMLExporter.java
   trunk/src/CacheWolf/exp/KMLExporter.java
   trunk/src/CacheWolf/exp/LocExporter.java
   trunk/src/CacheWolf/exp/MSARCSVExporter.java
   trunk/src/CacheWolf/exp/OCLogExport.java
   trunk/src/CacheWolf/exp/OVLExporter.java
   trunk/src/CacheWolf/exp/OziExporter.java
   trunk/src/CacheWolf/exp/SpoilerPOIExporter.java
   trunk/src/CacheWolf/exp/SpoilerPOIExporterScreen.java
   trunk/src/CacheWolf/exp/TPLExporter.java
   trunk/src/CacheWolf/exp/TomTomExporter.java
   trunk/src/CacheWolf/exp/TomTomExporterScreen.java
   trunk/src/CacheWolf/imp/FieldnotesImporter.java
   trunk/src/CacheWolf/imp/GCVoteImporter.java
   trunk/src/CacheWolf/imp/GPXImporter.java
   trunk/src/CacheWolf/imp/KMLImporter.java
   trunk/src/CacheWolf/imp/LOCXMLImporter.java
   trunk/src/CacheWolf/imp/OCGPXfetch.java
   trunk/src/CacheWolf/imp/OCLinkImporter.java
   trunk/src/CacheWolf/imp/OCXMLImporter.java
   trunk/src/CacheWolf/imp/OCXMLImporterScreen.java
   trunk/src/CacheWolf/imp/SpiderGC.java
   trunk/src/CacheWolf/model/DefaultListModel.java
   trunk/src/CacheWolf/model/TravelBugJourneyScreenModel.java
   trunk/src/CacheWolf/model/TravelbugScreenModel.java
   trunk/src/CacheWolf/myInteractivePanel.java
   trunk/src/CacheWolf/myTableControl.java
   trunk/src/CacheWolf/myTableModel.java
   trunk/src/CacheWolf/navi/Area.java
   trunk/src/CacheWolf/navi/AreaList.java
   trunk/src/CacheWolf/navi/CWGPSPoint.java
   trunk/src/CacheWolf/navi/Ellipsoid.java
   trunk/src/CacheWolf/navi/GeodeticCalculator.java
   trunk/src/CacheWolf/navi/GkProjection.java
   trunk/src/CacheWolf/navi/GotoPanel.java
   trunk/src/CacheWolf/navi/LambertProjection.java
   trunk/src/CacheWolf/navi/MapImage.java
   trunk/src/CacheWolf/navi/MapImporter.java
   trunk/src/CacheWolf/navi/MapInfoObject.java
   trunk/src/CacheWolf/navi/MapLoader.java
   trunk/src/CacheWolf/navi/MapLoaderGui.java
   trunk/src/CacheWolf/navi/MapSymbol.java
   trunk/src/CacheWolf/navi/MapsList.java
   trunk/src/CacheWolf/navi/Metrics.java
   trunk/src/CacheWolf/navi/MovingMap.java
   trunk/src/CacheWolf/navi/MovingMapCache.java
   trunk/src/CacheWolf/navi/Navigate.java
   trunk/src/CacheWolf/navi/ProjectedPoint.java
   trunk/src/CacheWolf/navi/Projection.java
   trunk/src/CacheWolf/navi/SelectMap.java
   trunk/src/CacheWolf/navi/SkyOrientation.java
   trunk/src/CacheWolf/navi/Track.java
   trunk/src/CacheWolf/navi/TrackOverlay.java
   trunk/src/CacheWolf/navi/TrackPoint.java
   trunk/src/CacheWolf/navi/TransformCoordinates.java
   trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java
   trunk/src/CacheWolf/navi/UTMProjection.java
   trunk/src/CacheWolf/navi/touchControls/AniImageGrayScaled.java
   trunk/src/CacheWolf/navi/touchControls/ICommandListener.java
   trunk/src/CacheWolf/navi/touchControls/ImageWithText.java
   trunk/src/CacheWolf/navi/touchControls/MovingMapControlItem.java
   trunk/src/CacheWolf/navi/touchControls/MovingMapControlItemButton.java
   trunk/src/CacheWolf/navi/touchControls/MovingMapControlItemText.java
   trunk/src/CacheWolf/navi/touchControls/MovingMapControlSettings.java
   trunk/src/CacheWolf/navi/touchControls/MovingMapControls.java
   trunk/src/CacheWolf/utils/CWPartialInputStream.java
   trunk/src/CacheWolf/utils/CWWrapper.java
   trunk/src/CacheWolf/utils/FileBugfix.java
   trunk/src/CacheWolf/utils/MessageBoxFixed.java
   trunk/src/CacheWolf/utils/MutableInteger.java
   trunk/src/CacheWolf/utils/URLUTF8Encoder.java
   trunk/src/CacheWolf/view/ITravelbugScreen.java
   trunk/src/CacheWolf/view/TravelBugScreenFactory.java
   trunk/src/CacheWolf/view/TravelbugJourneyScreenFactory.java
   trunk/src/CacheWolf/view/ewe/TravelbugJourneyScreen.java
   trunk/src/CacheWolf/view/ewe/TravelbugMenu.java
   trunk/src/CacheWolf/view/pda/PDADateTimeChooser.java
   trunk/src/CacheWolf/view/pda/PDAEmptyButton.java
   trunk/src/CacheWolf/view/pda/PDAList.java
   trunk/src/CacheWolf/view/pda/PDAListButton.java
   trunk/src/CacheWolf/view/pda/PDAListButtonObject.java
   trunk/src/CacheWolf/view/pda/PDAMenu.java
   trunk/src/CacheWolf/view/pda/PDAMenuButton.java
   trunk/src/CacheWolf/view/pda/PDAMenuButtonObject.java
   trunk/src/CacheWolf/view/pda/PDAOptionPane.java
   trunk/src/CacheWolf/view/pda/PDATravelbugDetailMenu.java
   trunk/src/CacheWolf/view/pda/PDATravelbugDetailPanel.java
   trunk/src/CacheWolf/view/pda/PDATravelbugJourneyScreen.java
   trunk/src/CacheWolf/view/pda/PDATravelbugMenuPanel.java
   trunk/src/CacheWolf/view/pda/PDATravelbugScreen.java
   trunk/src/CacheWolf/view/pda/PDATravelbugSortMenu.java
Log:
sources to UTF-8

Modified: trunk/CacheWolf.launch
===================================================================
--- trunk/CacheWolf.launch	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/CacheWolf.launch	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+???<?xml version="1.0" encoding="UTF-8"?>
 <launchConfiguration type="org.eclipse.jdt.launching.localJavaApplication">
 <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
 <listEntry value="/CacheWolf"/>
@@ -6,6 +6,7 @@
 <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
 <listEntry value="4"/>
 </listAttribute>
+<booleanAttribute key="org.eclipse.debug.core.appendEnvironmentVariables" value="true"/>
 <listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
 <listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#13;&#10;&lt;runtimeClasspathEntry path=&quot;3&quot; projectName=&quot;CacheWolf&quot; type=&quot;1&quot;/&gt;&#13;&#10;"/>
 <listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#13;&#10;&lt;runtimeClasspathEntry internalArchive=&quot;/CacheWolf/lib/JavaEwe.zip&quot; path=&quot;3&quot; type=&quot;2&quot;/&gt;&#13;&#10;"/>

Modified: trunk/src/CacheWolf/Attribute.java
===================================================================
--- trunk/src/CacheWolf/Attribute.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/Attribute.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -275,14 +275,14 @@
 			{ "25", "2552", "poisonoak", "16", "17", "Poison plants" },// 52 Giftige Pflanzen
 			{ "26", "2554", "public", "19", "26", "Public transportation" },// 54 public transit available
 			{ "27", "2556", "quads", "0", "34", "Quads" },// 56 quads allowed
-			{ "28", "2558", "rappelling", "49", "3", "Climbing gear" },// 58 climbing gear Kletterausr?stung
+			{ "28", "2558", "rappelling", "49", "3", "Climbing gear" },// 58 climbing gear Kletterausr??stung
 			{ "29", "2560", "restrooms", "21", "28", "Public restrooms nearby" },// 60 restrooms available
 			{ "30", "2562", "scenic", "0", "8", "Scenic view" },// 62 scenic view
-			{ "31", "2564", "scuba", "51", "5", "Scuba gear" },// 64 Tauchausr?stung
+			{ "31", "2564", "scuba", "51", "5", "Scuba gear" },// 64 Tauchausr??stung
 			// {"32","2566","snakes","0","18","Snakes"},//66 araber95 replaced by Dangerous Animals 14.08.10
 			{ "32", "2566", "dangerousanimals", "0", "18", "Dangerous Animals" },// 66
 			{ "33", "2568", "snowmobiles", "0", "36", "Snowmobiles" },// 68
-			{ "34", "2570", "stealth", "0", "40", "Stealth required" },// 70 stealth required (Heimlich,List,Schl?ue)
+			{ "34", "2570", "stealth", "0", "40", "Stealth required" },// 70 stealth required (Heimlich,List,Schl??ue)
 			{ "35", "2572", "stroller", "0", "41", "Stroller accessible" },// 72 stroller accessible
 			{ "36", "2574", "swimming", "29", "12", "May require swimming" },// 74
 			{ "37", "2576", "thorn", "13", "39", "Thorns" },// 76 thorns!
@@ -311,13 +311,13 @@
 			{ "60", "2622", "othercache", "57", "157", "Other cache type" }, // OC special
 			{ "61", "2624", "overnight", "37", "137", "Overnight stay necessary" }, // OC special
 			{ "62", "2644", "train", "10", "110", "Active railway nearby" }, // OC special
-			{ "63", "2630", "riddle", "55", "0", "" },// 130 R?tsel
+			{ "63", "2630", "riddle", "55", "0", "" },// 130 R??tsel
 			{ "64", "2646", "webcam", "32", "132", "Webcam" }, // OC special
 			{ "65", "2634", "steep", "27", "127", "Hilly area" }, // OC special
 			{ "66", "2636", "submerged", "34", "134", "In the water" }, // OC special
 			{ "67", "2638", "tide", "41", "141", "Tide" }, // OC special
 			{ "68", "2640", "time", "39", "139", "Only available at specified times" }, // OC special
-			{ "69", "2642", "tools", "46", "0", "Special Tool required" },// 142 Spezielle Ausr?stung
+			{ "69", "2642", "tools", "46", "0", "Special Tool required" },// 142 Spezielle Ausr??stung
 			{ "70", "2648", "wiki", "54", "154", "Investigation" }, // OC special
 			{ "71", "2650", "wwwlink", "7", "107", "Hyperlink to another caching portal only" }, // OC special
 			{ "72", "2652", "landf", "0", "45", "Lost And Found Tour" }, // thx to Kappler and MiK

Modified: trunk/src/CacheWolf/Attributes.java
===================================================================
--- trunk/src/CacheWolf/Attributes.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/Attributes.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -65,8 +65,7 @@
 	}
 
 	/**
-	 * Filling the Attributes from Cache.xml (CacheHolderDetail)
-	 * todo : remove this "historic" reprensentation , saving as Bits should be enough (araber95)
+	 * Filling the Attributes from Cache.xml (CacheHolderDetail) todo : remove this "historic" reprensentation , saving as Bits should be enough (araber95)
 	 */
 	public void XmlAttributesEnd(String elem) {
 		clear();
@@ -78,8 +77,7 @@
 	}
 
 	/**
-	 * Prepare for attributes to be written to cache.xml file
-	 * todo : remove this "historic" reprensentation , saving as Bits should be enough (araber95)
+	 * Prepare for attributes to be written to cache.xml file todo : remove this "historic" reprensentation , saving as Bits should be enough (araber95)
 	 */
 	public String XmlAttributesWrite() {
 		StringBuffer sb = new StringBuffer(1000);
@@ -113,9 +111,9 @@
 	 * Add a new attribute to the array by ID and Inc as you get it from GC gpx-File
 	 * 
 	 * @param GC
-	 *            attribute ID
+	 *          attribute ID
 	 * @param GC
-	 *            attribute Inc (attribute set = 0 ,attribute not set = 1)
+	 *          attribute Inc (attribute set = 0 ,attribute not set = 1)
 	 */
 	public void add(int attIdGC, String Yes1No0) {
 		if (_count < attribs.length) {
@@ -144,7 +142,7 @@
 	 * Add a new attribute to the array by OC-IDas you get it from OC xml/zip-download
 	 * 
 	 * @param OC
-	 *            attribute ID
+	 *          attribute ID
 	 */
 	public void add(int attIdOC) {
 		Attribute attr = new Attribute(attIdOC);
@@ -177,7 +175,7 @@
 	 * Get the i-th attribute
 	 * 
 	 * @param i
-	 *            The number for which the attribute is to be retrieved
+	 *          The number for which the attribute is to be retrieved
 	 * @return The attribute
 	 */
 	public Attribute getAttribute(int i) {

Modified: trunk/src/CacheWolf/AttributesSelector.java
===================================================================
--- trunk/src/CacheWolf/AttributesSelector.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/AttributesSelector.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/AttributesViewer.java
===================================================================
--- trunk/src/CacheWolf/AttributesViewer.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/AttributesViewer.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/CWPoint.java
===================================================================
--- trunk/src/CacheWolf/CWPoint.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/CWPoint.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.
@@ -82,7 +82,7 @@
 	
 	/**
 	 * Create CWPoint by using coordinates in "CacheWolf" format 
-	 * @param coord  String of type N 49? 33.167 E 011? 21.608
+	 * @param coord  String of type N 49?? 33.167 E 011?? 21.608
 	 * @param format only CWPoint.CW or CWPoint.REGEX is supported
 	 */
 	public CWPoint(String coord, int format) {
@@ -115,7 +115,7 @@
 	
 	/**
 	 * set lat and lon by parsing coordinates with Regex 
-	 * @param coord  String like N 49? 33.167 E 011? 21.608
+	 * @param coord  String like N 49?? 33.167 E 011?? 21.608
 	 */
 	public CWPoint(String coord) {
 		set(coord);
@@ -148,7 +148,7 @@
 	
 	/**
 	 * set lat and lon by using coordinates in "CacheWolf" format 
-	 * @param coord  String of type N 49? 33.167 E 011? 21.608
+	 * @param coord  String of type N 49?? 33.167 E 011?? 21.608
 	 * @param format only CWPoint.CW is supported
 	 */
 	public void set (String coord, int format) {
@@ -179,7 +179,7 @@
 
 	/**
 	 * set lat and lon by parsing coordinates with regular expression 
-	 * @param coord  String of type N 49? 33.167 E 011? 21.608
+	 * @param coord  String of type N 49?? 33.167 E 011?? 21.608
 	 * 				 	or 			-12.3456 23.4567
 	 * 					or			32U 2345234 8902345
 	 */
@@ -187,10 +187,10 @@
 	//replace non-breaking-spaces by normal spaces
 	coord = coord.replace((char)0xA0, ' ');
 		/*		(?: 
-					([NSns])\s*([0-9]{1,2})[\s?]+([0-9]{1,2})(?:\s+([0-9]{1,2}))?[,.]([0-9]{1,8})\s* 
-					([EWewOo])\s*([0-9]{1,3})[\s?]+([0-9]{1,2})(?:\s+([0-9]{1,2}))?[,.]([0-9]{1,8}) 
+					([NSns])\s*([0-9]{1,2})[\s??]+([0-9]{1,2})(?:\s+([0-9]{1,2}))?[,.]([0-9]{1,8})\s* 
+					([EWewOo])\s*([0-9]{1,3})[\s??]+([0-9]{1,2})(?:\s+([0-9]{1,2}))?[,.]([0-9]{1,8}) 
 					)|(?: 
-					  ([+-NnSs]?[0-9]{1,2})[,.]([0-9]{1,8})(?:(?=\+)|(?=-)|\s+|\s*?\s*)([+-WwEeOo]?[0-9]{1,3})[,.]([0-9]{1,8})\s*[?]? 
+					  ([+-NnSs]?[0-9]{1,2})[,.]([0-9]{1,8})(?:(?=\+)|(?=-)|\s+|\s*??\s*)([+-WwEeOo]?[0-9]{1,3})[,.]([0-9]{1,8})\s*[??]? 
 					)|(?: 
 					   ([0-9]{1,2}[C-HJ-PQ-X])\s*[EeOo]?\s*([0-9]{1,7})\s+[Nn]?\s*([0-9]{1,7}) 
 					)
@@ -203,13 +203,13 @@
 		}
 	}
 				Regex rex=new Regex("(?:" +
-									"([NSns])\\s*([0-9]{1,2})(?:[?\uC2B0]\\s*|\\s+[?\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['?]\\s*|\\s+['?]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['?\"]?\\s*" +
+									"([NSns])\\s*([0-9]{1,2})(?:[??\uC2B0]\\s*|\\s+[??\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['???]\\s*|\\s+['???]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['???\"]?\\s*" +
 									"[,./_;+:-]*\\s*" + // allow N xx xx.xxx / E xxx xx.xxx
-									"([EWewOo])\\s*([0-9]{1,3})(?:[?\uC2B0]\\s*|\\s+[?\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['?]\\s*|\\s+['?]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['?\"]?" +
+									"([EWewOo])\\s*([0-9]{1,3})(?:[??\uC2B0]\\s*|\\s+[??\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['???]\\s*|\\s+['???]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['???\"]?" +
 									")|(?:" +
-                  "(?:([NnSs])\\s*(?![+-]))?"   +     "([+-]?[0-9]{1,2})[,.]([0-9]{1,8})(?:(?=[+-EeWwOo])|\\s+|\\s*[?\uC2B0]\\s*)" +
+                  "(?:([NnSs])\\s*(?![+-]))?"   +     "([+-]?[0-9]{1,2})[,.]([0-9]{1,8})(?:(?=[+-EeWwOo])|\\s+|\\s*[??\uC2B0]\\s*)" +
                   "[,./_;:]*\\s*" +
-                  "(?:([EeWwOo])\\s*(?![+-]))?"    +     "([+-]?[0-9]{1,3})[,.]([0-9]{1,8})\\s*[?\uC2B0]?" +
+                  "(?:([EeWwOo])\\s*(?![+-]))?"    +     "([+-]?[0-9]{1,3})[,.]([0-9]{1,8})\\s*[??\uC2B0]?" +
 									")|(?:" +
 									"([0-9]{1,2}[C-HJ-PQ-X])\\s*[EeOo]?\\s*([0-9]{1,7})\\s+[Nn]?\\s*([0-9]{1,7})" +
 									")|(?:" +
@@ -556,9 +556,9 @@
 
 	/**
 	 * Returns the string reprenstation of the CWPoint
-	 * Format ist CacheWolf (N 49? 33.167 E 011? 21.608), which can be used 
+	 * Format ist CacheWolf (N 49?? 33.167 E 011?? 21.608), which can be used 
 	 * with parseLatLon
-	 * @return  string like N 49? 33.167 E 011? 21.608 
+	 * @return  string like N 49?? 33.167 E 011?? 21.608 
 	 */	
 	public String toString(){
 		return toString(TransformCoordinates.CW);
@@ -572,12 +572,12 @@
 	public String toString(int format){
 		if (!isValid()) return MyLocale.getMsg(999,"not set");
 		switch (format) {
-		case TransformCoordinates.DD:	return getNSLetter() + " " + STRreplace.replace(getLatDeg(format),"-","") + "? "
-						+  getEWLetter() + " " + STRreplace.replace(getLonDeg(format),"-","")+ "?";
-		case TransformCoordinates.DMM:	return getNSLetter() + " " + getLatDeg(format) + "? " + getLatMin(format) + " "
-						+  getEWLetter() + " " + getLonDeg(format) + "? " + getLonMin(format);
-		case TransformCoordinates.DMS:	return getNSLetter() + " " + getLatDeg(format) + "? " + getLatMin(format) + "\' " + getLatSec(format) + "\" " 
-						+  getEWLetter() + " " + getLonDeg(format) + "? " + getLonMin(format) + "\' " + getLonSec(format) + "\"";
+		case TransformCoordinates.DD:	return getNSLetter() + " " + STRreplace.replace(getLatDeg(format),"-","") + "?? "
+						+  getEWLetter() + " " + STRreplace.replace(getLonDeg(format),"-","")+ "??";
+		case TransformCoordinates.DMM:	return getNSLetter() + " " + getLatDeg(format) + "?? " + getLatMin(format) + " "
+						+  getEWLetter() + " " + getLonDeg(format) + "?? " + getLonMin(format);
+		case TransformCoordinates.DMS:	return getNSLetter() + " " + getLatDeg(format) + "?? " + getLatMin(format) + "\' " + getLatSec(format) + "\" " 
+						+  getEWLetter() + " " + getLonDeg(format) + "?? " + getLonMin(format) + "\' " + getLonSec(format) + "\"";
 		case TransformCoordinates.LAT_LON: 	return getLatDeg(DD)+","+getLonDeg(DD);
 		case TransformCoordinates.LON_LAT: 	return getLonDeg(DD)+","+getLatDeg(DD);
 		//case TransformCoordinates.CUSTOM:	return getGermanGkCoordinates();

Modified: trunk/src/CacheWolf/CWProgressBar.java
===================================================================
--- trunk/src/CacheWolf/CWProgressBar.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/CWProgressBar.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/CacheDB.java
===================================================================
--- trunk/src/CacheWolf/CacheDB.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/CacheDB.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/CacheHolder.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/CacheHolderDetail.java
===================================================================
--- trunk/src/CacheWolf/CacheHolderDetail.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/CacheHolderDetail.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/CacheImages.java
===================================================================
--- trunk/src/CacheWolf/CacheImages.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/CacheImages.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/CacheList.java
===================================================================
--- trunk/src/CacheWolf/CacheList.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/CacheList.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/CacheSize.java
===================================================================
--- trunk/src/CacheWolf/CacheSize.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/CacheSize.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,578 +1,578 @@
-    /*
-    GNU General Public License
-    CacheWolf is a software for PocketPC, Win and Linux that
-    enables paperless caching.
-    It supports the sites geocaching.com and opencaching.de
-
-    Copyright (C) 2006  CacheWolf development team
-    See http://developer.berlios.de/projects/cachewolf/
-    for more information.
-    Contact: 	bilbowolf at users.berlios.de
-    			kalli at users.berlios.de
-
-    This program is free software; you can redistribute it and/or modify
-    it under the terms of the GNU General Public License as published by
-    the Free Software Foundation; version 2 of the License.
-
-    This program is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-    GNU General Public License for more details.
-
-    You should have received a copy of the GNU General Public License
-    along with this program; if not, write to the Free Software
-    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-    */
-package CacheWolf;
-
-/**
- * Handles all aspects of converting cache size information from
- * and to the various im- and exporters as well as for converting
- * legacy profiles to current standard
- */
-public final class CacheSize {
-
-	/*
-	 * internal representation of cache sizes in CacheHolder we just made them
-	 * up ;-)
-	 */
-	/** container size not chosen */
-	public static final byte CW_SIZE_NOTCHOSEN = 0;
-	/** container size other */
-	public static final byte CW_SIZE_OTHER = 1;
-	/** container size micro */
-	public static final byte CW_SIZE_MICRO = 2;
-	/* container size small */
-	public static final byte CW_SIZE_SMALL = 3;
-	/** container size regular */
-	public static final byte CW_SIZE_REGULAR = 4;
-	/** container size large */
-	public static final byte CW_SIZE_LARGE = 5;
-	/** container size very large */
-	public static final byte CW_SIZE_VERYLARGE = 6;
-	/** container size none */
-	public static final byte CW_SIZE_NONE = 7;
-	/** container size virtual */
-	public static final byte CW_SIZE_VIRTUAL = 8;
-	/** unparsable size or missing size information should throw IllegalArgumentExceptions when found */
-	public static final byte CW_SIZE_ERROR = -1;
-
-	/*
-	 * geocaching.com size strings as found by analyzing GPX files 
-	 * plus opencaching & terracaching Very large + none
-	 */
-	public static final String GC_SIZE_MICRO = "Micro";
-	public static final String GC_SIZE_SMALL = "Small";
-	public static final String GC_SIZE_REGULAR = "Regular";
-	public static final String GC_SIZE_LARGE = "Large";
-	public static final String GC_SIZE_NOTCHOSEN = "Not chosen";
-	public static final String GC_SIZE_OTHER = "Other";
-	public static final String GC_SIZE_VIRTUAL = "Virtual";
-	public static final String OCTC_SIZE_VERYLARGE = "Very large";
-	public static final String OCTC_SIZE_NONE = "None";
-
-	/*
-	 * OpenCaching Size IDs see
-	 * http://oc-server.svn.sourceforge.net/viewvc/oc-server/doc/sql/static-data/data.sql?view=markup
-	 */
-	public static final String OC_SIZE_OTHER = "1";
-	public static final String OC_SIZE_MICRO = "2";
-	public static final String OC_SIZE_SMALL = "3";
-	public static final String OC_SIZE_NORMAL = "4";
-	public static final String OC_SIZE_LARGE = "5";
-	public static final String OC_SIZE_VERYLARGE = "6";
-	public static final String OC_SIZE_NONE = "7";
-
-	/*
-	 * TerraCaching Size IDs taken from old GPXimporter (?? reliable source ??)
-	 */
-	public static final String TC_SIZE_MICRO = "1";
-	public static final String TC_SIZE_MEDIUM = "2";
-	public static final String TC_SIZE_REGULAR = "3";
-	public static final String TC_SIZE_LARGE = "4";
-	public static final String TC_SIZE_VERYLARGE = "4";
-
-	/*
-	 * images to show in CW index panel we use less images than sizes since all
-	 * non physical caches are represented by the same symbol
-	 */
-	/** GUI image for micro caches */
-	public static final String CW_GUIIMG_MICRO = "sizeMicro.png";
-	/** GUI image for small caches */
-	public static final String CW_GUIIMG_SMALL = "sizeSmall.png";
-	/** GUI image for regular / normal caches */
-	public static final String CW_GUIIMG_NORMAL = "sizeReg.png";
-	/** GUI image for large caches */
-	public static final String CW_GUIIMG_LARGE = "sizeLarge.png";
-	/** GUI image for non physical caches */
-	public static final String CW_GUIIMG_NONPHYSICAL = "sizeNonPhysical.png";
-	/** GUI image for very large caches */
-	public static final String CW_GUIIMG_VERYLARGE = "sizeVLarge.png";
-
-	/*
-	 * IDs for the sizePics[] array in TableModel therefore they must start with
-	 * 0 and be consecutive
-	 */
-	public static final byte CW_GUIIMGID_MICRO = 0;
-	public static final byte CW_GUIIMGID_SMALL = 1;
-	public static final byte CW_GUIIMGID_NORMAL = 2;
-	public static final byte CW_GUIIMGID_LARGE = 3;
-	public static final byte CW_GUIIMGID_NONPHYSICAL = 4;
-	public static final byte CW_GUIIMGID_VERYLARGE = 5;
-
-	/*
-	 * total number of different size images will be used to set the dimension
-	 * of sizePics[] array in TableModel
-	 */
-	public static final byte CW_TOTAL_SIZE_IMAGES = 6;
-
-	/*
-	 * bit masks to be used with the filter function
-	 */
-	public static final byte CW_FILTER_MICRO = 0x01 << 0;
-	public static final byte CW_FILTER_SMALL = 0x01 << 1;
-	public static final byte CW_FILTER_NORMAL = 0x01 << 2;
-	public static final byte CW_FILTER_LARGE = 0x01 << 3;
-	public static final byte CW_FILTER_VERYLARGE = 0x01 << 4;
-	public static final byte CW_FILTER_NONPHYSICAL = 0x01 << 5;
-	public static final byte CW_FILTER_ALL = CW_FILTER_MICRO
-			| CW_FILTER_SMALL | CW_FILTER_NORMAL | CW_FILTER_LARGE
-			| CW_FILTER_NONPHYSICAL | CW_FILTER_VERYLARGE;
-	
-	/** thou shallst not instantiate this object */
-	private CacheSize() { // Nothing to do
-	}
-
-	
-	/**
-	 * map filenames of images for the different sizes to the ids used array
-	 * index for sizePics[] in TableModel
-	 * 
-	 * @param size
-	 *            size identifier matching the CW_GUIIMGID_ constants
-	 * @return filename of image to be displayed for id
-	 * @throws IllegalArgumentException
-	 *             if there is no image associated to the <code>id</code>
-	 */
-	public static String sizeImageForId(final byte size) throws IllegalArgumentException {
-		switch (size) {
-			case CW_GUIIMGID_MICRO:
-				return CW_GUIIMG_MICRO;
-			case CW_GUIIMGID_SMALL:
-				return CW_GUIIMG_SMALL;
-			case CW_GUIIMGID_NORMAL:
-				return CW_GUIIMG_NORMAL;
-			case CW_GUIIMGID_LARGE:
-				return CW_GUIIMG_LARGE;
-			case CW_GUIIMGID_NONPHYSICAL:
-				return CW_GUIIMG_NONPHYSICAL;
-			case CW_GUIIMGID_VERYLARGE:
-				return CW_GUIIMG_VERYLARGE;
-			default:
-				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize cw2ExportString()"));
-		}
-	}
-
-	/**
-	 * convert the size info from a CacheHolder to a string suitable for GPX
-	 * export
-	 * 
-	 * @param size
-	 *            CW internal representation of cache size
-	 * @return string representation of CacheWolf internal cache size
-	 * @throws IllegalArgumentException
-	 *             if <code>cwsize</code> can not be mapped to a CW_SIZE constant
-	 */
-	public static String cw2ExportString(final byte size) throws IllegalArgumentException {
-		switch (size) {
-			case CW_SIZE_MICRO:
-				return GC_SIZE_MICRO;
-			case CW_SIZE_SMALL:
-				return GC_SIZE_SMALL;
-			case CW_SIZE_REGULAR:
-				return GC_SIZE_REGULAR;
-			case CW_SIZE_LARGE:
-				return GC_SIZE_LARGE;
-			case CW_SIZE_NOTCHOSEN:
-				return GC_SIZE_NOTCHOSEN;
-			case CW_SIZE_OTHER:
-				return GC_SIZE_OTHER;
-			case CW_SIZE_VIRTUAL:
-				return GC_SIZE_VIRTUAL;
-			case CW_SIZE_VERYLARGE:
-				return OCTC_SIZE_VERYLARGE;
-			case CW_SIZE_NONE:
-				return OCTC_SIZE_NONE;
-			default:
-				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize cw2ExportString()"));
-		}
-	}
-
-	/**
-	 * convert the cache size information from a TerraCaching GPX import to
-	 * internal representation
-	 * 
-	 * @param tcstring
-	 *            size information extracted from a TC GPX import
-	 * @return CacheWolf internal representation of size information
-	 * @throws IllegalArgumentException
-	 *             if <code>tcstring</code> can not be mapped to internal representation
-	 *             (CW_SIZE_*)
-	 */
-
-	public static byte tcGpxString2Cw(final String tcstring) throws IllegalArgumentException {
-		if (tcstring.equals(TC_SIZE_MICRO)) {
-			return CW_SIZE_MICRO;
-		} else if (tcstring.equals(TC_SIZE_MEDIUM)) {
-			return CW_SIZE_SMALL;
-		} else if (tcstring.equals(TC_SIZE_REGULAR)) {
-			return CW_SIZE_REGULAR;
-		} else if (tcstring.equals(TC_SIZE_LARGE)) {
-			return CW_SIZE_LARGE;
-		} else if (tcstring.equals(TC_SIZE_VERYLARGE)) {
-			return CW_SIZE_VERYLARGE;
-		} else {
-			throw (new IllegalArgumentException("unmatched argument " + tcstring + " in CacheSize tcGpxString2Cw()"));
-		}
-	}
-
-	/**
-	 * convert the cache size information from a GC GPX import to internal
-	 * representation
-	 * 
-	 * @param gcstring
-	 *            size information extracted from a GPX import
-	 * @return CacheWolf internal representation of size information
-	 * @throws IllegalArgumentException
-	 *             if <code>gcstring</code> can not be mapped to internal representation
-	 *             (CW_SIZE_*)
-	 */
-
-	public static byte gcGpxString2Cw(final String gcstring) throws IllegalArgumentException {
-		if (gcstring.equalsIgnoreCase(GC_SIZE_MICRO)) {
-			return CW_SIZE_MICRO;
-		} else if (gcstring.equalsIgnoreCase(GC_SIZE_SMALL)) {
-			return CW_SIZE_SMALL;
-		} else if (gcstring.equalsIgnoreCase(GC_SIZE_REGULAR)) {
-			return CW_SIZE_REGULAR;
-		} else if (gcstring.equalsIgnoreCase(GC_SIZE_LARGE)) {
-			return CW_SIZE_LARGE;
-		} else if (gcstring.equalsIgnoreCase(GC_SIZE_NOTCHOSEN)) {
-			return CW_SIZE_NOTCHOSEN;
-		} else if (gcstring.equalsIgnoreCase(GC_SIZE_OTHER)) {
-			return CW_SIZE_OTHER;
-		} else if (gcstring.equalsIgnoreCase(GC_SIZE_VIRTUAL)) {
-			return CW_SIZE_VIRTUAL;
-		// GSAK exports wrong type information
-		} else if (gcstring.equalsIgnoreCase("Unknown")) {
-			return CW_SIZE_NOTCHOSEN;
-		} else if (gcstring.equalsIgnoreCase("not_chosen")) {
-			return CW_SIZE_NOTCHOSEN;
-		} else {
-			throw (new IllegalArgumentException("unmatched argument " + gcstring + " in CacheSize gcGpxString2Cw()"));
-		}
-	}
-
-	/**
-	 * convert the cache size information from GCSpider to internal
-	 * representation for CacheHolder
-	 * 
-	 * @param spiderstring
-	 *            string identified by the spider as containing size information
-	 * @return CacheWolf internal representation of size information
-	 * @throws IllegalArgumentException
-	 *             if <code>spiderstring</code> can not be mapped to internal representation
-	 *             (CW_SIZE_*)
-	 */
-	public static byte gcSpiderString2Cw(final String spiderstring) throws IllegalArgumentException {
-		// at the moment both sources use the same strings
-		return gcGpxString2Cw(spiderstring);
-	}
-
-	/**
-	 * map information from an Opencaching XML cache description suitable for
-	 * CacheHolder
-	 * 
-	 * @param ocxmlstring
-	 *            string extracted from OC-XML attribute size
-	 * @return CacheWolf internal representation of size information
-	 * @trows IllegalArgumentException if <code>ocxmlstring</code> can not be mapped to a
-	 *        CW_SIZE_*
-	 */
-	public static byte ocXmlString2Cw(final String ocxmlstring) throws IllegalArgumentException {
-		if (ocxmlstring.equals(OC_SIZE_OTHER)) {
-			return CW_SIZE_OTHER;
-		} else if (ocxmlstring.equals(OC_SIZE_MICRO)) {
-			return CW_SIZE_MICRO;
-		} else if (ocxmlstring.equals(OC_SIZE_SMALL)) {
-			return CW_SIZE_SMALL;
-		} else if (ocxmlstring.equals(OC_SIZE_NORMAL)) {
-			return CW_SIZE_REGULAR;
-		} else if (ocxmlstring.equals(OC_SIZE_LARGE)) {
-			return CW_SIZE_LARGE;
-		} else if (ocxmlstring.equals(OC_SIZE_VERYLARGE)) {
-			return CW_SIZE_VERYLARGE;
-		} else if (ocxmlstring.equals(OC_SIZE_NONE)) {
-			return CW_SIZE_NOTCHOSEN;
-		} else {
-			throw (new IllegalArgumentException("unmatched argument " + ocxmlstring + " in CacheSize ocXmlString2Cw()"));
-		}
-	}
-
-	/**
-	 * get name of the image to be displayed in CW index panel
-	 * 
-	 * @param size
-	 *            CW internal representation of cache size
-	 * @return filename of image to be displayed in main panel as size icon
-	 * @throws IllegalArgumentException
-	 *             if <code>size</code> can not be mapped
-	 */
-	public static byte guiSizeImageId(final byte size) throws IllegalArgumentException {
-		switch (size) {
-			case CW_SIZE_MICRO:
-				return CW_GUIIMGID_MICRO;
-			case CW_SIZE_SMALL:
-				return CW_GUIIMGID_SMALL;
-			case CW_SIZE_REGULAR:
-				return CW_GUIIMGID_NORMAL;
-			case CW_SIZE_LARGE:
-				return CW_GUIIMGID_LARGE;
-			case CW_SIZE_NOTCHOSEN:
-				return CW_GUIIMGID_NONPHYSICAL;
-			case CW_SIZE_OTHER:
-				return CW_GUIIMGID_NONPHYSICAL;
-			case CW_SIZE_VIRTUAL:
-				return CW_GUIIMGID_NONPHYSICAL;
-			case CW_SIZE_VERYLARGE:
-				return CW_GUIIMGID_VERYLARGE;
-			case CW_SIZE_NONE:
-				return CW_GUIIMGID_NONPHYSICAL;
-			default:
-				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize guiSizeImage()"));
-		}
-	}
-
-	/**
-	 * convert v1 style size string to the new internal representation
-	 * 
-	 * @param v1Size
-	 *            old size string
-	 * @return CW internal representation of cache size
-	 * @throws IllegalArgumentException if <code>v1Size</code> can not be mapped
-	 * @deprecated remove once v1 file version compatibility is abandoned
-	 */
-	public static final byte v1Converter(final String v1Size) throws IllegalArgumentException {
-		if (v1Size.equals(GC_SIZE_MICRO)) {
-			return CW_SIZE_MICRO;
-		} else if (v1Size.equals(GC_SIZE_SMALL)) {
-			return CW_SIZE_SMALL;
-		} else if (v1Size.equals(GC_SIZE_REGULAR)) {
-			return CW_SIZE_REGULAR;
-		} else if (v1Size.equals(GC_SIZE_LARGE)) {
-			return CW_SIZE_LARGE;
-		} else if (v1Size.equalsIgnoreCase(GC_SIZE_NOTCHOSEN)) {
-			return CW_SIZE_NOTCHOSEN;
-		} else if (v1Size.equals(GC_SIZE_OTHER)) {
-			return CW_SIZE_OTHER;
-		} else if (v1Size.equals(GC_SIZE_VIRTUAL)) {
-			return CW_SIZE_VIRTUAL;
-		} else if (v1Size.equals(OCTC_SIZE_NONE)) {
-			return CW_SIZE_NONE;
-		} else if (v1Size.equals(OCTC_SIZE_VERYLARGE)) {
-			return CW_SIZE_VERYLARGE;
-		} else if (v1Size.equals("")) {
-			return CW_SIZE_NOTCHOSEN;
-		} else {
-			throw (new IllegalArgumentException("unmatched argument " + v1Size + " in v1Converter()"));
-		}
-	}
-	
-	/**
-	 * return a bit mask representing the caches size for use in the Filter
-	 * 
-	 * @param size
-	 *            CW internal representation of cache size
-	 * @return a bit mask for the filter function
-	 * @throws IllegalArgumentException
-	 *             if <code>size</code> can not be mapped to a bit mask
-	 */
-	public static byte getFilterPattern(final byte size) throws IllegalArgumentException {
-		switch (size) {
-			case CW_SIZE_MICRO:
-				return CW_FILTER_MICRO;
-			case CW_SIZE_SMALL:
-				return CW_FILTER_SMALL;
-			case CW_SIZE_REGULAR:
-				return CW_FILTER_NORMAL;
-			case CW_SIZE_LARGE:
-				return CW_FILTER_LARGE;
-			case CW_SIZE_NOTCHOSEN:
-				return CW_FILTER_NONPHYSICAL;
-			case CW_SIZE_OTHER:
-				return CW_FILTER_NONPHYSICAL;
-			case CW_SIZE_VIRTUAL:
-				return CW_FILTER_NONPHYSICAL;
-			case CW_SIZE_VERYLARGE:
-				return CW_FILTER_VERYLARGE;
-			case CW_SIZE_NONE:
-				return CW_FILTER_NONPHYSICAL;
-			default:
-				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize getFilterPattern()"));
-		}
-	}
-
-	/**
-	 * provides abbreviated representations of CacheSize for compact exporters
-	 * 
-	 * @param size
-	 *            CW internal representation of cache size
-	 * @return a one letter String for cache size
-	 * @throws IllegalArgumentException
-	 *             if <code>size</code> can not be mapped
-	 */
-
-	public static String getExportShortId(final byte size) throws IllegalArgumentException {
-		switch (size) {
-			case CW_SIZE_MICRO:
-				return "m";
-			case CW_SIZE_SMALL:
-				return "s";
-			case CW_SIZE_REGULAR:
-				return "r";
-			case CW_SIZE_LARGE:
-				return "l";
-			case CW_SIZE_NOTCHOSEN:
-				return "n";
-			case CW_SIZE_OTHER:
-				return "n";
-			case CW_SIZE_VIRTUAL:
-				return "n";
-			case CW_SIZE_VERYLARGE:
-				return "v";
-			case CW_SIZE_NONE:
-				return "n";
-			default:
-				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize getExportShortId()"));
-		}
-	}
-
-	/**
-	 * generate a string array suitable to be used in DetalsPanel drop down list
-	 * 
-	 * @return strings to be displayed in the DetailsPanel Size DropDown
-	 * @see guiSizeStrings2CwSize
-	 * @see cwSizeId2GuiSizeId
-	 */
-	public static String[] guiSizeStrings() {
-		// make sure strings appear in ascending order for CW_SIZE_*
-		final String ret[] = new String[] { 
-				GC_SIZE_NOTCHOSEN, 
-				GC_SIZE_OTHER,
-				GC_SIZE_MICRO, 
-				GC_SIZE_SMALL, 
-				GC_SIZE_REGULAR, 
-				GC_SIZE_LARGE,
-				OCTC_SIZE_VERYLARGE, 
-				OCTC_SIZE_NONE, 
-				GC_SIZE_VIRTUAL 
-				};
-		return ret;
-	}
-
-	/**
-	 * map a string chosen from the DetailsPanel Size drop down list back to
-	 * internal representation
-	 * 
-	 * @param size string selected in the list
-	 * @return cw type information
-	 * @throws IllegalArgumentException
-	 *             if <code>id</code> can not be mapped
-	 * @see cwSizeId2GuiSizeId
-	 * @see guiSizeStrings
-	 */
-	public static byte guiSizeStrings2CwSize(final String size) throws IllegalArgumentException {
-		// map the strings in guiSizeStrings() back to cw byte types
-		if (size.equals(GC_SIZE_NOTCHOSEN)) {
-			return CW_SIZE_NOTCHOSEN;
-		} else if (size.equals(GC_SIZE_OTHER)) {
-			return CW_SIZE_OTHER;
-		} else if (size.equals(GC_SIZE_SMALL)) {
-			return CW_SIZE_SMALL;
-		} else if (size.equals(GC_SIZE_REGULAR)) {
-			return CW_SIZE_REGULAR;
-		} else if (size.equals(GC_SIZE_LARGE)) {
-			return CW_SIZE_LARGE;
-		} else if (size.equals(OCTC_SIZE_VERYLARGE)) {
-			return CW_SIZE_VERYLARGE;
-		} else if (size.equals(OCTC_SIZE_NONE)) {
-			return CW_SIZE_NONE;
-		} else if (size.equals(GC_SIZE_MICRO)) {
-			return CW_SIZE_MICRO;
-		} else if (size.equals(GC_SIZE_VIRTUAL)) {
-			return CW_SIZE_VIRTUAL;
-		} else {
-			throw (new IllegalArgumentException("unmatched argument " + size + " in guiSizeStrings2CwSize()"));
-		}
-	}
-
-	/**
-	 * map internal representation to index used in the the DetailsPanel Size
-	 * drop down list
-	 * 
-	 * @param size
-	 *            internal id to be mapped
-	 * @return index of internal size in array
-	 * @throws IllegalArgumentException
-	 *             if <code>id</code> can not be mapped
-	 * @see guiSizeStrings2CwSize
-	 * @see cwSizeId2GuiSizeId
-	 */
-	public static int cwSizeId2GuiSizeId(final byte size) throws IllegalArgumentException {
-		switch (size) {
-		case CW_SIZE_NOTCHOSEN:
-			return 0;
-		case CW_SIZE_OTHER:
-			return 1;
-		case CW_SIZE_MICRO:
-			return 2;
-		case CW_SIZE_SMALL:
-			return 3;
-		case CW_SIZE_REGULAR:
-			return 4;
-		case CW_SIZE_LARGE:
-			return 5;
-		case CW_SIZE_VERYLARGE:
-			return 6;
-		case CW_SIZE_NONE:
-			return 7;
-		case CW_SIZE_VIRTUAL:
-			return 8;
-		default:
-			throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize ()"));
-		}
-
-	}
-	
-	/**
-	 * checks if a given size information would be valid for use with CacheWolf.
-	 * takes about 1/20th of the time a try {} catch {} block would need, so use this
-	 * function if you just want to check
-	 * @param size size information to check
-	 * @return true if size is valid, false otherwise
-	 */
-	public static boolean isValidSize(final byte size) {
-		switch (size) {
-		case CW_SIZE_NOTCHOSEN: return true;
-		case CW_SIZE_OTHER: return true;
-		case CW_SIZE_MICRO: return true;
-		case CW_SIZE_SMALL: return true;
-		case CW_SIZE_REGULAR: return true;
-		case CW_SIZE_LARGE: return true;
-		case CW_SIZE_VERYLARGE: return true;
-		case CW_SIZE_NONE: return true;
-		case CW_SIZE_VIRTUAL: return true;
-		default: return false;
-		}
-	}
-}
+???    /*
+    GNU General Public License
+    CacheWolf is a software for PocketPC, Win and Linux that
+    enables paperless caching.
+    It supports the sites geocaching.com and opencaching.de
+
+    Copyright (C) 2006  CacheWolf development team
+    See http://developer.berlios.de/projects/cachewolf/
+    for more information.
+    Contact: 	bilbowolf at users.berlios.de
+    			kalli at users.berlios.de
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; version 2 of the License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+    */
+package CacheWolf;
+
+/**
+ * Handles all aspects of converting cache size information from
+ * and to the various im- and exporters as well as for converting
+ * legacy profiles to current standard
+ */
+public final class CacheSize {
+
+	/*
+	 * internal representation of cache sizes in CacheHolder we just made them
+	 * up ;-)
+	 */
+	/** container size not chosen */
+	public static final byte CW_SIZE_NOTCHOSEN = 0;
+	/** container size other */
+	public static final byte CW_SIZE_OTHER = 1;
+	/** container size micro */
+	public static final byte CW_SIZE_MICRO = 2;
+	/* container size small */
+	public static final byte CW_SIZE_SMALL = 3;
+	/** container size regular */
+	public static final byte CW_SIZE_REGULAR = 4;
+	/** container size large */
+	public static final byte CW_SIZE_LARGE = 5;
+	/** container size very large */
+	public static final byte CW_SIZE_VERYLARGE = 6;
+	/** container size none */
+	public static final byte CW_SIZE_NONE = 7;
+	/** container size virtual */
+	public static final byte CW_SIZE_VIRTUAL = 8;
+	/** unparsable size or missing size information should throw IllegalArgumentExceptions when found */
+	public static final byte CW_SIZE_ERROR = -1;
+
+	/*
+	 * geocaching.com size strings as found by analyzing GPX files 
+	 * plus opencaching & terracaching Very large + none
+	 */
+	public static final String GC_SIZE_MICRO = "Micro";
+	public static final String GC_SIZE_SMALL = "Small";
+	public static final String GC_SIZE_REGULAR = "Regular";
+	public static final String GC_SIZE_LARGE = "Large";
+	public static final String GC_SIZE_NOTCHOSEN = "Not chosen";
+	public static final String GC_SIZE_OTHER = "Other";
+	public static final String GC_SIZE_VIRTUAL = "Virtual";
+	public static final String OCTC_SIZE_VERYLARGE = "Very large";
+	public static final String OCTC_SIZE_NONE = "None";
+
+	/*
+	 * OpenCaching Size IDs see
+	 * http://oc-server.svn.sourceforge.net/viewvc/oc-server/doc/sql/static-data/data.sql?view=markup
+	 */
+	public static final String OC_SIZE_OTHER = "1";
+	public static final String OC_SIZE_MICRO = "2";
+	public static final String OC_SIZE_SMALL = "3";
+	public static final String OC_SIZE_NORMAL = "4";
+	public static final String OC_SIZE_LARGE = "5";
+	public static final String OC_SIZE_VERYLARGE = "6";
+	public static final String OC_SIZE_NONE = "7";
+
+	/*
+	 * TerraCaching Size IDs taken from old GPXimporter (?? reliable source ??)
+	 */
+	public static final String TC_SIZE_MICRO = "1";
+	public static final String TC_SIZE_MEDIUM = "2";
+	public static final String TC_SIZE_REGULAR = "3";
+	public static final String TC_SIZE_LARGE = "4";
+	public static final String TC_SIZE_VERYLARGE = "4";
+
+	/*
+	 * images to show in CW index panel we use less images than sizes since all
+	 * non physical caches are represented by the same symbol
+	 */
+	/** GUI image for micro caches */
+	public static final String CW_GUIIMG_MICRO = "sizeMicro.png";
+	/** GUI image for small caches */
+	public static final String CW_GUIIMG_SMALL = "sizeSmall.png";
+	/** GUI image for regular / normal caches */
+	public static final String CW_GUIIMG_NORMAL = "sizeReg.png";
+	/** GUI image for large caches */
+	public static final String CW_GUIIMG_LARGE = "sizeLarge.png";
+	/** GUI image for non physical caches */
+	public static final String CW_GUIIMG_NONPHYSICAL = "sizeNonPhysical.png";
+	/** GUI image for very large caches */
+	public static final String CW_GUIIMG_VERYLARGE = "sizeVLarge.png";
+
+	/*
+	 * IDs for the sizePics[] array in TableModel therefore they must start with
+	 * 0 and be consecutive
+	 */
+	public static final byte CW_GUIIMGID_MICRO = 0;
+	public static final byte CW_GUIIMGID_SMALL = 1;
+	public static final byte CW_GUIIMGID_NORMAL = 2;
+	public static final byte CW_GUIIMGID_LARGE = 3;
+	public static final byte CW_GUIIMGID_NONPHYSICAL = 4;
+	public static final byte CW_GUIIMGID_VERYLARGE = 5;
+
+	/*
+	 * total number of different size images will be used to set the dimension
+	 * of sizePics[] array in TableModel
+	 */
+	public static final byte CW_TOTAL_SIZE_IMAGES = 6;
+
+	/*
+	 * bit masks to be used with the filter function
+	 */
+	public static final byte CW_FILTER_MICRO = 0x01 << 0;
+	public static final byte CW_FILTER_SMALL = 0x01 << 1;
+	public static final byte CW_FILTER_NORMAL = 0x01 << 2;
+	public static final byte CW_FILTER_LARGE = 0x01 << 3;
+	public static final byte CW_FILTER_VERYLARGE = 0x01 << 4;
+	public static final byte CW_FILTER_NONPHYSICAL = 0x01 << 5;
+	public static final byte CW_FILTER_ALL = CW_FILTER_MICRO
+			| CW_FILTER_SMALL | CW_FILTER_NORMAL | CW_FILTER_LARGE
+			| CW_FILTER_NONPHYSICAL | CW_FILTER_VERYLARGE;
+	
+	/** thou shallst not instantiate this object */
+	private CacheSize() { // Nothing to do
+	}
+
+	
+	/**
+	 * map filenames of images for the different sizes to the ids used array
+	 * index for sizePics[] in TableModel
+	 * 
+	 * @param size
+	 *            size identifier matching the CW_GUIIMGID_ constants
+	 * @return filename of image to be displayed for id
+	 * @throws IllegalArgumentException
+	 *             if there is no image associated to the <code>id</code>
+	 */
+	public static String sizeImageForId(final byte size) throws IllegalArgumentException {
+		switch (size) {
+			case CW_GUIIMGID_MICRO:
+				return CW_GUIIMG_MICRO;
+			case CW_GUIIMGID_SMALL:
+				return CW_GUIIMG_SMALL;
+			case CW_GUIIMGID_NORMAL:
+				return CW_GUIIMG_NORMAL;
+			case CW_GUIIMGID_LARGE:
+				return CW_GUIIMG_LARGE;
+			case CW_GUIIMGID_NONPHYSICAL:
+				return CW_GUIIMG_NONPHYSICAL;
+			case CW_GUIIMGID_VERYLARGE:
+				return CW_GUIIMG_VERYLARGE;
+			default:
+				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize cw2ExportString()"));
+		}
+	}
+
+	/**
+	 * convert the size info from a CacheHolder to a string suitable for GPX
+	 * export
+	 * 
+	 * @param size
+	 *            CW internal representation of cache size
+	 * @return string representation of CacheWolf internal cache size
+	 * @throws IllegalArgumentException
+	 *             if <code>cwsize</code> can not be mapped to a CW_SIZE constant
+	 */
+	public static String cw2ExportString(final byte size) throws IllegalArgumentException {
+		switch (size) {
+			case CW_SIZE_MICRO:
+				return GC_SIZE_MICRO;
+			case CW_SIZE_SMALL:
+				return GC_SIZE_SMALL;
+			case CW_SIZE_REGULAR:
+				return GC_SIZE_REGULAR;
+			case CW_SIZE_LARGE:
+				return GC_SIZE_LARGE;
+			case CW_SIZE_NOTCHOSEN:
+				return GC_SIZE_NOTCHOSEN;
+			case CW_SIZE_OTHER:
+				return GC_SIZE_OTHER;
+			case CW_SIZE_VIRTUAL:
+				return GC_SIZE_VIRTUAL;
+			case CW_SIZE_VERYLARGE:
+				return OCTC_SIZE_VERYLARGE;
+			case CW_SIZE_NONE:
+				return OCTC_SIZE_NONE;
+			default:
+				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize cw2ExportString()"));
+		}
+	}
+
+	/**
+	 * convert the cache size information from a TerraCaching GPX import to
+	 * internal representation
+	 * 
+	 * @param tcstring
+	 *            size information extracted from a TC GPX import
+	 * @return CacheWolf internal representation of size information
+	 * @throws IllegalArgumentException
+	 *             if <code>tcstring</code> can not be mapped to internal representation
+	 *             (CW_SIZE_*)
+	 */
+
+	public static byte tcGpxString2Cw(final String tcstring) throws IllegalArgumentException {
+		if (tcstring.equals(TC_SIZE_MICRO)) {
+			return CW_SIZE_MICRO;
+		} else if (tcstring.equals(TC_SIZE_MEDIUM)) {
+			return CW_SIZE_SMALL;
+		} else if (tcstring.equals(TC_SIZE_REGULAR)) {
+			return CW_SIZE_REGULAR;
+		} else if (tcstring.equals(TC_SIZE_LARGE)) {
+			return CW_SIZE_LARGE;
+		} else if (tcstring.equals(TC_SIZE_VERYLARGE)) {
+			return CW_SIZE_VERYLARGE;
+		} else {
+			throw (new IllegalArgumentException("unmatched argument " + tcstring + " in CacheSize tcGpxString2Cw()"));
+		}
+	}
+
+	/**
+	 * convert the cache size information from a GC GPX import to internal
+	 * representation
+	 * 
+	 * @param gcstring
+	 *            size information extracted from a GPX import
+	 * @return CacheWolf internal representation of size information
+	 * @throws IllegalArgumentException
+	 *             if <code>gcstring</code> can not be mapped to internal representation
+	 *             (CW_SIZE_*)
+	 */
+
+	public static byte gcGpxString2Cw(final String gcstring) throws IllegalArgumentException {
+		if (gcstring.equalsIgnoreCase(GC_SIZE_MICRO)) {
+			return CW_SIZE_MICRO;
+		} else if (gcstring.equalsIgnoreCase(GC_SIZE_SMALL)) {
+			return CW_SIZE_SMALL;
+		} else if (gcstring.equalsIgnoreCase(GC_SIZE_REGULAR)) {
+			return CW_SIZE_REGULAR;
+		} else if (gcstring.equalsIgnoreCase(GC_SIZE_LARGE)) {
+			return CW_SIZE_LARGE;
+		} else if (gcstring.equalsIgnoreCase(GC_SIZE_NOTCHOSEN)) {
+			return CW_SIZE_NOTCHOSEN;
+		} else if (gcstring.equalsIgnoreCase(GC_SIZE_OTHER)) {
+			return CW_SIZE_OTHER;
+		} else if (gcstring.equalsIgnoreCase(GC_SIZE_VIRTUAL)) {
+			return CW_SIZE_VIRTUAL;
+		// GSAK exports wrong type information
+		} else if (gcstring.equalsIgnoreCase("Unknown")) {
+			return CW_SIZE_NOTCHOSEN;
+		} else if (gcstring.equalsIgnoreCase("not_chosen")) {
+			return CW_SIZE_NOTCHOSEN;
+		} else {
+			throw (new IllegalArgumentException("unmatched argument " + gcstring + " in CacheSize gcGpxString2Cw()"));
+		}
+	}
+
+	/**
+	 * convert the cache size information from GCSpider to internal
+	 * representation for CacheHolder
+	 * 
+	 * @param spiderstring
+	 *            string identified by the spider as containing size information
+	 * @return CacheWolf internal representation of size information
+	 * @throws IllegalArgumentException
+	 *             if <code>spiderstring</code> can not be mapped to internal representation
+	 *             (CW_SIZE_*)
+	 */
+	public static byte gcSpiderString2Cw(final String spiderstring) throws IllegalArgumentException {
+		// at the moment both sources use the same strings
+		return gcGpxString2Cw(spiderstring);
+	}
+
+	/**
+	 * map information from an Opencaching XML cache description suitable for
+	 * CacheHolder
+	 * 
+	 * @param ocxmlstring
+	 *            string extracted from OC-XML attribute size
+	 * @return CacheWolf internal representation of size information
+	 * @trows IllegalArgumentException if <code>ocxmlstring</code> can not be mapped to a
+	 *        CW_SIZE_*
+	 */
+	public static byte ocXmlString2Cw(final String ocxmlstring) throws IllegalArgumentException {
+		if (ocxmlstring.equals(OC_SIZE_OTHER)) {
+			return CW_SIZE_OTHER;
+		} else if (ocxmlstring.equals(OC_SIZE_MICRO)) {
+			return CW_SIZE_MICRO;
+		} else if (ocxmlstring.equals(OC_SIZE_SMALL)) {
+			return CW_SIZE_SMALL;
+		} else if (ocxmlstring.equals(OC_SIZE_NORMAL)) {
+			return CW_SIZE_REGULAR;
+		} else if (ocxmlstring.equals(OC_SIZE_LARGE)) {
+			return CW_SIZE_LARGE;
+		} else if (ocxmlstring.equals(OC_SIZE_VERYLARGE)) {
+			return CW_SIZE_VERYLARGE;
+		} else if (ocxmlstring.equals(OC_SIZE_NONE)) {
+			return CW_SIZE_NOTCHOSEN;
+		} else {
+			throw (new IllegalArgumentException("unmatched argument " + ocxmlstring + " in CacheSize ocXmlString2Cw()"));
+		}
+	}
+
+	/**
+	 * get name of the image to be displayed in CW index panel
+	 * 
+	 * @param size
+	 *            CW internal representation of cache size
+	 * @return filename of image to be displayed in main panel as size icon
+	 * @throws IllegalArgumentException
+	 *             if <code>size</code> can not be mapped
+	 */
+	public static byte guiSizeImageId(final byte size) throws IllegalArgumentException {
+		switch (size) {
+			case CW_SIZE_MICRO:
+				return CW_GUIIMGID_MICRO;
+			case CW_SIZE_SMALL:
+				return CW_GUIIMGID_SMALL;
+			case CW_SIZE_REGULAR:
+				return CW_GUIIMGID_NORMAL;
+			case CW_SIZE_LARGE:
+				return CW_GUIIMGID_LARGE;
+			case CW_SIZE_NOTCHOSEN:
+				return CW_GUIIMGID_NONPHYSICAL;
+			case CW_SIZE_OTHER:
+				return CW_GUIIMGID_NONPHYSICAL;
+			case CW_SIZE_VIRTUAL:
+				return CW_GUIIMGID_NONPHYSICAL;
+			case CW_SIZE_VERYLARGE:
+				return CW_GUIIMGID_VERYLARGE;
+			case CW_SIZE_NONE:
+				return CW_GUIIMGID_NONPHYSICAL;
+			default:
+				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize guiSizeImage()"));
+		}
+	}
+
+	/**
+	 * convert v1 style size string to the new internal representation
+	 * 
+	 * @param v1Size
+	 *            old size string
+	 * @return CW internal representation of cache size
+	 * @throws IllegalArgumentException if <code>v1Size</code> can not be mapped
+	 * @deprecated remove once v1 file version compatibility is abandoned
+	 */
+	public static final byte v1Converter(final String v1Size) throws IllegalArgumentException {
+		if (v1Size.equals(GC_SIZE_MICRO)) {
+			return CW_SIZE_MICRO;
+		} else if (v1Size.equals(GC_SIZE_SMALL)) {
+			return CW_SIZE_SMALL;
+		} else if (v1Size.equals(GC_SIZE_REGULAR)) {
+			return CW_SIZE_REGULAR;
+		} else if (v1Size.equals(GC_SIZE_LARGE)) {
+			return CW_SIZE_LARGE;
+		} else if (v1Size.equalsIgnoreCase(GC_SIZE_NOTCHOSEN)) {
+			return CW_SIZE_NOTCHOSEN;
+		} else if (v1Size.equals(GC_SIZE_OTHER)) {
+			return CW_SIZE_OTHER;
+		} else if (v1Size.equals(GC_SIZE_VIRTUAL)) {
+			return CW_SIZE_VIRTUAL;
+		} else if (v1Size.equals(OCTC_SIZE_NONE)) {
+			return CW_SIZE_NONE;
+		} else if (v1Size.equals(OCTC_SIZE_VERYLARGE)) {
+			return CW_SIZE_VERYLARGE;
+		} else if (v1Size.equals("")) {
+			return CW_SIZE_NOTCHOSEN;
+		} else {
+			throw (new IllegalArgumentException("unmatched argument " + v1Size + " in v1Converter()"));
+		}
+	}
+	
+	/**
+	 * return a bit mask representing the caches size for use in the Filter
+	 * 
+	 * @param size
+	 *            CW internal representation of cache size
+	 * @return a bit mask for the filter function
+	 * @throws IllegalArgumentException
+	 *             if <code>size</code> can not be mapped to a bit mask
+	 */
+	public static byte getFilterPattern(final byte size) throws IllegalArgumentException {
+		switch (size) {
+			case CW_SIZE_MICRO:
+				return CW_FILTER_MICRO;
+			case CW_SIZE_SMALL:
+				return CW_FILTER_SMALL;
+			case CW_SIZE_REGULAR:
+				return CW_FILTER_NORMAL;
+			case CW_SIZE_LARGE:
+				return CW_FILTER_LARGE;
+			case CW_SIZE_NOTCHOSEN:
+				return CW_FILTER_NONPHYSICAL;
+			case CW_SIZE_OTHER:
+				return CW_FILTER_NONPHYSICAL;
+			case CW_SIZE_VIRTUAL:
+				return CW_FILTER_NONPHYSICAL;
+			case CW_SIZE_VERYLARGE:
+				return CW_FILTER_VERYLARGE;
+			case CW_SIZE_NONE:
+				return CW_FILTER_NONPHYSICAL;
+			default:
+				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize getFilterPattern()"));
+		}
+	}
+
+	/**
+	 * provides abbreviated representations of CacheSize for compact exporters
+	 * 
+	 * @param size
+	 *            CW internal representation of cache size
+	 * @return a one letter String for cache size
+	 * @throws IllegalArgumentException
+	 *             if <code>size</code> can not be mapped
+	 */
+
+	public static String getExportShortId(final byte size) throws IllegalArgumentException {
+		switch (size) {
+			case CW_SIZE_MICRO:
+				return "m";
+			case CW_SIZE_SMALL:
+				return "s";
+			case CW_SIZE_REGULAR:
+				return "r";
+			case CW_SIZE_LARGE:
+				return "l";
+			case CW_SIZE_NOTCHOSEN:
+				return "n";
+			case CW_SIZE_OTHER:
+				return "n";
+			case CW_SIZE_VIRTUAL:
+				return "n";
+			case CW_SIZE_VERYLARGE:
+				return "v";
+			case CW_SIZE_NONE:
+				return "n";
+			default:
+				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize getExportShortId()"));
+		}
+	}
+
+	/**
+	 * generate a string array suitable to be used in DetalsPanel drop down list
+	 * 
+	 * @return strings to be displayed in the DetailsPanel Size DropDown
+	 * @see guiSizeStrings2CwSize
+	 * @see cwSizeId2GuiSizeId
+	 */
+	public static String[] guiSizeStrings() {
+		// make sure strings appear in ascending order for CW_SIZE_*
+		final String ret[] = new String[] { 
+				GC_SIZE_NOTCHOSEN, 
+				GC_SIZE_OTHER,
+				GC_SIZE_MICRO, 
+				GC_SIZE_SMALL, 
+				GC_SIZE_REGULAR, 
+				GC_SIZE_LARGE,
+				OCTC_SIZE_VERYLARGE, 
+				OCTC_SIZE_NONE, 
+				GC_SIZE_VIRTUAL 
+				};
+		return ret;
+	}
+
+	/**
+	 * map a string chosen from the DetailsPanel Size drop down list back to
+	 * internal representation
+	 * 
+	 * @param size string selected in the list
+	 * @return cw type information
+	 * @throws IllegalArgumentException
+	 *             if <code>id</code> can not be mapped
+	 * @see cwSizeId2GuiSizeId
+	 * @see guiSizeStrings
+	 */
+	public static byte guiSizeStrings2CwSize(final String size) throws IllegalArgumentException {
+		// map the strings in guiSizeStrings() back to cw byte types
+		if (size.equals(GC_SIZE_NOTCHOSEN)) {
+			return CW_SIZE_NOTCHOSEN;
+		} else if (size.equals(GC_SIZE_OTHER)) {
+			return CW_SIZE_OTHER;
+		} else if (size.equals(GC_SIZE_SMALL)) {
+			return CW_SIZE_SMALL;
+		} else if (size.equals(GC_SIZE_REGULAR)) {
+			return CW_SIZE_REGULAR;
+		} else if (size.equals(GC_SIZE_LARGE)) {
+			return CW_SIZE_LARGE;
+		} else if (size.equals(OCTC_SIZE_VERYLARGE)) {
+			return CW_SIZE_VERYLARGE;
+		} else if (size.equals(OCTC_SIZE_NONE)) {
+			return CW_SIZE_NONE;
+		} else if (size.equals(GC_SIZE_MICRO)) {
+			return CW_SIZE_MICRO;
+		} else if (size.equals(GC_SIZE_VIRTUAL)) {
+			return CW_SIZE_VIRTUAL;
+		} else {
+			throw (new IllegalArgumentException("unmatched argument " + size + " in guiSizeStrings2CwSize()"));
+		}
+	}
+
+	/**
+	 * map internal representation to index used in the the DetailsPanel Size
+	 * drop down list
+	 * 
+	 * @param size
+	 *            internal id to be mapped
+	 * @return index of internal size in array
+	 * @throws IllegalArgumentException
+	 *             if <code>id</code> can not be mapped
+	 * @see guiSizeStrings2CwSize
+	 * @see cwSizeId2GuiSizeId
+	 */
+	public static int cwSizeId2GuiSizeId(final byte size) throws IllegalArgumentException {
+		switch (size) {
+		case CW_SIZE_NOTCHOSEN:
+			return 0;
+		case CW_SIZE_OTHER:
+			return 1;
+		case CW_SIZE_MICRO:
+			return 2;
+		case CW_SIZE_SMALL:
+			return 3;
+		case CW_SIZE_REGULAR:
+			return 4;
+		case CW_SIZE_LARGE:
+			return 5;
+		case CW_SIZE_VERYLARGE:
+			return 6;
+		case CW_SIZE_NONE:
+			return 7;
+		case CW_SIZE_VIRTUAL:
+			return 8;
+		default:
+			throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize ()"));
+		}
+
+	}
+	
+	/**
+	 * checks if a given size information would be valid for use with CacheWolf.
+	 * takes about 1/20th of the time a try {} catch {} block would need, so use this
+	 * function if you just want to check
+	 * @param size size information to check
+	 * @return true if size is valid, false otherwise
+	 */
+	public static boolean isValidSize(final byte size) {
+		switch (size) {
+		case CW_SIZE_NOTCHOSEN: return true;
+		case CW_SIZE_OTHER: return true;
+		case CW_SIZE_MICRO: return true;
+		case CW_SIZE_SMALL: return true;
+		case CW_SIZE_REGULAR: return true;
+		case CW_SIZE_LARGE: return true;
+		case CW_SIZE_VERYLARGE: return true;
+		case CW_SIZE_NONE: return true;
+		case CW_SIZE_VIRTUAL: return true;
+		default: return false;
+		}
+	}
+}

Modified: trunk/src/CacheWolf/CacheTerrDiff.java
===================================================================
--- trunk/src/CacheWolf/CacheTerrDiff.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/CacheTerrDiff.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,159 +1,159 @@
-    /*
-    GNU General Public License
-    CacheWolf is a software for PocketPC, Win and Linux that
-    enables paperless caching.
-    It supports the sites geocaching.com and opencaching.de
-
-    Copyright (C) 2006  CacheWolf development team
-    See http://developer.berlios.de/projects/cachewolf/
-    for more information.
-    Contact: 	bilbowolf at users.berlios.de
-    			kalli at users.berlios.de
-
-    This program is free software; you can redistribute it and/or modify
-    it under the terms of the GNU General Public License as published by
-    the Free Software Foundation; version 2 of the License.
-
-    This program is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-    GNU General Public License for more details.
-
-    You should have received a copy of the GNU General Public License
-    along with this program; if not, write to the Free Software
-    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-    */
-package CacheWolf;
-
-/**
- * Handles all aspects of converting terrain and difficulty
- * informations from legacy file versions and various im-
- * and exporters
- * 
- * Only use the class in a static way, do not instantiate it
- */
-public final class CacheTerrDiff {
-	
-	/** terrain or difficulty 1.0 */
-	public static final byte CW_DT_10 = 10;
-	/** terrain or difficulty 1.5 */
-	public static final byte CW_DT_15 = 15;
-	/** terrain or difficulty 2.0 */
-	public static final byte CW_DT_20 = 20;
-	/** terrain or difficulty 2.5 */
-	public static final byte CW_DT_25 = 25;
-	/** terrain or difficulty 3.0 */
-	public static final byte CW_DT_30 = 30;
-	/** terrain or difficulty 3.5 */
-	public static final byte CW_DT_35 = 35;
-	/** terrain or difficulty 4.0 */
-	public static final byte CW_DT_40 = 40;
-	/** terrain or difficulty 4.5 */
-	public static final byte CW_DT_45 = 45;
-	/** terrain or difficulty 5.0 */
-	public static final byte CW_DT_50 = 50;
-	/** wrong terrain or difficulty */
-	public static final byte CW_DT_ERROR = -1;
-	/** terrain or difficulty for additional/custom waypoints */
-	public static final byte CW_DT_UNSET = 0;
-
-	private CacheTerrDiff() { 
-		// Nothing to do
-	}
-	
-	/**
-	 * convert "old style" terrain and difficulty information to the new format.
-	 * 
-	 * since it is also used by the importers it is not flagged as depreciated
-	 * @param v1TerrDiff a string representation of terrain or difficulty
-	 * @return internal representation of terrain or difficulty
-	 * @throws IllegalArgumentException if <code>v1TerrDiff</code> can not be mapped
-	 */
-	public static byte v1Converter(String v1TerrDiff) throws IllegalArgumentException {
-		if (v1TerrDiff == null) {
-			throw new IllegalArgumentException("error mapping terrain or difficulty");
-		}
-		v1TerrDiff = v1TerrDiff.replace(',', '.');
-		if (v1TerrDiff.equals("1") || v1TerrDiff.equals("1.0")) { return CW_DT_10; }
-		if (v1TerrDiff.equals("2") || v1TerrDiff.equals("2.0")) { return CW_DT_20; }
-		if (v1TerrDiff.equals("3") || v1TerrDiff.equals("3.0")) { return CW_DT_30; }
-		if (v1TerrDiff.equals("4") || v1TerrDiff.equals("4.0")) { return CW_DT_40; }
-		if (v1TerrDiff.equals("5") || v1TerrDiff.equals("5.0")) { return CW_DT_50; }
-		
-		if (v1TerrDiff.equals("1.5")) { return CW_DT_15; }
-		if (v1TerrDiff.equals("2.5")) { return CW_DT_25; }
-		if (v1TerrDiff.equals("3.5")) { return CW_DT_35; }
-		if (v1TerrDiff.equals("4.5")) { return CW_DT_45; }
-		
-		if (v1TerrDiff.equals("-1")) { return CW_DT_UNSET; }
-		
-		throw new IllegalArgumentException("error mapping terrain or difficulty");
-	}
-	
-	/**
-	 * generate strings of terrain and difficulty for general use
-	 * @param terrdiff internal terrain or difficulty value
-	 * @return long version of terrain or difficulty (including .0)
-	 * @throws IllegalArgumentException
-	 */
-	public static String longDT(final byte terrdiff) throws IllegalArgumentException {
-		switch(terrdiff) {
-		case CW_DT_10: return "1.0";
-		case CW_DT_15: return "1.5";
-		case CW_DT_20: return "2.0";
-		case CW_DT_25: return "2.5";
-		case CW_DT_30: return "3.0";
-		case CW_DT_35: return "3.5";
-		case CW_DT_40: return "4.0";
-		case CW_DT_45: return "4.5";
-		case CW_DT_50: return "5.0";
-		case CW_DT_UNSET: return "-.-";
-		default: throw new IllegalArgumentException("unmapped terrain or diffulty "+terrdiff);
-		}
-	}
-
-	/**
-	 * generate strings of terrain and difficulty information for GC.com-like GPX exports
-	 * @param terrdiff internal terrain or difficulty value
-	 * @return short version of terrain or difficulty (omit .0)
-	 * @throws IllegalArgumentException
-	 */
-	public static String shortDT(final byte terrdiff) throws IllegalArgumentException {
-		switch(terrdiff) {
-		case CW_DT_10: return "1";
-		case CW_DT_15: return "1.5";
-		case CW_DT_20: return "2";
-		case CW_DT_25: return "2.5";
-		case CW_DT_30: return "3";
-		case CW_DT_35: return "3.5";
-		case CW_DT_40: return "4";
-		case CW_DT_45: return "4.5";
-		case CW_DT_50: return "5";
-		case CW_DT_UNSET: return "-1";
-		default: throw new IllegalArgumentException("unmapped terrain or diffulty "+terrdiff);
-		}
-	}
-	
-	/**
-	 * check if a given difficulty or terrain is valid
-	 * takes about 1/20th of the time a try {} catch{} block needs
-	 * so use this function instead
-	 * @param terrdiff terrain or difficulty to check
-	 * @return true if terrain or difficulty is valid, false otherwise
-	 */
-	public static boolean isValidTD(final byte terrdiff) {
-		switch (terrdiff) {
-		case CW_DT_10: return true;
-		case CW_DT_15: return true;
-		case CW_DT_20: return true;
-		case CW_DT_25: return true;
-		case CW_DT_30: return true;
-		case CW_DT_35: return true;
-		case CW_DT_40: return true;
-		case CW_DT_45: return true;
-		case CW_DT_50: return true;
-		case CW_DT_UNSET: return true;
-		default: return false;
-		}
-	}
-}
+???    /*
+    GNU General Public License
+    CacheWolf is a software for PocketPC, Win and Linux that
+    enables paperless caching.
+    It supports the sites geocaching.com and opencaching.de
+
+    Copyright (C) 2006  CacheWolf development team
+    See http://developer.berlios.de/projects/cachewolf/
+    for more information.
+    Contact: 	bilbowolf at users.berlios.de
+    			kalli at users.berlios.de
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; version 2 of the License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+    */
+package CacheWolf;
+
+/**
+ * Handles all aspects of converting terrain and difficulty
+ * informations from legacy file versions and various im-
+ * and exporters
+ * 
+ * Only use the class in a static way, do not instantiate it
+ */
+public final class CacheTerrDiff {
+	
+	/** terrain or difficulty 1.0 */
+	public static final byte CW_DT_10 = 10;
+	/** terrain or difficulty 1.5 */
+	public static final byte CW_DT_15 = 15;
+	/** terrain or difficulty 2.0 */
+	public static final byte CW_DT_20 = 20;
+	/** terrain or difficulty 2.5 */
+	public static final byte CW_DT_25 = 25;
+	/** terrain or difficulty 3.0 */
+	public static final byte CW_DT_30 = 30;
+	/** terrain or difficulty 3.5 */
+	public static final byte CW_DT_35 = 35;
+	/** terrain or difficulty 4.0 */
+	public static final byte CW_DT_40 = 40;
+	/** terrain or difficulty 4.5 */
+	public static final byte CW_DT_45 = 45;
+	/** terrain or difficulty 5.0 */
+	public static final byte CW_DT_50 = 50;
+	/** wrong terrain or difficulty */
+	public static final byte CW_DT_ERROR = -1;
+	/** terrain or difficulty for additional/custom waypoints */
+	public static final byte CW_DT_UNSET = 0;
+
+	private CacheTerrDiff() { 
+		// Nothing to do
+	}
+	
+	/**
+	 * convert "old style" terrain and difficulty information to the new format.
+	 * 
+	 * since it is also used by the importers it is not flagged as depreciated
+	 * @param v1TerrDiff a string representation of terrain or difficulty
+	 * @return internal representation of terrain or difficulty
+	 * @throws IllegalArgumentException if <code>v1TerrDiff</code> can not be mapped
+	 */
+	public static byte v1Converter(String v1TerrDiff) throws IllegalArgumentException {
+		if (v1TerrDiff == null) {
+			throw new IllegalArgumentException("error mapping terrain or difficulty");
+		}
+		v1TerrDiff = v1TerrDiff.replace(',', '.');
+		if (v1TerrDiff.equals("1") || v1TerrDiff.equals("1.0")) { return CW_DT_10; }
+		if (v1TerrDiff.equals("2") || v1TerrDiff.equals("2.0")) { return CW_DT_20; }
+		if (v1TerrDiff.equals("3") || v1TerrDiff.equals("3.0")) { return CW_DT_30; }
+		if (v1TerrDiff.equals("4") || v1TerrDiff.equals("4.0")) { return CW_DT_40; }
+		if (v1TerrDiff.equals("5") || v1TerrDiff.equals("5.0")) { return CW_DT_50; }
+		
+		if (v1TerrDiff.equals("1.5")) { return CW_DT_15; }
+		if (v1TerrDiff.equals("2.5")) { return CW_DT_25; }
+		if (v1TerrDiff.equals("3.5")) { return CW_DT_35; }
+		if (v1TerrDiff.equals("4.5")) { return CW_DT_45; }
+		
+		if (v1TerrDiff.equals("-1")) { return CW_DT_UNSET; }
+		
+		throw new IllegalArgumentException("error mapping terrain or difficulty");
+	}
+	
+	/**
+	 * generate strings of terrain and difficulty for general use
+	 * @param terrdiff internal terrain or difficulty value
+	 * @return long version of terrain or difficulty (including .0)
+	 * @throws IllegalArgumentException
+	 */
+	public static String longDT(final byte terrdiff) throws IllegalArgumentException {
+		switch(terrdiff) {
+		case CW_DT_10: return "1.0";
+		case CW_DT_15: return "1.5";
+		case CW_DT_20: return "2.0";
+		case CW_DT_25: return "2.5";
+		case CW_DT_30: return "3.0";
+		case CW_DT_35: return "3.5";
+		case CW_DT_40: return "4.0";
+		case CW_DT_45: return "4.5";
+		case CW_DT_50: return "5.0";
+		case CW_DT_UNSET: return "-.-";
+		default: throw new IllegalArgumentException("unmapped terrain or diffulty "+terrdiff);
+		}
+	}
+
+	/**
+	 * generate strings of terrain and difficulty information for GC.com-like GPX exports
+	 * @param terrdiff internal terrain or difficulty value
+	 * @return short version of terrain or difficulty (omit .0)
+	 * @throws IllegalArgumentException
+	 */
+	public static String shortDT(final byte terrdiff) throws IllegalArgumentException {
+		switch(terrdiff) {
+		case CW_DT_10: return "1";
+		case CW_DT_15: return "1.5";
+		case CW_DT_20: return "2";
+		case CW_DT_25: return "2.5";
+		case CW_DT_30: return "3";
+		case CW_DT_35: return "3.5";
+		case CW_DT_40: return "4";
+		case CW_DT_45: return "4.5";
+		case CW_DT_50: return "5";
+		case CW_DT_UNSET: return "-1";
+		default: throw new IllegalArgumentException("unmapped terrain or diffulty "+terrdiff);
+		}
+	}
+	
+	/**
+	 * check if a given difficulty or terrain is valid
+	 * takes about 1/20th of the time a try {} catch{} block needs
+	 * so use this function instead
+	 * @param terrdiff terrain or difficulty to check
+	 * @return true if terrain or difficulty is valid, false otherwise
+	 */
+	public static boolean isValidTD(final byte terrdiff) {
+		switch (terrdiff) {
+		case CW_DT_10: return true;
+		case CW_DT_15: return true;
+		case CW_DT_20: return true;
+		case CW_DT_25: return true;
+		case CW_DT_30: return true;
+		case CW_DT_35: return true;
+		case CW_DT_40: return true;
+		case CW_DT_45: return true;
+		case CW_DT_50: return true;
+		case CW_DT_UNSET: return true;
+		default: return false;
+		}
+	}
+}

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/CacheType.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,604 +1,604 @@
-/*
-GNU General Public License
-CacheWolf is a software for PocketPC, Win and Linux that
-enables paperless caching.
-It supports the sites geocaching.com and opencaching.de
-
-Copyright (C) 2006  CacheWolf development team
-See http://developer.berlios.de/projects/cachewolf/
-for more information.
-Contact: 	bilbowolf at users.berlios.de
-			kalli at users.berlios.de
-
-This program is free software; you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation; version 2 of the License.
-
-This program is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
-
-You should have received a copy of the GNU General Public License
-along with this program; if not, write to the Free Software
-Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
- */
-package CacheWolf;
-
-import ewe.fx.Image;
-
-final class CTyp {
-	public byte _cwMappedCType; // CW Cache Typ intern
-	public byte _cwCType; // CW Cache Typ intern
-	public char _cwCGroup; // Cache Typ Group intern
-	public String _cwCTypeV1; // V1 Cache Typ
-	public String _gcCTypeSpider; // GC Type on Spider Import from GC.com
-	public String _ocCTypeXmlImport; // GC Type on Spider Import from GC.com
-	public byte _cwCTypeV2; // V2 Cache Typ
-	public char _gpxShortCType; // Short Typ (one char abbreviation)
-	public String _imageName; // name of imageName for Icon, "showCacheInBrowser" and "KML Export"
-	public String _gpxWptTypeTag; // gpx wpt <type> tag
-	public String _gpxWptSymTag; // gpx wpt <sym> tag
-	public String _gpxWptGCextensionTypTag; // gpx cache extension <groundspeak:type> tag
-	public String _gpxAlternativeWptTypTags; // alternative typ - names for gpx from other sources
-	public int _msgNrCTypeName; // message number for gui cache Typ name
-	public int _GUIOrder; // sort Order in GUI selection //TODO more intelligent implementation (now manually change each line on new one)
-	public int _FilterStringPos; // BitNr in Filter String (profile)
-	public int _FilterPattern; // 2**BitNr in Filter int (does not correspond with BitNr in String)
-	public Image _iconImage;
-	public Image _mapImage;
-	public Image[] _modImage = { null, null, null, null, null, null, null };
-
-	public CTyp(byte cwMappedCType, byte cwCType, char cwCGroup, String cwCTypeV1, String gcCTypeSpider, String ocCTypeXmlImport, byte cwCTypeV2, char gpxShortCType, String imageName, String[] gpx, int msgNrCTypeName, int gUIOrder, int filterStringPos,
-			int filterPattern) {
-
-		_cwMappedCType = cwMappedCType;
-		_cwCType = cwCType;
-		_cwCGroup = cwCGroup;
-		_cwCTypeV1 = cwCTypeV1;
-		_gcCTypeSpider = gcCTypeSpider;
-		_ocCTypeXmlImport = ocCTypeXmlImport;
-		_cwCTypeV2 = cwCTypeV2;
-		_gpxShortCType = gpxShortCType;
-		_imageName = imageName;
-		_gpxWptTypeTag = gpx[0];
-		_gpxWptSymTag = gpx[1];
-		_gpxWptGCextensionTypTag = gpx[2];
-		_gpxAlternativeWptTypTags = gpx[3];
-		_msgNrCTypeName = msgNrCTypeName;
-		_GUIOrder = gUIOrder;
-		_FilterStringPos = filterStringPos;
-		_FilterPattern = filterPattern;
-		if (!_imageName.equals("")) {
-			_iconImage = new Image(_imageName);
-			_mapImage = _iconImage;
-		}
-	}
-}
-
-/**
- * Handles all aspects of converting cache type information
- * from and to the various im- and exporters ...
- * converting legacy profiles to current standard
- *
- * Do not instantiate this class, only use it in a static way
- */
-public final class CacheType {
-
-	/** thou shallst not instantiate this object */
-	private CacheType() {
-		// Nothing to do
-	}
-
-	/** custom waypoint */
-	public static final byte CW_TYPE_CUSTOM = 0;
-	/** traditional cache (GC,OC) */
-	public static final byte CW_TYPE_TRADITIONAL = 2;
-	/** multi cache (GC,OC) */
-	public static final byte CW_TYPE_MULTI = 3;
-	/** virtual cache (GC,OC) */
-	public static final byte CW_TYPE_VIRTUAL = 4;
-	/** letterbox cache (GC) */
-	public static final byte CW_TYPE_LETTERBOX = 5;
-	/** event cache (GC,OC) */
-	public static final byte CW_TYPE_EVENT = 6;
-	/** unknown cache - Mystery (GC) */
-	public static final byte CW_TYPE_UNKNOWN = 8;
-	/** drive in cache (OC) */
-	public static final byte CW_TYPE_DRIVE_IN = 10;
-	/** webcam cache (GC,OC) */
-	public static final byte CW_TYPE_WEBCAM = 11;
-	/** locationless cache (GC) */
-	public static final byte CW_TYPE_LOCATIONLESS = 12;
-	/** CITO cache (GC) */
-	public static final byte CW_TYPE_CITO = 13;
-	/** Mega Event Cache (GC) */
-	public static final byte CW_TYPE_MEGA_EVENT = 100;
-	/** WhereIGo Cache (GC) */
-	public static final byte CW_TYPE_WHEREIGO = 101;
-	/** Earth Cache (GC) */
-	public static final byte CW_TYPE_EARTH = 104;
-	/** Additional Waypoint Parking (GC) */
-	public static final byte CW_TYPE_PARKING = 50;
-	/** Additional Waypoint Stage of a Multi (GC) */
-	public static final byte CW_TYPE_STAGE = 51;
-	/** Additional Waypoint Question to answer (GC) */
-	public static final byte CW_TYPE_QUESTION = 52;
-	/** Additional Waypoint Final (GC) */
-	public static final byte CW_TYPE_FINAL = 53;
-	/** Additional Waypoint Trailhead (GC) */
-	public static final byte CW_TYPE_TRAILHEAD = 54;
-	/** Additional Waypoint Reference (GC) */
-	public static final byte CW_TYPE_REFERENCE = 55;
-	/** unrecognized cache type or missing information */
-	public static final byte CW_TYPE_ERROR = -1;
-	String[] ggpx = { "Geocache|Custom", "Custom", "Custom", "" };
-	private static final byte found = 0;
-	private static final byte archived = 1;
-	private static final byte disabled = 2;
-	private static final byte solved = 3;
-	private static final byte bonus = 4;
-	private static final byte owned = 5;
-	private static final byte dnf = 6;
-	//
-	private static final CTyp[] cTypRef = {
-			// custom waypoints
-			new CTyp(CW_TYPE_CUSTOM, CW_TYPE_CUSTOM, 'P', "0", "", "", (byte) -128, 'C', "typeCustom.png", new String[] { "Geocache|Custom", "Custom", "Custom", "" }, 1, 0, 10, 0x000100),
-			// Cache waypoints
-			new CTyp(CW_TYPE_TRADITIONAL, CW_TYPE_TRADITIONAL, 'C', "2", "2", "2", (byte) -126, 'T', "typeTradi.png", new String[] { "Geocache|Traditional Cache", "Geocache", "Traditional Cache", "Traditional|Classic" }, 2, 1, 0, 0x000001),
-			new CTyp(CW_TYPE_MULTI, CW_TYPE_MULTI, 'C', "3", "3", "3", (byte) -125, 'M', "typeMulti.png", new String[] { "Geocache|Multi-cache", "Geocache", "Multi-cache", "Multi|Offset" }, 3, 2, 1, 0x000002),
-			new CTyp(CW_TYPE_VIRTUAL, CW_TYPE_VIRTUAL, 'C', "4", "4", "4", (byte) -124, 'V', "typeVirtual.png", new String[] { "Geocache|Virtual Cache", "Geocache", "Virtual Cache", "Virtual" }, 4, 3, 2, 0x000004),
-			new CTyp(CW_TYPE_LETTERBOX, CW_TYPE_LETTERBOX, 'C', "5", "5", "", (byte) -123, 'L', "typeLetterbox.png", new String[] { "Geocache|Letterbox Hybrid", "Geocache", "Letterbox Hybrid", "Letterbox" }, 5, 4, 3, 0x000008),
-			new CTyp(CW_TYPE_EVENT, CW_TYPE_EVENT, 'C', "6", "6", "6", (byte) -122, 'X', "typeEvent.png", new String[] { "Geocache|Event Cache", "Geocache", "Event Cache", "Event" }, 6, 5, 4, 0x000010),
-			new CTyp(CW_TYPE_MEGA_EVENT, CW_TYPE_MEGA_EVENT, 'C', "453", "453", "", (byte) 101, 'X', "typeMegaevent.png", new String[] { "Geocache|Mega-Event Cache", "Geocache", "Mega-Event Cache", "Mega" }, 14, 6, 9, 0x000200),
-			new CTyp(CW_TYPE_WEBCAM, CW_TYPE_WEBCAM, 'C', "11", "11", "5", (byte) -117, 'W', "typeWebcam.png", new String[] { "Geocache|Webcam Cache", "Geocache", "Webcam Cache", "Webcam" }, 11, 7, 5, 0x000020),
-			new CTyp(CW_TYPE_UNKNOWN, CW_TYPE_UNKNOWN, 'C', "8", "8", "", (byte) -120, 'U', "typeUnknown.png", new String[] { "Geocache|Unknown Cache", "Geocache", "Unknown Cache", "Mystery" }, 8, 8, 6, 0x000040),
-			new CTyp(CW_TYPE_LOCATIONLESS, CW_TYPE_LOCATIONLESS, 'C', "12", "12", "", (byte) -116, 'O', "typeLocless.png", new String[] { "Geocache|Locationless (Reverse) Cache", "Geocache", "Locationless (Reverse) Cache", "Locationless" }, 12, 9, 8,
-					0x000080),
-			new CTyp(CW_TYPE_CITO, CW_TYPE_CITO, 'C', "13", "13", "", (byte) -115, 'X', "typeCito.png", new String[] { "Geocache|Cache In Trash Out Event", "Geocache", "Cache In Trash Out Event", "CITO" }, 13, 10, 17, 0x020000),
-			new CTyp(CW_TYPE_EARTH, CW_TYPE_EARTH, 'C', "137", "137", "", (byte) 9, 'E', "typeEarth.png", new String[] { "Geocache|Earthcache", "Geocache", "Earthcache", "Earth" }, 18, 11, 7, 0x000400),
-			new CTyp(CW_TYPE_WHEREIGO, CW_TYPE_WHEREIGO, 'C', "1858", "1858", "", (byte) 100, 'G', "typeWhereigo.png", new String[] { "Geocache|Wherigo Cache", "Geocache", "Wherigo Cache", "Wherigo" }, 15, 12, 18, 0x040000),
-			// additional waypoints
-			new CTyp(CW_TYPE_PARKING, CW_TYPE_PARKING, 'A', "50", "", "", (byte) -78, 'P', "typeParking.png", new String[] { "Waypoint|Parking Area", "Parking Area", "Parking Area", "" }, 50, 13, 11, 0x000800),
-			new CTyp(CW_TYPE_STAGE, CW_TYPE_STAGE, 'A', "51", "", "", (byte) -77, 'S', "typeStage.png", new String[] { "Waypoint|Stages of a Multicache", "Stages of a Multicache", "Stages of a Multicache", "" }, 51, 14, 12, 0x001000),
-			new CTyp(CW_TYPE_QUESTION, CW_TYPE_QUESTION, 'A', "52", "", "", (byte) -76, 'Q', "typeQuestion.png", new String[] { "Waypoint|Question to Answer", "Question to Answer", "Question to Answer", "" }, 52, 15, 13, 0x002000),
-			new CTyp(CW_TYPE_FINAL, CW_TYPE_FINAL, 'A', "53", "", "", (byte) -75, 'F', "typeFinal.png", new String[] { "Waypoint|Final Location", "Final Location", "Final Location", "" }, 53, 16, 14, 0x004000),
-			new CTyp(CW_TYPE_TRAILHEAD, CW_TYPE_TRAILHEAD, 'A', "54", "", "", (byte) -74, 'H', "typeTrailhead.png", new String[] { "Waypoint|Trailhead", "Trailhead", "Trailhead", "" }, 54, 17, 15, 0x008000),
-			new CTyp(CW_TYPE_REFERENCE, CW_TYPE_REFERENCE, 'A', "55", "", "", (byte) -73, 'R', "typeReference.png", new String[] { "Waypoint|Reference Point", "Reference Point", "Reference Point", "" }, 55, 18, 16, 0x010000),
-			// error on waypoint
-			new CTyp(CW_TYPE_ERROR, CW_TYPE_ERROR, 'E', "", "", "", (byte) -1, '-', "guiError.png", new String[] { "", "", "", "" }, 49, -1, -1, 0),
-			// mapped types (recognized on input from gpx or download-spider / or cw - version)
-			new CTyp(CW_TYPE_UNKNOWN, (byte) 1, 'C', "", "", "1", (byte) -1, 'U', "", new String[] { "Geocache|Other", "Geocache", "Other", "Other" }, 21, -1, -1, 0),
-			new CTyp(CW_TYPE_UNKNOWN, (byte) 7, 'C', "7", "", "7", (byte) -121, 'U', "", new String[] { "Geocache|Quiz", "Geocache", "Quiz", "Quiz" }, 7, -1, -1, 0),
-			new CTyp(CW_TYPE_UNKNOWN, (byte) 9, 'C', "9", "", "9", (byte) -119, 'U', "", new String[] { "Geocache|Moving", "Geocache", "Moving", "Moving" }, 9, -1, -1, 0),
-			new CTyp(CW_TYPE_TRADITIONAL, (byte) 10, 'C', "10", "", "10", (byte) -118, 'U', "", new String[] { "Geocache|DriveIn", "Geocache", "DriveIn", "DriveIn" }, 10, -1, -1, 0),
-			new CTyp(CW_TYPE_EVENT, (byte) 14, 'C', "", "3653", "", (byte) -1, 'X', "", new String[] { "Geocache|Lost and Found Event Cache", "Geocache", "Lost and Found Event Cache", "" }, 6, -1, -1, 0),
-			new CTyp(CW_TYPE_TRADITIONAL, (byte) 102, 'C', "", "9", "", (byte) -1, 'T', "", new String[] { "Geocache|Project APE Cache", "Geocache", "Project APE Cache", "APE" }, 16, -1, -1, 0),
-			new CTyp(CW_TYPE_EVENT, (byte) 103, 'C', "", "1304", "", (byte) -1, 'X', "", new String[] { "Geocache|GPS Adventures Exhibit", "Geocache", "GPS Adventures Exhibit", "MAZE" }, 17, -1, -1, 0),
-			new CTyp(CW_TYPE_UNKNOWN, (byte) 108, 'C', "", "", "8", (byte) -1, 'U', "", new String[] { "only on OC download", "", "", "" }, 19, -1, -1, 0),
-			new CTyp(CW_TYPE_WHEREIGO, (byte) 15, 'C', "", "", "", (byte) -62, 'G', "", new String[] { "Hack for V2 Typ", "", "", "" }, -1, -1, -1, 0), };
-	// public static final int anzCacheTyps=cTypRef.length;
-	public static final byte maxCWCType = 110;
-	static final byte[] Ref_Index = new byte[maxCWCType];
-	static {
-		// +1 cause error is -1 and array starts at 0
-		for (byte i = (byte) (cTypRef.length - 1); i >= 0; i--) {
-			Ref_Index[1 + cTypRef[i]._cwCType] = i;
-		}
-	}
-
-	public static byte Ref_Index(final byte type) {
-		final byte ret = Ref_Index[cTypRef[Ref_Index[type + 1]]._cwMappedCType + 1];
-		return ret;
-	}
-
-	/**
-	 * check if a given waypoint type is an additional waypoint
-	 *
-	 * @param type
-	 *            waypoint type to check
-	 * @return true if it is an additional waypoint, false otherwise
-	 */
-	public static boolean isAddiWpt(final byte type) {
-		return cTypRef[Ref_Index(type)]._cwCGroup == 'A';
-	}
-
-	/**
-	 * check if a given waypoint type is an cache waypoint
-	 *
-	 * @param type
-	 *            waypoint type to check
-	 * @return true if it is an Cache waypoint, false otherwise
-	 */
-	public static boolean isCacheWpt(final byte type) {
-		return cTypRef[Ref_Index(type)]._cwCGroup == 'C';
-	}
-
-	/**
-	 * check if a given waypoint type is an Custom waypoint
-	 *
-	 * @param type
-	 *            waypoint type to check
-	 * @return true if it is an Custom waypint, false otherwise
-	 */
-	public static boolean isCustomWpt(final byte type) {
-		return cTypRef[Ref_Index(type)]._cwCGroup == 'P';
-	}
-
-	// done for DetailsPanel.java and KML- and TomTom-Exporter
-	/**
-	 * create list of cache types to be shown in GUI drop down lists
-	 *
-	 * @return list of cache types to be shown in GUI drop down list
-	 * @see guiSelect2Cw
-	 * @see cw2GuiSelect
-	 */
-	public static String[] guiTypeStrings() {
-		int j = 0;
-		for (int i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._GUIOrder > j) {
-				j = cTypRef[i]._GUIOrder;
-			}
-		}
-		final String[] ret = new String[j + 1];
-		for (int i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._GUIOrder > -1) {
-				ret[cTypRef[i]._GUIOrder] = MyLocale.getMsg(cTypRef[i]._msgNrCTypeName, "");
-			}
-		}
-		return ret;
-	}
-
-	/**
-	 * translate GUI drop down index selection back to internally stored type
-	 *
-	 * @param selection
-	 *            index value from drop down list
-	 * @return internal type
-	 * @throws IllegalArgumentException
-	 *             if <code>selection</code> can not be matched
-	 * @see guiTypeStrings
-	 * @see cw2GuiSelect
-	 */
-	public static byte guiSelect2Cw(final int selection) {
-		for (byte i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._GUIOrder == selection) {
-				return cTypRef[i]._cwCType;
-			}
-			;
-		}
-		return -1;
-	}
-
-	/**
-	 * translate cache type to position of index to highlight in GUI cache type drop down list
-	 *
-	 * @param typeId
-	 *            internal id of cache type
-	 * @return index of the cache type in GUI list
-	 * @throws IllegalArgumentException
-	 *             if <code>id</code> can not be matched
-	 * @see guiTypeStrings
-	 * @see guiSelect2Cw
-	 */
-	public static int cw2GuiSelect(final byte typeId) {
-		return cTypRef[Ref_Index(typeId)]._GUIOrder;
-	}
-
-	/**
-	 * convert the strings found in import of GPX from GC, OC or TC to internal cache type
-	 *
-	 * @param gpxType
-	 *            type information found in GPX
-	 * @return internal cache type
-	 */
-	public static byte gpxType2CwType(final String gpxType) throws IllegalArgumentException {
-		for (byte i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._gpxWptTypeTag.equalsIgnoreCase(gpxType)) {
-				return cTypRef[i]._cwMappedCType;
-			}
-			;
-		}
-		for (byte i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._gpxWptGCextensionTypTag.equalsIgnoreCase(gpxType)) {
-				return cTypRef[i]._cwMappedCType;
-			}
-			;
-		}
-		final String lowerCaseGPXType = gpxType.toLowerCase();
-		for (byte i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._gpxAlternativeWptTypTags.toLowerCase().indexOf(lowerCaseGPXType) != -1) {
-				return cTypRef[i]._cwMappedCType;
-			}
-			;
-		}
-		// TODO extend definition of _gpxAlternativeWptTypTags for all cases of Mystery
-		// old code was : if (!(gpxType.indexOf("Mystery")==-1)) return CW_TYPE_UNKNOWN;
-		return -1;
-	}
-
-	/**
-	 * convert the cache type information from an OC XML import to internal cache type
-	 *
-	 * @param ocType
-	 *            cache type found in OC XML
-	 * @return internal cache type
-	 * @throws IllegalArgumentException
-	 *             if <code>ocType</code> can not be matched
-	 */
-	public static byte ocType2CwType(final String ocType) {
-		for (int i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._ocCTypeXmlImport.equals(ocType)) {
-				return cTypRef[i]._cwMappedCType;
-			}
-		}
-		return -1;
-	}
-
-	/**
-	 * convert type information discovered by GC spider to internal type information
-	 *
-	 * @param gcType
-	 *            type information from GC spider
-	 * @return internal representation of cache type
-	 * @throws IllegalArgumentException
-	 *             if <code>gcType</code> can not be matched
-	 */
-	public static byte gcSpider2CwType(final String gcType) {
-		for (int i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._gcCTypeSpider.equals(gcType)) {
-				return cTypRef[i]._cwMappedCType;
-			}
-		}
-		return -1;
-	}
-
-	/**
-	 * convert version1 type information to current values
-	 *
-	 * @param type
-	 *            version1 cache type information
-	 * @return current version cache type information or -1
-	 * @deprecated remove once v1 file version compatibility is abandoned
-	 */
-	public static byte v1Converter(final String type) {
-		for (int i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._cwCTypeV1.equals(type)) {
-				return cTypRef[i]._cwMappedCType;
-			}
-		}
-		return -1;
-	}
-
-	/**
-	 * convert version2 type information to current values
-	 *
-	 * @param type
-	 *            version2 cache type information
-	 * @return current version cache type information or -1
-	 * @deprecated remove once v2 file version compatibility is abandoned
-	 */
-	public static byte v2Converter(final byte type) {
-		for (int i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._cwCTypeV2 == type) {
-				return cTypRef[i]._cwMappedCType;
-			}
-		}
-		return -1;
-	}
-
-	/**
-	 * translate cache type to a short version for compact exporters or "smart" cache names.
-	 *
-	 * @param typeId
-	 *            CacheWolf internal type information
-	 * @return abbreviation of cache type
-	 */
-	public static String getExportShortId(final byte typeId) {
-		return "" + cTypRef[Ref_Index(typeId)]._gpxShortCType;
-	}
-
-	/**
-	 * map cache types to images
-	 *
-	 * @param typeId
-	 *            internal cache type id
-	 * @return non qualified name of image
-	 */
-	public static String typeImageForId(final byte typeId) {
-		return cTypRef[Ref_Index(typeId)]._imageName;
-	}
-
-	/**
-	 * generate type description matching those of GC for GPX export
-	 *
-	 * @param typeId
-	 *            internal type id
-	 * @return type information in GC.com <type> GPX format
-	 */
-	public static String type2TypeTag(final byte typeId) {
-		return cTypRef[Ref_Index(typeId)]._gpxWptTypeTag;
-	}
-
-	/**
-	 * generate type description matching those of GC for GPX export
-	 *
-	 * @param typeId
-	 *            internal type id
-	 * @return symb information in GC.com <sym> GPX format
-	 */
-	public static String type2SymTag(final byte typeId) {
-		return cTypRef[Ref_Index(typeId)]._gpxWptSymTag;
-	}
-
-	/**
-	 * generate type description matching those of GC for GPX export
-	 *
-	 * @param typeId
-	 *            internal type id
-	 * @return type information in GC.com <groundspeak:type> GPX format
-	 */
-	public static String type2GSTypeTag(final byte typeId) {
-		return cTypRef[Ref_Index(typeId)]._gpxWptGCextensionTypTag;
-	}
-
-	/**
-	 * generate type description matching those of GC for GPX export
-	 *
-	 * @param typeId
-	 *            internal type id
-	 * @return Gui - string for type
-	 */
-	public static String type2Gui(final byte typeId) {
-		return MyLocale.getMsg(cTypRef[Ref_Index(typeId)]._msgNrCTypeName, "");
-	}
-
-	/**
-	 * select image to be displayed for a given cache type
-	 *
-	 * @param typeId
-	 *            internal cache type id
-	 * @return <code>Image</code> object to be displayed
-	 */
-	public static Image getTypeImage(final byte typeId) {
-		return cTypRef[Ref_Index(typeId)]._iconImage;
-	}
-
-	/**
-	 * select image to be displayed for a given cache type
-	 *
-	 * @param typeId
-	 *            internal cache type id
-	 * @return <code>Image</code> object to be displayed
-	 */
-	public static Image getMapImage(CacheHolder ch) {
-		byte typeId = ch.getType();
-		Image im = cTypRef[Ref_Index(typeId)]._mapImage;
-		if (ch.is_found()) {
-			if (cTypRef[Ref_Index(typeId)]._modImage[found] == null) {
-				cTypRef[Ref_Index(typeId)]._modImage[found] = newOverlayedImage(im, GuiImageBroker.found);
-			}
-			im = cTypRef[Ref_Index(typeId)]._modImage[found];
-		} else if (ch.is_archived()) {
-			if (cTypRef[Ref_Index(typeId)]._modImage[archived] == null) {
-				cTypRef[Ref_Index(typeId)]._modImage[archived] = newOverlayedImage(im, GuiImageBroker.archived);
-			}
-			im = cTypRef[Ref_Index(typeId)]._modImage[archived];
-		} else if (!ch.is_available()) {
-			if (cTypRef[Ref_Index(typeId)]._modImage[disabled] == null) {
-				cTypRef[Ref_Index(typeId)]._modImage[disabled] = newOverlayedImage(im, GuiImageBroker.disabled);
-			}
-			im = cTypRef[Ref_Index(typeId)]._modImage[disabled];
-		} else if (ch.is_owned()) {
-			if (cTypRef[Ref_Index(typeId)]._modImage[owned] == null) {
-				cTypRef[Ref_Index(typeId)]._modImage[owned] = newOverlayedImage(im, GuiImageBroker.owned);
-			}
-			im = cTypRef[Ref_Index(typeId)]._modImage[owned];
-		} else if (ch.getCacheStatus().startsWith(MyLocale.getMsg(362, "solved"))) {
-			if (cTypRef[Ref_Index(typeId)]._modImage[solved] == null) {
-				cTypRef[Ref_Index(typeId)]._modImage[solved] = newOverlayedImage(im, GuiImageBroker.solved);
-			}
-			im = cTypRef[Ref_Index(typeId)]._modImage[solved];
-		} else if (ch.getCacheStatus().indexOf(MyLocale.getMsg(319, "Not Found")) > -1) {
-			if (cTypRef[Ref_Index(typeId)]._modImage[dnf] == null) {
-				cTypRef[Ref_Index(typeId)]._modImage[dnf] = newOverlayedImage(im, GuiImageBroker.dnf);
-			}
-			im = cTypRef[Ref_Index(typeId)]._modImage[dnf];
-		} else if (ch.getCacheName().toLowerCase().indexOf("bonus") > -1) {
-			if (cTypRef[Ref_Index(typeId)]._modImage[bonus] == null) {
-				cTypRef[Ref_Index(typeId)]._modImage[bonus] = newOverlayedImage(im, GuiImageBroker.bonus);
-			}
-			im = cTypRef[Ref_Index(typeId)]._modImage[bonus];
-		}
-		return im;
-	}
-
-	/**
-	 * select image to be displayed for a given cache type
-	 *
-	 * @param typeId
-	 *            internal cache type id
-	 * @param Image
-	 *            object to be displayed
-	 */
-	public static void setTypeImage(final byte id, final Image iconImage) {
-		if (cTypRef[Ref_Index(id)]._iconImage != cTypRef[Ref_Index(id)]._mapImage)
-			cTypRef[Ref_Index(id)]._iconImage.free();
-		cTypRef[Ref_Index(id)]._iconImage = iconImage;
-	}
-
-	/**
-	 * select image to be displayed for a given cache type
-	 *
-	 * @param typeId
-	 *            internal cache type id
-	 * @param Image
-	 *            object to be displayed
-	 */
-	public static void setMapImage(final byte id, final Image mapImage) {
-		if (cTypRef[Ref_Index(id)]._iconImage != cTypRef[Ref_Index(id)]._mapImage)
-			cTypRef[Ref_Index(id)]._mapImage.free();
-		cTypRef[Ref_Index(id)]._mapImage = mapImage;
-	}
-
-	// TODO do it better in Version 4
-	public static int getCacheTypePattern(final byte typeId) {
-		return cTypRef[Ref_Index(typeId)]._FilterPattern;
-	}
-
-	public static int Type_FilterString2Type_FilterPattern(final String Type_FilterString) {
-		int typeMatchPattern = 0;
-		for (int i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._FilterStringPos > -1) {
-				if (Type_FilterString.charAt(cTypRef[i]._FilterStringPos) == '1') {
-					typeMatchPattern |= cTypRef[i]._FilterPattern;
-				}
-			}
-		}
-		return typeMatchPattern;
-	}
-
-	public static boolean hasTypeMatchPattern(final int typeMatchPattern) {
-		return typeMatchPattern != 0;
-	}
-
-	public static boolean hasMainTypeMatchPattern(final int typeMatchPattern) {
-		int TYPE_MAIN = 0;
-		for (int i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._cwCGroup == 'C' || cTypRef[i]._cwCGroup == 'P') {
-				TYPE_MAIN |= cTypRef[i]._FilterPattern;
-			}
-		}
-		return (typeMatchPattern & TYPE_MAIN) != 0;
-	}
-
-	private static Image newOverlayedImage(Image imsrc, Image imovl) {
-		// Overlay added at topleft
-		int srcWidth = imsrc.getWidth();
-		int srcHeight = imsrc.getHeight();
-		int ovlWidth = imovl.getWidth();
-		int ovlHeight = imovl.getHeight();
-		if (srcWidth < ovlWidth || srcHeight < ovlHeight)
-			return imsrc;
-		int[] srcPixels = imsrc.getPixels(null, 0, 0, 0, srcWidth, srcHeight, 0);
-		int[] ovlPixels = imovl.getPixels(null, 0, 0, 0, ovlWidth, ovlHeight, 0);
-		int offsrc;
-		int offovl = 0;
-		for (int y = 0; y < ovlHeight; y++) { // top down
-			offsrc = y * srcWidth;
-			for (int x = 0; x < ovlWidth; x++) {
-				int alphaval = (ovlPixels[offovl] >> 24) & 0xff;
-				if (alphaval > 0) {
-					srcPixels[offsrc] = ovlPixels[offovl];
-				}
-				offovl++;
-				offsrc++;
-			}
-		}
-		Image modImage = new Image(imsrc, 0);
-		modImage.setPixels(srcPixels, 0, 0, 0, srcWidth, srcHeight, 0);
-		return modImage;
-	}
-
-	// TODO it for OCXMLImporterScreen and FilterScreen ?
-}
+???/*
+GNU General Public License
+CacheWolf is a software for PocketPC, Win and Linux that
+enables paperless caching.
+It supports the sites geocaching.com and opencaching.de
+
+Copyright (C) 2006  CacheWolf development team
+See http://developer.berlios.de/projects/cachewolf/
+for more information.
+Contact: 	bilbowolf at users.berlios.de
+			kalli at users.berlios.de
+
+This program is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; version 2 of the License.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program; if not, write to the Free Software
+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+package CacheWolf;
+
+import ewe.fx.Image;
+
+final class CTyp {
+	public byte _cwMappedCType; // CW Cache Typ intern
+	public byte _cwCType; // CW Cache Typ intern
+	public char _cwCGroup; // Cache Typ Group intern
+	public String _cwCTypeV1; // V1 Cache Typ
+	public String _gcCTypeSpider; // GC Type on Spider Import from GC.com
+	public String _ocCTypeXmlImport; // GC Type on Spider Import from GC.com
+	public byte _cwCTypeV2; // V2 Cache Typ
+	public char _gpxShortCType; // Short Typ (one char abbreviation)
+	public String _imageName; // name of imageName for Icon, "showCacheInBrowser" and "KML Export"
+	public String _gpxWptTypeTag; // gpx wpt <type> tag
+	public String _gpxWptSymTag; // gpx wpt <sym> tag
+	public String _gpxWptGCextensionTypTag; // gpx cache extension <groundspeak:type> tag
+	public String _gpxAlternativeWptTypTags; // alternative typ - names for gpx from other sources
+	public int _msgNrCTypeName; // message number for gui cache Typ name
+	public int _GUIOrder; // sort Order in GUI selection //TODO more intelligent implementation (now manually change each line on new one)
+	public int _FilterStringPos; // BitNr in Filter String (profile)
+	public int _FilterPattern; // 2**BitNr in Filter int (does not correspond with BitNr in String)
+	public Image _iconImage;
+	public Image _mapImage;
+	public Image[] _modImage = { null, null, null, null, null, null, null };
+
+	public CTyp(byte cwMappedCType, byte cwCType, char cwCGroup, String cwCTypeV1, String gcCTypeSpider, String ocCTypeXmlImport, byte cwCTypeV2, char gpxShortCType, String imageName, String[] gpx, int msgNrCTypeName, int gUIOrder, int filterStringPos,
+			int filterPattern) {
+
+		_cwMappedCType = cwMappedCType;
+		_cwCType = cwCType;
+		_cwCGroup = cwCGroup;
+		_cwCTypeV1 = cwCTypeV1;
+		_gcCTypeSpider = gcCTypeSpider;
+		_ocCTypeXmlImport = ocCTypeXmlImport;
+		_cwCTypeV2 = cwCTypeV2;
+		_gpxShortCType = gpxShortCType;
+		_imageName = imageName;
+		_gpxWptTypeTag = gpx[0];
+		_gpxWptSymTag = gpx[1];
+		_gpxWptGCextensionTypTag = gpx[2];
+		_gpxAlternativeWptTypTags = gpx[3];
+		_msgNrCTypeName = msgNrCTypeName;
+		_GUIOrder = gUIOrder;
+		_FilterStringPos = filterStringPos;
+		_FilterPattern = filterPattern;
+		if (!_imageName.equals("")) {
+			_iconImage = new Image(_imageName);
+			_mapImage = _iconImage;
+		}
+	}
+}
+
+/**
+ * Handles all aspects of converting cache type information
+ * from and to the various im- and exporters ...
+ * converting legacy profiles to current standard
+ *
+ * Do not instantiate this class, only use it in a static way
+ */
+public final class CacheType {
+
+	/** thou shallst not instantiate this object */
+	private CacheType() {
+		// Nothing to do
+	}
+
+	/** custom waypoint */
+	public static final byte CW_TYPE_CUSTOM = 0;
+	/** traditional cache (GC,OC) */
+	public static final byte CW_TYPE_TRADITIONAL = 2;
+	/** multi cache (GC,OC) */
+	public static final byte CW_TYPE_MULTI = 3;
+	/** virtual cache (GC,OC) */
+	public static final byte CW_TYPE_VIRTUAL = 4;
+	/** letterbox cache (GC) */
+	public static final byte CW_TYPE_LETTERBOX = 5;
+	/** event cache (GC,OC) */
+	public static final byte CW_TYPE_EVENT = 6;
+	/** unknown cache - Mystery (GC) */
+	public static final byte CW_TYPE_UNKNOWN = 8;
+	/** drive in cache (OC) */
+	public static final byte CW_TYPE_DRIVE_IN = 10;
+	/** webcam cache (GC,OC) */
+	public static final byte CW_TYPE_WEBCAM = 11;
+	/** locationless cache (GC) */
+	public static final byte CW_TYPE_LOCATIONLESS = 12;
+	/** CITO cache (GC) */
+	public static final byte CW_TYPE_CITO = 13;
+	/** Mega Event Cache (GC) */
+	public static final byte CW_TYPE_MEGA_EVENT = 100;
+	/** WhereIGo Cache (GC) */
+	public static final byte CW_TYPE_WHEREIGO = 101;
+	/** Earth Cache (GC) */
+	public static final byte CW_TYPE_EARTH = 104;
+	/** Additional Waypoint Parking (GC) */
+	public static final byte CW_TYPE_PARKING = 50;
+	/** Additional Waypoint Stage of a Multi (GC) */
+	public static final byte CW_TYPE_STAGE = 51;
+	/** Additional Waypoint Question to answer (GC) */
+	public static final byte CW_TYPE_QUESTION = 52;
+	/** Additional Waypoint Final (GC) */
+	public static final byte CW_TYPE_FINAL = 53;
+	/** Additional Waypoint Trailhead (GC) */
+	public static final byte CW_TYPE_TRAILHEAD = 54;
+	/** Additional Waypoint Reference (GC) */
+	public static final byte CW_TYPE_REFERENCE = 55;
+	/** unrecognized cache type or missing information */
+	public static final byte CW_TYPE_ERROR = -1;
+	String[] ggpx = { "Geocache|Custom", "Custom", "Custom", "" };
+	private static final byte found = 0;
+	private static final byte archived = 1;
+	private static final byte disabled = 2;
+	private static final byte solved = 3;
+	private static final byte bonus = 4;
+	private static final byte owned = 5;
+	private static final byte dnf = 6;
+	//
+	private static final CTyp[] cTypRef = {
+			// custom waypoints
+			new CTyp(CW_TYPE_CUSTOM, CW_TYPE_CUSTOM, 'P', "0", "", "", (byte) -128, 'C', "typeCustom.png", new String[] { "Geocache|Custom", "Custom", "Custom", "" }, 1, 0, 10, 0x000100),
+			// Cache waypoints
+			new CTyp(CW_TYPE_TRADITIONAL, CW_TYPE_TRADITIONAL, 'C', "2", "2", "2", (byte) -126, 'T', "typeTradi.png", new String[] { "Geocache|Traditional Cache", "Geocache", "Traditional Cache", "Traditional|Classic" }, 2, 1, 0, 0x000001),
+			new CTyp(CW_TYPE_MULTI, CW_TYPE_MULTI, 'C', "3", "3", "3", (byte) -125, 'M', "typeMulti.png", new String[] { "Geocache|Multi-cache", "Geocache", "Multi-cache", "Multi|Offset" }, 3, 2, 1, 0x000002),
+			new CTyp(CW_TYPE_VIRTUAL, CW_TYPE_VIRTUAL, 'C', "4", "4", "4", (byte) -124, 'V', "typeVirtual.png", new String[] { "Geocache|Virtual Cache", "Geocache", "Virtual Cache", "Virtual" }, 4, 3, 2, 0x000004),
+			new CTyp(CW_TYPE_LETTERBOX, CW_TYPE_LETTERBOX, 'C', "5", "5", "", (byte) -123, 'L', "typeLetterbox.png", new String[] { "Geocache|Letterbox Hybrid", "Geocache", "Letterbox Hybrid", "Letterbox" }, 5, 4, 3, 0x000008),
+			new CTyp(CW_TYPE_EVENT, CW_TYPE_EVENT, 'C', "6", "6", "6", (byte) -122, 'X', "typeEvent.png", new String[] { "Geocache|Event Cache", "Geocache", "Event Cache", "Event" }, 6, 5, 4, 0x000010),
+			new CTyp(CW_TYPE_MEGA_EVENT, CW_TYPE_MEGA_EVENT, 'C', "453", "453", "", (byte) 101, 'X', "typeMegaevent.png", new String[] { "Geocache|Mega-Event Cache", "Geocache", "Mega-Event Cache", "Mega" }, 14, 6, 9, 0x000200),
+			new CTyp(CW_TYPE_WEBCAM, CW_TYPE_WEBCAM, 'C', "11", "11", "5", (byte) -117, 'W', "typeWebcam.png", new String[] { "Geocache|Webcam Cache", "Geocache", "Webcam Cache", "Webcam" }, 11, 7, 5, 0x000020),
+			new CTyp(CW_TYPE_UNKNOWN, CW_TYPE_UNKNOWN, 'C', "8", "8", "", (byte) -120, 'U', "typeUnknown.png", new String[] { "Geocache|Unknown Cache", "Geocache", "Unknown Cache", "Mystery" }, 8, 8, 6, 0x000040),
+			new CTyp(CW_TYPE_LOCATIONLESS, CW_TYPE_LOCATIONLESS, 'C', "12", "12", "", (byte) -116, 'O', "typeLocless.png", new String[] { "Geocache|Locationless (Reverse) Cache", "Geocache", "Locationless (Reverse) Cache", "Locationless" }, 12, 9, 8,
+					0x000080),
+			new CTyp(CW_TYPE_CITO, CW_TYPE_CITO, 'C', "13", "13", "", (byte) -115, 'X', "typeCito.png", new String[] { "Geocache|Cache In Trash Out Event", "Geocache", "Cache In Trash Out Event", "CITO" }, 13, 10, 17, 0x020000),
+			new CTyp(CW_TYPE_EARTH, CW_TYPE_EARTH, 'C', "137", "137", "", (byte) 9, 'E', "typeEarth.png", new String[] { "Geocache|Earthcache", "Geocache", "Earthcache", "Earth" }, 18, 11, 7, 0x000400),
+			new CTyp(CW_TYPE_WHEREIGO, CW_TYPE_WHEREIGO, 'C', "1858", "1858", "", (byte) 100, 'G', "typeWhereigo.png", new String[] { "Geocache|Wherigo Cache", "Geocache", "Wherigo Cache", "Wherigo" }, 15, 12, 18, 0x040000),
+			// additional waypoints
+			new CTyp(CW_TYPE_PARKING, CW_TYPE_PARKING, 'A', "50", "", "", (byte) -78, 'P', "typeParking.png", new String[] { "Waypoint|Parking Area", "Parking Area", "Parking Area", "" }, 50, 13, 11, 0x000800),
+			new CTyp(CW_TYPE_STAGE, CW_TYPE_STAGE, 'A', "51", "", "", (byte) -77, 'S', "typeStage.png", new String[] { "Waypoint|Stages of a Multicache", "Stages of a Multicache", "Stages of a Multicache", "" }, 51, 14, 12, 0x001000),
+			new CTyp(CW_TYPE_QUESTION, CW_TYPE_QUESTION, 'A', "52", "", "", (byte) -76, 'Q', "typeQuestion.png", new String[] { "Waypoint|Question to Answer", "Question to Answer", "Question to Answer", "" }, 52, 15, 13, 0x002000),
+			new CTyp(CW_TYPE_FINAL, CW_TYPE_FINAL, 'A', "53", "", "", (byte) -75, 'F', "typeFinal.png", new String[] { "Waypoint|Final Location", "Final Location", "Final Location", "" }, 53, 16, 14, 0x004000),
+			new CTyp(CW_TYPE_TRAILHEAD, CW_TYPE_TRAILHEAD, 'A', "54", "", "", (byte) -74, 'H', "typeTrailhead.png", new String[] { "Waypoint|Trailhead", "Trailhead", "Trailhead", "" }, 54, 17, 15, 0x008000),
+			new CTyp(CW_TYPE_REFERENCE, CW_TYPE_REFERENCE, 'A', "55", "", "", (byte) -73, 'R', "typeReference.png", new String[] { "Waypoint|Reference Point", "Reference Point", "Reference Point", "" }, 55, 18, 16, 0x010000),
+			// error on waypoint
+			new CTyp(CW_TYPE_ERROR, CW_TYPE_ERROR, 'E', "", "", "", (byte) -1, '-', "guiError.png", new String[] { "", "", "", "" }, 49, -1, -1, 0),
+			// mapped types (recognized on input from gpx or download-spider / or cw - version)
+			new CTyp(CW_TYPE_UNKNOWN, (byte) 1, 'C', "", "", "1", (byte) -1, 'U', "", new String[] { "Geocache|Other", "Geocache", "Other", "Other" }, 21, -1, -1, 0),
+			new CTyp(CW_TYPE_UNKNOWN, (byte) 7, 'C', "7", "", "7", (byte) -121, 'U', "", new String[] { "Geocache|Quiz", "Geocache", "Quiz", "Quiz" }, 7, -1, -1, 0),
+			new CTyp(CW_TYPE_UNKNOWN, (byte) 9, 'C', "9", "", "9", (byte) -119, 'U', "", new String[] { "Geocache|Moving", "Geocache", "Moving", "Moving" }, 9, -1, -1, 0),
+			new CTyp(CW_TYPE_TRADITIONAL, (byte) 10, 'C', "10", "", "10", (byte) -118, 'U', "", new String[] { "Geocache|DriveIn", "Geocache", "DriveIn", "DriveIn" }, 10, -1, -1, 0),
+			new CTyp(CW_TYPE_EVENT, (byte) 14, 'C', "", "3653", "", (byte) -1, 'X', "", new String[] { "Geocache|Lost and Found Event Cache", "Geocache", "Lost and Found Event Cache", "" }, 6, -1, -1, 0),
+			new CTyp(CW_TYPE_TRADITIONAL, (byte) 102, 'C', "", "9", "", (byte) -1, 'T', "", new String[] { "Geocache|Project APE Cache", "Geocache", "Project APE Cache", "APE" }, 16, -1, -1, 0),
+			new CTyp(CW_TYPE_EVENT, (byte) 103, 'C', "", "1304", "", (byte) -1, 'X', "", new String[] { "Geocache|GPS Adventures Exhibit", "Geocache", "GPS Adventures Exhibit", "MAZE" }, 17, -1, -1, 0),
+			new CTyp(CW_TYPE_UNKNOWN, (byte) 108, 'C', "", "", "8", (byte) -1, 'U', "", new String[] { "only on OC download", "", "", "" }, 19, -1, -1, 0),
+			new CTyp(CW_TYPE_WHEREIGO, (byte) 15, 'C', "", "", "", (byte) -62, 'G', "", new String[] { "Hack for V2 Typ", "", "", "" }, -1, -1, -1, 0), };
+	// public static final int anzCacheTyps=cTypRef.length;
+	public static final byte maxCWCType = 110;
+	static final byte[] Ref_Index = new byte[maxCWCType];
+	static {
+		// +1 cause error is -1 and array starts at 0
+		for (byte i = (byte) (cTypRef.length - 1); i >= 0; i--) {
+			Ref_Index[1 + cTypRef[i]._cwCType] = i;
+		}
+	}
+
+	public static byte Ref_Index(final byte type) {
+		final byte ret = Ref_Index[cTypRef[Ref_Index[type + 1]]._cwMappedCType + 1];
+		return ret;
+	}
+
+	/**
+	 * check if a given waypoint type is an additional waypoint
+	 *
+	 * @param type
+	 *            waypoint type to check
+	 * @return true if it is an additional waypoint, false otherwise
+	 */
+	public static boolean isAddiWpt(final byte type) {
+		return cTypRef[Ref_Index(type)]._cwCGroup == 'A';
+	}
+
+	/**
+	 * check if a given waypoint type is an cache waypoint
+	 *
+	 * @param type
+	 *            waypoint type to check
+	 * @return true if it is an Cache waypoint, false otherwise
+	 */
+	public static boolean isCacheWpt(final byte type) {
+		return cTypRef[Ref_Index(type)]._cwCGroup == 'C';
+	}
+
+	/**
+	 * check if a given waypoint type is an Custom waypoint
+	 *
+	 * @param type
+	 *            waypoint type to check
+	 * @return true if it is an Custom waypint, false otherwise
+	 */
+	public static boolean isCustomWpt(final byte type) {
+		return cTypRef[Ref_Index(type)]._cwCGroup == 'P';
+	}
+
+	// done for DetailsPanel.java and KML- and TomTom-Exporter
+	/**
+	 * create list of cache types to be shown in GUI drop down lists
+	 *
+	 * @return list of cache types to be shown in GUI drop down list
+	 * @see guiSelect2Cw
+	 * @see cw2GuiSelect
+	 */
+	public static String[] guiTypeStrings() {
+		int j = 0;
+		for (int i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._GUIOrder > j) {
+				j = cTypRef[i]._GUIOrder;
+			}
+		}
+		final String[] ret = new String[j + 1];
+		for (int i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._GUIOrder > -1) {
+				ret[cTypRef[i]._GUIOrder] = MyLocale.getMsg(cTypRef[i]._msgNrCTypeName, "");
+			}
+		}
+		return ret;
+	}
+
+	/**
+	 * translate GUI drop down index selection back to internally stored type
+	 *
+	 * @param selection
+	 *            index value from drop down list
+	 * @return internal type
+	 * @throws IllegalArgumentException
+	 *             if <code>selection</code> can not be matched
+	 * @see guiTypeStrings
+	 * @see cw2GuiSelect
+	 */
+	public static byte guiSelect2Cw(final int selection) {
+		for (byte i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._GUIOrder == selection) {
+				return cTypRef[i]._cwCType;
+			}
+			;
+		}
+		return -1;
+	}
+
+	/**
+	 * translate cache type to position of index to highlight in GUI cache type drop down list
+	 *
+	 * @param typeId
+	 *            internal id of cache type
+	 * @return index of the cache type in GUI list
+	 * @throws IllegalArgumentException
+	 *             if <code>id</code> can not be matched
+	 * @see guiTypeStrings
+	 * @see guiSelect2Cw
+	 */
+	public static int cw2GuiSelect(final byte typeId) {
+		return cTypRef[Ref_Index(typeId)]._GUIOrder;
+	}
+
+	/**
+	 * convert the strings found in import of GPX from GC, OC or TC to internal cache type
+	 *
+	 * @param gpxType
+	 *            type information found in GPX
+	 * @return internal cache type
+	 */
+	public static byte gpxType2CwType(final String gpxType) throws IllegalArgumentException {
+		for (byte i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._gpxWptTypeTag.equalsIgnoreCase(gpxType)) {
+				return cTypRef[i]._cwMappedCType;
+			}
+			;
+		}
+		for (byte i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._gpxWptGCextensionTypTag.equalsIgnoreCase(gpxType)) {
+				return cTypRef[i]._cwMappedCType;
+			}
+			;
+		}
+		final String lowerCaseGPXType = gpxType.toLowerCase();
+		for (byte i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._gpxAlternativeWptTypTags.toLowerCase().indexOf(lowerCaseGPXType) != -1) {
+				return cTypRef[i]._cwMappedCType;
+			}
+			;
+		}
+		// TODO extend definition of _gpxAlternativeWptTypTags for all cases of Mystery
+		// old code was : if (!(gpxType.indexOf("Mystery")==-1)) return CW_TYPE_UNKNOWN;
+		return -1;
+	}
+
+	/**
+	 * convert the cache type information from an OC XML import to internal cache type
+	 *
+	 * @param ocType
+	 *            cache type found in OC XML
+	 * @return internal cache type
+	 * @throws IllegalArgumentException
+	 *             if <code>ocType</code> can not be matched
+	 */
+	public static byte ocType2CwType(final String ocType) {
+		for (int i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._ocCTypeXmlImport.equals(ocType)) {
+				return cTypRef[i]._cwMappedCType;
+			}
+		}
+		return -1;
+	}
+
+	/**
+	 * convert type information discovered by GC spider to internal type information
+	 *
+	 * @param gcType
+	 *            type information from GC spider
+	 * @return internal representation of cache type
+	 * @throws IllegalArgumentException
+	 *             if <code>gcType</code> can not be matched
+	 */
+	public static byte gcSpider2CwType(final String gcType) {
+		for (int i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._gcCTypeSpider.equals(gcType)) {
+				return cTypRef[i]._cwMappedCType;
+			}
+		}
+		return -1;
+	}
+
+	/**
+	 * convert version1 type information to current values
+	 *
+	 * @param type
+	 *            version1 cache type information
+	 * @return current version cache type information or -1
+	 * @deprecated remove once v1 file version compatibility is abandoned
+	 */
+	public static byte v1Converter(final String type) {
+		for (int i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._cwCTypeV1.equals(type)) {
+				return cTypRef[i]._cwMappedCType;
+			}
+		}
+		return -1;
+	}
+
+	/**
+	 * convert version2 type information to current values
+	 *
+	 * @param type
+	 *            version2 cache type information
+	 * @return current version cache type information or -1
+	 * @deprecated remove once v2 file version compatibility is abandoned
+	 */
+	public static byte v2Converter(final byte type) {
+		for (int i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._cwCTypeV2 == type) {
+				return cTypRef[i]._cwMappedCType;
+			}
+		}
+		return -1;
+	}
+
+	/**
+	 * translate cache type to a short version for compact exporters or "smart" cache names.
+	 *
+	 * @param typeId
+	 *            CacheWolf internal type information
+	 * @return abbreviation of cache type
+	 */
+	public static String getExportShortId(final byte typeId) {
+		return "" + cTypRef[Ref_Index(typeId)]._gpxShortCType;
+	}
+
+	/**
+	 * map cache types to images
+	 *
+	 * @param typeId
+	 *            internal cache type id
+	 * @return non qualified name of image
+	 */
+	public static String typeImageForId(final byte typeId) {
+		return cTypRef[Ref_Index(typeId)]._imageName;
+	}
+
+	/**
+	 * generate type description matching those of GC for GPX export
+	 *
+	 * @param typeId
+	 *            internal type id
+	 * @return type information in GC.com <type> GPX format
+	 */
+	public static String type2TypeTag(final byte typeId) {
+		return cTypRef[Ref_Index(typeId)]._gpxWptTypeTag;
+	}
+
+	/**
+	 * generate type description matching those of GC for GPX export
+	 *
+	 * @param typeId
+	 *            internal type id
+	 * @return symb information in GC.com <sym> GPX format
+	 */
+	public static String type2SymTag(final byte typeId) {
+		return cTypRef[Ref_Index(typeId)]._gpxWptSymTag;
+	}
+
+	/**
+	 * generate type description matching those of GC for GPX export
+	 *
+	 * @param typeId
+	 *            internal type id
+	 * @return type information in GC.com <groundspeak:type> GPX format
+	 */
+	public static String type2GSTypeTag(final byte typeId) {
+		return cTypRef[Ref_Index(typeId)]._gpxWptGCextensionTypTag;
+	}
+
+	/**
+	 * generate type description matching those of GC for GPX export
+	 *
+	 * @param typeId
+	 *            internal type id
+	 * @return Gui - string for type
+	 */
+	public static String type2Gui(final byte typeId) {
+		return MyLocale.getMsg(cTypRef[Ref_Index(typeId)]._msgNrCTypeName, "");
+	}
+
+	/**
+	 * select image to be displayed for a given cache type
+	 *
+	 * @param typeId
+	 *            internal cache type id
+	 * @return <code>Image</code> object to be displayed
+	 */
+	public static Image getTypeImage(final byte typeId) {
+		return cTypRef[Ref_Index(typeId)]._iconImage;
+	}
+
+	/**
+	 * select image to be displayed for a given cache type
+	 *
+	 * @param typeId
+	 *            internal cache type id
+	 * @return <code>Image</code> object to be displayed
+	 */
+	public static Image getMapImage(CacheHolder ch) {
+		byte typeId = ch.getType();
+		Image im = cTypRef[Ref_Index(typeId)]._mapImage;
+		if (ch.is_found()) {
+			if (cTypRef[Ref_Index(typeId)]._modImage[found] == null) {
+				cTypRef[Ref_Index(typeId)]._modImage[found] = newOverlayedImage(im, GuiImageBroker.found);
+			}
+			im = cTypRef[Ref_Index(typeId)]._modImage[found];
+		} else if (ch.is_archived()) {
+			if (cTypRef[Ref_Index(typeId)]._modImage[archived] == null) {
+				cTypRef[Ref_Index(typeId)]._modImage[archived] = newOverlayedImage(im, GuiImageBroker.archived);
+			}
+			im = cTypRef[Ref_Index(typeId)]._modImage[archived];
+		} else if (!ch.is_available()) {
+			if (cTypRef[Ref_Index(typeId)]._modImage[disabled] == null) {
+				cTypRef[Ref_Index(typeId)]._modImage[disabled] = newOverlayedImage(im, GuiImageBroker.disabled);
+			}
+			im = cTypRef[Ref_Index(typeId)]._modImage[disabled];
+		} else if (ch.is_owned()) {
+			if (cTypRef[Ref_Index(typeId)]._modImage[owned] == null) {
+				cTypRef[Ref_Index(typeId)]._modImage[owned] = newOverlayedImage(im, GuiImageBroker.owned);
+			}
+			im = cTypRef[Ref_Index(typeId)]._modImage[owned];
+		} else if (ch.getCacheStatus().startsWith(MyLocale.getMsg(362, "solved"))) {
+			if (cTypRef[Ref_Index(typeId)]._modImage[solved] == null) {
+				cTypRef[Ref_Index(typeId)]._modImage[solved] = newOverlayedImage(im, GuiImageBroker.solved);
+			}
+			im = cTypRef[Ref_Index(typeId)]._modImage[solved];
+		} else if (ch.getCacheStatus().indexOf(MyLocale.getMsg(319, "Not Found")) > -1) {
+			if (cTypRef[Ref_Index(typeId)]._modImage[dnf] == null) {
+				cTypRef[Ref_Index(typeId)]._modImage[dnf] = newOverlayedImage(im, GuiImageBroker.dnf);
+			}
+			im = cTypRef[Ref_Index(typeId)]._modImage[dnf];
+		} else if (ch.getCacheName().toLowerCase().indexOf("bonus") > -1) {
+			if (cTypRef[Ref_Index(typeId)]._modImage[bonus] == null) {
+				cTypRef[Ref_Index(typeId)]._modImage[bonus] = newOverlayedImage(im, GuiImageBroker.bonus);
+			}
+			im = cTypRef[Ref_Index(typeId)]._modImage[bonus];
+		}
+		return im;
+	}
+
+	/**
+	 * select image to be displayed for a given cache type
+	 *
+	 * @param typeId
+	 *            internal cache type id
+	 * @param Image
+	 *            object to be displayed
+	 */
+	public static void setTypeImage(final byte id, final Image iconImage) {
+		if (cTypRef[Ref_Index(id)]._iconImage != cTypRef[Ref_Index(id)]._mapImage)
+			cTypRef[Ref_Index(id)]._iconImage.free();
+		cTypRef[Ref_Index(id)]._iconImage = iconImage;
+	}
+
+	/**
+	 * select image to be displayed for a given cache type
+	 *
+	 * @param typeId
+	 *            internal cache type id
+	 * @param Image
+	 *            object to be displayed
+	 */
+	public static void setMapImage(final byte id, final Image mapImage) {
+		if (cTypRef[Ref_Index(id)]._iconImage != cTypRef[Ref_Index(id)]._mapImage)
+			cTypRef[Ref_Index(id)]._mapImage.free();
+		cTypRef[Ref_Index(id)]._mapImage = mapImage;
+	}
+
+	// TODO do it better in Version 4
+	public static int getCacheTypePattern(final byte typeId) {
+		return cTypRef[Ref_Index(typeId)]._FilterPattern;
+	}
+
+	public static int Type_FilterString2Type_FilterPattern(final String Type_FilterString) {
+		int typeMatchPattern = 0;
+		for (int i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._FilterStringPos > -1) {
+				if (Type_FilterString.charAt(cTypRef[i]._FilterStringPos) == '1') {
+					typeMatchPattern |= cTypRef[i]._FilterPattern;
+				}
+			}
+		}
+		return typeMatchPattern;
+	}
+
+	public static boolean hasTypeMatchPattern(final int typeMatchPattern) {
+		return typeMatchPattern != 0;
+	}
+
+	public static boolean hasMainTypeMatchPattern(final int typeMatchPattern) {
+		int TYPE_MAIN = 0;
+		for (int i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._cwCGroup == 'C' || cTypRef[i]._cwCGroup == 'P') {
+				TYPE_MAIN |= cTypRef[i]._FilterPattern;
+			}
+		}
+		return (typeMatchPattern & TYPE_MAIN) != 0;
+	}
+
+	private static Image newOverlayedImage(Image imsrc, Image imovl) {
+		// Overlay added at topleft
+		int srcWidth = imsrc.getWidth();
+		int srcHeight = imsrc.getHeight();
+		int ovlWidth = imovl.getWidth();
+		int ovlHeight = imovl.getHeight();
+		if (srcWidth < ovlWidth || srcHeight < ovlHeight)
+			return imsrc;
+		int[] srcPixels = imsrc.getPixels(null, 0, 0, 0, srcWidth, srcHeight, 0);
+		int[] ovlPixels = imovl.getPixels(null, 0, 0, 0, ovlWidth, ovlHeight, 0);
+		int offsrc;
+		int offovl = 0;
+		for (int y = 0; y < ovlHeight; y++) { // top down
+			offsrc = y * srcWidth;
+			for (int x = 0; x < ovlWidth; x++) {
+				int alphaval = (ovlPixels[offovl] >> 24) & 0xff;
+				if (alphaval > 0) {
+					srcPixels[offsrc] = ovlPixels[offovl];
+				}
+				offovl++;
+				offsrc++;
+			}
+		}
+		Image modImage = new Image(imsrc, 0);
+		modImage.setPixels(srcPixels, 0, 0, 0, srcWidth, srcHeight, 0);
+		return modImage;
+	}
+
+	// TODO it for OCXMLImporterScreen and FilterScreen ?
+}

Modified: trunk/src/CacheWolf/CacheWolf.java
===================================================================
--- trunk/src/CacheWolf/CacheWolf.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/CacheWolf.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/CalcPanel.java
===================================================================
--- trunk/src/CacheWolf/CalcPanel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/CalcPanel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -101,9 +101,9 @@
 		mainT = Global.mainTab;
 		cacheDB = profile.cacheDB;
 
-		TopP.addNext(chkDD = new mCheckBox("d.d?"), CellConstants.DONTSTRETCH, CellConstants.WEST);
-		TopP.addNext(chkDMM = new mCheckBox("d?m.m\'"), CellConstants.DONTSTRETCH, CellConstants.WEST);
-		TopP.addNext(chkDMS = new mCheckBox("d?m\'s\""), CellConstants.DONTSTRETCH, CellConstants.WEST);
+		TopP.addNext(chkDD = new mCheckBox("d.d??"), CellConstants.DONTSTRETCH, CellConstants.WEST);
+		TopP.addNext(chkDMM = new mCheckBox("d??m.m\'"), CellConstants.DONTSTRETCH, CellConstants.WEST);
+		TopP.addNext(chkDMS = new mCheckBox("d??m\'s\""), CellConstants.DONTSTRETCH, CellConstants.WEST);
 		TopP.addNext(chkCustom = new mCheckBox(""), CellConstants.DONTSTRETCH, CellConstants.WEST);
 
 		chkDD.setGroup(chkFormat);

Modified: trunk/src/CacheWolf/Common.java
===================================================================
--- trunk/src/CacheWolf/Common.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/Common.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/CoordsScreen.java
===================================================================
--- trunk/src/CacheWolf/CoordsScreen.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/CoordsScreen.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -96,9 +96,9 @@
 	private void InitCoordsScreen() {
 		this.setTitle("");
 		// Radiobuttons for format
-		topLinePanel.addNext(chkDD = new mCheckBox("d.d?"), CellConstants.DONTSTRETCH, CellConstants.WEST);
-		topLinePanel.addNext(chkDMM = new mCheckBox("d?m.m\'"), CellConstants.DONTSTRETCH, CellConstants.WEST);
-		topLinePanel.addNext(chkDMS = new mCheckBox("d?m\'s\""), CellConstants.DONTSTRETCH, CellConstants.WEST);
+		topLinePanel.addNext(chkDD = new mCheckBox("d.d??"), CellConstants.DONTSTRETCH, CellConstants.WEST);
+		topLinePanel.addNext(chkDMM = new mCheckBox("d??m.m\'"), CellConstants.DONTSTRETCH, CellConstants.WEST);
+		topLinePanel.addNext(chkDMS = new mCheckBox("d??m\'s\""), CellConstants.DONTSTRETCH, CellConstants.WEST);
 		// topLinePanel.addNext(chkUTM =new mCheckBox("UTM"),CellConstants.DONTSTRETCH, CellConstants.WEST);
 		topLinePanel.addNext(chkCustom = new mCheckBox(""), CellConstants.DONTSTRETCH, CellConstants.WEST);
 
@@ -269,7 +269,7 @@
 
 	public void setFields(CWPoint coords, int format) {
 		int formatsel = localSystemToformatSel(format);
-		if (formatsel >= formatSelToLocalSystem.length) { // projected point = neither dd, dd? mm.mm nor dd? mm' ss.s"
+		if (formatsel >= formatSelToLocalSystem.length) { // projected point = neither dd, dd?? mm.mm nor dd?? mm' ss.s"
 			if (coords.isValid()) {
 				localCooSystem.setInt(formatsel - formatSelToLocalSystem.length);
 				ProjectedPoint pp = TransformCoordinates.wgs84ToLocalsystem(coords, format);
@@ -359,7 +359,7 @@
 			}
 
 			if (ev.target == btnCopy) {
-				readFields(coordInp); // TODO was anderes als Gau?-Kr?ger unterst?tzen
+				readFields(coordInp); // TODO was anderes als Gau??-Kr??ger unterst??tzen
 				Vm.setClipboardText(coordInp.toString(currFormat));
 			}
 

Modified: trunk/src/CacheWolf/DBStats.java
===================================================================
--- trunk/src/CacheWolf/DBStats.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/DBStats.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/DataMover.java
===================================================================
--- trunk/src/CacheWolf/DataMover.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/DataMover.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/DataMoverForm.java
===================================================================
--- trunk/src/CacheWolf/DataMoverForm.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/DataMoverForm.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/DateFormat.java
===================================================================
--- trunk/src/CacheWolf/DateFormat.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/DateFormat.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -142,7 +142,7 @@
 				return m + 1;
 			}
 		}
-		final String deMonthNames[] = { "Januar", "Februar", "M?rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember" };
+		final String deMonthNames[] = { "Januar", "Februar", "M??rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember" };
 		for (int m = 0; m < 12; m++) {
 			if (deMonthNames[m].startsWith(month)) {
 				return m + 1;

Modified: trunk/src/CacheWolf/DateTimeChooser.java
===================================================================
--- trunk/src/CacheWolf/DateTimeChooser.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/DateTimeChooser.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/DescriptionPanel.java
===================================================================
--- trunk/src/CacheWolf/DescriptionPanel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/DescriptionPanel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/DetailsPanel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/Extractor.java
===================================================================
--- trunk/src/CacheWolf/Extractor.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/Extractor.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/Filter.java
===================================================================
--- trunk/src/CacheWolf/Filter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/Filter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/FilterData.java
===================================================================
--- trunk/src/CacheWolf/FilterData.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/FilterData.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/FilterScreen.java
===================================================================
--- trunk/src/CacheWolf/FilterScreen.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/FilterScreen.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.
@@ -341,7 +341,7 @@
 		pnlButtons.addLast(btnAddi=new mButton(MyLocale.getMsg(733,"Add. Wpt"))); 
 		pnlButtons.addLast(btnContainer=new mButton(MyLocale.getMsg(724,"Container")));
 		pnlButtons.addLast(btnCacheAttributes=new mButton(MyLocale.getMsg(738,"Attributes")));
-		// Search ist f?r 0.9n noch deaktiviert
+		// Search ist f??r 0.9n noch deaktiviert
 		//pnlButtons.addLast(btnSearch=new mButton("Search")); btnSearch.modify(Disabled,0);
 		addNext(pnlButtons,HSTRETCH,FILL);
 

Modified: trunk/src/CacheWolf/GPSPortOptions.java
===================================================================
--- trunk/src/CacheWolf/GPSPortOptions.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/GPSPortOptions.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/GeoCodeGui.java
===================================================================
--- trunk/src/CacheWolf/GeoCodeGui.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/GeoCodeGui.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.
@@ -65,7 +65,7 @@
 		topLinePanel.addLast(streetInp = new mInput(MyLocale.getMsg(7305, "Hauptbahnhof")),CellConstants.STRETCH, CellConstants.FILL | CellConstants.WEST);
 		//streetInp.setPreferredSize(500, 20);
 		topLinePanel.addNext(new mLabel(MyLocale.getMsg(7301, "City")),CellConstants.DONTSTRETCH, CellConstants.WEST);
-		topLinePanel.addNext(cityInp   = new mInput(MyLocale.getMsg(7304, "M?nchen, Deutschland")),CellConstants.HSTRETCH, CellConstants.HFILL | CellConstants.WEST);
+		topLinePanel.addNext(cityInp   = new mInput(MyLocale.getMsg(7304, "M??nchen, Deutschland")),CellConstants.HSTRETCH, CellConstants.HFILL | CellConstants.WEST);
 		topLinePanel.addNext(searchBtn = new mButton(MyLocale.getMsg(7302, "Search")),CellConstants.DONTSTRETCH,CellConstants.WEST);
 		topLinePanel.addLast(searchCancelBtn = new mButton(MyLocale.getMsg(7303, "Cancel")),CellConstants.DONTSTRETCH,CellConstants.WEST);
 		// inpText.toolTip=MyLocale.getMsg(1406,"Enter coordinates in any format or GCxxxxx");

Modified: trunk/src/CacheWolf/GeocoderOsm.java
===================================================================
--- trunk/src/CacheWolf/GeocoderOsm.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/GeocoderOsm.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/Global.java
===================================================================
--- trunk/src/CacheWolf/Global.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/Global.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/GuiImageBroker.java
===================================================================
--- trunk/src/CacheWolf/GuiImageBroker.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/GuiImageBroker.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/HintLogPanel.java
===================================================================
--- trunk/src/CacheWolf/HintLogPanel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/HintLogPanel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/HttpConnection.java
===================================================================
--- trunk/src/CacheWolf/HttpConnection.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/HttpConnection.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/ImageDetailForm.java
===================================================================
--- trunk/src/CacheWolf/ImageDetailForm.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/ImageDetailForm.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/ImageInfo.java
===================================================================
--- trunk/src/CacheWolf/ImageInfo.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/ImageInfo.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/ImageInteractivePanel.java
===================================================================
--- trunk/src/CacheWolf/ImageInteractivePanel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/ImageInteractivePanel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/ImagePanel.java
===================================================================
--- trunk/src/CacheWolf/ImagePanel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/ImagePanel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/ImagePanelImage.java
===================================================================
--- trunk/src/CacheWolf/ImagePanelImage.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/ImagePanelImage.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/InfoBox.java
===================================================================
--- trunk/src/CacheWolf/InfoBox.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/InfoBox.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/InfoScreen.java
===================================================================
--- trunk/src/CacheWolf/InfoScreen.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/InfoScreen.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/InputScreen.java
===================================================================
--- trunk/src/CacheWolf/InputScreen.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/InputScreen.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.
@@ -99,7 +99,7 @@
 	private mLabel lblBearing = new mLabel(MyLocale.getMsg(1403,"Bearing"));
 	private mButtonPos btnBearing, btnDistanc;
 	private mLabel lblDist = new mLabel("m");
-	private mLabel lblBear = new mLabel("?");
+	private mLabel lblBear = new mLabel("??");
 	private int[] iPointPos = {0,0,0,0,0,0};
 	
 	private boolean allowInvalid = false;
@@ -217,7 +217,7 @@
 		btnNorth = new mButton("N");
 		btnNorth.borderStyle = BDR_NOBORDER;
 		TopP.addNext(btnNorth,CellConstants.STRETCH, (CellConstants.FILL));
-		btnNorthDD = new mButtonPos("DD?");
+		btnNorthDD = new mButtonPos("DD??");
 		btnNorthDD.borderStyle = BDR_NOBORDER;
 		TopP.addNext(btnNorthDD,CellConstants.STRETCH, (CellConstants.FILL));
 		btnNorthMM = new mButtonPos("MM.");
@@ -230,7 +230,7 @@
 		btnWest = new mButton("E");
 		btnWest.borderStyle = BDR_NOBORDER;
 		TopP.addNext(btnWest,CellConstants.STRETCH, (CellConstants.FILL));
-		btnEastDDD = new mButtonPos("DDD?");
+		btnEastDDD = new mButtonPos("DDD??");
 		btnEastDDD.borderStyle = BDR_NOBORDER;
 		TopP.addNext(btnEastDDD,CellConstants.STRETCH, (CellConstants.FILL));
 		btnEastMM = new mButtonPos("MM.");
@@ -351,7 +351,7 @@
 			strBufCoords.append(strBufTemp.toString());
 			CoordsInput = coords;
 		} else {
-			strBufCoords.append("N 91? 00.000 E 361? 00.000");
+			strBufCoords.append("N 91?? 00.000 E 361?? 00.000");
 			CoordsInput = coords;
 		}
 		if(setFocus){
@@ -371,7 +371,7 @@
 			}
 
 		}else{
-		//'?' und '.' filtern
+		//'??' und '.' filtern
 			if(iPosition == POS_NMM-2
 				|| iPosition == POS_EMM-2
 				|| iPosition == POS_ESSS-1
@@ -441,7 +441,7 @@
 
 	/*
 	 * set lat and lon by using coordinates in "CacheWolf" format
-	 * @param coord  String of type N 49? 33.167 E 011? 21.608
+	 * @param coord  String of type N 49?? 33.167 E 011?? 21.608
 	 * @param format only CWPoint.CW is supported
 	 */
 	public CWPoint getCoords(){

Modified: trunk/src/CacheWolf/Log.java
===================================================================
--- trunk/src/CacheWolf/Log.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/Log.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/LogList.java
===================================================================
--- trunk/src/CacheWolf/LogList.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/LogList.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/MainForm.java
===================================================================
--- trunk/src/CacheWolf/MainForm.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/MainForm.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/MainMenu.java
===================================================================
--- trunk/src/CacheWolf/MainMenu.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/MainMenu.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/MainTab.java
===================================================================
--- trunk/src/CacheWolf/MainTab.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/MainTab.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/Matrix.java
===================================================================
--- trunk/src/CacheWolf/Matrix.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/Matrix.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.
@@ -36,8 +36,8 @@
 	
 	public Matrix (Matrix srcMatrix){
 		matrix = new double[srcMatrix.matrix.length][srcMatrix.matrix[0].length];
-		for (int i = 0; i < srcMatrix.matrix.length; i++)
-			for (int j = 0; j < srcMatrix.matrix[i].length; j++)
+		for (int i = 0; i < srcMatrix.matrix.length; i++)
+			for (int j = 0; j < srcMatrix.matrix[i].length; j++)
 				matrix[i][j] = srcMatrix.matrix[i][j];
 	}
 	
@@ -59,12 +59,12 @@
 	*	Method to calculate the row column product of two matrices.
 	*	Is used by the Multiply method.
 	*/
-	private double calculateRowColumnProduct(double[][] A, int row, double[][] B, int col){
-		double product = 0;
+	private double calculateRowColumnProduct(double[][] A, int row, double[][] B, int col){
+		double product = 0;
 		for(int i = 0; i < A[row].length; i++){
 			product +=A[row][i]*B[i][col];
-		}
-		return product;
+		}
+		return product;
 	}
 	
 	public void MultiplyByScalar (double f) {
@@ -90,13 +90,13 @@
 	public void Transpose(){
 		
 		double m[][] = new double[matrix[0].length][matrix.length];
-		for (int i = 0; i < matrix.length; i++)
-			for (int j = 0; j < matrix[i].length; j++)
+		for (int i = 0; i < matrix.length; i++)
+			for (int j = 0; j < matrix[i].length; j++)
 				m[j][i] = matrix[i][j];
 			
 		matrix = new double[m.length][m[0].length];
-		for (int i = 0; i < m.length; i++)
-			for (int j = 0; j < m[i].length; j++)
+		for (int i = 0; i < m.length; i++)
+			for (int j = 0; j < m[i].length; j++)
 				matrix[i][j] = m[i][j];
 	}
 	
@@ -104,21 +104,21 @@
 	*	private version of the Transpose method.
 	*	used internally in this class
 	*/
-	private double[][] Transpose2(double[][] a) {
-		
-		double m[][] = new double[a[0].length][a.length];
-
-		for (int i = 0; i < a.length; i++)
-			for (int j = 0; j < a[i].length; j++)
-				m[j][i] = a[i][j];
-		return m;
+	private double[][] Transpose2(double[][] a) {
+		
+		double m[][] = new double[a[0].length][a.length];
+
+		for (int i = 0; i < a.length; i++)
+			for (int j = 0; j < a[i].length; j++)
+				m[j][i] = a[i][j];
+		return m;
 	}
 	
 	/**
 	*	Method to display the contents of a matrix.
 	*/
 	public void DumpMatrix(){
-		for (int i = 0; i < matrix.length; i++)
+		for (int i = 0; i < matrix.length; i++)
 			for (int j = 0; j < matrix[i].length; j++)
 				Global.getPref().log("[ "+i+ " " + j + " ] " + matrix[i][j]);
 	}
@@ -126,61 +126,61 @@
 	/**
 	*	Method used to help calculate determinate
 	*/
-	private double[][] UpperTriangle(double[][] m) {
-		double f1 = 0;
-		double temp = 0;
-		int tms = m.length; // get This Matrix Size (could be smaller than
-							// global)
-		int v = 1;
-		iDF = 1;
-
-		for (int col = 0; col < tms - 1; col++) {
-			for (int row = col + 1; row < tms; row++) {
-				v = 1;
-				outahere: while (m[col][col] == 0) // check if 0 in diagonal
-				{ // if so switch until not
-					if (col + v >= tms) // check if switched all rows
-					{
-						iDF = 0;
-						break outahere;
-					} else {
-						for (int c = 0; c < tms; c++) {
-							temp = m[col][c];
-							m[col][c] = m[col + v][c]; // switch rows
-							m[col + v][c] = temp;
-						}
-						v++; // count row switchs
-						iDF = iDF * -1; // each switch changes determinant
-										// factor
-					}
-				}
-				if (m[col][col] != 0) {
-					try {
-						f1 = (-1) * m[row][col] / m[col][col];
-						for (int i = col; i < tms; i++) {
-							m[row][i] = f1 * m[col][i] + m[row][i];
-						}
-					} catch (Exception e) {
-						Global.getPref().log("Still Here!!!");
-					}
-				}
-			}
-		}
-		return m;
+	private double[][] UpperTriangle(double[][] m) {
+		double f1 = 0;
+		double temp = 0;
+		int tms = m.length; // get This Matrix Size (could be smaller than
+							// global)
+		int v = 1;
+		iDF = 1;
+
+		for (int col = 0; col < tms - 1; col++) {
+			for (int row = col + 1; row < tms; row++) {
+				v = 1;
+				outahere: while (m[col][col] == 0) // check if 0 in diagonal
+				{ // if so switch until not
+					if (col + v >= tms) // check if switched all rows
+					{
+						iDF = 0;
+						break outahere;
+					} else {
+						for (int c = 0; c < tms; c++) {
+							temp = m[col][c];
+							m[col][c] = m[col + v][c]; // switch rows
+							m[col + v][c] = temp;
+						}
+						v++; // count row switchs
+						iDF = iDF * -1; // each switch changes determinant
+										// factor
+					}
+				}
+				if (m[col][col] != 0) {
+					try {
+						f1 = (-1) * m[row][col] / m[col][col];
+						for (int i = col; i < tms; i++) {
+							m[row][i] = f1 * m[col][i] + m[row][i];
+						}
+					} catch (Exception e) {
+						Global.getPref().log("Still Here!!!");
+					}
+				}
+			}
+		}
+		return m;
 	}
 	
 	/**
 	*	Method to calculate the determinate of a matrix
 	*/
-	public double Determinant(double[][] pMatrix) {
-		int tms = pMatrix.length;
-		double det = 1;
-		pMatrix = UpperTriangle(pMatrix);
-		for (int i = 0; i < tms; i++) {
-			det = det * pMatrix[i][i];
-		} // multiply down diagonal
-		det = det * iDF; // adjust w/ determinant factor
-		return det;
+	public double Determinant(double[][] pMatrix) {
+		int tms = pMatrix.length;
+		double det = 1;
+		pMatrix = UpperTriangle(pMatrix);
+		for (int i = 0; i < tms; i++) {
+			det = det * pMatrix[i][i];
+		} // multiply down diagonal
+		det = det * iDF; // adjust w/ determinant factor
+		return det;
 	}
 	
 	
@@ -189,68 +189,68 @@
 	*	Method to calculate the inverse of this matrix.
 	*	The result is stored in this matrix!
 	*/
-	public void Inverse() {
-		// Formula used to Calculate Inverse:
-		// inv(A) = 1/det(A) * adj(A)
-		
-		int tms = matrix.length;
-
-		double m[][] = new double[tms][tms];
-		double mm[][] = Adjoint(matrix);
-
-		double det = Determinant(matrix);
-		double dd = 0;
-
-		if (det == 0) {
-			Global.getPref().log("Determinant Equals 0, Not Invertible.");
-		} else {
-			dd = 1 / det;
-		}
-		for (int i = 0; i < tms; i++)
-			for (int j = 0; j < tms; j++) {
-				m[i][j] = dd * mm[i][j];
+	public void Inverse() {
+		// Formula used to Calculate Inverse:
+		// inv(A) = 1/det(A) * adj(A)
+		
+		int tms = matrix.length;
+
+		double m[][] = new double[tms][tms];
+		double mm[][] = Adjoint(matrix);
+
+		double det = Determinant(matrix);
+		double dd = 0;
+
+		if (det == 0) {
+			Global.getPref().log("Determinant Equals 0, Not Invertible.");
+		} else {
+			dd = 1 / det;
+		}
+		for (int i = 0; i < tms; i++)
+			for (int j = 0; j < tms; j++) {
+				m[i][j] = dd * mm[i][j];
 			}
 			
 		//Store back results
 		matrix = new double[m.length][m[0].length];
-		for (int i = 0; i < m.length; i++)
-			for (int j = 0; j < m[i].length; j++)
-				matrix[i][j] = m[i][j];
+		for (int i = 0; i < m.length; i++)
+			for (int j = 0; j < m[i].length; j++)
+				matrix[i][j] = m[i][j];
 	}
 	
 	/**
 	*	Method to calculate the adjoint of a matrix.
 	*	Required to calculate the inverse of a matrix.
 	*/
-	private double[][] Adjoint(double[][] a) {
-		int tms = a.length;
-
-		double m[][] = new double[tms][tms];
-
-		int ii, jj, ia, ja;
-		double det;
-
-		for (int i = 0; i < tms; i++)
-			for (int j = 0; j < tms; j++) {
-				ia = ja = 0;
-				double ap[][] = new double[tms - 1][tms - 1];
-				for (ii = 0; ii < tms; ii++) {
-					for (jj = 0; jj < tms; jj++) {
-						if ((ii != i) && (jj != j)) {
-							ap[ia][ja] = a[ii][jj];
-							ja++;
-						}
-					}
-					if ((ii != i) && (jj != j)) {
-						ia++;
-					}
-					ja = 0;
-				}
-				det = Determinant(ap);
-				m[i][j] = java.lang.Math.pow(-1, i + j) * det;
-			}
-		m = Transpose2(m);
-		return m;
+	private double[][] Adjoint(double[][] a) {
+		int tms = a.length;
+
+		double m[][] = new double[tms][tms];
+
+		int ii, jj, ia, ja;
+		double det;
+
+		for (int i = 0; i < tms; i++)
+			for (int j = 0; j < tms; j++) {
+				ia = ja = 0;
+				double ap[][] = new double[tms - 1][tms - 1];
+				for (ii = 0; ii < tms; ii++) {
+					for (jj = 0; jj < tms; jj++) {
+						if ((ii != i) && (jj != j)) {
+							ap[ia][ja] = a[ii][jj];
+							ja++;
+						}
+					}
+					if ((ii != i) && (jj != j)) {
+						ia++;
+					}
+					ja = 0;
+				}
+				det = Determinant(ap);
+				m[i][j] = java.lang.Math.pow(-1, i + j) * det;
+			}
+		m = Transpose2(m);
+		return m;
 	}
 	
 	/**

Modified: trunk/src/CacheWolf/MyComparer.java
===================================================================
--- trunk/src/CacheWolf/MyComparer.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/MyComparer.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/MyEditor.java
===================================================================
--- trunk/src/CacheWolf/MyEditor.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/MyEditor.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/MyLocale.java
===================================================================
--- trunk/src/CacheWolf/MyLocale.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/MyLocale.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/MyScrollBarPanel.java
===================================================================
--- trunk/src/CacheWolf/MyScrollBarPanel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/MyScrollBarPanel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/NewProfileForm.java
===================================================================
--- trunk/src/CacheWolf/NewProfileForm.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/NewProfileForm.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/NewProfileWizard.java
===================================================================
--- trunk/src/CacheWolf/NewProfileWizard.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/NewProfileWizard.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/NotesScreen.java
===================================================================
--- trunk/src/CacheWolf/NotesScreen.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/NotesScreen.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/OC.java
===================================================================
--- trunk/src/CacheWolf/OC.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/OC.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/ParseLatLon.java
===================================================================
--- trunk/src/CacheWolf/ParseLatLon.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/ParseLatLon.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.
@@ -96,11 +96,11 @@
 			String lonEW=getNext();
 			String lonDeg=getNext();
 			String lonMin=getNext();
-			if (lonDeg.endsWith("?")){
-				lonDeg = lonDeg.substring(0,lonDeg.length()-1); // remove ?
+			if (lonDeg.endsWith("??")){
+				lonDeg = lonDeg.substring(0,lonDeg.length()-1); // remove ??
 			}
-			if (latDeg.endsWith("?")){
-				latDeg = latDeg.substring(0,latDeg.length()-1);// remove ?
+			if (latDeg.endsWith("??")){
+				latDeg = latDeg.substring(0,latDeg.length()-1);// remove ??
 			}
 			lat2 = Convert.parseDouble(latDeg) + Convert.parseDouble(latMin)/60.0;
 			if(latNS.charAt(0)=='S') lat2= -lat2 ;

Modified: trunk/src/CacheWolf/Parser.java
===================================================================
--- trunk/src/CacheWolf/Parser.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/Parser.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/Preferences.java
===================================================================
--- trunk/src/CacheWolf/Preferences.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/Preferences.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/PreferencesScreen.java
===================================================================
--- trunk/src/CacheWolf/PreferencesScreen.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/PreferencesScreen.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/Profile.java
===================================================================
--- trunk/src/CacheWolf/Profile.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/Profile.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -93,7 +93,7 @@
 	private boolean showBlacklisted = false;
 	private boolean showSearchResult = false;
 
-	public boolean selectionChanged = true; // ("H?ckchen") used by movingMap to get to knao if it should update the caches in the map
+	public boolean selectionChanged = true; // ("H??ckchen") used by movingMap to get to knao if it should update the caches in the map
 	/**
 	 * True if the profile has been modified and not saved
 	 * The following modifications set this flag: New profile centre, Change of waypoint data
@@ -620,7 +620,7 @@
 		for (int i = cacheDB.size() - 1; i >= 0; i--) {
 			ch = cacheDB.get(i);
 			if (!onlyOfSelected || ch.is_Checked) {
-				if (ch.getPos().isValid()) { // done: && ch.pos.latDec != 0 && ch.pos.lonDec != 0 TO-DO != 0 sollte rausgenommen werden sobald in der Liste vern?nftig mit nicht gesetzten pos umgegangen wird
+				if (ch.getPos().isValid()) { // done: && ch.pos.latDec != 0 && ch.pos.lonDec != 0 TO-DO != 0 sollte rausgenommen werden sobald in der Liste vern??nftig mit nicht gesetzten pos umgegangen wird
 					isAddi = ch.isAddiWpt();
 					// test for plausiblity of coordinates of Additional Waypoints: more then 1000 km away from main Waypoint is unplausible ->
 					// ignore it //

Modified: trunk/src/CacheWolf/ProfileDataForm.java
===================================================================
--- trunk/src/CacheWolf/ProfileDataForm.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/ProfileDataForm.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/ProfilesForm.java
===================================================================
--- trunk/src/CacheWolf/ProfilesForm.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/ProfilesForm.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/RadarPanel.java
===================================================================
--- trunk/src/CacheWolf/RadarPanel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/RadarPanel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/RadarPanelImage.java
===================================================================
--- trunk/src/CacheWolf/RadarPanelImage.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/RadarPanelImage.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/Rebuild.java
===================================================================
--- trunk/src/CacheWolf/Rebuild.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/Rebuild.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/Reducer.java
===================================================================
--- trunk/src/CacheWolf/Reducer.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/Reducer.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/STRreplace.java
===================================================================
--- trunk/src/CacheWolf/STRreplace.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/STRreplace.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/SafeXML.java
===================================================================
--- trunk/src/CacheWolf/SafeXML.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/SafeXML.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -42,13 +42,13 @@
 		final String[] mappingArray = new String[] {
 				"&apos;",
 				"'", // Added 20061227 - not a valid HTML entity but used in XML
-				"&quot;", "\"", "&amp;", "&", "&lt;", "<", "&gt;", ">", "&nbsp;", " ", "&iexcl;", "?", "&cent;", "?", "&pound;", "?", "&curren;", "?", "&yen;", "?", "&brvbar;", "?", "&sect;", "?", "&uml;", "?", "&copy;", "?", "&ordf;", "?", "&laquo;",
-				"?", "&not;", "?", "&shy;", "?", "&reg;", "?", "&macr;", "?", "&deg;", "?", "&plusmn;", "?", "&sup2;", "?", "&sup3;", "?", "&acute;", "?", "&micro;", "?", "&para;", "?", "&middot;", "?", "&cedil;", "?", "&sup1;", "?", "&ordm;", "?",
-				"&raquo;", "?", "&frac14;", "?", "&frac12;", "?", "&frac34;", "?", "&iquest;", "?", "&Agrave;", "?", "&Aacute;", "?", "&Acirc;", "?", "&Atilde;", "?", "&Auml;", "?", "&Aring;", "?", "&AElig;", "?", "&Ccedil;", "?", "&Egrave;", "?",
-				"&Eacute;", "?", "&Ecirc;", "?", "&Euml;", "?", "&Igrave;", "?", "&Iacute;", "?", "&Icirc;", "?", "&Iuml;", "?", "&ETH;", "?", "&Ntilde;", "?", "&Ograve;", "?", "&Oacute;", "?", "&Ocirc;", "?", "&Otilde;", "?", "&Ouml;", "?", "&times;",
-				"?", "&Oslash;", "?", "&Ugrave;", "?", "&Uacute;", "?", "&Ucirc;", "?", "&Uuml;", "?", "&Yacute;", "?", "&THORN;", "?", "&szlig;", "?", "&agrave;", "?", "&aacute;", "?", "&acirc;", "?", "&atilde;", "?", "&auml;", "?", "&aring;", "?",
-				"&aelig;", "?", "&ccedil;", "?", "&egrave;", "?", "&eacute;", "?", "&ecirc;", "?", "&euml;", "?", "&igrave;", "?", "&iacute;", "?", "&icirc;", "?", "&iuml;", "?", "&eth;", "?", "&ntilde;", "?", "&ograve;", "?", "&oacute;", "?",
-				"&ocirc;", "?", "&otilde;", "?", "&ouml;", "?", "&divide;", "?", "&oslash;", "?", "&ugrave;", "?", "&uacute;", "?", "&ucirc;", "?", "&uuml;", "?", "&yacute;", "?", "&thorn;", "?", "&yuml;", "?", "&ndash;", "?" };
+				"&quot;", "\"", "&amp;", "&", "&lt;", "<", "&gt;", ">", "&nbsp;", " ", "&iexcl;", "??", "&cent;", "??", "&pound;", "??", "&curren;", "??", "&yen;", "??", "&brvbar;", "??", "&sect;", "??", "&uml;", "??", "&copy;", "??", "&ordf;", "??", "&laquo;",
+				"??", "&not;", "??", "&shy;", "??", "&reg;", "??", "&macr;", "??", "&deg;", "??", "&plusmn;", "??", "&sup2;", "??", "&sup3;", "??", "&acute;", "??", "&micro;", "??", "&para;", "??", "&middot;", "??", "&cedil;", "??", "&sup1;", "??", "&ordm;", "??",
+				"&raquo;", "??", "&frac14;", "??", "&frac12;", "??", "&frac34;", "??", "&iquest;", "??", "&Agrave;", "??", "&Aacute;", "??", "&Acirc;", "??", "&Atilde;", "??", "&Auml;", "??", "&Aring;", "??", "&AElig;", "??", "&Ccedil;", "??", "&Egrave;", "??",
+				"&Eacute;", "??", "&Ecirc;", "??", "&Euml;", "??", "&Igrave;", "??", "&Iacute;", "??", "&Icirc;", "??", "&Iuml;", "??", "&ETH;", "??", "&Ntilde;", "??", "&Ograve;", "??", "&Oacute;", "??", "&Ocirc;", "??", "&Otilde;", "??", "&Ouml;", "??", "&times;",
+				"??", "&Oslash;", "??", "&Ugrave;", "??", "&Uacute;", "??", "&Ucirc;", "??", "&Uuml;", "??", "&Yacute;", "??", "&THORN;", "??", "&szlig;", "??", "&agrave;", "??", "&aacute;", "??", "&acirc;", "??", "&atilde;", "??", "&auml;", "??", "&aring;", "??",
+				"&aelig;", "??", "&ccedil;", "??", "&egrave;", "??", "&eacute;", "??", "&ecirc;", "??", "&euml;", "??", "&igrave;", "??", "&iacute;", "??", "&icirc;", "??", "&iuml;", "??", "&eth;", "??", "&ntilde;", "??", "&ograve;", "??", "&oacute;", "??",
+				"&ocirc;", "??", "&otilde;", "??", "&ouml;", "??", "&divide;", "??", "&oslash;", "??", "&ugrave;", "??", "&uacute;", "??", "&ucirc;", "??", "&uuml;", "??", "&yacute;", "??", "&thorn;", "??", "&yuml;", "??", "&ndash;", "???" };
 		for (int i = 0; i < mappingArray.length; i = i + 2) {
 			iso2htmlMappings.put(mappingArray[i], mappingArray[i + 1]);
 		}

Modified: trunk/src/CacheWolf/SearchBox.java
===================================================================
--- trunk/src/CacheWolf/SearchBox.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/SearchBox.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/SearchCache.java
===================================================================
--- trunk/src/CacheWolf/SearchCache.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/SearchCache.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/ShowCacheInBrowser.java
===================================================================
--- trunk/src/CacheWolf/ShowCacheInBrowser.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/ShowCacheInBrowser.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/SolverPanel.java
===================================================================
--- trunk/src/CacheWolf/SolverPanel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/SolverPanel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/StatusBar.java
===================================================================
--- trunk/src/CacheWolf/StatusBar.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/StatusBar.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/TableColumnChooser.java
===================================================================
--- trunk/src/CacheWolf/TableColumnChooser.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/TableColumnChooser.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/TableForm.java
===================================================================
--- trunk/src/CacheWolf/TableForm.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/TableForm.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/TablePanel.java
===================================================================
--- trunk/src/CacheWolf/TablePanel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/TablePanel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/Test.java
===================================================================
--- trunk/src/CacheWolf/Test.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/Test.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.
@@ -61,16 +61,16 @@
 		// 1.000 CWPoint via constructor
 		start = new Time();
 		for (i=0; i<100; i++){
-			new CWPoint("N 51? 27.635 E 009? 37.621", TransformCoordinates.CW);
+			new CWPoint("N 51?? 27.635 E 009?? 37.621", TransformCoordinates.CW);
 		}
 		end = new Time();
-		printResult("CWPoint(\"N 51? 27.635 E 009? 37.621\", CWPoint.CW)", start, end, i);
+		printResult("CWPoint(\"N 51?? 27.635 E 009?? 37.621\", CWPoint.CW)", start, end, i);
 
 		// 1.000 CWPoint via constructor ohne Lat/Lon
 		start = new Time();
 		for (i=0; i<100; i++){
 			CWPoint cwP = new CWPoint();
-			cwP.set("N 51? 27.635 E 009? 37.621", TransformCoordinates.CW);
+			cwP.set("N 51?? 27.635 E 009?? 37.621", TransformCoordinates.CW);
 			
 		}
 		end = new Time();
@@ -92,10 +92,10 @@
 		start = new Time();
 		CWPoint cwSet = new CWPoint();
 		for (i=0; i<100; i++){
-			cwSet.set("N 51? 27.635 E 009? 37.621", TransformCoordinates.CW);
+			cwSet.set("N 51?? 27.635 E 009?? 37.621", TransformCoordinates.CW);
 		}
 		end = new Time();
-		printResult("cwSet.set(\"N 51? 27.635 E 009? 37.621\", CWPoint.CW) CWPoint set", start, end, i);
+		printResult("cwSet.set(\"N 51?? 27.635 E 009?? 37.621\", CWPoint.CW) CWPoint set", start, end, i);
 
 		// 1.000 filewrite
 		String fileName = new String("test.tmp");
@@ -135,35 +135,35 @@
 	}
 	
 	void testRegex(){
-		testPassedRegex("S1 2.3W4 5.6","S 01? 02.300 W 004? 05.600", TransformCoordinates.CW); 
-		testPassedRegex("N1 12.123 E7 34.345","N 01? 12.123 E 007? 34.345", TransformCoordinates.CW);
-		testPassedRegex("S1 12.123 E7 34.345","S 01? 12.123 E 007? 34.345", TransformCoordinates.CW); 
-		testPassedRegex("N1 12.123 W7 34.345","N 01? 12.123 W 007? 34.345", TransformCoordinates.CW); 
-		testPassedRegex("S1 12.123 W7 34.345","S 01? 12.123 W 007? 34.345", TransformCoordinates.CW); 
-		testPassedRegex("N1 12.123 E7 34,345","N 01? 12.123 E 007? 34.345", TransformCoordinates.CW); 
-		testPassedRegex("n1 1.0 E12 34.3456363","N 01? 01.000 E 012? 34.346", TransformCoordinates.CW); //Kleinbuchstaben erlaubt 
-		testPassedRegex("S99 60.2345 W180 65.34534","S 90? 00.000 W 180? 00.000", TransformCoordinates.CW); 
-		testPassedRegex("N1 12.1234 O12 34.3456","N 01? 12.123 E 012? 34.346", TransformCoordinates.CW); 
-		testPassedRegex("N1 12.1234E12 34.3456","N 01? 12.123 E 012? 34.346", TransformCoordinates.CW);
-		testPassedRegex("asdfka N1? 12.1234 E12?34.345 sdfskd ","N 01? 12.123 E 012? 34.345", TransformCoordinates.CW);
-		testPassedRegex("N1? 12.1234 E12?34.345","N 01? 12.123 E 012? 34.345", TransformCoordinates.CW); 
-		testPassedRegex("N1? 12.1234E12?34.345","N 01? 12.123 E 012? 34.345", TransformCoordinates.CW); 
-		testPassedRegex(" S17? 23 13.12345 w 127? 34 34.567 ","S 17? 23' 13.1\" W 127? 34' 34.6\"", TransformCoordinates.DMS); // Deg Min Sek
-		testPassedRegex(" S17? 23 ' 13.12345    \" w 127? 34'34.567\" ","S 17? 23' 13.1\" W 127? 34' 34.6\"", TransformCoordinates.DMS); // Deg Min Sek
-		testPassedRegex("12.3456 23.4567","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
-		testPassedRegex("12.3456? 23.4567?","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
-		testPassedRegex("12.3456? 23.4567 ?","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
-		testPassedRegex("12.3456?23.4567 ?","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
-		testPassedRegex("12.3456+23.4567 ?","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
-		testPassedRegex("N  12.3456   W  23.4567 ?","N 12.34560? W 023.45670?", TransformCoordinates.DD); 
-		testPassedRegex("12.3457-23.4567 ?","N 12.34570? W 023.45670?", TransformCoordinates.DD); 
-		testPassedRegex("-12.3456 23.4567","S 12.34560? E 023.45670?", TransformCoordinates.DD); 
-		testPassedRegex("12.3456 -23.4567","N 12.34560? W 023.45670?", TransformCoordinates.DD); 
-		testPassedRegex("-12.345668 -23,456734","S 12.34567? W 023.45673?", TransformCoordinates.DD); 
-		testPassedRegex("12.3456-23.4567","N 12.34560? W 023.45670?", TransformCoordinates.DD); 
-		testPassedRegex("12.3456+23.4567","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
-		testPassedRegex("91.2345 180.23456","N 90.00000? E 180.00000?", TransformCoordinates.DD); 
-		testPassedRegex("91.2345 180.23456","N 90.00000? E 180.00000?", TransformCoordinates.DD); 
+		testPassedRegex("S1 2.3W4 5.6","S 01?? 02.300 W 004?? 05.600", TransformCoordinates.CW); 
+		testPassedRegex("N1 12.123 E7 34.345","N 01?? 12.123 E 007?? 34.345", TransformCoordinates.CW);
+		testPassedRegex("S1 12.123 E7 34.345","S 01?? 12.123 E 007?? 34.345", TransformCoordinates.CW); 
+		testPassedRegex("N1 12.123 W7 34.345","N 01?? 12.123 W 007?? 34.345", TransformCoordinates.CW); 
+		testPassedRegex("S1 12.123 W7 34.345","S 01?? 12.123 W 007?? 34.345", TransformCoordinates.CW); 
+		testPassedRegex("N1 12.123 E7 34,345","N 01?? 12.123 E 007?? 34.345", TransformCoordinates.CW); 
+		testPassedRegex("n1 1.0 E12 34.3456363","N 01?? 01.000 E 012?? 34.346", TransformCoordinates.CW); //Kleinbuchstaben erlaubt 
+		testPassedRegex("S99 60.2345 W180 65.34534","S 90?? 00.000 W 180?? 00.000", TransformCoordinates.CW); 
+		testPassedRegex("N1 12.1234 O12 34.3456","N 01?? 12.123 E 012?? 34.346", TransformCoordinates.CW); 
+		testPassedRegex("N1 12.1234E12 34.3456","N 01?? 12.123 E 012?? 34.346", TransformCoordinates.CW);
+		testPassedRegex("asdfka N1?? 12.1234 E12??34.345 sdfskd ","N 01?? 12.123 E 012?? 34.345", TransformCoordinates.CW);
+		testPassedRegex("N1?? 12.1234 E12??34.345","N 01?? 12.123 E 012?? 34.345", TransformCoordinates.CW); 
+		testPassedRegex("N1?? 12.1234E12??34.345","N 01?? 12.123 E 012?? 34.345", TransformCoordinates.CW); 
+		testPassedRegex(" S17?? 23 13.12345 w 127?? 34 34.567 ","S 17?? 23' 13.1\" W 127?? 34' 34.6\"", TransformCoordinates.DMS); // Deg Min Sek
+		testPassedRegex(" S17?? 23 ' 13.12345    \" w 127?? 34'34.567\" ","S 17?? 23' 13.1\" W 127?? 34' 34.6\"", TransformCoordinates.DMS); // Deg Min Sek
+		testPassedRegex("12.3456 23.4567","N 12.34560?? E 023.45670??", TransformCoordinates.DD); 
+		testPassedRegex("12.3456?? 23.4567??","N 12.34560?? E 023.45670??", TransformCoordinates.DD); 
+		testPassedRegex("12.3456?? 23.4567 ??","N 12.34560?? E 023.45670??", TransformCoordinates.DD); 
+		testPassedRegex("12.3456??23.4567 ??","N 12.34560?? E 023.45670??", TransformCoordinates.DD); 
+		testPassedRegex("12.3456+23.4567 ??","N 12.34560?? E 023.45670??", TransformCoordinates.DD); 
+		testPassedRegex("N  12.3456   W  23.4567 ??","N 12.34560?? W 023.45670??", TransformCoordinates.DD); 
+		testPassedRegex("12.3457-23.4567 ??","N 12.34570?? W 023.45670??", TransformCoordinates.DD); 
+		testPassedRegex("-12.3456 23.4567","S 12.34560?? E 023.45670??", TransformCoordinates.DD); 
+		testPassedRegex("12.3456 -23.4567","N 12.34560?? W 023.45670??", TransformCoordinates.DD); 
+		testPassedRegex("-12.345668 -23,456734","S 12.34567?? W 023.45673??", TransformCoordinates.DD); 
+		testPassedRegex("12.3456-23.4567","N 12.34560?? W 023.45670??", TransformCoordinates.DD); 
+		testPassedRegex("12.3456+23.4567","N 12.34560?? E 023.45670??", TransformCoordinates.DD); 
+		testPassedRegex("91.2345 180.23456","N 90.00000?? E 180.00000??", TransformCoordinates.DD); 
+		testPassedRegex("91.2345 180.23456","N 90.00000?? E 180.00000??", TransformCoordinates.DD); 
 		testPassedRegex("32U 475592 5584875","32U E 475592 N 5584875", TransformCoordinates.UTM); 
 		testPassedRegex("14X 1 2","13N E 668186 N 2", TransformCoordinates.UTM); 
 	}

Modified: trunk/src/CacheWolf/TokenObj.java
===================================================================
--- trunk/src/CacheWolf/TokenObj.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/TokenObj.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/Tokenizer.java
===================================================================
--- trunk/src/CacheWolf/Tokenizer.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/Tokenizer.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/Travelbug.java
===================================================================
--- trunk/src/CacheWolf/Travelbug.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/Travelbug.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/TravelbugJourney.java
===================================================================
--- trunk/src/CacheWolf/TravelbugJourney.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/TravelbugJourney.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/TravelbugJourneyList.java
===================================================================
--- trunk/src/CacheWolf/TravelbugJourneyList.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/TravelbugJourneyList.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/TravelbugJourneyScreen.java
===================================================================
--- trunk/src/CacheWolf/TravelbugJourneyScreen.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/TravelbugJourneyScreen.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/TravelbugList.java
===================================================================
--- trunk/src/CacheWolf/TravelbugList.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/TravelbugList.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/TravelbugPickup.java
===================================================================
--- trunk/src/CacheWolf/TravelbugPickup.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/TravelbugPickup.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/TravelbugScreen.java
===================================================================
--- trunk/src/CacheWolf/TravelbugScreen.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/TravelbugScreen.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/UrlFetcher.java
===================================================================
--- trunk/src/CacheWolf/UrlFetcher.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/UrlFetcher.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/Version.java
===================================================================
--- trunk/src/CacheWolf/Version.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/Version.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/exp/ASCExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/ASCExporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/ASCExporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/exp/DistanceComparer.java
===================================================================
--- trunk/src/CacheWolf/exp/DistanceComparer.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/DistanceComparer.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/exp/ExploristExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/ExploristExporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/ExploristExporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/exp/Exporter.java
===================================================================
--- trunk/src/CacheWolf/exp/Exporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/Exporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/exp/GarminMap.java
===================================================================
--- trunk/src/CacheWolf/exp/GarminMap.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/GarminMap.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/exp/GpxExportNg.java
===================================================================
--- trunk/src/CacheWolf/exp/GpxExportNg.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/GpxExportNg.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -742,7 +742,7 @@
 		StringBuffer ret = new StringBuffer();
 		Attribute attrib;
 		for (int i = 0; i < ch.getCacheDetails(true).attributes.count(); i++) {
-			// <groundspeak:attribute id="X" inc="Y">text f?r X</groundspeak:attribute>
+			// <groundspeak:attribute id="X" inc="Y">text f??r X</groundspeak:attribute>
 			attrib = ch.getCacheDetails(true).attributes.getAttribute(i);
 			if (attrib.getGCId().length() > 0) {
 				ret.append("        <groundspeak:attribute id=\"").//
@@ -906,7 +906,7 @@
 		if (pos.isValid()) {
 			return pos.toString();
 		} else {
-			return "N/S  __ ? __ . ___ W/E ___ ? __ . ___";
+			return "N/S  __ ?? __ . ___ W/E ___ ?? __ . ___";
 		}
 	}
 

Modified: trunk/src/CacheWolf/exp/HTMLExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/HTMLExporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/HTMLExporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/exp/KMLExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/KMLExporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/KMLExporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/exp/LocExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/LocExporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/LocExporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/exp/MSARCSVExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/MSARCSVExporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/MSARCSVExporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.
@@ -34,7 +34,7 @@
 /**
  * Class to export the cache database (index) to an CSV File which can bei easy
  * importet bei MS AutoRoute (testet with AR 2001 German) Format of the file:
- * Name;Breitengrad;L?ngengrad;Typ1;Typ2;Waypoint;Datum;Hyperlink
+ * Name;Breitengrad;L??ngengrad;Typ1;Typ2;Waypoint;Datum;Hyperlink
  *
  */
 public class MSARCSVExporter extends Exporter {

Modified: trunk/src/CacheWolf/exp/OCLogExport.java
===================================================================
--- trunk/src/CacheWolf/exp/OCLogExport.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/OCLogExport.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.exp;
+???package CacheWolf.exp;
 
 import CacheWolf.CacheDB;
 import CacheWolf.CacheHolder;

Modified: trunk/src/CacheWolf/exp/OVLExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/OVLExporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/OVLExporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/exp/OziExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/OziExporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/OziExporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/exp/SpoilerPOIExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/SpoilerPOIExporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/SpoilerPOIExporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/exp/SpoilerPOIExporterScreen.java
===================================================================
--- trunk/src/CacheWolf/exp/SpoilerPOIExporterScreen.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/SpoilerPOIExporterScreen.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/exp/TPLExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/TPLExporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/TPLExporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.
     It supports the sites geocaching.com and opencaching.de

Modified: trunk/src/CacheWolf/exp/TomTomExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/TomTomExporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/TomTomExporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -260,9 +260,9 @@
 			outp.writeBytes(" by ");
 			outp.writeBytes(ch.getCacheOwner());
 			// Wenn Leerzeichen am Ende von Cache.Owner entfernt:
-			// Hier wieder einf?gen
+			// Hier wieder einf??gen
 			// und data = holder.wayPoint.length()+holder.CacheName.length()+.....
-			// wider um 1 erh?hen
+			// wider um 1 erh??hen
 			outp.writeBytes("- ");
 			outp.writeBytes(String.valueOf(ch.getHard()));
 			outp.writeBytes("/");

Modified: trunk/src/CacheWolf/exp/TomTomExporterScreen.java
===================================================================
--- trunk/src/CacheWolf/exp/TomTomExporterScreen.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/exp/TomTomExporterScreen.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/imp/FieldnotesImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/FieldnotesImporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/imp/FieldnotesImporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/imp/GCVoteImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/GCVoteImporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/imp/GCVoteImporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/imp/GPXImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/GPXImporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/imp/GPXImporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -643,14 +643,14 @@
 		int descIndex = 0;
 		while (imgRegexUrl.searchFrom(html, descIndex)) {
 			descIndex = imgRegexUrl.matchedTo();
-			String fetchUrl = imgRegexUrl.stringMatched(2); // URL in Anf?hrungszeichen in (2)
+			String fetchUrl = imgRegexUrl.stringMatched(2); // URL in Anf??hrungszeichen in (2)
 			if (fetchUrl == null) {
 				fetchUrl = imgRegexUrl.stringMatched(3);
 			} // falls ohne in (3)
 			if (fetchUrl == null) {
 				continue;
 			} // schlechtes html
-				// fetchUrl ist auf jeden Fall ohne Anf?hrungszeichen
+				// fetchUrl ist auf jeden Fall ohne Anf??hrungszeichen
 			if (fetchUrl.startsWith("resource"))
 				continue; //
 			if (fetchUrl.startsWith("images")) // z.B. Flaggen

Modified: trunk/src/CacheWolf/imp/KMLImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/KMLImporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/imp/KMLImporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/imp/LOCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/LOCXMLImporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/imp/LOCXMLImporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/imp/OCGPXfetch.java
===================================================================
--- trunk/src/CacheWolf/imp/OCGPXfetch.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/imp/OCGPXfetch.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.imp;
+???package CacheWolf.imp;
 
 import CacheWolf.Global;
 import CacheWolf.MyLocale;

Modified: trunk/src/CacheWolf/imp/OCLinkImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/OCLinkImporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/imp/OCLinkImporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/imp/OCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/OCXMLImporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/imp/OCXMLImporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -452,7 +452,7 @@
 		if (name.equals("status")) {
 			// meaning of OC status :
 			// 1=Kann gesucht werden ;
-			// 2=Momentan nicht verf?gbar ;
+			// 2=Momentan nicht verf??gbar ;
 			// 3=Archiviert ;
 			// 4= ;
 			// 5= ;
@@ -468,7 +468,7 @@
 						holder = null;
 						numCacheImported--;
 					} else {
-						// Umsetzung wie in gpx f?r Status 6
+						// Umsetzung wie in gpx f??r Status 6
 						if (atts.getValue("id").equals("6")) {
 							holder.setArchived(false);
 						} else {
@@ -728,7 +728,7 @@
 					// if (holder.is_new())
 					cacheDB.removeElementAt(cacheDB.getIndex(holder));
 					DBindexID.remove(holder.GetCacheID());
-					// und Dateien l?schen?
+					// und Dateien l??schen?
 					final File tmpFile = new File(profile.dataDir + holder.getWayPoint() + ".xml");
 					tmpFile.delete();
 					// todo: was ist mit den schon heruntergeladenen Bildern?

Modified: trunk/src/CacheWolf/imp/OCXMLImporterScreen.java
===================================================================
--- trunk/src/CacheWolf/imp/OCXMLImporterScreen.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/imp/OCXMLImporterScreen.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -88,7 +88,7 @@
 
 	public OCXMLImporterScreen(String title, int options) {
 		super();
-		pref = Global.getPref(); // myPreferences sollte sp?ter auch diese Einstellungen speichern
+		pref = Global.getPref(); // myPreferences sollte sp??ter auch diese Einstellungen speichern
 
 		isGC = ((options & ISGC) > 0);
 
@@ -227,7 +227,7 @@
 				this.close(FormBase.IDCANCEL);
 			}
 			if (ev.target == okB) {
-				// distOC wird hier noch nicht in Pref eingetragen, damit noch gepr?ft werden kann, ob es gr??er oder kleiner ist als vorher
+				// distOC wird hier noch nicht in Pref eingetragen, damit noch gepr??ft werden kann, ob es gr????er oder kleiner ist als vorher
 				if (missingCheckBox != null)
 					pref.downloadAllOC = missingCheckBox.state;
 				if (imagesCheckBox != null)

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/model/DefaultListModel.java
===================================================================
--- trunk/src/CacheWolf/model/DefaultListModel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/model/DefaultListModel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.model;
+???package CacheWolf.model;
 
 import ewe.util.Vector;
 

Modified: trunk/src/CacheWolf/model/TravelBugJourneyScreenModel.java
===================================================================
--- trunk/src/CacheWolf/model/TravelBugJourneyScreenModel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/model/TravelBugJourneyScreenModel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.model;
+???package CacheWolf.model;
 
 import CacheWolf.CacheHolder;
 import CacheWolf.Global;

Modified: trunk/src/CacheWolf/model/TravelbugScreenModel.java
===================================================================
--- trunk/src/CacheWolf/model/TravelbugScreenModel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/model/TravelbugScreenModel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.model;
+???package CacheWolf.model;
 
 public class TravelbugScreenModel extends DefaultListModel {
 

Modified: trunk/src/CacheWolf/myInteractivePanel.java
===================================================================
--- trunk/src/CacheWolf/myInteractivePanel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/myInteractivePanel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/myTableControl.java
===================================================================
--- trunk/src/CacheWolf/myTableControl.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/myTableControl.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/myTableModel.java
===================================================================
--- trunk/src/CacheWolf/myTableModel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/myTableModel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/Area.java
===================================================================
--- trunk/src/CacheWolf/navi/Area.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/Area.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/AreaList.java
===================================================================
--- trunk/src/CacheWolf/navi/AreaList.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/AreaList.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/CWGPSPoint.java
===================================================================
--- trunk/src/CacheWolf/navi/CWGPSPoint.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/CWGPSPoint.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/Ellipsoid.java
===================================================================
--- trunk/src/CacheWolf/navi/Ellipsoid.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/Ellipsoid.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/GeodeticCalculator.java
===================================================================
--- trunk/src/CacheWolf/navi/GeodeticCalculator.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/GeodeticCalculator.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/GkProjection.java
===================================================================
--- trunk/src/CacheWolf/navi/GkProjection.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/GkProjection.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.
@@ -60,7 +60,7 @@
 	}
 
 	/**
-	 * Project latlon to Gau?-Kr?ger-Coordinates on ellipsoid
+	 * Project latlon to Gau??-Kr??ger-Coordinates on ellipsoid
 	 * @param latlon
 	 * @param ellipsoid
 	 * @return
@@ -89,10 +89,10 @@
 	}
 
 	/**
-	 * Converts Gau?-Kr?ger-coordinates into lat/lon on the respective ellipsoid
+	 * Converts Gau??-Kr??ger-coordinates into lat/lon on the respective ellipsoid
 	 * @param gkp
 	 * @param ellipsoid
-	 * @param stripewidth width in degree of the stripe of the Gau?-Kr?ger-System (3 degreee usually used in Gau?-Kr?ger, 6 degree usually in UTM)
+	 * @param stripewidth width in degree of the stripe of the Gau??-Kr??ger-System (3 degreee usually used in Gau??-Kr??ger, 6 degree usually in UTM)
 	 * @return
 	 */
 	public CWPoint unproject(ProjectedPoint gkp) {
@@ -100,11 +100,11 @@
 		return unproject(gkp, L0, ellip, scale);
 	}
 	/**
-	 * Converts Gau?-Kr?ger-coordinates into lat/lon on the respective ellipsoid
+	 * Converts Gau??-Kr??ger-coordinates into lat/lon on the respective ellipsoid
 	 * @param gkp
 	 * @param stripelon: Lon of the center of the stripe
 	 * @param ellipsoid
-	 * @param stripewidth width in degree of the stripe of the Gau?-Kr?ger-System (3 degreee usually used in Gau?-Kr?ger, 6 degree usually in UTM)
+	 * @param stripewidth width in degree of the stripe of the Gau??-Kr??ger-System (3 degreee usually used in Gau??-Kr??ger, 6 degree usually in UTM)
 	 * @return
 	 */
 	public static CWPoint unproject(ProjectedPoint gkp, double stripelon, Ellipsoid ellipsoid, double scale) {

Modified: trunk/src/CacheWolf/navi/GotoPanel.java
===================================================================
--- trunk/src/CacheWolf/navi/GotoPanel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/GotoPanel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -141,12 +141,12 @@
 		// Format selection for coords
 		// context menu
 		mnuContextFormt = new Menu();
-		currFormatSel = 1; // default to d? m.m
-		mnuContextFormt.addItem(miCooformat[0] = new MenuItem("d.d?"));
+		currFormatSel = 1; // default to d?? m.m
+		mnuContextFormt.addItem(miCooformat[0] = new MenuItem("d.d??"));
 		miCooformat[0].modifiers &= ~MenuItem.Checked;
-		mnuContextFormt.addItem(miCooformat[1] = new MenuItem("d?m.m\'"));
+		mnuContextFormt.addItem(miCooformat[1] = new MenuItem("d??m.m\'"));
 		miCooformat[1].modifiers |= MenuItem.Checked; // default
-		mnuContextFormt.addItem(miCooformat[2] = new MenuItem("d?m\'s\""));
+		mnuContextFormt.addItem(miCooformat[2] = new MenuItem("d??m\'s\""));
 		miCooformat[2].modifiers &= ~MenuItem.Checked;
 		mnuContextFormt.addItems(TransformCoordinates.getProjectedSystemNames());
 

Modified: trunk/src/CacheWolf/navi/LambertProjection.java
===================================================================
--- trunk/src/CacheWolf/navi/LambertProjection.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/LambertProjection.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/MapImage.java
===================================================================
--- trunk/src/CacheWolf/navi/MapImage.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/MapImage.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/MapImporter.java
===================================================================
--- trunk/src/CacheWolf/navi/MapImporter.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/MapImporter.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/MapInfoObject.java
===================================================================
--- trunk/src/CacheWolf/navi/MapInfoObject.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/MapInfoObject.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -233,7 +233,7 @@
 				throw (new IOException(MyLocale.getMsg(4301, "Lat/Lon out of range while reading ") + mapsPath + thisMap + ".wfl"));
 			}
 		} catch (final NullPointerException e) { // in.readline liefert null
-													// zur?ck, wenn keine Daten
+													// zur??ck, wenn keine Daten
 													// mehr vorhanden sind
 			throw (new IOException(MyLocale.getMsg(4303, "not enough lines in file ") + mapsPath + thisMap + ".wfl"));
 		}
@@ -338,7 +338,7 @@
 			c.y -= 1000;
 			rotationRad = (float) (center.getBearing(calcLatLon(c)) / 180 * Math.PI);
 			// note: the direction of nord can vary across the image.
-			// In Gau?-Kr?ger Projection it does change about 1 degree per 10km!
+			// In Gau??-Kr??ger Projection it does change about 1 degree per 10km!
 			// (float)java.lang.Math.atan(rotationX2y);
 			if (rotationRad > Math.PI)
 				rotationRad -= 2 * Math.PI;
@@ -499,7 +499,7 @@
 	}
 
 	/**
-	 * If you are using Gau?-Kr?ger, put lat = northing, lon = easting
+	 * If you are using Gau??-Kr??ger, put lat = northing, lon = easting
 	 * 
 	 * @param lat
 	 * @param lon

Modified: trunk/src/CacheWolf/navi/MapLoader.java
===================================================================
--- trunk/src/CacheWolf/navi/MapLoader.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/MapLoader.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/MapLoaderGui.java
===================================================================
--- trunk/src/CacheWolf/navi/MapLoaderGui.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/MapLoaderGui.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -275,7 +275,7 @@
 		String ret = Global.getPref().getMapDownloadSavePath(mapLoader.currentOnlineMapService.getMapType());
 		Global.getPref().saveCustomMapsPath(getLeadingPath(ret, Global.getPref().getMapLoadPath()));
 		// Global.getPref().saveCustomMapsPath(ret);
-		// eigentlich d?rft das erst gespeichert werden, wenn erfolgreich heruntergeladen wurde
+		// eigentlich d??rft das erst gespeichert werden, wenn erfolgreich heruntergeladen wurde
 		return ret;
 	}
 
@@ -355,7 +355,7 @@
 			for (int i = cacheDB.size() - 1; i >= 0; i--) {
 				ch = cacheDB.get(i);
 				if (!this.onlySelected || ch.is_Checked) {
-					if (ch.getPos().isValid() && ch.getPos().latDec != 0 && ch.getPos().lonDec != 0) { // TODO != 0 sollte verschwinden, sobald das handling von nicht gesetzten Koos ?berall korrekt ist
+					if (ch.getPos().isValid() && ch.getPos().latDec != 0 && ch.getPos().lonDec != 0) { // TODO != 0 sollte verschwinden, sobald das handling von nicht gesetzten Koos ??berall korrekt ist
 						numdownloaded++;
 						progressBox.setInfo(MyLocale.getMsg(1820, "Downloading map '") + mapLoader.currentOnlineMapService.getName() + "'\n" + numdownloaded + " / " + numCaches + MyLocale.getMsg(1821, "\n for cache:\n") + ch.getCacheName());
 						try {

Modified: trunk/src/CacheWolf/navi/MapSymbol.java
===================================================================
--- trunk/src/CacheWolf/navi/MapSymbol.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/MapSymbol.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/MapsList.java
===================================================================
--- trunk/src/CacheWolf/navi/MapsList.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/MapsList.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -91,7 +91,7 @@
 						tempMIO = new MapListEntry(mapsPath+"/", rawFileName);
 					else tempMIO = new MapListEntry(mapsPath+"/"+dirs.get(j)+"/", rawFileName);
 					if (tempMIO.sortEntryBBox != null) add(tempMIO);
-				}catch(Exception ex){ // TODO exception ist, glaub ich evtl ?berfl?ssig
+				}catch(Exception ex){ // TODO exception ist, glaub ich evtl ??berfl??ssig
 					if (f == null) (f=new MessageBox(MyLocale.getMsg(144, "Warning"), MyLocale.getMsg(4700, "Ignoring error while \n reading calibration file \n")+ex.toString(), FormBase.OKB)).exec();
 				} /* catch(ArithmeticException ex){ // affine contain not allowed values
 					if (f == null) (f=new MessageBox("Warning", "Ignoring error while \n reading calibration file \n"+ex.toString(), MessageBox.OKB)).exec();
@@ -116,9 +116,9 @@
 		add(tempMIO);
 	}
 
-	/* diese Routine wird gegenw?rtig f?r 3 ZWecke verwendet:
-	 * a) normal - keep given resolution --> L?sung: ?bergebene scale nutzen f?r screen
-	 * b) highest res: Ziel: Karte mit h?chster Aufl?sung, die im screen ist und m?glichst nah an lat/lon -> ich muss aufl?sung noch in Dateinamen schreiben
+	/* diese Routine wird gegenw??rtig f??r 3 ZWecke verwendet:
+	 * a) normal - keep given resolution --> L??sung: ??bergebene scale nutzen f??r screen
+	 * b) highest res: Ziel: Karte mit h??chster Aufl??sung, die im screen ist und m??glichst nah an lat/lon -> ich muss aufl??sung noch in Dateinamen schreiben
 	 * c) gegenteil von b)
 	 */
 	/**

Modified: trunk/src/CacheWolf/navi/Metrics.java
===================================================================
--- trunk/src/CacheWolf/navi/Metrics.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/Metrics.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/MovingMap.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMap.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/MovingMap.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/MovingMapCache.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMapCache.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/MovingMapCache.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/Navigate.java
===================================================================
--- trunk/src/CacheWolf/navi/Navigate.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/Navigate.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -244,7 +244,7 @@
 				SkyOrientation.getSunAzimut(gpsPos.Time, gpsPos.Date, gpsPos.latDec, gpsPos.lonDec);
 				double jd = SkyOrientation.utc2juliandate(gpsPos.Time, gpsPos.Date);
 				skyOrientationDir = SkyOrientation.getLuminaryDir(luminary, jd, gpsPos);
-			} catch (NumberFormatException e) { // irgendeine Info zu Berechnung des Sonnenaziumt fehlt (insbesondere Datum und Uhrzeit sind nicht unbedingt gleichzeitig verf?gbar wenn es einen Fix gibt)
+			} catch (NumberFormatException e) { // irgendeine Info zu Berechnung des Sonnenaziumt fehlt (insbesondere Datum und Uhrzeit sind nicht unbedingt gleichzeitig verf??gbar wenn es einen Fix gibt)
 				skyOrientationDir.set(-361, -361); // any value out of range (bigger than 360) will prevent drawArrows from drawing it
 			}
 

Modified: trunk/src/CacheWolf/navi/ProjectedPoint.java
===================================================================
--- trunk/src/CacheWolf/navi/ProjectedPoint.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/ProjectedPoint.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.
@@ -148,7 +148,7 @@
 
 
 	/**
-	 * This will give you the normal projected (e.g.Gau?-Kr?ger) easting value
+	 * This will give you the normal projected (e.g.Gau??-Kr??ger) easting value
 	 * (that means including the stripe number)
 	 * @return
 	 */

Modified: trunk/src/CacheWolf/navi/Projection.java
===================================================================
--- trunk/src/CacheWolf/navi/Projection.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/Projection.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/SelectMap.java
===================================================================
--- trunk/src/CacheWolf/navi/SelectMap.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/SelectMap.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/SkyOrientation.java
===================================================================
--- trunk/src/CacheWolf/navi/SkyOrientation.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/SkyOrientation.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.
@@ -51,7 +51,7 @@
 	public static final int DENEB = 5;
 	public static final int CYGNUS = DENEB; // Cygnus = Schwan
 	public static final int MIMOSA = 6; // second brightest star in Southern Cross
-	public static final int SOUTHERN_CROSS = MIMOSA; // SOUTHERN_CROSS = Kreus des S?dens = Crux australia
+	public static final int SOUTHERN_CROSS = MIMOSA; // SOUTHERN_CROSS = Kreus des S??dens = Crux australia
 	
 	public static final CWPoint[] STARS = {
 		// (Deklination, Rektaszension)
@@ -142,7 +142,7 @@
 			//double jd0 = java.lang.Math.floor(365.25*(jahr + 4716.)) + java.lang.Math.floor(30.6001*((double)monat+1.)) +(double)tag + b - 1524.5;
 		} catch (IndexOutOfBoundsException e) {
 			// wird von substring geworfen wenn datum / utc nicht genug Ziffern haben
-			// NumberFormatException wird au?erdem von Convert.ParseInt direkt geworfen wenn
+			// NumberFormatException wird au??erdem von Convert.ParseInt direkt geworfen wenn
 			// nicht in Int konvertiert werden kann
 			throw new NumberFormatException();
 		}
@@ -226,7 +226,7 @@
 	}
 
 	public static CWPoint getAlnilamDir(double jd, CWPoint onEarth) {
-		// Koordinaten Alnilam (mittlerer Guertelstern des Orion), Rektaszension 5h36m13s; Deklination -1?12'7 TODO Aequinoktium 2000
+		// Koordinaten Alnilam (mittlerer Guertelstern des Orion), Rektaszension 5h36m13s; Deklination -1??12'7 TODO Aequinoktium 2000
 		// Source: wikipedia
 		return equatorial2AzimutCoos(onEarth, jd, new CWPoint(-1. -12./60. -7./3600., (5. + 36./60. + 13./3600.)*15.) ); // (-1. -12./60. -7./3600., (5. + 36./60. + 13./3600.)*15.) <- wikipedia // -1.19748, 5.60978 * 15.) <- www.... // (-1. -11./60. -52./3600., (5. + 36./60. + 35./3600.)*15.)  <- Stellarium
 	}

Modified: trunk/src/CacheWolf/navi/Track.java
===================================================================
--- trunk/src/CacheWolf/navi/Track.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/Track.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.navi;
+???package CacheWolf.navi;
 
 import ewe.fx.Color;
 import ewe.io.BufferedWriter;

Modified: trunk/src/CacheWolf/navi/TrackOverlay.java
===================================================================
--- trunk/src/CacheWolf/navi/TrackOverlay.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/TrackOverlay.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.
@@ -197,7 +197,7 @@
 		draw.setColor(tr.trackColor);
 		if (paintPoint(tr.trackColor, tr.get(tr.size()-1))) notOnThisOverlaySince = 0;
 		else notOnThisOverlaySince++;
-		if (notOnThisOverlaySince > FIXATE_IF_NO_PIXELS_NUM) { // zur Performanceverbesserung: wenn in den letzten 60 Updates keines mehr f?r dieses Overlay dabei war, Overlay Pixels fest schreiben, damit doDraw entlastet wird.
+		if (notOnThisOverlaySince > FIXATE_IF_NO_PIXELS_NUM) { // zur Performanceverbesserung: wenn in den letzten 60 Updates keines mehr f??r dieses Overlay dabei war, Overlay Pixels fest schreiben, damit doDraw entlastet wird.
 			fixate();
 			notOnThisOverlaySince = 0;
 		}
@@ -223,35 +223,35 @@
 
 /* draw zeichnet auf _awtImage
  * image.drawImage erzeugt bufferedImage, wenn es vorher null war 
- * und kopiert den entsprechenden Teil in das ?bergebene Surface
+ * und kopiert den entsprechenden Teil in das ??bergebene Surface
  * Das Problem ist, dass bufferedImage nicht mehr upgedatet wird, wenn
  * es einmal erzugt wurde. Es wird nur dann upgedatet, wenn das Image ein anderes wird
- * oder die Maske eine andere. Das Update erfolgt dann ?ber doDraw, was doCheckMask aufruft,
+ * oder die Maske eine andere. Das Update erfolgt dann ??ber doDraw, was doCheckMask aufruft,
  * das das eigentliche kopieren aus _awtImage vornimmt.
  * 
- *  Problem: das kopieren von _awtImage in BufferedImage ist sehr zeitaufw?ndig, weil
- *  es keine native Routine ist und jedes Pixel einzeln gepr?ft wird.
- *  Deswegen w?re die beste L?sung, wenn ich bufferedImage direkt updaten k?nnte.
+ *  Problem: das kopieren von _awtImage in BufferedImage ist sehr zeitaufw??ndig, weil
+ *  es keine native Routine ist und jedes Pixel einzeln gepr??ft wird.
+ *  Deswegen w??re die beste L??sung, wenn ich bufferedImage direkt updaten k??nnte.
  *  Aber bufferedImage ist privat, ich kann auch in abgeleiteten Klassen nicht drauf
  *  zugreifen. 
  *  
- *  Zur Not w?re auch denkbar, doDraw zu ?berschreiben, um bei jedem Aufruf alle 
+ *  Zur Not w??re auch denkbar, doDraw zu ??berschreiben, um bei jedem Aufruf alle 
  *  Trackpoints neu zu zeichnen.
  *  Work-Aorund: draw.drawImage(image,null,Color.Pink,0,0,1,1); bewirkt, dass awtImage ins
- *  bufferedImage kopiert wird. Dabei wird die transparentColor (in mImage) nicht ge?ndert
- *  und beim Aufruf von doDraw wird wieder die urspr?ngliche transparentColor verwendet
+ *  bufferedImage kopiert wird. Dabei wird die transparentColor (in mImage) nicht ge??ndert
+ *  und beim Aufruf von doDraw wird wieder die urspr??ngliche transparentColor verwendet
  *  
  */
 //was alles nicht funktioniert:
 //drawmask.setDrawOp(Graphics.DRAW_OVER);
 //drawmask.drawRect(x-1, y-1, 2, 2, 1);
 //this.setImage(image, mask);
-//n?chster Versuch: image.bufferedImage in ewe.fx.Image public definieren !!!
+//n??chster Versuch: image.bufferedImage in ewe.fx.Image public definieren !!!
 //image.rgb
 //draw._g.surfaceData.bufImg.raster.data[y*this.location.width + x] = -65536; := image._awtImage
 //((Image)image).eImage(colorOrMask)._awtImage.raster.data[0]=0;
 //image
-//((BufferedImage)(image).se.^.bufferedImage.raster.data[y*this.location.width + x]=-65536; //was dort steht wird tats?chlich angezeigt, allerdings kann ich es nicht direkt setzen :-(
+//((BufferedImage)(image).se.^.bufferedImage.raster.data[y*this.location.width + x]=-65536; //was dort steht wird tats??chlich angezeigt, allerdings kann ich es nicht direkt setzen :-(
 //int[] markPixels = new int[4];
 //for (int i = 0; i<markPixels.length; i++) { markPixels[i] = -65536; }
 //image.transparent = null; hilft auhc nicht
@@ -277,8 +277,8 @@
 //imageMayChange = true; // hilft auch nicht :-(
 
 /*
- * In der ewe-VM f?r PocketPC-ARM funktioniert die Festlegung einer 
- * transparenten Farbe nicht (Hintergrund wird wei? statt durchsichtig)
+ * In der ewe-VM f??r PocketPC-ARM funktioniert die Festlegung einer 
+ * transparenten Farbe nicht (Hintergrund wird wei?? statt durchsichtig)
  * deswegen (und weil in ewe-VM effizienter) Umstellung auf Transparenzmaske
  * statt transparenter Farbe
  * TODO Dies ist in Java-VM allerdings extrem Speicher fressend -> evtl abfragen 

Modified: trunk/src/CacheWolf/navi/TrackPoint.java
===================================================================
--- trunk/src/CacheWolf/navi/TrackPoint.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/TrackPoint.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/TransformCoordinates.java
===================================================================
--- trunk/src/CacheWolf/navi/TransformCoordinates.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/TransformCoordinates.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.
@@ -41,7 +41,7 @@
  *  * http://crs.bkg.bund.de/crseu/crs/descrtrans/BeTA/BETA2007testdaten.csv
  *  * http://www.lverma.nrw.de/produkte/raumbezug/koordinatentransformation/Koordinatentransformation.htm
  * Now, that this is completed: there is a much more precise method right now published
- * by the Bundesamt f?r Kartographie und Geod?sie for whole Germany: see:
+ * by the Bundesamt f??r Kartographie und Geod??sie for whole Germany: see:
  *  * http://crs.bkg.bund.de/crseu/crs/descrtrans/BeTA/BETA2007dokumentation.pdf
  *  * http://crs.bkg.bund.de/crs-eu/ click on "national CRS" -> germany -> DE_DHDN / GK_3 -> DE_DHDN (BeTA, 2007) to ETRS89
  *  
@@ -53,12 +53,12 @@
 
 	public static final int EPSG_WGS84 					= 4326; 
 	public static final int EPSG_ETRS89 				= 25832; // TODO support it anyhow 
-	/** Gau?-Kr?ger, Bessel 1841, Potsdam (DHDN)  */
+	/** Gau??-Kr??ger, Bessel 1841, Potsdam (DHDN)  */
 	public static final int EPSG_GERMAN_GK2 			= 31466; 
 	public static final int EPSG_GERMAN_GK3 			= 31467; 
 	public static final int EPSG_GERMAN_GK4 			= 31468; 
 	public static final int EPSG_GERMAN_GK5 			= 31469;
-	/** Gau?-Boaga, Monte Mario, Roma 1940, IT_ROMA1940 */
+	/** Gau??-Boaga, Monte Mario, Roma 1940, IT_ROMA1940 */
 	public static final int EPSG_ITALIAN_GB_EW1 		= 3003; 
 	public static final int EPSG_ITALIAN_GB_EW2 		= 3004;
 	/** Austrian Lambert, Bessel 1841, Hermannskogel */
@@ -116,24 +116,24 @@
 
 	public static final LocalSystem[] localSystems = {
 		new LocalSystem(TransformCoordinates.LOCALSYSTEM_UTM_WGS84,             "UTM",         "utm",   ProjectedPoint.PJ_UTM_WGS84.zoneSeperately),
-		new LocalSystem(TransformCoordinates.LOCALSYSTEM_GERMAN_GK, 			"de Gau?-K.",  "de.gk", ProjectedPoint.PJ_GERMAN_GK.zoneSeperately),
+		new LocalSystem(TransformCoordinates.LOCALSYSTEM_GERMAN_GK, 			"de Gau??-K.",  "de.gk", ProjectedPoint.PJ_GERMAN_GK.zoneSeperately),
 		new LocalSystem(TransformCoordinates.LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD,  "at Lamb.",    "at.lb", ProjectedPoint.PJ_AUSTRIAN_LAMBERT_OLD.zoneSeperately),
-		new LocalSystem(TransformCoordinates.LOCALSYSTEM_ITALIAN_GB,            "it Gau?-B.",  "it.gb", ProjectedPoint.PJ_ITALIAN_GB.zoneSeperately),
+		new LocalSystem(TransformCoordinates.LOCALSYSTEM_ITALIAN_GB,            "it Gau??-B.",  "it.gb", ProjectedPoint.PJ_ITALIAN_GB.zoneSeperately),
 		new LocalSystem(TransformCoordinates.LOCALSYSTEM_FRANCE_LAMBERT_IIE,    "fr Lamb-IIe", "fr.l2", ProjectedPoint.PJ_FRENCH_LAMBERT_NTF_II.zoneSeperately)
 	};
 	
 
 	//	 taken from http://www.crs-geo.eu/crseu/EN/Home/homepage__node.html?__nnn=true click on "national CRS" -> germany -> DE_DHDN / GK_3 -> DE_DHDN (North) to ETRS89
 	//	 they are the same as http://www.geoclub.de/files/GK_nach_GPS.xls "Parametersatz 4 = Deutschland Nord" (rotation *-1)
-	/** use this for nord Germany, maximum deviation sub meter, valid in the former BRD (west germany) in 52?20' N ... 55?00' N */
+	/** use this for nord Germany, maximum deviation sub meter, valid in the former BRD (west germany) in 52??20' N ... 55??00' N */
 	private static final TransformParameters GK_NORD_GERMANY_TO_WGS84 = new TransformParameters(590.5, 69.5, 411.6, 0.796, 0.052, 3.601, 8.300, BESSEL);
 
 	//	 taken from http://crs.bkg.bund.de/crs-eu/ click on "national CRS" -> germany -> DE_DHDN / GK_3 -> DE_DHDN (Middle) to ETRS89 (rotation *-1)
-	/** use this for mid-Germany, maximum deviation sub meter, valid in the former BRD (west germany) in 50?20' N ... 52?20' N */
+	/** use this for mid-Germany, maximum deviation sub meter, valid in the former BRD (west germany) in 50??20' N ... 52??20' N */
 	private static final TransformParameters GK_MID_GERMANY_TO_WGS84 = new TransformParameters(584.8, 67.0, 400.3, -0.105, -0.013, 2.378, 10.290, BESSEL);
 
 	//	 taken from http://crs.bkg.bund.de/crs-eu/ click on "national CRS" -> germany -> DE_DHDN / GK_3 -> DE_DHDN (South) to ETRS89 (rotation *-1)
-	/** use this for south Germany, maximum deviation sub meter, valid in the former BRD (west germany) in 47?00' N ... 50?20' N */
+	/** use this for south Germany, maximum deviation sub meter, valid in the former BRD (west germany) in 47??00' N ... 50??20' N */
 	private static final TransformParameters GK_SOUTH_GERMANY_TO_WGS84 = new TransformParameters(597.1, 71.4, 412.1, -0.894, -0.068, 1.563, -7.580, BESSEL);
 
 	private static Area FORMER_GDR = new Area(new CWPoint(54.923414, 10.503013), new CWPoint(50.402578, 14.520637)); 
@@ -148,7 +148,7 @@
 	// private static final TransformParameters GK_GERMANY_1995_TO_WGS84 = new TransformParameters(582, 105, 414, -1.04, -0.35, +3.08, -8.3, BESSEL);
 
 	// taken from http://www.geodatenzentrum.de/geodaten/gdz_home1.gdz_home_start?gdz_home_para1=Technische%A0Hinweise&gdz_home_para2=Technische%A0Hinweise&gdz_home_menu_nr=10&gdz_home_menu_nr2=1&gdz_home_para3=/auftrag/html/gdz_tech_geo_deu.htm&gdz_home_spr=deu&gdz_home_para0=0
-	/** Use this for Germany if there is no more specific available. Deviations unknown. Data source: Bundesamt f?r Kartographie und Geod?sie, taken from website on: 1-11-2007 */
+	/** Use this for Germany if there is no more specific available. Deviations unknown. Data source: Bundesamt f??r Kartographie und Geod??sie, taken from website on: 1-11-2007 */
 	// private static final TransformParameters GK_GERMANY_BKG_TO_WGS84 = new TransformParameters(586, 87, 409, -0.52, -0.15, 2.82, -9, BESSEL);
 
 	// take from http://www.geoclub.de/files/GK_nach_GPS.xls "Parametersatz 2 = Deutschland 2001" (rotation *-1)
@@ -156,7 +156,7 @@
 	private static final TransformParameters GK_GERMANY_2001_TO_WGS84 = new TransformParameters(598.1, 73.7, 418.2, -0.202, -0.045, 2.455, 6.700, BESSEL);
 
 	// taken from http://crs.bkg.bund.de/crs-eu/ -> italy -> ROMA40 (change the sign of the rotation parameters!)
-	/** The italian variant of Gau?-Kr?ger (Gau?-Boaga) */
+	/** The italian variant of Gau??-Kr??ger (Gau??-Boaga) */
 	private static final TransformParameters GB_ITALIAN_PENINSULAR_TO_WGS84 =  new TransformParameters(-104.1, -49.1, -9.9, -0.971, 2.917, -0.714, -11.68, HAYFORD1909);
 	//static final Area ITALY_PENINSULAR = new Area(new CWPoint());
 	private static final TransformParameters GB_ITALIAN_SARDINIA_TO_WGS84 =  new TransformParameters(-168.6, -34.0, 38.6, 0.374, 0.679, 1.379, 9.48, HAYFORD1909);
@@ -173,7 +173,7 @@
 	// taken from taken from http://www.crs-geo.eu/crseu/EN/Home/homepage__node.html?__nnn=true click on "national CRS" -> Austria -> AT (translation *-1 as of 11-8-2009)
 	/** Austria Datum Hermannskogel, AT_MGI accuracy about 1.5m */
 	private static final TransformParameters LAMBERT_AUSTRIAN_OLD_TO_WGS84 = new TransformParameters(577.326, 90.129, 463.919, -5.136599, -1.4742, -5.297044, 2.4232, BESSEL);
-	// ?bersicht ?ber alle Transformparameter und EPSG-COdes und Projektionenm (PORJ4):
+	// ??bersicht ??ber alle Transformparameter und EPSG-COdes und Projektionenm (PORJ4):
 	// http://svn.osgeo.org/metacrs/proj/trunk/proj/nad/epsg
 	//public static final TransformParameters WGS72_TO_WGS84 =  new TransformParameters(0, 0, 4.5, 0, 0, -0.554, 0.219);
 	private static final TransformParameters LAMBERT_FRENCH_NTF_TO_WGS84 = new TransformParameters(-168    ,    -60,320      ,0         ,0       ,0         ,0      , CLARKE1880IGN);
@@ -232,7 +232,7 @@
 	/**
 	 * 
 	 * @param epsgcode
-	 * @return region code as needed for GkPoint, -1 if not Gau?-Kr?ger or not supported
+	 * @return region code as needed for GkPoint, -1 if not Gau??-Kr??ger or not supported
 	 * Inside one ProjectedRegion the epsg-code (zone / stripe) can be automatically choosen
 	 * depending on lat / lon.
 	 */
@@ -330,7 +330,7 @@
 	}
 
 	/**
-	 * this routine gives the correct Gau?-Kr?ger coordinates
+	 * this routine gives the correct Gau??-Kr??ger coordinates
 	 * in the stripe specified by EPSG-Code
 	 * @param wgs84
 	 * @param epsg_localsystem

Modified: trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java
===================================================================
--- trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.
@@ -43,7 +43,7 @@
 
 	/**
 	 * return ll transformed into the desired coordinate reference system
-	 * if the prjection is Gau?-Kr?ger, easting will be put in lonDec and
+	 * if the prjection is Gau??-Kr??ger, easting will be put in lonDec and
 	 * northing in latDec
 	 * @param ll
 	 * @return
@@ -72,7 +72,7 @@
 
 	/**
 	 * convert any supported coordinate reference system WGS84
-	 * if p is a Gau?-Kr?ger point, put latdec = northing, londec = easting 
+	 * if p is a Gau??-Kr??ger point, put latdec = northing, londec = easting 
 	 * @param p
 	 * @return
 	 */

Modified: trunk/src/CacheWolf/navi/UTMProjection.java
===================================================================
--- trunk/src/CacheWolf/navi/UTMProjection.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/UTMProjection.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/touchControls/AniImageGrayScaled.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/AniImageGrayScaled.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/touchControls/AniImageGrayScaled.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/touchControls/ICommandListener.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/ICommandListener.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/touchControls/ICommandListener.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/touchControls/ImageWithText.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/ImageWithText.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/touchControls/ImageWithText.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/touchControls/MovingMapControlItem.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/MovingMapControlItem.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/touchControls/MovingMapControlItem.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.
@@ -37,7 +37,7 @@
 /**
  * class which represents a item which can be displayed on the map
  * 
- * @author H?lmchen
+ * @author H??lmchen
  */
 public abstract class MovingMapControlItem {
 

Modified: trunk/src/CacheWolf/navi/touchControls/MovingMapControlItemButton.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/MovingMapControlItemButton.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/touchControls/MovingMapControlItemButton.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/touchControls/MovingMapControlItemText.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/MovingMapControlItemText.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/touchControls/MovingMapControlItemText.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/touchControls/MovingMapControlSettings.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/MovingMapControlSettings.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/touchControls/MovingMapControlSettings.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/touchControls/MovingMapControls.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/MovingMapControls.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/navi/touchControls/MovingMapControls.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.
@@ -36,7 +36,7 @@
 import ewe.util.Vector;
 
 /**
- * @author H?lmchen
+ * @author H??lmchen
  */
 
 public class MovingMapControls implements ICommandListener {

Modified: trunk/src/CacheWolf/utils/CWPartialInputStream.java
===================================================================
--- trunk/src/CacheWolf/utils/CWPartialInputStream.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/utils/CWPartialInputStream.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*********************************************************************************
+???/*********************************************************************************
  *  Ewe Virtual Machine - Version 1.14, January 24, 2002                         *
  *  Copyright (C) 1999-2002 Michael L Brereton <michael_brereton at ewesoft.com>    *
  *  All Rights Reserved                                                          *

Modified: trunk/src/CacheWolf/utils/CWWrapper.java
===================================================================
--- trunk/src/CacheWolf/utils/CWWrapper.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/utils/CWWrapper.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/utils/FileBugfix.java
===================================================================
--- trunk/src/CacheWolf/utils/FileBugfix.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/utils/FileBugfix.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/utils/MessageBoxFixed.java
===================================================================
--- trunk/src/CacheWolf/utils/MessageBoxFixed.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/utils/MessageBoxFixed.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/utils/MutableInteger.java
===================================================================
--- trunk/src/CacheWolf/utils/MutableInteger.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/utils/MutableInteger.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/utils/URLUTF8Encoder.java
===================================================================
--- trunk/src/CacheWolf/utils/URLUTF8Encoder.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/utils/URLUTF8Encoder.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-    /*
+???    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/view/ITravelbugScreen.java
===================================================================
--- trunk/src/CacheWolf/view/ITravelbugScreen.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/ITravelbugScreen.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view;
+???package CacheWolf.view;
 
 public interface ITravelbugScreen {
 

Modified: trunk/src/CacheWolf/view/TravelBugScreenFactory.java
===================================================================
--- trunk/src/CacheWolf/view/TravelBugScreenFactory.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/TravelBugScreenFactory.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view;
+???package CacheWolf.view;
 
 import java.lang.reflect.Constructor;
 

Modified: trunk/src/CacheWolf/view/TravelbugJourneyScreenFactory.java
===================================================================
--- trunk/src/CacheWolf/view/TravelbugJourneyScreenFactory.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/TravelbugJourneyScreenFactory.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view;
+???package CacheWolf.view;
 
 import java.lang.reflect.Constructor;
 

Modified: trunk/src/CacheWolf/view/ewe/TravelbugJourneyScreen.java
===================================================================
--- trunk/src/CacheWolf/view/ewe/TravelbugJourneyScreen.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/ewe/TravelbugJourneyScreen.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-/*
+???/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/view/ewe/TravelbugMenu.java
===================================================================
--- trunk/src/CacheWolf/view/ewe/TravelbugMenu.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/ewe/TravelbugMenu.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view.ewe;
+???package CacheWolf.view.ewe;
 
 import CacheWolf.Global;
 import CacheWolf.MyLocale;

Modified: trunk/src/CacheWolf/view/pda/PDADateTimeChooser.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDADateTimeChooser.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/pda/PDADateTimeChooser.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view.pda;
+???package CacheWolf.view.pda;
 
 import CacheWolf.MyLocale;
 import ewe.fx.Color;

Modified: trunk/src/CacheWolf/view/pda/PDAEmptyButton.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAEmptyButton.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/pda/PDAEmptyButton.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view.pda;
+???package CacheWolf.view.pda;
 
 import ewe.ui.mButton;
 

Modified: trunk/src/CacheWolf/view/pda/PDAList.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAList.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/pda/PDAList.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view.pda;
+???package CacheWolf.view.pda;
 
 import CacheWolf.Global;
 import CacheWolf.MyLocale;

Modified: trunk/src/CacheWolf/view/pda/PDAListButton.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAListButton.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/pda/PDAListButton.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view.pda;
+???package CacheWolf.view.pda;
 
 import ewe.fx.Color;
 import ewe.fx.Font;

Modified: trunk/src/CacheWolf/view/pda/PDAListButtonObject.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAListButtonObject.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/pda/PDAListButtonObject.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view.pda;
+???package CacheWolf.view.pda;
 
 import CacheWolf.Global;
 import ewe.fx.Font;

Modified: trunk/src/CacheWolf/view/pda/PDAMenu.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAMenu.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/pda/PDAMenu.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view.pda;
+???package CacheWolf.view.pda;
 
 import CacheWolf.MyLocale;
 import ewe.ui.ControlEvent;

Modified: trunk/src/CacheWolf/view/pda/PDAMenuButton.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAMenuButton.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/pda/PDAMenuButton.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view.pda;
+???package CacheWolf.view.pda;
 
 import ewe.fx.Color;
 import ewe.fx.Font;

Modified: trunk/src/CacheWolf/view/pda/PDAMenuButtonObject.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAMenuButtonObject.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/pda/PDAMenuButtonObject.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view.pda;
+???package CacheWolf.view.pda;
 
 import ewe.fx.Dimension;
 import ewe.ui.ButtonObject;

Modified: trunk/src/CacheWolf/view/pda/PDAOptionPane.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAOptionPane.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/pda/PDAOptionPane.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view.pda;
+???package CacheWolf.view.pda;
 
 import CacheWolf.Preferences;
 import ewe.fx.Color;

Modified: trunk/src/CacheWolf/view/pda/PDATravelbugDetailMenu.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDATravelbugDetailMenu.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/pda/PDATravelbugDetailMenu.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view.pda;
+???package CacheWolf.view.pda;
 
 import CacheWolf.CacheDB;
 import CacheWolf.CacheHolder;
@@ -119,7 +119,7 @@
 		} else if (action.equals(DELETE)) {
 			// LOESCHEN DES TB's aus der Datenbank ist Boese!!!
 			// Erst mal eine Sicherheitesabfrage bauen:
-			int r = PDAOptionPane.showConfirmDialog(this.getFrame(), "Sind Sie Sicher???", "Wollen Sie wirklich den TB l?schen??");
+			int r = PDAOptionPane.showConfirmDialog(this.getFrame(), "Sind Sie Sicher???", "Wollen Sie wirklich den TB l??schen??");
 			if (r == PDAOptionPane.OK) {
 				for (int i = 0; i < journeyScreen.model.allTravelbugJourneys.size(); i++) {
 					TravelbugJourney tbJourney = journeyScreen.model.allTravelbugJourneys.getTBJourney(i);

Modified: trunk/src/CacheWolf/view/pda/PDATravelbugDetailPanel.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDATravelbugDetailPanel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/pda/PDATravelbugDetailPanel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view.pda;
+???package CacheWolf.view.pda;
 
 import CacheWolf.MyLocale;
 import CacheWolf.Preferences;

Modified: trunk/src/CacheWolf/view/pda/PDATravelbugJourneyScreen.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDATravelbugJourneyScreen.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/pda/PDATravelbugJourneyScreen.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view.pda;
+???package CacheWolf.view.pda;
 
 import CacheWolf.MyLocale;
 import CacheWolf.TravelbugJourney;

Modified: trunk/src/CacheWolf/view/pda/PDATravelbugMenuPanel.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDATravelbugMenuPanel.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/pda/PDATravelbugMenuPanel.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view.pda;
+???package CacheWolf.view.pda;
 
 import CacheWolf.CacheDB;
 import CacheWolf.CacheHolder;

Modified: trunk/src/CacheWolf/view/pda/PDATravelbugScreen.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDATravelbugScreen.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/pda/PDATravelbugScreen.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view.pda;
+???package CacheWolf.view.pda;
 
 import CacheWolf.MyLocale;
 import CacheWolf.Travelbug;

Modified: trunk/src/CacheWolf/view/pda/PDATravelbugSortMenu.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDATravelbugSortMenu.java	2011-09-13 17:52:16 UTC (rev 3081)
+++ trunk/src/CacheWolf/view/pda/PDATravelbugSortMenu.java	2011-09-13 18:28:07 UTC (rev 3082)
@@ -1,4 +1,4 @@
-package CacheWolf.view.pda;
+???package CacheWolf.view.pda;
 
 import CacheWolf.MyLocale;
 import ewe.fx.Rect;



From pfeffer at mail.berlios.de  Wed Sep 14 03:10:17 2011
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Wed, 14 Sep 2011 03:10:17 AM +0200
Subject: [Cachewolf-svn] r3083 - trunk
Message-ID: <20110914011017.CCD72481306@sheep.berlios.de>

Author: pfeffer
Date: 2011-09-14 03:10:17 +0200 (Wed, 14 Sep 2011)
New Revision: 3083

Modified:
   trunk/build.xml
Log:
changed the encoding for *.java files to UTF8

Modified: trunk/build.xml
===================================================================
--- trunk/build.xml	2011-09-13 18:28:07 UTC (rev 3082)
+++ trunk/build.xml	2011-09-14 01:10:17 UTC (rev 3083)
@@ -331,7 +331,7 @@
 
 	<target name="compile" depends="fixreleasenumber" description="compile sources with java">
 		<mkdir dir="${classes.dir}" />
-		<javac source="1.3" target="1.1" encoding="windows-1252"
+		<javac source="1.3" target="1.1" encoding="utf8"
 			classpath="./lib/CompileEwe.zip:./lib/" destdir="${classes.dir}"
 			deprecation="off" nowarn="on" srcdir="src"
 			includes="CacheWolf/*.java,CacheWolf/*/*.java,org/*.java,org/*/*.java" />



From pfeffer at mail.berlios.de  Wed Sep 14 03:12:01 2011
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Wed, 14 Sep 2011 03:12:01 AM +0200
Subject: [Cachewolf-svn] r3084 - trunk
Message-ID: <20110914011201.61D97481306@sheep.berlios.de>

Author: pfeffer
Date: 2011-09-14 03:12:01 +0200 (Wed, 14 Sep 2011)
New Revision: 3084

Modified:
   trunk/build.xml
Log:
corrected spelling

Modified: trunk/build.xml
===================================================================
--- trunk/build.xml	2011-09-14 01:10:17 UTC (rev 3083)
+++ trunk/build.xml	2011-09-14 01:12:01 UTC (rev 3084)
@@ -331,7 +331,7 @@
 
 	<target name="compile" depends="fixreleasenumber" description="compile sources with java">
 		<mkdir dir="${classes.dir}" />
-		<javac source="1.3" target="1.1" encoding="utf8"
+		<javac source="1.3" target="1.1" encoding="UTF-8"
 			classpath="./lib/CompileEwe.zip:./lib/" destdir="${classes.dir}"
 			deprecation="off" nowarn="on" srcdir="src"
 			includes="CacheWolf/*.java,CacheWolf/*/*.java,org/*.java,org/*/*.java" />



From pfeffer at mail.berlios.de  Wed Sep 14 09:56:53 2011
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Wed, 14 Sep 2011 09:56:53 AM +0200
Subject: [Cachewolf-svn] r3085 - trunk/src/CacheWolf
Message-ID: <20110914075653.9E3E5481287@sheep.berlios.de>

Author: pfeffer
Date: 2011-09-14 09:56:53 +0200 (Wed, 14 Sep 2011)
New Revision: 3085

Modified:
   trunk/src/CacheWolf/HttpConnection.java
Log:
maybe this fixes a problem with TLS/SSL

Modified: trunk/src/CacheWolf/HttpConnection.java
===================================================================
--- trunk/src/CacheWolf/HttpConnection.java	2011-09-14 01:12:01 UTC (rev 3084)
+++ trunk/src/CacheWolf/HttpConnection.java	2011-09-14 07:56:53 UTC (rev 3085)
@@ -455,7 +455,7 @@
 		ba.clear();
 		while(true){
 			int got = is.read();
-			if (got == -1) throw new IOException("Unexpected end of stream.");
+			if (got == -1) break; // throw new IOException("Unexpected end of stream." + ba.toString());
 			if (got == 10){
 				if (lastReceived == 10) break; //Got all the data now.
 			}else if (got == 13) continue; //Ignore CR.



From pfeffer at mail.berlios.de  Wed Sep 14 11:42:06 2011
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Wed, 14 Sep 2011 11:42:06 AM +0200
Subject: [Cachewolf-svn] r3086 - trunk/src/CacheWolf
Message-ID: <20110914094206.3C49748129A@sheep.berlios.de>

Author: pfeffer
Date: 2011-09-14 11:42:05 +0200 (Wed, 14 Sep 2011)
New Revision: 3086

Modified:
   trunk/src/CacheWolf/Attribute.java
Log:
Byte Order Mark (BOM) at the beginning of the UTF-8 encoded file causes javac on the automatic build machine to stop compiling

Modified: trunk/src/CacheWolf/Attribute.java
===================================================================
--- trunk/src/CacheWolf/Attribute.java	2011-09-14 07:56:53 UTC (rev 3085)
+++ trunk/src/CacheWolf/Attribute.java	2011-09-14 09:42:05 UTC (rev 3086)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.



From pfeffer at mail.berlios.de  Wed Sep 14 11:43:46 2011
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Wed, 14 Sep 2011 11:43:46 AM +0200
Subject: [Cachewolf-svn] r3087 - trunk/src/CacheWolf
Message-ID: <20110914094346.B7DB248129A@sheep.berlios.de>

Author: pfeffer
Date: 2011-09-14 11:43:46 +0200 (Wed, 14 Sep 2011)
New Revision: 3087

Modified:
   trunk/src/CacheWolf/Attributes.java
Log:
Test if just saving it in eclipse removes the BOM

Modified: trunk/src/CacheWolf/Attributes.java
===================================================================
--- trunk/src/CacheWolf/Attributes.java	2011-09-14 09:42:05 UTC (rev 3086)
+++ trunk/src/CacheWolf/Attributes.java	2011-09-14 09:43:46 UTC (rev 3087)
@@ -46,7 +46,7 @@
 
 	/**
 	 * Get the number of attributes in the list
-	 * 
+	 *
 	 * @return number of attributes
 	 */
 	public int count() {
@@ -93,7 +93,7 @@
 
 	/**
 	 * Add a new attribute to the array by Name, meaning its icon picture name
-	 * 
+	 *
 	 * @param attributeName
 	 */
 	public void add(String attributeName) {
@@ -109,7 +109,7 @@
 
 	/**
 	 * Add a new attribute to the array by ID and Inc as you get it from GC gpx-File
-	 * 
+	 *
 	 * @param GC
 	 *          attribute ID
 	 * @param GC
@@ -140,7 +140,7 @@
 
 	/**
 	 * Add a new attribute to the array by OC-IDas you get it from OC xml/zip-download
-	 * 
+	 *
 	 * @param OC
 	 *          attribute ID
 	 */
@@ -159,7 +159,7 @@
 
 	/**
 	 * to get the Bit Representation of the Attributs of this Cache
-	 * 
+	 *
 	 * @return the Long array representing the Attributes of this Cache
 	 */
 	public long[] getAttribsAsBits() {
@@ -173,7 +173,7 @@
 
 	/**
 	 * Get the i-th attribute
-	 * 
+	 *
 	 * @param i
 	 *          The number for which the attribute is to be retrieved
 	 * @return The attribute



From apreisser at mail.berlios.de  Wed Sep 14 07:54:31 2011
From: apreisser at mail.berlios.de (apreisser at mail.berlios.de)
Date: Wed, 14 Sep 2011 07:54:31 PM +0200
Subject: [Cachewolf-svn] r3088 - trunk/src/CacheWolf/view/pda
Message-ID: <20110914175432.5240948122D@sheep.berlios.de>

Author: apreisser
Date: 2011-09-14 19:54:31 +0200 (Wed, 14 Sep 2011)
New Revision: 3088

Modified:
   trunk/src/CacheWolf/view/pda/PDAMenuButtonObject.java
Log:
Height of button is determined by height of the screen instead of a constant value

Modified: trunk/src/CacheWolf/view/pda/PDAMenuButtonObject.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAMenuButtonObject.java	2011-09-14 09:43:46 UTC (rev 3087)
+++ trunk/src/CacheWolf/view/pda/PDAMenuButtonObject.java	2011-09-14 17:54:31 UTC (rev 3088)
@@ -2,6 +2,7 @@
 
 import ewe.fx.Dimension;
 import ewe.ui.ButtonObject;
+import ewe.ui.Gui;
 
 public class PDAMenuButtonObject extends ButtonObject{
 	private PDAMenuButton pdaMenuButton;
@@ -12,13 +13,12 @@
 		this.pdaMenuButton = pdaListButton;
 	}
 
-	  public Dimension calculateSize(Dimension paramDimension){
-		  calculateSize = super.calculateSize(paramDimension);
-		  if (calculateSize.height < 100){
-			  calculateSize.height=100;
-			  paramDimension.height=100;
-		  }
-		  return calculateSize;
-	  }
+	public Dimension calculateSize(Dimension paramDimension) {
+		calculateSize = super.calculateSize(paramDimension);
+		if (calculateSize.height < Gui.screenSize.height / 8) {
+			calculateSize.height = paramDimension.height = Gui.screenSize.height / 8;
+		}
+		return calculateSize;
+	}
 
 }



From araber95 at mail.berlios.de  Thu Sep 15 08:39:41 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Thu, 15 Sep 2011 08:39:41 AM +0200
Subject: [Cachewolf-svn] r3089 - in trunk/src/CacheWolf: . exp imp model
	navi navi/touchControls utils view view/ewe view/pda
Message-ID: <20110915063942.4BDBF481306@sheep.berlios.de>

Author: araber95
Date: 2011-09-15 08:39:41 +0200 (Thu, 15 Sep 2011)
New Revision: 3089

Modified:
   trunk/src/CacheWolf/Attributes.java
   trunk/src/CacheWolf/AttributesSelector.java
   trunk/src/CacheWolf/AttributesViewer.java
   trunk/src/CacheWolf/CWPoint.java
   trunk/src/CacheWolf/CWProgressBar.java
   trunk/src/CacheWolf/CacheDB.java
   trunk/src/CacheWolf/CacheHolder.java
   trunk/src/CacheWolf/CacheHolderDetail.java
   trunk/src/CacheWolf/CacheImages.java
   trunk/src/CacheWolf/CacheList.java
   trunk/src/CacheWolf/CacheSize.java
   trunk/src/CacheWolf/CacheTerrDiff.java
   trunk/src/CacheWolf/CacheType.java
   trunk/src/CacheWolf/CacheWolf.java
   trunk/src/CacheWolf/CalcPanel.java
   trunk/src/CacheWolf/Common.java
   trunk/src/CacheWolf/CoordsScreen.java
   trunk/src/CacheWolf/DBStats.java
   trunk/src/CacheWolf/DataMover.java
   trunk/src/CacheWolf/DataMoverForm.java
   trunk/src/CacheWolf/DateFormat.java
   trunk/src/CacheWolf/DateTimeChooser.java
   trunk/src/CacheWolf/DescriptionPanel.java
   trunk/src/CacheWolf/DetailsPanel.java
   trunk/src/CacheWolf/Extractor.java
   trunk/src/CacheWolf/Filter.java
   trunk/src/CacheWolf/FilterData.java
   trunk/src/CacheWolf/FilterScreen.java
   trunk/src/CacheWolf/GPSPortOptions.java
   trunk/src/CacheWolf/GeoCodeGui.java
   trunk/src/CacheWolf/GeocoderOsm.java
   trunk/src/CacheWolf/Global.java
   trunk/src/CacheWolf/GuiImageBroker.java
   trunk/src/CacheWolf/HintLogPanel.java
   trunk/src/CacheWolf/HttpConnection.java
   trunk/src/CacheWolf/ImageDetailForm.java
   trunk/src/CacheWolf/ImageInfo.java
   trunk/src/CacheWolf/ImageInteractivePanel.java
   trunk/src/CacheWolf/ImagePanel.java
   trunk/src/CacheWolf/ImagePanelImage.java
   trunk/src/CacheWolf/InfoBox.java
   trunk/src/CacheWolf/InfoScreen.java
   trunk/src/CacheWolf/InputScreen.java
   trunk/src/CacheWolf/Log.java
   trunk/src/CacheWolf/LogList.java
   trunk/src/CacheWolf/MainForm.java
   trunk/src/CacheWolf/MainMenu.java
   trunk/src/CacheWolf/MainTab.java
   trunk/src/CacheWolf/Matrix.java
   trunk/src/CacheWolf/MyComparer.java
   trunk/src/CacheWolf/MyEditor.java
   trunk/src/CacheWolf/MyLocale.java
   trunk/src/CacheWolf/MyScrollBarPanel.java
   trunk/src/CacheWolf/NewProfileForm.java
   trunk/src/CacheWolf/NewProfileWizard.java
   trunk/src/CacheWolf/NotesScreen.java
   trunk/src/CacheWolf/OC.java
   trunk/src/CacheWolf/ParseLatLon.java
   trunk/src/CacheWolf/Parser.java
   trunk/src/CacheWolf/Preferences.java
   trunk/src/CacheWolf/PreferencesScreen.java
   trunk/src/CacheWolf/Profile.java
   trunk/src/CacheWolf/ProfileDataForm.java
   trunk/src/CacheWolf/ProfilesForm.java
   trunk/src/CacheWolf/RadarPanel.java
   trunk/src/CacheWolf/RadarPanelImage.java
   trunk/src/CacheWolf/Rebuild.java
   trunk/src/CacheWolf/Reducer.java
   trunk/src/CacheWolf/STRreplace.java
   trunk/src/CacheWolf/SafeXML.java
   trunk/src/CacheWolf/SearchBox.java
   trunk/src/CacheWolf/SearchCache.java
   trunk/src/CacheWolf/ShowCacheInBrowser.java
   trunk/src/CacheWolf/SolverPanel.java
   trunk/src/CacheWolf/StatusBar.java
   trunk/src/CacheWolf/TableColumnChooser.java
   trunk/src/CacheWolf/TableForm.java
   trunk/src/CacheWolf/TablePanel.java
   trunk/src/CacheWolf/Test.java
   trunk/src/CacheWolf/TokenObj.java
   trunk/src/CacheWolf/Tokenizer.java
   trunk/src/CacheWolf/Travelbug.java
   trunk/src/CacheWolf/TravelbugJourney.java
   trunk/src/CacheWolf/TravelbugJourneyList.java
   trunk/src/CacheWolf/TravelbugJourneyScreen.java
   trunk/src/CacheWolf/TravelbugList.java
   trunk/src/CacheWolf/TravelbugPickup.java
   trunk/src/CacheWolf/TravelbugScreen.java
   trunk/src/CacheWolf/UrlFetcher.java
   trunk/src/CacheWolf/Version.java
   trunk/src/CacheWolf/exp/ASCExporter.java
   trunk/src/CacheWolf/exp/DistanceComparer.java
   trunk/src/CacheWolf/exp/ExploristExporter.java
   trunk/src/CacheWolf/exp/Exporter.java
   trunk/src/CacheWolf/exp/GarminMap.java
   trunk/src/CacheWolf/exp/GpxExportNg.java
   trunk/src/CacheWolf/exp/HTMLExporter.java
   trunk/src/CacheWolf/exp/KMLExporter.java
   trunk/src/CacheWolf/exp/LocExporter.java
   trunk/src/CacheWolf/exp/MSARCSVExporter.java
   trunk/src/CacheWolf/exp/OCLogExport.java
   trunk/src/CacheWolf/exp/OVLExporter.java
   trunk/src/CacheWolf/exp/OziExporter.java
   trunk/src/CacheWolf/exp/SpoilerPOIExporter.java
   trunk/src/CacheWolf/exp/SpoilerPOIExporterScreen.java
   trunk/src/CacheWolf/exp/TPLExporter.java
   trunk/src/CacheWolf/exp/TomTomExporter.java
   trunk/src/CacheWolf/exp/TomTomExporterScreen.java
   trunk/src/CacheWolf/imp/FieldnotesImporter.java
   trunk/src/CacheWolf/imp/GCVoteImporter.java
   trunk/src/CacheWolf/imp/GPXImporter.java
   trunk/src/CacheWolf/imp/KMLImporter.java
   trunk/src/CacheWolf/imp/LOCXMLImporter.java
   trunk/src/CacheWolf/imp/OCGPXfetch.java
   trunk/src/CacheWolf/imp/OCLinkImporter.java
   trunk/src/CacheWolf/imp/OCXMLImporter.java
   trunk/src/CacheWolf/imp/OCXMLImporterScreen.java
   trunk/src/CacheWolf/imp/SpiderGC.java
   trunk/src/CacheWolf/model/DefaultListModel.java
   trunk/src/CacheWolf/model/TravelBugJourneyScreenModel.java
   trunk/src/CacheWolf/model/TravelbugScreenModel.java
   trunk/src/CacheWolf/myInteractivePanel.java
   trunk/src/CacheWolf/myTableControl.java
   trunk/src/CacheWolf/myTableModel.java
   trunk/src/CacheWolf/navi/Area.java
   trunk/src/CacheWolf/navi/AreaList.java
   trunk/src/CacheWolf/navi/CWGPSPoint.java
   trunk/src/CacheWolf/navi/Ellipsoid.java
   trunk/src/CacheWolf/navi/GeodeticCalculator.java
   trunk/src/CacheWolf/navi/GkProjection.java
   trunk/src/CacheWolf/navi/GotoPanel.java
   trunk/src/CacheWolf/navi/LambertProjection.java
   trunk/src/CacheWolf/navi/MapImage.java
   trunk/src/CacheWolf/navi/MapImporter.java
   trunk/src/CacheWolf/navi/MapInfoObject.java
   trunk/src/CacheWolf/navi/MapLoader.java
   trunk/src/CacheWolf/navi/MapLoaderGui.java
   trunk/src/CacheWolf/navi/MapSymbol.java
   trunk/src/CacheWolf/navi/MapsList.java
   trunk/src/CacheWolf/navi/Metrics.java
   trunk/src/CacheWolf/navi/MovingMap.java
   trunk/src/CacheWolf/navi/MovingMapCache.java
   trunk/src/CacheWolf/navi/Navigate.java
   trunk/src/CacheWolf/navi/ProjectedPoint.java
   trunk/src/CacheWolf/navi/Projection.java
   trunk/src/CacheWolf/navi/SelectMap.java
   trunk/src/CacheWolf/navi/SkyOrientation.java
   trunk/src/CacheWolf/navi/Track.java
   trunk/src/CacheWolf/navi/TrackOverlay.java
   trunk/src/CacheWolf/navi/TrackPoint.java
   trunk/src/CacheWolf/navi/TransformCoordinates.java
   trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java
   trunk/src/CacheWolf/navi/UTMProjection.java
   trunk/src/CacheWolf/navi/touchControls/AniImageGrayScaled.java
   trunk/src/CacheWolf/navi/touchControls/ICommandListener.java
   trunk/src/CacheWolf/navi/touchControls/ImageWithText.java
   trunk/src/CacheWolf/navi/touchControls/MovingMapControlItem.java
   trunk/src/CacheWolf/navi/touchControls/MovingMapControlItemButton.java
   trunk/src/CacheWolf/navi/touchControls/MovingMapControlItemText.java
   trunk/src/CacheWolf/navi/touchControls/MovingMapControlSettings.java
   trunk/src/CacheWolf/navi/touchControls/MovingMapControls.java
   trunk/src/CacheWolf/utils/CWPartialInputStream.java
   trunk/src/CacheWolf/utils/CWWrapper.java
   trunk/src/CacheWolf/utils/FileBugfix.java
   trunk/src/CacheWolf/utils/MessageBoxFixed.java
   trunk/src/CacheWolf/utils/MutableInteger.java
   trunk/src/CacheWolf/utils/URLUTF8Encoder.java
   trunk/src/CacheWolf/view/ITravelbugScreen.java
   trunk/src/CacheWolf/view/TravelBugScreenFactory.java
   trunk/src/CacheWolf/view/TravelbugJourneyScreenFactory.java
   trunk/src/CacheWolf/view/ewe/TravelbugJourneyScreen.java
   trunk/src/CacheWolf/view/ewe/TravelbugMenu.java
   trunk/src/CacheWolf/view/pda/PDADateTimeChooser.java
   trunk/src/CacheWolf/view/pda/PDAEmptyButton.java
   trunk/src/CacheWolf/view/pda/PDAList.java
   trunk/src/CacheWolf/view/pda/PDAListButton.java
   trunk/src/CacheWolf/view/pda/PDAListButtonObject.java
   trunk/src/CacheWolf/view/pda/PDAMenu.java
   trunk/src/CacheWolf/view/pda/PDAMenuButton.java
   trunk/src/CacheWolf/view/pda/PDAMenuButtonObject.java
   trunk/src/CacheWolf/view/pda/PDAOptionPane.java
   trunk/src/CacheWolf/view/pda/PDATravelbugDetailMenu.java
   trunk/src/CacheWolf/view/pda/PDATravelbugDetailPanel.java
   trunk/src/CacheWolf/view/pda/PDATravelbugJourneyScreen.java
   trunk/src/CacheWolf/view/pda/PDATravelbugMenuPanel.java
   trunk/src/CacheWolf/view/pda/PDATravelbugScreen.java
   trunk/src/CacheWolf/view/pda/PDATravelbugSortMenu.java
Log:
cw/src sources to UTF8 without BOM

Modified: trunk/src/CacheWolf/Attributes.java
===================================================================
--- trunk/src/CacheWolf/Attributes.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/Attributes.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/AttributesSelector.java
===================================================================
--- trunk/src/CacheWolf/AttributesSelector.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/AttributesSelector.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/AttributesViewer.java
===================================================================
--- trunk/src/CacheWolf/AttributesViewer.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/AttributesViewer.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/CWPoint.java
===================================================================
--- trunk/src/CacheWolf/CWPoint.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/CWPoint.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/CWProgressBar.java
===================================================================
--- trunk/src/CacheWolf/CWProgressBar.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/CWProgressBar.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/CacheDB.java
===================================================================
--- trunk/src/CacheWolf/CacheDB.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/CacheDB.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/CacheHolder.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/CacheHolderDetail.java
===================================================================
--- trunk/src/CacheWolf/CacheHolderDetail.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/CacheHolderDetail.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/CacheImages.java
===================================================================
--- trunk/src/CacheWolf/CacheImages.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/CacheImages.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/CacheList.java
===================================================================
--- trunk/src/CacheWolf/CacheList.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/CacheList.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/CacheSize.java
===================================================================
--- trunk/src/CacheWolf/CacheSize.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/CacheSize.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/CacheTerrDiff.java
===================================================================
--- trunk/src/CacheWolf/CacheTerrDiff.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/CacheTerrDiff.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/CacheType.java
===================================================================
--- trunk/src/CacheWolf/CacheType.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/CacheType.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/CacheWolf.java
===================================================================
--- trunk/src/CacheWolf/CacheWolf.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/CacheWolf.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/CalcPanel.java
===================================================================
--- trunk/src/CacheWolf/CalcPanel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/CalcPanel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/Common.java
===================================================================
--- trunk/src/CacheWolf/Common.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/Common.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/CoordsScreen.java
===================================================================
--- trunk/src/CacheWolf/CoordsScreen.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/CoordsScreen.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/DBStats.java
===================================================================
--- trunk/src/CacheWolf/DBStats.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/DBStats.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/DataMover.java
===================================================================
--- trunk/src/CacheWolf/DataMover.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/DataMover.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/DataMoverForm.java
===================================================================
--- trunk/src/CacheWolf/DataMoverForm.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/DataMoverForm.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/DateFormat.java
===================================================================
--- trunk/src/CacheWolf/DateFormat.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/DateFormat.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/DateTimeChooser.java
===================================================================
--- trunk/src/CacheWolf/DateTimeChooser.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/DateTimeChooser.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/DescriptionPanel.java
===================================================================
--- trunk/src/CacheWolf/DescriptionPanel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/DescriptionPanel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/DetailsPanel.java
===================================================================
--- trunk/src/CacheWolf/DetailsPanel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/DetailsPanel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/Extractor.java
===================================================================
--- trunk/src/CacheWolf/Extractor.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/Extractor.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/Filter.java
===================================================================
--- trunk/src/CacheWolf/Filter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/Filter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/FilterData.java
===================================================================
--- trunk/src/CacheWolf/FilterData.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/FilterData.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/FilterScreen.java
===================================================================
--- trunk/src/CacheWolf/FilterScreen.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/FilterScreen.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/GPSPortOptions.java
===================================================================
--- trunk/src/CacheWolf/GPSPortOptions.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/GPSPortOptions.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/GeoCodeGui.java
===================================================================
--- trunk/src/CacheWolf/GeoCodeGui.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/GeoCodeGui.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/GeocoderOsm.java
===================================================================
--- trunk/src/CacheWolf/GeocoderOsm.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/GeocoderOsm.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/Global.java
===================================================================
--- trunk/src/CacheWolf/Global.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/Global.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/GuiImageBroker.java
===================================================================
--- trunk/src/CacheWolf/GuiImageBroker.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/GuiImageBroker.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/HintLogPanel.java
===================================================================
--- trunk/src/CacheWolf/HintLogPanel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/HintLogPanel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/HttpConnection.java
===================================================================
--- trunk/src/CacheWolf/HttpConnection.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/HttpConnection.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/ImageDetailForm.java
===================================================================
--- trunk/src/CacheWolf/ImageDetailForm.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/ImageDetailForm.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/ImageInfo.java
===================================================================
--- trunk/src/CacheWolf/ImageInfo.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/ImageInfo.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/ImageInteractivePanel.java
===================================================================
--- trunk/src/CacheWolf/ImageInteractivePanel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/ImageInteractivePanel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/ImagePanel.java
===================================================================
--- trunk/src/CacheWolf/ImagePanel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/ImagePanel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/ImagePanelImage.java
===================================================================
--- trunk/src/CacheWolf/ImagePanelImage.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/ImagePanelImage.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/InfoBox.java
===================================================================
--- trunk/src/CacheWolf/InfoBox.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/InfoBox.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/InfoScreen.java
===================================================================
--- trunk/src/CacheWolf/InfoScreen.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/InfoScreen.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/InputScreen.java
===================================================================
--- trunk/src/CacheWolf/InputScreen.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/InputScreen.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/Log.java
===================================================================
--- trunk/src/CacheWolf/Log.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/Log.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/LogList.java
===================================================================
--- trunk/src/CacheWolf/LogList.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/LogList.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/MainForm.java
===================================================================
--- trunk/src/CacheWolf/MainForm.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/MainForm.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/MainMenu.java
===================================================================
--- trunk/src/CacheWolf/MainMenu.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/MainMenu.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/MainTab.java
===================================================================
--- trunk/src/CacheWolf/MainTab.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/MainTab.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/Matrix.java
===================================================================
--- trunk/src/CacheWolf/Matrix.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/Matrix.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/MyComparer.java
===================================================================
--- trunk/src/CacheWolf/MyComparer.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/MyComparer.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/MyEditor.java
===================================================================
--- trunk/src/CacheWolf/MyEditor.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/MyEditor.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/MyLocale.java
===================================================================
--- trunk/src/CacheWolf/MyLocale.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/MyLocale.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/MyScrollBarPanel.java
===================================================================
--- trunk/src/CacheWolf/MyScrollBarPanel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/MyScrollBarPanel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/NewProfileForm.java
===================================================================
--- trunk/src/CacheWolf/NewProfileForm.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/NewProfileForm.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/NewProfileWizard.java
===================================================================
--- trunk/src/CacheWolf/NewProfileWizard.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/NewProfileWizard.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/NotesScreen.java
===================================================================
--- trunk/src/CacheWolf/NotesScreen.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/NotesScreen.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/OC.java
===================================================================
--- trunk/src/CacheWolf/OC.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/OC.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/ParseLatLon.java
===================================================================
--- trunk/src/CacheWolf/ParseLatLon.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/ParseLatLon.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/Parser.java
===================================================================
--- trunk/src/CacheWolf/Parser.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/Parser.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/Preferences.java
===================================================================
--- trunk/src/CacheWolf/Preferences.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/Preferences.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/PreferencesScreen.java
===================================================================
--- trunk/src/CacheWolf/PreferencesScreen.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/PreferencesScreen.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/Profile.java
===================================================================
--- trunk/src/CacheWolf/Profile.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/Profile.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/ProfileDataForm.java
===================================================================
--- trunk/src/CacheWolf/ProfileDataForm.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/ProfileDataForm.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/ProfilesForm.java
===================================================================
--- trunk/src/CacheWolf/ProfilesForm.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/ProfilesForm.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/RadarPanel.java
===================================================================
--- trunk/src/CacheWolf/RadarPanel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/RadarPanel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/RadarPanelImage.java
===================================================================
--- trunk/src/CacheWolf/RadarPanelImage.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/RadarPanelImage.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/Rebuild.java
===================================================================
--- trunk/src/CacheWolf/Rebuild.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/Rebuild.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/Reducer.java
===================================================================
--- trunk/src/CacheWolf/Reducer.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/Reducer.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/STRreplace.java
===================================================================
--- trunk/src/CacheWolf/STRreplace.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/STRreplace.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/SafeXML.java
===================================================================
--- trunk/src/CacheWolf/SafeXML.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/SafeXML.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/SearchBox.java
===================================================================
--- trunk/src/CacheWolf/SearchBox.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/SearchBox.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/SearchCache.java
===================================================================
--- trunk/src/CacheWolf/SearchCache.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/SearchCache.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/ShowCacheInBrowser.java
===================================================================
--- trunk/src/CacheWolf/ShowCacheInBrowser.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/ShowCacheInBrowser.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/SolverPanel.java
===================================================================
--- trunk/src/CacheWolf/SolverPanel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/SolverPanel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/StatusBar.java
===================================================================
--- trunk/src/CacheWolf/StatusBar.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/StatusBar.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/TableColumnChooser.java
===================================================================
--- trunk/src/CacheWolf/TableColumnChooser.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/TableColumnChooser.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/TableForm.java
===================================================================
--- trunk/src/CacheWolf/TableForm.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/TableForm.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/TablePanel.java
===================================================================
--- trunk/src/CacheWolf/TablePanel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/TablePanel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/Test.java
===================================================================
--- trunk/src/CacheWolf/Test.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/Test.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/TokenObj.java
===================================================================
--- trunk/src/CacheWolf/TokenObj.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/TokenObj.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/Tokenizer.java
===================================================================
--- trunk/src/CacheWolf/Tokenizer.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/Tokenizer.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/Travelbug.java
===================================================================
--- trunk/src/CacheWolf/Travelbug.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/Travelbug.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/TravelbugJourney.java
===================================================================
--- trunk/src/CacheWolf/TravelbugJourney.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/TravelbugJourney.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/TravelbugJourneyList.java
===================================================================
--- trunk/src/CacheWolf/TravelbugJourneyList.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/TravelbugJourneyList.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/TravelbugJourneyScreen.java
===================================================================
--- trunk/src/CacheWolf/TravelbugJourneyScreen.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/TravelbugJourneyScreen.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/TravelbugList.java
===================================================================
--- trunk/src/CacheWolf/TravelbugList.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/TravelbugList.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/TravelbugPickup.java
===================================================================
--- trunk/src/CacheWolf/TravelbugPickup.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/TravelbugPickup.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/TravelbugScreen.java
===================================================================
--- trunk/src/CacheWolf/TravelbugScreen.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/TravelbugScreen.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/UrlFetcher.java
===================================================================
--- trunk/src/CacheWolf/UrlFetcher.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/UrlFetcher.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/Version.java
===================================================================
--- trunk/src/CacheWolf/Version.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/Version.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/exp/ASCExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/ASCExporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/ASCExporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/exp/DistanceComparer.java
===================================================================
--- trunk/src/CacheWolf/exp/DistanceComparer.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/DistanceComparer.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/exp/ExploristExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/ExploristExporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/ExploristExporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/exp/Exporter.java
===================================================================
--- trunk/src/CacheWolf/exp/Exporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/Exporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/exp/GarminMap.java
===================================================================
--- trunk/src/CacheWolf/exp/GarminMap.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/GarminMap.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/exp/GpxExportNg.java
===================================================================
--- trunk/src/CacheWolf/exp/GpxExportNg.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/GpxExportNg.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/exp/HTMLExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/HTMLExporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/HTMLExporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/exp/KMLExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/KMLExporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/KMLExporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/exp/LocExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/LocExporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/LocExporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/exp/MSARCSVExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/MSARCSVExporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/MSARCSVExporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/exp/OCLogExport.java
===================================================================
--- trunk/src/CacheWolf/exp/OCLogExport.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/OCLogExport.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.exp;
+package CacheWolf.exp;
 
 import CacheWolf.CacheDB;
 import CacheWolf.CacheHolder;

Modified: trunk/src/CacheWolf/exp/OVLExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/OVLExporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/OVLExporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/exp/OziExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/OziExporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/OziExporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/exp/SpoilerPOIExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/SpoilerPOIExporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/SpoilerPOIExporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/exp/SpoilerPOIExporterScreen.java
===================================================================
--- trunk/src/CacheWolf/exp/SpoilerPOIExporterScreen.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/SpoilerPOIExporterScreen.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/exp/TPLExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/TPLExporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/TPLExporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.
     It supports the sites geocaching.com and opencaching.de

Modified: trunk/src/CacheWolf/exp/TomTomExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/TomTomExporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/TomTomExporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/exp/TomTomExporterScreen.java
===================================================================
--- trunk/src/CacheWolf/exp/TomTomExporterScreen.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/exp/TomTomExporterScreen.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/imp/FieldnotesImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/FieldnotesImporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/imp/FieldnotesImporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/imp/GCVoteImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/GCVoteImporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/imp/GCVoteImporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/imp/GPXImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/GPXImporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/imp/GPXImporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/imp/KMLImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/KMLImporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/imp/KMLImporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/imp/LOCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/LOCXMLImporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/imp/LOCXMLImporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/imp/OCGPXfetch.java
===================================================================
--- trunk/src/CacheWolf/imp/OCGPXfetch.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/imp/OCGPXfetch.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.imp;
+package CacheWolf.imp;
 
 import CacheWolf.Global;
 import CacheWolf.MyLocale;

Modified: trunk/src/CacheWolf/imp/OCLinkImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/OCLinkImporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/imp/OCLinkImporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/imp/OCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/OCXMLImporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/imp/OCXMLImporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/imp/OCXMLImporterScreen.java
===================================================================
--- trunk/src/CacheWolf/imp/OCXMLImporterScreen.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/imp/OCXMLImporterScreen.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/model/DefaultListModel.java
===================================================================
--- trunk/src/CacheWolf/model/DefaultListModel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/model/DefaultListModel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.model;
+package CacheWolf.model;
 
 import ewe.util.Vector;
 

Modified: trunk/src/CacheWolf/model/TravelBugJourneyScreenModel.java
===================================================================
--- trunk/src/CacheWolf/model/TravelBugJourneyScreenModel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/model/TravelBugJourneyScreenModel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.model;
+package CacheWolf.model;
 
 import CacheWolf.CacheHolder;
 import CacheWolf.Global;

Modified: trunk/src/CacheWolf/model/TravelbugScreenModel.java
===================================================================
--- trunk/src/CacheWolf/model/TravelbugScreenModel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/model/TravelbugScreenModel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.model;
+package CacheWolf.model;
 
 public class TravelbugScreenModel extends DefaultListModel {
 

Modified: trunk/src/CacheWolf/myInteractivePanel.java
===================================================================
--- trunk/src/CacheWolf/myInteractivePanel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/myInteractivePanel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/myTableControl.java
===================================================================
--- trunk/src/CacheWolf/myTableControl.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/myTableControl.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/myTableModel.java
===================================================================
--- trunk/src/CacheWolf/myTableModel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/myTableModel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/Area.java
===================================================================
--- trunk/src/CacheWolf/navi/Area.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/Area.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/AreaList.java
===================================================================
--- trunk/src/CacheWolf/navi/AreaList.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/AreaList.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/CWGPSPoint.java
===================================================================
--- trunk/src/CacheWolf/navi/CWGPSPoint.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/CWGPSPoint.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/Ellipsoid.java
===================================================================
--- trunk/src/CacheWolf/navi/Ellipsoid.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/Ellipsoid.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/GeodeticCalculator.java
===================================================================
--- trunk/src/CacheWolf/navi/GeodeticCalculator.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/GeodeticCalculator.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/GkProjection.java
===================================================================
--- trunk/src/CacheWolf/navi/GkProjection.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/GkProjection.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/GotoPanel.java
===================================================================
--- trunk/src/CacheWolf/navi/GotoPanel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/GotoPanel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/LambertProjection.java
===================================================================
--- trunk/src/CacheWolf/navi/LambertProjection.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/LambertProjection.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/MapImage.java
===================================================================
--- trunk/src/CacheWolf/navi/MapImage.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/MapImage.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/MapImporter.java
===================================================================
--- trunk/src/CacheWolf/navi/MapImporter.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/MapImporter.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/MapInfoObject.java
===================================================================
--- trunk/src/CacheWolf/navi/MapInfoObject.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/MapInfoObject.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/MapLoader.java
===================================================================
--- trunk/src/CacheWolf/navi/MapLoader.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/MapLoader.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/MapLoaderGui.java
===================================================================
--- trunk/src/CacheWolf/navi/MapLoaderGui.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/MapLoaderGui.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/MapSymbol.java
===================================================================
--- trunk/src/CacheWolf/navi/MapSymbol.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/MapSymbol.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/MapsList.java
===================================================================
--- trunk/src/CacheWolf/navi/MapsList.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/MapsList.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/Metrics.java
===================================================================
--- trunk/src/CacheWolf/navi/Metrics.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/Metrics.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/MovingMap.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMap.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/MovingMap.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/MovingMapCache.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMapCache.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/MovingMapCache.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/Navigate.java
===================================================================
--- trunk/src/CacheWolf/navi/Navigate.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/Navigate.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/ProjectedPoint.java
===================================================================
--- trunk/src/CacheWolf/navi/ProjectedPoint.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/ProjectedPoint.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/Projection.java
===================================================================
--- trunk/src/CacheWolf/navi/Projection.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/Projection.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/SelectMap.java
===================================================================
--- trunk/src/CacheWolf/navi/SelectMap.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/SelectMap.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/SkyOrientation.java
===================================================================
--- trunk/src/CacheWolf/navi/SkyOrientation.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/SkyOrientation.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/Track.java
===================================================================
--- trunk/src/CacheWolf/navi/Track.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/Track.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.navi;
+package CacheWolf.navi;
 
 import ewe.fx.Color;
 import ewe.io.BufferedWriter;

Modified: trunk/src/CacheWolf/navi/TrackOverlay.java
===================================================================
--- trunk/src/CacheWolf/navi/TrackOverlay.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/TrackOverlay.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/TrackPoint.java
===================================================================
--- trunk/src/CacheWolf/navi/TrackPoint.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/TrackPoint.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/TransformCoordinates.java
===================================================================
--- trunk/src/CacheWolf/navi/TransformCoordinates.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/TransformCoordinates.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java
===================================================================
--- trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/UTMProjection.java
===================================================================
--- trunk/src/CacheWolf/navi/UTMProjection.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/UTMProjection.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/touchControls/AniImageGrayScaled.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/AniImageGrayScaled.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/touchControls/AniImageGrayScaled.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/touchControls/ICommandListener.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/ICommandListener.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/touchControls/ICommandListener.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/touchControls/ImageWithText.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/ImageWithText.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/touchControls/ImageWithText.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/touchControls/MovingMapControlItem.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/MovingMapControlItem.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/touchControls/MovingMapControlItem.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/touchControls/MovingMapControlItemButton.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/MovingMapControlItemButton.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/touchControls/MovingMapControlItemButton.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/navi/touchControls/MovingMapControlItemText.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/MovingMapControlItemText.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/touchControls/MovingMapControlItemText.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/touchControls/MovingMapControlSettings.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/MovingMapControlSettings.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/touchControls/MovingMapControlSettings.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/navi/touchControls/MovingMapControls.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/MovingMapControls.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/navi/touchControls/MovingMapControls.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/utils/CWPartialInputStream.java
===================================================================
--- trunk/src/CacheWolf/utils/CWPartialInputStream.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/utils/CWPartialInputStream.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*********************************************************************************
+/*********************************************************************************
  *  Ewe Virtual Machine - Version 1.14, January 24, 2002                         *
  *  Copyright (C) 1999-2002 Michael L Brereton <michael_brereton at ewesoft.com>    *
  *  All Rights Reserved                                                          *

Modified: trunk/src/CacheWolf/utils/CWWrapper.java
===================================================================
--- trunk/src/CacheWolf/utils/CWWrapper.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/utils/CWWrapper.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/utils/FileBugfix.java
===================================================================
--- trunk/src/CacheWolf/utils/FileBugfix.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/utils/FileBugfix.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/utils/MessageBoxFixed.java
===================================================================
--- trunk/src/CacheWolf/utils/MessageBoxFixed.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/utils/MessageBoxFixed.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/utils/MutableInteger.java
===================================================================
--- trunk/src/CacheWolf/utils/MutableInteger.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/utils/MutableInteger.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/utils/URLUTF8Encoder.java
===================================================================
--- trunk/src/CacheWolf/utils/URLUTF8Encoder.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/utils/URLUTF8Encoder.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?    /*
+    /*
     GNU General Public License
     CacheWolf is a software for PocketPC, Win and Linux that
     enables paperless caching.

Modified: trunk/src/CacheWolf/view/ITravelbugScreen.java
===================================================================
--- trunk/src/CacheWolf/view/ITravelbugScreen.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/ITravelbugScreen.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view;
+package CacheWolf.view;
 
 public interface ITravelbugScreen {
 

Modified: trunk/src/CacheWolf/view/TravelBugScreenFactory.java
===================================================================
--- trunk/src/CacheWolf/view/TravelBugScreenFactory.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/TravelBugScreenFactory.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view;
+package CacheWolf.view;
 
 import java.lang.reflect.Constructor;
 

Modified: trunk/src/CacheWolf/view/TravelbugJourneyScreenFactory.java
===================================================================
--- trunk/src/CacheWolf/view/TravelbugJourneyScreenFactory.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/TravelbugJourneyScreenFactory.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view;
+package CacheWolf.view;
 
 import java.lang.reflect.Constructor;
 

Modified: trunk/src/CacheWolf/view/ewe/TravelbugJourneyScreen.java
===================================================================
--- trunk/src/CacheWolf/view/ewe/TravelbugJourneyScreen.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/ewe/TravelbugJourneyScreen.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?/*
+/*
 GNU General Public License
 CacheWolf is a software for PocketPC, Win and Linux that
 enables paperless caching.

Modified: trunk/src/CacheWolf/view/ewe/TravelbugMenu.java
===================================================================
--- trunk/src/CacheWolf/view/ewe/TravelbugMenu.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/ewe/TravelbugMenu.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view.ewe;
+package CacheWolf.view.ewe;
 
 import CacheWolf.Global;
 import CacheWolf.MyLocale;

Modified: trunk/src/CacheWolf/view/pda/PDADateTimeChooser.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDADateTimeChooser.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/pda/PDADateTimeChooser.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view.pda;
+package CacheWolf.view.pda;
 
 import CacheWolf.MyLocale;
 import ewe.fx.Color;

Modified: trunk/src/CacheWolf/view/pda/PDAEmptyButton.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAEmptyButton.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/pda/PDAEmptyButton.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view.pda;
+package CacheWolf.view.pda;
 
 import ewe.ui.mButton;
 

Modified: trunk/src/CacheWolf/view/pda/PDAList.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAList.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/pda/PDAList.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view.pda;
+package CacheWolf.view.pda;
 
 import CacheWolf.Global;
 import CacheWolf.MyLocale;

Modified: trunk/src/CacheWolf/view/pda/PDAListButton.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAListButton.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/pda/PDAListButton.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view.pda;
+package CacheWolf.view.pda;
 
 import ewe.fx.Color;
 import ewe.fx.Font;

Modified: trunk/src/CacheWolf/view/pda/PDAListButtonObject.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAListButtonObject.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/pda/PDAListButtonObject.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view.pda;
+package CacheWolf.view.pda;
 
 import CacheWolf.Global;
 import ewe.fx.Font;

Modified: trunk/src/CacheWolf/view/pda/PDAMenu.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAMenu.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/pda/PDAMenu.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view.pda;
+package CacheWolf.view.pda;
 
 import CacheWolf.MyLocale;
 import ewe.ui.ControlEvent;

Modified: trunk/src/CacheWolf/view/pda/PDAMenuButton.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAMenuButton.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/pda/PDAMenuButton.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view.pda;
+package CacheWolf.view.pda;
 
 import ewe.fx.Color;
 import ewe.fx.Font;

Modified: trunk/src/CacheWolf/view/pda/PDAMenuButtonObject.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAMenuButtonObject.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/pda/PDAMenuButtonObject.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view.pda;
+package CacheWolf.view.pda;
 
 import ewe.fx.Dimension;
 import ewe.ui.ButtonObject;

Modified: trunk/src/CacheWolf/view/pda/PDAOptionPane.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDAOptionPane.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/pda/PDAOptionPane.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view.pda;
+package CacheWolf.view.pda;
 
 import CacheWolf.Preferences;
 import ewe.fx.Color;

Modified: trunk/src/CacheWolf/view/pda/PDATravelbugDetailMenu.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDATravelbugDetailMenu.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/pda/PDATravelbugDetailMenu.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view.pda;
+package CacheWolf.view.pda;
 
 import CacheWolf.CacheDB;
 import CacheWolf.CacheHolder;

Modified: trunk/src/CacheWolf/view/pda/PDATravelbugDetailPanel.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDATravelbugDetailPanel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/pda/PDATravelbugDetailPanel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view.pda;
+package CacheWolf.view.pda;
 
 import CacheWolf.MyLocale;
 import CacheWolf.Preferences;

Modified: trunk/src/CacheWolf/view/pda/PDATravelbugJourneyScreen.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDATravelbugJourneyScreen.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/pda/PDATravelbugJourneyScreen.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view.pda;
+package CacheWolf.view.pda;
 
 import CacheWolf.MyLocale;
 import CacheWolf.TravelbugJourney;

Modified: trunk/src/CacheWolf/view/pda/PDATravelbugMenuPanel.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDATravelbugMenuPanel.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/pda/PDATravelbugMenuPanel.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view.pda;
+package CacheWolf.view.pda;
 
 import CacheWolf.CacheDB;
 import CacheWolf.CacheHolder;

Modified: trunk/src/CacheWolf/view/pda/PDATravelbugScreen.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDATravelbugScreen.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/pda/PDATravelbugScreen.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view.pda;
+package CacheWolf.view.pda;
 
 import CacheWolf.MyLocale;
 import CacheWolf.Travelbug;

Modified: trunk/src/CacheWolf/view/pda/PDATravelbugSortMenu.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDATravelbugSortMenu.java	2011-09-14 17:54:31 UTC (rev 3088)
+++ trunk/src/CacheWolf/view/pda/PDATravelbugSortMenu.java	2011-09-15 06:39:41 UTC (rev 3089)
@@ -1,4 +1,4 @@
-?package CacheWolf.view.pda;
+package CacheWolf.view.pda;
 
 import CacheWolf.MyLocale;
 import ewe.fx.Rect;



From mik77 at mail.berlios.de  Thu Sep 15 04:45:56 2011
From: mik77 at mail.berlios.de (mik77 at mail.berlios.de)
Date: Thu, 15 Sep 2011 04:45:56 PM +0200
Subject: [Cachewolf-svn] r3090 - in trunk: resources src/CacheWolf
Message-ID: <20110915144556.9628C48135A@sheep.berlios.de>

Author: mik77
Date: 2011-09-15 16:45:56 +0200 (Thu, 15 Sep 2011)
New Revision: 3090

Added:
   trunk/resources/globe_tab.gif
   trunk/resources/globe_tab_vga.gif
Modified:
   trunk/src/CacheWolf/MainTab.java
Log:
 - smaller globe icon on tab -> DetailsScreen fits on QVGA again

Added: trunk/resources/globe_tab.gif
===================================================================
(Binary files differ)


Property changes on: trunk/resources/globe_tab.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: trunk/resources/globe_tab_vga.gif
===================================================================
(Binary files differ)


Property changes on: trunk/resources/globe_tab_vga.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Modified: trunk/src/CacheWolf/MainTab.java
===================================================================
--- trunk/src/CacheWolf/MainTab.java	2011-09-15 06:39:41 UTC (rev 3089)
+++ trunk/src/CacheWolf/MainTab.java	2011-09-15 14:45:56 UTC (rev 3090)
@@ -148,7 +148,7 @@
 		if (pref.isBigScreen || !pref.useRadar) {
 			c = this.addCard(mapP = new ewe.ui.CellPanel(), MyLocale.getMsg(347, "Show map"), null);
 			MAP_CARD = this.cardPanel.cards.size() - 1;
-			c.iconize(new Image("globe_small" + imagesize + ".gif"), true);
+			c.iconize(new Image("globe_tab" + imagesize + ".gif"), true);
 		}
 
 		if (pref.isBigScreen || pref.useRadar) {



From pfeffer at mail.berlios.de  Thu Sep 15 08:43:37 2011
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Thu, 15 Sep 2011 08:43:37 PM +0200
Subject: [Cachewolf-svn] r3091 - trunk/src/org/bouncycastle/crypto/tls
Message-ID: <20110915184338.074F548135A@sheep.berlios.de>

Author: pfeffer
Date: 2011-09-15 20:43:37 +0200 (Thu, 15 Sep 2011)
New Revision: 3091

Modified:
   trunk/src/org/bouncycastle/crypto/tls/TlsSocket.java
Log:
Test, if SSL/TLS work better with this change

Modified: trunk/src/org/bouncycastle/crypto/tls/TlsSocket.java
===================================================================
--- trunk/src/org/bouncycastle/crypto/tls/TlsSocket.java	2011-09-15 14:45:56 UTC (rev 3090)
+++ trunk/src/org/bouncycastle/crypto/tls/TlsSocket.java	2011-09-15 18:43:37 UTC (rev 3091)
@@ -32,13 +32,13 @@
 
 	public boolean close() {
 		boolean b = true;
-		try {
+/*		try {
 			outputStream.close();
 			inputStream.close();
 		} catch (IOException e) {
 			b = false;
-		}
-		boolean a = socket.close();
+		} */
+		boolean a = true; // socket.close();
 		return a && b;
 	}
 }



From pfeffer at mail.berlios.de  Thu Sep 15 08:46:18 2011
From: pfeffer at mail.berlios.de (pfeffer at mail.berlios.de)
Date: Thu, 15 Sep 2011 08:46:18 PM +0200
Subject: [Cachewolf-svn] r3092 - trunk/src/CacheWolf
Message-ID: <20110915184618.42AE148135A@sheep.berlios.de>

Author: pfeffer
Date: 2011-09-15 20:46:17 +0200 (Thu, 15 Sep 2011)
New Revision: 3092

Modified:
   trunk/src/CacheWolf/HttpConnection.java
Log:
SSL/TLS: revert test in HttpConnection as araber95 did not report any advantage

Modified: trunk/src/CacheWolf/HttpConnection.java
===================================================================
--- trunk/src/CacheWolf/HttpConnection.java	2011-09-15 18:43:37 UTC (rev 3091)
+++ trunk/src/CacheWolf/HttpConnection.java	2011-09-15 18:46:17 UTC (rev 3092)
@@ -455,7 +455,7 @@
 		ba.clear();
 		while(true){
 			int got = is.read();
-			if (got == -1) break; // throw new IOException("Unexpected end of stream." + ba.toString());
+			if (got == -1) throw new IOException("Unexpected end of stream." + ba.toString());
 			if (got == 10){
 				if (lastReceived == 10) break; //Got all the data now.
 			}else if (got == 13) continue; //Ignore CR.



From araber95 at mail.berlios.de  Fri Sep 16 06:45:31 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Fri, 16 Sep 2011 06:45:31 PM +0200
Subject: [Cachewolf-svn] r3093 - trunk/src/CacheWolf
Message-ID: <20110916164531.E5F77481299@sheep.berlios.de>

Author: araber95
Date: 2011-09-16 18:45:31 +0200 (Fri, 16 Sep 2011)
New Revision: 3093

Modified:
   trunk/src/CacheWolf/CWPoint.java
Log:
correct UTF8 degree sign

Modified: trunk/src/CacheWolf/CWPoint.java
===================================================================
--- trunk/src/CacheWolf/CWPoint.java	2011-09-15 18:46:17 UTC (rev 3092)
+++ trunk/src/CacheWolf/CWPoint.java	2011-09-16 16:45:31 UTC (rev 3093)
@@ -82,7 +82,7 @@
 	
 	/**
 	 * Create CWPoint by using coordinates in "CacheWolf" format 
-	 * @param coord  String of type N 49?? 33.167 E 011?? 21.608
+	 * @param coord  String of type N 49? 33.167 E 011? 21.608
 	 * @param format only CWPoint.CW or CWPoint.REGEX is supported
 	 */
 	public CWPoint(String coord, int format) {
@@ -115,7 +115,7 @@
 	
 	/**
 	 * set lat and lon by parsing coordinates with Regex 
-	 * @param coord  String like N 49?? 33.167 E 011?? 21.608
+	 * @param coord  String like N 49? 33.167 E 011? 21.608
 	 */
 	public CWPoint(String coord) {
 		set(coord);
@@ -148,7 +148,7 @@
 	
 	/**
 	 * set lat and lon by using coordinates in "CacheWolf" format 
-	 * @param coord  String of type N 49?? 33.167 E 011?? 21.608
+	 * @param coord  String of type N 49? 33.167 E 011? 21.608
 	 * @param format only CWPoint.CW is supported
 	 */
 	public void set (String coord, int format) {
@@ -179,7 +179,7 @@
 
 	/**
 	 * set lat and lon by parsing coordinates with regular expression 
-	 * @param coord  String of type N 49?? 33.167 E 011?? 21.608
+	 * @param coord  String of type N 49? 33.167 E 011? 21.608
 	 * 				 	or 			-12.3456 23.4567
 	 * 					or			32U 2345234 8902345
 	 */
@@ -187,10 +187,10 @@
 	//replace non-breaking-spaces by normal spaces
 	coord = coord.replace((char)0xA0, ' ');
 		/*		(?: 
-					([NSns])\s*([0-9]{1,2})[\s??]+([0-9]{1,2})(?:\s+([0-9]{1,2}))?[,.]([0-9]{1,8})\s* 
-					([EWewOo])\s*([0-9]{1,3})[\s??]+([0-9]{1,2})(?:\s+([0-9]{1,2}))?[,.]([0-9]{1,8}) 
+					([NSns])\s*([0-9]{1,2})[\s?]+([0-9]{1,2})(?:\s+([0-9]{1,2}))?[,.]([0-9]{1,8})\s* 
+					([EWewOo])\s*([0-9]{1,3})[\s?]+([0-9]{1,2})(?:\s+([0-9]{1,2}))?[,.]([0-9]{1,8}) 
 					)|(?: 
-					  ([+-NnSs]?[0-9]{1,2})[,.]([0-9]{1,8})(?:(?=\+)|(?=-)|\s+|\s*??\s*)([+-WwEeOo]?[0-9]{1,3})[,.]([0-9]{1,8})\s*[??]? 
+					  ([+-NnSs]?[0-9]{1,2})[,.]([0-9]{1,8})(?:(?=\+)|(?=-)|\s+|\s*?\s*)([+-WwEeOo]?[0-9]{1,3})[,.]([0-9]{1,8})\s*[?]? 
 					)|(?: 
 					   ([0-9]{1,2}[C-HJ-PQ-X])\s*[EeOo]?\s*([0-9]{1,7})\s+[Nn]?\s*([0-9]{1,7}) 
 					)
@@ -203,13 +203,13 @@
 		}
 	}
 				Regex rex=new Regex("(?:" +
-									"([NSns])\\s*([0-9]{1,2})(?:[??\uC2B0]\\s*|\\s+[??\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['???]\\s*|\\s+['???]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['???\"]?\\s*" +
+									"([NSns])\\s*([0-9]{1,2})(?:[?\uC2B0]\\s*|\\s+[?\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['???]\\s*|\\s+['???]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['???\"]?\\s*" +
 									"[,./_;+:-]*\\s*" + // allow N xx xx.xxx / E xxx xx.xxx
-									"([EWewOo])\\s*([0-9]{1,3})(?:[??\uC2B0]\\s*|\\s+[??\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['???]\\s*|\\s+['???]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['???\"]?" +
+									"([EWewOo])\\s*([0-9]{1,3})(?:[?\uC2B0]\\s*|\\s+[?\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['???]\\s*|\\s+['???]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['???\"]?" +
 									")|(?:" +
-                  "(?:([NnSs])\\s*(?![+-]))?"   +     "([+-]?[0-9]{1,2})[,.]([0-9]{1,8})(?:(?=[+-EeWwOo])|\\s+|\\s*[??\uC2B0]\\s*)" +
+                  "(?:([NnSs])\\s*(?![+-]))?"   +     "([+-]?[0-9]{1,2})[,.]([0-9]{1,8})(?:(?=[+-EeWwOo])|\\s+|\\s*[?\uC2B0]\\s*)" +
                   "[,./_;:]*\\s*" +
-                  "(?:([EeWwOo])\\s*(?![+-]))?"    +     "([+-]?[0-9]{1,3})[,.]([0-9]{1,8})\\s*[??\uC2B0]?" +
+                  "(?:([EeWwOo])\\s*(?![+-]))?"    +     "([+-]?[0-9]{1,3})[,.]([0-9]{1,8})\\s*[?\uC2B0]?" +
 									")|(?:" +
 									"([0-9]{1,2}[C-HJ-PQ-X])\\s*[EeOo]?\\s*([0-9]{1,7})\\s+[Nn]?\\s*([0-9]{1,7})" +
 									")|(?:" +
@@ -357,10 +357,13 @@
 	 */
 	public String getLatDeg(int format) {
 		switch (format) {
-		case TransformCoordinates.DD: 	return MyLocale.formatDouble(this.latDec, "00.00000").replace(',','.');
+		case TransformCoordinates.DD: 	
+			return MyLocale.formatDouble(this.latDec, "00.00000").replace(',','.');
 		case TransformCoordinates.DMM:
-		case TransformCoordinates.DMS:	return getDMS(latDec,0,format);
-		default: return "";
+		case TransformCoordinates.DMS:	
+			return getDMS(latDec,0,format);
+		default: 
+			return "";
 		}
 	}
 	
@@ -556,9 +559,9 @@
 
 	/**
 	 * Returns the string reprenstation of the CWPoint
-	 * Format ist CacheWolf (N 49?? 33.167 E 011?? 21.608), which can be used 
+	 * Format ist CacheWolf (N 49? 33.167 E 011? 21.608), which can be used 
 	 * with parseLatLon
-	 * @return  string like N 49?? 33.167 E 011?? 21.608 
+	 * @return  string like N 49? 33.167 E 011? 21.608 
 	 */	
 	public String toString(){
 		return toString(TransformCoordinates.CW);
@@ -572,12 +575,13 @@
 	public String toString(int format){
 		if (!isValid()) return MyLocale.getMsg(999,"not set");
 		switch (format) {
-		case TransformCoordinates.DD:	return getNSLetter() + " " + STRreplace.replace(getLatDeg(format),"-","") + "?? "
-						+  getEWLetter() + " " + STRreplace.replace(getLonDeg(format),"-","")+ "??";
-		case TransformCoordinates.DMM:	return getNSLetter() + " " + getLatDeg(format) + "?? " + getLatMin(format) + " "
-						+  getEWLetter() + " " + getLonDeg(format) + "?? " + getLonMin(format);
-		case TransformCoordinates.DMS:	return getNSLetter() + " " + getLatDeg(format) + "?? " + getLatMin(format) + "\' " + getLatSec(format) + "\" " 
-						+  getEWLetter() + " " + getLonDeg(format) + "?? " + getLonMin(format) + "\' " + getLonSec(format) + "\"";
+		case TransformCoordinates.DD:	
+			return getNSLetter() + " " + STRreplace.replace(getLatDeg(format),"-","") + "? "
+						+  getEWLetter() + " " + STRreplace.replace(getLonDeg(format),"-","")+ "?";
+		case TransformCoordinates.DMM:	return getNSLetter() + " " + getLatDeg(format) + "? " + getLatMin(format) + " "
+						+  getEWLetter() + " " + getLonDeg(format) + "? " + getLonMin(format);
+		case TransformCoordinates.DMS:	return getNSLetter() + " " + getLatDeg(format) + "? " + getLatMin(format) + "\' " + getLatSec(format) + "\" " 
+						+  getEWLetter() + " " + getLonDeg(format) + "? " + getLonMin(format) + "\' " + getLonSec(format) + "\"";
 		case TransformCoordinates.LAT_LON: 	return getLatDeg(DD)+","+getLonDeg(DD);
 		case TransformCoordinates.LON_LAT: 	return getLonDeg(DD)+","+getLatDeg(DD);
 		//case TransformCoordinates.CUSTOM:	return getGermanGkCoordinates();



From araber95 at mail.berlios.de  Fri Sep 16 06:46:51 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Fri, 16 Sep 2011 06:46:51 PM +0200
Subject: [Cachewolf-svn] r3094 - trunk/src/CacheWolf/imp
Message-ID: <20110916164651.3DCDD481299@sheep.berlios.de>

Author: araber95
Date: 2011-09-16 18:46:50 +0200 (Fri, 16 Sep 2011)
New Revision: 3094

Modified:
   trunk/src/CacheWolf/imp/SpiderGC.java
Log:
modification of login code

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-16 16:45:31 UTC (rev 3093)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-16 16:46:50 UTC (rev 3094)
@@ -1177,11 +1177,11 @@
 		try {
 			loginPage = UrlFetcher.fetch(loginPageUrl); // https://www.geocaching.com/login/default.aspx
 			if (loginPage.equals("")) {
-				pref.log("[login]:Could not fetch: gc.com login page " + loginPageUrl, null);
+				pref.log("[login]:empty gc.com login page " + loginPageUrl, null);
 				return 4;
 			}
 		} catch (final Exception ex) {
-			pref.log("[login]:Could not fetch: gc.com login page", ex);
+			pref.log("[login]:Exception gc.com login page", ex, true);
 			return 4;
 		}
 
@@ -1196,7 +1196,7 @@
 				try {
 					loginPage = UrlFetcher.fetch("https://www.geocaching.com/login/default.aspx?RESET=Y");
 				} catch (final Exception ex) {
-					pref.log("[login]:Could not fetch: gc.com login page", ex);
+					pref.log("[login]:Exception logout user from gc", ex);
 					return 4;
 				}
 
@@ -1229,30 +1229,53 @@
 
 				loginPage = UrlFetcher.fetch(loginPageUrl);
 			} catch (final Exception ex) {
-				pref.log("[login]:Login failed with exception.", ex);
+				pref.log("[login]:Exception login with post Data.", ex);
 				return 3;
 			}
 		}
 
+		// formerly this part was not executed if already logged in
+		// but as https login post sometimes/often gives faulty EOF (https implementation program error),
+		// though the call was successful, the second call (repeating login()) of loginpage get
+		// gives us the following data used as cookie : sessionId and userid
+		// hopefully pfeffer or someone else fixes this EOF some time
 		if (loginPage.indexOf(loginSuccess) > 0) {
 			pref.log("Login successful: " + pref.myAlias);
-			// **3 now we are logged in and get the Cookie (there are two)
-			final PropertyList pl = UrlFetcher.getDocumentProperties();
-			String docprops = "";
-			for (int i = 0; i < pl.size(); i++) {
-				final Property p = (Property) pl.get(i);
-				if (p.name.equalsIgnoreCase("Set-Cookie")) {
-					docprops += p.value;
-				}
+			// **3 now we are logged in and get the userId and sessionId
+			getSessionIdAndSetCookie("");
+		} else {
+			pref.log("[login]: Wrong Account or Password? " + pref.myAlias, null);
+			return 2;
+		}
+
+		if (!this.switchToEnglish())
+			return 0;
+
+		loggedIn = true;
+		return 1;
+	}
+
+	private boolean getSessionIdAndSetCookie(String userId) {
+
+		PropertyList pl = UrlFetcher.getDocumentProperties();
+		String docprops = "";
+		for (int i = 0; i < pl.size(); i++) {
+			final Property p = (Property) pl.get(i);
+			if (p.name.equalsIgnoreCase("Set-Cookie")) {
+				docprops += p.value;
 			}
-			final Regex rexCookieSession = new Regex("(?i)ASP.NET_SessionId=(.*?);.*");
-			rexCookieSession.search(docprops);
-			if (rexCookieSession.didMatch()) {
-				cookie = "ASP.NET_SessionId=" + rexCookieSession.stringMatched(1);
-			} else {
-				pref.log("[login]:SessionID not found.", null);
-				return 0;
-			}
+		}
+
+		final Regex rexCookieSession = new Regex("(?i)ASP.NET_SessionId=(.*?);.*");
+		rexCookieSession.search(docprops);
+		if (rexCookieSession.didMatch()) {
+			cookie = "ASP.NET_SessionId=" + rexCookieSession.stringMatched(1);
+		} else {
+			pref.log("[login]:SessionID not found.", null);
+			return false;
+		}
+
+		if (userId.length() == 0) {
 			final Regex rexCookieID = new Regex("(?i)userid=(.*?);.*");
 			rexCookieID.search(docprops);
 			if (rexCookieID.didMatch()) {
@@ -1262,51 +1285,36 @@
 				pref.savePreferences();
 			} else {
 				pref.log("[login]:userID not found.", null);
-				return 0;
+				return false;
 			}
-			UrlFetcher.setPermanentRequestorProperty("Cookie", cookie);
-		} else {
-			pref.log("Login failed. Wrong Account or Password? " + pref.myAlias, null);
-			return 2;
 		}
+		else {
+			cookie += "; userid=" + userId;
+		}
 
-		if (!this.switchToEnglish())
-			return 0;
+		UrlFetcher.setPermanentRequestorProperty("Cookie", cookie);
+		return true;
 
-		loggedIn = true;
-		return 1;
 	}
 
 	private boolean switchToEnglish() {
 		// change language to EN , further operations relay on English
 		String url = "http://www.geocaching.com/account/ManagePreferences.aspx";
 		String page = "";
-		String userID = "userid=" + pref.userID;
 		try {
-			UrlFetcher.setPermanentRequestorProperty("Cookie", userID);
+			UrlFetcher.setPermanentRequestorProperty("Cookie", "userid=" + pref.userID);
 			page = UrlFetcher.fetch(url); // getting the sessionid
-			if (page.length() == 0)
+			if (page.length() == 0) {
+				pref.log("[switchToEnglish]:empty page getting SessionID.", null);
 				return false;
+			}
 		} catch (final Exception ex) {
+			pref.log("[switchToEnglish]:Exception getting SessionID.", ex);
 			return false;
 		}
-		PropertyList pl = UrlFetcher.getDocumentProperties();
-		String docprops = "";
-		for (int i = 0; i < pl.size(); i++) {
-			final Property p = (Property) pl.get(i);
-			if (p.name.equalsIgnoreCase("Set-Cookie")) {
-				docprops += p.value;
-			}
-		}
-		final Regex rexCookieSession = new Regex("(?i)ASP.NET_SessionId=(.*?);.*");
-		rexCookieSession.search(docprops);
-		if (rexCookieSession.didMatch()) {
-			cookie = "ASP.NET_SessionId=" + rexCookieSession.stringMatched(1) + "; " + userID;
-			UrlFetcher.setPermanentRequestorProperty("Cookie", cookie);
-		} else {
-			pref.log("[switchToEnglish]:SessionID not found.", null);
-			return false;
-		}
+
+		getSessionIdAndSetCookie(pref.userID);
+
 		try {
 			page = UrlFetcher.fetch(url);
 			if (page.length() == 0)
@@ -1314,6 +1322,7 @@
 		} catch (IOException e) {
 			return false;
 		}
+
 		Extractor ext = new Extractor(page, "ctl00$ContentBody$uxLanguagePreference", "</select>", 0, true);
 		String languageBlock = ext.findNext();
 		ext.set(ext.findNext("ctl00$ContentBody$uxDateTimeFormat"), "selected\" value=\"", "\">", 0, true);



From araber95 at mail.berlios.de  Sat Sep 17 12:54:44 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Sat, 17 Sep 2011 12:54:44 PM +0200
Subject: [Cachewolf-svn] r3095 - trunk/src/CacheWolf
Message-ID: <20110917105445.3468F4811DC@sheep.berlios.de>

Author: araber95
Date: 2011-09-17 12:54:44 +0200 (Sat, 17 Sep 2011)
New Revision: 3095

Modified:
   trunk/src/CacheWolf/CWPoint.java
Log:
degree sign in utf-8 corrected
(changed project textfile encoding to utf-8)

Modified: trunk/src/CacheWolf/CWPoint.java
===================================================================
--- trunk/src/CacheWolf/CWPoint.java	2011-09-16 16:46:50 UTC (rev 3094)
+++ trunk/src/CacheWolf/CWPoint.java	2011-09-17 10:54:44 UTC (rev 3095)
@@ -82,7 +82,7 @@
 	
 	/**
 	 * Create CWPoint by using coordinates in "CacheWolf" format 
-	 * @param coord  String of type N 49? 33.167 E 011? 21.608
+	 * @param coord  String of type N 49?? 33.167 E 011?? 21.608
 	 * @param format only CWPoint.CW or CWPoint.REGEX is supported
 	 */
 	public CWPoint(String coord, int format) {
@@ -115,7 +115,7 @@
 	
 	/**
 	 * set lat and lon by parsing coordinates with Regex 
-	 * @param coord  String like N 49? 33.167 E 011? 21.608
+	 * @param coord  String like N 49?? 33.167 E 011?? 21.608
 	 */
 	public CWPoint(String coord) {
 		set(coord);
@@ -148,7 +148,7 @@
 	
 	/**
 	 * set lat and lon by using coordinates in "CacheWolf" format 
-	 * @param coord  String of type N 49? 33.167 E 011? 21.608
+	 * @param coord  String of type N 49?? 33.167 E 011?? 21.608
 	 * @param format only CWPoint.CW is supported
 	 */
 	public void set (String coord, int format) {
@@ -179,7 +179,7 @@
 
 	/**
 	 * set lat and lon by parsing coordinates with regular expression 
-	 * @param coord  String of type N 49? 33.167 E 011? 21.608
+	 * @param coord  String of type N 49?? 33.167 E 011?? 21.608
 	 * 				 	or 			-12.3456 23.4567
 	 * 					or			32U 2345234 8902345
 	 */
@@ -187,10 +187,10 @@
 	//replace non-breaking-spaces by normal spaces
 	coord = coord.replace((char)0xA0, ' ');
 		/*		(?: 
-					([NSns])\s*([0-9]{1,2})[\s?]+([0-9]{1,2})(?:\s+([0-9]{1,2}))?[,.]([0-9]{1,8})\s* 
-					([EWewOo])\s*([0-9]{1,3})[\s?]+([0-9]{1,2})(?:\s+([0-9]{1,2}))?[,.]([0-9]{1,8}) 
+					([NSns])\s*([0-9]{1,2})[\s??]+([0-9]{1,2})(?:\s+([0-9]{1,2}))?[,.]([0-9]{1,8})\s* 
+					([EWewOo])\s*([0-9]{1,3})[\s??]+([0-9]{1,2})(?:\s+([0-9]{1,2}))?[,.]([0-9]{1,8}) 
 					)|(?: 
-					  ([+-NnSs]?[0-9]{1,2})[,.]([0-9]{1,8})(?:(?=\+)|(?=-)|\s+|\s*?\s*)([+-WwEeOo]?[0-9]{1,3})[,.]([0-9]{1,8})\s*[?]? 
+					  ([+-NnSs]?[0-9]{1,2})[,.]([0-9]{1,8})(?:(?=\+)|(?=-)|\s+|\s*??\s*)([+-WwEeOo]?[0-9]{1,3})[,.]([0-9]{1,8})\s*[??]? 
 					)|(?: 
 					   ([0-9]{1,2}[C-HJ-PQ-X])\s*[EeOo]?\s*([0-9]{1,7})\s+[Nn]?\s*([0-9]{1,7}) 
 					)
@@ -203,13 +203,13 @@
 		}
 	}
 				Regex rex=new Regex("(?:" +
-									"([NSns])\\s*([0-9]{1,2})(?:[?\uC2B0]\\s*|\\s+[?\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['???]\\s*|\\s+['???]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['???\"]?\\s*" +
+									"([NSns])\\s*([0-9]{1,2})(?:[??\uC2B0]\\s*|\\s+[??\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['???]\\s*|\\s+['???]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['???\"]?\\s*" +
 									"[,./_;+:-]*\\s*" + // allow N xx xx.xxx / E xxx xx.xxx
-									"([EWewOo])\\s*([0-9]{1,3})(?:[?\uC2B0]\\s*|\\s+[?\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['???]\\s*|\\s+['???]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['???\"]?" +
+									"([EWewOo])\\s*([0-9]{1,3})(?:[??\uC2B0]\\s*|\\s+[??\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['???]\\s*|\\s+['???]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['???\"]?" +
 									")|(?:" +
-                  "(?:([NnSs])\\s*(?![+-]))?"   +     "([+-]?[0-9]{1,2})[,.]([0-9]{1,8})(?:(?=[+-EeWwOo])|\\s+|\\s*[?\uC2B0]\\s*)" +
+                  "(?:([NnSs])\\s*(?![+-]))?"   +     "([+-]?[0-9]{1,2})[,.]([0-9]{1,8})(?:(?=[+-EeWwOo])|\\s+|\\s*[??\uC2B0]\\s*)" +
                   "[,./_;:]*\\s*" +
-                  "(?:([EeWwOo])\\s*(?![+-]))?"    +     "([+-]?[0-9]{1,3})[,.]([0-9]{1,8})\\s*[?\uC2B0]?" +
+                  "(?:([EeWwOo])\\s*(?![+-]))?"    +     "([+-]?[0-9]{1,3})[,.]([0-9]{1,8})\\s*[??\uC2B0]?" +
 									")|(?:" +
 									"([0-9]{1,2}[C-HJ-PQ-X])\\s*[EeOo]?\\s*([0-9]{1,7})\\s+[Nn]?\\s*([0-9]{1,7})" +
 									")|(?:" +
@@ -559,9 +559,9 @@
 
 	/**
 	 * Returns the string reprenstation of the CWPoint
-	 * Format ist CacheWolf (N 49? 33.167 E 011? 21.608), which can be used 
+	 * Format ist CacheWolf (N 49?? 33.167 E 011?? 21.608), which can be used 
 	 * with parseLatLon
-	 * @return  string like N 49? 33.167 E 011? 21.608 
+	 * @return  string like N 49?? 33.167 E 011?? 21.608 
 	 */	
 	public String toString(){
 		return toString(TransformCoordinates.CW);
@@ -576,12 +576,12 @@
 		if (!isValid()) return MyLocale.getMsg(999,"not set");
 		switch (format) {
 		case TransformCoordinates.DD:	
-			return getNSLetter() + " " + STRreplace.replace(getLatDeg(format),"-","") + "? "
-						+  getEWLetter() + " " + STRreplace.replace(getLonDeg(format),"-","")+ "?";
-		case TransformCoordinates.DMM:	return getNSLetter() + " " + getLatDeg(format) + "? " + getLatMin(format) + " "
-						+  getEWLetter() + " " + getLonDeg(format) + "? " + getLonMin(format);
-		case TransformCoordinates.DMS:	return getNSLetter() + " " + getLatDeg(format) + "? " + getLatMin(format) + "\' " + getLatSec(format) + "\" " 
-						+  getEWLetter() + " " + getLonDeg(format) + "? " + getLonMin(format) + "\' " + getLonSec(format) + "\"";
+			return getNSLetter() + " " + STRreplace.replace(getLatDeg(format),"-","") + "?? "
+						+  getEWLetter() + " " + STRreplace.replace(getLonDeg(format),"-","")+ "??";
+		case TransformCoordinates.DMM:	return getNSLetter() + " " + getLatDeg(format) + "?? " + getLatMin(format) + " "
+						+  getEWLetter() + " " + getLonDeg(format) + "?? " + getLonMin(format);
+		case TransformCoordinates.DMS:	return getNSLetter() + " " + getLatDeg(format) + "?? " + getLatMin(format) + "\' " + getLatSec(format) + "\" " 
+						+  getEWLetter() + " " + getLonDeg(format) + "?? " + getLonMin(format) + "\' " + getLonSec(format) + "\"";
 		case TransformCoordinates.LAT_LON: 	return getLatDeg(DD)+","+getLonDeg(DD);
 		case TransformCoordinates.LON_LAT: 	return getLonDeg(DD)+","+getLatDeg(DD);
 		//case TransformCoordinates.CUSTOM:	return getGermanGkCoordinates();



From araber95 at mail.berlios.de  Sat Sep 17 08:38:05 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Sat, 17 Sep 2011 08:38:05 PM +0200
Subject: [Cachewolf-svn] r3096 - in trunk: lib/net/ax86 lib/org/json
	res_noewe src/CacheWolf/imp
Message-ID: <20110917183805.476D4481216@sheep.berlios.de>

Author: araber95
Date: 2011-09-17 20:38:04 +0200 (Sat, 17 Sep 2011)
New Revision: 3096

Modified:
   trunk/lib/net/ax86/GPS.class
   trunk/lib/net/ax86/GPSException.class
   trunk/lib/net/ax86/GPSHook.class
   trunk/lib/net/ax86/GPSTest.class
   trunk/lib/org/json/JSONArray.class
   trunk/lib/org/json/JSONException.class
   trunk/lib/org/json/JSONObject$Null.class
   trunk/lib/org/json/JSONObject.class
   trunk/lib/org/json/JSONString.class
   trunk/lib/org/json/JSONTokener.class
   trunk/lib/org/json/Test$1Obj.class
   trunk/lib/org/json/Test.class
   trunk/res_noewe/spider.def
   trunk/src/CacheWolf/imp/SpiderGC.java
Log:
import of logs adapted to Groundspeak Update of September/15/2011

Modified: trunk/lib/net/ax86/GPS.class
===================================================================
(Binary files differ)

Modified: trunk/lib/net/ax86/GPSException.class
===================================================================
(Binary files differ)

Modified: trunk/lib/net/ax86/GPSHook.class
===================================================================
(Binary files differ)

Modified: trunk/lib/net/ax86/GPSTest.class
===================================================================
(Binary files differ)

Modified: trunk/lib/org/json/JSONArray.class
===================================================================
(Binary files differ)

Modified: trunk/lib/org/json/JSONException.class
===================================================================
(Binary files differ)

Modified: trunk/lib/org/json/JSONObject$Null.class
===================================================================
(Binary files differ)

Modified: trunk/lib/org/json/JSONObject.class
===================================================================
(Binary files differ)

Modified: trunk/lib/org/json/JSONString.class
===================================================================
(Binary files differ)

Modified: trunk/lib/org/json/JSONTokener.class
===================================================================
(Binary files differ)

Modified: trunk/lib/org/json/Test$1Obj.class
===================================================================
(Binary files differ)

Modified: trunk/lib/org/json/Test.class
===================================================================
(Binary files differ)

Modified: trunk/res_noewe/spider.def
===================================================================
--- trunk/res_noewe/spider.def	2011-09-17 10:54:44 UTC (rev 3095)
+++ trunk/res_noewe/spider.def	2011-09-17 18:38:04 UTC (rev 3096)
@@ -1,49 +1,5 @@
 #============================================================
 # spider.def - Definition file for reading caches from GC.COM
-# Version 1.0 - 20070526 skg
-# Version 2.0 - 20070531 nach GC ?nderungen
-# Version 2.1 - 20070601 TB Anpassung an GC ?nderung
-# Version 2.2 - 20070602 firstLine erg?nzt. Damit funktionieren jetzt auch die n?chsten Seiten.
-# Version 2.3 - 20070602 sizeRex an GC ?nderungen angepasst
-# Version 2.4 - 20070616 neu: Attribute
-# Version 2.5 - 20070629 Anpassungen an Listen?nderung bei GC
-# Version 2.6 - 20070701 Bugfix: Wenn Zentrum exakt in Cachekoordinaten liegt wurde der Cache nicht gespidert
-# Version 2.7 - 20070811 Bugfix fuer verschluesselte Logs
-# Version 2.8 - 20070814 Findet jetzt auch Addi Wpts in eigenen Caches
-# Version 2.9 - 20070817 Bessere Unterscheidung zwischen Werbung vs.normalen Caches + Caches ohne Richtung/Entfenung
-# Version 2.10 - 20070825 Travelbug support
-# Version 2.11 - 20070907 get travelbug mission by tracking number
-# Version 3.0 - 20071010 adaption to new GC-design
-# Version 3.1 - 20071013 Use the given prefix for addi waypoints
-# Version 3.2 - 20071024 longer end sequence for longDescRex
-# Version 3.3 - 20080316 get travelbug name by tracking number
-# Version 3.4 - 20080227 Image comments added
-# Version 3.5 - 20080529 Modified descRex to allow for linebreaks
-# Version 3.6 - 20080531 Modified descRex to avoid Stack overflow in exe
-# Version 3.7 - 20080613 Some lines generalized for proxies replacing the images.
-# Version 4.0 - 20080725 adaption to new GC-design
-# Version 4.1 - 20080725 adaption to new GC-design (images and travelbugs)
-# Version 4.2 - 20081031 Fix for cache type (background image with name of type)
-# Version 4.3 - 20090314 maxDistance string added
-# Version 4.4 - 20090314 firstPageFinds string added
-# Version 4.5 - 20090315 strings for spidering country/state/logId
-# Version 4.6 - 20090406 Fix for country/state (did not work with US caches)
-# Version 4.7 - 20090521 Strings for single cache types added
-# Version 4.8 - 20090805 More specific unavailability detection
-# Version 4.9 - 20091018 Should work now with proxies and cachetypes as background
-# Version 4.10- 20091021 Tags in Description are now correctly closed
-# Version 4.11- 20091023 Reverted last change, because it doesn't work with EWE/EXE
-# Version 5.0 - 20091105 adaption to new GC-design
-# Version 6.0 - 20100113 adaption to new GC-design
-# Version 6.1 - 20100305 better log recognition
-# Version 7.0 - 20100402 adaption to new GC-design
-# Version 7.1 - 20100528 better description recognition
-# Version 8.0 - 20100604 adaption to new GC-design
-# Version 9.0 - 20100630 adaption to new GC-design
-# Version 10.0 - 20100729 adaption to new GC-design DateHiddenrex , optimized cacheOwnerRex araber95
-# Version 11.0 - 20101110 adaption to new GC-design (maybe not complete)
-# Version 12.0 - 20101223 first little adaption to new GC-design (logs)
-# Version 12.0 - 20101224 adaption to new GC-design (decode distance)
 #============================================================
 # A suffix of Rex indicates a regular expression
 # A suffix of ExStart indicates the start of an Extractor search pattern
@@ -51,6 +7,7 @@
 #
 # Important:
 # * When entering spaces into a string ensure to escape them or write them as \\u0020
+# * escaping space should not be necessary
 # * Be sure that you have no hidden spaces at the end of a line or the patterns will not match!
 #------------------------------------------------------------
 #loginPage          = http://www.geocaching.com/login/default.aspx
@@ -125,25 +82,7 @@
 #--------------------------------------
 #Section2a: Logs
 #--------------------------------------
-# blockRex extrahiert zun?chst aus der gesamten Seite den Logbereich
-blockRex           = <table class="LogsTable">((?s).*?)</table>\\s+<p>
-# singleLogEx extrahiert in einer Schleife alle Logs aus dem Logbereich
-singleLogExStart   = class="logOwnerProfileName"
-singleLogExEnd     = class="AlignRight">
-# iconEx, nameTempEx, dateEx, singleLogEx werden auf einen singleLog angewendet
-iconExStart        = www.geocaching.com/images/icons/
-iconExEnd          = \ alt="
-nameTempExStart    = <a\ href=
-nameTempExEnd      = /a>
-# Name extrahiert aus nameTemp
-nameExStart        = >
-nameExEnd          = <
-dateExStart        = LogDate">
-dateExEnd          = </span>
-logExStart         = class="LogText">
-logExEnd           = </p>
-logIdExStart       = "\ id="
-logIdExEnd         = ">
+UserTokenRex       = userToken = '((?s).*?)';
 # Die Icons, die einen erfolgreichen Fund signalisieren
 icon_smile         = icon_smile.gif
 icon_camera        = icon_camera.gif

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-17 10:54:44 UTC (rev 3095)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-17 18:38:04 UTC (rev 3096)
@@ -82,6 +82,8 @@
 import ewesoft.xml.MinML;
 import ewesoft.xml.sax.AttributeList;
 
+import org.json.*;
+
 /**
  * Class to spider caches from gc.com
  */
@@ -164,7 +166,7 @@
 	private static Regex RexPropType;
 	private static Regex RexPropDTS;
 	private static Regex RexPropOwn;
-	private static Regex RexLogBlock;
+	private static Regex RexUserToken;
 	private static Extractor exSingleLog;
 	private static Extractor exIcon;
 	private static Extractor exNameTemp;
@@ -1390,14 +1392,7 @@
 			RexPropType = new Regex(p.getProp("TypeRex"));
 			RexPropDTS = new Regex(p.getProp("DTSRex"));
 			RexPropOwn = new Regex(p.getProp("own"));
-			RexLogBlock = new Regex(p.getProp("blockRex"));
-			exSingleLog = new Extractor("", p.getProp("singleLogExStart"), p.getProp("singleLogExEnd"), 0, false);
-			exIcon = new Extractor("", p.getProp("iconExStart"), p.getProp("iconExEnd"), 0, true);
-			exNameTemp = new Extractor("", p.getProp("nameTempExStart"), p.getProp("nameTempExEnd"), 0, true);
-			exName = new Extractor("", p.getProp("nameExStart"), p.getProp("nameExEnd"), 0, true);
-			exDate = new Extractor("", p.getProp("dateExStart"), p.getProp("dateExEnd"), 0, true);
-			exLog = new Extractor("", p.getProp("logExStart"), p.getProp("logExEnd"), 0, true);
-			exLogId = new Extractor("", p.getProp("logIdExStart"), p.getProp("logIdExEnd"), 0, true);
+			RexUserToken = new Regex(p.getProp("UserTokenRex"));
 			icon_smile = p.getProp("icon_smile");
 			icon_camera = p.getProp("icon_camera");
 			icon_attended = p.getProp("icon_attended");
@@ -2671,61 +2666,66 @@
 	 * @return A HTML string containing the logs
 	 */
 	private void getLogs(String completeWebPage, CacheHolderDetail chD) throws Exception {
-		String icon = "";
-		String name = "";
-		String logText = "";
-		String logId = "";
-		String singleLog = "";
+
 		final LogList reslts = chD.CacheLogs;
-		RexLogBlock.search(completeWebPage);
-		if (!RexLogBlock.didMatch()) {
-			pref.log("[SpiderGC.java:getLogs]check blockRex!", null);
+
+		RexUserToken.search(completeWebPage);
+		if (!RexUserToken.didMatch()) {
+			pref.log("[SpiderGC.java:getLogs]check RexUserToken!", null);
 		}
-		final String LogBlock = RexLogBlock.stringMatched(1);
-
-		exSingleLog.set(LogBlock);
+		final String userToken = RexUserToken.stringMatched(1);
+		int idx = 0;
 		int nLogs = 0;
 		boolean foundown = false;
-		while ((singleLog = exSingleLog.findNext()).length() > 0) {
-			nLogs++;
+		boolean fertig = false;
+		do {
+			idx++;
+			String url="http://www.geocaching.com/seek/geocache.logbook?tkn="+userToken+"&idx="+idx+"&num=10&decrypt=false";
+			UrlFetcher.setRequestorProperty("Content-Type", "application/json; charset=UTF-8");
+			String page=UrlFetcher.fetch(url);
+			final JSONObject resp = new JSONObject(page);
+			if (!resp.getString("status").equals("success")) {
+				pref.log("status is " + resp.getString("status"));
+			}
+			final JSONArray data = resp.getJSONArray("data");
+			fertig = data.length() < 10;
+			for (int index = 0; index < data.length(); index++) {
+				nLogs++;
+				final JSONObject entry = data.getJSONObject(index);
 
-			icon = exIcon.findFirst(singleLog);
-			// ' changes to " in UMTS-connection! first char in iconExEnd.
-			icon = icon.substring(0, icon.length() - 1);
+				final String icon = entry.getString("LogTypeImage");
+				final String name = entry.getString("UserName");
+				String logText = entry.getString("LogText");
+				logText = STRreplace.replace(logText, "<br/>", "<br>");
+				logText = correctSmilies(logText);
+				final String d = DateFormat.toYYMMDD(entry.getString("Visited"));
+				final String logId = entry.getString("LogID");
 
-			name = exName.findFirst(exNameTemp.findFirst(singleLog));
-
-			logText = exLog.findFirst(singleLog);
-			logText = correctSmilies(logText);
-
-			logId = exLogId.findFirst(singleLog);
-
-			final String ed = exDate.findFirst(singleLog);
-			final String d = DateFormat.toYYMMDD(ed);
-
-			// if this log says this Cache is found by me
-			if ((icon.equals(icon_smile) || icon.equals(icon_camera) || icon.equals(icon_attended)) && (name.equalsIgnoreCase(SafeXML.clean(pref.myAlias)) || (pref.myAlias2.length() > 0 && name.equalsIgnoreCase(SafeXML.clean(pref.myAlias2))))) {
-				chD.getParent().setFound(true);
-				chD.getParent().setCacheStatus(d);
-				chD.OwnLogId = logId;
-				chD.OwnLog = new Log(icon, d, name, logText);
-				foundown = true;
-				// pref.log("own log detected!");
-			}
-			if (nLogs <= pref.maxLogsToSpider) {
-				reslts.add(new Log(icon, d, name, logText));
-			} else {
-				if (foundown) {
-					break;
+				// if this log says this Cache is found by me
+				if ((icon.equals(icon_smile) || icon.equals(icon_camera) || icon.equals(icon_attended)) && (name.equalsIgnoreCase(SafeXML.clean(pref.myAlias)) || (pref.myAlias2.length() > 0 && name.equalsIgnoreCase(SafeXML.clean(pref.myAlias2))))) {
+					chD.getParent().setFound(true);
+					chD.getParent().setCacheStatus(d);
+					// final String logId = entry.getString("LogID");
+					chD.OwnLogId = logId;
+					chD.OwnLog = new Log(icon, d, name, logText);
+					foundown = true;
 				}
+				if (nLogs <= pref.maxLogsToSpider) {
+					reslts.add(new Log(icon, d, name, logText));
+				} else {
+					if (foundown) {
+						fertig=true;
+						break;
+					}
+				}
 			}
-		}
+		} while (!fertig);
+
 		if (nLogs > pref.maxLogsToSpider) {
+			// there are more logs
 			reslts.add(Log.maxLog());
-			// pref.log("MAXLOGS reached ("+pref.maxLogsToSpider+")");
 		}
-		// pref.log(nLogs+" checked!");
-		// return reslts;
+
 	}
 
 	/**



From araber95 at mail.berlios.de  Sun Sep 18 11:49:57 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Sun, 18 Sep 2011 11:49:57 AM +0200
Subject: [Cachewolf-svn] r3097 - trunk/src/CacheWolf/imp
Message-ID: <20110918094957.8223B4813C7@sheep.berlios.de>

Author: araber95
Date: 2011-09-18 11:49:57 +0200 (Sun, 18 Sep 2011)
New Revision: 3097

Modified:
   trunk/src/CacheWolf/imp/SpiderGC.java
Log:
1. handling of getting no sessionId
2. using the limit of 100 logs in jsonobject per http/get" C:/Dateien_Entwicklung/Java_Projekte/EasyCW/CacheWolf/src/CacheWolf/imp/SpiderGC.java

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-17 18:38:04 UTC (rev 3096)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-18 09:49:57 UTC (rev 3097)
@@ -1244,7 +1244,8 @@
 		if (loginPage.indexOf(loginSuccess) > 0) {
 			pref.log("Login successful: " + pref.myAlias);
 			// **3 now we are logged in and get the userId and sessionId
-			getSessionIdAndSetCookie("");
+			if (!getSessionIdAndSetCookie(""))
+				return 2;
 		} else {
 			pref.log("[login]: Wrong Account or Password? " + pref.myAlias, null);
 			return 2;
@@ -1315,7 +1316,8 @@
 			return false;
 		}
 
-		getSessionIdAndSetCookie(pref.userID);
+		if (!getSessionIdAndSetCookie(pref.userID))
+			return false;
 
 		try {
 			page = UrlFetcher.fetch(url);
@@ -2678,17 +2680,17 @@
 		int nLogs = 0;
 		boolean foundown = false;
 		boolean fertig = false;
+		int num = 100;
 		do {
 			idx++;
-			String url="http://www.geocaching.com/seek/geocache.logbook?tkn="+userToken+"&idx="+idx+"&num=10&decrypt=false";
+			String url="http://www.geocaching.com/seek/geocache.logbook?tkn="+userToken+"&idx="+idx+"&num="+num+"&decrypt=false";
 			UrlFetcher.setRequestorProperty("Content-Type", "application/json; charset=UTF-8");
-			String page=UrlFetcher.fetch(url);
-			final JSONObject resp = new JSONObject(page);
+			final JSONObject resp = new JSONObject(UrlFetcher.fetch(url));
 			if (!resp.getString("status").equals("success")) {
 				pref.log("status is " + resp.getString("status"));
 			}
 			final JSONArray data = resp.getJSONArray("data");
-			fertig = data.length() < 10;
+			fertig = data.length() < num;
 			for (int index = 0; index < data.length(); index++) {
 				nLogs++;
 				final JSONObject entry = data.getJSONObject(index);



From araber95 at mail.berlios.de  Sun Sep 18 12:21:55 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Sun, 18 Sep 2011 12:21:55 PM +0200
Subject: [Cachewolf-svn] r3098 - trunk
Message-ID: <20110918102155.561D14813C7@sheep.berlios.de>

Author: araber95
Date: 2011-09-18 12:21:55 +0200 (Sun, 18 Sep 2011)
New Revision: 3098

Modified:
   trunk/compile.bat
   trunk/compile.sh
   trunk/fwrtsnapshot.sh
Log:
updating compile scritps (without warranty).
Bitte um R?ckmeldung

Modified: trunk/compile.bat
===================================================================
--- trunk/compile.bat	2011-09-18 09:49:57 UTC (rev 3097)
+++ trunk/compile.bat	2011-09-18 10:21:55 UTC (rev 3098)
@@ -1,4 +1,4 @@
 if not exist bin\CacheWolf mkdir bin\CacheWolf
-javac -source 1.3 -target 1.1 -cp ./lib/CompileEwe.zip;./lib/  -d ./bin/ -deprecation ./src/org/bouncycastle/asn1/*.java ./src/org/bouncycastle/asn1/nist/*.java ./src/org/bouncycastle/asn1/oiw/*.java ./src/org/bouncycastle/asn1/pkcs/*.java ./src/org/bouncycastle/asn1/sec/*.java ./src/org/bouncycastle/asn1/teletrust/*.java ./src/org/bouncycastle/asn1/x9/*.java ./src/org/bouncycastle/asn1/x500/*.java ./src/org/bouncycastle/asn1/x500/style/*.java ./src/org/bouncycastle/asn1/x509/*.java ./src/org/bouncycastle/crypto/*.java ./src/org/bouncycastle/crypto/agreement/*.java ./src/org/bouncycastle/crypto/digests/*.java ./src/org/bouncycastle/crypto/encodings/*.java ./src/org/bouncycastle/crypto/engines/*.java ./src/org/bouncycastle/crypto/generators/*.java ./src/org/bouncycastle/crypto/io/*.java ./src/org/bouncycastle/crypto/macs/*.java ./src/org/bouncycastle/crypto/modes/*.java ./src/org/bouncycastle/crypto/params/*.java ./src/org/bouncycastle/crypto/modes/*.java ./src/org/bouncycast
 le/crypto/prng/*.java ./src/org/bouncycastle/crypto/signers/*.java ./src/org/bouncycastle/crypto/tls/*.java ./src/org/bouncycastle/crypto/util/*.java ./src/org/bouncycastle/math/ec/*.java ./src/org/bouncycastle/util/*.java ./src/org/bouncycastle/util/encoders/*.java ./src/org/bouncycastle/util/io/*.java ./src/CacheWolf/*.java ./src/CacheWolf/imp/*.java ./src/CacheWolf/navi/*.java ./src/CacheWolf/navi/touchControls/*.java ./src/CacheWolf/exp/*.java ./src/CacheWolf/utils/*.java ./src/CacheWolf/model/*.java ./src/CacheWolf/view/*.java  ./src/CacheWolf/view/ewe/*.java  ./src/CacheWolf/view/pda/*.java
+javac -source 1.3 -target 1.1 -encoding UTF-8 -cp ./lib/CompileEwe.zip;./lib/  -d ./bin/ -deprecation ./src/org/bouncycastle/asn1/*.java ./src/org/bouncycastle/asn1/nist/*.java ./src/org/bouncycastle/asn1/oiw/*.java ./src/org/bouncycastle/asn1/pkcs/*.java ./src/org/bouncycastle/asn1/sec/*.java ./src/org/bouncycastle/asn1/teletrust/*.java ./src/org/bouncycastle/asn1/x9/*.java ./src/org/bouncycastle/asn1/x500/*.java ./src/org/bouncycastle/asn1/x500/style/*.java ./src/org/bouncycastle/asn1/x509/*.java ./src/org/bouncycastle/crypto/*.java ./src/org/bouncycastle/crypto/agreement/*.java ./src/org/bouncycastle/crypto/digests/*.java ./src/org/bouncycastle/crypto/encodings/*.java ./src/org/bouncycastle/crypto/engines/*.java ./src/org/bouncycastle/crypto/generators/*.java ./src/org/bouncycastle/crypto/io/*.java ./src/org/bouncycastle/crypto/macs/*.java ./src/org/bouncycastle/crypto/modes/*.java ./src/org/bouncycastle/crypto/params/*.java ./src/org/bouncycastle/crypto/modes/*.java ./sr
 c/org/bouncycastle/crypto/prng/*.java ./src/org/bouncycastle/crypto/signers/*.java ./src/org/bouncycastle/crypto/tls/*.java ./src/org/bouncycastle/crypto/util/*.java ./src/org/bouncycastle/math/ec/*.java ./src/org/bouncycastle/util/*.java ./src/org/bouncycastle/util/encoders/*.java ./src/org/bouncycastle/util/io/*.java ./src/CacheWolf/*.java ./src/CacheWolf/imp/*.java ./src/CacheWolf/navi/*.java ./src/CacheWolf/navi/touchControls/*.java ./src/CacheWolf/exp/*.java ./src/CacheWolf/utils/*.java ./src/CacheWolf/model/*.java ./src/CacheWolf/view/*.java  ./src/CacheWolf/view/ewe/*.java  ./src/CacheWolf/view/pda/*.java
 javac -source 1.3 -target 1.1 -cp ./lib/CompileEwe.zip;./lib/  -d ./lib/ -deprecation ./lib/net/ax86/*.java ./lib/org/json/*.java
 pause

Modified: trunk/compile.sh
===================================================================
--- trunk/compile.sh	2011-09-18 09:49:57 UTC (rev 3097)
+++ trunk/compile.sh	2011-09-18 10:21:55 UTC (rev 3098)
@@ -1,19 +1,31 @@
 #!/bin/sh
 
-ENCODING=${ENCODING:-windows-1252}
+CP1252=${ENCODING:-windows-1252}
+UTF8=${ENCODING:-UTF-8}
 
-do_compile() {
+compile_cw() {
    javac \
       -source 1.3 \
       -target 1.1 \
-      -encoding "${ENCODING}" \
+      -encoding "${UTF-8}" \
       -cp ./lib/CompileEwe.zip:./lib/ \
       -deprecation \
       -nowarn \
       "$@"
 }
 
-do_compile \
+compile_json() {
+   javac \
+      -source 1.3 \
+      -target 1.1 \
+      -encoding "${cp1252}" \
+      -cp ./lib/CompileEwe.zip:./lib/ \
+      -deprecation \
+      -nowarn \
+      "$@"
+}
+
+compile_cw \
    -d ./bin/ \
    ./src/org/bouncycastle/*/*.java \
    ./src/org/bouncycastle/*/*/*.java \
@@ -23,6 +35,6 @@
    ./src/CacheWolf/*.java \
    ./src/CacheWolf/*/*/*.java \
    ./src/CacheWolf/*/*.java
-do_compile \
+compile_json \
    lib/net/*/*.java \
    lib/org/*/*.java

Modified: trunk/fwrtsnapshot.sh
===================================================================
--- trunk/fwrtsnapshot.sh	2011-09-18 09:49:57 UTC (rev 3097)
+++ trunk/fwrtsnapshot.sh	2011-09-18 10:21:55 UTC (rev 3098)
@@ -17,7 +17,7 @@
     ed -s src/CacheWolf/Version.java
 rm -rf bin
 mkdir -p bin/CacheWolf
-javac -source 1.3 -target 1.1 -encoding windows-1252 \
+javac -source 1.3 -target 1.1 -encoding UTF-8 \
      -cp lib/CompileEwe.zip:lib -d bin -deprecation -nowarn \
      src/CacheWolf/*.java src/CacheWolf/*/*.java src/CacheWolf/navi/touchControls/*.java src/CacheWolf/view/*/*.java \
 	 src/org/bouncycastle/*/*.java src/org/bouncycastle/*/*/*.java src/org/bouncycastle/*/*/*/*.java



From araber95 at mail.berlios.de  Sun Sep 18 01:30:14 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Sun, 18 Sep 2011 01:30:14 PM +0200
Subject: [Cachewolf-svn] r3099 - trunk/src/CacheWolf
Message-ID: <20110918113014.E3A0C4813C9@sheep.berlios.de>

Author: araber95
Date: 2011-09-18 13:30:14 +0200 (Sun, 18 Sep 2011)
New Revision: 3099

Modified:
   trunk/src/CacheWolf/MainMenu.java
Log:
was ich immer schon mal machen wollte: changed order of imports.

Modified: trunk/src/CacheWolf/MainMenu.java
===================================================================
--- trunk/src/CacheWolf/MainMenu.java	2011-09-18 10:21:55 UTC (rev 3098)
+++ trunk/src/CacheWolf/MainMenu.java	2011-09-18 11:30:14 UTC (rev 3099)
@@ -127,13 +127,13 @@
 				loadOCFinds = new MenuItem(MyLocale.getMsg(163, "Finds from opencaching")), //
 				mnuSeparator, //
 				spider = new MenuItem(MyLocale.getMsg(131, "Download from geocaching.com")), //
+				spiderAllFinds = new MenuItem(MyLocale.getMsg(217, "Spider all finds from geocaching.com")), //
 				spiderRoute, //
-				spiderAllFinds = new MenuItem(MyLocale.getMsg(217, "Spider all finds from geocaching.com")), //
 				spiderQuick = new MenuItem(MyLocale.getMsg(138, "from GC quick")), //
-				update = new MenuItem(MyLocale.getMsg(1014, "Update cache data")), //
-				mnuSeparator, //
 				loadGCVotes = new MenuItem(MyLocale.getMsg(1208, "Import ratings from GCVote")), //
 				fetchOCLink = new MenuItem(MyLocale.getMsg(1209, "Fetch link to OC - Cache")), //
+				mnuSeparator, //
+				update = new MenuItem(MyLocale.getMsg(1014, "Update cache data")), //
 		};
 		Menu importMenu = new Menu(mnuImport, MyLocale.getMsg(175, "Import"));
 



From araber95 at mail.berlios.de  Mon Sep 19 01:52:57 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Mon, 19 Sep 2011 01:52:57 AM +0200
Subject: [Cachewolf-svn] r3100 - in trunk/src/CacheWolf: . exp imp navi
	navi/touchControls utils view/pda
Message-ID: <20110918235257.785814813CE@sheep.berlios.de>

Author: araber95
Date: 2011-09-19 01:52:56 +0200 (Mon, 19 Sep 2011)
New Revision: 3100

Modified:
   trunk/src/CacheWolf/Attribute.java
   trunk/src/CacheWolf/CWPoint.java
   trunk/src/CacheWolf/CalcPanel.java
   trunk/src/CacheWolf/CoordsScreen.java
   trunk/src/CacheWolf/DateFormat.java
   trunk/src/CacheWolf/FilterScreen.java
   trunk/src/CacheWolf/GeoCodeGui.java
   trunk/src/CacheWolf/InputScreen.java
   trunk/src/CacheWolf/ParseLatLon.java
   trunk/src/CacheWolf/Preferences.java
   trunk/src/CacheWolf/Profile.java
   trunk/src/CacheWolf/SafeXML.java
   trunk/src/CacheWolf/Test.java
   trunk/src/CacheWolf/Version.java
   trunk/src/CacheWolf/exp/GpxExportNg.java
   trunk/src/CacheWolf/exp/KMLExporter.java
   trunk/src/CacheWolf/exp/MSARCSVExporter.java
   trunk/src/CacheWolf/exp/TomTomExporter.java
   trunk/src/CacheWolf/imp/GPXImporter.java
   trunk/src/CacheWolf/imp/OCXMLImporter.java
   trunk/src/CacheWolf/imp/OCXMLImporterScreen.java
   trunk/src/CacheWolf/imp/SpiderGC.java
   trunk/src/CacheWolf/navi/GkProjection.java
   trunk/src/CacheWolf/navi/GotoPanel.java
   trunk/src/CacheWolf/navi/MapInfoObject.java
   trunk/src/CacheWolf/navi/MapLoader.java
   trunk/src/CacheWolf/navi/MapLoaderGui.java
   trunk/src/CacheWolf/navi/MapsList.java
   trunk/src/CacheWolf/navi/MovingMap.java
   trunk/src/CacheWolf/navi/Navigate.java
   trunk/src/CacheWolf/navi/ProjectedPoint.java
   trunk/src/CacheWolf/navi/SkyOrientation.java
   trunk/src/CacheWolf/navi/TrackOverlay.java
   trunk/src/CacheWolf/navi/TransformCoordinates.java
   trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java
   trunk/src/CacheWolf/navi/touchControls/MovingMapControlItem.java
   trunk/src/CacheWolf/navi/touchControls/MovingMapControls.java
   trunk/src/CacheWolf/utils/URLUTF8Encoder.java
   trunk/src/CacheWolf/view/pda/PDATravelbugDetailMenu.java
Log:
returning to cp1252 text encoding

Modified: trunk/src/CacheWolf/Attribute.java
===================================================================
--- trunk/src/CacheWolf/Attribute.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/Attribute.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -275,14 +275,14 @@
 			{ "25", "2552", "poisonoak", "16", "17", "Poison plants" },// 52 Giftige Pflanzen
 			{ "26", "2554", "public", "19", "26", "Public transportation" },// 54 public transit available
 			{ "27", "2556", "quads", "0", "34", "Quads" },// 56 quads allowed
-			{ "28", "2558", "rappelling", "49", "3", "Climbing gear" },// 58 climbing gear Kletterausr??stung
+			{ "28", "2558", "rappelling", "49", "3", "Climbing gear" },// 58 climbing gear Kletterausr?stung
 			{ "29", "2560", "restrooms", "21", "28", "Public restrooms nearby" },// 60 restrooms available
 			{ "30", "2562", "scenic", "0", "8", "Scenic view" },// 62 scenic view
-			{ "31", "2564", "scuba", "51", "5", "Scuba gear" },// 64 Tauchausr??stung
+			{ "31", "2564", "scuba", "51", "5", "Scuba gear" },// 64 Tauchausr?stung
 			// {"32","2566","snakes","0","18","Snakes"},//66 araber95 replaced by Dangerous Animals 14.08.10
 			{ "32", "2566", "dangerousanimals", "0", "18", "Dangerous Animals" },// 66
 			{ "33", "2568", "snowmobiles", "0", "36", "Snowmobiles" },// 68
-			{ "34", "2570", "stealth", "0", "40", "Stealth required" },// 70 stealth required (Heimlich,List,Schl??ue)
+			{ "34", "2570", "stealth", "0", "40", "Stealth required" },// 70 stealth required (Heimlich,List,Schl?ue)
 			{ "35", "2572", "stroller", "0", "41", "Stroller accessible" },// 72 stroller accessible
 			{ "36", "2574", "swimming", "29", "12", "May require swimming" },// 74
 			{ "37", "2576", "thorn", "13", "39", "Thorns" },// 76 thorns!
@@ -311,13 +311,13 @@
 			{ "60", "2622", "othercache", "57", "157", "Other cache type" }, // OC special
 			{ "61", "2624", "overnight", "37", "137", "Overnight stay necessary" }, // OC special
 			{ "62", "2644", "train", "10", "110", "Active railway nearby" }, // OC special
-			{ "63", "2630", "riddle", "55", "0", "" },// 130 R??tsel
+			{ "63", "2630", "riddle", "55", "0", "" },// 130 R?tsel
 			{ "64", "2646", "webcam", "32", "132", "Webcam" }, // OC special
 			{ "65", "2634", "steep", "27", "127", "Hilly area" }, // OC special
 			{ "66", "2636", "submerged", "34", "134", "In the water" }, // OC special
 			{ "67", "2638", "tide", "41", "141", "Tide" }, // OC special
 			{ "68", "2640", "time", "39", "139", "Only available at specified times" }, // OC special
-			{ "69", "2642", "tools", "46", "0", "Special Tool required" },// 142 Spezielle Ausr??stung
+			{ "69", "2642", "tools", "46", "0", "Special Tool required" },// 142 Spezielle Ausr?stung
 			{ "70", "2648", "wiki", "54", "154", "Investigation" }, // OC special
 			{ "71", "2650", "wwwlink", "7", "107", "Hyperlink to another caching portal only" }, // OC special
 			{ "72", "2652", "landf", "0", "45", "Lost And Found Tour" }, // thx to Kappler and MiK

Modified: trunk/src/CacheWolf/CWPoint.java
===================================================================
--- trunk/src/CacheWolf/CWPoint.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/CWPoint.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -82,7 +82,7 @@
 	
 	/**
 	 * Create CWPoint by using coordinates in "CacheWolf" format 
-	 * @param coord  String of type N 49?? 33.167 E 011?? 21.608
+	 * @param coord  String of type N 49? 33.167 E 011? 21.608
 	 * @param format only CWPoint.CW or CWPoint.REGEX is supported
 	 */
 	public CWPoint(String coord, int format) {
@@ -115,7 +115,7 @@
 	
 	/**
 	 * set lat and lon by parsing coordinates with Regex 
-	 * @param coord  String like N 49?? 33.167 E 011?? 21.608
+	 * @param coord  String like N 49? 33.167 E 011? 21.608
 	 */
 	public CWPoint(String coord) {
 		set(coord);
@@ -148,7 +148,7 @@
 	
 	/**
 	 * set lat and lon by using coordinates in "CacheWolf" format 
-	 * @param coord  String of type N 49?? 33.167 E 011?? 21.608
+	 * @param coord  String of type N 49? 33.167 E 011? 21.608
 	 * @param format only CWPoint.CW is supported
 	 */
 	public void set (String coord, int format) {
@@ -179,7 +179,7 @@
 
 	/**
 	 * set lat and lon by parsing coordinates with regular expression 
-	 * @param coord  String of type N 49?? 33.167 E 011?? 21.608
+	 * @param coord  String of type N 49? 33.167 E 011? 21.608
 	 * 				 	or 			-12.3456 23.4567
 	 * 					or			32U 2345234 8902345
 	 */
@@ -187,10 +187,10 @@
 	//replace non-breaking-spaces by normal spaces
 	coord = coord.replace((char)0xA0, ' ');
 		/*		(?: 
-					([NSns])\s*([0-9]{1,2})[\s??]+([0-9]{1,2})(?:\s+([0-9]{1,2}))?[,.]([0-9]{1,8})\s* 
-					([EWewOo])\s*([0-9]{1,3})[\s??]+([0-9]{1,2})(?:\s+([0-9]{1,2}))?[,.]([0-9]{1,8}) 
+					([NSns])\s*([0-9]{1,2})[\s?]+([0-9]{1,2})(?:\s+([0-9]{1,2}))?[,.]([0-9]{1,8})\s* 
+					([EWewOo])\s*([0-9]{1,3})[\s?]+([0-9]{1,2})(?:\s+([0-9]{1,2}))?[,.]([0-9]{1,8}) 
 					)|(?: 
-					  ([+-NnSs]?[0-9]{1,2})[,.]([0-9]{1,8})(?:(?=\+)|(?=-)|\s+|\s*??\s*)([+-WwEeOo]?[0-9]{1,3})[,.]([0-9]{1,8})\s*[??]? 
+					  ([+-NnSs]?[0-9]{1,2})[,.]([0-9]{1,8})(?:(?=\+)|(?=-)|\s+|\s*?\s*)([+-WwEeOo]?[0-9]{1,3})[,.]([0-9]{1,8})\s*[?]? 
 					)|(?: 
 					   ([0-9]{1,2}[C-HJ-PQ-X])\s*[EeOo]?\s*([0-9]{1,7})\s+[Nn]?\s*([0-9]{1,7}) 
 					)
@@ -203,13 +203,13 @@
 		}
 	}
 				Regex rex=new Regex("(?:" +
-									"([NSns])\\s*([0-9]{1,2})(?:[??\uC2B0]\\s*|\\s+[??\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['???]\\s*|\\s+['???]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['???\"]?\\s*" +
+									"([NSns])\\s*([0-9]{1,2})(?:[?\uC2B0]\\s*|\\s+[?\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['?]\\s*|\\s+['?]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['?\"]?\\s*" +
 									"[,./_;+:-]*\\s*" + // allow N xx xx.xxx / E xxx xx.xxx
-									"([EWewOo])\\s*([0-9]{1,3})(?:[??\uC2B0]\\s*|\\s+[??\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['???]\\s*|\\s+['???]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['???\"]?" +
+									"([EWewOo])\\s*([0-9]{1,3})(?:[?\uC2B0]\\s*|\\s+[?\uC2B0]?\\s*)([0-9]{1,2})(?:(?:['?]\\s*|\\s+['?]?\\s*)([0-9]{1,2}))?(?:[,.]([0-9]{1,8}))?\\s*['?\"]?" +
 									")|(?:" +
-                  "(?:([NnSs])\\s*(?![+-]))?"   +     "([+-]?[0-9]{1,2})[,.]([0-9]{1,8})(?:(?=[+-EeWwOo])|\\s+|\\s*[??\uC2B0]\\s*)" +
+                  "(?:([NnSs])\\s*(?![+-]))?"   +     "([+-]?[0-9]{1,2})[,.]([0-9]{1,8})(?:(?=[+-EeWwOo])|\\s+|\\s*[?\uC2B0]\\s*)" +
                   "[,./_;:]*\\s*" +
-                  "(?:([EeWwOo])\\s*(?![+-]))?"    +     "([+-]?[0-9]{1,3})[,.]([0-9]{1,8})\\s*[??\uC2B0]?" +
+                  "(?:([EeWwOo])\\s*(?![+-]))?"    +     "([+-]?[0-9]{1,3})[,.]([0-9]{1,8})\\s*[?\uC2B0]?" +
 									")|(?:" +
 									"([0-9]{1,2}[C-HJ-PQ-X])\\s*[EeOo]?\\s*([0-9]{1,7})\\s+[Nn]?\\s*([0-9]{1,7})" +
 									")|(?:" +
@@ -559,9 +559,9 @@
 
 	/**
 	 * Returns the string reprenstation of the CWPoint
-	 * Format ist CacheWolf (N 49?? 33.167 E 011?? 21.608), which can be used 
+	 * Format ist CacheWolf (N 49? 33.167 E 011? 21.608), which can be used 
 	 * with parseLatLon
-	 * @return  string like N 49?? 33.167 E 011?? 21.608 
+	 * @return  string like N 49? 33.167 E 011? 21.608 
 	 */	
 	public String toString(){
 		return toString(TransformCoordinates.CW);
@@ -576,12 +576,12 @@
 		if (!isValid()) return MyLocale.getMsg(999,"not set");
 		switch (format) {
 		case TransformCoordinates.DD:	
-			return getNSLetter() + " " + STRreplace.replace(getLatDeg(format),"-","") + "?? "
-						+  getEWLetter() + " " + STRreplace.replace(getLonDeg(format),"-","")+ "??";
-		case TransformCoordinates.DMM:	return getNSLetter() + " " + getLatDeg(format) + "?? " + getLatMin(format) + " "
-						+  getEWLetter() + " " + getLonDeg(format) + "?? " + getLonMin(format);
-		case TransformCoordinates.DMS:	return getNSLetter() + " " + getLatDeg(format) + "?? " + getLatMin(format) + "\' " + getLatSec(format) + "\" " 
-						+  getEWLetter() + " " + getLonDeg(format) + "?? " + getLonMin(format) + "\' " + getLonSec(format) + "\"";
+			return getNSLetter() + " " + STRreplace.replace(getLatDeg(format),"-","") + "? "
+						+  getEWLetter() + " " + STRreplace.replace(getLonDeg(format),"-","")+ "?";
+		case TransformCoordinates.DMM:	return getNSLetter() + " " + getLatDeg(format) + "? " + getLatMin(format) + " "
+						+  getEWLetter() + " " + getLonDeg(format) + "? " + getLonMin(format);
+		case TransformCoordinates.DMS:	return getNSLetter() + " " + getLatDeg(format) + "? " + getLatMin(format) + "\' " + getLatSec(format) + "\" " 
+						+  getEWLetter() + " " + getLonDeg(format) + "? " + getLonMin(format) + "\' " + getLonSec(format) + "\"";
 		case TransformCoordinates.LAT_LON: 	return getLatDeg(DD)+","+getLonDeg(DD);
 		case TransformCoordinates.LON_LAT: 	return getLonDeg(DD)+","+getLatDeg(DD);
 		//case TransformCoordinates.CUSTOM:	return getGermanGkCoordinates();

Modified: trunk/src/CacheWolf/CalcPanel.java
===================================================================
--- trunk/src/CacheWolf/CalcPanel.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/CalcPanel.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -101,9 +101,9 @@
 		mainT = Global.mainTab;
 		cacheDB = profile.cacheDB;
 
-		TopP.addNext(chkDD = new mCheckBox("d.d??"), CellConstants.DONTSTRETCH, CellConstants.WEST);
-		TopP.addNext(chkDMM = new mCheckBox("d??m.m\'"), CellConstants.DONTSTRETCH, CellConstants.WEST);
-		TopP.addNext(chkDMS = new mCheckBox("d??m\'s\""), CellConstants.DONTSTRETCH, CellConstants.WEST);
+		TopP.addNext(chkDD = new mCheckBox("d.d?"), CellConstants.DONTSTRETCH, CellConstants.WEST);
+		TopP.addNext(chkDMM = new mCheckBox("d?m.m\'"), CellConstants.DONTSTRETCH, CellConstants.WEST);
+		TopP.addNext(chkDMS = new mCheckBox("d?m\'s\""), CellConstants.DONTSTRETCH, CellConstants.WEST);
 		TopP.addNext(chkCustom = new mCheckBox(""), CellConstants.DONTSTRETCH, CellConstants.WEST);
 
 		chkDD.setGroup(chkFormat);

Modified: trunk/src/CacheWolf/CoordsScreen.java
===================================================================
--- trunk/src/CacheWolf/CoordsScreen.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/CoordsScreen.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -96,9 +96,9 @@
 	private void InitCoordsScreen() {
 		this.setTitle("");
 		// Radiobuttons for format
-		topLinePanel.addNext(chkDD = new mCheckBox("d.d??"), CellConstants.DONTSTRETCH, CellConstants.WEST);
-		topLinePanel.addNext(chkDMM = new mCheckBox("d??m.m\'"), CellConstants.DONTSTRETCH, CellConstants.WEST);
-		topLinePanel.addNext(chkDMS = new mCheckBox("d??m\'s\""), CellConstants.DONTSTRETCH, CellConstants.WEST);
+		topLinePanel.addNext(chkDD = new mCheckBox("d.d?"), CellConstants.DONTSTRETCH, CellConstants.WEST);
+		topLinePanel.addNext(chkDMM = new mCheckBox("d?m.m\'"), CellConstants.DONTSTRETCH, CellConstants.WEST);
+		topLinePanel.addNext(chkDMS = new mCheckBox("d?m\'s\""), CellConstants.DONTSTRETCH, CellConstants.WEST);
 		// topLinePanel.addNext(chkUTM =new mCheckBox("UTM"),CellConstants.DONTSTRETCH, CellConstants.WEST);
 		topLinePanel.addNext(chkCustom = new mCheckBox(""), CellConstants.DONTSTRETCH, CellConstants.WEST);
 
@@ -269,7 +269,7 @@
 
 	public void setFields(CWPoint coords, int format) {
 		int formatsel = localSystemToformatSel(format);
-		if (formatsel >= formatSelToLocalSystem.length) { // projected point = neither dd, dd?? mm.mm nor dd?? mm' ss.s"
+		if (formatsel >= formatSelToLocalSystem.length) { // projected point = neither dd, dd? mm.mm nor dd? mm' ss.s"
 			if (coords.isValid()) {
 				localCooSystem.setInt(formatsel - formatSelToLocalSystem.length);
 				ProjectedPoint pp = TransformCoordinates.wgs84ToLocalsystem(coords, format);
@@ -359,7 +359,7 @@
 			}
 
 			if (ev.target == btnCopy) {
-				readFields(coordInp); // TODO was anderes als Gau??-Kr??ger unterst??tzen
+				readFields(coordInp); // TODO was anderes als Gau?-Kr?ger unterst?tzen
 				Vm.setClipboardText(coordInp.toString(currFormat));
 			}
 

Modified: trunk/src/CacheWolf/DateFormat.java
===================================================================
--- trunk/src/CacheWolf/DateFormat.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/DateFormat.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -142,7 +142,7 @@
 				return m + 1;
 			}
 		}
-		final String deMonthNames[] = { "Januar", "Februar", "M??rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember" };
+		final String deMonthNames[] = { "Januar", "Februar", "M?rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember" };
 		for (int m = 0; m < 12; m++) {
 			if (deMonthNames[m].startsWith(month)) {
 				return m + 1;

Modified: trunk/src/CacheWolf/FilterScreen.java
===================================================================
--- trunk/src/CacheWolf/FilterScreen.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/FilterScreen.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -341,7 +341,7 @@
 		pnlButtons.addLast(btnAddi=new mButton(MyLocale.getMsg(733,"Add. Wpt"))); 
 		pnlButtons.addLast(btnContainer=new mButton(MyLocale.getMsg(724,"Container")));
 		pnlButtons.addLast(btnCacheAttributes=new mButton(MyLocale.getMsg(738,"Attributes")));
-		// Search ist f??r 0.9n noch deaktiviert
+		// Search ist f?r 0.9n noch deaktiviert
 		//pnlButtons.addLast(btnSearch=new mButton("Search")); btnSearch.modify(Disabled,0);
 		addNext(pnlButtons,HSTRETCH,FILL);
 

Modified: trunk/src/CacheWolf/GeoCodeGui.java
===================================================================
--- trunk/src/CacheWolf/GeoCodeGui.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/GeoCodeGui.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -65,7 +65,7 @@
 		topLinePanel.addLast(streetInp = new mInput(MyLocale.getMsg(7305, "Hauptbahnhof")),CellConstants.STRETCH, CellConstants.FILL | CellConstants.WEST);
 		//streetInp.setPreferredSize(500, 20);
 		topLinePanel.addNext(new mLabel(MyLocale.getMsg(7301, "City")),CellConstants.DONTSTRETCH, CellConstants.WEST);
-		topLinePanel.addNext(cityInp   = new mInput(MyLocale.getMsg(7304, "M??nchen, Deutschland")),CellConstants.HSTRETCH, CellConstants.HFILL | CellConstants.WEST);
+		topLinePanel.addNext(cityInp   = new mInput(MyLocale.getMsg(7304, "M?nchen, Deutschland")),CellConstants.HSTRETCH, CellConstants.HFILL | CellConstants.WEST);
 		topLinePanel.addNext(searchBtn = new mButton(MyLocale.getMsg(7302, "Search")),CellConstants.DONTSTRETCH,CellConstants.WEST);
 		topLinePanel.addLast(searchCancelBtn = new mButton(MyLocale.getMsg(7303, "Cancel")),CellConstants.DONTSTRETCH,CellConstants.WEST);
 		// inpText.toolTip=MyLocale.getMsg(1406,"Enter coordinates in any format or GCxxxxx");

Modified: trunk/src/CacheWolf/InputScreen.java
===================================================================
--- trunk/src/CacheWolf/InputScreen.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/InputScreen.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -99,7 +99,7 @@
 	private mLabel lblBearing = new mLabel(MyLocale.getMsg(1403,"Bearing"));
 	private mButtonPos btnBearing, btnDistanc;
 	private mLabel lblDist = new mLabel("m");
-	private mLabel lblBear = new mLabel("??");
+	private mLabel lblBear = new mLabel("?");
 	private int[] iPointPos = {0,0,0,0,0,0};
 	
 	private boolean allowInvalid = false;
@@ -217,7 +217,7 @@
 		btnNorth = new mButton("N");
 		btnNorth.borderStyle = BDR_NOBORDER;
 		TopP.addNext(btnNorth,CellConstants.STRETCH, (CellConstants.FILL));
-		btnNorthDD = new mButtonPos("DD??");
+		btnNorthDD = new mButtonPos("DD?");
 		btnNorthDD.borderStyle = BDR_NOBORDER;
 		TopP.addNext(btnNorthDD,CellConstants.STRETCH, (CellConstants.FILL));
 		btnNorthMM = new mButtonPos("MM.");
@@ -230,7 +230,7 @@
 		btnWest = new mButton("E");
 		btnWest.borderStyle = BDR_NOBORDER;
 		TopP.addNext(btnWest,CellConstants.STRETCH, (CellConstants.FILL));
-		btnEastDDD = new mButtonPos("DDD??");
+		btnEastDDD = new mButtonPos("DDD?");
 		btnEastDDD.borderStyle = BDR_NOBORDER;
 		TopP.addNext(btnEastDDD,CellConstants.STRETCH, (CellConstants.FILL));
 		btnEastMM = new mButtonPos("MM.");
@@ -351,7 +351,7 @@
 			strBufCoords.append(strBufTemp.toString());
 			CoordsInput = coords;
 		} else {
-			strBufCoords.append("N 91?? 00.000 E 361?? 00.000");
+			strBufCoords.append("N 91? 00.000 E 361? 00.000");
 			CoordsInput = coords;
 		}
 		if(setFocus){
@@ -371,7 +371,7 @@
 			}
 
 		}else{
-		//'??' und '.' filtern
+		//'?' und '.' filtern
 			if(iPosition == POS_NMM-2
 				|| iPosition == POS_EMM-2
 				|| iPosition == POS_ESSS-1
@@ -441,7 +441,7 @@
 
 	/*
 	 * set lat and lon by using coordinates in "CacheWolf" format
-	 * @param coord  String of type N 49?? 33.167 E 011?? 21.608
+	 * @param coord  String of type N 49? 33.167 E 011? 21.608
 	 * @param format only CWPoint.CW is supported
 	 */
 	public CWPoint getCoords(){

Modified: trunk/src/CacheWolf/ParseLatLon.java
===================================================================
--- trunk/src/CacheWolf/ParseLatLon.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/ParseLatLon.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -96,11 +96,11 @@
 			String lonEW=getNext();
 			String lonDeg=getNext();
 			String lonMin=getNext();
-			if (lonDeg.endsWith("??")){
-				lonDeg = lonDeg.substring(0,lonDeg.length()-1); // remove ??
+			if (lonDeg.endsWith("?")){
+				lonDeg = lonDeg.substring(0,lonDeg.length()-1); // remove ?
 			}
-			if (latDeg.endsWith("??")){
-				latDeg = latDeg.substring(0,latDeg.length()-1);// remove ??
+			if (latDeg.endsWith("?")){
+				latDeg = latDeg.substring(0,latDeg.length()-1);// remove ?
 			}
 			lat2 = Convert.parseDouble(latDeg) + Convert.parseDouble(latMin)/60.0;
 			if(latNS.charAt(0)=='S') lat2= -lat2 ;

Modified: trunk/src/CacheWolf/Preferences.java
===================================================================
--- trunk/src/CacheWolf/Preferences.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/Preferences.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -276,7 +276,7 @@
 	 * Max. length for Garmin waypoint names (for etrex which can only accept 6 chars)
 	 */
 	public int garminMaxLen = 0;
-	/** OC true = alle neu Laden false = wenn ???nderungsdatum neuer */
+	/** OC true = alle neu Laden false = wenn ?nderungsdatum neuer */
 	public boolean downloadAllOC = false;
 	public String lastOCSite = OC.OCSites[0][OC.OC_HOSTNAME];
 	/**
@@ -1207,7 +1207,7 @@
 			return; // no select
 		// check selection
 		if (lastProfile.equals(f.newSelectedProfile)) {
-			// aktives Profil kann nicht gel???scht / umbenannt werden;
+			// aktives Profil kann nicht gel?scht / umbenannt werden;
 			new MessageBox(MyLocale.getMsg(321, "Error"), MyLocale.getMsg(ErrorMsgActive, "[Profile active...]"), FormBase.MBOK).execute();
 		} else {
 			boolean err = true;
@@ -1221,7 +1221,7 @@
 				p.dataDir = absoluteBaseDir + f.newSelectedProfile + "/";
 				p.readIndex();
 				String mapsPath = absoluteBaseDir + "maps" + p.getRelativeCustomMapsPath();
-				int answer = new MessageBox("", mapsPath + " " + MyLocale.getMsg(143, "l???schen ?"), FormBase.MBYESNO).execute();
+				int answer = new MessageBox("", mapsPath + " " + MyLocale.getMsg(143, "l?schen ?"), FormBase.MBYESNO).execute();
 				if (answer == 1) {
 					deleteDirectory(new FileBugfix(mapsPath));
 				}

Modified: trunk/src/CacheWolf/Profile.java
===================================================================
--- trunk/src/CacheWolf/Profile.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/Profile.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -93,7 +93,7 @@
 	private boolean showBlacklisted = false;
 	private boolean showSearchResult = false;
 
-	public boolean selectionChanged = true; // ("H??ckchen") used by movingMap to get to knao if it should update the caches in the map
+	public boolean selectionChanged = true; // ("H?ckchen") used by movingMap to get to knao if it should update the caches in the map
 	/**
 	 * True if the profile has been modified and not saved
 	 * The following modifications set this flag: New profile centre, Change of waypoint data
@@ -620,7 +620,7 @@
 		for (int i = cacheDB.size() - 1; i >= 0; i--) {
 			ch = cacheDB.get(i);
 			if (!onlyOfSelected || ch.is_Checked) {
-				if (ch.getPos().isValid()) { // done: && ch.pos.latDec != 0 && ch.pos.lonDec != 0 TO-DO != 0 sollte rausgenommen werden sobald in der Liste vern??nftig mit nicht gesetzten pos umgegangen wird
+				if (ch.getPos().isValid()) { // done: && ch.pos.latDec != 0 && ch.pos.lonDec != 0 TO-DO != 0 sollte rausgenommen werden sobald in der Liste vern?nftig mit nicht gesetzten pos umgegangen wird
 					isAddi = ch.isAddiWpt();
 					// test for plausiblity of coordinates of Additional Waypoints: more then 1000 km away from main Waypoint is unplausible ->
 					// ignore it //

Modified: trunk/src/CacheWolf/SafeXML.java
===================================================================
--- trunk/src/CacheWolf/SafeXML.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/SafeXML.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -42,13 +42,13 @@
 		final String[] mappingArray = new String[] {
 				"&apos;",
 				"'", // Added 20061227 - not a valid HTML entity but used in XML
-				"&quot;", "\"", "&amp;", "&", "&lt;", "<", "&gt;", ">", "&nbsp;", " ", "&iexcl;", "??", "&cent;", "??", "&pound;", "??", "&curren;", "??", "&yen;", "??", "&brvbar;", "??", "&sect;", "??", "&uml;", "??", "&copy;", "??", "&ordf;", "??", "&laquo;",
-				"??", "&not;", "??", "&shy;", "??", "&reg;", "??", "&macr;", "??", "&deg;", "??", "&plusmn;", "??", "&sup2;", "??", "&sup3;", "??", "&acute;", "??", "&micro;", "??", "&para;", "??", "&middot;", "??", "&cedil;", "??", "&sup1;", "??", "&ordm;", "??",
-				"&raquo;", "??", "&frac14;", "??", "&frac12;", "??", "&frac34;", "??", "&iquest;", "??", "&Agrave;", "??", "&Aacute;", "??", "&Acirc;", "??", "&Atilde;", "??", "&Auml;", "??", "&Aring;", "??", "&AElig;", "??", "&Ccedil;", "??", "&Egrave;", "??",
-				"&Eacute;", "??", "&Ecirc;", "??", "&Euml;", "??", "&Igrave;", "??", "&Iacute;", "??", "&Icirc;", "??", "&Iuml;", "??", "&ETH;", "??", "&Ntilde;", "??", "&Ograve;", "??", "&Oacute;", "??", "&Ocirc;", "??", "&Otilde;", "??", "&Ouml;", "??", "&times;",
-				"??", "&Oslash;", "??", "&Ugrave;", "??", "&Uacute;", "??", "&Ucirc;", "??", "&Uuml;", "??", "&Yacute;", "??", "&THORN;", "??", "&szlig;", "??", "&agrave;", "??", "&aacute;", "??", "&acirc;", "??", "&atilde;", "??", "&auml;", "??", "&aring;", "??",
-				"&aelig;", "??", "&ccedil;", "??", "&egrave;", "??", "&eacute;", "??", "&ecirc;", "??", "&euml;", "??", "&igrave;", "??", "&iacute;", "??", "&icirc;", "??", "&iuml;", "??", "&eth;", "??", "&ntilde;", "??", "&ograve;", "??", "&oacute;", "??",
-				"&ocirc;", "??", "&otilde;", "??", "&ouml;", "??", "&divide;", "??", "&oslash;", "??", "&ugrave;", "??", "&uacute;", "??", "&ucirc;", "??", "&uuml;", "??", "&yacute;", "??", "&thorn;", "??", "&yuml;", "??", "&ndash;", "???" };
+				"&quot;", "\"", "&amp;", "&", "&lt;", "<", "&gt;", ">", "&nbsp;", " ", "&iexcl;", "?", "&cent;", "?", "&pound;", "?", "&curren;", "?", "&yen;", "?", "&brvbar;", "?", "&sect;", "?", "&uml;", "?", "&copy;", "?", "&ordf;", "?", "&laquo;",
+				"?", "&not;", "?", "&shy;", "?", "&reg;", "?", "&macr;", "?", "&deg;", "?", "&plusmn;", "?", "&sup2;", "?", "&sup3;", "?", "&acute;", "?", "&micro;", "?", "&para;", "?", "&middot;", "?", "&cedil;", "?", "&sup1;", "?", "&ordm;", "?",
+				"&raquo;", "?", "&frac14;", "?", "&frac12;", "?", "&frac34;", "?", "&iquest;", "?", "&Agrave;", "?", "&Aacute;", "?", "&Acirc;", "?", "&Atilde;", "?", "&Auml;", "?", "&Aring;", "?", "&AElig;", "?", "&Ccedil;", "?", "&Egrave;", "?",
+				"&Eacute;", "?", "&Ecirc;", "?", "&Euml;", "?", "&Igrave;", "?", "&Iacute;", "?", "&Icirc;", "?", "&Iuml;", "?", "&ETH;", "?", "&Ntilde;", "?", "&Ograve;", "?", "&Oacute;", "?", "&Ocirc;", "?", "&Otilde;", "?", "&Ouml;", "?", "&times;",
+				"?", "&Oslash;", "?", "&Ugrave;", "?", "&Uacute;", "?", "&Ucirc;", "?", "&Uuml;", "?", "&Yacute;", "?", "&THORN;", "?", "&szlig;", "?", "&agrave;", "?", "&aacute;", "?", "&acirc;", "?", "&atilde;", "?", "&auml;", "?", "&aring;", "?",
+				"&aelig;", "?", "&ccedil;", "?", "&egrave;", "?", "&eacute;", "?", "&ecirc;", "?", "&euml;", "?", "&igrave;", "?", "&iacute;", "?", "&icirc;", "?", "&iuml;", "?", "&eth;", "?", "&ntilde;", "?", "&ograve;", "?", "&oacute;", "?",
+				"&ocirc;", "?", "&otilde;", "?", "&ouml;", "?", "&divide;", "?", "&oslash;", "?", "&ugrave;", "?", "&uacute;", "?", "&ucirc;", "?", "&uuml;", "?", "&yacute;", "?", "&thorn;", "?", "&yuml;", "?", "&ndash;", "?" };
 		for (int i = 0; i < mappingArray.length; i = i + 2) {
 			iso2htmlMappings.put(mappingArray[i], mappingArray[i + 1]);
 		}

Modified: trunk/src/CacheWolf/Test.java
===================================================================
--- trunk/src/CacheWolf/Test.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/Test.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -61,16 +61,16 @@
 		// 1.000 CWPoint via constructor
 		start = new Time();
 		for (i=0; i<100; i++){
-			new CWPoint("N 51?? 27.635 E 009?? 37.621", TransformCoordinates.CW);
+			new CWPoint("N 51? 27.635 E 009? 37.621", TransformCoordinates.CW);
 		}
 		end = new Time();
-		printResult("CWPoint(\"N 51?? 27.635 E 009?? 37.621\", CWPoint.CW)", start, end, i);
+		printResult("CWPoint(\"N 51? 27.635 E 009? 37.621\", CWPoint.CW)", start, end, i);
 
 		// 1.000 CWPoint via constructor ohne Lat/Lon
 		start = new Time();
 		for (i=0; i<100; i++){
 			CWPoint cwP = new CWPoint();
-			cwP.set("N 51?? 27.635 E 009?? 37.621", TransformCoordinates.CW);
+			cwP.set("N 51? 27.635 E 009? 37.621", TransformCoordinates.CW);
 			
 		}
 		end = new Time();
@@ -92,10 +92,10 @@
 		start = new Time();
 		CWPoint cwSet = new CWPoint();
 		for (i=0; i<100; i++){
-			cwSet.set("N 51?? 27.635 E 009?? 37.621", TransformCoordinates.CW);
+			cwSet.set("N 51? 27.635 E 009? 37.621", TransformCoordinates.CW);
 		}
 		end = new Time();
-		printResult("cwSet.set(\"N 51?? 27.635 E 009?? 37.621\", CWPoint.CW) CWPoint set", start, end, i);
+		printResult("cwSet.set(\"N 51? 27.635 E 009? 37.621\", CWPoint.CW) CWPoint set", start, end, i);
 
 		// 1.000 filewrite
 		String fileName = new String("test.tmp");
@@ -135,35 +135,35 @@
 	}
 	
 	void testRegex(){
-		testPassedRegex("S1 2.3W4 5.6","S 01?? 02.300 W 004?? 05.600", TransformCoordinates.CW); 
-		testPassedRegex("N1 12.123 E7 34.345","N 01?? 12.123 E 007?? 34.345", TransformCoordinates.CW);
-		testPassedRegex("S1 12.123 E7 34.345","S 01?? 12.123 E 007?? 34.345", TransformCoordinates.CW); 
-		testPassedRegex("N1 12.123 W7 34.345","N 01?? 12.123 W 007?? 34.345", TransformCoordinates.CW); 
-		testPassedRegex("S1 12.123 W7 34.345","S 01?? 12.123 W 007?? 34.345", TransformCoordinates.CW); 
-		testPassedRegex("N1 12.123 E7 34,345","N 01?? 12.123 E 007?? 34.345", TransformCoordinates.CW); 
-		testPassedRegex("n1 1.0 E12 34.3456363","N 01?? 01.000 E 012?? 34.346", TransformCoordinates.CW); //Kleinbuchstaben erlaubt 
-		testPassedRegex("S99 60.2345 W180 65.34534","S 90?? 00.000 W 180?? 00.000", TransformCoordinates.CW); 
-		testPassedRegex("N1 12.1234 O12 34.3456","N 01?? 12.123 E 012?? 34.346", TransformCoordinates.CW); 
-		testPassedRegex("N1 12.1234E12 34.3456","N 01?? 12.123 E 012?? 34.346", TransformCoordinates.CW);
-		testPassedRegex("asdfka N1?? 12.1234 E12??34.345 sdfskd ","N 01?? 12.123 E 012?? 34.345", TransformCoordinates.CW);
-		testPassedRegex("N1?? 12.1234 E12??34.345","N 01?? 12.123 E 012?? 34.345", TransformCoordinates.CW); 
-		testPassedRegex("N1?? 12.1234E12??34.345","N 01?? 12.123 E 012?? 34.345", TransformCoordinates.CW); 
-		testPassedRegex(" S17?? 23 13.12345 w 127?? 34 34.567 ","S 17?? 23' 13.1\" W 127?? 34' 34.6\"", TransformCoordinates.DMS); // Deg Min Sek
-		testPassedRegex(" S17?? 23 ' 13.12345    \" w 127?? 34'34.567\" ","S 17?? 23' 13.1\" W 127?? 34' 34.6\"", TransformCoordinates.DMS); // Deg Min Sek
-		testPassedRegex("12.3456 23.4567","N 12.34560?? E 023.45670??", TransformCoordinates.DD); 
-		testPassedRegex("12.3456?? 23.4567??","N 12.34560?? E 023.45670??", TransformCoordinates.DD); 
-		testPassedRegex("12.3456?? 23.4567 ??","N 12.34560?? E 023.45670??", TransformCoordinates.DD); 
-		testPassedRegex("12.3456??23.4567 ??","N 12.34560?? E 023.45670??", TransformCoordinates.DD); 
-		testPassedRegex("12.3456+23.4567 ??","N 12.34560?? E 023.45670??", TransformCoordinates.DD); 
-		testPassedRegex("N  12.3456   W  23.4567 ??","N 12.34560?? W 023.45670??", TransformCoordinates.DD); 
-		testPassedRegex("12.3457-23.4567 ??","N 12.34570?? W 023.45670??", TransformCoordinates.DD); 
-		testPassedRegex("-12.3456 23.4567","S 12.34560?? E 023.45670??", TransformCoordinates.DD); 
-		testPassedRegex("12.3456 -23.4567","N 12.34560?? W 023.45670??", TransformCoordinates.DD); 
-		testPassedRegex("-12.345668 -23,456734","S 12.34567?? W 023.45673??", TransformCoordinates.DD); 
-		testPassedRegex("12.3456-23.4567","N 12.34560?? W 023.45670??", TransformCoordinates.DD); 
-		testPassedRegex("12.3456+23.4567","N 12.34560?? E 023.45670??", TransformCoordinates.DD); 
-		testPassedRegex("91.2345 180.23456","N 90.00000?? E 180.00000??", TransformCoordinates.DD); 
-		testPassedRegex("91.2345 180.23456","N 90.00000?? E 180.00000??", TransformCoordinates.DD); 
+		testPassedRegex("S1 2.3W4 5.6","S 01? 02.300 W 004? 05.600", TransformCoordinates.CW); 
+		testPassedRegex("N1 12.123 E7 34.345","N 01? 12.123 E 007? 34.345", TransformCoordinates.CW);
+		testPassedRegex("S1 12.123 E7 34.345","S 01? 12.123 E 007? 34.345", TransformCoordinates.CW); 
+		testPassedRegex("N1 12.123 W7 34.345","N 01? 12.123 W 007? 34.345", TransformCoordinates.CW); 
+		testPassedRegex("S1 12.123 W7 34.345","S 01? 12.123 W 007? 34.345", TransformCoordinates.CW); 
+		testPassedRegex("N1 12.123 E7 34,345","N 01? 12.123 E 007? 34.345", TransformCoordinates.CW); 
+		testPassedRegex("n1 1.0 E12 34.3456363","N 01? 01.000 E 012? 34.346", TransformCoordinates.CW); //Kleinbuchstaben erlaubt 
+		testPassedRegex("S99 60.2345 W180 65.34534","S 90? 00.000 W 180? 00.000", TransformCoordinates.CW); 
+		testPassedRegex("N1 12.1234 O12 34.3456","N 01? 12.123 E 012? 34.346", TransformCoordinates.CW); 
+		testPassedRegex("N1 12.1234E12 34.3456","N 01? 12.123 E 012? 34.346", TransformCoordinates.CW);
+		testPassedRegex("asdfka N1? 12.1234 E12?34.345 sdfskd ","N 01? 12.123 E 012? 34.345", TransformCoordinates.CW);
+		testPassedRegex("N1? 12.1234 E12?34.345","N 01? 12.123 E 012? 34.345", TransformCoordinates.CW); 
+		testPassedRegex("N1? 12.1234E12?34.345","N 01? 12.123 E 012? 34.345", TransformCoordinates.CW); 
+		testPassedRegex(" S17? 23 13.12345 w 127? 34 34.567 ","S 17? 23' 13.1\" W 127? 34' 34.6\"", TransformCoordinates.DMS); // Deg Min Sek
+		testPassedRegex(" S17? 23 ' 13.12345    \" w 127? 34'34.567\" ","S 17? 23' 13.1\" W 127? 34' 34.6\"", TransformCoordinates.DMS); // Deg Min Sek
+		testPassedRegex("12.3456 23.4567","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("12.3456? 23.4567?","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("12.3456? 23.4567 ?","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("12.3456?23.4567 ?","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("12.3456+23.4567 ?","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("N  12.3456   W  23.4567 ?","N 12.34560? W 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("12.3457-23.4567 ?","N 12.34570? W 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("-12.3456 23.4567","S 12.34560? E 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("12.3456 -23.4567","N 12.34560? W 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("-12.345668 -23,456734","S 12.34567? W 023.45673?", TransformCoordinates.DD); 
+		testPassedRegex("12.3456-23.4567","N 12.34560? W 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("12.3456+23.4567","N 12.34560? E 023.45670?", TransformCoordinates.DD); 
+		testPassedRegex("91.2345 180.23456","N 90.00000? E 180.00000?", TransformCoordinates.DD); 
+		testPassedRegex("91.2345 180.23456","N 90.00000? E 180.00000?", TransformCoordinates.DD); 
 		testPassedRegex("32U 475592 5584875","32U E 475592 N 5584875", TransformCoordinates.UTM); 
 		testPassedRegex("14X 1 2","13N E 668186 N 2", TransformCoordinates.UTM); 
 	}

Modified: trunk/src/CacheWolf/Version.java
===================================================================
--- trunk/src/CacheWolf/Version.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/Version.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -61,8 +61,8 @@
 	}
 
 	public static String getReleaseDetailed() {
-		// habe die SVN-Nummer doch aus der Anzeige erstmal wieder herausgenommen, weil es in einem final Release doch recht seltsam auss???he.
-		// Sinnvoll w???re daher vielleicht, eine Methode getReleaseDatail, die die SVN-Versionnummer mit angibt und z.B. im "???ber"-Dialog angezeigt werden k???nnte.
+		// habe die SVN-Nummer doch aus der Anzeige erstmal wieder herausgenommen, weil es in einem final Release doch recht seltsam auss?he.
+		// Sinnvoll w?re daher vielleicht, eine Methode getReleaseDatail, die die SVN-Versionnummer mit angibt und z.B. im "?ber"-Dialog angezeigt werden k?nnte.
 		return getRelease() + " " + VERSION_TYPES(VERSION_TYPE);
 	}
 

Modified: trunk/src/CacheWolf/exp/GpxExportNg.java
===================================================================
--- trunk/src/CacheWolf/exp/GpxExportNg.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/exp/GpxExportNg.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -742,7 +742,7 @@
 		StringBuffer ret = new StringBuffer();
 		Attribute attrib;
 		for (int i = 0; i < ch.getCacheDetails(true).attributes.count(); i++) {
-			// <groundspeak:attribute id="X" inc="Y">text f??r X</groundspeak:attribute>
+			// <groundspeak:attribute id="X" inc="Y">text f?r X</groundspeak:attribute>
 			attrib = ch.getCacheDetails(true).attributes.getAttribute(i);
 			if (attrib.getGCId().length() > 0) {
 				ret.append("        <groundspeak:attribute id=\"").//
@@ -906,7 +906,7 @@
 		if (pos.isValid()) {
 			return pos.toString();
 		} else {
-			return "N/S  __ ?? __ . ___ W/E ___ ?? __ . ___";
+			return "N/S  __ ? __ . ___ W/E ___ ? __ . ___";
 		}
 	}
 

Modified: trunk/src/CacheWolf/exp/KMLExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/KMLExporter.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/exp/KMLExporter.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -196,7 +196,7 @@
 		// fill structure with data from cacheDB
 		for (int i = 0; i < cacheDB.size(); i++) {
 			ch = cacheDB.get(i);
-			// TODO Das Argument nach STring zu casten gef???llt mir nicht ganz...
+			// TODO Das Argument nach STring zu casten gef?llt mir nicht ganz...
 			if (ch.isVisible() && !ch.isAddiWpt()) {
 				if (ch.is_found()) {
 					tmp = (Vector) outCacheDB[FOUND].get(String.valueOf(ch.getType()));

Modified: trunk/src/CacheWolf/exp/MSARCSVExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/MSARCSVExporter.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/exp/MSARCSVExporter.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -34,7 +34,7 @@
 /**
  * Class to export the cache database (index) to an CSV File which can bei easy
  * importet bei MS AutoRoute (testet with AR 2001 German) Format of the file:
- * Name;Breitengrad;L??ngengrad;Typ1;Typ2;Waypoint;Datum;Hyperlink
+ * Name;Breitengrad;L?ngengrad;Typ1;Typ2;Waypoint;Datum;Hyperlink
  *
  */
 public class MSARCSVExporter extends Exporter {

Modified: trunk/src/CacheWolf/exp/TomTomExporter.java
===================================================================
--- trunk/src/CacheWolf/exp/TomTomExporter.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/exp/TomTomExporter.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -260,9 +260,9 @@
 			outp.writeBytes(" by ");
 			outp.writeBytes(ch.getCacheOwner());
 			// Wenn Leerzeichen am Ende von Cache.Owner entfernt:
-			// Hier wieder einf??gen
+			// Hier wieder einf?gen
 			// und data = holder.wayPoint.length()+holder.CacheName.length()+.....
-			// wider um 1 erh??hen
+			// wider um 1 erh?hen
 			outp.writeBytes("- ");
 			outp.writeBytes(String.valueOf(ch.getHard()));
 			outp.writeBytes("/");

Modified: trunk/src/CacheWolf/imp/GPXImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/GPXImporter.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/imp/GPXImporter.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -643,14 +643,14 @@
 		int descIndex = 0;
 		while (imgRegexUrl.searchFrom(html, descIndex)) {
 			descIndex = imgRegexUrl.matchedTo();
-			String fetchUrl = imgRegexUrl.stringMatched(2); // URL in Anf??hrungszeichen in (2)
+			String fetchUrl = imgRegexUrl.stringMatched(2); // URL in Anf?hrungszeichen in (2)
 			if (fetchUrl == null) {
 				fetchUrl = imgRegexUrl.stringMatched(3);
 			} // falls ohne in (3)
 			if (fetchUrl == null) {
 				continue;
 			} // schlechtes html
-				// fetchUrl ist auf jeden Fall ohne Anf??hrungszeichen
+				// fetchUrl ist auf jeden Fall ohne Anf?hrungszeichen
 			if (fetchUrl.startsWith("resource"))
 				continue; //
 			if (fetchUrl.startsWith("images")) // z.B. Flaggen

Modified: trunk/src/CacheWolf/imp/OCXMLImporter.java
===================================================================
--- trunk/src/CacheWolf/imp/OCXMLImporter.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/imp/OCXMLImporter.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -452,7 +452,7 @@
 		if (name.equals("status")) {
 			// meaning of OC status :
 			// 1=Kann gesucht werden ;
-			// 2=Momentan nicht verf??gbar ;
+			// 2=Momentan nicht verf?gbar ;
 			// 3=Archiviert ;
 			// 4= ;
 			// 5= ;
@@ -468,7 +468,7 @@
 						holder = null;
 						numCacheImported--;
 					} else {
-						// Umsetzung wie in gpx f??r Status 6
+						// Umsetzung wie in gpx f?r Status 6
 						if (atts.getValue("id").equals("6")) {
 							holder.setArchived(false);
 						} else {
@@ -728,7 +728,7 @@
 					// if (holder.is_new())
 					cacheDB.removeElementAt(cacheDB.getIndex(holder));
 					DBindexID.remove(holder.GetCacheID());
-					// und Dateien l??schen?
+					// und Dateien l?schen?
 					final File tmpFile = new File(profile.dataDir + holder.getWayPoint() + ".xml");
 					tmpFile.delete();
 					// todo: was ist mit den schon heruntergeladenen Bildern?

Modified: trunk/src/CacheWolf/imp/OCXMLImporterScreen.java
===================================================================
--- trunk/src/CacheWolf/imp/OCXMLImporterScreen.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/imp/OCXMLImporterScreen.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -88,7 +88,7 @@
 
 	public OCXMLImporterScreen(String title, int options) {
 		super();
-		pref = Global.getPref(); // myPreferences sollte sp??ter auch diese Einstellungen speichern
+		pref = Global.getPref(); // myPreferences sollte sp?ter auch diese Einstellungen speichern
 
 		isGC = ((options & ISGC) > 0);
 
@@ -227,7 +227,7 @@
 				this.close(FormBase.IDCANCEL);
 			}
 			if (ev.target == okB) {
-				// distOC wird hier noch nicht in Pref eingetragen, damit noch gepr??ft werden kann, ob es gr????er oder kleiner ist als vorher
+				// distOC wird hier noch nicht in Pref eingetragen, damit noch gepr?ft werden kann, ob es gr??er oder kleiner ist als vorher
 				if (missingCheckBox != null)
 					pref.downloadAllOC = missingCheckBox.state;
 				if (imagesCheckBox != null)

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -532,7 +532,7 @@
 				ch.initStates(false);
 		}
 
-		// halbe Seitenl??nge eines Quadrats ums Zentrum in km
+		// halbe Seitenl?nge eines Quadrats ums Zentrum in km
 		double halfSideLength = maxDistance;
 		if (pref.metricSystem == Metrics.IMPERIAL) {
 			halfSideLength = Metrics.convertUnit(maxDistance, Metrics.MILES, Metrics.KILOMETER);
@@ -1342,7 +1342,7 @@
 		}
 		// switch to english now goes into gc account Display Preferences
 		// (is permanent, must be reset)
-		String languages[] = { "English", "Deutsch", "Fran&#231;ais", "Portugu&#234;s", "??e??tina", "Svenska", "Nederlands", "Catal&#224;", "Polski", "Eesti", "Norsk, Bokm&#229;l", "?????????", "Espa&#241;ol", "Magyar" };
+		String languages[] = { "English", "Deutsch", "Fran&#231;ais", "Portugu&#234;s", "Ce?tina", "Svenska", "Nederlands", "Catal&#224;", "Polski", "Eesti", "Norsk, Bokm&#229;l", "???", "Espa&#241;ol", "Magyar" };
 		for (int i = 0; i < languages.length; i++) {
 			if (oldLanguage.equals(languages[i])) {
 				pref.oldLanguageCtl = url + "?__EVENTTARGET=" + UrlFetcher.encodeURL("ctl00$uxLocaleList$uxLocaleList$ctl" + MyLocale.formatLong(i, "00") + "$uxLocaleItem", false);
@@ -1541,7 +1541,7 @@
 				ch.initStates(false);
 		}
 
-		// halbe Seitenl??nge eines Quadrats ums Zentrum in km
+		// halbe Seitenl?nge eines Quadrats ums Zentrum in km
 		double halfSideLength = maxDistance;
 		if (pref.metricSystem == Metrics.IMPERIAL) {
 			halfSideLength = Metrics.convertUnit(maxDistance, Metrics.MILES, Metrics.KILOMETER);
@@ -1909,8 +1909,8 @@
 			if (ret.indexOf("ere") > -1)
 				return distanceAndDirection; // zur Zeit " Here -1"
 			// Versuch den DistanceCodeKey automatisch zu bestimmen
-			// da dieser von gc mal wieder ge??ndert wurde.
-			// todo Ben??tigt ev noch weitere Anpassungen: | am Anfang, and calc of keylength
+			// da dieser von gc mal wieder ge?ndert wurde.
+			// todo Ben?tigt ev noch weitere Anpassungen: | am Anfang, and calc of keylength
 			// String thereitis="|0.34 km|102.698";
 			// String page =
 			// fetchText("http://www.geocaching.com/seek/nearest.aspx?lat=48.48973&lng=009.26313&dist=2&f=1",false);
@@ -1942,7 +1942,7 @@
 			final String coded = ewe.net.URL.decodeURL(RexPropDistanceCode.stringMatched(1));
 			final String newkey = decodeXor(coded, thereitis);
 			final int keylength = 13;
-			// wenn nicht 13 dann newkey auf wiederholung pr??fen
+			// wenn nicht 13 dann newkey auf wiederholung pr?fen
 			DistanceCodeKey = newkey.substring(0, keylength);
 			ret = decodeXor(stmp, DistanceCodeKey).replace('|', ' ');
 			pref.log("Automatic key: " + DistanceCodeKey + " result: " + ret + Preferences.NEWLINE);

Modified: trunk/src/CacheWolf/navi/GkProjection.java
===================================================================
--- trunk/src/CacheWolf/navi/GkProjection.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/navi/GkProjection.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -60,7 +60,7 @@
 	}
 
 	/**
-	 * Project latlon to Gau??-Kr??ger-Coordinates on ellipsoid
+	 * Project latlon to Gau?-Kr?ger-Coordinates on ellipsoid
 	 * @param latlon
 	 * @param ellipsoid
 	 * @return
@@ -89,10 +89,10 @@
 	}
 
 	/**
-	 * Converts Gau??-Kr??ger-coordinates into lat/lon on the respective ellipsoid
+	 * Converts Gau?-Kr?ger-coordinates into lat/lon on the respective ellipsoid
 	 * @param gkp
 	 * @param ellipsoid
-	 * @param stripewidth width in degree of the stripe of the Gau??-Kr??ger-System (3 degreee usually used in Gau??-Kr??ger, 6 degree usually in UTM)
+	 * @param stripewidth width in degree of the stripe of the Gau?-Kr?ger-System (3 degreee usually used in Gau?-Kr?ger, 6 degree usually in UTM)
 	 * @return
 	 */
 	public CWPoint unproject(ProjectedPoint gkp) {
@@ -100,11 +100,11 @@
 		return unproject(gkp, L0, ellip, scale);
 	}
 	/**
-	 * Converts Gau??-Kr??ger-coordinates into lat/lon on the respective ellipsoid
+	 * Converts Gau?-Kr?ger-coordinates into lat/lon on the respective ellipsoid
 	 * @param gkp
 	 * @param stripelon: Lon of the center of the stripe
 	 * @param ellipsoid
-	 * @param stripewidth width in degree of the stripe of the Gau??-Kr??ger-System (3 degreee usually used in Gau??-Kr??ger, 6 degree usually in UTM)
+	 * @param stripewidth width in degree of the stripe of the Gau?-Kr?ger-System (3 degreee usually used in Gau?-Kr?ger, 6 degree usually in UTM)
 	 * @return
 	 */
 	public static CWPoint unproject(ProjectedPoint gkp, double stripelon, Ellipsoid ellipsoid, double scale) {

Modified: trunk/src/CacheWolf/navi/GotoPanel.java
===================================================================
--- trunk/src/CacheWolf/navi/GotoPanel.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/navi/GotoPanel.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -141,12 +141,12 @@
 		// Format selection for coords
 		// context menu
 		mnuContextFormt = new Menu();
-		currFormatSel = 1; // default to d?? m.m
-		mnuContextFormt.addItem(miCooformat[0] = new MenuItem("d.d??"));
+		currFormatSel = 1; // default to d? m.m
+		mnuContextFormt.addItem(miCooformat[0] = new MenuItem("d.d?"));
 		miCooformat[0].modifiers &= ~MenuItem.Checked;
-		mnuContextFormt.addItem(miCooformat[1] = new MenuItem("d??m.m\'"));
+		mnuContextFormt.addItem(miCooformat[1] = new MenuItem("d?m.m\'"));
 		miCooformat[1].modifiers |= MenuItem.Checked; // default
-		mnuContextFormt.addItem(miCooformat[2] = new MenuItem("d??m\'s\""));
+		mnuContextFormt.addItem(miCooformat[2] = new MenuItem("d?m\'s\""));
 		miCooformat[2].modifiers &= ~MenuItem.Checked;
 		mnuContextFormt.addItems(TransformCoordinates.getProjectedSystemNames());
 

Modified: trunk/src/CacheWolf/navi/MapInfoObject.java
===================================================================
--- trunk/src/CacheWolf/navi/MapInfoObject.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/navi/MapInfoObject.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -233,7 +233,7 @@
 				throw (new IOException(MyLocale.getMsg(4301, "Lat/Lon out of range while reading ") + mapsPath + thisMap + ".wfl"));
 			}
 		} catch (final NullPointerException e) { // in.readline liefert null
-													// zur??ck, wenn keine Daten
+													// zur?ck, wenn keine Daten
 													// mehr vorhanden sind
 			throw (new IOException(MyLocale.getMsg(4303, "not enough lines in file ") + mapsPath + thisMap + ".wfl"));
 		}
@@ -338,7 +338,7 @@
 			c.y -= 1000;
 			rotationRad = (float) (center.getBearing(calcLatLon(c)) / 180 * Math.PI);
 			// note: the direction of nord can vary across the image.
-			// In Gau??-Kr??ger Projection it does change about 1 degree per 10km!
+			// In Gau?-Kr?ger Projection it does change about 1 degree per 10km!
 			// (float)java.lang.Math.atan(rotationX2y);
 			if (rotationRad > Math.PI)
 				rotationRad -= 2 * Math.PI;
@@ -499,7 +499,7 @@
 	}
 
 	/**
-	 * If you are using Gau??-Kr??ger, put lat = northing, lon = easting
+	 * If you are using Gau?-Kr?ger, put lat = northing, lon = easting
 	 * 
 	 * @param lat
 	 * @param lon

Modified: trunk/src/CacheWolf/navi/MapLoader.java
===================================================================
--- trunk/src/CacheWolf/navi/MapLoader.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/navi/MapLoader.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -886,7 +886,7 @@
 	/**
 	 * This method gives the number in the array of coordinateReferenceSystems, which should be used
 	 * a) if only one is in the array 0 is returned
-	 * b) if there are more, find out which one matches the correct zone (e.g. Gau???-K???ger stripe)
+	 * b) if there are more, find out which one matches the correct zone (e.g. Gau?-K?ger stripe)
 	 * Call this routine with center of the area (use Area.getcenter())
 	 * 
 	 * @param p
@@ -897,7 +897,7 @@
 		int crsindex = 0;
 		if (coordinateReferenceSystem.length > 1) {
 			int ls = TransformCoordinates.getLocalProjectionSystem(coordinateReferenceSystem[0]);
-			ProjectedPoint gkbl = TransformCoordinates.wgs84ToLocalsystem(p, ls); // TODO: think / read about what to do if bottom left and top right are not in the same Gau???-Kr???ger stripe?
+			ProjectedPoint gkbl = TransformCoordinates.wgs84ToLocalsystem(p, ls); // TODO: think / read about what to do if bottom left and top right are not in the same Gau?-Kr?ger stripe?
 			int wantepsg = gkbl.getEpsgCode();
 			for (crsindex = 0; crsindex < coordinateReferenceSystem.length; crsindex++) {
 				if (coordinateReferenceSystem[crsindex] == wantepsg)
@@ -913,7 +913,7 @@
 
 			}
 			if (crsindex < 0)
-				throw new IllegalArgumentException(MyLocale.getMsg(4829, "getUrlForBoundingBox: Point:") + " " + gkbl.toString() + MyLocale.getMsg(4830, "no matching Gau???-Kr???ger-Stripe in the EPSG-code list in the .wms"));
+				throw new IllegalArgumentException(MyLocale.getMsg(4829, "getUrlForBoundingBox: Point:") + " " + gkbl.toString() + MyLocale.getMsg(4830, "no matching Gau?-Kr?ger-Stripe in the EPSG-code list in the .wms"));
 		}
 		return crsindex;
 	}

Modified: trunk/src/CacheWolf/navi/MapLoaderGui.java
===================================================================
--- trunk/src/CacheWolf/navi/MapLoaderGui.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/navi/MapLoaderGui.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -275,7 +275,7 @@
 		String ret = Global.getPref().getMapDownloadSavePath(mapLoader.currentOnlineMapService.getMapType());
 		Global.getPref().saveCustomMapsPath(getLeadingPath(ret, Global.getPref().getMapLoadPath()));
 		// Global.getPref().saveCustomMapsPath(ret);
-		// eigentlich d??rft das erst gespeichert werden, wenn erfolgreich heruntergeladen wurde
+		// eigentlich d?rft das erst gespeichert werden, wenn erfolgreich heruntergeladen wurde
 		return ret;
 	}
 
@@ -355,7 +355,7 @@
 			for (int i = cacheDB.size() - 1; i >= 0; i--) {
 				ch = cacheDB.get(i);
 				if (!this.onlySelected || ch.is_Checked) {
-					if (ch.getPos().isValid() && ch.getPos().latDec != 0 && ch.getPos().lonDec != 0) { // TODO != 0 sollte verschwinden, sobald das handling von nicht gesetzten Koos ??berall korrekt ist
+					if (ch.getPos().isValid() && ch.getPos().latDec != 0 && ch.getPos().lonDec != 0) { // TODO != 0 sollte verschwinden, sobald das handling von nicht gesetzten Koos ?berall korrekt ist
 						numdownloaded++;
 						progressBox.setInfo(MyLocale.getMsg(1820, "Downloading map '") + mapLoader.currentOnlineMapService.getName() + "'\n" + numdownloaded + " / " + numCaches + MyLocale.getMsg(1821, "\n for cache:\n") + ch.getCacheName());
 						try {

Modified: trunk/src/CacheWolf/navi/MapsList.java
===================================================================
--- trunk/src/CacheWolf/navi/MapsList.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/navi/MapsList.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -91,7 +91,7 @@
 						tempMIO = new MapListEntry(mapsPath+"/", rawFileName);
 					else tempMIO = new MapListEntry(mapsPath+"/"+dirs.get(j)+"/", rawFileName);
 					if (tempMIO.sortEntryBBox != null) add(tempMIO);
-				}catch(Exception ex){ // TODO exception ist, glaub ich evtl ??berfl??ssig
+				}catch(Exception ex){ // TODO exception ist, glaub ich evtl ?berfl?ssig
 					if (f == null) (f=new MessageBox(MyLocale.getMsg(144, "Warning"), MyLocale.getMsg(4700, "Ignoring error while \n reading calibration file \n")+ex.toString(), FormBase.OKB)).exec();
 				} /* catch(ArithmeticException ex){ // affine contain not allowed values
 					if (f == null) (f=new MessageBox("Warning", "Ignoring error while \n reading calibration file \n"+ex.toString(), MessageBox.OKB)).exec();
@@ -116,9 +116,9 @@
 		add(tempMIO);
 	}
 
-	/* diese Routine wird gegenw??rtig f??r 3 ZWecke verwendet:
-	 * a) normal - keep given resolution --> L??sung: ??bergebene scale nutzen f??r screen
-	 * b) highest res: Ziel: Karte mit h??chster Aufl??sung, die im screen ist und m??glichst nah an lat/lon -> ich muss aufl??sung noch in Dateinamen schreiben
+	/* diese Routine wird gegenw?rtig f?r 3 ZWecke verwendet:
+	 * a) normal - keep given resolution --> L?sung: ?bergebene scale nutzen f?r screen
+	 * b) highest res: Ziel: Karte mit h?chster Aufl?sung, die im screen ist und m?glichst nah an lat/lon -> ich muss aufl?sung noch in Dateinamen schreiben
 	 * c) gegenteil von b)
 	 */
 	/**

Modified: trunk/src/CacheWolf/navi/MovingMap.java
===================================================================
--- trunk/src/CacheWolf/navi/MovingMap.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/navi/MovingMap.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -1762,7 +1762,7 @@
 								// evtl. Kartenwechsel PosCircle on Screen
 								// ist. So wie es jetzt ist, kann 2mal der
 								// gleiche Aufruf zum laden
-								// unterschiedlicher Karten f???hren, wenn
+								// unterschiedlicher Karten f?hren, wenn
 								// vorher PosCircle nicht auf dem
 			// SChirm war, nach dem ersten Laden aber schon.
 			cll = new CWPoint(ll);
@@ -1823,7 +1823,7 @@
 	public void loadMapForAllCaches() {
 		final Area sur = Global.getProfile().getSourroundingArea(true);
 		if (sur == null) {
-			(new MessageBox(MyLocale.getMsg(4207, "Error"), MyLocale.getMsg(4215, "Keine  Caches mit H???ckchen ausgew???hlt"), FormBase.OKB)).execute();
+			(new MessageBox(MyLocale.getMsg(4207, "Error"), MyLocale.getMsg(4215, "Keine  Caches mit H?ckchen ausgew?hlt"), FormBase.OKB)).execute();
 			return;
 		}
 		MapInfoObject newmap = maps.getMapForArea(sur.topleft, sur.bottomright);

Modified: trunk/src/CacheWolf/navi/Navigate.java
===================================================================
--- trunk/src/CacheWolf/navi/Navigate.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/navi/Navigate.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -244,7 +244,7 @@
 				SkyOrientation.getSunAzimut(gpsPos.Time, gpsPos.Date, gpsPos.latDec, gpsPos.lonDec);
 				double jd = SkyOrientation.utc2juliandate(gpsPos.Time, gpsPos.Date);
 				skyOrientationDir = SkyOrientation.getLuminaryDir(luminary, jd, gpsPos);
-			} catch (NumberFormatException e) { // irgendeine Info zu Berechnung des Sonnenaziumt fehlt (insbesondere Datum und Uhrzeit sind nicht unbedingt gleichzeitig verf??gbar wenn es einen Fix gibt)
+			} catch (NumberFormatException e) { // irgendeine Info zu Berechnung des Sonnenaziumt fehlt (insbesondere Datum und Uhrzeit sind nicht unbedingt gleichzeitig verf?gbar wenn es einen Fix gibt)
 				skyOrientationDir.set(-361, -361); // any value out of range (bigger than 360) will prevent drawArrows from drawing it
 			}
 

Modified: trunk/src/CacheWolf/navi/ProjectedPoint.java
===================================================================
--- trunk/src/CacheWolf/navi/ProjectedPoint.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/navi/ProjectedPoint.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -148,7 +148,7 @@
 
 
 	/**
-	 * This will give you the normal projected (e.g.Gau??-Kr??ger) easting value
+	 * This will give you the normal projected (e.g.Gau?-Kr?ger) easting value
 	 * (that means including the stripe number)
 	 * @return
 	 */

Modified: trunk/src/CacheWolf/navi/SkyOrientation.java
===================================================================
--- trunk/src/CacheWolf/navi/SkyOrientation.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/navi/SkyOrientation.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -51,7 +51,7 @@
 	public static final int DENEB = 5;
 	public static final int CYGNUS = DENEB; // Cygnus = Schwan
 	public static final int MIMOSA = 6; // second brightest star in Southern Cross
-	public static final int SOUTHERN_CROSS = MIMOSA; // SOUTHERN_CROSS = Kreus des S??dens = Crux australia
+	public static final int SOUTHERN_CROSS = MIMOSA; // SOUTHERN_CROSS = Kreus des S?dens = Crux australia
 	
 	public static final CWPoint[] STARS = {
 		// (Deklination, Rektaszension)
@@ -142,7 +142,7 @@
 			//double jd0 = java.lang.Math.floor(365.25*(jahr + 4716.)) + java.lang.Math.floor(30.6001*((double)monat+1.)) +(double)tag + b - 1524.5;
 		} catch (IndexOutOfBoundsException e) {
 			// wird von substring geworfen wenn datum / utc nicht genug Ziffern haben
-			// NumberFormatException wird au??erdem von Convert.ParseInt direkt geworfen wenn
+			// NumberFormatException wird au?erdem von Convert.ParseInt direkt geworfen wenn
 			// nicht in Int konvertiert werden kann
 			throw new NumberFormatException();
 		}
@@ -226,7 +226,7 @@
 	}
 
 	public static CWPoint getAlnilamDir(double jd, CWPoint onEarth) {
-		// Koordinaten Alnilam (mittlerer Guertelstern des Orion), Rektaszension 5h36m13s; Deklination -1??12'7 TODO Aequinoktium 2000
+		// Koordinaten Alnilam (mittlerer Guertelstern des Orion), Rektaszension 5h36m13s; Deklination -1?12'7 TODO Aequinoktium 2000
 		// Source: wikipedia
 		return equatorial2AzimutCoos(onEarth, jd, new CWPoint(-1. -12./60. -7./3600., (5. + 36./60. + 13./3600.)*15.) ); // (-1. -12./60. -7./3600., (5. + 36./60. + 13./3600.)*15.) <- wikipedia // -1.19748, 5.60978 * 15.) <- www.... // (-1. -11./60. -52./3600., (5. + 36./60. + 35./3600.)*15.)  <- Stellarium
 	}

Modified: trunk/src/CacheWolf/navi/TrackOverlay.java
===================================================================
--- trunk/src/CacheWolf/navi/TrackOverlay.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/navi/TrackOverlay.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -197,7 +197,7 @@
 		draw.setColor(tr.trackColor);
 		if (paintPoint(tr.trackColor, tr.get(tr.size()-1))) notOnThisOverlaySince = 0;
 		else notOnThisOverlaySince++;
-		if (notOnThisOverlaySince > FIXATE_IF_NO_PIXELS_NUM) { // zur Performanceverbesserung: wenn in den letzten 60 Updates keines mehr f??r dieses Overlay dabei war, Overlay Pixels fest schreiben, damit doDraw entlastet wird.
+		if (notOnThisOverlaySince > FIXATE_IF_NO_PIXELS_NUM) { // zur Performanceverbesserung: wenn in den letzten 60 Updates keines mehr f?r dieses Overlay dabei war, Overlay Pixels fest schreiben, damit doDraw entlastet wird.
 			fixate();
 			notOnThisOverlaySince = 0;
 		}
@@ -223,35 +223,35 @@
 
 /* draw zeichnet auf _awtImage
  * image.drawImage erzeugt bufferedImage, wenn es vorher null war 
- * und kopiert den entsprechenden Teil in das ??bergebene Surface
+ * und kopiert den entsprechenden Teil in das ?bergebene Surface
  * Das Problem ist, dass bufferedImage nicht mehr upgedatet wird, wenn
  * es einmal erzugt wurde. Es wird nur dann upgedatet, wenn das Image ein anderes wird
- * oder die Maske eine andere. Das Update erfolgt dann ??ber doDraw, was doCheckMask aufruft,
+ * oder die Maske eine andere. Das Update erfolgt dann ?ber doDraw, was doCheckMask aufruft,
  * das das eigentliche kopieren aus _awtImage vornimmt.
  * 
- *  Problem: das kopieren von _awtImage in BufferedImage ist sehr zeitaufw??ndig, weil
- *  es keine native Routine ist und jedes Pixel einzeln gepr??ft wird.
- *  Deswegen w??re die beste L??sung, wenn ich bufferedImage direkt updaten k??nnte.
+ *  Problem: das kopieren von _awtImage in BufferedImage ist sehr zeitaufw?ndig, weil
+ *  es keine native Routine ist und jedes Pixel einzeln gepr?ft wird.
+ *  Deswegen w?re die beste L?sung, wenn ich bufferedImage direkt updaten k?nnte.
  *  Aber bufferedImage ist privat, ich kann auch in abgeleiteten Klassen nicht drauf
  *  zugreifen. 
  *  
- *  Zur Not w??re auch denkbar, doDraw zu ??berschreiben, um bei jedem Aufruf alle 
+ *  Zur Not w?re auch denkbar, doDraw zu ?berschreiben, um bei jedem Aufruf alle 
  *  Trackpoints neu zu zeichnen.
  *  Work-Aorund: draw.drawImage(image,null,Color.Pink,0,0,1,1); bewirkt, dass awtImage ins
- *  bufferedImage kopiert wird. Dabei wird die transparentColor (in mImage) nicht ge??ndert
- *  und beim Aufruf von doDraw wird wieder die urspr??ngliche transparentColor verwendet
+ *  bufferedImage kopiert wird. Dabei wird die transparentColor (in mImage) nicht ge?ndert
+ *  und beim Aufruf von doDraw wird wieder die urspr?ngliche transparentColor verwendet
  *  
  */
 //was alles nicht funktioniert:
 //drawmask.setDrawOp(Graphics.DRAW_OVER);
 //drawmask.drawRect(x-1, y-1, 2, 2, 1);
 //this.setImage(image, mask);
-//n??chster Versuch: image.bufferedImage in ewe.fx.Image public definieren !!!
+//n?chster Versuch: image.bufferedImage in ewe.fx.Image public definieren !!!
 //image.rgb
 //draw._g.surfaceData.bufImg.raster.data[y*this.location.width + x] = -65536; := image._awtImage
 //((Image)image).eImage(colorOrMask)._awtImage.raster.data[0]=0;
 //image
-//((BufferedImage)(image).se.^.bufferedImage.raster.data[y*this.location.width + x]=-65536; //was dort steht wird tats??chlich angezeigt, allerdings kann ich es nicht direkt setzen :-(
+//((BufferedImage)(image).se.^.bufferedImage.raster.data[y*this.location.width + x]=-65536; //was dort steht wird tats?chlich angezeigt, allerdings kann ich es nicht direkt setzen :-(
 //int[] markPixels = new int[4];
 //for (int i = 0; i<markPixels.length; i++) { markPixels[i] = -65536; }
 //image.transparent = null; hilft auhc nicht
@@ -277,8 +277,8 @@
 //imageMayChange = true; // hilft auch nicht :-(
 
 /*
- * In der ewe-VM f??r PocketPC-ARM funktioniert die Festlegung einer 
- * transparenten Farbe nicht (Hintergrund wird wei?? statt durchsichtig)
+ * In der ewe-VM f?r PocketPC-ARM funktioniert die Festlegung einer 
+ * transparenten Farbe nicht (Hintergrund wird wei? statt durchsichtig)
  * deswegen (und weil in ewe-VM effizienter) Umstellung auf Transparenzmaske
  * statt transparenter Farbe
  * TODO Dies ist in Java-VM allerdings extrem Speicher fressend -> evtl abfragen 

Modified: trunk/src/CacheWolf/navi/TransformCoordinates.java
===================================================================
--- trunk/src/CacheWolf/navi/TransformCoordinates.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/navi/TransformCoordinates.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -41,7 +41,7 @@
  *  * http://crs.bkg.bund.de/crseu/crs/descrtrans/BeTA/BETA2007testdaten.csv
  *  * http://www.lverma.nrw.de/produkte/raumbezug/koordinatentransformation/Koordinatentransformation.htm
  * Now, that this is completed: there is a much more precise method right now published
- * by the Bundesamt f??r Kartographie und Geod??sie for whole Germany: see:
+ * by the Bundesamt f?r Kartographie und Geod?sie for whole Germany: see:
  *  * http://crs.bkg.bund.de/crseu/crs/descrtrans/BeTA/BETA2007dokumentation.pdf
  *  * http://crs.bkg.bund.de/crs-eu/ click on "national CRS" -> germany -> DE_DHDN / GK_3 -> DE_DHDN (BeTA, 2007) to ETRS89
  *  
@@ -53,12 +53,12 @@
 
 	public static final int EPSG_WGS84 					= 4326; 
 	public static final int EPSG_ETRS89 				= 25832; // TODO support it anyhow 
-	/** Gau??-Kr??ger, Bessel 1841, Potsdam (DHDN)  */
+	/** Gau?-Kr?ger, Bessel 1841, Potsdam (DHDN)  */
 	public static final int EPSG_GERMAN_GK2 			= 31466; 
 	public static final int EPSG_GERMAN_GK3 			= 31467; 
 	public static final int EPSG_GERMAN_GK4 			= 31468; 
 	public static final int EPSG_GERMAN_GK5 			= 31469;
-	/** Gau??-Boaga, Monte Mario, Roma 1940, IT_ROMA1940 */
+	/** Gau?-Boaga, Monte Mario, Roma 1940, IT_ROMA1940 */
 	public static final int EPSG_ITALIAN_GB_EW1 		= 3003; 
 	public static final int EPSG_ITALIAN_GB_EW2 		= 3004;
 	/** Austrian Lambert, Bessel 1841, Hermannskogel */
@@ -116,24 +116,24 @@
 
 	public static final LocalSystem[] localSystems = {
 		new LocalSystem(TransformCoordinates.LOCALSYSTEM_UTM_WGS84,             "UTM",         "utm",   ProjectedPoint.PJ_UTM_WGS84.zoneSeperately),
-		new LocalSystem(TransformCoordinates.LOCALSYSTEM_GERMAN_GK, 			"de Gau??-K.",  "de.gk", ProjectedPoint.PJ_GERMAN_GK.zoneSeperately),
+		new LocalSystem(TransformCoordinates.LOCALSYSTEM_GERMAN_GK, 			"de Gau?-K.",  "de.gk", ProjectedPoint.PJ_GERMAN_GK.zoneSeperately),
 		new LocalSystem(TransformCoordinates.LOCALSYSTEM_AUSTRIAN_LAMBERT_OLD,  "at Lamb.",    "at.lb", ProjectedPoint.PJ_AUSTRIAN_LAMBERT_OLD.zoneSeperately),
-		new LocalSystem(TransformCoordinates.LOCALSYSTEM_ITALIAN_GB,            "it Gau??-B.",  "it.gb", ProjectedPoint.PJ_ITALIAN_GB.zoneSeperately),
+		new LocalSystem(TransformCoordinates.LOCALSYSTEM_ITALIAN_GB,            "it Gau?-B.",  "it.gb", ProjectedPoint.PJ_ITALIAN_GB.zoneSeperately),
 		new LocalSystem(TransformCoordinates.LOCALSYSTEM_FRANCE_LAMBERT_IIE,    "fr Lamb-IIe", "fr.l2", ProjectedPoint.PJ_FRENCH_LAMBERT_NTF_II.zoneSeperately)
 	};
 	
 
 	//	 taken from http://www.crs-geo.eu/crseu/EN/Home/homepage__node.html?__nnn=true click on "national CRS" -> germany -> DE_DHDN / GK_3 -> DE_DHDN (North) to ETRS89
 	//	 they are the same as http://www.geoclub.de/files/GK_nach_GPS.xls "Parametersatz 4 = Deutschland Nord" (rotation *-1)
-	/** use this for nord Germany, maximum deviation sub meter, valid in the former BRD (west germany) in 52??20' N ... 55??00' N */
+	/** use this for nord Germany, maximum deviation sub meter, valid in the former BRD (west germany) in 52?20' N ... 55?00' N */
 	private static final TransformParameters GK_NORD_GERMANY_TO_WGS84 = new TransformParameters(590.5, 69.5, 411.6, 0.796, 0.052, 3.601, 8.300, BESSEL);
 
 	//	 taken from http://crs.bkg.bund.de/crs-eu/ click on "national CRS" -> germany -> DE_DHDN / GK_3 -> DE_DHDN (Middle) to ETRS89 (rotation *-1)
-	/** use this for mid-Germany, maximum deviation sub meter, valid in the former BRD (west germany) in 50??20' N ... 52??20' N */
+	/** use this for mid-Germany, maximum deviation sub meter, valid in the former BRD (west germany) in 50?20' N ... 52?20' N */
 	private static final TransformParameters GK_MID_GERMANY_TO_WGS84 = new TransformParameters(584.8, 67.0, 400.3, -0.105, -0.013, 2.378, 10.290, BESSEL);
 
 	//	 taken from http://crs.bkg.bund.de/crs-eu/ click on "national CRS" -> germany -> DE_DHDN / GK_3 -> DE_DHDN (South) to ETRS89 (rotation *-1)
-	/** use this for south Germany, maximum deviation sub meter, valid in the former BRD (west germany) in 47??00' N ... 50??20' N */
+	/** use this for south Germany, maximum deviation sub meter, valid in the former BRD (west germany) in 47?00' N ... 50?20' N */
 	private static final TransformParameters GK_SOUTH_GERMANY_TO_WGS84 = new TransformParameters(597.1, 71.4, 412.1, -0.894, -0.068, 1.563, -7.580, BESSEL);
 
 	private static Area FORMER_GDR = new Area(new CWPoint(54.923414, 10.503013), new CWPoint(50.402578, 14.520637)); 
@@ -148,7 +148,7 @@
 	// private static final TransformParameters GK_GERMANY_1995_TO_WGS84 = new TransformParameters(582, 105, 414, -1.04, -0.35, +3.08, -8.3, BESSEL);
 
 	// taken from http://www.geodatenzentrum.de/geodaten/gdz_home1.gdz_home_start?gdz_home_para1=Technische%A0Hinweise&gdz_home_para2=Technische%A0Hinweise&gdz_home_menu_nr=10&gdz_home_menu_nr2=1&gdz_home_para3=/auftrag/html/gdz_tech_geo_deu.htm&gdz_home_spr=deu&gdz_home_para0=0
-	/** Use this for Germany if there is no more specific available. Deviations unknown. Data source: Bundesamt f??r Kartographie und Geod??sie, taken from website on: 1-11-2007 */
+	/** Use this for Germany if there is no more specific available. Deviations unknown. Data source: Bundesamt f?r Kartographie und Geod?sie, taken from website on: 1-11-2007 */
 	// private static final TransformParameters GK_GERMANY_BKG_TO_WGS84 = new TransformParameters(586, 87, 409, -0.52, -0.15, 2.82, -9, BESSEL);
 
 	// take from http://www.geoclub.de/files/GK_nach_GPS.xls "Parametersatz 2 = Deutschland 2001" (rotation *-1)
@@ -156,7 +156,7 @@
 	private static final TransformParameters GK_GERMANY_2001_TO_WGS84 = new TransformParameters(598.1, 73.7, 418.2, -0.202, -0.045, 2.455, 6.700, BESSEL);
 
 	// taken from http://crs.bkg.bund.de/crs-eu/ -> italy -> ROMA40 (change the sign of the rotation parameters!)
-	/** The italian variant of Gau??-Kr??ger (Gau??-Boaga) */
+	/** The italian variant of Gau?-Kr?ger (Gau?-Boaga) */
 	private static final TransformParameters GB_ITALIAN_PENINSULAR_TO_WGS84 =  new TransformParameters(-104.1, -49.1, -9.9, -0.971, 2.917, -0.714, -11.68, HAYFORD1909);
 	//static final Area ITALY_PENINSULAR = new Area(new CWPoint());
 	private static final TransformParameters GB_ITALIAN_SARDINIA_TO_WGS84 =  new TransformParameters(-168.6, -34.0, 38.6, 0.374, 0.679, 1.379, 9.48, HAYFORD1909);
@@ -173,7 +173,7 @@
 	// taken from taken from http://www.crs-geo.eu/crseu/EN/Home/homepage__node.html?__nnn=true click on "national CRS" -> Austria -> AT (translation *-1 as of 11-8-2009)
 	/** Austria Datum Hermannskogel, AT_MGI accuracy about 1.5m */
 	private static final TransformParameters LAMBERT_AUSTRIAN_OLD_TO_WGS84 = new TransformParameters(577.326, 90.129, 463.919, -5.136599, -1.4742, -5.297044, 2.4232, BESSEL);
-	// ??bersicht ??ber alle Transformparameter und EPSG-COdes und Projektionenm (PORJ4):
+	// ?bersicht ?ber alle Transformparameter und EPSG-COdes und Projektionenm (PORJ4):
 	// http://svn.osgeo.org/metacrs/proj/trunk/proj/nad/epsg
 	//public static final TransformParameters WGS72_TO_WGS84 =  new TransformParameters(0, 0, 4.5, 0, 0, -0.554, 0.219);
 	private static final TransformParameters LAMBERT_FRENCH_NTF_TO_WGS84 = new TransformParameters(-168    ,    -60,320      ,0         ,0       ,0         ,0      , CLARKE1880IGN);
@@ -232,7 +232,7 @@
 	/**
 	 * 
 	 * @param epsgcode
-	 * @return region code as needed for GkPoint, -1 if not Gau??-Kr??ger or not supported
+	 * @return region code as needed for GkPoint, -1 if not Gau?-Kr?ger or not supported
 	 * Inside one ProjectedRegion the epsg-code (zone / stripe) can be automatically choosen
 	 * depending on lat / lon.
 	 */
@@ -330,7 +330,7 @@
 	}
 
 	/**
-	 * this routine gives the correct Gau??-Kr??ger coordinates
+	 * this routine gives the correct Gau?-Kr?ger coordinates
 	 * in the stripe specified by EPSG-Code
 	 * @param wgs84
 	 * @param epsg_localsystem

Modified: trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java
===================================================================
--- trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/navi/TransformCoordinatesProperties.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -43,7 +43,7 @@
 
 	/**
 	 * return ll transformed into the desired coordinate reference system
-	 * if the prjection is Gau??-Kr??ger, easting will be put in lonDec and
+	 * if the prjection is Gau?-Kr?ger, easting will be put in lonDec and
 	 * northing in latDec
 	 * @param ll
 	 * @return
@@ -72,7 +72,7 @@
 
 	/**
 	 * convert any supported coordinate reference system WGS84
-	 * if p is a Gau??-Kr??ger point, put latdec = northing, londec = easting 
+	 * if p is a Gau?-Kr?ger point, put latdec = northing, londec = easting 
 	 * @param p
 	 * @return
 	 */

Modified: trunk/src/CacheWolf/navi/touchControls/MovingMapControlItem.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/MovingMapControlItem.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/navi/touchControls/MovingMapControlItem.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -37,7 +37,7 @@
 /**
  * class which represents a item which can be displayed on the map
  * 
- * @author H??lmchen
+ * @author H?lmchen
  */
 public abstract class MovingMapControlItem {
 

Modified: trunk/src/CacheWolf/navi/touchControls/MovingMapControls.java
===================================================================
--- trunk/src/CacheWolf/navi/touchControls/MovingMapControls.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/navi/touchControls/MovingMapControls.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -36,7 +36,7 @@
 import ewe.util.Vector;
 
 /**
- * @author H??lmchen
+ * @author H?lmchen
  */
 
 public class MovingMapControls implements ICommandListener {

Modified: trunk/src/CacheWolf/utils/URLUTF8Encoder.java
===================================================================
--- trunk/src/CacheWolf/utils/URLUTF8Encoder.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/utils/URLUTF8Encoder.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -41,10 +41,10 @@
  *
  * URLUTF8Encoder: http://www.w3.org/International/URLUTF8Encoder.java
  *
- * Copyright ?? 1997 World Wide Web Consortium, (Massachusetts
+ * Copyright ? 1997 World Wide Web Consortium, (Massachusetts
  * Institute of Technology, European Research Consortium for
  * Informatics and Mathematics, Keio University). All Rights Reserved. 
- * This work is distributed under the W3C?? Software License [1] in the
+ * This work is distributed under the W3C? Software License [1] in the
  * hope that it will be useful, but WITHOUT ANY WARRANTY; without even
  * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  * PURPOSE.

Modified: trunk/src/CacheWolf/view/pda/PDATravelbugDetailMenu.java
===================================================================
--- trunk/src/CacheWolf/view/pda/PDATravelbugDetailMenu.java	2011-09-18 11:30:14 UTC (rev 3099)
+++ trunk/src/CacheWolf/view/pda/PDATravelbugDetailMenu.java	2011-09-18 23:52:56 UTC (rev 3100)
@@ -119,7 +119,7 @@
 		} else if (action.equals(DELETE)) {
 			// LOESCHEN DES TB's aus der Datenbank ist Boese!!!
 			// Erst mal eine Sicherheitesabfrage bauen:
-			int r = PDAOptionPane.showConfirmDialog(this.getFrame(), "Sind Sie Sicher???", "Wollen Sie wirklich den TB l??schen??");
+			int r = PDAOptionPane.showConfirmDialog(this.getFrame(), "Sind Sie Sicher???", "Wollen Sie wirklich den TB l?schen??");
 			if (r == PDAOptionPane.OK) {
 				for (int i = 0; i < journeyScreen.model.allTravelbugJourneys.size(); i++) {
 					TravelbugJourney tbJourney = journeyScreen.model.allTravelbugJourneys.getTBJourney(i);



From araber95 at mail.berlios.de  Mon Sep 19 09:31:21 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Mon, 19 Sep 2011 09:31:21 AM +0200
Subject: [Cachewolf-svn] r3101 - trunk
Message-ID: <20110919073121.A656C4813CE@sheep.berlios.de>

Author: araber95
Date: 2011-09-19 09:31:20 +0200 (Mon, 19 Sep 2011)
New Revision: 3101

Modified:
   trunk/build.xml
   trunk/compile.bat
   trunk/compile.sh
   trunk/fwrtsnapshot.sh
Log:
returning the compile scripts to cp 1252

Modified: trunk/build.xml
===================================================================
--- trunk/build.xml	2011-09-18 23:52:56 UTC (rev 3100)
+++ trunk/build.xml	2011-09-19 07:31:20 UTC (rev 3101)
@@ -331,7 +331,7 @@
 
 	<target name="compile" depends="fixreleasenumber" description="compile sources with java">
 		<mkdir dir="${classes.dir}" />
-		<javac source="1.3" target="1.1" encoding="UTF-8"
+		<javac source="1.3" target="1.1" encoding="windows-1252"
 			classpath="./lib/CompileEwe.zip:./lib/" destdir="${classes.dir}"
 			deprecation="off" nowarn="on" srcdir="src"
 			includes="CacheWolf/*.java,CacheWolf/*/*.java,org/*.java,org/*/*.java" />

Modified: trunk/compile.bat
===================================================================
--- trunk/compile.bat	2011-09-18 23:52:56 UTC (rev 3100)
+++ trunk/compile.bat	2011-09-19 07:31:20 UTC (rev 3101)
@@ -1,4 +1,4 @@
 if not exist bin\CacheWolf mkdir bin\CacheWolf
-javac -source 1.3 -target 1.1 -encoding UTF-8 -cp ./lib/CompileEwe.zip;./lib/  -d ./bin/ -deprecation ./src/org/bouncycastle/asn1/*.java ./src/org/bouncycastle/asn1/nist/*.java ./src/org/bouncycastle/asn1/oiw/*.java ./src/org/bouncycastle/asn1/pkcs/*.java ./src/org/bouncycastle/asn1/sec/*.java ./src/org/bouncycastle/asn1/teletrust/*.java ./src/org/bouncycastle/asn1/x9/*.java ./src/org/bouncycastle/asn1/x500/*.java ./src/org/bouncycastle/asn1/x500/style/*.java ./src/org/bouncycastle/asn1/x509/*.java ./src/org/bouncycastle/crypto/*.java ./src/org/bouncycastle/crypto/agreement/*.java ./src/org/bouncycastle/crypto/digests/*.java ./src/org/bouncycastle/crypto/encodings/*.java ./src/org/bouncycastle/crypto/engines/*.java ./src/org/bouncycastle/crypto/generators/*.java ./src/org/bouncycastle/crypto/io/*.java ./src/org/bouncycastle/crypto/macs/*.java ./src/org/bouncycastle/crypto/modes/*.java ./src/org/bouncycastle/crypto/params/*.java ./src/org/bouncycastle/crypto/modes/*.java ./sr
 c/org/bouncycastle/crypto/prng/*.java ./src/org/bouncycastle/crypto/signers/*.java ./src/org/bouncycastle/crypto/tls/*.java ./src/org/bouncycastle/crypto/util/*.java ./src/org/bouncycastle/math/ec/*.java ./src/org/bouncycastle/util/*.java ./src/org/bouncycastle/util/encoders/*.java ./src/org/bouncycastle/util/io/*.java ./src/CacheWolf/*.java ./src/CacheWolf/imp/*.java ./src/CacheWolf/navi/*.java ./src/CacheWolf/navi/touchControls/*.java ./src/CacheWolf/exp/*.java ./src/CacheWolf/utils/*.java ./src/CacheWolf/model/*.java ./src/CacheWolf/view/*.java  ./src/CacheWolf/view/ewe/*.java  ./src/CacheWolf/view/pda/*.java
+javac -source 1.3 -target 1.1 -cp ./lib/CompileEwe.zip;./lib/  -d ./bin/ -deprecation ./src/org/bouncycastle/asn1/*.java ./src/org/bouncycastle/asn1/nist/*.java ./src/org/bouncycastle/asn1/oiw/*.java ./src/org/bouncycastle/asn1/pkcs/*.java ./src/org/bouncycastle/asn1/sec/*.java ./src/org/bouncycastle/asn1/teletrust/*.java ./src/org/bouncycastle/asn1/x9/*.java ./src/org/bouncycastle/asn1/x500/*.java ./src/org/bouncycastle/asn1/x500/style/*.java ./src/org/bouncycastle/asn1/x509/*.java ./src/org/bouncycastle/crypto/*.java ./src/org/bouncycastle/crypto/agreement/*.java ./src/org/bouncycastle/crypto/digests/*.java ./src/org/bouncycastle/crypto/encodings/*.java ./src/org/bouncycastle/crypto/engines/*.java ./src/org/bouncycastle/crypto/generators/*.java ./src/org/bouncycastle/crypto/io/*.java ./src/org/bouncycastle/crypto/macs/*.java ./src/org/bouncycastle/crypto/modes/*.java ./src/org/bouncycastle/crypto/params/*.java ./src/org/bouncycastle/crypto/modes/*.java ./src/org/bouncycast
 le/crypto/prng/*.java ./src/org/bouncycastle/crypto/signers/*.java ./src/org/bouncycastle/crypto/tls/*.java ./src/org/bouncycastle/crypto/util/*.java ./src/org/bouncycastle/math/ec/*.java ./src/org/bouncycastle/util/*.java ./src/org/bouncycastle/util/encoders/*.java ./src/org/bouncycastle/util/io/*.java ./src/CacheWolf/*.java ./src/CacheWolf/imp/*.java ./src/CacheWolf/navi/*.java ./src/CacheWolf/navi/touchControls/*.java ./src/CacheWolf/exp/*.java ./src/CacheWolf/utils/*.java ./src/CacheWolf/model/*.java ./src/CacheWolf/view/*.java  ./src/CacheWolf/view/ewe/*.java  ./src/CacheWolf/view/pda/*.java
 javac -source 1.3 -target 1.1 -cp ./lib/CompileEwe.zip;./lib/  -d ./lib/ -deprecation ./lib/net/ax86/*.java ./lib/org/json/*.java
 pause

Modified: trunk/compile.sh
===================================================================
--- trunk/compile.sh	2011-09-18 23:52:56 UTC (rev 3100)
+++ trunk/compile.sh	2011-09-19 07:31:20 UTC (rev 3101)
@@ -1,13 +1,12 @@
 #!/bin/sh
 
-CP1252=${ENCODING:-windows-1252}
-UTF8=${ENCODING:-UTF-8}
+ENCODING=${ENCODING:-windows-1252}
 
 compile_cw() {
    javac \
       -source 1.3 \
       -target 1.1 \
-      -encoding "${UTF-8}" \
+      -encoding "${ENCODING}" \
       -cp ./lib/CompileEwe.zip:./lib/ \
       -deprecation \
       -nowarn \
@@ -18,7 +17,7 @@
    javac \
       -source 1.3 \
       -target 1.1 \
-      -encoding "${cp1252}" \
+      -encoding "${ENCODING}" \
       -cp ./lib/CompileEwe.zip:./lib/ \
       -deprecation \
       -nowarn \

Modified: trunk/fwrtsnapshot.sh
===================================================================
--- trunk/fwrtsnapshot.sh	2011-09-18 23:52:56 UTC (rev 3100)
+++ trunk/fwrtsnapshot.sh	2011-09-19 07:31:20 UTC (rev 3101)
@@ -17,7 +17,7 @@
     ed -s src/CacheWolf/Version.java
 rm -rf bin
 mkdir -p bin/CacheWolf
-javac -source 1.3 -target 1.1 -encoding UTF-8 \
+javac -source 1.3 -target 1.1 -encoding windows-1252 \
      -cp lib/CompileEwe.zip:lib -d bin -deprecation -nowarn \
      src/CacheWolf/*.java src/CacheWolf/*/*.java src/CacheWolf/navi/touchControls/*.java src/CacheWolf/view/*/*.java \
 	 src/org/bouncycastle/*/*.java src/org/bouncycastle/*/*/*.java src/org/bouncycastle/*/*/*/*.java



From araber95 at mail.berlios.de  Mon Sep 19 11:06:26 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Mon, 19 Sep 2011 11:06:26 AM +0200
Subject: [Cachewolf-svn] r3102 - in trunk: lib/net/ax86 lib/org/json
	src/CacheWolf/imp
Message-ID: <20110919090626.3EC1C4813CE@sheep.berlios.de>

Author: araber95
Date: 2011-09-19 11:06:25 +0200 (Mon, 19 Sep 2011)
New Revision: 3102

Modified:
   trunk/lib/net/ax86/GPS.class
   trunk/lib/net/ax86/GPSException.class
   trunk/lib/net/ax86/GPSHook.class
   trunk/lib/net/ax86/GPSTest.class
   trunk/lib/org/json/JSONArray.class
   trunk/lib/org/json/JSONException.class
   trunk/lib/org/json/JSONObject$Null.class
   trunk/lib/org/json/JSONObject.class
   trunk/lib/org/json/JSONString.class
   trunk/lib/org/json/JSONTokener.class
   trunk/lib/org/json/Test$1Obj.class
   trunk/lib/org/json/Test.class
   trunk/src/CacheWolf/imp/SpiderGC.java
Log:
determine users gc - language setting without using utf-8 charset.

Modified: trunk/lib/net/ax86/GPS.class
===================================================================
(Binary files differ)

Modified: trunk/lib/net/ax86/GPSException.class
===================================================================
(Binary files differ)

Modified: trunk/lib/net/ax86/GPSHook.class
===================================================================
(Binary files differ)

Modified: trunk/lib/net/ax86/GPSTest.class
===================================================================
(Binary files differ)

Modified: trunk/lib/org/json/JSONArray.class
===================================================================
(Binary files differ)

Modified: trunk/lib/org/json/JSONException.class
===================================================================
(Binary files differ)

Modified: trunk/lib/org/json/JSONObject$Null.class
===================================================================
(Binary files differ)

Modified: trunk/lib/org/json/JSONObject.class
===================================================================
(Binary files differ)

Modified: trunk/lib/org/json/JSONString.class
===================================================================
(Binary files differ)

Modified: trunk/lib/org/json/JSONTokener.class
===================================================================
(Binary files differ)

Modified: trunk/lib/org/json/Test$1Obj.class
===================================================================
(Binary files differ)

Modified: trunk/lib/org/json/Test.class
===================================================================
(Binary files differ)

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-19 07:31:20 UTC (rev 3101)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-19 09:06:25 UTC (rev 3102)
@@ -1331,18 +1331,17 @@
 		String languageBlock = ext.findNext();
 		ext.set(ext.findNext("ctl00$ContentBody$uxDateTimeFormat"), "selected\" value=\"", "\">", 0, true);
 		DateFormat.GCDateFormat = ext.findNext();
-		// <option selected="selected" value="de-DE">Deutsch</option>
-		ext.set(languageBlock, "<option selected=", "/option>", 0, true);
-		ext.set(ext.findNext(), ">", "<", 0, true);
+		// <option selected=\"selected\" value=\"de-DE">Deutsch</option>
+		ext.set(languageBlock, "<option selected=\"selected\" value=\"", "\">", 0, true);
 		String oldLanguage = ext.findNext();
-		if (oldLanguage.equals("English")) {
+		if (oldLanguage.equals("en-US")) {
 			pref.switchGCLanguageToEnglish=false;
 			pref.log("already English");
 			return true;
 		}
 		// switch to english now goes into gc account Display Preferences
 		// (is permanent, must be reset)
-		String languages[] = { "English", "Deutsch", "Fran&#231;ais", "Portugu&#234;s", "Ce?tina", "Svenska", "Nederlands", "Catal&#224;", "Polski", "Eesti", "Norsk, Bokm&#229;l", "???", "Espa&#241;ol", "Magyar" };
+		String languages[] = { "en-US", "de-DE", "fr-FR", "pt-PT", "cs-CZ", "sv-SE", "nl-NL", "ca-ES", "pl-PL", "et-EE", "nb-NO", "ko-KR", "es-ES", "hu-HU" };
 		for (int i = 0; i < languages.length; i++) {
 			if (oldLanguage.equals(languages[i])) {
 				pref.oldLanguageCtl = url + "?__EVENTTARGET=" + UrlFetcher.encodeURL("ctl00$uxLocaleList$uxLocaleList$ctl" + MyLocale.formatLong(i, "00") + "$uxLocaleItem", false);



From araber95 at mail.berlios.de  Mon Sep 19 06:07:03 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Mon, 19 Sep 2011 06:07:03 PM +0200
Subject: [Cachewolf-svn] r3103 - trunk/src/CacheWolf/imp
Message-ID: <20110919160703.525D24813CE@sheep.berlios.de>

Author: araber95
Date: 2011-09-19 18:07:03 +0200 (Mon, 19 Sep 2011)
New Revision: 3103

Modified:
   trunk/src/CacheWolf/imp/SpiderGC.java
Log:
recognition of found for user with umlauts (and perhaps other chars)

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-19 09:06:25 UTC (rev 3102)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-19 16:07:03 UTC (rev 3103)
@@ -2703,7 +2703,7 @@
 				final String logId = entry.getString("LogID");
 
 				// if this log says this Cache is found by me
-				if ((icon.equals(icon_smile) || icon.equals(icon_camera) || icon.equals(icon_attended)) && (name.equalsIgnoreCase(SafeXML.clean(pref.myAlias)) || (pref.myAlias2.length() > 0 && name.equalsIgnoreCase(SafeXML.clean(pref.myAlias2))))) {
+				if ((icon.equals(icon_smile) || icon.equals(icon_camera) || icon.equals(icon_attended)) && (name.equalsIgnoreCase(pref.myAlias) || (pref.myAlias2.length() > 0 && name.equalsIgnoreCase(pref.myAlias2)))) {
 					chD.getParent().setFound(true);
 					chD.getParent().setCacheStatus(d);
 					// final String logId = entry.getString("LogID");



From araber95 at mail.berlios.de  Tue Sep 20 09:47:07 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Tue, 20 Sep 2011 09:47:07 AM +0200
Subject: [Cachewolf-svn] r3104 - in trunk: res_noewe src/CacheWolf
Message-ID: <20110920074707.5B7CE481359@sheep.berlios.de>

Author: araber95
Date: 2011-09-20 09:47:06 +0200 (Tue, 20 Sep 2011)
New Revision: 3104

Modified:
   trunk/res_noewe/spider.def
   trunk/src/CacheWolf/Version.java
Log:
adapting spider.def to changed structure of image section

Modified: trunk/res_noewe/spider.def
===================================================================
--- trunk/res_noewe/spider.def	2011-09-19 16:07:03 UTC (rev 3103)
+++ trunk/res_noewe/spider.def	2011-09-20 07:47:06 UTC (rev 3104)
@@ -122,12 +122,12 @@
 imgBlockExStart    = <IMG
 imgBlockExEnd      = >
 # imgSpanEx searches for images in the image section
-imgSpanExStart     = <span id="ctl00_ContentBody_Images">
-imgSpanExEnd       = </p>
-imgNameExStart     = "\ />\ <span>
-imgNameExEnd       = </span></a>
-imgSrcExStart      = <a\ href="http://
-imgSrcExEnd        = "\ rel="lightbox"
+imgSpanExStart     = ">Open Street Maps</a>
+imgSpanExEnd       = InformationWidget Clear
+imgNameExStart     = <span>
+imgNameExEnd       = </span>
+imgSrcExStart      = <a href="http://
+imgSrcExEnd        = " rel="lightbox"
 imgCommentExStart  = </a><br\ /><br\ />
 imgCommentExEnd    = <
 

Modified: trunk/src/CacheWolf/Version.java
===================================================================
--- trunk/src/CacheWolf/Version.java	2011-09-19 16:07:03 UTC (rev 3103)
+++ trunk/src/CacheWolf/Version.java	2011-09-20 07:47:06 UTC (rev 3104)
@@ -120,6 +120,7 @@
 		}
 	}
 
+	
 	/**
 	 * @param url
 	 * @return: 1 = newer Version available, 0 = this is up to date, 3 = check failed



From araber95 at mail.berlios.de  Tue Sep 20 02:31:26 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Tue, 20 Sep 2011 02:31:26 PM +0200
Subject: [Cachewolf-svn] r3105 - in trunk: res_noewe src/CacheWolf
	src/CacheWolf/imp
Message-ID: <20110920123126.A5C39481359@sheep.berlios.de>

Author: araber95
Date: 2011-09-20 14:31:26 +0200 (Tue, 20 Sep 2011)
New Revision: 3105

Modified:
   trunk/res_noewe/spider.def
   trunk/src/CacheWolf/Extractor.java
   trunk/src/CacheWolf/Version.java
   trunk/src/CacheWolf/imp/SpiderGC.java
Log:
adapting spider.def to changed structure of image section : part 2 comments

Modified: trunk/res_noewe/spider.def
===================================================================
--- trunk/res_noewe/spider.def	2011-09-20 07:47:06 UTC (rev 3104)
+++ trunk/res_noewe/spider.def	2011-09-20 12:31:26 UTC (rev 3105)
@@ -122,14 +122,15 @@
 imgBlockExStart    = <IMG
 imgBlockExEnd      = >
 # imgSpanEx searches for images in the image section
-imgSpanExStart     = ">Open Street Maps</a>
+imgSpanExStart     = ctl00_ContentBody_MapLinks_MapLinks
+imgSpanExStart2    = <p class="NoPrint">
 imgSpanExEnd       = InformationWidget Clear
+imgSrcExStart      = <a href="http://
+imgSrcExEnd        = " rel="lightbox"
 imgNameExStart     = <span>
 imgNameExEnd       = </span>
-imgSrcExStart      = <a href="http://
-imgSrcExEnd        = " rel="lightbox"
-imgCommentExStart  = </a><br\ /><br\ />
-imgCommentExEnd    = <
+imgCommentExStart  = </a><br />
+imgCommentExEnd    = <br /><br />
 
 #--------------------------------------
 #Section2d: Additional waypoints

Modified: trunk/src/CacheWolf/Extractor.java
===================================================================
--- trunk/src/CacheWolf/Extractor.java	2011-09-20 07:47:06 UTC (rev 3104)
+++ trunk/src/CacheWolf/Extractor.java	2011-09-20 12:31:26 UTC (rev 3105)
@@ -47,7 +47,7 @@
 	 * startOffset = The beginning offset from which to start the search in sTxt<br>
 	 * betweenonly = if false the string returned will inlcude st and e;
 	 * if true it will not include st and e.
-	 * 
+	 *
 	 */
 	public Extractor(String searchText, String st, String e, int startOffset, boolean betweenonly) {
 		_startOffset = startOffset;
@@ -59,7 +59,7 @@
 
 	/**
 	 * Mehtod to set the source text to be searched through
-	 * 
+	 *
 	 */
 	public void set(String searchText, String st, String e, int startOffset, boolean betweenonly) {
 		_startOffset = startOffset;
@@ -74,11 +74,6 @@
 		_startOffset = 0;
 	}
 
-	public void set(String searchText, int startOffset) {
-		_searchText = searchText;
-		_startOffset = startOffset;
-	}
-
 	public String findFirst(String searchText) {
 		_searchText = searchText;
 		_startOffset = 0;

Modified: trunk/src/CacheWolf/Version.java
===================================================================
--- trunk/src/CacheWolf/Version.java	2011-09-20 07:47:06 UTC (rev 3104)
+++ trunk/src/CacheWolf/Version.java	2011-09-20 12:31:26 UTC (rev 3105)
@@ -119,7 +119,6 @@
 			Vm.showWait(false);
 		}
 	}
-
 	
 	/**
 	 * @param url

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-20 07:47:06 UTC (rev 3104)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-20 12:31:26 UTC (rev 3105)
@@ -2891,19 +2891,26 @@
 		// ========
 		// In the image span
 		// ========
-		Extractor spanBlock, exImgName;
+		Extractor spanBlock;
+		String imgSrcExStart, imgSrcExEnd;
+		String imgNameExStart, imgNameExEnd;
+		String imgCommentExStart, imgCommentExEnd;
 		try {
-			spanBlock = new Extractor(doc, p.getProp("imgSpanExStart"), p.getProp("imgSpanExEnd"), 0, true);
-			tst = spanBlock.findNext();
-			exImgName = new Extractor(tst, p.getProp("imgNameExStart"), p.getProp("imgNameExEnd"), 0, true);
-			exImgSrc = new Extractor(tst, p.getProp("imgSrcExStart"), p.getProp("imgSrcExEnd"), 0, true);
-			exImgComment = new Extractor(tst, p.getProp("imgCommentExStart"), p.getProp("imgCommentExEnd"), 0, true);
+			imgSrcExStart=p.getProp("imgSrcExStart");
+			imgSrcExEnd=p.getProp("imgSrcExEnd");
+			imgNameExStart=p.getProp("imgNameExStart");
+			imgNameExEnd=p.getProp("imgNameExEnd");
+			imgCommentExStart= p.getProp("imgCommentExStart");
+			imgCommentExEnd=p.getProp("imgCommentExEnd");
+			spanBlock = new Extractor(doc, p.getProp("imgSpanExStart"), p.getProp("imgSpanExEnd"), 0, false);
+			spanBlock.set(spanBlock.findNext(), p.getProp("imgSpanExStart2"), p.getProp("imgSpanExEnd"), 0, true);
+			spanBlock.set(spanBlock.findNext()+imgSrcExStart, imgSrcExStart, imgSrcExStart, 0, false);
 		} catch (final Exception ex) {
 			return;
 		}
-		while ((imgUrl = exImgSrc.findNext()).length() > 0) {
-			imgComment = exImgComment.findNext();
-			imgUrl = "http://" + imgUrl;
+		while ((tst = spanBlock.findNext()).length() > 0) {
+			exImgSrc.set(tst, imgSrcExStart, imgSrcExEnd, 0, true);
+			imgUrl = "http://" + exImgSrc.findNext();
 			try {
 				imgType = (imgUrl.substring(imgUrl.lastIndexOf('.')).toLowerCase() + "    ").substring(0, 4).trim();
 				// imgType is now max 4 chars, starting with .
@@ -2935,7 +2942,8 @@
 						imageInfo.setFilename(fileName + imgType);
 						imageInfo.setURL(imgUrl);
 					}
-					imageInfo.setTitle(exImgName.findNext());
+					imageInfo.setTitle(exImgSrc.findNext(imgNameExStart, imgNameExEnd));
+					imgComment = exImgSrc.findNext(imgCommentExStart, imgCommentExEnd);
 					while (imgComment.startsWith("<br />"))
 						imgComment = imgComment.substring(6);
 					while (imgComment.endsWith("<br />"))



From araber95 at mail.berlios.de  Tue Sep 20 04:07:07 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Tue, 20 Sep 2011 04:07:07 PM +0200
Subject: [Cachewolf-svn] r3106 - in trunk: res_noewe src/CacheWolf
Message-ID: <20110920140707.6BE64481359@sheep.berlios.de>

Author: araber95
Date: 2011-09-20 16:07:07 +0200 (Tue, 20 Sep 2011)
New Revision: 3106

Modified:
   trunk/res_noewe/spider.def
   trunk/src/CacheWolf/Version.java
Log:
mod of regex for owner extraction (reported by Kappler for GC2YFT2)

Modified: trunk/res_noewe/spider.def
===================================================================
--- trunk/res_noewe/spider.def	2011-09-20 12:31:26 UTC (rev 3105)
+++ trunk/res_noewe/spider.def	2011-09-20 14:07:07 UTC (rev 3106)
@@ -70,7 +70,7 @@
 shortDescRex       = tBody_ShortDescription">((?s).*?)</span>
 longDescRex        = tBody_LongDescription">((?s).*?)<strong>\\s+Additional\ Hints</strong>
 cacheNameRex       = tBody_CacheName">((?s).*?)</span>
-cacheOwnerRex      = &wid(?:(?s).*?)>((?s).*?)<
+cacheOwnerRex      = &wid=(?:(?s).*?)>((?s).*?)<
 dateHiddenRex      = (?:Hidden|Event\ Date)\\s*:\\s*((?s).*?)<
 hintsRex           = <div\ id="div_hint"\ class="span-8\ WrapFix">\\s*((?s).*?)\\s*</div>
 sizeRex            = alt="Size:\ ((?s).*?)"

Modified: trunk/src/CacheWolf/Version.java
===================================================================
--- trunk/src/CacheWolf/Version.java	2011-09-20 12:31:26 UTC (rev 3105)
+++ trunk/src/CacheWolf/Version.java	2011-09-20 14:07:07 UTC (rev 3106)
@@ -124,7 +124,6 @@
 	 * @param url
 	 * @return: 1 = newer Version available, 0 = this is up to date, 3 = check failed
 	 */
-
 	private static int checkVersion(Properties curvers, String prefix, int t) {
 		try {
 			int curvmaj = Convert.toInt(curvers.getProperty(prefix + "VersionMajor", "0"));



From araber95 at mail.berlios.de  Tue Sep 20 04:12:09 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Tue, 20 Sep 2011 04:12:09 PM +0200
Subject: [Cachewolf-svn] r3107 - trunk/src/CacheWolf
Message-ID: <20110920141209.8D739481359@sheep.berlios.de>

Author: araber95
Date: 2011-09-20 16:12:09 +0200 (Tue, 20 Sep 2011)
New Revision: 3107

Modified:
   trunk/src/CacheWolf/Version.java
Log:
3107

Modified: trunk/src/CacheWolf/Version.java
===================================================================
--- trunk/src/CacheWolf/Version.java	2011-09-20 14:07:07 UTC (rev 3106)
+++ trunk/src/CacheWolf/Version.java	2011-09-20 14:12:09 UTC (rev 3107)
@@ -119,6 +119,7 @@
 			Vm.showWait(false);
 		}
 	}
+
 	
 	/**
 	 * @param url



From mik77 at mail.berlios.de  Wed Sep 21 03:32:26 2011
From: mik77 at mail.berlios.de (mik77 at mail.berlios.de)
Date: Wed, 21 Sep 2011 03:32:26 PM +0200
Subject: [Cachewolf-svn] r3108 - trunk/src/CacheWolf/imp
Message-ID: <20110921133227.2383A4813CE@sheep.berlios.de>

Author: mik77
Date: 2011-09-21 15:32:26 +0200 (Wed, 21 Sep 2011)
New Revision: 3108

Modified:
   trunk/src/CacheWolf/imp/SpiderGC.java
Log:
 - Don't update all caches nearer than the min distance

Modified: trunk/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-20 14:12:09 UTC (rev 3107)
+++ trunk/src/CacheWolf/imp/SpiderGC.java	2011-09-21 13:32:26 UTC (rev 3108)
@@ -825,6 +825,12 @@
 			if (pref.metricSystem == Metrics.IMPERIAL) {
 				distanceInKm = Metrics.convertUnit(toDistance, Metrics.MILES, Metrics.KILOMETER);
 			}
+			
+			double fromDistanceInKm = fromDistance;
+			if (pref.metricSystem == Metrics.IMPERIAL) {
+				fromDistanceInKm = Metrics.convertUnit(fromDistance, Metrics.MILES, Metrics.KILOMETER);
+			}
+			
 			// expecting all are changed (archived caches remain always)
 			for (int i = 0; i < cacheDB.size(); i++) {
 				final CacheHolder ch = cacheDB.get(i);
@@ -833,7 +839,7 @@
 						cExpectedForUpdate.put(ch.getWayPoint(), ch);
 					}
 				} else {
-					if ((!ch.is_archived()) && (ch.kilom <= distanceInKm) && !(doNotgetFound && (ch.is_found() || ch.is_owned())) && (ch.getWayPoint().substring(0, 2).equalsIgnoreCase("GC"))
+					if ((!ch.is_archived()) && (ch.kilom >= fromDistanceInKm) && (ch.kilom <= distanceInKm) && !(doNotgetFound && (ch.is_found() || ch.is_owned())) && (ch.getWayPoint().substring(0, 2).equalsIgnoreCase("GC"))
 							&& ((restrictedCacheType == CacheType.CW_TYPE_ERROR) || (ch.getType() == restrictedCacheType)) && !ch.is_black()) {
 						cExpectedForUpdate.put(ch.getWayPoint(), ch);
 					}



From araber95 at mail.berlios.de  Mon Sep 26 09:19:43 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Mon, 26 Sep 2011 09:19:43 AM +0200
Subject: [Cachewolf-svn] r3109 - in branches/r1.2: . lib/net/ax86
	lib/org/json res_noewe res_noewe/languages src/CacheWolf
	src/CacheWolf/exp src/CacheWolf/imp src/CacheWolf/navi
	src/CacheWolf/utils src/CacheWolf/view/pda
Message-ID: <20110926071943.86B4C48120D@sheep.berlios.de>

Author: araber95
Date: 2011-09-26 09:19:42 +0200 (Mon, 26 Sep 2011)
New Revision: 3109

Modified:
   branches/r1.2/CacheWolf.launch
   branches/r1.2/build.xml
   branches/r1.2/compile.sh
   branches/r1.2/cw-jar.jnf
   branches/r1.2/cw-pc.jnf
   branches/r1.2/cw-pda.jnf
   branches/r1.2/cw-ppc2003.jnf
   branches/r1.2/fwrtsnapshot.sh
   branches/r1.2/lib/net/ax86/GPS.class
   branches/r1.2/lib/net/ax86/GPSException.class
   branches/r1.2/lib/net/ax86/GPSHook.class
   branches/r1.2/lib/net/ax86/GPSTest.class
   branches/r1.2/lib/org/json/JSONArray.class
   branches/r1.2/lib/org/json/JSONException.class
   branches/r1.2/lib/org/json/JSONObject$Null.class
   branches/r1.2/lib/org/json/JSONObject.class
   branches/r1.2/lib/org/json/JSONString.class
   branches/r1.2/lib/org/json/JSONTokener.class
   branches/r1.2/lib/org/json/Test$1Obj.class
   branches/r1.2/lib/org/json/Test.class
   branches/r1.2/res_noewe/languages/DE.cfg
   branches/r1.2/res_noewe/languages/EN.cfg
   branches/r1.2/res_noewe/languages/FR.cfg
   branches/r1.2/res_noewe/languages/NL.cfg
   branches/r1.2/res_noewe/languages/PL.cfg
   branches/r1.2/res_noewe/languages/SV.cfg
   branches/r1.2/res_noewe/spider.def
   branches/r1.2/src/CacheWolf/Attributes.java
   branches/r1.2/src/CacheWolf/CWPoint.java
   branches/r1.2/src/CacheWolf/CacheHolder.java
   branches/r1.2/src/CacheWolf/CacheSize.java
   branches/r1.2/src/CacheWolf/CacheTerrDiff.java
   branches/r1.2/src/CacheWolf/CacheType.java
   branches/r1.2/src/CacheWolf/DetailsPanel.java
   branches/r1.2/src/CacheWolf/Extractor.java
   branches/r1.2/src/CacheWolf/MainMenu.java
   branches/r1.2/src/CacheWolf/MainTab.java
   branches/r1.2/src/CacheWolf/Matrix.java
   branches/r1.2/src/CacheWolf/Preferences.java
   branches/r1.2/src/CacheWolf/Profile.java
   branches/r1.2/src/CacheWolf/UrlFetcher.java
   branches/r1.2/src/CacheWolf/Version.java
   branches/r1.2/src/CacheWolf/exp/KMLExporter.java
   branches/r1.2/src/CacheWolf/imp/OCXMLImporter.java
   branches/r1.2/src/CacheWolf/imp/SpiderGC.java
   branches/r1.2/src/CacheWolf/myTableModel.java
   branches/r1.2/src/CacheWolf/navi/MapLoader.java
   branches/r1.2/src/CacheWolf/navi/MovingMap.java
   branches/r1.2/src/CacheWolf/utils/URLUTF8Encoder.java
   branches/r1.2/src/CacheWolf/view/pda/PDAList.java
   branches/r1.2/src/CacheWolf/view/pda/PDAListButton.java
   branches/r1.2/src/CacheWolf/view/pda/PDAListButtonObject.java
   branches/r1.2/src/CacheWolf/view/pda/PDAMenuButtonObject.java
   branches/r1.2/src/CacheWolf/view/pda/PDATravelbugScreen.java
Log:
New release based on NB 3107 (1.3) without https additions. (please insert userID manually)

Modified: branches/r1.2/CacheWolf.launch
===================================================================
--- branches/r1.2/CacheWolf.launch	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/CacheWolf.launch	2011-09-26 07:19:42 UTC (rev 3109)
@@ -1,4 +1,4 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+???<?xml version="1.0" encoding="UTF-8"?>
 <launchConfiguration type="org.eclipse.jdt.launching.localJavaApplication">
 <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
 <listEntry value="/CacheWolf"/>
@@ -6,6 +6,7 @@
 <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
 <listEntry value="4"/>
 </listAttribute>
+<booleanAttribute key="org.eclipse.debug.core.appendEnvironmentVariables" value="true"/>
 <listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
 <listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#13;&#10;&lt;runtimeClasspathEntry path=&quot;3&quot; projectName=&quot;CacheWolf&quot; type=&quot;1&quot;/&gt;&#13;&#10;"/>
 <listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#13;&#10;&lt;runtimeClasspathEntry internalArchive=&quot;/CacheWolf/lib/JavaEwe.zip&quot; path=&quot;3&quot; type=&quot;2&quot;/&gt;&#13;&#10;"/>

Modified: branches/r1.2/build.xml
===================================================================
--- branches/r1.2/build.xml	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/build.xml	2011-09-26 07:19:42 UTC (rev 3109)
@@ -334,7 +334,7 @@
 		<javac source="1.3" target="1.1" encoding="windows-1252"
 			classpath="./lib/CompileEwe.zip:./lib/" destdir="${classes.dir}"
 			deprecation="off" nowarn="on" srcdir="src"
-			includes="CacheWolf/*.java,CacheWolf/*/*.java" />
+			includes="CacheWolf/*.java,CacheWolf/*/*.java,org/*.java,org/*/*.java" />
 
 	</target>
 

Modified: branches/r1.2/compile.sh
===================================================================
--- branches/r1.2/compile.sh	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/compile.sh	2011-09-26 07:19:42 UTC (rev 3109)
@@ -2,7 +2,7 @@
 
 ENCODING=${ENCODING:-windows-1252}
 
-do_compile() {
+compile_cw() {
    javac \
       -source 1.3 \
       -target 1.1 \
@@ -13,11 +13,27 @@
       "$@"
 }
 
-do_compile \
+compile_json() {
+   javac \
+      -source 1.3 \
+      -target 1.1 \
+      -encoding "${ENCODING}" \
+      -cp ./lib/CompileEwe.zip:./lib/ \
+      -deprecation \
+      -nowarn \
+      "$@"
+}
+
+compile_cw \
    -d ./bin/ \
+   ./src/org/bouncycastle/*/*.java \
+   ./src/org/bouncycastle/*/*/*.java \
+   ./src/org/bouncycastle/*/*/*/*.java \
+   ./src/CacheWolf/*/*/*.java \
+   ./src/CacheWolf/*/*.java
    ./src/CacheWolf/*.java \
    ./src/CacheWolf/*/*/*.java \
    ./src/CacheWolf/*/*.java
-do_compile \
+compile_json \
    lib/net/*/*.java \
    lib/org/*/*.java

Modified: branches/r1.2/cw-jar.jnf
===================================================================
--- branches/r1.2/cw-jar.jnf	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/cw-jar.jnf	2011-09-26 07:19:42 UTC (rev 3109)
@@ -1 +1 @@
-command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DJar%25252B-%25252BJava%25252B1.2&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%26addCommandLine%
 3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico
+command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DJar%25252B-%25252BJava%25252B1.2&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%2526ewesoft/apps/
 jewel/EweDirEntry%253Dpath%25253Dbin/org/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253Dorg/%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico

Modified: branches/r1.2/cw-pc.jnf
===================================================================
--- branches/r1.2/cw-pc.jnf	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/cw-pc.jnf	2011-09-26 07:19:42 UTC (rev 3109)
@@ -1 +1 @@
-command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D-Xms%2B64M%2B-Xmx%2B192M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253Dx86%25252B-%25252BWin32%25252B-%25252BStatic%25252BLinked&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25
 253Dtrue%252526pathInEwe%25253D%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D-Xms%252B64M%252B-Xmx%252B192M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico
+command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D-Xms%2B64M%2B-Xmx%2B192M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253Dx86%25252B-%25252BWin32%25252B-%25252BStatic%25252BLinked&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25
 253Dtrue%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/org%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253Dorg/%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D-Xms%252B64M%252B-Xmx%252B192M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico

Modified: branches/r1.2/cw-pda.jnf
===================================================================
--- branches/r1.2/cw-pda.jnf	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/cw-pda.jnf	2011-09-26 07:19:42 UTC (rev 3109)
@@ -1 +1 @@
-command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D/Xmx%2B6M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DPocketPC%25252B-%25252BARM/XScale%252526%25253DPocketPC%25252B-%25252BMIPS%252526%25253DPocketPC%25252B-%25252BSH3&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25
 253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D/Xmx%252B6M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico
+command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D/Xmx%2B6M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DPocketPC%25252B-%25252BARM/XScale%252526%25253DPocketPC%25252B-%25252BMIPS%252526%25253DPocketPC%25252B-%25252BSH3&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25
 253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/org%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253Dorg/%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D/Xmx%252B6M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico

Modified: branches/r1.2/cw-ppc2003.jnf
===================================================================
--- branches/r1.2/cw-ppc2003.jnf	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/cw-ppc2003.jnf	2011-09-26 07:19:42 UTC (rev 3109)
@@ -1 +1 @@
-command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D/Xmx%2B6M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DPocketPC%25252B2003&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%26addCommandLine%3Dtr
 ue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D/Xmx%252B6M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico
+command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D/Xmx%2B6M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DPocketPC%25252B2003&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%2526ewesoft/apps/jewe
 l/EweDirEntry%253Dpath%25253Dbin/org%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253Dorg/%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D/Xmx%252B6M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico

Modified: branches/r1.2/fwrtsnapshot.sh
===================================================================
--- branches/r1.2/fwrtsnapshot.sh	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/fwrtsnapshot.sh	2011-09-26 07:19:42 UTC (rev 3109)
@@ -19,7 +19,8 @@
 mkdir -p bin/CacheWolf
 javac -source 1.3 -target 1.1 -encoding windows-1252 \
      -cp lib/CompileEwe.zip:lib -d bin -deprecation -nowarn \
-     src/CacheWolf/*.java src/CacheWolf/*/*.java src/CacheWolf/navi/touchControls/*.java src/CacheWolf/view/*/*.java	 
+     src/CacheWolf/*.java src/CacheWolf/*/*.java src/CacheWolf/navi/touchControls/*.java src/CacheWolf/view/*/*.java \
+	 src/org/bouncycastle/*/*.java src/org/bouncycastle/*/*/*.java src/org/bouncycastle/*/*/*/*.java
 javac -source 1.3 -target 1.1 -encoding windows-1252 \
     -cp ./lib/CompileEwe.zip:lib -d lib -deprecation -nowarn \
 	lib/net/ax86/*.java ./lib/org/json/*.java

Modified: branches/r1.2/lib/net/ax86/GPS.class
===================================================================
(Binary files differ)

Modified: branches/r1.2/lib/net/ax86/GPSException.class
===================================================================
(Binary files differ)

Modified: branches/r1.2/lib/net/ax86/GPSHook.class
===================================================================
(Binary files differ)

Modified: branches/r1.2/lib/net/ax86/GPSTest.class
===================================================================
(Binary files differ)

Modified: branches/r1.2/lib/org/json/JSONArray.class
===================================================================
(Binary files differ)

Modified: branches/r1.2/lib/org/json/JSONException.class
===================================================================
(Binary files differ)

Modified: branches/r1.2/lib/org/json/JSONObject$Null.class
===================================================================
(Binary files differ)

Modified: branches/r1.2/lib/org/json/JSONObject.class
===================================================================
(Binary files differ)

Modified: branches/r1.2/lib/org/json/JSONString.class
===================================================================
(Binary files differ)

Modified: branches/r1.2/lib/org/json/JSONTokener.class
===================================================================
(Binary files differ)

Modified: branches/r1.2/lib/org/json/Test$1Obj.class
===================================================================
(Binary files differ)

Modified: branches/r1.2/lib/org/json/Test.class
===================================================================
(Binary files differ)

Modified: branches/r1.2/res_noewe/languages/DE.cfg
===================================================================
--- branches/r1.2/res_noewe/languages/DE.cfg	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/res_noewe/languages/DE.cfg	2011-09-26 07:19:42 UTC (rev 3109)
@@ -140,7 +140,6 @@
 213=Verwaiste .xml Dateien l??schen
 214=Neuer Wegpunkt
 215=nach LOC
-216=Immer bei GC einloggen
 217=von GC Funde
 218=Auch in Beschreibung/Notizen
 219=Suche...
@@ -1105,8 +1104,8 @@
 7301=Stadt
 7302=Suchen
 7303=Abbr.
-7304=berlin, deutschland
-7305=Hauptbahnhof
+7304=Berlin
+7305=
 7306=suche...
 7307=abgebrochen durch Nutzer
 7308=Fehler bei der online Verbindung

Modified: branches/r1.2/res_noewe/languages/EN.cfg
===================================================================
--- branches/r1.2/res_noewe/languages/EN.cfg	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/res_noewe/languages/EN.cfg	2011-09-26 07:19:42 UTC (rev 3109)
@@ -140,7 +140,6 @@
 213=Deleting orphans
 214=New Waypoint
 215=to LOC
-216=Always login to GC
 217=from GC finds
 218=Also in description/notes
 219=Searching...

Modified: branches/r1.2/res_noewe/languages/FR.cfg
===================================================================
--- branches/r1.2/res_noewe/languages/FR.cfg	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/res_noewe/languages/FR.cfg	2011-09-26 07:19:42 UTC (rev 3109)
@@ -140,7 +140,6 @@
 213=Effacer les fichier .xml orpheline
 214=Nouveau waypoint
 215=?? LOC
-216=Toujours connecter
 217=de GC trouvailles
 218=Aussi dans description/notes
 219=Cherchant...

Modified: branches/r1.2/res_noewe/languages/NL.cfg
===================================================================
--- branches/r1.2/res_noewe/languages/NL.cfg	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/res_noewe/languages/NL.cfg	2011-09-26 07:19:42 UTC (rev 3109)
@@ -140,7 +140,6 @@
 213=[Deleting orphans]
 214=Nieuwe Waypoint
 215=aan LOC
-216=Altijd aanmelden bij GC
 217=van GC vondsten
 218=Ook in opmerkingen/beschrijving
 219=Zoeken...

Modified: branches/r1.2/res_noewe/languages/PL.cfg
===================================================================
--- branches/r1.2/res_noewe/languages/PL.cfg	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/res_noewe/languages/PL.cfg	2011-09-26 07:19:42 UTC (rev 3109)
@@ -140,7 +140,6 @@
 213=Usuwanie sierot
 214=Nowy WaypointUsunacUsunac
 215=LOC
-216=Zawsze loguj do GC
 217=z GC stwierdza
 218=Takze w opisie/notatkach
 219=Wyszukiwanie...

Modified: branches/r1.2/res_noewe/languages/SV.cfg
===================================================================
--- branches/r1.2/res_noewe/languages/SV.cfg	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/res_noewe/languages/SV.cfg	2011-09-26 07:19:42 UTC (rev 3109)
@@ -140,7 +140,6 @@
 213=bort f??r??ldral??sa
 214=Ny v??gpunkt
 215=f??r LOC
-216=alltid logga in till GC
 217=fr??n GC finner
 218=??ven i beskrivningen / Notes
 219=S??ker ...

Modified: branches/r1.2/res_noewe/spider.def
===================================================================
--- branches/r1.2/res_noewe/spider.def	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/res_noewe/spider.def	2011-09-26 07:19:42 UTC (rev 3109)
@@ -1,49 +1,5 @@
 #============================================================
 # spider.def - Definition file for reading caches from GC.COM
-# Version 1.0 - 20070526 skg
-# Version 2.0 - 20070531 nach GC ?nderungen
-# Version 2.1 - 20070601 TB Anpassung an GC ?nderung
-# Version 2.2 - 20070602 firstLine erg?nzt. Damit funktionieren jetzt auch die n?chsten Seiten.
-# Version 2.3 - 20070602 sizeRex an GC ?nderungen angepasst
-# Version 2.4 - 20070616 neu: Attribute
-# Version 2.5 - 20070629 Anpassungen an Listen?nderung bei GC
-# Version 2.6 - 20070701 Bugfix: Wenn Zentrum exakt in Cachekoordinaten liegt wurde der Cache nicht gespidert
-# Version 2.7 - 20070811 Bugfix fuer verschluesselte Logs
-# Version 2.8 - 20070814 Findet jetzt auch Addi Wpts in eigenen Caches
-# Version 2.9 - 20070817 Bessere Unterscheidung zwischen Werbung vs.normalen Caches + Caches ohne Richtung/Entfenung
-# Version 2.10 - 20070825 Travelbug support
-# Version 2.11 - 20070907 get travelbug mission by tracking number
-# Version 3.0 - 20071010 adaption to new GC-design
-# Version 3.1 - 20071013 Use the given prefix for addi waypoints
-# Version 3.2 - 20071024 longer end sequence for longDescRex
-# Version 3.3 - 20080316 get travelbug name by tracking number
-# Version 3.4 - 20080227 Image comments added
-# Version 3.5 - 20080529 Modified descRex to allow for linebreaks
-# Version 3.6 - 20080531 Modified descRex to avoid Stack overflow in exe
-# Version 3.7 - 20080613 Some lines generalized for proxies replacing the images.
-# Version 4.0 - 20080725 adaption to new GC-design
-# Version 4.1 - 20080725 adaption to new GC-design (images and travelbugs)
-# Version 4.2 - 20081031 Fix for cache type (background image with name of type)
-# Version 4.3 - 20090314 maxDistance string added
-# Version 4.4 - 20090314 firstPageFinds string added
-# Version 4.5 - 20090315 strings for spidering country/state/logId
-# Version 4.6 - 20090406 Fix for country/state (did not work with US caches)
-# Version 4.7 - 20090521 Strings for single cache types added
-# Version 4.8 - 20090805 More specific unavailability detection
-# Version 4.9 - 20091018 Should work now with proxies and cachetypes as background
-# Version 4.10- 20091021 Tags in Description are now correctly closed
-# Version 4.11- 20091023 Reverted last change, because it doesn't work with EWE/EXE
-# Version 5.0 - 20091105 adaption to new GC-design
-# Version 6.0 - 20100113 adaption to new GC-design
-# Version 6.1 - 20100305 better log recognition
-# Version 7.0 - 20100402 adaption to new GC-design
-# Version 7.1 - 20100528 better description recognition
-# Version 8.0 - 20100604 adaption to new GC-design
-# Version 9.0 - 20100630 adaption to new GC-design
-# Version 10.0 - 20100729 adaption to new GC-design DateHiddenrex , optimized cacheOwnerRex araber95
-# Version 11.0 - 20101110 adaption to new GC-design (maybe not complete)
-# Version 12.0 - 20101223 first little adaption to new GC-design (logs)
-# Version 12.0 - 20101224 adaption to new GC-design (decode distance)
 #============================================================
 # A suffix of Rex indicates a regular expression
 # A suffix of ExStart indicates the start of an Extractor search pattern
@@ -51,6 +7,7 @@
 #
 # Important:
 # * When entering spaces into a string ensure to escape them or write them as \\u0020
+# * escaping space should not be necessary
 # * Be sure that you have no hidden spaces at the end of a line or the patterns will not match!
 #------------------------------------------------------------
 #loginPage          = http://www.geocaching.com/login/default.aspx
@@ -113,7 +70,7 @@
 shortDescRex       = tBody_ShortDescription">((?s).*?)</span>
 longDescRex        = tBody_LongDescription">((?s).*?)<strong>\\s+Additional\ Hints</strong>
 cacheNameRex       = tBody_CacheName">((?s).*?)</span>
-cacheOwnerRex      = &wid(?:(?s).*?)>((?s).*?)<
+cacheOwnerRex      = &wid=(?:(?s).*?)>((?s).*?)<
 dateHiddenRex      = (?:Hidden|Event\ Date)\\s*:\\s*((?s).*?)<
 hintsRex           = <div\ id="div_hint"\ class="span-8\ WrapFix">\\s*((?s).*?)\\s*</div>
 sizeRex            = alt="Size:\ ((?s).*?)"
@@ -125,25 +82,7 @@
 #--------------------------------------
 #Section2a: Logs
 #--------------------------------------
-# blockRex extrahiert zun?chst aus der gesamten Seite den Logbereich
-blockRex           = <table class="LogsTable">((?s).*?)</table>\\s+<p>
-# singleLogEx extrahiert in einer Schleife alle Logs aus dem Logbereich
-singleLogExStart   = ><strong><img src=
-singleLogExEnd     = <small><a\ href="
-# iconEx, nameTempEx, dateEx, singleLogEx werden auf einen singleLog angewendet
-iconExStart        = www.geocaching.com/images/icons/
-iconExEnd          = \ alt="
-nameTempExStart    = <a\ href='
-nameTempExEnd      = /a>
-# Name extrahiert aus nameTemp
-nameExStart        = >
-nameExEnd          = <
-dateExStart        = "\ />&nbsp;
-dateExEnd          = \ by\ <a\ href='/profile/?guid=
-logExStart         = found)<br\ /><br\ />
-logExEnd           = <br\ /><br\ /><small><a\ href="
-logIdExStart         = '\ id='
-logIdExEnd           = '>
+UserTokenRex       = userToken = '((?s).*?)';
 # Die Icons, die einen erfolgreichen Fund signalisieren
 icon_smile         = icon_smile.gif
 icon_camera        = icon_camera.gif
@@ -183,14 +122,15 @@
 imgBlockExStart    = <IMG
 imgBlockExEnd      = >
 # imgSpanEx searches for images in the image section
-imgSpanExStart     = <span id="ctl00_ContentBody_Images">
-imgSpanExEnd       = </p>
-imgNameExStart     = "\ />\ <span>
-imgNameExEnd       = </span></a>
-imgSrcExStart      = <a\ href="http://
-imgSrcExEnd        = "\ rel="lightbox"
-imgCommentExStart  = </a><br\ /><br\ />
-imgCommentExEnd    = <
+imgSpanExStart     = ctl00_ContentBody_MapLinks_MapLinks
+imgSpanExStart2    = <p class="NoPrint">
+imgSpanExEnd       = InformationWidget Clear
+imgSrcExStart      = <a href="http://
+imgSrcExEnd        = " rel="lightbox"
+imgNameExStart     = <span>
+imgNameExEnd       = </span>
+imgCommentExStart  = </a><br />
+imgCommentExEnd    = <br /><br />
 
 #--------------------------------------
 #Section2d: Additional waypoints

Modified: branches/r1.2/src/CacheWolf/Attributes.java
===================================================================
--- branches/r1.2/src/CacheWolf/Attributes.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/Attributes.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -46,7 +46,7 @@
 
 	/**
 	 * Get the number of attributes in the list
-	 * 
+	 *
 	 * @return number of attributes
 	 */
 	public int count() {
@@ -65,8 +65,7 @@
 	}
 
 	/**
-	 * Filling the Attributes from Cache.xml (CacheHolderDetail)
-	 * todo : remove this "historic" reprensentation , saving as Bits should be enough (araber95)
+	 * Filling the Attributes from Cache.xml (CacheHolderDetail) todo : remove this "historic" reprensentation , saving as Bits should be enough (araber95)
 	 */
 	public void XmlAttributesEnd(String elem) {
 		clear();
@@ -78,8 +77,7 @@
 	}
 
 	/**
-	 * Prepare for attributes to be written to cache.xml file
-	 * todo : remove this "historic" reprensentation , saving as Bits should be enough (araber95)
+	 * Prepare for attributes to be written to cache.xml file todo : remove this "historic" reprensentation , saving as Bits should be enough (araber95)
 	 */
 	public String XmlAttributesWrite() {
 		StringBuffer sb = new StringBuffer(1000);
@@ -95,7 +93,7 @@
 
 	/**
 	 * Add a new attribute to the array by Name, meaning its icon picture name
-	 * 
+	 *
 	 * @param attributeName
 	 */
 	public void add(String attributeName) {
@@ -111,11 +109,11 @@
 
 	/**
 	 * Add a new attribute to the array by ID and Inc as you get it from GC gpx-File
-	 * 
+	 *
 	 * @param GC
-	 *            attribute ID
+	 *          attribute ID
 	 * @param GC
-	 *            attribute Inc (attribute set = 0 ,attribute not set = 1)
+	 *          attribute Inc (attribute set = 0 ,attribute not set = 1)
 	 */
 	public void add(int attIdGC, String Yes1No0) {
 		if (_count < attribs.length) {
@@ -142,9 +140,9 @@
 
 	/**
 	 * Add a new attribute to the array by OC-IDas you get it from OC xml/zip-download
-	 * 
+	 *
 	 * @param OC
-	 *            attribute ID
+	 *          attribute ID
 	 */
 	public void add(int attIdOC) {
 		Attribute attr = new Attribute(attIdOC);
@@ -161,7 +159,7 @@
 
 	/**
 	 * to get the Bit Representation of the Attributs of this Cache
-	 * 
+	 *
 	 * @return the Long array representing the Attributes of this Cache
 	 */
 	public long[] getAttribsAsBits() {
@@ -175,9 +173,9 @@
 
 	/**
 	 * Get the i-th attribute
-	 * 
+	 *
 	 * @param i
-	 *            The number for which the attribute is to be retrieved
+	 *          The number for which the attribute is to be retrieved
 	 * @return The attribute
 	 */
 	public Attribute getAttribute(int i) {

Modified: branches/r1.2/src/CacheWolf/CWPoint.java
===================================================================
--- branches/r1.2/src/CacheWolf/CWPoint.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/CWPoint.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -357,10 +357,13 @@
 	 */
 	public String getLatDeg(int format) {
 		switch (format) {
-		case TransformCoordinates.DD: 	return MyLocale.formatDouble(this.latDec, "00.00000").replace(',','.');
+		case TransformCoordinates.DD: 	
+			return MyLocale.formatDouble(this.latDec, "00.00000").replace(',','.');
 		case TransformCoordinates.DMM:
-		case TransformCoordinates.DMS:	return getDMS(latDec,0,format);
-		default: return "";
+		case TransformCoordinates.DMS:	
+			return getDMS(latDec,0,format);
+		default: 
+			return "";
 		}
 	}
 	
@@ -572,7 +575,8 @@
 	public String toString(int format){
 		if (!isValid()) return MyLocale.getMsg(999,"not set");
 		switch (format) {
-		case TransformCoordinates.DD:	return getNSLetter() + " " + STRreplace.replace(getLatDeg(format),"-","") + "? "
+		case TransformCoordinates.DD:	
+			return getNSLetter() + " " + STRreplace.replace(getLatDeg(format),"-","") + "? "
 						+  getEWLetter() + " " + STRreplace.replace(getLonDeg(format),"-","")+ "?";
 		case TransformCoordinates.DMM:	return getNSLetter() + " " + getLatDeg(format) + "? " + getLatMin(format) + " "
 						+  getEWLetter() + " " + getLonDeg(format) + "? " + getLonMin(format);

Modified: branches/r1.2/src/CacheWolf/CacheHolder.java
===================================================================
--- branches/r1.2/src/CacheWolf/CacheHolder.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/CacheHolder.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -48,7 +48,7 @@
 /**
  * A class to hold information on a cache.<br>
  * Not all attributes are filled at once. You will have to look at other classes and methods to get more information.
- * 
+ *
  */
 public class CacheHolder {
 	protected static final String NOBEARING = "?";
@@ -425,7 +425,7 @@
 
 	/**
 	 * Returns the distance in formatted output. Using kilometers when metric system is active, using miles when imperial system is active.
-	 * 
+	 *
 	 * @return The current distance.
 	 */
 	public String getDistance() {
@@ -463,7 +463,7 @@
 	/**
 	 * Updates Cache information with information provided by cache given as argument. This is used to update the cache with the information retrieved from files or web: The argument cache is the one that is filled with the read information,
 	 * <code>this</code> is the cache that is already in the database and subject to update.
-	 * 
+	 *
 	 * @param ch
 	 *            The cache who's information is updating the current one
 	 * @param overwrite
@@ -612,7 +612,14 @@
 		if (isAddiWpt()) {
 			CacheHolder ch = this.mainCache;
 			varParams.put("MAINWP", ch.getWayPoint());
-			varParams.put("MAINWPNAME", ch.getCacheName());
+			String cn = ch.getCacheName();
+			if (codec instanceof AsciiCodec) {
+				cn = Exporter.simplifyString(cn);
+			} // use for "NAME"
+			if (badChars != null) {
+				cn = badChars.replaceAll(cn);
+			} // use for "NAME"
+			varParams.put("MAINWPNAME", cn);
 			varParams.put("DIFFICULTY", (ch.hard < 0) ? "!<!" : decSep.replaceAll(CacheTerrDiff.longDT(ch.hard)));
 			String sHard = Integer.toString(ch.hard);
 			varParams.put("SHORTDIFFICULTY", (ch.hard < 0) ? "" : sHard);
@@ -697,6 +704,7 @@
 			varParams.put("COUNTRY", "");
 			varParams.put("STATE", "");
 		} else {
+			// todo &lt;br&gt;
 			varParams.put("URL", det.URL);
 			if (html) {
 				if (ModTyp == 0) {
@@ -844,7 +852,7 @@
 
 	/**
 	 * generate a gc.com compatible string representation of log derived from the internally stored image
-	 * 
+	 *
 	 * @param image
 	 *            name of the image to display
 	 * @return log type. will default to "Write note" for unknown logtypes
@@ -887,7 +895,7 @@
 
 	/**
 	 * Modify the image links in the long description so that they point to image files in the local directory Also copy the image file to the target directory so that it can be displayed.
-	 * 
+	 *
 	 * @param chD
 	 *            CacheHolderDetail
 	 * @param int ModTypLongDesc == 1 get image from profile path, == 2 get image from html-path
@@ -1045,7 +1053,7 @@
 
 	/**
 	 * True if ch and this belong to the same main cache.
-	 * 
+	 *
 	 * @param ch
 	 * @return
 	 */
@@ -1070,7 +1078,7 @@
 
 	/**
 	 * Find out of detail object of Cache is loaded. Returns <code>true</code> if this is the case.
-	 * 
+	 *
 	 * @return True when details object is present
 	 */
 	public boolean detailsLoaded() {
@@ -1081,7 +1089,7 @@
 	 * Gets the detail object of a cache. The detail object stores information which is not needed for every cache instantaneously, but can be loaded if the user decides to look at this cache. If the cache object is already existing, the method will
 	 * return this object, otherwise it will create it and try to read it from the corresponding <waypoint>.xml file. Depending on the parameters it is allowed that the <waypoint>.xml file does not yet exist, or the user is warned that the file doesn't
 	 * exist. If more than <code>maxdetails</code> details are loaded, then the 5 last recently loaded caches are unloaded (to save ram).
-	 * 
+	 *
 	 * @param alarmuser
 	 *            If true an error message will be displayed to the user, if the details could not be read, and the method returns null
 	 * @return The respective CacheHolderDetail, or null
@@ -1328,7 +1336,7 @@
 
 	/**
 	 * Initializes the caches states (and its addis) before updating, so that the "new", "updated", "log_updated" and "incomplete" properties are properly set.
-	 * 
+	 *
 	 * @param pNewCache
 	 *            <code>true</code> if it is a new cache (i.e. a cache not existing in CacheDB), <code>false</code> otherwise.
 	 */
@@ -1346,7 +1354,7 @@
 
 	/**
 	 * Creates a bit field of boolean values of the cache, represented as a long value. Boolean value of <code>true</code> results in <code>1</code> in the long values bits, and, vice versa, 0 for false.
-	 * 
+	 *
 	 * @return long value representing the boolean bit field
 	 */
 	private long boolFields2long() {
@@ -1362,7 +1370,7 @@
 	/**
 	 * Creates a field of byte values of certain properties of the cache, represented as a long value. As a long is 8 bytes wide, one might pack 8 bytes into a long, one every 8 bits. The position indicates the group of bits where the byte is packed,
 	 * counting starting from one by the right side of the long.
-	 * 
+	 *
 	 * @return long value representing the byte field
 	 */
 	private long byteFields2long() {
@@ -1372,7 +1380,7 @@
 
 	/**
 	 * Evaluates byte values from a long value for certain properties of the cache.
-	 * 
+	 *
 	 * @param value
 	 *            The long value which contains up to 8 bytes.
 	 */
@@ -1390,7 +1398,7 @@
 
 	/**
 	 * convert a v2 byte filed to the current structures
-	 * 
+	 *
 	 * @param value
 	 */
 	private void long2byteFieldsv2(long value) {
@@ -1418,7 +1426,7 @@
 
 	/**
 	 * Extracts a byte from a long value. The position is the number of the 8-bit block of the long (which contains 8 8-bit blocks), counted from 1 to 8, starting from the right side of the long.
-	 * 
+	 *
 	 * @param value
 	 *            The long value which contains the bytes
 	 * @param position
@@ -1432,7 +1440,7 @@
 
 	/**
 	 * Evaluates boolean values from a long value, which is seen as bit field.
-	 * 
+	 *
 	 * @param value
 	 *            The bit field as long value
 	 */
@@ -1455,7 +1463,7 @@
 
 	/**
 	 * Represents a bit mask as long value for a boolean value which is saved at a specified position in the long field.
-	 * 
+	 *
 	 * @param value
 	 *            The boolean value we want to code
 	 * @param position
@@ -1472,7 +1480,7 @@
 
 	/**
 	 * Coding a long field which has only the bits of the byte value set. The position is the number (from 1 to 8) of the byte block which is used from the long.
-	 * 
+	 *
 	 * @param value
 	 *            Byte to encode
 	 * @param position
@@ -1487,7 +1495,7 @@
 	/**
 	 * Returns <code>true</code> if the waypoint should appear in the cache list, <code>false</code> if it should not appear.<br>
 	 * The method takes into account blacklist, filters, search results - everything that determines if a cache is visible in the list or not.
-	 * 
+	 *
 	 * @return
 	 */
 	public boolean isVisible() {
@@ -1518,7 +1526,7 @@
 
 	/**
 	 * Gets an IconAndText object for the cache. If the level of the Icon is equal to the last call of the method, the same (cached) object is returned. If the object is null or the level is different, a new object is created.<br>
-	 * 
+	 *
 	 * @param level
 	 *            4=is_incomplete(), 3=is_new(), 2=is_updated(), 1=is_log_updated
 	 * @param fm
@@ -1626,7 +1634,7 @@
 
 	/**
 	 * Gets the type of cache as integer.
-	 * 
+	 *
 	 * @return Cache type
 	 */
 	public byte getType() {
@@ -1635,7 +1643,7 @@
 
 	/**
 	 * Sets the type of the cache. As the cache type values are int for the rest of CacheWolf and byte internally of CacheHolder, some conversion has to be done.
-	 * 
+	 *
 	 * @param typeId
 	 *            Cache Type
 	 */
@@ -1698,7 +1706,7 @@
 	/**
 	 * If this returns <code>true</code>, then the additional waypoints for this cache should be displayed regardless how the filter is set. If it is <code>false</code>, then the normal filter settings apply.<br>
 	 * This property is not saved in index.xml, so if you reload the data, then this information is gone.
-	 * 
+	 *
 	 * @return <code>True</code>: Always display additional waypoints for cache.
 	 */
 	public boolean showAddis() {
@@ -1708,7 +1716,7 @@
 	/**
 	 * Setter for <code>showAddis()</code>. If this returns <code>true</code>, then the additional waypoints for this cache should be displayed regardless how the filter is set. If it is <code>false</code>, then the normal filter settings apply.<br>
 	 * This property is not saved in index.xml, so if you reload the data, then this information is gone.
-	 * 
+	 *
 	 * @param value
 	 *            <code>True</code>: Always display additional waypoints for cache.
 	 */
@@ -1748,7 +1756,7 @@
 	 * </ul>
 	 * The new method for deciding if a cache is visible or not is <code>isVisible()
 	 * </code>.
-	 * 
+	 *
 	 * @return <code>True</code> if filter criteria are matched
 	 */
 	public boolean is_filtered() {
@@ -1835,7 +1843,7 @@
 	/**
 	 * Determines if the blacklist status is set for the cache. Do not use this method to check if the cache should be displayed. Use <code>isVisible()</code> for this, which already does this (and other) checks.<br>
 	 * Only use this method if you really want to inform yourself about the black status of the cache!
-	 * 
+	 *
 	 * @return <code>true</code> if he black status of the cache is set.
 	 */
 	public boolean is_black() {
@@ -1967,7 +1975,7 @@
 
 	/**
 	 * rename a waypoint and all its associated files
-	 * 
+	 *
 	 * @param newWptId
 	 *            new waypoint id (will be converted to upper case)
 	 * @return true on success, false on error

Modified: branches/r1.2/src/CacheWolf/CacheSize.java
===================================================================
--- branches/r1.2/src/CacheWolf/CacheSize.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/CacheSize.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -1,578 +1,578 @@
-    /*
-    GNU General Public License
-    CacheWolf is a software for PocketPC, Win and Linux that
-    enables paperless caching.
-    It supports the sites geocaching.com and opencaching.de
-
-    Copyright (C) 2006  CacheWolf development team
-    See http://developer.berlios.de/projects/cachewolf/
-    for more information.
-    Contact: 	bilbowolf at users.berlios.de
-    			kalli at users.berlios.de
-
-    This program is free software; you can redistribute it and/or modify
-    it under the terms of the GNU General Public License as published by
-    the Free Software Foundation; version 2 of the License.
-
-    This program is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-    GNU General Public License for more details.
-
-    You should have received a copy of the GNU General Public License
-    along with this program; if not, write to the Free Software
-    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-    */
-package CacheWolf;
-
-/**
- * Handles all aspects of converting cache size information from
- * and to the various im- and exporters as well as for converting
- * legacy profiles to current standard
- */
-public final class CacheSize {
-
-	/*
-	 * internal representation of cache sizes in CacheHolder we just made them
-	 * up ;-)
-	 */
-	/** container size not chosen */
-	public static final byte CW_SIZE_NOTCHOSEN = 0;
-	/** container size other */
-	public static final byte CW_SIZE_OTHER = 1;
-	/** container size micro */
-	public static final byte CW_SIZE_MICRO = 2;
-	/* container size small */
-	public static final byte CW_SIZE_SMALL = 3;
-	/** container size regular */
-	public static final byte CW_SIZE_REGULAR = 4;
-	/** container size large */
-	public static final byte CW_SIZE_LARGE = 5;
-	/** container size very large */
-	public static final byte CW_SIZE_VERYLARGE = 6;
-	/** container size none */
-	public static final byte CW_SIZE_NONE = 7;
-	/** container size virtual */
-	public static final byte CW_SIZE_VIRTUAL = 8;
-	/** unparsable size or missing size information should throw IllegalArgumentExceptions when found */
-	public static final byte CW_SIZE_ERROR = -1;
-
-	/*
-	 * geocaching.com size strings as found by analyzing GPX files 
-	 * plus opencaching & terracaching Very large + none
-	 */
-	public static final String GC_SIZE_MICRO = "Micro";
-	public static final String GC_SIZE_SMALL = "Small";
-	public static final String GC_SIZE_REGULAR = "Regular";
-	public static final String GC_SIZE_LARGE = "Large";
-	public static final String GC_SIZE_NOTCHOSEN = "Not chosen";
-	public static final String GC_SIZE_OTHER = "Other";
-	public static final String GC_SIZE_VIRTUAL = "Virtual";
-	public static final String OCTC_SIZE_VERYLARGE = "Very large";
-	public static final String OCTC_SIZE_NONE = "None";
-
-	/*
-	 * OpenCaching Size IDs see
-	 * http://oc-server.svn.sourceforge.net/viewvc/oc-server/doc/sql/static-data/data.sql?view=markup
-	 */
-	public static final String OC_SIZE_OTHER = "1";
-	public static final String OC_SIZE_MICRO = "2";
-	public static final String OC_SIZE_SMALL = "3";
-	public static final String OC_SIZE_NORMAL = "4";
-	public static final String OC_SIZE_LARGE = "5";
-	public static final String OC_SIZE_VERYLARGE = "6";
-	public static final String OC_SIZE_NONE = "7";
-
-	/*
-	 * TerraCaching Size IDs taken from old GPXimporter (?? reliable source ??)
-	 */
-	public static final String TC_SIZE_MICRO = "1";
-	public static final String TC_SIZE_MEDIUM = "2";
-	public static final String TC_SIZE_REGULAR = "3";
-	public static final String TC_SIZE_LARGE = "4";
-	public static final String TC_SIZE_VERYLARGE = "4";
-
-	/*
-	 * images to show in CW index panel we use less images than sizes since all
-	 * non physical caches are represented by the same symbol
-	 */
-	/** GUI image for micro caches */
-	public static final String CW_GUIIMG_MICRO = "sizeMicro.png";
-	/** GUI image for small caches */
-	public static final String CW_GUIIMG_SMALL = "sizeSmall.png";
-	/** GUI image for regular / normal caches */
-	public static final String CW_GUIIMG_NORMAL = "sizeReg.png";
-	/** GUI image for large caches */
-	public static final String CW_GUIIMG_LARGE = "sizeLarge.png";
-	/** GUI image for non physical caches */
-	public static final String CW_GUIIMG_NONPHYSICAL = "sizeNonPhysical.png";
-	/** GUI image for very large caches */
-	public static final String CW_GUIIMG_VERYLARGE = "sizeVLarge.png";
-
-	/*
-	 * IDs for the sizePics[] array in TableModel therefore they must start with
-	 * 0 and be consecutive
-	 */
-	public static final byte CW_GUIIMGID_MICRO = 0;
-	public static final byte CW_GUIIMGID_SMALL = 1;
-	public static final byte CW_GUIIMGID_NORMAL = 2;
-	public static final byte CW_GUIIMGID_LARGE = 3;
-	public static final byte CW_GUIIMGID_NONPHYSICAL = 4;
-	public static final byte CW_GUIIMGID_VERYLARGE = 5;
-
-	/*
-	 * total number of different size images will be used to set the dimension
-	 * of sizePics[] array in TableModel
-	 */
-	public static final byte CW_TOTAL_SIZE_IMAGES = 6;
-
-	/*
-	 * bit masks to be used with the filter function
-	 */
-	public static final byte CW_FILTER_MICRO = 0x01 << 0;
-	public static final byte CW_FILTER_SMALL = 0x01 << 1;
-	public static final byte CW_FILTER_NORMAL = 0x01 << 2;
-	public static final byte CW_FILTER_LARGE = 0x01 << 3;
-	public static final byte CW_FILTER_VERYLARGE = 0x01 << 4;
-	public static final byte CW_FILTER_NONPHYSICAL = 0x01 << 5;
-	public static final byte CW_FILTER_ALL = CW_FILTER_MICRO
-			| CW_FILTER_SMALL | CW_FILTER_NORMAL | CW_FILTER_LARGE
-			| CW_FILTER_NONPHYSICAL | CW_FILTER_VERYLARGE;
-	
-	/** thou shallst not instantiate this object */
-	private CacheSize() { // Nothing to do
-	}
-
-	
-	/**
-	 * map filenames of images for the different sizes to the ids used array
-	 * index for sizePics[] in TableModel
-	 * 
-	 * @param size
-	 *            size identifier matching the CW_GUIIMGID_ constants
-	 * @return filename of image to be displayed for id
-	 * @throws IllegalArgumentException
-	 *             if there is no image associated to the <code>id</code>
-	 */
-	public static String sizeImageForId(final byte size) throws IllegalArgumentException {
-		switch (size) {
-			case CW_GUIIMGID_MICRO:
-				return CW_GUIIMG_MICRO;
-			case CW_GUIIMGID_SMALL:
-				return CW_GUIIMG_SMALL;
-			case CW_GUIIMGID_NORMAL:
-				return CW_GUIIMG_NORMAL;
-			case CW_GUIIMGID_LARGE:
-				return CW_GUIIMG_LARGE;
-			case CW_GUIIMGID_NONPHYSICAL:
-				return CW_GUIIMG_NONPHYSICAL;
-			case CW_GUIIMGID_VERYLARGE:
-				return CW_GUIIMG_VERYLARGE;
-			default:
-				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize cw2ExportString()"));
-		}
-	}
-
-	/**
-	 * convert the size info from a CacheHolder to a string suitable for GPX
-	 * export
-	 * 
-	 * @param size
-	 *            CW internal representation of cache size
-	 * @return string representation of CacheWolf internal cache size
-	 * @throws IllegalArgumentException
-	 *             if <code>cwsize</code> can not be mapped to a CW_SIZE constant
-	 */
-	public static String cw2ExportString(final byte size) throws IllegalArgumentException {
-		switch (size) {
-			case CW_SIZE_MICRO:
-				return GC_SIZE_MICRO;
-			case CW_SIZE_SMALL:
-				return GC_SIZE_SMALL;
-			case CW_SIZE_REGULAR:
-				return GC_SIZE_REGULAR;
-			case CW_SIZE_LARGE:
-				return GC_SIZE_LARGE;
-			case CW_SIZE_NOTCHOSEN:
-				return GC_SIZE_NOTCHOSEN;
-			case CW_SIZE_OTHER:
-				return GC_SIZE_OTHER;
-			case CW_SIZE_VIRTUAL:
-				return GC_SIZE_VIRTUAL;
-			case CW_SIZE_VERYLARGE:
-				return OCTC_SIZE_VERYLARGE;
-			case CW_SIZE_NONE:
-				return OCTC_SIZE_NONE;
-			default:
-				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize cw2ExportString()"));
-		}
-	}
-
-	/**
-	 * convert the cache size information from a TerraCaching GPX import to
-	 * internal representation
-	 * 
-	 * @param tcstring
-	 *            size information extracted from a TC GPX import
-	 * @return CacheWolf internal representation of size information
-	 * @throws IllegalArgumentException
-	 *             if <code>tcstring</code> can not be mapped to internal representation
-	 *             (CW_SIZE_*)
-	 */
-
-	public static byte tcGpxString2Cw(final String tcstring) throws IllegalArgumentException {
-		if (tcstring.equals(TC_SIZE_MICRO)) {
-			return CW_SIZE_MICRO;
-		} else if (tcstring.equals(TC_SIZE_MEDIUM)) {
-			return CW_SIZE_SMALL;
-		} else if (tcstring.equals(TC_SIZE_REGULAR)) {
-			return CW_SIZE_REGULAR;
-		} else if (tcstring.equals(TC_SIZE_LARGE)) {
-			return CW_SIZE_LARGE;
-		} else if (tcstring.equals(TC_SIZE_VERYLARGE)) {
-			return CW_SIZE_VERYLARGE;
-		} else {
-			throw (new IllegalArgumentException("unmatched argument " + tcstring + " in CacheSize tcGpxString2Cw()"));
-		}
-	}
-
-	/**
-	 * convert the cache size information from a GC GPX import to internal
-	 * representation
-	 * 
-	 * @param gcstring
-	 *            size information extracted from a GPX import
-	 * @return CacheWolf internal representation of size information
-	 * @throws IllegalArgumentException
-	 *             if <code>gcstring</code> can not be mapped to internal representation
-	 *             (CW_SIZE_*)
-	 */
-
-	public static byte gcGpxString2Cw(final String gcstring) throws IllegalArgumentException {
-		if (gcstring.equalsIgnoreCase(GC_SIZE_MICRO)) {
-			return CW_SIZE_MICRO;
-		} else if (gcstring.equalsIgnoreCase(GC_SIZE_SMALL)) {
-			return CW_SIZE_SMALL;
-		} else if (gcstring.equalsIgnoreCase(GC_SIZE_REGULAR)) {
-			return CW_SIZE_REGULAR;
-		} else if (gcstring.equalsIgnoreCase(GC_SIZE_LARGE)) {
-			return CW_SIZE_LARGE;
-		} else if (gcstring.equalsIgnoreCase(GC_SIZE_NOTCHOSEN)) {
-			return CW_SIZE_NOTCHOSEN;
-		} else if (gcstring.equalsIgnoreCase(GC_SIZE_OTHER)) {
-			return CW_SIZE_OTHER;
-		} else if (gcstring.equalsIgnoreCase(GC_SIZE_VIRTUAL)) {
-			return CW_SIZE_VIRTUAL;
-		// GSAK exports wrong type information
-		} else if (gcstring.equalsIgnoreCase("Unknown")) {
-			return CW_SIZE_NOTCHOSEN;
-		} else if (gcstring.equalsIgnoreCase("not_chosen")) {
-			return CW_SIZE_NOTCHOSEN;
-		} else {
-			throw (new IllegalArgumentException("unmatched argument " + gcstring + " in CacheSize gcGpxString2Cw()"));
-		}
-	}
-
-	/**
-	 * convert the cache size information from GCSpider to internal
-	 * representation for CacheHolder
-	 * 
-	 * @param spiderstring
-	 *            string identified by the spider as containing size information
-	 * @return CacheWolf internal representation of size information
-	 * @throws IllegalArgumentException
-	 *             if <code>spiderstring</code> can not be mapped to internal representation
-	 *             (CW_SIZE_*)
-	 */
-	public static byte gcSpiderString2Cw(final String spiderstring) throws IllegalArgumentException {
-		// at the moment both sources use the same strings
-		return gcGpxString2Cw(spiderstring);
-	}
-
-	/**
-	 * map information from an Opencaching XML cache description suitable for
-	 * CacheHolder
-	 * 
-	 * @param ocxmlstring
-	 *            string extracted from OC-XML attribute size
-	 * @return CacheWolf internal representation of size information
-	 * @trows IllegalArgumentException if <code>ocxmlstring</code> can not be mapped to a
-	 *        CW_SIZE_*
-	 */
-	public static byte ocXmlString2Cw(final String ocxmlstring) throws IllegalArgumentException {
-		if (ocxmlstring.equals(OC_SIZE_OTHER)) {
-			return CW_SIZE_OTHER;
-		} else if (ocxmlstring.equals(OC_SIZE_MICRO)) {
-			return CW_SIZE_MICRO;
-		} else if (ocxmlstring.equals(OC_SIZE_SMALL)) {
-			return CW_SIZE_SMALL;
-		} else if (ocxmlstring.equals(OC_SIZE_NORMAL)) {
-			return CW_SIZE_REGULAR;
-		} else if (ocxmlstring.equals(OC_SIZE_LARGE)) {
-			return CW_SIZE_LARGE;
-		} else if (ocxmlstring.equals(OC_SIZE_VERYLARGE)) {
-			return CW_SIZE_VERYLARGE;
-		} else if (ocxmlstring.equals(OC_SIZE_NONE)) {
-			return CW_SIZE_NOTCHOSEN;
-		} else {
-			throw (new IllegalArgumentException("unmatched argument " + ocxmlstring + " in CacheSize ocXmlString2Cw()"));
-		}
-	}
-
-	/**
-	 * get name of the image to be displayed in CW index panel
-	 * 
-	 * @param size
-	 *            CW internal representation of cache size
-	 * @return filename of image to be displayed in main panel as size icon
-	 * @throws IllegalArgumentException
-	 *             if <code>size</code> can not be mapped
-	 */
-	public static byte guiSizeImageId(final byte size) throws IllegalArgumentException {
-		switch (size) {
-			case CW_SIZE_MICRO:
-				return CW_GUIIMGID_MICRO;
-			case CW_SIZE_SMALL:
-				return CW_GUIIMGID_SMALL;
-			case CW_SIZE_REGULAR:
-				return CW_GUIIMGID_NORMAL;
-			case CW_SIZE_LARGE:
-				return CW_GUIIMGID_LARGE;
-			case CW_SIZE_NOTCHOSEN:
-				return CW_GUIIMGID_NONPHYSICAL;
-			case CW_SIZE_OTHER:
-				return CW_GUIIMGID_NONPHYSICAL;
-			case CW_SIZE_VIRTUAL:
-				return CW_GUIIMGID_NONPHYSICAL;
-			case CW_SIZE_VERYLARGE:
-				return CW_GUIIMGID_VERYLARGE;
-			case CW_SIZE_NONE:
-				return CW_GUIIMGID_NONPHYSICAL;
-			default:
-				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize guiSizeImage()"));
-		}
-	}
-
-	/**
-	 * convert v1 style size string to the new internal representation
-	 * 
-	 * @param v1Size
-	 *            old size string
-	 * @return CW internal representation of cache size
-	 * @throws IllegalArgumentException if <code>v1Size</code> can not be mapped
-	 * @deprecated remove once v1 file version compatibility is abandoned
-	 */
-	public static final byte v1Converter(final String v1Size) throws IllegalArgumentException {
-		if (v1Size.equals(GC_SIZE_MICRO)) {
-			return CW_SIZE_MICRO;
-		} else if (v1Size.equals(GC_SIZE_SMALL)) {
-			return CW_SIZE_SMALL;
-		} else if (v1Size.equals(GC_SIZE_REGULAR)) {
-			return CW_SIZE_REGULAR;
-		} else if (v1Size.equals(GC_SIZE_LARGE)) {
-			return CW_SIZE_LARGE;
-		} else if (v1Size.equalsIgnoreCase(GC_SIZE_NOTCHOSEN)) {
-			return CW_SIZE_NOTCHOSEN;
-		} else if (v1Size.equals(GC_SIZE_OTHER)) {
-			return CW_SIZE_OTHER;
-		} else if (v1Size.equals(GC_SIZE_VIRTUAL)) {
-			return CW_SIZE_VIRTUAL;
-		} else if (v1Size.equals(OCTC_SIZE_NONE)) {
-			return CW_SIZE_NONE;
-		} else if (v1Size.equals(OCTC_SIZE_VERYLARGE)) {
-			return CW_SIZE_VERYLARGE;
-		} else if (v1Size.equals("")) {
-			return CW_SIZE_NOTCHOSEN;
-		} else {
-			throw (new IllegalArgumentException("unmatched argument " + v1Size + " in v1Converter()"));
-		}
-	}
-	
-	/**
-	 * return a bit mask representing the caches size for use in the Filter
-	 * 
-	 * @param size
-	 *            CW internal representation of cache size
-	 * @return a bit mask for the filter function
-	 * @throws IllegalArgumentException
-	 *             if <code>size</code> can not be mapped to a bit mask
-	 */
-	public static byte getFilterPattern(final byte size) throws IllegalArgumentException {
-		switch (size) {
-			case CW_SIZE_MICRO:
-				return CW_FILTER_MICRO;
-			case CW_SIZE_SMALL:
-				return CW_FILTER_SMALL;
-			case CW_SIZE_REGULAR:
-				return CW_FILTER_NORMAL;
-			case CW_SIZE_LARGE:
-				return CW_FILTER_LARGE;
-			case CW_SIZE_NOTCHOSEN:
-				return CW_FILTER_NONPHYSICAL;
-			case CW_SIZE_OTHER:
-				return CW_FILTER_NONPHYSICAL;
-			case CW_SIZE_VIRTUAL:
-				return CW_FILTER_NONPHYSICAL;
-			case CW_SIZE_VERYLARGE:
-				return CW_FILTER_VERYLARGE;
-			case CW_SIZE_NONE:
-				return CW_FILTER_NONPHYSICAL;
-			default:
-				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize getFilterPattern()"));
-		}
-	}
-
-	/**
-	 * provides abbreviated representations of CacheSize for compact exporters
-	 * 
-	 * @param size
-	 *            CW internal representation of cache size
-	 * @return a one letter String for cache size
-	 * @throws IllegalArgumentException
-	 *             if <code>size</code> can not be mapped
-	 */
-
-	public static String getExportShortId(final byte size) throws IllegalArgumentException {
-		switch (size) {
-			case CW_SIZE_MICRO:
-				return "m";
-			case CW_SIZE_SMALL:
-				return "s";
-			case CW_SIZE_REGULAR:
-				return "r";
-			case CW_SIZE_LARGE:
-				return "l";
-			case CW_SIZE_NOTCHOSEN:
-				return "n";
-			case CW_SIZE_OTHER:
-				return "n";
-			case CW_SIZE_VIRTUAL:
-				return "n";
-			case CW_SIZE_VERYLARGE:
-				return "v";
-			case CW_SIZE_NONE:
-				return "n";
-			default:
-				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize getExportShortId()"));
-		}
-	}
-
-	/**
-	 * generate a string array suitable to be used in DetalsPanel drop down list
-	 * 
-	 * @return strings to be displayed in the DetailsPanel Size DropDown
-	 * @see guiSizeStrings2CwSize
-	 * @see cwSizeId2GuiSizeId
-	 */
-	public static String[] guiSizeStrings() {
-		// make sure strings appear in ascending order for CW_SIZE_*
-		final String ret[] = new String[] { 
-				GC_SIZE_NOTCHOSEN, 
-				GC_SIZE_OTHER,
-				GC_SIZE_MICRO, 
-				GC_SIZE_SMALL, 
-				GC_SIZE_REGULAR, 
-				GC_SIZE_LARGE,
-				OCTC_SIZE_VERYLARGE, 
-				OCTC_SIZE_NONE, 
-				GC_SIZE_VIRTUAL 
-				};
-		return ret;
-	}
-
-	/**
-	 * map a string chosen from the DetailsPanel Size drop down list back to
-	 * internal representation
-	 * 
-	 * @param size string selected in the list
-	 * @return cw type information
-	 * @throws IllegalArgumentException
-	 *             if <code>id</code> can not be mapped
-	 * @see cwSizeId2GuiSizeId
-	 * @see guiSizeStrings
-	 */
-	public static byte guiSizeStrings2CwSize(final String size) throws IllegalArgumentException {
-		// map the strings in guiSizeStrings() back to cw byte types
-		if (size.equals(GC_SIZE_NOTCHOSEN)) {
-			return CW_SIZE_NOTCHOSEN;
-		} else if (size.equals(GC_SIZE_OTHER)) {
-			return CW_SIZE_OTHER;
-		} else if (size.equals(GC_SIZE_SMALL)) {
-			return CW_SIZE_SMALL;
-		} else if (size.equals(GC_SIZE_REGULAR)) {
-			return CW_SIZE_REGULAR;
-		} else if (size.equals(GC_SIZE_LARGE)) {
-			return CW_SIZE_LARGE;
-		} else if (size.equals(OCTC_SIZE_VERYLARGE)) {
-			return CW_SIZE_VERYLARGE;
-		} else if (size.equals(OCTC_SIZE_NONE)) {
-			return CW_SIZE_NONE;
-		} else if (size.equals(GC_SIZE_MICRO)) {
-			return CW_SIZE_MICRO;
-		} else if (size.equals(GC_SIZE_VIRTUAL)) {
-			return CW_SIZE_VIRTUAL;
-		} else {
-			throw (new IllegalArgumentException("unmatched argument " + size + " in guiSizeStrings2CwSize()"));
-		}
-	}
-
-	/**
-	 * map internal representation to index used in the the DetailsPanel Size
-	 * drop down list
-	 * 
-	 * @param size
-	 *            internal id to be mapped
-	 * @return index of internal size in array
-	 * @throws IllegalArgumentException
-	 *             if <code>id</code> can not be mapped
-	 * @see guiSizeStrings2CwSize
-	 * @see cwSizeId2GuiSizeId
-	 */
-	public static int cwSizeId2GuiSizeId(final byte size) throws IllegalArgumentException {
-		switch (size) {
-		case CW_SIZE_NOTCHOSEN:
-			return 0;
-		case CW_SIZE_OTHER:
-			return 1;
-		case CW_SIZE_MICRO:
-			return 2;
-		case CW_SIZE_SMALL:
-			return 3;
-		case CW_SIZE_REGULAR:
-			return 4;
-		case CW_SIZE_LARGE:
-			return 5;
-		case CW_SIZE_VERYLARGE:
-			return 6;
-		case CW_SIZE_NONE:
-			return 7;
-		case CW_SIZE_VIRTUAL:
-			return 8;
-		default:
-			throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize ()"));
-		}
-
-	}
-	
-	/**
-	 * checks if a given size information would be valid for use with CacheWolf.
-	 * takes about 1/20th of the time a try {} catch {} block would need, so use this
-	 * function if you just want to check
-	 * @param size size information to check
-	 * @return true if size is valid, false otherwise
-	 */
-	public static boolean isValidSize(final byte size) {
-		switch (size) {
-		case CW_SIZE_NOTCHOSEN: return true;
-		case CW_SIZE_OTHER: return true;
-		case CW_SIZE_MICRO: return true;
-		case CW_SIZE_SMALL: return true;
-		case CW_SIZE_REGULAR: return true;
-		case CW_SIZE_LARGE: return true;
-		case CW_SIZE_VERYLARGE: return true;
-		case CW_SIZE_NONE: return true;
-		case CW_SIZE_VIRTUAL: return true;
-		default: return false;
-		}
-	}
-}
+    /*
+    GNU General Public License
+    CacheWolf is a software for PocketPC, Win and Linux that
+    enables paperless caching.
+    It supports the sites geocaching.com and opencaching.de
+
+    Copyright (C) 2006  CacheWolf development team
+    See http://developer.berlios.de/projects/cachewolf/
+    for more information.
+    Contact: 	bilbowolf at users.berlios.de
+    			kalli at users.berlios.de
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; version 2 of the License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+    */
+package CacheWolf;
+
+/**
+ * Handles all aspects of converting cache size information from
+ * and to the various im- and exporters as well as for converting
+ * legacy profiles to current standard
+ */
+public final class CacheSize {
+
+	/*
+	 * internal representation of cache sizes in CacheHolder we just made them
+	 * up ;-)
+	 */
+	/** container size not chosen */
+	public static final byte CW_SIZE_NOTCHOSEN = 0;
+	/** container size other */
+	public static final byte CW_SIZE_OTHER = 1;
+	/** container size micro */
+	public static final byte CW_SIZE_MICRO = 2;
+	/* container size small */
+	public static final byte CW_SIZE_SMALL = 3;
+	/** container size regular */
+	public static final byte CW_SIZE_REGULAR = 4;
+	/** container size large */
+	public static final byte CW_SIZE_LARGE = 5;
+	/** container size very large */
+	public static final byte CW_SIZE_VERYLARGE = 6;
+	/** container size none */
+	public static final byte CW_SIZE_NONE = 7;
+	/** container size virtual */
+	public static final byte CW_SIZE_VIRTUAL = 8;
+	/** unparsable size or missing size information should throw IllegalArgumentExceptions when found */
+	public static final byte CW_SIZE_ERROR = -1;
+
+	/*
+	 * geocaching.com size strings as found by analyzing GPX files 
+	 * plus opencaching & terracaching Very large + none
+	 */
+	public static final String GC_SIZE_MICRO = "Micro";
+	public static final String GC_SIZE_SMALL = "Small";
+	public static final String GC_SIZE_REGULAR = "Regular";
+	public static final String GC_SIZE_LARGE = "Large";
+	public static final String GC_SIZE_NOTCHOSEN = "Not chosen";
+	public static final String GC_SIZE_OTHER = "Other";
+	public static final String GC_SIZE_VIRTUAL = "Virtual";
+	public static final String OCTC_SIZE_VERYLARGE = "Very large";
+	public static final String OCTC_SIZE_NONE = "None";
+
+	/*
+	 * OpenCaching Size IDs see
+	 * http://oc-server.svn.sourceforge.net/viewvc/oc-server/doc/sql/static-data/data.sql?view=markup
+	 */
+	public static final String OC_SIZE_OTHER = "1";
+	public static final String OC_SIZE_MICRO = "2";
+	public static final String OC_SIZE_SMALL = "3";
+	public static final String OC_SIZE_NORMAL = "4";
+	public static final String OC_SIZE_LARGE = "5";
+	public static final String OC_SIZE_VERYLARGE = "6";
+	public static final String OC_SIZE_NONE = "7";
+
+	/*
+	 * TerraCaching Size IDs taken from old GPXimporter (?? reliable source ??)
+	 */
+	public static final String TC_SIZE_MICRO = "1";
+	public static final String TC_SIZE_MEDIUM = "2";
+	public static final String TC_SIZE_REGULAR = "3";
+	public static final String TC_SIZE_LARGE = "4";
+	public static final String TC_SIZE_VERYLARGE = "4";
+
+	/*
+	 * images to show in CW index panel we use less images than sizes since all
+	 * non physical caches are represented by the same symbol
+	 */
+	/** GUI image for micro caches */
+	public static final String CW_GUIIMG_MICRO = "sizeMicro.png";
+	/** GUI image for small caches */
+	public static final String CW_GUIIMG_SMALL = "sizeSmall.png";
+	/** GUI image for regular / normal caches */
+	public static final String CW_GUIIMG_NORMAL = "sizeReg.png";
+	/** GUI image for large caches */
+	public static final String CW_GUIIMG_LARGE = "sizeLarge.png";
+	/** GUI image for non physical caches */
+	public static final String CW_GUIIMG_NONPHYSICAL = "sizeNonPhysical.png";
+	/** GUI image for very large caches */
+	public static final String CW_GUIIMG_VERYLARGE = "sizeVLarge.png";
+
+	/*
+	 * IDs for the sizePics[] array in TableModel therefore they must start with
+	 * 0 and be consecutive
+	 */
+	public static final byte CW_GUIIMGID_MICRO = 0;
+	public static final byte CW_GUIIMGID_SMALL = 1;
+	public static final byte CW_GUIIMGID_NORMAL = 2;
+	public static final byte CW_GUIIMGID_LARGE = 3;
+	public static final byte CW_GUIIMGID_NONPHYSICAL = 4;
+	public static final byte CW_GUIIMGID_VERYLARGE = 5;
+
+	/*
+	 * total number of different size images will be used to set the dimension
+	 * of sizePics[] array in TableModel
+	 */
+	public static final byte CW_TOTAL_SIZE_IMAGES = 6;
+
+	/*
+	 * bit masks to be used with the filter function
+	 */
+	public static final byte CW_FILTER_MICRO = 0x01 << 0;
+	public static final byte CW_FILTER_SMALL = 0x01 << 1;
+	public static final byte CW_FILTER_NORMAL = 0x01 << 2;
+	public static final byte CW_FILTER_LARGE = 0x01 << 3;
+	public static final byte CW_FILTER_VERYLARGE = 0x01 << 4;
+	public static final byte CW_FILTER_NONPHYSICAL = 0x01 << 5;
+	public static final byte CW_FILTER_ALL = CW_FILTER_MICRO
+			| CW_FILTER_SMALL | CW_FILTER_NORMAL | CW_FILTER_LARGE
+			| CW_FILTER_NONPHYSICAL | CW_FILTER_VERYLARGE;
+	
+	/** thou shallst not instantiate this object */
+	private CacheSize() { // Nothing to do
+	}
+
+	
+	/**
+	 * map filenames of images for the different sizes to the ids used array
+	 * index for sizePics[] in TableModel
+	 * 
+	 * @param size
+	 *            size identifier matching the CW_GUIIMGID_ constants
+	 * @return filename of image to be displayed for id
+	 * @throws IllegalArgumentException
+	 *             if there is no image associated to the <code>id</code>
+	 */
+	public static String sizeImageForId(final byte size) throws IllegalArgumentException {
+		switch (size) {
+			case CW_GUIIMGID_MICRO:
+				return CW_GUIIMG_MICRO;
+			case CW_GUIIMGID_SMALL:
+				return CW_GUIIMG_SMALL;
+			case CW_GUIIMGID_NORMAL:
+				return CW_GUIIMG_NORMAL;
+			case CW_GUIIMGID_LARGE:
+				return CW_GUIIMG_LARGE;
+			case CW_GUIIMGID_NONPHYSICAL:
+				return CW_GUIIMG_NONPHYSICAL;
+			case CW_GUIIMGID_VERYLARGE:
+				return CW_GUIIMG_VERYLARGE;
+			default:
+				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize cw2ExportString()"));
+		}
+	}
+
+	/**
+	 * convert the size info from a CacheHolder to a string suitable for GPX
+	 * export
+	 * 
+	 * @param size
+	 *            CW internal representation of cache size
+	 * @return string representation of CacheWolf internal cache size
+	 * @throws IllegalArgumentException
+	 *             if <code>cwsize</code> can not be mapped to a CW_SIZE constant
+	 */
+	public static String cw2ExportString(final byte size) throws IllegalArgumentException {
+		switch (size) {
+			case CW_SIZE_MICRO:
+				return GC_SIZE_MICRO;
+			case CW_SIZE_SMALL:
+				return GC_SIZE_SMALL;
+			case CW_SIZE_REGULAR:
+				return GC_SIZE_REGULAR;
+			case CW_SIZE_LARGE:
+				return GC_SIZE_LARGE;
+			case CW_SIZE_NOTCHOSEN:
+				return GC_SIZE_NOTCHOSEN;
+			case CW_SIZE_OTHER:
+				return GC_SIZE_OTHER;
+			case CW_SIZE_VIRTUAL:
+				return GC_SIZE_VIRTUAL;
+			case CW_SIZE_VERYLARGE:
+				return OCTC_SIZE_VERYLARGE;
+			case CW_SIZE_NONE:
+				return OCTC_SIZE_NONE;
+			default:
+				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize cw2ExportString()"));
+		}
+	}
+
+	/**
+	 * convert the cache size information from a TerraCaching GPX import to
+	 * internal representation
+	 * 
+	 * @param tcstring
+	 *            size information extracted from a TC GPX import
+	 * @return CacheWolf internal representation of size information
+	 * @throws IllegalArgumentException
+	 *             if <code>tcstring</code> can not be mapped to internal representation
+	 *             (CW_SIZE_*)
+	 */
+
+	public static byte tcGpxString2Cw(final String tcstring) throws IllegalArgumentException {
+		if (tcstring.equals(TC_SIZE_MICRO)) {
+			return CW_SIZE_MICRO;
+		} else if (tcstring.equals(TC_SIZE_MEDIUM)) {
+			return CW_SIZE_SMALL;
+		} else if (tcstring.equals(TC_SIZE_REGULAR)) {
+			return CW_SIZE_REGULAR;
+		} else if (tcstring.equals(TC_SIZE_LARGE)) {
+			return CW_SIZE_LARGE;
+		} else if (tcstring.equals(TC_SIZE_VERYLARGE)) {
+			return CW_SIZE_VERYLARGE;
+		} else {
+			throw (new IllegalArgumentException("unmatched argument " + tcstring + " in CacheSize tcGpxString2Cw()"));
+		}
+	}
+
+	/**
+	 * convert the cache size information from a GC GPX import to internal
+	 * representation
+	 * 
+	 * @param gcstring
+	 *            size information extracted from a GPX import
+	 * @return CacheWolf internal representation of size information
+	 * @throws IllegalArgumentException
+	 *             if <code>gcstring</code> can not be mapped to internal representation
+	 *             (CW_SIZE_*)
+	 */
+
+	public static byte gcGpxString2Cw(final String gcstring) throws IllegalArgumentException {
+		if (gcstring.equalsIgnoreCase(GC_SIZE_MICRO)) {
+			return CW_SIZE_MICRO;
+		} else if (gcstring.equalsIgnoreCase(GC_SIZE_SMALL)) {
+			return CW_SIZE_SMALL;
+		} else if (gcstring.equalsIgnoreCase(GC_SIZE_REGULAR)) {
+			return CW_SIZE_REGULAR;
+		} else if (gcstring.equalsIgnoreCase(GC_SIZE_LARGE)) {
+			return CW_SIZE_LARGE;
+		} else if (gcstring.equalsIgnoreCase(GC_SIZE_NOTCHOSEN)) {
+			return CW_SIZE_NOTCHOSEN;
+		} else if (gcstring.equalsIgnoreCase(GC_SIZE_OTHER)) {
+			return CW_SIZE_OTHER;
+		} else if (gcstring.equalsIgnoreCase(GC_SIZE_VIRTUAL)) {
+			return CW_SIZE_VIRTUAL;
+		// GSAK exports wrong type information
+		} else if (gcstring.equalsIgnoreCase("Unknown")) {
+			return CW_SIZE_NOTCHOSEN;
+		} else if (gcstring.equalsIgnoreCase("not_chosen")) {
+			return CW_SIZE_NOTCHOSEN;
+		} else {
+			throw (new IllegalArgumentException("unmatched argument " + gcstring + " in CacheSize gcGpxString2Cw()"));
+		}
+	}
+
+	/**
+	 * convert the cache size information from GCSpider to internal
+	 * representation for CacheHolder
+	 * 
+	 * @param spiderstring
+	 *            string identified by the spider as containing size information
+	 * @return CacheWolf internal representation of size information
+	 * @throws IllegalArgumentException
+	 *             if <code>spiderstring</code> can not be mapped to internal representation
+	 *             (CW_SIZE_*)
+	 */
+	public static byte gcSpiderString2Cw(final String spiderstring) throws IllegalArgumentException {
+		// at the moment both sources use the same strings
+		return gcGpxString2Cw(spiderstring);
+	}
+
+	/**
+	 * map information from an Opencaching XML cache description suitable for
+	 * CacheHolder
+	 * 
+	 * @param ocxmlstring
+	 *            string extracted from OC-XML attribute size
+	 * @return CacheWolf internal representation of size information
+	 * @trows IllegalArgumentException if <code>ocxmlstring</code> can not be mapped to a
+	 *        CW_SIZE_*
+	 */
+	public static byte ocXmlString2Cw(final String ocxmlstring) throws IllegalArgumentException {
+		if (ocxmlstring.equals(OC_SIZE_OTHER)) {
+			return CW_SIZE_OTHER;
+		} else if (ocxmlstring.equals(OC_SIZE_MICRO)) {
+			return CW_SIZE_MICRO;
+		} else if (ocxmlstring.equals(OC_SIZE_SMALL)) {
+			return CW_SIZE_SMALL;
+		} else if (ocxmlstring.equals(OC_SIZE_NORMAL)) {
+			return CW_SIZE_REGULAR;
+		} else if (ocxmlstring.equals(OC_SIZE_LARGE)) {
+			return CW_SIZE_LARGE;
+		} else if (ocxmlstring.equals(OC_SIZE_VERYLARGE)) {
+			return CW_SIZE_VERYLARGE;
+		} else if (ocxmlstring.equals(OC_SIZE_NONE)) {
+			return CW_SIZE_NOTCHOSEN;
+		} else {
+			throw (new IllegalArgumentException("unmatched argument " + ocxmlstring + " in CacheSize ocXmlString2Cw()"));
+		}
+	}
+
+	/**
+	 * get name of the image to be displayed in CW index panel
+	 * 
+	 * @param size
+	 *            CW internal representation of cache size
+	 * @return filename of image to be displayed in main panel as size icon
+	 * @throws IllegalArgumentException
+	 *             if <code>size</code> can not be mapped
+	 */
+	public static byte guiSizeImageId(final byte size) throws IllegalArgumentException {
+		switch (size) {
+			case CW_SIZE_MICRO:
+				return CW_GUIIMGID_MICRO;
+			case CW_SIZE_SMALL:
+				return CW_GUIIMGID_SMALL;
+			case CW_SIZE_REGULAR:
+				return CW_GUIIMGID_NORMAL;
+			case CW_SIZE_LARGE:
+				return CW_GUIIMGID_LARGE;
+			case CW_SIZE_NOTCHOSEN:
+				return CW_GUIIMGID_NONPHYSICAL;
+			case CW_SIZE_OTHER:
+				return CW_GUIIMGID_NONPHYSICAL;
+			case CW_SIZE_VIRTUAL:
+				return CW_GUIIMGID_NONPHYSICAL;
+			case CW_SIZE_VERYLARGE:
+				return CW_GUIIMGID_VERYLARGE;
+			case CW_SIZE_NONE:
+				return CW_GUIIMGID_NONPHYSICAL;
+			default:
+				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize guiSizeImage()"));
+		}
+	}
+
+	/**
+	 * convert v1 style size string to the new internal representation
+	 * 
+	 * @param v1Size
+	 *            old size string
+	 * @return CW internal representation of cache size
+	 * @throws IllegalArgumentException if <code>v1Size</code> can not be mapped
+	 * @deprecated remove once v1 file version compatibility is abandoned
+	 */
+	public static final byte v1Converter(final String v1Size) throws IllegalArgumentException {
+		if (v1Size.equals(GC_SIZE_MICRO)) {
+			return CW_SIZE_MICRO;
+		} else if (v1Size.equals(GC_SIZE_SMALL)) {
+			return CW_SIZE_SMALL;
+		} else if (v1Size.equals(GC_SIZE_REGULAR)) {
+			return CW_SIZE_REGULAR;
+		} else if (v1Size.equals(GC_SIZE_LARGE)) {
+			return CW_SIZE_LARGE;
+		} else if (v1Size.equalsIgnoreCase(GC_SIZE_NOTCHOSEN)) {
+			return CW_SIZE_NOTCHOSEN;
+		} else if (v1Size.equals(GC_SIZE_OTHER)) {
+			return CW_SIZE_OTHER;
+		} else if (v1Size.equals(GC_SIZE_VIRTUAL)) {
+			return CW_SIZE_VIRTUAL;
+		} else if (v1Size.equals(OCTC_SIZE_NONE)) {
+			return CW_SIZE_NONE;
+		} else if (v1Size.equals(OCTC_SIZE_VERYLARGE)) {
+			return CW_SIZE_VERYLARGE;
+		} else if (v1Size.equals("")) {
+			return CW_SIZE_NOTCHOSEN;
+		} else {
+			throw (new IllegalArgumentException("unmatched argument " + v1Size + " in v1Converter()"));
+		}
+	}
+	
+	/**
+	 * return a bit mask representing the caches size for use in the Filter
+	 * 
+	 * @param size
+	 *            CW internal representation of cache size
+	 * @return a bit mask for the filter function
+	 * @throws IllegalArgumentException
+	 *             if <code>size</code> can not be mapped to a bit mask
+	 */
+	public static byte getFilterPattern(final byte size) throws IllegalArgumentException {
+		switch (size) {
+			case CW_SIZE_MICRO:
+				return CW_FILTER_MICRO;
+			case CW_SIZE_SMALL:
+				return CW_FILTER_SMALL;
+			case CW_SIZE_REGULAR:
+				return CW_FILTER_NORMAL;
+			case CW_SIZE_LARGE:
+				return CW_FILTER_LARGE;
+			case CW_SIZE_NOTCHOSEN:
+				return CW_FILTER_NONPHYSICAL;
+			case CW_SIZE_OTHER:
+				return CW_FILTER_NONPHYSICAL;
+			case CW_SIZE_VIRTUAL:
+				return CW_FILTER_NONPHYSICAL;
+			case CW_SIZE_VERYLARGE:
+				return CW_FILTER_VERYLARGE;
+			case CW_SIZE_NONE:
+				return CW_FILTER_NONPHYSICAL;
+			default:
+				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize getFilterPattern()"));
+		}
+	}
+
+	/**
+	 * provides abbreviated representations of CacheSize for compact exporters
+	 * 
+	 * @param size
+	 *            CW internal representation of cache size
+	 * @return a one letter String for cache size
+	 * @throws IllegalArgumentException
+	 *             if <code>size</code> can not be mapped
+	 */
+
+	public static String getExportShortId(final byte size) throws IllegalArgumentException {
+		switch (size) {
+			case CW_SIZE_MICRO:
+				return "m";
+			case CW_SIZE_SMALL:
+				return "s";
+			case CW_SIZE_REGULAR:
+				return "r";
+			case CW_SIZE_LARGE:
+				return "l";
+			case CW_SIZE_NOTCHOSEN:
+				return "n";
+			case CW_SIZE_OTHER:
+				return "n";
+			case CW_SIZE_VIRTUAL:
+				return "n";
+			case CW_SIZE_VERYLARGE:
+				return "v";
+			case CW_SIZE_NONE:
+				return "n";
+			default:
+				throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize getExportShortId()"));
+		}
+	}
+
+	/**
+	 * generate a string array suitable to be used in DetalsPanel drop down list
+	 * 
+	 * @return strings to be displayed in the DetailsPanel Size DropDown
+	 * @see guiSizeStrings2CwSize
+	 * @see cwSizeId2GuiSizeId
+	 */
+	public static String[] guiSizeStrings() {
+		// make sure strings appear in ascending order for CW_SIZE_*
+		final String ret[] = new String[] { 
+				GC_SIZE_NOTCHOSEN, 
+				GC_SIZE_OTHER,
+				GC_SIZE_MICRO, 
+				GC_SIZE_SMALL, 
+				GC_SIZE_REGULAR, 
+				GC_SIZE_LARGE,
+				OCTC_SIZE_VERYLARGE, 
+				OCTC_SIZE_NONE, 
+				GC_SIZE_VIRTUAL 
+				};
+		return ret;
+	}
+
+	/**
+	 * map a string chosen from the DetailsPanel Size drop down list back to
+	 * internal representation
+	 * 
+	 * @param size string selected in the list
+	 * @return cw type information
+	 * @throws IllegalArgumentException
+	 *             if <code>id</code> can not be mapped
+	 * @see cwSizeId2GuiSizeId
+	 * @see guiSizeStrings
+	 */
+	public static byte guiSizeStrings2CwSize(final String size) throws IllegalArgumentException {
+		// map the strings in guiSizeStrings() back to cw byte types
+		if (size.equals(GC_SIZE_NOTCHOSEN)) {
+			return CW_SIZE_NOTCHOSEN;
+		} else if (size.equals(GC_SIZE_OTHER)) {
+			return CW_SIZE_OTHER;
+		} else if (size.equals(GC_SIZE_SMALL)) {
+			return CW_SIZE_SMALL;
+		} else if (size.equals(GC_SIZE_REGULAR)) {
+			return CW_SIZE_REGULAR;
+		} else if (size.equals(GC_SIZE_LARGE)) {
+			return CW_SIZE_LARGE;
+		} else if (size.equals(OCTC_SIZE_VERYLARGE)) {
+			return CW_SIZE_VERYLARGE;
+		} else if (size.equals(OCTC_SIZE_NONE)) {
+			return CW_SIZE_NONE;
+		} else if (size.equals(GC_SIZE_MICRO)) {
+			return CW_SIZE_MICRO;
+		} else if (size.equals(GC_SIZE_VIRTUAL)) {
+			return CW_SIZE_VIRTUAL;
+		} else {
+			throw (new IllegalArgumentException("unmatched argument " + size + " in guiSizeStrings2CwSize()"));
+		}
+	}
+
+	/**
+	 * map internal representation to index used in the the DetailsPanel Size
+	 * drop down list
+	 * 
+	 * @param size
+	 *            internal id to be mapped
+	 * @return index of internal size in array
+	 * @throws IllegalArgumentException
+	 *             if <code>id</code> can not be mapped
+	 * @see guiSizeStrings2CwSize
+	 * @see cwSizeId2GuiSizeId
+	 */
+	public static int cwSizeId2GuiSizeId(final byte size) throws IllegalArgumentException {
+		switch (size) {
+		case CW_SIZE_NOTCHOSEN:
+			return 0;
+		case CW_SIZE_OTHER:
+			return 1;
+		case CW_SIZE_MICRO:
+			return 2;
+		case CW_SIZE_SMALL:
+			return 3;
+		case CW_SIZE_REGULAR:
+			return 4;
+		case CW_SIZE_LARGE:
+			return 5;
+		case CW_SIZE_VERYLARGE:
+			return 6;
+		case CW_SIZE_NONE:
+			return 7;
+		case CW_SIZE_VIRTUAL:
+			return 8;
+		default:
+			throw (new IllegalArgumentException("unmatched argument " + size + " in CacheSize ()"));
+		}
+
+	}
+	
+	/**
+	 * checks if a given size information would be valid for use with CacheWolf.
+	 * takes about 1/20th of the time a try {} catch {} block would need, so use this
+	 * function if you just want to check
+	 * @param size size information to check
+	 * @return true if size is valid, false otherwise
+	 */
+	public static boolean isValidSize(final byte size) {
+		switch (size) {
+		case CW_SIZE_NOTCHOSEN: return true;
+		case CW_SIZE_OTHER: return true;
+		case CW_SIZE_MICRO: return true;
+		case CW_SIZE_SMALL: return true;
+		case CW_SIZE_REGULAR: return true;
+		case CW_SIZE_LARGE: return true;
+		case CW_SIZE_VERYLARGE: return true;
+		case CW_SIZE_NONE: return true;
+		case CW_SIZE_VIRTUAL: return true;
+		default: return false;
+		}
+	}
+}

Modified: branches/r1.2/src/CacheWolf/CacheTerrDiff.java
===================================================================
--- branches/r1.2/src/CacheWolf/CacheTerrDiff.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/CacheTerrDiff.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -1,159 +1,159 @@
-    /*
-    GNU General Public License
-    CacheWolf is a software for PocketPC, Win and Linux that
-    enables paperless caching.
-    It supports the sites geocaching.com and opencaching.de
-
-    Copyright (C) 2006  CacheWolf development team
-    See http://developer.berlios.de/projects/cachewolf/
-    for more information.
-    Contact: 	bilbowolf at users.berlios.de
-    			kalli at users.berlios.de
-
-    This program is free software; you can redistribute it and/or modify
-    it under the terms of the GNU General Public License as published by
-    the Free Software Foundation; version 2 of the License.
-
-    This program is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-    GNU General Public License for more details.
-
-    You should have received a copy of the GNU General Public License
-    along with this program; if not, write to the Free Software
-    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-    */
-package CacheWolf;
-
-/**
- * Handles all aspects of converting terrain and difficulty
- * informations from legacy file versions and various im-
- * and exporters
- * 
- * Only use the class in a static way, do not instantiate it
- */
-public final class CacheTerrDiff {
-	
-	/** terrain or difficulty 1.0 */
-	public static final byte CW_DT_10 = 10;
-	/** terrain or difficulty 1.5 */
-	public static final byte CW_DT_15 = 15;
-	/** terrain or difficulty 2.0 */
-	public static final byte CW_DT_20 = 20;
-	/** terrain or difficulty 2.5 */
-	public static final byte CW_DT_25 = 25;
-	/** terrain or difficulty 3.0 */
-	public static final byte CW_DT_30 = 30;
-	/** terrain or difficulty 3.5 */
-	public static final byte CW_DT_35 = 35;
-	/** terrain or difficulty 4.0 */
-	public static final byte CW_DT_40 = 40;
-	/** terrain or difficulty 4.5 */
-	public static final byte CW_DT_45 = 45;
-	/** terrain or difficulty 5.0 */
-	public static final byte CW_DT_50 = 50;
-	/** wrong terrain or difficulty */
-	public static final byte CW_DT_ERROR = -1;
-	/** terrain or difficulty for additional/custom waypoints */
-	public static final byte CW_DT_UNSET = 0;
-
-	private CacheTerrDiff() { 
-		// Nothing to do
-	}
-	
-	/**
-	 * convert "old style" terrain and difficulty information to the new format.
-	 * 
-	 * since it is also used by the importers it is not flagged as depreciated
-	 * @param v1TerrDiff a string representation of terrain or difficulty
-	 * @return internal representation of terrain or difficulty
-	 * @throws IllegalArgumentException if <code>v1TerrDiff</code> can not be mapped
-	 */
-	public static byte v1Converter(String v1TerrDiff) throws IllegalArgumentException {
-		if (v1TerrDiff == null) {
-			throw new IllegalArgumentException("error mapping terrain or difficulty");
-		}
-		v1TerrDiff = v1TerrDiff.replace(',', '.');
-		if (v1TerrDiff.equals("1") || v1TerrDiff.equals("1.0")) { return CW_DT_10; }
-		if (v1TerrDiff.equals("2") || v1TerrDiff.equals("2.0")) { return CW_DT_20; }
-		if (v1TerrDiff.equals("3") || v1TerrDiff.equals("3.0")) { return CW_DT_30; }
-		if (v1TerrDiff.equals("4") || v1TerrDiff.equals("4.0")) { return CW_DT_40; }
-		if (v1TerrDiff.equals("5") || v1TerrDiff.equals("5.0")) { return CW_DT_50; }
-		
-		if (v1TerrDiff.equals("1.5")) { return CW_DT_15; }
-		if (v1TerrDiff.equals("2.5")) { return CW_DT_25; }
-		if (v1TerrDiff.equals("3.5")) { return CW_DT_35; }
-		if (v1TerrDiff.equals("4.5")) { return CW_DT_45; }
-		
-		if (v1TerrDiff.equals("-1")) { return CW_DT_UNSET; }
-		
-		throw new IllegalArgumentException("error mapping terrain or difficulty");
-	}
-	
-	/**
-	 * generate strings of terrain and difficulty for general use
-	 * @param terrdiff internal terrain or difficulty value
-	 * @return long version of terrain or difficulty (including .0)
-	 * @throws IllegalArgumentException
-	 */
-	public static String longDT(final byte terrdiff) throws IllegalArgumentException {
-		switch(terrdiff) {
-		case CW_DT_10: return "1.0";
-		case CW_DT_15: return "1.5";
-		case CW_DT_20: return "2.0";
-		case CW_DT_25: return "2.5";
-		case CW_DT_30: return "3.0";
-		case CW_DT_35: return "3.5";
-		case CW_DT_40: return "4.0";
-		case CW_DT_45: return "4.5";
-		case CW_DT_50: return "5.0";
-		case CW_DT_UNSET: return "-.-";
-		default: throw new IllegalArgumentException("unmapped terrain or diffulty "+terrdiff);
-		}
-	}
-
-	/**
-	 * generate strings of terrain and difficulty information for GC.com-like GPX exports
-	 * @param terrdiff internal terrain or difficulty value
-	 * @return short version of terrain or difficulty (omit .0)
-	 * @throws IllegalArgumentException
-	 */
-	public static String shortDT(final byte terrdiff) throws IllegalArgumentException {
-		switch(terrdiff) {
-		case CW_DT_10: return "1";
-		case CW_DT_15: return "1.5";
-		case CW_DT_20: return "2";
-		case CW_DT_25: return "2.5";
-		case CW_DT_30: return "3";
-		case CW_DT_35: return "3.5";
-		case CW_DT_40: return "4";
-		case CW_DT_45: return "4.5";
-		case CW_DT_50: return "5";
-		case CW_DT_UNSET: return "-1";
-		default: throw new IllegalArgumentException("unmapped terrain or diffulty "+terrdiff);
-		}
-	}
-	
-	/**
-	 * check if a given difficulty or terrain is valid
-	 * takes about 1/20th of the time a try {} catch{} block needs
-	 * so use this function instead
-	 * @param terrdiff terrain or difficulty to check
-	 * @return true if terrain or difficulty is valid, false otherwise
-	 */
-	public static boolean isValidTD(final byte terrdiff) {
-		switch (terrdiff) {
-		case CW_DT_10: return true;
-		case CW_DT_15: return true;
-		case CW_DT_20: return true;
-		case CW_DT_25: return true;
-		case CW_DT_30: return true;
-		case CW_DT_35: return true;
-		case CW_DT_40: return true;
-		case CW_DT_45: return true;
-		case CW_DT_50: return true;
-		case CW_DT_UNSET: return true;
-		default: return false;
-		}
-	}
-}
+    /*
+    GNU General Public License
+    CacheWolf is a software for PocketPC, Win and Linux that
+    enables paperless caching.
+    It supports the sites geocaching.com and opencaching.de
+
+    Copyright (C) 2006  CacheWolf development team
+    See http://developer.berlios.de/projects/cachewolf/
+    for more information.
+    Contact: 	bilbowolf at users.berlios.de
+    			kalli at users.berlios.de
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; version 2 of the License.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+    */
+package CacheWolf;
+
+/**
+ * Handles all aspects of converting terrain and difficulty
+ * informations from legacy file versions and various im-
+ * and exporters
+ * 
+ * Only use the class in a static way, do not instantiate it
+ */
+public final class CacheTerrDiff {
+	
+	/** terrain or difficulty 1.0 */
+	public static final byte CW_DT_10 = 10;
+	/** terrain or difficulty 1.5 */
+	public static final byte CW_DT_15 = 15;
+	/** terrain or difficulty 2.0 */
+	public static final byte CW_DT_20 = 20;
+	/** terrain or difficulty 2.5 */
+	public static final byte CW_DT_25 = 25;
+	/** terrain or difficulty 3.0 */
+	public static final byte CW_DT_30 = 30;
+	/** terrain or difficulty 3.5 */
+	public static final byte CW_DT_35 = 35;
+	/** terrain or difficulty 4.0 */
+	public static final byte CW_DT_40 = 40;
+	/** terrain or difficulty 4.5 */
+	public static final byte CW_DT_45 = 45;
+	/** terrain or difficulty 5.0 */
+	public static final byte CW_DT_50 = 50;
+	/** wrong terrain or difficulty */
+	public static final byte CW_DT_ERROR = -1;
+	/** terrain or difficulty for additional/custom waypoints */
+	public static final byte CW_DT_UNSET = 0;
+
+	private CacheTerrDiff() { 
+		// Nothing to do
+	}
+	
+	/**
+	 * convert "old style" terrain and difficulty information to the new format.
+	 * 
+	 * since it is also used by the importers it is not flagged as depreciated
+	 * @param v1TerrDiff a string representation of terrain or difficulty
+	 * @return internal representation of terrain or difficulty
+	 * @throws IllegalArgumentException if <code>v1TerrDiff</code> can not be mapped
+	 */
+	public static byte v1Converter(String v1TerrDiff) throws IllegalArgumentException {
+		if (v1TerrDiff == null) {
+			throw new IllegalArgumentException("error mapping terrain or difficulty");
+		}
+		v1TerrDiff = v1TerrDiff.replace(',', '.');
+		if (v1TerrDiff.equals("1") || v1TerrDiff.equals("1.0")) { return CW_DT_10; }
+		if (v1TerrDiff.equals("2") || v1TerrDiff.equals("2.0")) { return CW_DT_20; }
+		if (v1TerrDiff.equals("3") || v1TerrDiff.equals("3.0")) { return CW_DT_30; }
+		if (v1TerrDiff.equals("4") || v1TerrDiff.equals("4.0")) { return CW_DT_40; }
+		if (v1TerrDiff.equals("5") || v1TerrDiff.equals("5.0")) { return CW_DT_50; }
+		
+		if (v1TerrDiff.equals("1.5")) { return CW_DT_15; }
+		if (v1TerrDiff.equals("2.5")) { return CW_DT_25; }
+		if (v1TerrDiff.equals("3.5")) { return CW_DT_35; }
+		if (v1TerrDiff.equals("4.5")) { return CW_DT_45; }
+		
+		if (v1TerrDiff.equals("-1")) { return CW_DT_UNSET; }
+		
+		throw new IllegalArgumentException("error mapping terrain or difficulty");
+	}
+	
+	/**
+	 * generate strings of terrain and difficulty for general use
+	 * @param terrdiff internal terrain or difficulty value
+	 * @return long version of terrain or difficulty (including .0)
+	 * @throws IllegalArgumentException
+	 */
+	public static String longDT(final byte terrdiff) throws IllegalArgumentException {
+		switch(terrdiff) {
+		case CW_DT_10: return "1.0";
+		case CW_DT_15: return "1.5";
+		case CW_DT_20: return "2.0";
+		case CW_DT_25: return "2.5";
+		case CW_DT_30: return "3.0";
+		case CW_DT_35: return "3.5";
+		case CW_DT_40: return "4.0";
+		case CW_DT_45: return "4.5";
+		case CW_DT_50: return "5.0";
+		case CW_DT_UNSET: return "-.-";
+		default: throw new IllegalArgumentException("unmapped terrain or diffulty "+terrdiff);
+		}
+	}
+
+	/**
+	 * generate strings of terrain and difficulty information for GC.com-like GPX exports
+	 * @param terrdiff internal terrain or difficulty value
+	 * @return short version of terrain or difficulty (omit .0)
+	 * @throws IllegalArgumentException
+	 */
+	public static String shortDT(final byte terrdiff) throws IllegalArgumentException {
+		switch(terrdiff) {
+		case CW_DT_10: return "1";
+		case CW_DT_15: return "1.5";
+		case CW_DT_20: return "2";
+		case CW_DT_25: return "2.5";
+		case CW_DT_30: return "3";
+		case CW_DT_35: return "3.5";
+		case CW_DT_40: return "4";
+		case CW_DT_45: return "4.5";
+		case CW_DT_50: return "5";
+		case CW_DT_UNSET: return "-1";
+		default: throw new IllegalArgumentException("unmapped terrain or diffulty "+terrdiff);
+		}
+	}
+	
+	/**
+	 * check if a given difficulty or terrain is valid
+	 * takes about 1/20th of the time a try {} catch{} block needs
+	 * so use this function instead
+	 * @param terrdiff terrain or difficulty to check
+	 * @return true if terrain or difficulty is valid, false otherwise
+	 */
+	public static boolean isValidTD(final byte terrdiff) {
+		switch (terrdiff) {
+		case CW_DT_10: return true;
+		case CW_DT_15: return true;
+		case CW_DT_20: return true;
+		case CW_DT_25: return true;
+		case CW_DT_30: return true;
+		case CW_DT_35: return true;
+		case CW_DT_40: return true;
+		case CW_DT_45: return true;
+		case CW_DT_50: return true;
+		case CW_DT_UNSET: return true;
+		default: return false;
+		}
+	}
+}

Modified: branches/r1.2/src/CacheWolf/CacheType.java
===================================================================
--- branches/r1.2/src/CacheWolf/CacheType.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/CacheType.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -1,604 +1,604 @@
-/*
-GNU General Public License
-CacheWolf is a software for PocketPC, Win and Linux that
-enables paperless caching.
-It supports the sites geocaching.com and opencaching.de
-
-Copyright (C) 2006  CacheWolf development team
-See http://developer.berlios.de/projects/cachewolf/
-for more information.
-Contact: 	bilbowolf at users.berlios.de
-			kalli at users.berlios.de
-
-This program is free software; you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation; version 2 of the License.
-
-This program is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
-
-You should have received a copy of the GNU General Public License
-along with this program; if not, write to the Free Software
-Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
- */
-package CacheWolf;
-
-import ewe.fx.Image;
-
-final class CTyp {
-	public byte _cwMappedCType; // CW Cache Typ intern
-	public byte _cwCType; // CW Cache Typ intern
-	public char _cwCGroup; // Cache Typ Group intern
-	public String _cwCTypeV1; // V1 Cache Typ
-	public String _gcCTypeSpider; // GC Type on Spider Import from GC.com
-	public String _ocCTypeXmlImport; // GC Type on Spider Import from GC.com
-	public byte _cwCTypeV2; // V2 Cache Typ
-	public char _gpxShortCType; // Short Typ (one char abbreviation)
-	public String _imageName; // name of imageName for Icon, "showCacheInBrowser" and "KML Export"
-	public String _gpxWptTypeTag; // gpx wpt <type> tag
-	public String _gpxWptSymTag; // gpx wpt <sym> tag
-	public String _gpxWptGCextensionTypTag; // gpx cache extension <groundspeak:type> tag
-	public String _gpxAlternativeWptTypTags; // alternative typ - names for gpx from other sources
-	public int _msgNrCTypeName; // message number for gui cache Typ name
-	public int _GUIOrder; // sort Order in GUI selection //TODO more intelligent implementation (now manually change each line on new one)
-	public int _FilterStringPos; // BitNr in Filter String (profile)
-	public int _FilterPattern; // 2**BitNr in Filter int (does not correspond with BitNr in String)
-	public Image _iconImage;
-	public Image _mapImage;
-	public Image[] _modImage = { null, null, null, null, null, null, null };
-
-	public CTyp(byte cwMappedCType, byte cwCType, char cwCGroup, String cwCTypeV1, String gcCTypeSpider, String ocCTypeXmlImport, byte cwCTypeV2, char gpxShortCType, String imageName, String[] gpx, int msgNrCTypeName, int gUIOrder, int filterStringPos,
-			int filterPattern) {
-
-		_cwMappedCType = cwMappedCType;
-		_cwCType = cwCType;
-		_cwCGroup = cwCGroup;
-		_cwCTypeV1 = cwCTypeV1;
-		_gcCTypeSpider = gcCTypeSpider;
-		_ocCTypeXmlImport = ocCTypeXmlImport;
-		_cwCTypeV2 = cwCTypeV2;
-		_gpxShortCType = gpxShortCType;
-		_imageName = imageName;
-		_gpxWptTypeTag = gpx[0];
-		_gpxWptSymTag = gpx[1];
-		_gpxWptGCextensionTypTag = gpx[2];
-		_gpxAlternativeWptTypTags = gpx[3];
-		_msgNrCTypeName = msgNrCTypeName;
-		_GUIOrder = gUIOrder;
-		_FilterStringPos = filterStringPos;
-		_FilterPattern = filterPattern;
-		if (!_imageName.equals("")) {
-			_iconImage = new Image(_imageName);
-			_mapImage = _iconImage;
-		}
-	}
-}
-
-/**
- * Handles all aspects of converting cache type information
- * from and to the various im- and exporters ...
- * converting legacy profiles to current standard
- *
- * Do not instantiate this class, only use it in a static way
- */
-public final class CacheType {
-
-	/** thou shallst not instantiate this object */
-	private CacheType() {
-		// Nothing to do
-	}
-
-	/** custom waypoint */
-	public static final byte CW_TYPE_CUSTOM = 0;
-	/** traditional cache (GC,OC) */
-	public static final byte CW_TYPE_TRADITIONAL = 2;
-	/** multi cache (GC,OC) */
-	public static final byte CW_TYPE_MULTI = 3;
-	/** virtual cache (GC,OC) */
-	public static final byte CW_TYPE_VIRTUAL = 4;
-	/** letterbox cache (GC) */
-	public static final byte CW_TYPE_LETTERBOX = 5;
-	/** event cache (GC,OC) */
-	public static final byte CW_TYPE_EVENT = 6;
-	/** unknown cache - Mystery (GC) */
-	public static final byte CW_TYPE_UNKNOWN = 8;
-	/** drive in cache (OC) */
-	public static final byte CW_TYPE_DRIVE_IN = 10;
-	/** webcam cache (GC,OC) */
-	public static final byte CW_TYPE_WEBCAM = 11;
-	/** locationless cache (GC) */
-	public static final byte CW_TYPE_LOCATIONLESS = 12;
-	/** CITO cache (GC) */
-	public static final byte CW_TYPE_CITO = 13;
-	/** Mega Event Cache (GC) */
-	public static final byte CW_TYPE_MEGA_EVENT = 100;
-	/** WhereIGo Cache (GC) */
-	public static final byte CW_TYPE_WHEREIGO = 101;
-	/** Earth Cache (GC) */
-	public static final byte CW_TYPE_EARTH = 104;
-	/** Additional Waypoint Parking (GC) */
-	public static final byte CW_TYPE_PARKING = 50;
-	/** Additional Waypoint Stage of a Multi (GC) */
-	public static final byte CW_TYPE_STAGE = 51;
-	/** Additional Waypoint Question to answer (GC) */
-	public static final byte CW_TYPE_QUESTION = 52;
-	/** Additional Waypoint Final (GC) */
-	public static final byte CW_TYPE_FINAL = 53;
-	/** Additional Waypoint Trailhead (GC) */
-	public static final byte CW_TYPE_TRAILHEAD = 54;
-	/** Additional Waypoint Reference (GC) */
-	public static final byte CW_TYPE_REFERENCE = 55;
-	/** unrecognized cache type or missing information */
-	public static final byte CW_TYPE_ERROR = -1;
-	String[] ggpx = { "Geocache|Custom", "Custom", "Custom", "" };
-	private static final byte found = 0;
-	private static final byte archived = 1;
-	private static final byte disabled = 2;
-	private static final byte solved = 3;
-	private static final byte bonus = 4;
-	private static final byte owned = 5;
-	private static final byte dnf = 6;
-	//
-	private static final CTyp[] cTypRef = {
-			// custom waypoints
-			new CTyp(CW_TYPE_CUSTOM, CW_TYPE_CUSTOM, 'P', "0", "", "", (byte) -128, 'C', "typeCustom.png", new String[] { "Geocache|Custom", "Custom", "Custom", "" }, 1, 0, 10, 0x000100),
-			// Cache waypoints
-			new CTyp(CW_TYPE_TRADITIONAL, CW_TYPE_TRADITIONAL, 'C', "2", "2", "2", (byte) -126, 'T', "typeTradi.png", new String[] { "Geocache|Traditional Cache", "Geocache", "Traditional Cache", "Traditional|Classic" }, 2, 1, 0, 0x000001),
-			new CTyp(CW_TYPE_MULTI, CW_TYPE_MULTI, 'C', "3", "3", "3", (byte) -125, 'M', "typeMulti.png", new String[] { "Geocache|Multi-cache", "Geocache", "Multi-cache", "Multi|Offset" }, 3, 2, 1, 0x000002),
-			new CTyp(CW_TYPE_VIRTUAL, CW_TYPE_VIRTUAL, 'C', "4", "4", "4", (byte) -124, 'V', "typeVirtual.png", new String[] { "Geocache|Virtual Cache", "Geocache", "Virtual Cache", "Virtual" }, 4, 3, 2, 0x000004),
-			new CTyp(CW_TYPE_LETTERBOX, CW_TYPE_LETTERBOX, 'C', "5", "5", "", (byte) -123, 'L', "typeLetterbox.png", new String[] { "Geocache|Letterbox Hybrid", "Geocache", "Letterbox Hybrid", "Letterbox" }, 5, 4, 3, 0x000008),
-			new CTyp(CW_TYPE_EVENT, CW_TYPE_EVENT, 'C', "6", "6", "6", (byte) -122, 'X', "typeEvent.png", new String[] { "Geocache|Event Cache", "Geocache", "Event Cache", "Event" }, 6, 5, 4, 0x000010),
-			new CTyp(CW_TYPE_MEGA_EVENT, CW_TYPE_MEGA_EVENT, 'C', "453", "453", "", (byte) 101, 'X', "typeMegaevent.png", new String[] { "Geocache|Mega-Event Cache", "Geocache", "Mega-Event Cache", "Mega" }, 14, 6, 9, 0x000200),
-			new CTyp(CW_TYPE_WEBCAM, CW_TYPE_WEBCAM, 'C', "11", "11", "5", (byte) -117, 'W', "typeWebcam.png", new String[] { "Geocache|Webcam Cache", "Geocache", "Webcam Cache", "Webcam" }, 11, 7, 5, 0x000020),
-			new CTyp(CW_TYPE_UNKNOWN, CW_TYPE_UNKNOWN, 'C', "8", "8", "", (byte) -120, 'U', "typeUnknown.png", new String[] { "Geocache|Unknown Cache", "Geocache", "Unknown Cache", "Mystery" }, 8, 8, 6, 0x000040),
-			new CTyp(CW_TYPE_LOCATIONLESS, CW_TYPE_LOCATIONLESS, 'C', "12", "12", "", (byte) -116, 'O', "typeLocless.png", new String[] { "Geocache|Locationless (Reverse) Cache", "Geocache", "Locationless (Reverse) Cache", "Locationless" }, 12, 9, 8,
-					0x000080),
-			new CTyp(CW_TYPE_CITO, CW_TYPE_CITO, 'C', "13", "13", "", (byte) -115, 'X', "typeCito.png", new String[] { "Geocache|Cache In Trash Out Event", "Geocache", "Cache In Trash Out Event", "CITO" }, 13, 10, 17, 0x020000),
-			new CTyp(CW_TYPE_EARTH, CW_TYPE_EARTH, 'C', "137", "137", "", (byte) 9, 'E', "typeEarth.png", new String[] { "Geocache|Earthcache", "Geocache", "Earthcache", "Earth" }, 18, 11, 7, 0x000400),
-			new CTyp(CW_TYPE_WHEREIGO, CW_TYPE_WHEREIGO, 'C', "1858", "1858", "", (byte) 100, 'G', "typeWhereigo.png", new String[] { "Geocache|Wherigo Cache", "Geocache", "Wherigo Cache", "Wherigo" }, 15, 12, 18, 0x040000),
-			// additional waypoints
-			new CTyp(CW_TYPE_PARKING, CW_TYPE_PARKING, 'A', "50", "", "", (byte) -78, 'P', "typeParking.png", new String[] { "Waypoint|Parking Area", "Parking Area", "Parking Area", "" }, 50, 13, 11, 0x000800),
-			new CTyp(CW_TYPE_STAGE, CW_TYPE_STAGE, 'A', "51", "", "", (byte) -77, 'S', "typeStage.png", new String[] { "Waypoint|Stages of a Multicache", "Stages of a Multicache", "Stages of a Multicache", "" }, 51, 14, 12, 0x001000),
-			new CTyp(CW_TYPE_QUESTION, CW_TYPE_QUESTION, 'A', "52", "", "", (byte) -76, 'Q', "typeQuestion.png", new String[] { "Waypoint|Question to Answer", "Question to Answer", "Question to Answer", "" }, 52, 15, 13, 0x002000),
-			new CTyp(CW_TYPE_FINAL, CW_TYPE_FINAL, 'A', "53", "", "", (byte) -75, 'F', "typeFinal.png", new String[] { "Waypoint|Final Location", "Final Location", "Final Location", "" }, 53, 16, 14, 0x004000),
-			new CTyp(CW_TYPE_TRAILHEAD, CW_TYPE_TRAILHEAD, 'A', "54", "", "", (byte) -74, 'H', "typeTrailhead.png", new String[] { "Waypoint|Trailhead", "Trailhead", "Trailhead", "" }, 54, 17, 15, 0x008000),
-			new CTyp(CW_TYPE_REFERENCE, CW_TYPE_REFERENCE, 'A', "55", "", "", (byte) -73, 'R', "typeReference.png", new String[] { "Waypoint|Reference Point", "Reference Point", "Reference Point", "" }, 55, 18, 16, 0x010000),
-			// error on waypoint
-			new CTyp(CW_TYPE_ERROR, CW_TYPE_ERROR, 'E', "", "", "", (byte) -1, '-', "guiError.png", new String[] { "", "", "", "" }, 49, -1, -1, 0),
-			// mapped types (recognized on input from gpx or download-spider / or cw - version)
-			new CTyp(CW_TYPE_UNKNOWN, (byte) 1, 'C', "", "", "1", (byte) -1, 'U', "", new String[] { "Geocache|Other", "Geocache", "Other", "Other" }, 21, -1, -1, 0),
-			new CTyp(CW_TYPE_UNKNOWN, (byte) 7, 'C', "7", "", "7", (byte) -121, 'U', "", new String[] { "Geocache|Quiz", "Geocache", "Quiz", "Quiz" }, 7, -1, -1, 0),
-			new CTyp(CW_TYPE_UNKNOWN, (byte) 9, 'C', "9", "", "9", (byte) -119, 'U', "", new String[] { "Geocache|Moving", "Geocache", "Moving", "Moving" }, 9, -1, -1, 0),
-			new CTyp(CW_TYPE_TRADITIONAL, (byte) 10, 'C', "10", "", "10", (byte) -118, 'U', "", new String[] { "Geocache|DriveIn", "Geocache", "DriveIn", "DriveIn" }, 10, -1, -1, 0),
-			new CTyp(CW_TYPE_EVENT, (byte) 14, 'C', "", "3653", "", (byte) -1, 'X', "", new String[] { "Geocache|Lost and Found Event Cache", "Geocache", "Lost and Found Event Cache", "" }, 6, -1, -1, 0),
-			new CTyp(CW_TYPE_TRADITIONAL, (byte) 102, 'C', "", "9", "", (byte) -1, 'T', "", new String[] { "Geocache|Project APE Cache", "Geocache", "Project APE Cache", "APE" }, 16, -1, -1, 0),
-			new CTyp(CW_TYPE_EVENT, (byte) 103, 'C', "", "1304", "", (byte) -1, 'X', "", new String[] { "Geocache|GPS Adventures Exhibit", "Geocache", "GPS Adventures Exhibit", "MAZE" }, 17, -1, -1, 0),
-			new CTyp(CW_TYPE_UNKNOWN, (byte) 108, 'C', "", "", "8", (byte) -1, 'U', "", new String[] { "only on OC download", "", "", "" }, 19, -1, -1, 0),
-			new CTyp(CW_TYPE_WHEREIGO, (byte) 15, 'C', "", "", "", (byte) -62, 'G', "", new String[] { "Hack for V2 Typ", "", "", "" }, -1, -1, -1, 0), };
-	// public static final int anzCacheTyps=cTypRef.length;
-	public static final byte maxCWCType = 110;
-	static final byte[] Ref_Index = new byte[maxCWCType];
-	static {
-		// +1 cause error is -1 and array starts at 0
-		for (byte i = (byte) (cTypRef.length - 1); i >= 0; i--) {
-			Ref_Index[1 + cTypRef[i]._cwCType] = i;
-		}
-	}
-
-	public static byte Ref_Index(final byte type) {
-		final byte ret = Ref_Index[cTypRef[Ref_Index[type + 1]]._cwMappedCType + 1];
-		return ret;
-	}
-
-	/**
-	 * check if a given waypoint type is an additional waypoint
-	 *
-	 * @param type
-	 *            waypoint type to check
-	 * @return true if it is an additional waypoint, false otherwise
-	 */
-	public static boolean isAddiWpt(final byte type) {
-		return cTypRef[Ref_Index(type)]._cwCGroup == 'A';
-	}
-
-	/**
-	 * check if a given waypoint type is an cache waypoint
-	 *
-	 * @param type
-	 *            waypoint type to check
-	 * @return true if it is an Cache waypoint, false otherwise
-	 */
-	public static boolean isCacheWpt(final byte type) {
-		return cTypRef[Ref_Index(type)]._cwCGroup == 'C';
-	}
-
-	/**
-	 * check if a given waypoint type is an Custom waypoint
-	 *
-	 * @param type
-	 *            waypoint type to check
-	 * @return true if it is an Custom waypint, false otherwise
-	 */
-	public static boolean isCustomWpt(final byte type) {
-		return cTypRef[Ref_Index(type)]._cwCGroup == 'P';
-	}
-
-	// done for DetailsPanel.java and KML- and TomTom-Exporter
-	/**
-	 * create list of cache types to be shown in GUI drop down lists
-	 *
-	 * @return list of cache types to be shown in GUI drop down list
-	 * @see guiSelect2Cw
-	 * @see cw2GuiSelect
-	 */
-	public static String[] guiTypeStrings() {
-		int j = 0;
-		for (int i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._GUIOrder > j) {
-				j = cTypRef[i]._GUIOrder;
-			}
-		}
-		final String[] ret = new String[j + 1];
-		for (int i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._GUIOrder > -1) {
-				ret[cTypRef[i]._GUIOrder] = MyLocale.getMsg(cTypRef[i]._msgNrCTypeName, "");
-			}
-		}
-		return ret;
-	}
-
-	/**
-	 * translate GUI drop down index selection back to internally stored type
-	 *
-	 * @param selection
-	 *            index value from drop down list
-	 * @return internal type
-	 * @throws IllegalArgumentException
-	 *             if <code>selection</code> can not be matched
-	 * @see guiTypeStrings
-	 * @see cw2GuiSelect
-	 */
-	public static byte guiSelect2Cw(final int selection) {
-		for (byte i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._GUIOrder == selection) {
-				return cTypRef[i]._cwCType;
-			}
-			;
-		}
-		return -1;
-	}
-
-	/**
-	 * translate cache type to position of index to highlight in GUI cache type drop down list
-	 *
-	 * @param typeId
-	 *            internal id of cache type
-	 * @return index of the cache type in GUI list
-	 * @throws IllegalArgumentException
-	 *             if <code>id</code> can not be matched
-	 * @see guiTypeStrings
-	 * @see guiSelect2Cw
-	 */
-	public static int cw2GuiSelect(final byte typeId) {
-		return cTypRef[Ref_Index(typeId)]._GUIOrder;
-	}
-
-	/**
-	 * convert the strings found in import of GPX from GC, OC or TC to internal cache type
-	 *
-	 * @param gpxType
-	 *            type information found in GPX
-	 * @return internal cache type
-	 */
-	public static byte gpxType2CwType(final String gpxType) throws IllegalArgumentException {
-		for (byte i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._gpxWptTypeTag.equalsIgnoreCase(gpxType)) {
-				return cTypRef[i]._cwMappedCType;
-			}
-			;
-		}
-		for (byte i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._gpxWptGCextensionTypTag.equalsIgnoreCase(gpxType)) {
-				return cTypRef[i]._cwMappedCType;
-			}
-			;
-		}
-		final String lowerCaseGPXType = gpxType.toLowerCase();
-		for (byte i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._gpxAlternativeWptTypTags.toLowerCase().indexOf(lowerCaseGPXType) != -1) {
-				return cTypRef[i]._cwMappedCType;
-			}
-			;
-		}
-		// TODO extend definition of _gpxAlternativeWptTypTags for all cases of Mystery
-		// old code was : if (!(gpxType.indexOf("Mystery")==-1)) return CW_TYPE_UNKNOWN;
-		return -1;
-	}
-
-	/**
-	 * convert the cache type information from an OC XML import to internal cache type
-	 *
-	 * @param ocType
-	 *            cache type found in OC XML
-	 * @return internal cache type
-	 * @throws IllegalArgumentException
-	 *             if <code>ocType</code> can not be matched
-	 */
-	public static byte ocType2CwType(final String ocType) {
-		for (int i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._ocCTypeXmlImport.equals(ocType)) {
-				return cTypRef[i]._cwMappedCType;
-			}
-		}
-		return -1;
-	}
-
-	/**
-	 * convert type information discovered by GC spider to internal type information
-	 *
-	 * @param gcType
-	 *            type information from GC spider
-	 * @return internal representation of cache type
-	 * @throws IllegalArgumentException
-	 *             if <code>gcType</code> can not be matched
-	 */
-	public static byte gcSpider2CwType(final String gcType) {
-		for (int i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._gcCTypeSpider.equals(gcType)) {
-				return cTypRef[i]._cwMappedCType;
-			}
-		}
-		return -1;
-	}
-
-	/**
-	 * convert version1 type information to current values
-	 *
-	 * @param type
-	 *            version1 cache type information
-	 * @return current version cache type information or -1
-	 * @deprecated remove once v1 file version compatibility is abandoned
-	 */
-	public static byte v1Converter(final String type) {
-		for (int i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._cwCTypeV1.equals(type)) {
-				return cTypRef[i]._cwMappedCType;
-			}
-		}
-		return -1;
-	}
-
-	/**
-	 * convert version2 type information to current values
-	 *
-	 * @param type
-	 *            version2 cache type information
-	 * @return current version cache type information or -1
-	 * @deprecated remove once v2 file version compatibility is abandoned
-	 */
-	public static byte v2Converter(final byte type) {
-		for (int i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._cwCTypeV2 == type) {
-				return cTypRef[i]._cwMappedCType;
-			}
-		}
-		return -1;
-	}
-
-	/**
-	 * translate cache type to a short version for compact exporters or "smart" cache names.
-	 *
-	 * @param typeId
-	 *            CacheWolf internal type information
-	 * @return abbreviation of cache type
-	 */
-	public static String getExportShortId(final byte typeId) {
-		return "" + cTypRef[Ref_Index(typeId)]._gpxShortCType;
-	}
-
-	/**
-	 * map cache types to images
-	 *
-	 * @param typeId
-	 *            internal cache type id
-	 * @return non qualified name of image
-	 */
-	public static String typeImageForId(final byte typeId) {
-		return cTypRef[Ref_Index(typeId)]._imageName;
-	}
-
-	/**
-	 * generate type description matching those of GC for GPX export
-	 *
-	 * @param typeId
-	 *            internal type id
-	 * @return type information in GC.com <type> GPX format
-	 */
-	public static String type2TypeTag(final byte typeId) {
-		return cTypRef[Ref_Index(typeId)]._gpxWptTypeTag;
-	}
-
-	/**
-	 * generate type description matching those of GC for GPX export
-	 *
-	 * @param typeId
-	 *            internal type id
-	 * @return symb information in GC.com <sym> GPX format
-	 */
-	public static String type2SymTag(final byte typeId) {
-		return cTypRef[Ref_Index(typeId)]._gpxWptSymTag;
-	}
-
-	/**
-	 * generate type description matching those of GC for GPX export
-	 *
-	 * @param typeId
-	 *            internal type id
-	 * @return type information in GC.com <groundspeak:type> GPX format
-	 */
-	public static String type2GSTypeTag(final byte typeId) {
-		return cTypRef[Ref_Index(typeId)]._gpxWptGCextensionTypTag;
-	}
-
-	/**
-	 * generate type description matching those of GC for GPX export
-	 *
-	 * @param typeId
-	 *            internal type id
-	 * @return Gui - string for type
-	 */
-	public static String type2Gui(final byte typeId) {
-		return MyLocale.getMsg(cTypRef[Ref_Index(typeId)]._msgNrCTypeName, "");
-	}
-
-	/**
-	 * select image to be displayed for a given cache type
-	 *
-	 * @param typeId
-	 *            internal cache type id
-	 * @return <code>Image</code> object to be displayed
-	 */
-	public static Image getTypeImage(final byte typeId) {
-		return cTypRef[Ref_Index(typeId)]._iconImage;
-	}
-
-	/**
-	 * select image to be displayed for a given cache type
-	 *
-	 * @param typeId
-	 *            internal cache type id
-	 * @return <code>Image</code> object to be displayed
-	 */
-	public static Image getMapImage(CacheHolder ch) {
-		byte typeId = ch.getType();
-		Image im = cTypRef[Ref_Index(typeId)]._mapImage;
-		if (ch.is_found()) {
-			if (cTypRef[Ref_Index(typeId)]._modImage[found] == null) {
-				cTypRef[Ref_Index(typeId)]._modImage[found] = newOverlayedImage(im, GuiImageBroker.found);
-			}
-			im = cTypRef[Ref_Index(typeId)]._modImage[found];
-		} else if (ch.is_archived()) {
-			if (cTypRef[Ref_Index(typeId)]._modImage[archived] == null) {
-				cTypRef[Ref_Index(typeId)]._modImage[archived] = newOverlayedImage(im, GuiImageBroker.archived);
-			}
-			im = cTypRef[Ref_Index(typeId)]._modImage[archived];
-		} else if (!ch.is_available()) {
-			if (cTypRef[Ref_Index(typeId)]._modImage[disabled] == null) {
-				cTypRef[Ref_Index(typeId)]._modImage[disabled] = newOverlayedImage(im, GuiImageBroker.disabled);
-			}
-			im = cTypRef[Ref_Index(typeId)]._modImage[disabled];
-		} else if (ch.is_owned()) {
-			if (cTypRef[Ref_Index(typeId)]._modImage[owned] == null) {
-				cTypRef[Ref_Index(typeId)]._modImage[owned] = newOverlayedImage(im, GuiImageBroker.owned);
-			}
-			im = cTypRef[Ref_Index(typeId)]._modImage[owned];
-		} else if (ch.getCacheStatus().startsWith(MyLocale.getMsg(362, "solved"))) {
-			if (cTypRef[Ref_Index(typeId)]._modImage[solved] == null) {
-				cTypRef[Ref_Index(typeId)]._modImage[solved] = newOverlayedImage(im, GuiImageBroker.solved);
-			}
-			im = cTypRef[Ref_Index(typeId)]._modImage[solved];
-		} else if (ch.getCacheStatus().indexOf(MyLocale.getMsg(319, "Not Found")) > -1) {
-			if (cTypRef[Ref_Index(typeId)]._modImage[dnf] == null) {
-				cTypRef[Ref_Index(typeId)]._modImage[dnf] = newOverlayedImage(im, GuiImageBroker.dnf);
-			}
-			im = cTypRef[Ref_Index(typeId)]._modImage[dnf];
-		} else if (ch.getCacheName().toLowerCase().indexOf("bonus") > -1) {
-			if (cTypRef[Ref_Index(typeId)]._modImage[bonus] == null) {
-				cTypRef[Ref_Index(typeId)]._modImage[bonus] = newOverlayedImage(im, GuiImageBroker.bonus);
-			}
-			im = cTypRef[Ref_Index(typeId)]._modImage[bonus];
-		}
-		return im;
-	}
-
-	/**
-	 * select image to be displayed for a given cache type
-	 *
-	 * @param typeId
-	 *            internal cache type id
-	 * @param Image
-	 *            object to be displayed
-	 */
-	public static void setTypeImage(final byte id, final Image iconImage) {
-		if (cTypRef[Ref_Index(id)]._iconImage != cTypRef[Ref_Index(id)]._mapImage)
-			cTypRef[Ref_Index(id)]._iconImage.free();
-		cTypRef[Ref_Index(id)]._iconImage = iconImage;
-	}
-
-	/**
-	 * select image to be displayed for a given cache type
-	 *
-	 * @param typeId
-	 *            internal cache type id
-	 * @param Image
-	 *            object to be displayed
-	 */
-	public static void setMapImage(final byte id, final Image mapImage) {
-		if (cTypRef[Ref_Index(id)]._iconImage != cTypRef[Ref_Index(id)]._mapImage)
-			cTypRef[Ref_Index(id)]._mapImage.free();
-		cTypRef[Ref_Index(id)]._mapImage = mapImage;
-	}
-
-	// TODO do it better in Version 4
-	public static int getCacheTypePattern(final byte typeId) {
-		return cTypRef[Ref_Index(typeId)]._FilterPattern;
-	}
-
-	public static int Type_FilterString2Type_FilterPattern(final String Type_FilterString) {
-		int typeMatchPattern = 0;
-		for (int i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._FilterStringPos > -1) {
-				if (Type_FilterString.charAt(cTypRef[i]._FilterStringPos) == '1') {
-					typeMatchPattern |= cTypRef[i]._FilterPattern;
-				}
-			}
-		}
-		return typeMatchPattern;
-	}
-
-	public static boolean hasTypeMatchPattern(final int typeMatchPattern) {
-		return typeMatchPattern != 0;
-	}
-
-	public static boolean hasMainTypeMatchPattern(final int typeMatchPattern) {
-		int TYPE_MAIN = 0;
-		for (int i = 0; i < cTypRef.length; i++) {
-			if (cTypRef[i]._cwCGroup == 'C' || cTypRef[i]._cwCGroup == 'P') {
-				TYPE_MAIN |= cTypRef[i]._FilterPattern;
-			}
-		}
-		return (typeMatchPattern & TYPE_MAIN) != 0;
-	}
-
-	private static Image newOverlayedImage(Image imsrc, Image imovl) {
-		// Overlay added at topleft
-		int srcWidth = imsrc.getWidth();
-		int srcHeight = imsrc.getHeight();
-		int ovlWidth = imovl.getWidth();
-		int ovlHeight = imovl.getHeight();
-		if (srcWidth < ovlWidth || srcHeight < ovlHeight)
-			return imsrc;
-		int[] srcPixels = imsrc.getPixels(null, 0, 0, 0, srcWidth, srcHeight, 0);
-		int[] ovlPixels = imovl.getPixels(null, 0, 0, 0, ovlWidth, ovlHeight, 0);
-		int offsrc;
-		int offovl = 0;
-		for (int y = 0; y < ovlHeight; y++) { // top down
-			offsrc = y * srcWidth;
-			for (int x = 0; x < ovlWidth; x++) {
-				int alphaval = (ovlPixels[offovl] >> 24) & 0xff;
-				if (alphaval > 0) {
-					srcPixels[offsrc] = ovlPixels[offovl];
-				}
-				offovl++;
-				offsrc++;
-			}
-		}
-		Image modImage = new Image(imsrc, 0);
-		modImage.setPixels(srcPixels, 0, 0, 0, srcWidth, srcHeight, 0);
-		return modImage;
-	}
-
-	// TODO it for OCXMLImporterScreen and FilterScreen ?
-}
+/*
+GNU General Public License
+CacheWolf is a software for PocketPC, Win and Linux that
+enables paperless caching.
+It supports the sites geocaching.com and opencaching.de
+
+Copyright (C) 2006  CacheWolf development team
+See http://developer.berlios.de/projects/cachewolf/
+for more information.
+Contact: 	bilbowolf at users.berlios.de
+			kalli at users.berlios.de
+
+This program is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; version 2 of the License.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program; if not, write to the Free Software
+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+package CacheWolf;
+
+import ewe.fx.Image;
+
+final class CTyp {
+	public byte _cwMappedCType; // CW Cache Typ intern
+	public byte _cwCType; // CW Cache Typ intern
+	public char _cwCGroup; // Cache Typ Group intern
+	public String _cwCTypeV1; // V1 Cache Typ
+	public String _gcCTypeSpider; // GC Type on Spider Import from GC.com
+	public String _ocCTypeXmlImport; // GC Type on Spider Import from GC.com
+	public byte _cwCTypeV2; // V2 Cache Typ
+	public char _gpxShortCType; // Short Typ (one char abbreviation)
+	public String _imageName; // name of imageName for Icon, "showCacheInBrowser" and "KML Export"
+	public String _gpxWptTypeTag; // gpx wpt <type> tag
+	public String _gpxWptSymTag; // gpx wpt <sym> tag
+	public String _gpxWptGCextensionTypTag; // gpx cache extension <groundspeak:type> tag
+	public String _gpxAlternativeWptTypTags; // alternative typ - names for gpx from other sources
+	public int _msgNrCTypeName; // message number for gui cache Typ name
+	public int _GUIOrder; // sort Order in GUI selection //TODO more intelligent implementation (now manually change each line on new one)
+	public int _FilterStringPos; // BitNr in Filter String (profile)
+	public int _FilterPattern; // 2**BitNr in Filter int (does not correspond with BitNr in String)
+	public Image _iconImage;
+	public Image _mapImage;
+	public Image[] _modImage = { null, null, null, null, null, null, null };
+
+	public CTyp(byte cwMappedCType, byte cwCType, char cwCGroup, String cwCTypeV1, String gcCTypeSpider, String ocCTypeXmlImport, byte cwCTypeV2, char gpxShortCType, String imageName, String[] gpx, int msgNrCTypeName, int gUIOrder, int filterStringPos,
+			int filterPattern) {
+
+		_cwMappedCType = cwMappedCType;
+		_cwCType = cwCType;
+		_cwCGroup = cwCGroup;
+		_cwCTypeV1 = cwCTypeV1;
+		_gcCTypeSpider = gcCTypeSpider;
+		_ocCTypeXmlImport = ocCTypeXmlImport;
+		_cwCTypeV2 = cwCTypeV2;
+		_gpxShortCType = gpxShortCType;
+		_imageName = imageName;
+		_gpxWptTypeTag = gpx[0];
+		_gpxWptSymTag = gpx[1];
+		_gpxWptGCextensionTypTag = gpx[2];
+		_gpxAlternativeWptTypTags = gpx[3];
+		_msgNrCTypeName = msgNrCTypeName;
+		_GUIOrder = gUIOrder;
+		_FilterStringPos = filterStringPos;
+		_FilterPattern = filterPattern;
+		if (!_imageName.equals("")) {
+			_iconImage = new Image(_imageName);
+			_mapImage = _iconImage;
+		}
+	}
+}
+
+/**
+ * Handles all aspects of converting cache type information
+ * from and to the various im- and exporters ...
+ * converting legacy profiles to current standard
+ *
+ * Do not instantiate this class, only use it in a static way
+ */
+public final class CacheType {
+
+	/** thou shallst not instantiate this object */
+	private CacheType() {
+		// Nothing to do
+	}
+
+	/** custom waypoint */
+	public static final byte CW_TYPE_CUSTOM = 0;
+	/** traditional cache (GC,OC) */
+	public static final byte CW_TYPE_TRADITIONAL = 2;
+	/** multi cache (GC,OC) */
+	public static final byte CW_TYPE_MULTI = 3;
+	/** virtual cache (GC,OC) */
+	public static final byte CW_TYPE_VIRTUAL = 4;
+	/** letterbox cache (GC) */
+	public static final byte CW_TYPE_LETTERBOX = 5;
+	/** event cache (GC,OC) */
+	public static final byte CW_TYPE_EVENT = 6;
+	/** unknown cache - Mystery (GC) */
+	public static final byte CW_TYPE_UNKNOWN = 8;
+	/** drive in cache (OC) */
+	public static final byte CW_TYPE_DRIVE_IN = 10;
+	/** webcam cache (GC,OC) */
+	public static final byte CW_TYPE_WEBCAM = 11;
+	/** locationless cache (GC) */
+	public static final byte CW_TYPE_LOCATIONLESS = 12;
+	/** CITO cache (GC) */
+	public static final byte CW_TYPE_CITO = 13;
+	/** Mega Event Cache (GC) */
+	public static final byte CW_TYPE_MEGA_EVENT = 100;
+	/** WhereIGo Cache (GC) */
+	public static final byte CW_TYPE_WHEREIGO = 101;
+	/** Earth Cache (GC) */
+	public static final byte CW_TYPE_EARTH = 104;
+	/** Additional Waypoint Parking (GC) */
+	public static final byte CW_TYPE_PARKING = 50;
+	/** Additional Waypoint Stage of a Multi (GC) */
+	public static final byte CW_TYPE_STAGE = 51;
+	/** Additional Waypoint Question to answer (GC) */
+	public static final byte CW_TYPE_QUESTION = 52;
+	/** Additional Waypoint Final (GC) */
+	public static final byte CW_TYPE_FINAL = 53;
+	/** Additional Waypoint Trailhead (GC) */
+	public static final byte CW_TYPE_TRAILHEAD = 54;
+	/** Additional Waypoint Reference (GC) */
+	public static final byte CW_TYPE_REFERENCE = 55;
+	/** unrecognized cache type or missing information */
+	public static final byte CW_TYPE_ERROR = -1;
+	String[] ggpx = { "Geocache|Custom", "Custom", "Custom", "" };
+	private static final byte found = 0;
+	private static final byte archived = 1;
+	private static final byte disabled = 2;
+	private static final byte solved = 3;
+	private static final byte bonus = 4;
+	private static final byte owned = 5;
+	private static final byte dnf = 6;
+	//
+	private static final CTyp[] cTypRef = {
+			// custom waypoints
+			new CTyp(CW_TYPE_CUSTOM, CW_TYPE_CUSTOM, 'P', "0", "", "", (byte) -128, 'C', "typeCustom.png", new String[] { "Geocache|Custom", "Custom", "Custom", "" }, 1, 0, 10, 0x000100),
+			// Cache waypoints
+			new CTyp(CW_TYPE_TRADITIONAL, CW_TYPE_TRADITIONAL, 'C', "2", "2", "2", (byte) -126, 'T', "typeTradi.png", new String[] { "Geocache|Traditional Cache", "Geocache", "Traditional Cache", "Traditional|Classic" }, 2, 1, 0, 0x000001),
+			new CTyp(CW_TYPE_MULTI, CW_TYPE_MULTI, 'C', "3", "3", "3", (byte) -125, 'M', "typeMulti.png", new String[] { "Geocache|Multi-cache", "Geocache", "Multi-cache", "Multi|Offset" }, 3, 2, 1, 0x000002),
+			new CTyp(CW_TYPE_VIRTUAL, CW_TYPE_VIRTUAL, 'C', "4", "4", "4", (byte) -124, 'V', "typeVirtual.png", new String[] { "Geocache|Virtual Cache", "Geocache", "Virtual Cache", "Virtual" }, 4, 3, 2, 0x000004),
+			new CTyp(CW_TYPE_LETTERBOX, CW_TYPE_LETTERBOX, 'C', "5", "5", "", (byte) -123, 'L', "typeLetterbox.png", new String[] { "Geocache|Letterbox Hybrid", "Geocache", "Letterbox Hybrid", "Letterbox" }, 5, 4, 3, 0x000008),
+			new CTyp(CW_TYPE_EVENT, CW_TYPE_EVENT, 'C', "6", "6", "6", (byte) -122, 'X', "typeEvent.png", new String[] { "Geocache|Event Cache", "Geocache", "Event Cache", "Event" }, 6, 5, 4, 0x000010),
+			new CTyp(CW_TYPE_MEGA_EVENT, CW_TYPE_MEGA_EVENT, 'C', "453", "453", "", (byte) 101, 'X', "typeMegaevent.png", new String[] { "Geocache|Mega-Event Cache", "Geocache", "Mega-Event Cache", "Mega" }, 14, 6, 9, 0x000200),
+			new CTyp(CW_TYPE_WEBCAM, CW_TYPE_WEBCAM, 'C', "11", "11", "5", (byte) -117, 'W', "typeWebcam.png", new String[] { "Geocache|Webcam Cache", "Geocache", "Webcam Cache", "Webcam" }, 11, 7, 5, 0x000020),
+			new CTyp(CW_TYPE_UNKNOWN, CW_TYPE_UNKNOWN, 'C', "8", "8", "", (byte) -120, 'U', "typeUnknown.png", new String[] { "Geocache|Unknown Cache", "Geocache", "Unknown Cache", "Mystery" }, 8, 8, 6, 0x000040),
+			new CTyp(CW_TYPE_LOCATIONLESS, CW_TYPE_LOCATIONLESS, 'C', "12", "12", "", (byte) -116, 'O', "typeLocless.png", new String[] { "Geocache|Locationless (Reverse) Cache", "Geocache", "Locationless (Reverse) Cache", "Locationless" }, 12, 9, 8,
+					0x000080),
+			new CTyp(CW_TYPE_CITO, CW_TYPE_CITO, 'C', "13", "13", "", (byte) -115, 'X', "typeCito.png", new String[] { "Geocache|Cache In Trash Out Event", "Geocache", "Cache In Trash Out Event", "CITO" }, 13, 10, 17, 0x020000),
+			new CTyp(CW_TYPE_EARTH, CW_TYPE_EARTH, 'C', "137", "137", "", (byte) 9, 'E', "typeEarth.png", new String[] { "Geocache|Earthcache", "Geocache", "Earthcache", "Earth" }, 18, 11, 7, 0x000400),
+			new CTyp(CW_TYPE_WHEREIGO, CW_TYPE_WHEREIGO, 'C', "1858", "1858", "", (byte) 100, 'G', "typeWhereigo.png", new String[] { "Geocache|Wherigo Cache", "Geocache", "Wherigo Cache", "Wherigo" }, 15, 12, 18, 0x040000),
+			// additional waypoints
+			new CTyp(CW_TYPE_PARKING, CW_TYPE_PARKING, 'A', "50", "", "", (byte) -78, 'P', "typeParking.png", new String[] { "Waypoint|Parking Area", "Parking Area", "Parking Area", "" }, 50, 13, 11, 0x000800),
+			new CTyp(CW_TYPE_STAGE, CW_TYPE_STAGE, 'A', "51", "", "", (byte) -77, 'S', "typeStage.png", new String[] { "Waypoint|Stages of a Multicache", "Stages of a Multicache", "Stages of a Multicache", "" }, 51, 14, 12, 0x001000),
+			new CTyp(CW_TYPE_QUESTION, CW_TYPE_QUESTION, 'A', "52", "", "", (byte) -76, 'Q', "typeQuestion.png", new String[] { "Waypoint|Question to Answer", "Question to Answer", "Question to Answer", "" }, 52, 15, 13, 0x002000),
+			new CTyp(CW_TYPE_FINAL, CW_TYPE_FINAL, 'A', "53", "", "", (byte) -75, 'F', "typeFinal.png", new String[] { "Waypoint|Final Location", "Final Location", "Final Location", "" }, 53, 16, 14, 0x004000),
+			new CTyp(CW_TYPE_TRAILHEAD, CW_TYPE_TRAILHEAD, 'A', "54", "", "", (byte) -74, 'H', "typeTrailhead.png", new String[] { "Waypoint|Trailhead", "Trailhead", "Trailhead", "" }, 54, 17, 15, 0x008000),
+			new CTyp(CW_TYPE_REFERENCE, CW_TYPE_REFERENCE, 'A', "55", "", "", (byte) -73, 'R', "typeReference.png", new String[] { "Waypoint|Reference Point", "Reference Point", "Reference Point", "" }, 55, 18, 16, 0x010000),
+			// error on waypoint
+			new CTyp(CW_TYPE_ERROR, CW_TYPE_ERROR, 'E', "", "", "", (byte) -1, '-', "guiError.png", new String[] { "", "", "", "" }, 49, -1, -1, 0),
+			// mapped types (recognized on input from gpx or download-spider / or cw - version)
+			new CTyp(CW_TYPE_UNKNOWN, (byte) 1, 'C', "", "", "1", (byte) -1, 'U', "", new String[] { "Geocache|Other", "Geocache", "Other", "Other" }, 21, -1, -1, 0),
+			new CTyp(CW_TYPE_UNKNOWN, (byte) 7, 'C', "7", "", "7", (byte) -121, 'U', "", new String[] { "Geocache|Quiz", "Geocache", "Quiz", "Quiz" }, 7, -1, -1, 0),
+			new CTyp(CW_TYPE_UNKNOWN, (byte) 9, 'C', "9", "", "9", (byte) -119, 'U', "", new String[] { "Geocache|Moving", "Geocache", "Moving", "Moving" }, 9, -1, -1, 0),
+			new CTyp(CW_TYPE_TRADITIONAL, (byte) 10, 'C', "10", "", "10", (byte) -118, 'U', "", new String[] { "Geocache|DriveIn", "Geocache", "DriveIn", "DriveIn" }, 10, -1, -1, 0),
+			new CTyp(CW_TYPE_EVENT, (byte) 14, 'C', "", "3653", "", (byte) -1, 'X', "", new String[] { "Geocache|Lost and Found Event Cache", "Geocache", "Lost and Found Event Cache", "" }, 6, -1, -1, 0),
+			new CTyp(CW_TYPE_TRADITIONAL, (byte) 102, 'C', "", "9", "", (byte) -1, 'T', "", new String[] { "Geocache|Project APE Cache", "Geocache", "Project APE Cache", "APE" }, 16, -1, -1, 0),
+			new CTyp(CW_TYPE_EVENT, (byte) 103, 'C', "", "1304", "", (byte) -1, 'X', "", new String[] { "Geocache|GPS Adventures Exhibit", "Geocache", "GPS Adventures Exhibit", "MAZE" }, 17, -1, -1, 0),
+			new CTyp(CW_TYPE_UNKNOWN, (byte) 108, 'C', "", "", "8", (byte) -1, 'U', "", new String[] { "only on OC download", "", "", "" }, 19, -1, -1, 0),
+			new CTyp(CW_TYPE_WHEREIGO, (byte) 15, 'C', "", "", "", (byte) -62, 'G', "", new String[] { "Hack for V2 Typ", "", "", "" }, -1, -1, -1, 0), };
+	// public static final int anzCacheTyps=cTypRef.length;
+	public static final byte maxCWCType = 110;
+	static final byte[] Ref_Index = new byte[maxCWCType];
+	static {
+		// +1 cause error is -1 and array starts at 0
+		for (byte i = (byte) (cTypRef.length - 1); i >= 0; i--) {
+			Ref_Index[1 + cTypRef[i]._cwCType] = i;
+		}
+	}
+
+	public static byte Ref_Index(final byte type) {
+		final byte ret = Ref_Index[cTypRef[Ref_Index[type + 1]]._cwMappedCType + 1];
+		return ret;
+	}
+
+	/**
+	 * check if a given waypoint type is an additional waypoint
+	 *
+	 * @param type
+	 *            waypoint type to check
+	 * @return true if it is an additional waypoint, false otherwise
+	 */
+	public static boolean isAddiWpt(final byte type) {
+		return cTypRef[Ref_Index(type)]._cwCGroup == 'A';
+	}
+
+	/**
+	 * check if a given waypoint type is an cache waypoint
+	 *
+	 * @param type
+	 *            waypoint type to check
+	 * @return true if it is an Cache waypoint, false otherwise
+	 */
+	public static boolean isCacheWpt(final byte type) {
+		return cTypRef[Ref_Index(type)]._cwCGroup == 'C';
+	}
+
+	/**
+	 * check if a given waypoint type is an Custom waypoint
+	 *
+	 * @param type
+	 *            waypoint type to check
+	 * @return true if it is an Custom waypint, false otherwise
+	 */
+	public static boolean isCustomWpt(final byte type) {
+		return cTypRef[Ref_Index(type)]._cwCGroup == 'P';
+	}
+
+	// done for DetailsPanel.java and KML- and TomTom-Exporter
+	/**
+	 * create list of cache types to be shown in GUI drop down lists
+	 *
+	 * @return list of cache types to be shown in GUI drop down list
+	 * @see guiSelect2Cw
+	 * @see cw2GuiSelect
+	 */
+	public static String[] guiTypeStrings() {
+		int j = 0;
+		for (int i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._GUIOrder > j) {
+				j = cTypRef[i]._GUIOrder;
+			}
+		}
+		final String[] ret = new String[j + 1];
+		for (int i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._GUIOrder > -1) {
+				ret[cTypRef[i]._GUIOrder] = MyLocale.getMsg(cTypRef[i]._msgNrCTypeName, "");
+			}
+		}
+		return ret;
+	}
+
+	/**
+	 * translate GUI drop down index selection back to internally stored type
+	 *
+	 * @param selection
+	 *            index value from drop down list
+	 * @return internal type
+	 * @throws IllegalArgumentException
+	 *             if <code>selection</code> can not be matched
+	 * @see guiTypeStrings
+	 * @see cw2GuiSelect
+	 */
+	public static byte guiSelect2Cw(final int selection) {
+		for (byte i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._GUIOrder == selection) {
+				return cTypRef[i]._cwCType;
+			}
+			;
+		}
+		return -1;
+	}
+
+	/**
+	 * translate cache type to position of index to highlight in GUI cache type drop down list
+	 *
+	 * @param typeId
+	 *            internal id of cache type
+	 * @return index of the cache type in GUI list
+	 * @throws IllegalArgumentException
+	 *             if <code>id</code> can not be matched
+	 * @see guiTypeStrings
+	 * @see guiSelect2Cw
+	 */
+	public static int cw2GuiSelect(final byte typeId) {
+		return cTypRef[Ref_Index(typeId)]._GUIOrder;
+	}
+
+	/**
+	 * convert the strings found in import of GPX from GC, OC or TC to internal cache type
+	 *
+	 * @param gpxType
+	 *            type information found in GPX
+	 * @return internal cache type
+	 */
+	public static byte gpxType2CwType(final String gpxType) throws IllegalArgumentException {
+		for (byte i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._gpxWptTypeTag.equalsIgnoreCase(gpxType)) {
+				return cTypRef[i]._cwMappedCType;
+			}
+			;
+		}
+		for (byte i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._gpxWptGCextensionTypTag.equalsIgnoreCase(gpxType)) {
+				return cTypRef[i]._cwMappedCType;
+			}
+			;
+		}
+		final String lowerCaseGPXType = gpxType.toLowerCase();
+		for (byte i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._gpxAlternativeWptTypTags.toLowerCase().indexOf(lowerCaseGPXType) != -1) {
+				return cTypRef[i]._cwMappedCType;
+			}
+			;
+		}
+		// TODO extend definition of _gpxAlternativeWptTypTags for all cases of Mystery
+		// old code was : if (!(gpxType.indexOf("Mystery")==-1)) return CW_TYPE_UNKNOWN;
+		return -1;
+	}
+
+	/**
+	 * convert the cache type information from an OC XML import to internal cache type
+	 *
+	 * @param ocType
+	 *            cache type found in OC XML
+	 * @return internal cache type
+	 * @throws IllegalArgumentException
+	 *             if <code>ocType</code> can not be matched
+	 */
+	public static byte ocType2CwType(final String ocType) {
+		for (int i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._ocCTypeXmlImport.equals(ocType)) {
+				return cTypRef[i]._cwMappedCType;
+			}
+		}
+		return -1;
+	}
+
+	/**
+	 * convert type information discovered by GC spider to internal type information
+	 *
+	 * @param gcType
+	 *            type information from GC spider
+	 * @return internal representation of cache type
+	 * @throws IllegalArgumentException
+	 *             if <code>gcType</code> can not be matched
+	 */
+	public static byte gcSpider2CwType(final String gcType) {
+		for (int i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._gcCTypeSpider.equals(gcType)) {
+				return cTypRef[i]._cwMappedCType;
+			}
+		}
+		return -1;
+	}
+
+	/**
+	 * convert version1 type information to current values
+	 *
+	 * @param type
+	 *            version1 cache type information
+	 * @return current version cache type information or -1
+	 * @deprecated remove once v1 file version compatibility is abandoned
+	 */
+	public static byte v1Converter(final String type) {
+		for (int i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._cwCTypeV1.equals(type)) {
+				return cTypRef[i]._cwMappedCType;
+			}
+		}
+		return -1;
+	}
+
+	/**
+	 * convert version2 type information to current values
+	 *
+	 * @param type
+	 *            version2 cache type information
+	 * @return current version cache type information or -1
+	 * @deprecated remove once v2 file version compatibility is abandoned
+	 */
+	public static byte v2Converter(final byte type) {
+		for (int i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._cwCTypeV2 == type) {
+				return cTypRef[i]._cwMappedCType;
+			}
+		}
+		return -1;
+	}
+
+	/**
+	 * translate cache type to a short version for compact exporters or "smart" cache names.
+	 *
+	 * @param typeId
+	 *            CacheWolf internal type information
+	 * @return abbreviation of cache type
+	 */
+	public static String getExportShortId(final byte typeId) {
+		return "" + cTypRef[Ref_Index(typeId)]._gpxShortCType;
+	}
+
+	/**
+	 * map cache types to images
+	 *
+	 * @param typeId
+	 *            internal cache type id
+	 * @return non qualified name of image
+	 */
+	public static String typeImageForId(final byte typeId) {
+		return cTypRef[Ref_Index(typeId)]._imageName;
+	}
+
+	/**
+	 * generate type description matching those of GC for GPX export
+	 *
+	 * @param typeId
+	 *            internal type id
+	 * @return type information in GC.com <type> GPX format
+	 */
+	public static String type2TypeTag(final byte typeId) {
+		return cTypRef[Ref_Index(typeId)]._gpxWptTypeTag;
+	}
+
+	/**
+	 * generate type description matching those of GC for GPX export
+	 *
+	 * @param typeId
+	 *            internal type id
+	 * @return symb information in GC.com <sym> GPX format
+	 */
+	public static String type2SymTag(final byte typeId) {
+		return cTypRef[Ref_Index(typeId)]._gpxWptSymTag;
+	}
+
+	/**
+	 * generate type description matching those of GC for GPX export
+	 *
+	 * @param typeId
+	 *            internal type id
+	 * @return type information in GC.com <groundspeak:type> GPX format
+	 */
+	public static String type2GSTypeTag(final byte typeId) {
+		return cTypRef[Ref_Index(typeId)]._gpxWptGCextensionTypTag;
+	}
+
+	/**
+	 * generate type description matching those of GC for GPX export
+	 *
+	 * @param typeId
+	 *            internal type id
+	 * @return Gui - string for type
+	 */
+	public static String type2Gui(final byte typeId) {
+		return MyLocale.getMsg(cTypRef[Ref_Index(typeId)]._msgNrCTypeName, "");
+	}
+
+	/**
+	 * select image to be displayed for a given cache type
+	 *
+	 * @param typeId
+	 *            internal cache type id
+	 * @return <code>Image</code> object to be displayed
+	 */
+	public static Image getTypeImage(final byte typeId) {
+		return cTypRef[Ref_Index(typeId)]._iconImage;
+	}
+
+	/**
+	 * select image to be displayed for a given cache type
+	 *
+	 * @param typeId
+	 *            internal cache type id
+	 * @return <code>Image</code> object to be displayed
+	 */
+	public static Image getMapImage(CacheHolder ch) {
+		byte typeId = ch.getType();
+		Image im = cTypRef[Ref_Index(typeId)]._mapImage;
+		if (ch.is_found()) {
+			if (cTypRef[Ref_Index(typeId)]._modImage[found] == null) {
+				cTypRef[Ref_Index(typeId)]._modImage[found] = newOverlayedImage(im, GuiImageBroker.found);
+			}
+			im = cTypRef[Ref_Index(typeId)]._modImage[found];
+		} else if (ch.is_archived()) {
+			if (cTypRef[Ref_Index(typeId)]._modImage[archived] == null) {
+				cTypRef[Ref_Index(typeId)]._modImage[archived] = newOverlayedImage(im, GuiImageBroker.archived);
+			}
+			im = cTypRef[Ref_Index(typeId)]._modImage[archived];
+		} else if (!ch.is_available()) {
+			if (cTypRef[Ref_Index(typeId)]._modImage[disabled] == null) {
+				cTypRef[Ref_Index(typeId)]._modImage[disabled] = newOverlayedImage(im, GuiImageBroker.disabled);
+			}
+			im = cTypRef[Ref_Index(typeId)]._modImage[disabled];
+		} else if (ch.is_owned()) {
+			if (cTypRef[Ref_Index(typeId)]._modImage[owned] == null) {
+				cTypRef[Ref_Index(typeId)]._modImage[owned] = newOverlayedImage(im, GuiImageBroker.owned);
+			}
+			im = cTypRef[Ref_Index(typeId)]._modImage[owned];
+		} else if (ch.getCacheStatus().startsWith(MyLocale.getMsg(362, "solved"))) {
+			if (cTypRef[Ref_Index(typeId)]._modImage[solved] == null) {
+				cTypRef[Ref_Index(typeId)]._modImage[solved] = newOverlayedImage(im, GuiImageBroker.solved);
+			}
+			im = cTypRef[Ref_Index(typeId)]._modImage[solved];
+		} else if (ch.getCacheStatus().indexOf(MyLocale.getMsg(319, "Not Found")) > -1) {
+			if (cTypRef[Ref_Index(typeId)]._modImage[dnf] == null) {
+				cTypRef[Ref_Index(typeId)]._modImage[dnf] = newOverlayedImage(im, GuiImageBroker.dnf);
+			}
+			im = cTypRef[Ref_Index(typeId)]._modImage[dnf];
+		} else if (ch.getCacheName().toLowerCase().indexOf("bonus") > -1) {
+			if (cTypRef[Ref_Index(typeId)]._modImage[bonus] == null) {
+				cTypRef[Ref_Index(typeId)]._modImage[bonus] = newOverlayedImage(im, GuiImageBroker.bonus);
+			}
+			im = cTypRef[Ref_Index(typeId)]._modImage[bonus];
+		}
+		return im;
+	}
+
+	/**
+	 * select image to be displayed for a given cache type
+	 *
+	 * @param typeId
+	 *            internal cache type id
+	 * @param Image
+	 *            object to be displayed
+	 */
+	public static void setTypeImage(final byte id, final Image iconImage) {
+		if (cTypRef[Ref_Index(id)]._iconImage != cTypRef[Ref_Index(id)]._mapImage)
+			cTypRef[Ref_Index(id)]._iconImage.free();
+		cTypRef[Ref_Index(id)]._iconImage = iconImage;
+	}
+
+	/**
+	 * select image to be displayed for a given cache type
+	 *
+	 * @param typeId
+	 *            internal cache type id
+	 * @param Image
+	 *            object to be displayed
+	 */
+	public static void setMapImage(final byte id, final Image mapImage) {
+		if (cTypRef[Ref_Index(id)]._iconImage != cTypRef[Ref_Index(id)]._mapImage)
+			cTypRef[Ref_Index(id)]._mapImage.free();
+		cTypRef[Ref_Index(id)]._mapImage = mapImage;
+	}
+
+	// TODO do it better in Version 4
+	public static int getCacheTypePattern(final byte typeId) {
+		return cTypRef[Ref_Index(typeId)]._FilterPattern;
+	}
+
+	public static int Type_FilterString2Type_FilterPattern(final String Type_FilterString) {
+		int typeMatchPattern = 0;
+		for (int i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._FilterStringPos > -1) {
+				if (Type_FilterString.charAt(cTypRef[i]._FilterStringPos) == '1') {
+					typeMatchPattern |= cTypRef[i]._FilterPattern;
+				}
+			}
+		}
+		return typeMatchPattern;
+	}
+
+	public static boolean hasTypeMatchPattern(final int typeMatchPattern) {
+		return typeMatchPattern != 0;
+	}
+
+	public static boolean hasMainTypeMatchPattern(final int typeMatchPattern) {
+		int TYPE_MAIN = 0;
+		for (int i = 0; i < cTypRef.length; i++) {
+			if (cTypRef[i]._cwCGroup == 'C' || cTypRef[i]._cwCGroup == 'P') {
+				TYPE_MAIN |= cTypRef[i]._FilterPattern;
+			}
+		}
+		return (typeMatchPattern & TYPE_MAIN) != 0;
+	}
+
+	private static Image newOverlayedImage(Image imsrc, Image imovl) {
+		// Overlay added at topleft
+		int srcWidth = imsrc.getWidth();
+		int srcHeight = imsrc.getHeight();
+		int ovlWidth = imovl.getWidth();
+		int ovlHeight = imovl.getHeight();
+		if (srcWidth < ovlWidth || srcHeight < ovlHeight)
+			return imsrc;
+		int[] srcPixels = imsrc.getPixels(null, 0, 0, 0, srcWidth, srcHeight, 0);
+		int[] ovlPixels = imovl.getPixels(null, 0, 0, 0, ovlWidth, ovlHeight, 0);
+		int offsrc;
+		int offovl = 0;
+		for (int y = 0; y < ovlHeight; y++) { // top down
+			offsrc = y * srcWidth;
+			for (int x = 0; x < ovlWidth; x++) {
+				int alphaval = (ovlPixels[offovl] >> 24) & 0xff;
+				if (alphaval > 0) {
+					srcPixels[offsrc] = ovlPixels[offovl];
+				}
+				offovl++;
+				offsrc++;
+			}
+		}
+		Image modImage = new Image(imsrc, 0);
+		modImage.setPixels(srcPixels, 0, 0, 0, srcWidth, srcHeight, 0);
+		return modImage;
+	}
+
+	// TODO it for OCXMLImporterScreen and FilterScreen ?
+}

Modified: branches/r1.2/src/CacheWolf/DetailsPanel.java
===================================================================
--- branches/r1.2/src/CacheWolf/DetailsPanel.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/DetailsPanel.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -573,7 +573,6 @@
 				ch.setCacheSize(CacheSize.CW_SIZE_NOTCHOSEN);
 				Global.mainTab.newWaypoint(ch);
 			} else if (ev.target == btnGoto) {
-				// FIXME: if something changed saveDirtyWaypoint();
 				Global.mainTab.gotoP.setDestinationAndSwitch(cache);
 			} else if (ev.target == btnCoordinates) {
 				CWPoint coords = new CWPoint(btnCoordinates.getText(), TransformCoordinates.CW);

Modified: branches/r1.2/src/CacheWolf/Extractor.java
===================================================================
--- branches/r1.2/src/CacheWolf/Extractor.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/Extractor.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -47,7 +47,7 @@
 	 * startOffset = The beginning offset from which to start the search in sTxt<br>
 	 * betweenonly = if false the string returned will inlcude st and e;
 	 * if true it will not include st and e.
-	 * 
+	 *
 	 */
 	public Extractor(String searchText, String st, String e, int startOffset, boolean betweenonly) {
 		_startOffset = startOffset;
@@ -59,7 +59,7 @@
 
 	/**
 	 * Mehtod to set the source text to be searched through
-	 * 
+	 *
 	 */
 	public void set(String searchText, String st, String e, int startOffset, boolean betweenonly) {
 		_startOffset = startOffset;
@@ -74,11 +74,6 @@
 		_startOffset = 0;
 	}
 
-	public void set(String searchText, int startOffset) {
-		_searchText = searchText;
-		_startOffset = startOffset;
-	}
-
 	public String findFirst(String searchText) {
 		_searchText = searchText;
 		_startOffset = 0;

Modified: branches/r1.2/src/CacheWolf/MainMenu.java
===================================================================
--- branches/r1.2/src/CacheWolf/MainMenu.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/MainMenu.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -89,7 +89,7 @@
 	private MenuItem filtCreate, filtClear, filtInvert, filtSelected, filtNonSelected, filtBlack, filtApply;
 	private MenuItem exportLOC, exportGPS, mnuSeparator = new MenuItem("-");
 	private MenuItem orgNewWP, orgCopy, orgMove, orgDelete, orgRebuild, orgCheckNotesAndSolver;
-	public MenuItem cacheTour, orgTravelbugs, mnuForceLogin;
+	public MenuItem cacheTour, orgTravelbugs;
 	private MenuItem mnuNewProfile, mnuOpenProfile, mnuDeleteProfile, mnuRenameProfile, mnuEditCenter;
 	private Form father;
 	private TablePanel tbp;
@@ -127,19 +127,15 @@
 				loadOCFinds = new MenuItem(MyLocale.getMsg(163, "Finds from opencaching")), //
 				mnuSeparator, //
 				spider = new MenuItem(MyLocale.getMsg(131, "Download from geocaching.com")), //
-				spiderRoute, //
 				spiderAllFinds = new MenuItem(MyLocale.getMsg(217, "Spider all finds from geocaching.com")), //
+				spiderRoute, //
 				spiderQuick = new MenuItem(MyLocale.getMsg(138, "from GC quick")), //
-				update = new MenuItem(MyLocale.getMsg(1014, "Update cache data")), //
-				mnuSeparator, //
 				loadGCVotes = new MenuItem(MyLocale.getMsg(1208, "Import ratings from GCVote")), //
 				fetchOCLink = new MenuItem(MyLocale.getMsg(1209, "Fetch link to OC - Cache")), //
 				mnuSeparator, //
-				mnuForceLogin = new MenuItem(MyLocale.getMsg(216, "Always login to GC")), //
+				update = new MenuItem(MyLocale.getMsg(1014, "Update cache data")), //
 		};
 		Menu importMenu = new Menu(mnuImport, MyLocale.getMsg(175, "Import"));
-		if (Global.getPref().forceLogin)
-			mnuForceLogin.modifiers ^= MenuItem.Checked;
 
 		// /////////////////////////////////////////////////////////////////////
 		// subMenu for export, part of "Application" menu below
@@ -440,11 +436,6 @@
 				updateSelectedCaches(tbp);
 				pref.setOldGCLanguage();
 			}
-			if (mev.selectedItem == mnuForceLogin) {
-				mnuForceLogin.modifiers ^= MenuItem.Checked;
-				Global.getPref().forceLogin = (mnuForceLogin.modifiers & MenuItem.Checked) != 0;
-				Global.getPref().savePreferences();
-			}
 			// /////////////////////////////////////////////////////////////////////
 			// subMenu for export, part of "Application" menu
 			// /////////////////////////////////////////////////////////////////////
@@ -885,7 +876,6 @@
 		}
 
 		int spiderErrors = 0;
-		boolean forceLogin = Global.getPref().forceLogin; // To ensure that spiderSingle only logs in once if forcedLogin=true
 		for (int j = 0; j < cachesToUpdate.size(); j++) {
 			int i = ((Integer) cachesToUpdate.get(j)).intValue();
 			ch = cacheDB.get(i);
@@ -893,7 +883,7 @@
 			infB.setInfo(MyLocale.getMsg(5513, "Loading: ") + ch.getWayPoint() + " (" + (j + 1) + " / " + cachesToUpdate.size() + ")");
 			infB.redisplay();
 			if (ch.getWayPoint().substring(0, 2).equalsIgnoreCase("GC")) {
-				int test = spider.spiderSingle(i, infB, forceLogin, loadAllLogs || ch.is_found());
+				int test = spider.spiderSingle(i, infB, loadAllLogs || ch.is_found());
 				if (test == SpiderGC.SPIDER_CANCEL) {
 					infB.close(0);
 					break;
@@ -902,7 +892,6 @@
 				} else {
 					// profile.hasUnsavedChanges=true;
 				}
-				forceLogin = false;
 			} else {
 				if (!ocSync.syncSingle(i, infB)) {
 					infB.close(0);

Modified: branches/r1.2/src/CacheWolf/MainTab.java
===================================================================
--- branches/r1.2/src/CacheWolf/MainTab.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/MainTab.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -44,7 +44,7 @@
  * This class creates the tabbed panel and sets the tabs to the respective other panels. Important is to have a look at
  * the event handler!<br>
  * Class ID = 1200
- * 
+ *
  * @see MainForm
  * @see MainMenu
  */
@@ -148,7 +148,7 @@
 		if (pref.isBigScreen || !pref.useRadar) {
 			c = this.addCard(mapP = new ewe.ui.CellPanel(), MyLocale.getMsg(347, "Show map"), null);
 			MAP_CARD = this.cardPanel.cards.size() - 1;
-			c.iconize(new Image("globe_small" + imagesize + ".gif"), true);
+			c.iconize(new Image("globe_tab" + imagesize + ".gif"), true);
 		}
 
 		if (pref.isBigScreen || pref.useRadar) {
@@ -200,7 +200,7 @@
 
 	/**
 	 * Code to execute when leaving a panel (oldCard is the panel number)
-	 * 
+	 *
 	 */
 	private void onLeavingPanel(int panelNo) {
 		if (panelNo == MainTab.LIST_CARD) { // Leaving the list view
@@ -268,7 +268,7 @@
 
 	/**
 	 * Code to execute when entering a panel (getSelectedItem() is the panel number)
-	 * 
+	 *
 	 */
 	private void onEnteringPanel(int panelNo) {
 		MyLocale.setSIPOff();
@@ -341,7 +341,7 @@
 
 	/**
 	 * this is called from MovingMap Cache context menu
-	 * 
+	 *
 	 * @param chi
 	 *            ,
 	 *            the CacheHolder for the Cache to switch to
@@ -349,14 +349,19 @@
 	 *            1=DetailsPanel 2=Description Panel
 	 */
 	public void openPanel(CacheHolder chi, int panelNo) {
-		// To change cache we need to be in panel LIST_CARD
-		onLeavingPanel(oldCard);
-		onEnteringPanel(LIST_CARD);
-		int row = profile.getCacheIndex(chi.getWayPoint());
-		tbP.selectRow(row);
+		// oldCard could have been DETAILS_CARD or GOTO_CARD
+		// on DETAILS_CARD changes already should have been applied before entering map
+		// on GOTO_CARD there is no action
+		// onLeavingPanel(oldCard);
+
+		// do we really need this actions ???
+		// onEnteringPanel(LIST_CARD);
+
+		// to switch to cache selected on map we do action as if leaving LIST_CARD
+		tbP.selectRow(profile.getCacheIndex(chi.getWayPoint()));
+		onLeavingPanel(LIST_CARD);
+
 		if (panelNo == DETAILS_CARD) {
-			ch = chi; // possibly wrong (old) detail if map is called
-			// directly
 			onEnteringPanel(DETAILS_CARD);
 			select(detP);
 		} else if (panelNo == DESCRIPTION_CARD) {
@@ -369,7 +374,7 @@
 	/**
 	 * this is called from goto / MovingMap / CalcPanel / DetailsPanel and so on to offer the user the possibility of
 	 * entering an new waypoint at a given position. pCh must already been preset with a valid CacheHolder object
-	 * 
+	 *
 	 * @param pCh
 	 */
 	public void newWaypoint(CacheHolder pCh) {
@@ -425,7 +430,7 @@
 
 	/**
 	 * sets posCircle Lat/Lon to centerTo
-	 * 
+	 *
 	 * @param centerTo
 	 *            true: centers centerTo on the screen and disconnects MovingMap from GPS if Gps-pos is not on the
 	 *            loaded map
@@ -433,6 +438,7 @@
 	 */
 	public void SwitchToMovingMap(CWPoint centerTo, boolean forceCenter) {
 		try {
+			onLeavingPanel(oldCard); // mainly for doing changes from DETAILS_CARD
 			if (!centerTo.isValid()) {
 				(new MessageBox("Error", "No valid coordinates", FormBase.OKB)).execute();
 				return;
@@ -481,7 +487,7 @@
 
 	/**
 	 * Save the index file
-	 * 
+	 *
 	 * @param askForConfirmation
 	 *            is ignored, old: If true, the save can be cancelled by user
 	 */

Modified: branches/r1.2/src/CacheWolf/Matrix.java
===================================================================
--- branches/r1.2/src/CacheWolf/Matrix.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/Matrix.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -36,8 +36,8 @@
 	
 	public Matrix (Matrix srcMatrix){
 		matrix = new double[srcMatrix.matrix.length][srcMatrix.matrix[0].length];
-		for (int i = 0; i < srcMatrix.matrix.length; i++)
-			for (int j = 0; j < srcMatrix.matrix[i].length; j++)
+		for (int i = 0; i < srcMatrix.matrix.length; i++)
+			for (int j = 0; j < srcMatrix.matrix[i].length; j++)
 				matrix[i][j] = srcMatrix.matrix[i][j];
 	}
 	
@@ -59,12 +59,12 @@
 	*	Method to calculate the row column product of two matrices.
 	*	Is used by the Multiply method.
 	*/
-	private double calculateRowColumnProduct(double[][] A, int row, double[][] B, int col){
-		double product = 0;
+	private double calculateRowColumnProduct(double[][] A, int row, double[][] B, int col){
+		double product = 0;
 		for(int i = 0; i < A[row].length; i++){
 			product +=A[row][i]*B[i][col];
-		}
-		return product;
+		}
+		return product;
 	}
 	
 	public void MultiplyByScalar (double f) {
@@ -90,13 +90,13 @@
 	public void Transpose(){
 		
 		double m[][] = new double[matrix[0].length][matrix.length];
-		for (int i = 0; i < matrix.length; i++)
-			for (int j = 0; j < matrix[i].length; j++)
+		for (int i = 0; i < matrix.length; i++)
+			for (int j = 0; j < matrix[i].length; j++)
 				m[j][i] = matrix[i][j];
 			
 		matrix = new double[m.length][m[0].length];
-		for (int i = 0; i < m.length; i++)
-			for (int j = 0; j < m[i].length; j++)
+		for (int i = 0; i < m.length; i++)
+			for (int j = 0; j < m[i].length; j++)
 				matrix[i][j] = m[i][j];
 	}
 	
@@ -104,21 +104,21 @@
 	*	private version of the Transpose method.
 	*	used internally in this class
 	*/
-	private double[][] Transpose2(double[][] a) {
-		
-		double m[][] = new double[a[0].length][a.length];
-
-		for (int i = 0; i < a.length; i++)
-			for (int j = 0; j < a[i].length; j++)
-				m[j][i] = a[i][j];
-		return m;
+	private double[][] Transpose2(double[][] a) {
+		
+		double m[][] = new double[a[0].length][a.length];
+
+		for (int i = 0; i < a.length; i++)
+			for (int j = 0; j < a[i].length; j++)
+				m[j][i] = a[i][j];
+		return m;
 	}
 	
 	/**
 	*	Method to display the contents of a matrix.
 	*/
 	public void DumpMatrix(){
-		for (int i = 0; i < matrix.length; i++)
+		for (int i = 0; i < matrix.length; i++)
 			for (int j = 0; j < matrix[i].length; j++)
 				Global.getPref().log("[ "+i+ " " + j + " ] " + matrix[i][j]);
 	}
@@ -126,61 +126,61 @@
 	/**
 	*	Method used to help calculate determinate
 	*/
-	private double[][] UpperTriangle(double[][] m) {
-		double f1 = 0;
-		double temp = 0;
-		int tms = m.length; // get This Matrix Size (could be smaller than
-							// global)
-		int v = 1;
-		iDF = 1;
-
-		for (int col = 0; col < tms - 1; col++) {
-			for (int row = col + 1; row < tms; row++) {
-				v = 1;
-				outahere: while (m[col][col] == 0) // check if 0 in diagonal
-				{ // if so switch until not
-					if (col + v >= tms) // check if switched all rows
-					{
-						iDF = 0;
-						break outahere;
-					} else {
-						for (int c = 0; c < tms; c++) {
-							temp = m[col][c];
-							m[col][c] = m[col + v][c]; // switch rows
-							m[col + v][c] = temp;
-						}
-						v++; // count row switchs
-						iDF = iDF * -1; // each switch changes determinant
-										// factor
-					}
-				}
-				if (m[col][col] != 0) {
-					try {
-						f1 = (-1) * m[row][col] / m[col][col];
-						for (int i = col; i < tms; i++) {
-							m[row][i] = f1 * m[col][i] + m[row][i];
-						}
-					} catch (Exception e) {
-						Global.getPref().log("Still Here!!!");
-					}
-				}
-			}
-		}
-		return m;
+	private double[][] UpperTriangle(double[][] m) {
+		double f1 = 0;
+		double temp = 0;
+		int tms = m.length; // get This Matrix Size (could be smaller than
+							// global)
+		int v = 1;
+		iDF = 1;
+
+		for (int col = 0; col < tms - 1; col++) {
+			for (int row = col + 1; row < tms; row++) {
+				v = 1;
+				outahere: while (m[col][col] == 0) // check if 0 in diagonal
+				{ // if so switch until not
+					if (col + v >= tms) // check if switched all rows
+					{
+						iDF = 0;
+						break outahere;
+					} else {
+						for (int c = 0; c < tms; c++) {
+							temp = m[col][c];
+							m[col][c] = m[col + v][c]; // switch rows
+							m[col + v][c] = temp;
+						}
+						v++; // count row switchs
+						iDF = iDF * -1; // each switch changes determinant
+										// factor
+					}
+				}
+				if (m[col][col] != 0) {
+					try {
+						f1 = (-1) * m[row][col] / m[col][col];
+						for (int i = col; i < tms; i++) {
+							m[row][i] = f1 * m[col][i] + m[row][i];
+						}
+					} catch (Exception e) {
+						Global.getPref().log("Still Here!!!");
+					}
+				}
+			}
+		}
+		return m;
 	}
 	
 	/**
 	*	Method to calculate the determinate of a matrix
 	*/
-	public double Determinant(double[][] pMatrix) {
-		int tms = pMatrix.length;
-		double det = 1;
-		pMatrix = UpperTriangle(pMatrix);
-		for (int i = 0; i < tms; i++) {
-			det = det * pMatrix[i][i];
-		} // multiply down diagonal
-		det = det * iDF; // adjust w/ determinant factor
-		return det;
+	public double Determinant(double[][] pMatrix) {
+		int tms = pMatrix.length;
+		double det = 1;
+		pMatrix = UpperTriangle(pMatrix);
+		for (int i = 0; i < tms; i++) {
+			det = det * pMatrix[i][i];
+		} // multiply down diagonal
+		det = det * iDF; // adjust w/ determinant factor
+		return det;
 	}
 	
 	
@@ -189,68 +189,68 @@
 	*	Method to calculate the inverse of this matrix.
 	*	The result is stored in this matrix!
 	*/
-	public void Inverse() {
-		// Formula used to Calculate Inverse:
-		// inv(A) = 1/det(A) * adj(A)
-		
-		int tms = matrix.length;
-
-		double m[][] = new double[tms][tms];
-		double mm[][] = Adjoint(matrix);
-
-		double det = Determinant(matrix);
-		double dd = 0;
-
-		if (det == 0) {
-			Global.getPref().log("Determinant Equals 0, Not Invertible.");
-		} else {
-			dd = 1 / det;
-		}
-		for (int i = 0; i < tms; i++)
-			for (int j = 0; j < tms; j++) {
-				m[i][j] = dd * mm[i][j];
+	public void Inverse() {
+		// Formula used to Calculate Inverse:
+		// inv(A) = 1/det(A) * adj(A)
+		
+		int tms = matrix.length;
+
+		double m[][] = new double[tms][tms];
+		double mm[][] = Adjoint(matrix);
+
+		double det = Determinant(matrix);
+		double dd = 0;
+
+		if (det == 0) {
+			Global.getPref().log("Determinant Equals 0, Not Invertible.");
+		} else {
+			dd = 1 / det;
+		}
+		for (int i = 0; i < tms; i++)
+			for (int j = 0; j < tms; j++) {
+				m[i][j] = dd * mm[i][j];
 			}
 			
 		//Store back results
 		matrix = new double[m.length][m[0].length];
-		for (int i = 0; i < m.length; i++)
-			for (int j = 0; j < m[i].length; j++)
-				matrix[i][j] = m[i][j];
+		for (int i = 0; i < m.length; i++)
+			for (int j = 0; j < m[i].length; j++)
+				matrix[i][j] = m[i][j];
 	}
 	
 	/**
 	*	Method to calculate the adjoint of a matrix.
 	*	Required to calculate the inverse of a matrix.
 	*/
-	private double[][] Adjoint(double[][] a) {
-		int tms = a.length;
-
-		double m[][] = new double[tms][tms];
-
-		int ii, jj, ia, ja;
-		double det;
-
-		for (int i = 0; i < tms; i++)
-			for (int j = 0; j < tms; j++) {
-				ia = ja = 0;
-				double ap[][] = new double[tms - 1][tms - 1];
-				for (ii = 0; ii < tms; ii++) {
-					for (jj = 0; jj < tms; jj++) {
-						if ((ii != i) && (jj != j)) {
-							ap[ia][ja] = a[ii][jj];
-							ja++;
-						}
-					}
-					if ((ii != i) && (jj != j)) {
-						ia++;
-					}
-					ja = 0;
-				}
-				det = Determinant(ap);
-				m[i][j] = java.lang.Math.pow(-1, i + j) * det;
-			}
-		m = Transpose2(m);
-		return m;
+	private double[][] Adjoint(double[][] a) {
+		int tms = a.length;
+
+		double m[][] = new double[tms][tms];
+
+		int ii, jj, ia, ja;
+		double det;
+
+		for (int i = 0; i < tms; i++)
+			for (int j = 0; j < tms; j++) {
+				ia = ja = 0;
+				double ap[][] = new double[tms - 1][tms - 1];
+				for (ii = 0; ii < tms; ii++) {
+					for (jj = 0; jj < tms; jj++) {
+						if ((ii != i) && (jj != j)) {
+							ap[ia][ja] = a[ii][jj];
+							ja++;
+						}
+					}
+					if ((ii != i) && (jj != j)) {
+						ia++;
+					}
+					ja = 0;
+				}
+				det = Determinant(ap);
+				m[i][j] = java.lang.Math.pow(-1, i + j) * det;
+			}
+		m = Transpose2(m);
+		return m;
 	}
 	
 	/**

Modified: branches/r1.2/src/CacheWolf/Preferences.java
===================================================================
--- branches/r1.2/src/CacheWolf/Preferences.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/Preferences.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -90,7 +90,7 @@
 
 	/**
 	 * Singleton pattern - return reference to Preferences
-	 * 
+	 *
 	 * @return Singleton Preferences object
 	 */
 	public static Preferences getPrefObject() {
@@ -108,7 +108,7 @@
 	 * Call this method to set the path of the config file <br>
 	 * If you call it with null it defaults to [program-dir]/pref.xml if p is a directory "pref.xml" will automatically
 	 * appended
-	 * 
+	 *
 	 * @param p
 	 */
 	public void setPathToConfigFile(String p) {
@@ -276,15 +276,14 @@
 	 * Max. length for Garmin waypoint names (for etrex which can only accept 6 chars)
 	 */
 	public int garminMaxLen = 0;
-	/** OC true = alle neu Laden false = wenn ?nderungsdatum neuer */
+	/** OC true = alle neu Laden false = wenn ?nderungsdatum neuer */
 	public boolean downloadAllOC = false;
 	public String lastOCSite = OC.OCSites[0][OC.OC_HOSTNAME];
 	/**
 	 * The currently used centre point, can be different from the profile's centrepoint. This is used for spidering
 	 */
 	private CWPoint curCentrePt = new CWPoint();
-	/** True if a login screen is displayed on each spider operation */
-	public boolean forceLogin = true;
+	public boolean switchGCLanguageToEnglish = false;
 	/** True if the goto panel is North centered */
 	public boolean northCenteredGoto = true;
 	/** If not null, a customs map path has been specified by the user */
@@ -343,7 +342,7 @@
 	/** Selected Size of map tiles */
 	public int mapTileSize = 1;
 	/** How many should maptiles overlap */
-	public int mapOverlapping = 100;
+	public int mapOverlapping = 2;
 	/** Width and height of free defined tile size */
 	public int tilewidth;
 	public int tileheight;
@@ -362,11 +361,11 @@
 	// ////////////////////////////////////////////
 	/**
 	 * The debug switch (Can be used to activate dormant code) by adding the line:
-	 * 
+	 *
 	 * <pre>
 	 * &lt;debug value=&quot;true&quot; /&gt;
 	 * </pre>
-	 * 
+	 *
 	 * to the pref.xml file.
 	 */
 	public boolean debug = false;
@@ -422,7 +421,7 @@
 
 	/**
 	 * Tries to find a executable browser return "" if no browser found
-	 * 
+	 *
 	 * @return
 	 */
 	private String getDefaultBrowser() {
@@ -609,7 +608,6 @@
 			northCenteredGoto = Boolean.valueOf(atts.getValue("northcentered")).booleanValue();
 		} else if (name.equals("spider")) {
 			doNotGetFound = !Boolean.valueOf(atts.getValue("getFinds")).booleanValue();
-			forceLogin = Boolean.valueOf(atts.getValue("forcelogin")).booleanValue();
 			checkLog = Boolean.valueOf(atts.getValue("checkLog")).booleanValue();
 			tmp = atts.getValue("checkTBs");
 			if (tmp != null)
@@ -710,7 +708,7 @@
 			mapTileSize = Convert.parseInt(tmp);
 			tmp = atts.getValue("overlapping");
 			if (tmp == null || tmp.length() == 0)
-				tmp = "100";
+				tmp = "2";
 			mapOverlapping = Convert.parseInt(tmp);
 			tmp = atts.getValue("tilewidth");
 			tilewidth = (tmp != null && tmp.length() > 0) ? Convert.parseInt(tmp) : 0;
@@ -861,7 +859,6 @@
 			outp.print("    <opencaching lastSite=\"" + lastOCSite + "\" downloadMissing=\"" + SafeXML.strxmlencode(downloadAllOC) + "\" />\n");
 			outp.print("    <location lat=\"" + SafeXML.clean(curCentrePt.getLatDeg(TransformCoordinates.DD)) + "\" long=\"" + SafeXML.clean(curCentrePt.getLonDeg(TransformCoordinates.DD)) + "\" />\n");
 			outp.print("    <spider" //
-					+ " forcelogin=\"" + SafeXML.strxmlencode(forceLogin) + "\"" //
 					+ " spiderUpdates=\"" + SafeXML.strxmlencode(spiderUpdates) + "\"" //
 					+ " checkLog=\"" + SafeXML.strxmlencode(checkLog) + "\"" //
 					+ " checkTBs=\"" + SafeXML.strxmlencode(checkTBs) + "\"" //
@@ -926,7 +923,7 @@
 
 	/**
 	 * custom = set by the user
-	 * 
+	 *
 	 * @return custom Maps Path, null if not set
 	 */
 	public String getCustomMapsPath() {
@@ -983,8 +980,8 @@
 	 * gets the path to the calibrated maps it first tries if there are manually imported maps in
 	 * <baseDir>/maps/standard then it tries the legacy dir: <program-dir>/maps In case in both locations are no
 	 * .wfl-files it returns <baseDir>/maps/expedia - the place where the automatically downloaded maps are placed.
-	 * 
-	 * 
+	 *
+	 *
 	 */
 	public String getMapLoadPath() {
 		saveCustomMapsPath(getMapLoadPathInternal());
@@ -1100,7 +1097,7 @@
 	/**
 	 * tries to get the home data dir of the user e.g. "c:\documents and...\<user>\my documents" or "/home/<user>" in
 	 * linux if none could be identified, "/" is returned.
-	 * 
+	 *
 	 * @return
 	 */
 	public String getHomeDir() {
@@ -1139,7 +1136,7 @@
 
 	/**
 	 * Open Profile selector screen
-	 * 
+	 *
 	 * @param prof
 	 * @param showProfileSelector
 	 * @return True if a profile was selected
@@ -1210,7 +1207,7 @@
 			return; // no select
 		// check selection
 		if (lastProfile.equals(f.newSelectedProfile)) {
-			// aktives Profil kann nicht gel?scht / umbenannt werden;
+			// aktives Profil kann nicht gel?scht / umbenannt werden;
 			new MessageBox(MyLocale.getMsg(321, "Error"), MyLocale.getMsg(ErrorMsgActive, "[Profile active...]"), FormBase.MBOK).execute();
 		} else {
 			boolean err = true;
@@ -1224,7 +1221,7 @@
 				p.dataDir = absoluteBaseDir + f.newSelectedProfile + "/";
 				p.readIndex();
 				String mapsPath = absoluteBaseDir + "maps" + p.getRelativeCustomMapsPath();
-				int answer = new MessageBox("", mapsPath + " " + MyLocale.getMsg(143, "l?schen ?"), FormBase.MBYESNO).execute();
+				int answer = new MessageBox("", mapsPath + " " + MyLocale.getMsg(143, "l?schen ?"), FormBase.MBYESNO).execute();
 				if (answer == 1) {
 					deleteDirectory(new FileBugfix(mapsPath));
 				}
@@ -1266,13 +1263,13 @@
 	/**
 	 * Method to log messages to a file called log.txt It will always append to an existing file. To show the message on
 	 * the console, the global variable debug must be set. This can be done by adding
-	 * 
+	 *
 	 * <pre>
 	 * &lt;debug value=&quot;true&quot;&gt;
 	 * </pre>
-	 * 
+	 *
 	 * to the pref.xml file
-	 * 
+	 *
 	 * @param text
 	 *            to log
 	 */
@@ -1305,7 +1302,7 @@
 
 	/**
 	 * Log an exception to the log file with or without a stack trace
-	 * 
+	 *
 	 * @param text
 	 *            Optional message (Can be empty string)
 	 * @param e
@@ -1314,11 +1311,11 @@
 	 *            If true and the debug switch is true, the stack trace is appended to the log The debug switch can be
 	 *            set by including the line <i>&lt;debug value="true"&gt;&lt;/debug&gt;</i> in the pref.xml file or by
 	 *            manually setting it (i.e. in BE versions or RC versions) by including the line
-	 * 
+	 *
 	 *            <pre>
 	 * Global.getPref().debug = true;
 	 * </pre>
-	 * 
+	 *
 	 *            in Version.getRelease()
 	 */
 	public void log(String text, Throwable e, boolean withStackTrace) {
@@ -1337,7 +1334,7 @@
 	/**
 	 * Log an exception to the log file without a stack trace, i.e. where a stack trace is not needed because the
 	 * location/cause of the error is clear
-	 * 
+	 *
 	 * @param message
 	 *            Optional message (Can be empty string)
 	 * @param e
@@ -1390,7 +1387,7 @@
 	/**
 	 * <code>True</code> or <code>false</code>, depending if a filter with the given ID is saved in the
 	 * preferences.
-	 * 
+	 *
 	 * @param filterID
 	 *            ID of the filter to check
 	 * @return True or false
@@ -1402,7 +1399,7 @@
 	/**
 	 * Returns the FilterData object saved with the given ID. The ID is not saved in the object, so it may be resaved
 	 * under another ID.
-	 * 
+	 *
 	 * @param filterID
 	 *            ID of the FilterData object
 	 * @return FilterData object
@@ -1414,7 +1411,7 @@
 	/**
 	 * Adds a FilterData object to the list. If a FilterData object is already saved unter the given ID, the old object
 	 * is removed and the new one is set at its place.
-	 * 
+	 *
 	 * @param filterID
 	 *            ID to associate with the filter object
 	 * @param filter
@@ -1427,7 +1424,7 @@
 	/**
 	 * Removed the FilterData object which is saved with the given ID. If no such FilterData object exists, nothing
 	 * happens.
-	 * 
+	 *
 	 * @param filterID
 	 *            ID of FilterData object to remove
 	 */
@@ -1437,7 +1434,7 @@
 
 	/**
 	 * Returns a alphabetically sorted array of ID of saved FilterData objects.
-	 * 
+	 *
 	 * @return Array of IDs
 	 */
 	public String[] getFilterIDs() {
@@ -1502,6 +1499,7 @@
 		if (oldLanguageCtl.length() != 0)
 			try {
 				UrlFetcher.fetch(oldLanguageCtl);
+				switchGCLanguageToEnglish=true;
 			} catch (IOException e) {
 				// dann halt nicht
 			}

Modified: branches/r1.2/src/CacheWolf/Profile.java
===================================================================
--- branches/r1.2/src/CacheWolf/Profile.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/Profile.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -574,13 +574,36 @@
 		return "Profile: Name=" + name + "\nCentre=" + centre.toString() + "\ndataDir=" + dataDir + "\nlastSyncOC=" + getLast_sync_opencaching() + "\ndistOC=" + getDistOC() + "\ndistGC=" + getDistGC();
 	}
 
+	/**
+	 * Sets the selection state for all caches to the given state <code>selectStatus</code>.
+	 * There is a little distinction for the <code>true</code> and <code>false</code> case:<br>
+	 * selectStatus <code>true</code>: All <i>visible</i> caches are checked, and their addi
+	 * wpts, regardless if they are visible or not.<br>
+	 * selectStatus <code>false</code>: All caches are unchecked, regardless if they are visible 
+	 * or not. 
+	 * @param selectStatus If <code>true</code> all caches are checked, if <code>false</code>
+	 * all caches are unchecked.
+	 */
 	public void setSelectForAll(boolean selectStatus) {
+		CacheHolder ch;
 		selectionChanged = true;
-		CacheHolder ch;
 		for (int i = cacheDB.size() - 1; i >= 0; i--) {
 			ch = cacheDB.get(i);
-			if (ch.isVisible())
+			if (selectStatus) {
+				if (ch.isVisible()) {
+					ch.is_Checked = selectStatus; // set the ceckbox also for addi wpts
+					if (ch.hasAddiWpt()) {
+						CacheHolder addiWpt;
+						int addiCount = ch.addiWpts.getCount();
+						for (int j = 0; j < addiCount; j++) {
+							addiWpt = (CacheHolder) ch.addiWpts.get(j);
+							addiWpt.is_Checked = selectStatus;
+						}
+					}					
+				}
+			} else /* selectStatus==false */ {
 				ch.is_Checked = selectStatus;
+			}
 		}
 	}
 

Modified: branches/r1.2/src/CacheWolf/UrlFetcher.java
===================================================================
--- branches/r1.2/src/CacheWolf/UrlFetcher.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/UrlFetcher.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -77,8 +77,8 @@
 	private static void initPermanentRequestorProperty() {
 		permanentRequestorProperties = new PropertyList();
 		permanentRequestorProperties.add("User-Agent", "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.5) Gecko/20041107 Firefox/1.0");
-		// permanentRequestorProperties.add("Connection", "close");
-		permanentRequestorProperties.add("Connection", "keep-alive");
+		permanentRequestorProperties.add("Connection", "close");
+		// permanentRequestorProperties.add("Connection", "keep-alive");
 	}
 
 	public static void setPermanentRequestorProperty(String name, String property) {
@@ -109,9 +109,13 @@
 	}
 
 	public static void fetchDataFile(String address, String target) throws IOException {
-		FileOutputStream outp = new FileOutputStream(new File(target));
+		FileOutputStream outp = null;
+		try {
+		outp = new FileOutputStream(new File(target));
 		outp.write(fetchByteArray(address).toBytes());
-		outp.close();
+		} finally {
+		if (outp != null) outp.close();
+		}
 	}
 
 	/**
@@ -133,7 +137,7 @@
 				i = i - 1;
 			}
 			realUrl = urltmp;
-			if (!urltmp.startsWith("http")) {
+			if (!( urltmp.startsWith("http") || urltmp.startsWith("https") )) {
 				url = FileBase.fixupPath(url);
 				String uu = url.toLowerCase();
 				String host;
@@ -145,7 +149,7 @@
 				}
 				if (!urltmp.startsWith("/"))
 					host = host + "/";
-				urltmp = "http://" + host + urltmp;
+				urltmp = "http://" + host + urltmp; // TODO https?
 			}
 			conn.setUrl(urltmp);
 			conn.documentIsEncoded = isUrlEncoded(urltmp);
@@ -226,7 +230,7 @@
 	 * This method encodes an URL containing special characters using the UTF-8 codec in %nn%nn notation<br>
 	 * Note that the encoding for URLs is not generally defined. Usually cp1252 or UTF-8 is used. It depends on what the
 	 * server expects, what encoding you must use.
-	 * 
+	 *
 	 * @param cc
 	 * @return
 	 * @throws IOException
@@ -246,7 +250,7 @@
 	/**
 	 * Encode the URL using %## notation. Note: this fixes a bug in ewe.net.URL.encodeURL(): that routine assumes all
 	 * chars to be < 127. This method is mainly copied from there
-	 * 
+	 *
 	 * @param url
 	 *            The unencoded URL.
 	 * @param spaceToPlus

Modified: branches/r1.2/src/CacheWolf/Version.java
===================================================================
--- branches/r1.2/src/CacheWolf/Version.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/Version.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -43,7 +43,7 @@
 	static final int VER_MINOR = 2;
 	static final String VER_SVN ="$LastChangedRevision$"; // the number is automatically replaced by subversion to the latest versionnumer of this file (svn:keywords LastChangedRevision)
 	static final int SVN_REVISION = Common.parseInt(VER_SVN.substring(VER_SVN.indexOf(" ")+1, VER_SVN.lastIndexOf(" ")));
-	static final int VERSION_TYPE = 0;
+	static final int VERSION_TYPE = 3;
 	public static final String VERSION_TYPES(int i) {
 		if (i==0) return MyLocale.getMsg(7000,"Release");
 		if (i==1) return MyLocale.getMsg(7001,"Release candidate");
@@ -61,8 +61,8 @@
 	}
 
 	public static String getReleaseDetailed() {
-		// habe die SVN-Nummer doch aus der Anzeige erstmal wieder herausgenommen, weil es in einem final Release doch recht seltsam auss???he.
-		// Sinnvoll w???re daher vielleicht, eine Methode getReleaseDatail, die die SVN-Versionnummer mit angibt und z.B. im "???ber"-Dialog angezeigt werden k???nnte.
+		// habe die SVN-Nummer doch aus der Anzeige erstmal wieder herausgenommen, weil es in einem final Release doch recht seltsam auss?he.
+		// Sinnvoll w?re daher vielleicht, eine Methode getReleaseDatail, die die SVN-Versionnummer mit angibt und z.B. im "?ber"-Dialog angezeigt werden k?nnte.
 		return getRelease() + " " + VERSION_TYPES(VERSION_TYPE);
 	}
 
@@ -124,7 +124,6 @@
 	 * @param url
 	 * @return: 1 = newer Version available, 0 = this is up to date, 3 = check failed
 	 */
-
 	private static int checkVersion(Properties curvers, String prefix, int t) {
 		try {
 			int curvmaj = Convert.toInt(curvers.getProperty(prefix + "VersionMajor", "0"));

Modified: branches/r1.2/src/CacheWolf/exp/KMLExporter.java
===================================================================
--- branches/r1.2/src/CacheWolf/exp/KMLExporter.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/exp/KMLExporter.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -196,7 +196,7 @@
 		// fill structure with data from cacheDB
 		for (int i = 0; i < cacheDB.size(); i++) {
 			ch = cacheDB.get(i);
-			// TODO Das Argument nach STring zu casten gef???llt mir nicht ganz...
+			// TODO Das Argument nach STring zu casten gef?llt mir nicht ganz...
 			if (ch.isVisible() && !ch.isAddiWpt()) {
 				if (ch.is_found()) {
 					tmp = (Vector) outCacheDB[FOUND].get(String.valueOf(ch.getType()));

Modified: branches/r1.2/src/CacheWolf/imp/OCXMLImporter.java
===================================================================
--- branches/r1.2/src/CacheWolf/imp/OCXMLImporter.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/imp/OCXMLImporter.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -139,7 +139,7 @@
 	}
 
 	/**
-	 * 
+	 *
 	 * @param number
 	 * @param infB
 	 * @return true, if some change was made to the cacheDB
@@ -630,6 +630,7 @@
 		}
 		if (name.equals("latitude")) {
 			holder.setPos(new TrackPoint(Common.parseDouble(strData), longitude));
+			holder.setUpdated(false); // todo : correct definition of usage for this 
 			return;
 		}
 		if (name.equals("difficulty")) {
@@ -670,8 +671,9 @@
 				linebraek = "<br>\n";
 			else
 				linebraek = "\n";
-
-			// this is set by "hint" a few lines down: if a long description is already updated, then this one is likely to be in another language
+			// if a long description has been entered in this run (==holder.cache_updated is true), 
+			// then this one is added (for another language)
+			// otherwise all previous descriptions will be overwritten ( or there are none yet) 
 			if (holder.is_updated())
 				holder.getCacheDetails(false).LongDescription += linebraek + processingDescLang + ":" + linebraek + strData + linebraek;
 			else
@@ -679,7 +681,7 @@
 			return;
 		}
 
-		if (name.equals("desc")) { // </desc>
+		if (name.equals("desc")) { // </desc> 
 			if (isHTML)
 				holder.getCacheDetails(false).LongDescription += SafeXML.cleanback(strData);
 			else
@@ -696,7 +698,12 @@
 				holder.getCacheDetails(false).Hints += linebreak + "[" + processingDescLang + ":]" + linebreak + Common.rot13(strData) + linebreak;
 			else
 				holder.getCacheDetails(false).Hints = "[" + processingDescLang + ":]" + linebreak + Common.rot13(strData) + linebreak;
-			holder.setUpdated(true); // remark: this is used in "shortdesc" to decide weather the description should be appended or replaced
+			// remark: 
+			// holder.cache_updated will be set to true
+			// after the subtag-infos of tag <cachedesc> have been entered 
+			// (ending with the subtag </hint>) 
+			// to possibly add the <cachedesc> for an additional language
+			holder.setUpdated(true);
 			return;
 		}
 	}

Modified: branches/r1.2/src/CacheWolf/imp/SpiderGC.java
===================================================================
--- branches/r1.2/src/CacheWolf/imp/SpiderGC.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/imp/SpiderGC.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -82,6 +82,8 @@
 import ewesoft.xml.MinML;
 import ewesoft.xml.sax.AttributeList;
 
+import org.json.*;
+
 /**
  * Class to spider caches from gc.com
  */
@@ -164,7 +166,7 @@
 	private static Regex RexPropType;
 	private static Regex RexPropDTS;
 	private static Regex RexPropOwn;
-	private static Regex RexLogBlock;
+	private static Regex RexUserToken;
 	private static Extractor exSingleLog;
 	private static Extractor exIcon;
 	private static Extractor exNameTemp;
@@ -991,7 +993,7 @@
 				break;
 			final CacheHolder ch = (CacheHolder) e.nextElement();
 			infB.setInfo(MyLocale.getMsg(5513, "Loading: ") + ch.getWayPoint() + " (" + (cachesToLoad.size() + j) + " / " + totalCachesToLoad + ")");
-			final int test = spiderSingle(cacheDB.getIndex(ch), infB, false, loadAllLogs);
+			final int test = spiderSingle(cacheDB.getIndex(ch), infB, loadAllLogs);
 			if (test == SPIDER_CANCEL) {
 				break;
 			} else {
@@ -1008,11 +1010,11 @@
 
 	/**
 	 * Method to spider a single cache. It assumes a login has already been performed!
-	 * 
+	 *
 	 * @return 1 if spider was successful, -1 if spider was cancelled by closing the infobox, 0 error, but continue with
 	 *         next cache
 	 */
-	public int spiderSingle(int number, InfoBox pInfB, boolean forceLogin, boolean loadAllLogs) {
+	public int spiderSingle(int number, InfoBox pInfB, boolean loadAllLogs) {
 		int ret = -1;
 		this.infB = pInfB;
 		final CacheHolder ch = new CacheHolder(); // cacheDB.get(number);
@@ -1055,7 +1057,7 @@
 
 	/**
 	 * Fetch the coordinates of a waypoint from GC
-	 * 
+	 *
 	 * @param wayPoint
 	 *            the name of the waypoint
 	 * @return the cache coordinates
@@ -1085,207 +1087,88 @@
 			return "????";
 		}
 	} // getCacheCoordinates
-
-	/**
-	 * Method to login the user to gc.com It will request a password and use the alias defined in preferences If the
-	 * login page cannot be fetched, the password is cleared. If the login fails, an appropriate message is displayed.
-	 */
 	private boolean login() {
-		if (loggedIn && !pref.forceLogin) {
+		if (loggedIn && !pref.switchGCLanguageToEnglish) {
 			return true;
 		}
+
 		if (pref.userID.length() > 0) {
 			UrlFetcher.setPermanentRequestorProperty("Cookie", null);
 			loggedIn = switchToEnglish();
 			if (loggedIn)
 				return true;
 			else {
-				(new MessageBox("Login", "Check UserID in preferences | Einstellungen.\nsee http://cachewolf.aldos.de/userid.html", FormBase.OKB)).execute();
+				(new MessageBox(MyLocale.getMsg(5523, "Login error!"), "Die userID ist vermutlich nicht mehr g?ltig. Siehe http://cachewolf.aldos.de/userid.html !", FormBase.OKB)).execute();
 				return false;
 			}
-		} else {
-			UrlFetcher.setPermanentRequestorProperty("Cookie", null);
-			if (true) {
-				(new MessageBox("Login", "Check UserID in preferences| Einstellungen.\nsee http://cachewolf.aldos.de/userid.html", FormBase.OKB)).execute();
-				return false; // until SSL/https works
-			}
 		}
-		loggedIn = false;
-		String loginPage, loginPageUrl, loginSuccess;
-		try {
-			loginPageUrl = p.getProp("loginPage");
-			loginSuccess = p.getProp("loginSuccess");
-		} catch (final Exception ex) { // Tag not found in spider.def
+		else {
+			(new MessageBox(MyLocale.getMsg(5523, "Login error!"), "Siehe http://cachewolf.aldos.de/userid.html !", FormBase.OKB)).execute();
 			return false;
 		}
+	}
 
-		// **0 Get password
-		String passwort = pref.password;
-		InfoBox localInfB = new InfoBox(MyLocale.getMsg(5506, "Password"), MyLocale.getMsg(5505, "Enter Password"), InfoBox.INPUT);
-		localInfB.feedback.setText(passwort);
-		localInfB.feedback.isPassword = true;
-		int code = FormBase.IDOK;
-		if (passwort.equals("")) {
-			code = localInfB.execute();
-			passwort = localInfB.getInput();
-		}
-		localInfB.close(0);
-		if (code != FormBase.IDOK)
-			return false;
+	private boolean getSessionIdAndSetCookie(String userId) {
 
-		// **1 now we have user and password for login
-		localInfB = new InfoBox(MyLocale.getMsg(5507, "Status"), MyLocale.getMsg(5508, "Logging in..."));
-		localInfB.exec();
-		try {
-			loginPage = UrlFetcher.fetch(loginPageUrl); // http://www.geocaching.com/login/default.aspx
-			if (loginPage.equals("")) {
-				localInfB.close(0);
-				(new MessageBox(MyLocale.getMsg(5500, "Error"), MyLocale.getMsg(5499, "Error loading login page.%0aPlease check your internet connection."), FormBase.OKB)).execute();
-				pref.log("[login]:Could not fetch: gc.com login page " + loginPageUrl, null);
-				return false;
+		PropertyList pl = UrlFetcher.getDocumentProperties();
+		String docprops = "";
+		for (int i = 0; i < pl.size(); i++) {
+			final Property p = (Property) pl.get(i);
+			if (p.name.equalsIgnoreCase("Set-Cookie")) {
+				docprops += p.value;
 			}
-		} catch (final Exception ex) {
-			localInfB.close(0);
-			(new MessageBox(MyLocale.getMsg(5500, "Error"), MyLocale.getMsg(5499, "Error loading login page.%0aPlease check your internet connection."), FormBase.OKB)).execute();
-			pref.log("[login]:Could not fetch: gc.com login page", ex);
+		}
+
+		final Regex rexCookieSession = new Regex("(?i)ASP.NET_SessionId=(.*?);.*");
+		rexCookieSession.search(docprops);
+		if (rexCookieSession.didMatch()) {
+			cookie = "ASP.NET_SessionId=" + rexCookieSession.stringMatched(1);
+		} else {
+			pref.log("[login]:SessionID not found.", null);
 			return false;
 		}
 
-		// **2 now we can check the loginpage if logged in else log in
-		if (!localInfB.isClosed) {
-			if (loginPage.indexOf(loginSuccess) > 0) {
-				if (loginPage.indexOf(pref.myAlias) > 0) {
-					loggedIn = true;
-					// assume language is already set to EN
-					pref.log("[login]:Already logged in as " + pref.myAlias);
-				} else {
-					// it is another user, whom we should logout
-					try {
-						loginPage = UrlFetcher.fetch("http://www.geocaching.com/login/default.aspx?RESETCOMPLETE=Y");
-					} catch (final Exception ex) {
-						localInfB.close(0);
-						(new MessageBox(MyLocale.getMsg(5500, "Error"), MyLocale.getMsg(5499, "Error loading login page.%0aPlease check your internet connection."), FormBase.OKB)).execute();
-						pref.log("[login]:Could not fetch: gc.com login page", ex);
-						return false;
-					}
-
-				}
+		if (userId.length() == 0) {
+			final Regex rexCookieID = new Regex("(?i)userid=(.*?);.*");
+			rexCookieID.search(docprops);
+			if (rexCookieID.didMatch()) {
+				cookie += "; userid=" + rexCookieID.stringMatched(1);
+				// set the user id in user pref
+				pref.userID = rexCookieID.stringMatched(1);
+				pref.savePreferences();
+			} else {
+				pref.log("[login]:userID not found.", null);
+				return false;
 			}
-			if (!loggedIn) {
-				try {
-					final Regex rexViewstate = new Regex("id=\"__VIEWSTATE\" value=\"(.*?)\" />");
-					String viewstate = "";
-					rexViewstate.search(loginPage);
-					if (rexViewstate.didMatch()) {
-						viewstate = rexViewstate.stringMatched(1);
-					} else {
-						localInfB.close(0);
-						pref.log("[login]:__VIEWSTATE not found (before login): no login possible.", null);
-						// we need the __VIEWSTATE for sending loginData, so we should abort here
-						return false;
-					}
-					final StringBuffer sb = new StringBuffer(1000);
-					sb.append("__VIEWSTATE=" + URL.encodeURL(viewstate, false));
-					sb.append("&ctl00%24ContentBody%24");
-					sb.append("myUsername=" + encodeUTF8URL(Utils.encodeJavaUtf8String(pref.myAlias)));
-					sb.append("&ctl00%24ContentBody%24");
-					sb.append("myPassword=" + encodeUTF8URL(Utils.encodeJavaUtf8String(passwort)));
-					sb.append("&ctl00%24ContentBody%24");
-					sb.append("cookie=on");
-					sb.append("&ctl00%24ContentBody%24");
-					sb.append("Button1=Login");
-					UrlFetcher.setpostData(sb.toString());
-					loginPage = UrlFetcher.fetch(loginPageUrl);
-					if (loginPage.indexOf(loginSuccess) > 0) {
-						pref.log("Login successful: " + pref.myAlias);
-						// **3 now we are logged in and get the Cookie (there are two)
-						final PropertyList pl = UrlFetcher.getDocumentProperties();
-						String docprops = "";
-						for (int i = 0; i < pl.size(); i++) {
-							final Property p = (Property) pl.get(i);
-							if (p.name.equalsIgnoreCase("Set-Cookie")) {
-								docprops += p.value;
-							}
-						}
-						final Regex rexCookieSession = new Regex("(?i)ASP.NET_SessionId=(.*?);.*");
-						rexCookieSession.search(docprops);
-						if (rexCookieSession.didMatch()) {
-							cookie = "ASP.NET_SessionId=" + rexCookieSession.stringMatched(1);
-						} else {
-							localInfB.close(0);
-							pref.log("[login]:SessionID not found.", null);
-							return false;
-						}
-						final Regex rexCookieID = new Regex("(?i)userid=(.*?);.*");
-						rexCookieID.search(docprops);
-						if (rexCookieID.didMatch()) {
-							cookie += "; userid=" + rexCookieID.stringMatched(1);
-						} else {
-							localInfB.close(0);
-							pref.log("[login]:userID not found.", null);
-							return false;
-						}
-						UrlFetcher.setPermanentRequestorProperty("Cookie", cookie);
-					} else {
-						pref.log("Login failed. Wrong Account or Password? " + pref.myAlias, null);
-						pref.log("[login.url]:" + loginPageUrl, null);
-						pref.log("[login.postData]:" + sb.toString(), null);
-						pref.log("[login.Answer]:" + loginPage, null);
-						localInfB.close(0);
-						(new MessageBox(MyLocale.getMsg(5500, "Error"), MyLocale.getMsg(5501, "Login failed! Wrong account or password?"), FormBase.OKB)).execute();
-						return false;
-					}
-					if (!this.switchToEnglish())
-						return false;
-				} catch (final Exception ex) {
-					pref.log("[login]:Login failed with exception.", ex);
-					localInfB.close(0);
-					(new MessageBox(MyLocale.getMsg(5500, "Error"), MyLocale.getMsg(5501, "Login failed. Error loading page after login."), FormBase.OKB)).execute();
-					return false;
-				}
-			}
 		}
-
-		final boolean loginAborted = localInfB.isClosed;
-		localInfB.close(0);
-		if (loginAborted)
-			return false;
 		else {
-			loggedIn = true;
-			return true;
+			cookie += "; userid=" + userId;
 		}
+
+		UrlFetcher.setPermanentRequestorProperty("Cookie", cookie);
+		return true;
+
 	}
 
 	private boolean switchToEnglish() {
 		// change language to EN , further operations relay on English
 		String url = "http://www.geocaching.com/account/ManagePreferences.aspx";
 		String page = "";
-		String userID = "userid=" + pref.userID;
 		try {
-			UrlFetcher.setPermanentRequestorProperty("Cookie", userID);
+			UrlFetcher.setPermanentRequestorProperty("Cookie", "userid=" + pref.userID);
 			page = UrlFetcher.fetch(url); // getting the sessionid
-			if (page.length() == 0)
+			if (page.length() == 0) {
+				pref.log("[switchToEnglish]:empty page getting SessionID.", null);
 				return false;
+			}
 		} catch (final Exception ex) {
+			pref.log("[switchToEnglish]:Exception getting SessionID.", ex);
 			return false;
 		}
-		PropertyList pl = UrlFetcher.getDocumentProperties();
-		String docprops = "";
-		for (int i = 0; i < pl.size(); i++) {
-			final Property p = (Property) pl.get(i);
-			if (p.name.equalsIgnoreCase("Set-Cookie")) {
-				docprops += p.value;
-			}
-		}
-		final Regex rexCookieSession = new Regex("(?i)ASP.NET_SessionId=(.*?);.*");
-		rexCookieSession.search(docprops);
-		if (rexCookieSession.didMatch()) {
-			cookie = "ASP.NET_SessionId=" + rexCookieSession.stringMatched(1) + "; " + userID;
-			UrlFetcher.setPermanentRequestorProperty("Cookie", cookie);
-		} else {
-			pref.log("[switchToEnglish]:SessionID not found.", null);
+
+		if (!getSessionIdAndSetCookie(pref.userID))
 			return false;
-		}
+
 		try {
 			page = UrlFetcher.fetch(url);
 			if (page.length() == 0)
@@ -1293,34 +1176,28 @@
 		} catch (IOException e) {
 			return false;
 		}
+
 		Extractor ext = new Extractor(page, "ctl00$ContentBody$uxLanguagePreference", "</select>", 0, true);
 		String languageBlock = ext.findNext();
 		ext.set(ext.findNext("ctl00$ContentBody$uxDateTimeFormat"), "selected\" value=\"", "\">", 0, true);
 		DateFormat.GCDateFormat = ext.findNext();
-		// <option selected="selected" value="de-DE">Deutsch</option>
-		ext.set(languageBlock, "<option selected=", "/option>", 0, true);
-		ext.set(ext.findNext(), ">", "<", 0, true);
+		// <option selected=\"selected\" value=\"de-DE">Deutsch</option>
+		ext.set(languageBlock, "<option selected=\"selected\" value=\"", "\">", 0, true);
 		String oldLanguage = ext.findNext();
-		if (oldLanguage.equals("English")) {
+		if (oldLanguage.equals("en-US")) {
+			pref.switchGCLanguageToEnglish=false;
 			pref.log("already English");
-			pref.oldLanguageCtl = ""; // nothing to reset
 			return true;
 		}
 		// switch to english now goes into gc account Display Preferences
 		// (is permanent, must be reset)
-		// todo as long as Textfile Encoding is CP1252 we compare with
-		// substring(1) and think koreanisch if no merge at all
-		String languages[] = { "English", "Deutsch", "Fran?ais", "Portugu?s", "Ce?tina", "Svenska", "Nederlands", "Catal?", "Polski", "Eesti", "Norsk, Bokm?l", "???", "Espa?ol" };
+		String languages[] = { "en-US", "de-DE", "fr-FR", "pt-PT", "cs-CZ", "sv-SE", "nl-NL", "ca-ES", "pl-PL", "et-EE", "nb-NO", "ko-KR", "es-ES", "hu-HU" };
 		for (int i = 0; i < languages.length; i++) {
-			if (oldLanguage.substring(1).equals(languages[i].substring(1))) {
+			if (oldLanguage.equals(languages[i])) {
 				pref.oldLanguageCtl = url + "?__EVENTTARGET=" + UrlFetcher.encodeURL("ctl00$uxLocaleList$uxLocaleList$ctl" + MyLocale.formatLong(i, "00") + "$uxLocaleItem", false);
 				break;
 			}
 		}
-		if (pref.oldLanguageCtl.length() == 0) {
-			// koreanisch
-			pref.oldLanguageCtl = url + "?__EVENTTARGET=" + UrlFetcher.encodeURL("ctl00$uxLocaleList$uxLocaleList$ctl" + "11" + "$uxLocaleItem", false);
-		}
 		final String strEnglishPage = "ctl00$uxLocaleList$uxLocaleList$ctl00$uxLocaleItem";
 		url += "?__EVENTTARGET=" + UrlFetcher.encodeURL(strEnglishPage, false);
 		try {
@@ -1366,14 +1243,7 @@
 			RexPropType = new Regex(p.getProp("TypeRex"));
 			RexPropDTS = new Regex(p.getProp("DTSRex"));
 			RexPropOwn = new Regex(p.getProp("own"));
-			RexLogBlock = new Regex(p.getProp("blockRex"));
-			exSingleLog = new Extractor("", p.getProp("singleLogExStart"), p.getProp("singleLogExEnd"), 0, false);
-			exIcon = new Extractor("", p.getProp("iconExStart"), p.getProp("iconExEnd"), 0, true);
-			exNameTemp = new Extractor("", p.getProp("nameTempExStart"), p.getProp("nameTempExEnd"), 0, true);
-			exName = new Extractor("", p.getProp("nameExStart"), p.getProp("nameExEnd"), 0, true);
-			exDate = new Extractor("", p.getProp("dateExStart"), p.getProp("dateExEnd"), 0, true);
-			exLog = new Extractor("", p.getProp("logExStart"), p.getProp("logExEnd"), 0, true);
-			exLogId = new Extractor("", p.getProp("logIdExStart"), p.getProp("logIdExEnd"), 0, true);
+			RexUserToken = new Regex(p.getProp("UserTokenRex"));
 			icon_smile = p.getProp("icon_smile");
 			icon_camera = p.getProp("icon_camera");
 			icon_attended = p.getProp("icon_attended");
@@ -1747,7 +1617,7 @@
 
 	/**
 	 * check if new Update exists
-	 * 
+	 *
 	 * @param ch
 	 *            CacheHolder
 	 * @param CacheDescription
@@ -1832,7 +1702,7 @@
 
 	/**
 	 * Get num found
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return numFound
@@ -1888,7 +1758,7 @@
 			if (ret.indexOf("ere") > -1)
 				return distanceAndDirection; // zur Zeit " Here -1"
 			// Versuch den DistanceCodeKey automatisch zu bestimmen
-			// da dieser von gc mal wieder ge????ndert wurde.
+			// da dieser von gc mal wieder ge?ndert wurde.
 			// todo Ben?tigt ev noch weitere Anpassungen: | am Anfang, and calc of keylength
 			// String thereitis="|0.34 km|102.698";
 			// String page =
@@ -1921,7 +1791,7 @@
 			final String coded = ewe.net.URL.decodeURL(RexPropDistanceCode.stringMatched(1));
 			final String newkey = decodeXor(coded, thereitis);
 			final int keylength = 13;
-			// wenn nicht 13 dann newkey auf wiederholung pr????fen
+			// wenn nicht 13 dann newkey auf wiederholung pr?fen
 			DistanceCodeKey = newkey.substring(0, keylength);
 			ret = decodeXor(stmp, DistanceCodeKey).replace('|', ' ');
 			pref.log("Automatic key: " + DistanceCodeKey + " result: " + ret + Preferences.NEWLINE);
@@ -1952,7 +1822,7 @@
 
 	/**
 	 * Get the waypoint name
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return Name of waypoint to add to list
@@ -2015,6 +1885,7 @@
 			try {
 				doc = UrlFetcher.fetchData(address);
 			} catch (final IOException e) {
+				pref.log("[SpiderGC:getDTS]",e,true);
 				return "";
 			}
 			final Image idoc = new Image(doc, 0, null, 0, 0);
@@ -2177,9 +2048,9 @@
 
 	/*
 	 * @param CacheHolder ch
-	 * 
+	 *
 	 * @param String cacheDescGC
-	 * 
+	 *
 	 * @return boolean newLogExists
 	 */
 	private boolean newFoundExists(CacheHolder ch, String cacheDescription) {
@@ -2221,9 +2092,9 @@
 	 * Read a complete cachepage from geocaching.com including all logs. This is used both when updating already
 	 * existing caches (via spiderSingle) and when spidering around a centre. It is also used when reading a GPX file
 	 * and fetching the images.
-	 * 
+	 *
 	 * This is the workhorse function of the spider.
-	 * 
+	 *
 	 * @param CacheHolderDetail
 	 *            chD The element wayPoint must be set to the name of a waypoint
 	 * @param boolean
@@ -2429,7 +2300,7 @@
 
 	/**
 	 * Get the coordinates of the cache
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return Cache coordinates
@@ -2448,7 +2319,7 @@
 
 	/**
 	 * Get the long description
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return the long description
@@ -2483,7 +2354,7 @@
 
 	/**
 	 * Get the cache location (country and state)
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return the location (country and state) of the cache
@@ -2500,7 +2371,7 @@
 
 	/**
 	 * Get the cache name
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return the name of the cache
@@ -2517,7 +2388,7 @@
 
 	/**
 	 * Get the cache owner
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return the cache owner
@@ -2534,7 +2405,7 @@
 
 	/**
 	 * Get the date when the cache was hidden
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return Hidden date
@@ -2551,7 +2422,7 @@
 
 	/**
 	 * Get the hints
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return Cachehints
@@ -2568,7 +2439,7 @@
 
 	/**
 	 * Get the cache size
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return Cache size
@@ -2586,7 +2457,7 @@
 
 	/**
 	 * Get the Difficulty
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return The cache difficulty
@@ -2604,7 +2475,7 @@
 
 	/**
 	 * Get the terrain rating
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return Terrain rating
@@ -2622,7 +2493,7 @@
 
 	/**
 	 * Get the waypoint type
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @return the waypoint type (Tradi, Multi, etc.)
@@ -2639,7 +2510,7 @@
 
 	/**
 	 * Get the logs
-	 * 
+	 *
 	 * @param doc
 	 *            A previously fetched cachepage
 	 * @param chD
@@ -2647,66 +2518,71 @@
 	 * @return A HTML string containing the logs
 	 */
 	private void getLogs(String completeWebPage, CacheHolderDetail chD) throws Exception {
-		String icon = "";
-		String name = "";
-		String logText = "";
-		String logId = "";
-		String singleLog = "";
+
 		final LogList reslts = chD.CacheLogs;
-		RexLogBlock.search(completeWebPage);
-		if (!RexLogBlock.didMatch()) {
-			pref.log("[SpiderGC.java:getLogs]check blockRex!", null);
-		}
-		final String LogBlock = RexLogBlock.stringMatched(1);
 
-		exSingleLog.set(LogBlock);
+		RexUserToken.search(completeWebPage);
+		if (!RexUserToken.didMatch()) {
+			pref.log("[SpiderGC.java:getLogs]check RexUserToken!", null);
+		}
+		final String userToken = RexUserToken.stringMatched(1);
+		int idx = 0;
 		int nLogs = 0;
 		boolean foundown = false;
-		while ((singleLog = exSingleLog.findNext()).length() > 0) {
-			nLogs++;
+		boolean fertig = false;
+		int num = 100;
+		do {
+			idx++;
+			String url="http://www.geocaching.com/seek/geocache.logbook?tkn="+userToken+"&idx="+idx+"&num="+num+"&decrypt=false";
+			UrlFetcher.setRequestorProperty("Content-Type", "application/json; charset=UTF-8");
+			final JSONObject resp = new JSONObject(UrlFetcher.fetch(url));
+			if (!resp.getString("status").equals("success")) {
+				pref.log("status is " + resp.getString("status"));
+			}
+			final JSONArray data = resp.getJSONArray("data");
+			fertig = data.length() < num;
+			for (int index = 0; index < data.length(); index++) {
+				nLogs++;
+				final JSONObject entry = data.getJSONObject(index);
 
-			icon = exIcon.findFirst(singleLog);
-			// ' changes to " in UMTS-connection! first char in iconExEnd.
-			icon = icon.substring(0, icon.length() - 1);
+				final String icon = entry.getString("LogTypeImage");
+				final String name = entry.getString("UserName");
+				String logText = entry.getString("LogText");
+				logText = STRreplace.replace(logText, "<br/>", "<br>");
+				logText = correctSmilies(logText);
+				final String d = DateFormat.toYYMMDD(entry.getString("Visited"));
+				final String logId = entry.getString("LogID");
 
-			name = exName.findFirst(exNameTemp.findFirst(singleLog));
-
-			logText = exLog.findFirst(singleLog);
-			logText = correctSmilies(logText);
-
-			logId = exLogId.findFirst(singleLog);
-
-			final String ed = exDate.findFirst(singleLog);
-			final String d = DateFormat.toYYMMDD(ed);
-
-			// if this log says this Cache is found by me
-			if ((icon.equals(icon_smile) || icon.equals(icon_camera) || icon.equals(icon_attended)) && (name.equalsIgnoreCase(SafeXML.clean(pref.myAlias)) || (pref.myAlias2.length() > 0 && name.equalsIgnoreCase(SafeXML.clean(pref.myAlias2))))) {
-				chD.getParent().setFound(true);
-				chD.getParent().setCacheStatus(d);
-				chD.OwnLogId = logId;
-				chD.OwnLog = new Log(icon, d, name, logText);
-				foundown = true;
-				// pref.log("own log detected!");
-			}
-			if (nLogs <= pref.maxLogsToSpider) {
-				reslts.add(new Log(icon, d, name, logText));
-			} else {
-				if (foundown) {
-					break;
+				// if this log says this Cache is found by me
+				if ((icon.equals(icon_smile) || icon.equals(icon_camera) || icon.equals(icon_attended)) && (name.equalsIgnoreCase(pref.myAlias) || (pref.myAlias2.length() > 0 && name.equalsIgnoreCase(pref.myAlias2)))) {
+					chD.getParent().setFound(true);
+					chD.getParent().setCacheStatus(d);
+					// final String logId = entry.getString("LogID");
+					chD.OwnLogId = logId;
+					chD.OwnLog = new Log(icon, d, name, logText);
+					foundown = true;
 				}
+				if (nLogs <= pref.maxLogsToSpider) {
+					reslts.add(new Log(icon, d, name, logText));
+				} else {
+					if (foundown) {
+						fertig=true;
+						break;
+					}
+				}
 			}
-		}
+		} while (!fertig);
+
 		if (nLogs > pref.maxLogsToSpider) {
+			// there are more logs
 			reslts.add(Log.maxLog());
-			// pref.log("MAXLOGS reached ("+pref.maxLogsToSpider+")");
 		}
-		// pref.log(nLogs+" checked!");
-		// return reslts;
+
 	}
 
 	/**
 	 * This methods cleans up the path for inlined smilies in logtexts.
-	 * 
+	 *
 	 * @param logText
 	 * @return
 	 */
@@ -2724,7 +2600,7 @@
 	/**
 	 * Read the travelbug names from a previously fetched Cache page and then read the travelbug purpose for each
 	 * travelbug
-	 * 
+	 *
 	 * @param doc
 	 *            The previously fetched cachepage
 	 * @return A HTML formatted string with bug names and there purpose
@@ -2782,7 +2658,7 @@
 	/**
 	 * Get the images for a previously fetched cache page. Images are extracted from two areas: The long description and
 	 * the pictures section (including the spoiler)
-	 * 
+	 *
 	 * @param doc
 	 *            The previously fetched cachepage
 	 * @param chD
@@ -2866,19 +2742,26 @@
 		// ========
 		// In the image span
 		// ========
-		Extractor spanBlock, exImgName;
+		Extractor spanBlock;
+		String imgSrcExStart, imgSrcExEnd;
+		String imgNameExStart, imgNameExEnd;
+		String imgCommentExStart, imgCommentExEnd;
 		try {
-			spanBlock = new Extractor(doc, p.getProp("imgSpanExStart"), p.getProp("imgSpanExEnd"), 0, true);
-			tst = spanBlock.findNext();
-			exImgName = new Extractor(tst, p.getProp("imgNameExStart"), p.getProp("imgNameExEnd"), 0, true);
-			exImgSrc = new Extractor(tst, p.getProp("imgSrcExStart"), p.getProp("imgSrcExEnd"), 0, true);
-			exImgComment = new Extractor(tst, p.getProp("imgCommentExStart"), p.getProp("imgCommentExEnd"), 0, true);
+			imgSrcExStart=p.getProp("imgSrcExStart");
+			imgSrcExEnd=p.getProp("imgSrcExEnd");
+			imgNameExStart=p.getProp("imgNameExStart");
+			imgNameExEnd=p.getProp("imgNameExEnd");
+			imgCommentExStart= p.getProp("imgCommentExStart");
+			imgCommentExEnd=p.getProp("imgCommentExEnd");
+			spanBlock = new Extractor(doc, p.getProp("imgSpanExStart"), p.getProp("imgSpanExEnd"), 0, false);
+			spanBlock.set(spanBlock.findNext(), p.getProp("imgSpanExStart2"), p.getProp("imgSpanExEnd"), 0, true);
+			spanBlock.set(spanBlock.findNext()+imgSrcExStart, imgSrcExStart, imgSrcExStart, 0, false);
 		} catch (final Exception ex) {
 			return;
 		}
-		while ((imgUrl = exImgSrc.findNext()).length() > 0) {
-			imgComment = exImgComment.findNext();
-			imgUrl = "http://" + imgUrl;
+		while ((tst = spanBlock.findNext()).length() > 0) {
+			exImgSrc.set(tst, imgSrcExStart, imgSrcExEnd, 0, true);
+			imgUrl = "http://" + exImgSrc.findNext();
 			try {
 				imgType = (imgUrl.substring(imgUrl.lastIndexOf('.')).toLowerCase() + "    ").substring(0, 4).trim();
 				// imgType is now max 4 chars, starting with .
@@ -2910,7 +2793,8 @@
 						imageInfo.setFilename(fileName + imgType);
 						imageInfo.setURL(imgUrl);
 					}
-					imageInfo.setTitle(exImgName.findNext());
+					imageInfo.setTitle(exImgSrc.findNext(imgNameExStart, imgNameExEnd));
+					imgComment = exImgSrc.findNext(imgCommentExStart, imgCommentExEnd);
 					while (imgComment.startsWith("<br />"))
 						imgComment = imgComment.substring(6);
 					while (imgComment.endsWith("<br />"))
@@ -2969,7 +2853,7 @@
 
 	/**
 	 * Read an image from the server
-	 * 
+	 *
 	 * @param imgUrl
 	 *            The Url of the image
 	 * @param target
@@ -2991,7 +2875,7 @@
 
 	/**
 	 * Read all additional waypoints from a previously fetched cachepage.
-	 * 
+	 *
 	 * @param doc
 	 *            The previously fetched cachepage
 	 * @param wayPoint
@@ -3126,7 +3010,7 @@
 	 * Load the bug id for a given name. This method is not ideal, as there are sometimes several bugs with identical
 	 * names but different IDs. Normally the bug GUID is used which can be obtained from the cache page.<br>
 	 * Note that each bug has both an ID and a GUID.
-	 * 
+	 *
 	 * @param name
 	 *            The name (or partial name) of a travelbug
 	 * @return the id of the bug
@@ -3162,7 +3046,7 @@
 	/**
 	 * Fetch a bug's mission for a given GUID or ID. If the guid String is longer than 10 characters it is assumed to be
 	 * a GUID, otherwise it is an ID.
-	 * 
+	 *
 	 * @param guid
 	 *            the guid or id of the travelbug
 	 * @return The mission
@@ -3195,7 +3079,7 @@
 
 	/**
 	 * Fetch a bug's mission for a given tracking number
-	 * 
+	 *
 	 * @param trackNr
 	 *            the tracking number of the travelbug
 	 * @return The mission
@@ -3227,7 +3111,7 @@
 
 	/**
 	 * Fetch a bug's mission and namefor a given tracking number
-	 * 
+	 *
 	 * @param TB
 	 *            the travelbug
 	 * @return true if suceeded
@@ -3274,7 +3158,7 @@
 
 		/**
 		 * Gets an entry in spider.def by its key (tag)
-		 * 
+		 *
 		 * @param key
 		 *            The key which is attributed to a specific entry
 		 * @return The value for the key
@@ -3332,14 +3216,6 @@
 					_routePoints.add(tp);
 				return;
 			}
-			if (name.equals("GeoPosition")) {
-				final double lat = Common.parseDouble(atts.getValue("Y"));
-				final double lon = Common.parseDouble(atts.getValue("X"));
-				final TrackPoint tp = new TrackPoint(lat, lon);
-				if (tp.isValid())
-					_routePoints.add(tp);
-				return;
-			}
 		}
 
 		public void endElement(String name) {

Modified: branches/r1.2/src/CacheWolf/myTableModel.java
===================================================================
--- branches/r1.2/src/CacheWolf/myTableModel.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/myTableModel.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -561,7 +561,9 @@
 	}
 
 	/**
-	 * Toggle the select status for a group of caches If from==to, the addi Waypoints are also toggled if the cache is a main waypoint If from!=to, each cache is toggled irrespective of its type (main or addi)
+	 * Toggle the select status for a group of caches. Addi waypoints are set to the same state
+	 * as their main cache. (Exception: Their main cache is not in the range of toggled caches,
+	 * then they are toggled independently.)
 	 * 
 	 * @param from
 	 *            index of first cache to toggle
@@ -574,24 +576,53 @@
 		CacheHolder ch;
 		boolean singleRow = from == to;
 		for (int j = from; j <= to; j++) {
+			boolean checkAddiWpts = false;
 			ch = cacheDB.get(j);
-			ch.is_Checked = !ch.is_Checked;
+			if (singleRow) {
+				// If its a single row click, then toggle the cache. Remember to 
+				// toggle addis too, if there are.
+				ch.is_Checked = !ch.is_Checked;
+				checkAddiWpts = true;
+			} else {
+				// If not a single row click...
+				if (ch.isAddiWpt()) {
+					// Only toggle addis, if their main cache is not within the
+					// range that will be toggled
+					int mainIdx = cacheDB.getIndex(ch.mainCache);
+					if (mainIdx < from-1 || mainIdx > to) {
+						ch.is_Checked = !ch.is_Checked;
+					} else {
+						// Otherwise the addis will be toggled along with their 
+						// main caches, so nothing is to do here.
+					}
+				} else {
+					// If its a main cache, then toggle it and remember to 
+					// toggle the addis, too.
+					ch.is_Checked = !ch.is_Checked;
+					checkAddiWpts = true;
+				}
+			}
 			tcControl.repaintCell(j, x);
-			// set the ceckbox also for addi wpts
-			if (ch.hasAddiWpt() && singleRow) {
+			// Now look for addi wpts.
+			if (checkAddiWpts) {
 				CacheHolder addiWpt;
 				int addiCount = ch.addiWpts.getCount();
 				for (int i = 0; i < addiCount; i++) {
+					// This code will only run when the main cache
+					// has been toggled.
 					addiWpt = (CacheHolder) ch.addiWpts.get(i);
+					// Set all addi check states to the state of the 
+					// main cache. 
 					addiWpt.is_Checked = ch.is_Checked;
 					if (addiWpt.isVisible()) {
 						tcControl.repaintCell(cacheDB.getIndex(addiWpt), x);
 					}
 				}
+			}
 
-			}
 		}
 	}
+	
 
 	public void select(int row, int col, boolean selectOn) {
 		// super.select(row, col, selectOn);

Modified: branches/r1.2/src/CacheWolf/navi/MapLoader.java
===================================================================
--- branches/r1.2/src/CacheWolf/navi/MapLoader.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/navi/MapLoader.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -192,8 +192,21 @@
 		// if (toplefti.latDec <= bottomrighti.latDec || toplefti.lonDec >= toplefti.lonDec) throw new IllegalArgumentException("topleft must be left and above bottom right");
 		topleft = new CWPoint(toplefti);
 		bottomright = new CWPoint(bottomrighti);
-		double metersPerLat = (1000.0 * (new CWPoint(0, 0)).getDistance(new CWPoint(1, 0)));
-		double metersPerLon = metersPerLat * java.lang.Math.cos((toplefti.latDec + bottomright.latDec) / 2 / 180 * java.lang.Math.PI);
+		double metersPerLat;
+		double metersPerLon;
+		if (topleft.equals(bottomright)) {
+			// veraltet: Berechnung auf Kugel: double
+			metersPerLat = (1000.0 * (new CWPoint(0, 0)).getDistance(new CWPoint(1, 0)));
+			// veraltet: Berechnung auf Kugel: double
+			metersPerLon = metersPerLat * java.lang.Math.cos((toplefti.latDec + bottomright.latDec) / 2 / 180 * java.lang.Math.PI);
+		} else {
+			CWPoint center = new CWPoint((topleft.latDec + bottomright.latDec) / 2.0, (toplefti.lonDec + bottomrighti.lonDec) / 2.0);
+			CWPoint centerleft = new CWPoint((topleft.latDec + bottomright.latDec) / 2.0, toplefti.lonDec);
+			CWPoint centerbottom = new CWPoint(bottomright.latDec, (toplefti.lonDec + bottomrighti.lonDec) / 2.0);
+			metersPerLat = 1000.0 * center.getDistance(centerbottom) / (center.latDec - centerbottom.latDec);
+			metersPerLon = 1000.0 * center.getDistance(centerleft) / (center.lonDec - centerleft.lonDec);
+		}
+
 		double metersperpixel = currentOnlineMapService.getMetersPerPixel(scale);
 		double pixelsPerLat = metersPerLat / metersperpixel;
 		double pixelsPerLon = metersPerLon / metersperpixel;
@@ -873,7 +886,7 @@
 	/**
 	 * This method gives the number in the array of coordinateReferenceSystems, which should be used
 	 * a) if only one is in the array 0 is returned
-	 * b) if there are more, find out which one matches the correct zone (e.g. Gau?-K?ger stripe)
+	 * b) if there are more, find out which one matches the correct zone (e.g. Gau?-K?ger stripe)
 	 * Call this routine with center of the area (use Area.getcenter())
 	 * 
 	 * @param p
@@ -884,7 +897,7 @@
 		int crsindex = 0;
 		if (coordinateReferenceSystem.length > 1) {
 			int ls = TransformCoordinates.getLocalProjectionSystem(coordinateReferenceSystem[0]);
-			ProjectedPoint gkbl = TransformCoordinates.wgs84ToLocalsystem(p, ls); // TODO: think / read about what to do if bottom left and top right are not in the same Gau?-Kr?ger stripe?
+			ProjectedPoint gkbl = TransformCoordinates.wgs84ToLocalsystem(p, ls); // TODO: think / read about what to do if bottom left and top right are not in the same Gau?-Kr?ger stripe?
 			int wantepsg = gkbl.getEpsgCode();
 			for (crsindex = 0; crsindex < coordinateReferenceSystem.length; crsindex++) {
 				if (coordinateReferenceSystem[crsindex] == wantepsg)
@@ -900,7 +913,7 @@
 
 			}
 			if (crsindex < 0)
-				throw new IllegalArgumentException(MyLocale.getMsg(4829, "getUrlForBoundingBox: Point:") + " " + gkbl.toString() + MyLocale.getMsg(4830, "no matching Gau?-Kr?ger-Stripe in the EPSG-code list in the .wms"));
+				throw new IllegalArgumentException(MyLocale.getMsg(4829, "getUrlForBoundingBox: Point:") + " " + gkbl.toString() + MyLocale.getMsg(4830, "no matching Gau?-Kr?ger-Stripe in the EPSG-code list in the .wms"));
 		}
 		return crsindex;
 	}

Modified: branches/r1.2/src/CacheWolf/navi/MovingMap.java
===================================================================
--- branches/r1.2/src/CacheWolf/navi/MovingMap.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/navi/MovingMap.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -1762,7 +1762,7 @@
 								// evtl. Kartenwechsel PosCircle on Screen
 								// ist. So wie es jetzt ist, kann 2mal der
 								// gleiche Aufruf zum laden
-								// unterschiedlicher Karten f???hren, wenn
+								// unterschiedlicher Karten f?hren, wenn
 								// vorher PosCircle nicht auf dem
 			// SChirm war, nach dem ersten Laden aber schon.
 			cll = new CWPoint(ll);
@@ -1823,7 +1823,7 @@
 	public void loadMapForAllCaches() {
 		final Area sur = Global.getProfile().getSourroundingArea(true);
 		if (sur == null) {
-			(new MessageBox(MyLocale.getMsg(4207, "Error"), MyLocale.getMsg(4215, "Keine  Caches mit H???ckchen ausgew???hlt"), FormBase.OKB)).execute();
+			(new MessageBox(MyLocale.getMsg(4207, "Error"), MyLocale.getMsg(4215, "Keine  Caches mit H?ckchen ausgew?hlt"), FormBase.OKB)).execute();
 			return;
 		}
 		MapInfoObject newmap = maps.getMapForArea(sur.topleft, sur.bottomright);

Modified: branches/r1.2/src/CacheWolf/utils/URLUTF8Encoder.java
===================================================================
--- branches/r1.2/src/CacheWolf/utils/URLUTF8Encoder.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/utils/URLUTF8Encoder.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -41,10 +41,10 @@
  *
  * URLUTF8Encoder: http://www.w3.org/International/URLUTF8Encoder.java
  *
- * Copyright ?? 1997 World Wide Web Consortium, (Massachusetts
+ * Copyright ? 1997 World Wide Web Consortium, (Massachusetts
  * Institute of Technology, European Research Consortium for
  * Informatics and Mathematics, Keio University). All Rights Reserved. 
- * This work is distributed under the W3C?? Software License [1] in the
+ * This work is distributed under the W3C? Software License [1] in the
  * hope that it will be useful, but WITHOUT ANY WARRANTY; without even
  * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  * PURPOSE.

Modified: branches/r1.2/src/CacheWolf/view/pda/PDAList.java
===================================================================
--- branches/r1.2/src/CacheWolf/view/pda/PDAList.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/view/pda/PDAList.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -1,12 +1,12 @@
 package CacheWolf.view.pda;
 
+import CacheWolf.Global;
 import CacheWolf.MyLocale;
 import CacheWolf.model.DefaultListModel;
 import ewe.sys.Vm;
 import ewe.ui.CellConstants;
 import ewe.ui.ControlEvent;
 import ewe.ui.Form;
-import ewe.util.Vector;
 
 public abstract class PDAList extends Form {
 	protected static final String LINE = "Line";
@@ -17,6 +17,8 @@
 
 	protected static final String MENUE = "Menue";
 
+	private static final String NONE = "none";
+
 	public DefaultListModel model;
 	private int linesOnScreen=7;
 	PDAListButton[] listButtons;
@@ -31,7 +33,7 @@
 
 		firstLine = 0;
 		for (int i = 0; i < linesOnScreen; i++) {
-			listButtons[i] = new PDAListButton("", LINE + i);
+			listButtons[i]  = createListButton(i);
 			addLast(listButtons[i], CellConstants.STRETCH, CellConstants.FILL);
 		}
 		setupTBButtons();
@@ -45,6 +47,10 @@
 		addLast(b1, CellConstants.HSTRETCH, CellConstants.HFILL);
 	}
 
+	protected PDAListButton createListButton(int i) {
+		return new PDAListButton("", LINE + i);
+	}
+
 	public void onControlEvent(ControlEvent ev) {
 		if (ev instanceof ControlEvent) {
 			switch (ev.type) {
@@ -77,8 +83,10 @@
 			if (model != null && i + firstLine < model.size()) {
 				Object modelElement = model.get(i + firstLine);
 				listButtons[i].text = modelElement.toString();
+				listButtons[i].action = LINE+i;
 			} else {
 				listButtons[i].text = listButtons[i].fromText = listButtons[i].toText = "";
+				listButtons[i].action = NONE;
 			}
 			listButtons[i].repaint();
 		}

Modified: branches/r1.2/src/CacheWolf/view/pda/PDAListButton.java
===================================================================
--- branches/r1.2/src/CacheWolf/view/pda/PDAListButton.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/view/pda/PDAListButton.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -15,7 +15,7 @@
 	public PDAListButton(String newText, String newAction) {
 		super(newText);
 		action = newAction;
-		buttonObject = new PDAListButtonObject(this);
+		createButtonObject();
 
 		backGround = Color.White;
 		foreGround = Color.Black;
@@ -25,10 +25,14 @@
 		textPosition=2;
 	}
 
+	protected void createButtonObject() {
+		buttonObject = new PDAListButtonObject(this);
+	}
+
 	public void make(boolean paramBoolean) {
 		if (this.buttonObject != null)
 			return;
-		this.buttonObject = new PDAListButtonObject(this);
+		createButtonObject();
 	}
 	
 }

Modified: branches/r1.2/src/CacheWolf/view/pda/PDAListButtonObject.java
===================================================================
--- branches/r1.2/src/CacheWolf/view/pda/PDAListButtonObject.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/view/pda/PDAListButtonObject.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -1,13 +1,14 @@
 package CacheWolf.view.pda;
 
-import ewe.fx.Color;
+import CacheWolf.Global;
 import ewe.fx.Font;
 import ewe.fx.Graphics;
 import ewe.fx.Rect;
 import ewe.ui.ButtonObject;
+import ewe.ui.Gui;
 
 public class PDAListButtonObject extends ButtonObject {
-	private PDAListButton pdaListButton;
+	protected PDAListButton pdaListButton;
 
 	public PDAListButtonObject(PDAListButton pdaListButton) {
 		super(pdaListButton);
@@ -15,13 +16,16 @@
 	}
 
 	public void paint(Graphics paramGraphics) {
+		try{
 		if ((this.soft) && (this.control != null))
 			this.control.doBackground(paramGraphics);
 		if (this.text == null)
 			this.text = "";
 		drawButton(paramGraphics);
-		Rect localRect1 = paramGraphics.reduceClip(new Rect(this.borderWidth, this.borderWidth, this.size.width
-				- (this.borderWidth * 2), this.size.height - (this.borderWidth * 2)));
+		Rect paramRect = new Rect(this.borderWidth, this.borderWidth, this.size.width - (this.borderWidth * 2), this.size.height - (this.borderWidth * 2));
+		Rect localRect1 = paramGraphics.reduceClip(paramRect);
+		//On PocketPC2003 sometimes reduceClip returns null. If this happens, the clipping area seems to be determined by its input parameter.
+		if (localRect1 == null) localRect1=paramRect;
 		try {
 			paramGraphics.setColor(foreground);
 			int x = 10;
@@ -31,28 +35,33 @@
 				x += image.getWidth();
 				x += 10;
 			}
+			
+			int fontSize = 40;
+			font = new Font(font.getName(), Font.BOLD, fontSize);
+			boolean found = false;
+			while (!found) {
+				Rect textRect = Gui.getSize(pdaListButton.getFontMetrics(), text, 5, 0);
+				if (textRect.width > localRect1.width && textRect.height > localRect1.height && fontSize > 5) {
+					fontSize--;
+					Font tmpFont = new Font(font.getName(), Font.BOLD, fontSize);
+					if (tmpFont != null){
+						font = tmpFont;
+					}
+					textRect = Gui.getSize(pdaListButton.getFontMetrics(), text, 5, 0);
+				} else {
+					found = true;
+				}
+			}
 			paramGraphics.setFont(this.font);
 			paramGraphics.drawText(text, x, 10);
 			Font tmpFont = new Font(font.getName(), Font.BOLD, 20);
 			paramGraphics.setFont(tmpFont);
-			if (pdaListButton.fromText != null) {
-				paramGraphics.drawText(pdaListButton.fromText, x + 15, 45);
-			}
-			if (!pdaListButton.fromLogged) {
-				paramGraphics.setColor(new Color(255, 0, 0));
-				paramGraphics.fillEllipse(x, 50, 10, 10);
-				paramGraphics.setColor(foreground);
-			}
-			if (pdaListButton.toText != null) {
-				paramGraphics.drawText(pdaListButton.toText, x + 15, 70);
-			}
-			if (!pdaListButton.toLogged) {
-				paramGraphics.setColor(new Color(255, 0, 0));
-				paramGraphics.fillEllipse(x, 75, 10, 10);
-				paramGraphics.setColor(foreground);
-			}
 		} finally {
 			paramGraphics.restoreClip(localRect1);
 		}
+		}
+		catch(Exception e){
+			Global.getPref().log("Mysterious Exception caught!", e, true);
+		}
 	}
 }

Modified: branches/r1.2/src/CacheWolf/view/pda/PDAMenuButtonObject.java
===================================================================
--- branches/r1.2/src/CacheWolf/view/pda/PDAMenuButtonObject.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/view/pda/PDAMenuButtonObject.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -2,6 +2,7 @@
 
 import ewe.fx.Dimension;
 import ewe.ui.ButtonObject;
+import ewe.ui.Gui;
 
 public class PDAMenuButtonObject extends ButtonObject{
 	private PDAMenuButton pdaMenuButton;
@@ -12,13 +13,12 @@
 		this.pdaMenuButton = pdaListButton;
 	}
 
-	  public Dimension calculateSize(Dimension paramDimension){
-		  calculateSize = super.calculateSize(paramDimension);
-		  if (calculateSize.height < 100){
-			  calculateSize.height=100;
-			  paramDimension.height=100;
-		  }
-		  return calculateSize;
-	  }
+	public Dimension calculateSize(Dimension paramDimension) {
+		calculateSize = super.calculateSize(paramDimension);
+		if (calculateSize.height < Gui.screenSize.height / 8) {
+			calculateSize.height = paramDimension.height = Gui.screenSize.height / 8;
+		}
+		return calculateSize;
+	}
 
 }

Modified: branches/r1.2/src/CacheWolf/view/pda/PDATravelbugScreen.java
===================================================================
--- branches/r1.2/src/CacheWolf/view/pda/PDATravelbugScreen.java	2011-09-21 13:32:26 UTC (rev 3108)
+++ branches/r1.2/src/CacheWolf/view/pda/PDATravelbugScreen.java	2011-09-26 07:19:42 UTC (rev 3109)
@@ -21,17 +21,21 @@
 	public PDATravelbugScreen(TravelbugList tbl, String title, boolean allowNew) {
 		super();
 		model = new DefaultListModel();
-		for (int i=0;i < tbl.size();i++){
+		for (int i = 0; i < tbl.size(); i++) {
 			Travelbug tb = tbl.getTB(i);
 			model.add(tb.getName());
 		}
-		if (allowNew){
-			model.add(MyLocale.getMsg(6015,"*** OTHER ***"));
+		if (allowNew) {
+			model.add(MyLocale.getMsg(6015, "*** OTHER ***"));
 		}
 		model.createShowSet();
 		setupTBButtons();
-}
+	}
 
+	protected PDAListButton createListButton(int i) {
+		return new PDAListButton("", LINE + i);
+	}
+
 	public void onControlEvent(ControlEvent ev) {
 		if (ev instanceof ControlEvent) {
 			switch (ev.type) {
@@ -40,19 +44,8 @@
 					super.onControlEvent(ev);	
 				} else if (ev.action.startsWith(LINE)) {
 					selectedItem = ev.action.charAt(LINE.length()) - '0';
-//					Object clickedItem =  model.get(line + firstLine);
-//					Form form = new PDATravelbugDetailPanel(tbJourney, this);
-//					form.setPreferredSize(800, 600);
-//					form.execute();
-//					setupTBButtons();
 					exit(0);
 				} else if (ev.action.equals(MENUE)) {
-//					Form form = new PDATravelbugMenuPanel(this);
-//					form.setPreferredSize(800, 600);
-//					int execute = form.execute();
-//					if (execute == 1){
-//						exit(0);
-//					}
 					setupTBButtons();
 				}
 				break;



From araber95 at mail.berlios.de  Mon Sep 26 11:21:21 2011
From: araber95 at mail.berlios.de (araber95 at mail.berlios.de)
Date: Mon, 26 Sep 2011 11:21:21 AM +0200
Subject: [Cachewolf-svn] r3110 - trunk/src/CacheWolf
Message-ID: <20110926092121.E36AE4813E4@sheep.berlios.de>

Author: araber95
Date: 2011-09-26 11:21:21 +0200 (Mon, 26 Sep 2011)
New Revision: 3110

Modified:
   trunk/src/CacheWolf/CacheHolder.java
Log:
like 3109 (http://www.geoclub.de/viewtopic.php?f=40&t=56498&p=919326#p919326)

Modified: trunk/src/CacheWolf/CacheHolder.java
===================================================================
--- trunk/src/CacheWolf/CacheHolder.java	2011-09-26 07:19:42 UTC (rev 3109)
+++ trunk/src/CacheWolf/CacheHolder.java	2011-09-26 09:21:21 UTC (rev 3110)
@@ -48,7 +48,7 @@
 /**
  * A class to hold information on a cache.<br>
  * Not all attributes are filled at once. You will have to look at other classes and methods to get more information.
- * 
+ *
  */
 public class CacheHolder {
 	protected static final String NOBEARING = "?";
@@ -425,7 +425,7 @@
 
 	/**
 	 * Returns the distance in formatted output. Using kilometers when metric system is active, using miles when imperial system is active.
-	 * 
+	 *
 	 * @return The current distance.
 	 */
 	public String getDistance() {
@@ -463,7 +463,7 @@
 	/**
 	 * Updates Cache information with information provided by cache given as argument. This is used to update the cache with the information retrieved from files or web: The argument cache is the one that is filled with the read information,
 	 * <code>this</code> is the cache that is already in the database and subject to update.
-	 * 
+	 *
 	 * @param ch
 	 *            The cache who's information is updating the current one
 	 * @param overwrite
@@ -612,7 +612,14 @@
 		if (isAddiWpt()) {
 			CacheHolder ch = this.mainCache;
 			varParams.put("MAINWP", ch.getWayPoint());
-			varParams.put("MAINWPNAME", ch.getCacheName());
+			String cn = ch.getCacheName();
+			if (codec instanceof AsciiCodec) {
+				cn = Exporter.simplifyString(cn);
+			} // use for "NAME"
+			if (badChars != null) {
+				cn = badChars.replaceAll(cn);
+			} // use for "NAME"
+			varParams.put("MAINWPNAME", cn);
 			varParams.put("DIFFICULTY", (ch.hard < 0) ? "!<!" : decSep.replaceAll(CacheTerrDiff.longDT(ch.hard)));
 			String sHard = Integer.toString(ch.hard);
 			varParams.put("SHORTDIFFICULTY", (ch.hard < 0) ? "" : sHard);
@@ -697,6 +704,7 @@
 			varParams.put("COUNTRY", "");
 			varParams.put("STATE", "");
 		} else {
+			// todo &lt;br&gt;
 			varParams.put("URL", det.URL);
 			if (html) {
 				if (ModTyp == 0) {
@@ -844,7 +852,7 @@
 
 	/**
 	 * generate a gc.com compatible string representation of log derived from the internally stored image
-	 * 
+	 *
 	 * @param image
 	 *            name of the image to display
 	 * @return log type. will default to "Write note" for unknown logtypes
@@ -887,7 +895,7 @@
 
 	/**
 	 * Modify the image links in the long description so that they point to image files in the local directory Also copy the image file to the target directory so that it can be displayed.
-	 * 
+	 *
 	 * @param chD
 	 *            CacheHolderDetail
 	 * @param int ModTypLongDesc == 1 get image from profile path, == 2 get image from html-path
@@ -1045,7 +1053,7 @@
 
 	/**
 	 * True if ch and this belong to the same main cache.
-	 * 
+	 *
 	 * @param ch
 	 * @return
 	 */
@@ -1070,7 +1078,7 @@
 
 	/**
 	 * Find out of detail object of Cache is loaded. Returns <code>true</code> if this is the case.
-	 * 
+	 *
 	 * @return True when details object is present
 	 */
 	public boolean detailsLoaded() {
@@ -1081,7 +1089,7 @@
 	 * Gets the detail object of a cache. The detail object stores information which is not needed for every cache instantaneously, but can be loaded if the user decides to look at this cache. If the cache object is already existing, the method will
 	 * return this object, otherwise it will create it and try to read it from the corresponding <waypoint>.xml file. Depending on the parameters it is allowed that the <waypoint>.xml file does not yet exist, or the user is warned that the file doesn't
 	 * exist. If more than <code>maxdetails</code> details are loaded, then the 5 last recently loaded caches are unloaded (to save ram).
-	 * 
+	 *
 	 * @param alarmuser
 	 *            If true an error message will be displayed to the user, if the details could not be read, and the method returns null
 	 * @return The respective CacheHolderDetail, or null
@@ -1328,7 +1336,7 @@
 
 	/**
 	 * Initializes the caches states (and its addis) before updating, so that the "new", "updated", "log_updated" and "incomplete" properties are properly set.
-	 * 
+	 *
 	 * @param pNewCache
 	 *            <code>true</code> if it is a new cache (i.e. a cache not existing in CacheDB), <code>false</code> otherwise.
 	 */
@@ -1346,7 +1354,7 @@
 
 	/**
 	 * Creates a bit field of boolean values of the cache, represented as a long value. Boolean value of <code>true</code> results in <code>1</code> in the long values bits, and, vice versa, 0 for false.
-	 * 
+	 *
 	 * @return long value representing the boolean bit field
 	 */
 	private long boolFields2long() {
@@ -1362,7 +1370,7 @@
 	/**
 	 * Creates a field of byte values of certain properties of the cache, represented as a long value. As a long is 8 bytes wide, one might pack 8 bytes into a long, one every 8 bits. The position indicates the group of bits where the byte is packed,
 	 * counting starting from one by the right side of the long.
-	 * 
+	 *
 	 * @return long value representing the byte field
 	 */
 	private long byteFields2long() {
@@ -1372,7 +1380,7 @@
 
 	/**
 	 * Evaluates byte values from a long value for certain properties of the cache.
-	 * 
+	 *
 	 * @param value
 	 *            The long value which contains up to 8 bytes.
 	 */
@@ -1390,7 +1398,7 @@
 
 	/**
 	 * convert a v2 byte filed to the current structures
-	 * 
+	 *
 	 * @param value
 	 */
 	private void long2byteFieldsv2(long value) {
@@ -1418,7 +1426,7 @@
 
 	/**
 	 * Extracts a byte from a long value. The position is the number of the 8-bit block of the long (which contains 8 8-bit blocks), counted from 1 to 8, starting from the right side of the long.
-	 * 
+	 *
 	 * @param value
 	 *            The long value which contains the bytes
 	 * @param position
@@ -1432,7 +1440,7 @@
 
 	/**
 	 * Evaluates boolean values from a long value, which is seen as bit field.
-	 * 
+	 *
 	 * @param value
 	 *            The bit field as long value
 	 */
@@ -1455,7 +1463,7 @@
 
 	/**
 	 * Represents a bit mask as long value for a boolean value which is saved at a specified position in the long field.
-	 * 
+	 *
 	 * @param value
 	 *            The boolean value we want to code
 	 * @param position
@@ -1472,7 +1480,7 @@
 
 	/**
 	 * Coding a long field which has only the bits of the byte value set. The position is the number (from 1 to 8) of the byte block which is used from the long.
-	 * 
+	 *
 	 * @param value
 	 *            Byte to encode
 	 * @param position
@@ -1487,7 +1495,7 @@
 	/**
 	 * Returns <code>true</code> if the waypoint should appear in the cache list, <code>false</code> if it should not appear.<br>
 	 * The method takes into account blacklist, filters, search results - everything that determines if a cache is visible in the list or not.
-	 * 
+	 *
 	 * @return
 	 */
 	public boolean isVisible() {
@@ -1518,7 +1526,7 @@
 
 	/**
 	 * Gets an IconAndText object for the cache. If the level of the Icon is equal to the last call of the method, the same (cached) object is returned. If the object is null or the level is different, a new object is created.<br>
-	 * 
+	 *
 	 * @param level
 	 *            4=is_incomplete(), 3=is_new(), 2=is_updated(), 1=is_log_updated
 	 * @param fm
@@ -1626,7 +1634,7 @@
 
 	/**
 	 * Gets the type of cache as integer.
-	 * 
+	 *
 	 * @return Cache type
 	 */
 	public byte getType() {
@@ -1635,7 +1643,7 @@
 
 	/**
 	 * Sets the type of the cache. As the cache type values are int for the rest of CacheWolf and byte internally of CacheHolder, some conversion has to be done.
-	 * 
+	 *
 	 * @param typeId
 	 *            Cache Type
 	 */
@@ -1698,7 +1706,7 @@
 	/**
 	 * If this returns <code>true</code>, then the additional waypoints for this cache should be displayed regardless how the filter is set. If it is <code>false</code>, then the normal filter settings apply.<br>
 	 * This property is not saved in index.xml, so if you reload the data, then this information is gone.
-	 * 
+	 *
 	 * @return <code>True</code>: Always display additional waypoints for cache.
 	 */
 	public boolean showAddis() {
@@ -1708,7 +1716,7 @@
 	/**
 	 * Setter for <code>showAddis()</code>. If this returns <code>true</code>, then the additional waypoints for this cache should be displayed regardless how the filter is set. If it is <code>false</code>, then the normal filter settings apply.<br>
 	 * This property is not saved in index.xml, so if you reload the data, then this information is gone.
-	 * 
+	 *
 	 * @param value
 	 *            <code>True</code>: Always display additional waypoints for cache.
 	 */
@@ -1748,7 +1756,7 @@
 	 * </ul>
 	 * The new method for deciding if a cache is visible or not is <code>isVisible()
 	 * </code>.
-	 * 
+	 *
 	 * @return <code>True</code> if filter criteria are matched
 	 */
 	public boolean is_filtered() {
@@ -1835,7 +1843,7 @@
 	/**
 	 * Determines if the blacklist status is set for the cache. Do not use this method to check if the cache should be displayed. Use <code>isVisible()</code> for this, which already does this (and other) checks.<br>
 	 * Only use this method if you really want to inform yourself about the black status of the cache!
-	 * 
+	 *
 	 * @return <code>true</code> if he black status of the cache is set.
 	 */
 	public boolean is_black() {
@@ -1967,7 +1975,7 @@
 
 	/**
 	 * rename a waypoint and all its associated files
-	 * 
+	 *
 	 * @param newWptId
 	 *            new waypoint id (will be converted to upper case)
 	 * @return true on success, false on error



From mik77 at mail.berlios.de  Mon Sep 26 12:03:56 2011
From: mik77 at mail.berlios.de (mik77 at mail.berlios.de)
Date: Mon, 26 Sep 2011 12:03:56 PM +0200
Subject: [Cachewolf-svn] r3111 - branches/r1.2
Message-ID: <20110926100356.6F3A54813E4@sheep.berlios.de>

Author: mik77
Date: 2011-09-26 12:03:56 +0200 (Mon, 26 Sep 2011)
New Revision: 3111

Modified:
   branches/r1.2/cw-jar.jnf
   branches/r1.2/cw-pc.jnf
   branches/r1.2/cw-pda.jnf
   branches/r1.2/cw-ppc2003.jnf
Log:
 - removed bouncycastle references from jnf-files

Modified: branches/r1.2/cw-jar.jnf
===================================================================
--- branches/r1.2/cw-jar.jnf	2011-09-26 09:21:21 UTC (rev 3110)
+++ branches/r1.2/cw-jar.jnf	2011-09-26 10:03:56 UTC (rev 3111)
@@ -1 +1 @@
-command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DJar%25252B-%25252BJava%25252B1.2&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%2526ewesoft/apps/
 jewel/EweDirEntry%253Dpath%25253Dbin/org/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253Dorg/%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico
+command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DJar%25252B-%25252BJava%25252B1.2&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%26addCommandLine%
 3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico

Modified: branches/r1.2/cw-pc.jnf
===================================================================
--- branches/r1.2/cw-pc.jnf	2011-09-26 09:21:21 UTC (rev 3110)
+++ branches/r1.2/cw-pc.jnf	2011-09-26 10:03:56 UTC (rev 3111)
@@ -1 +1 @@
-command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D-Xms%2B64M%2B-Xmx%2B192M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253Dx86%25252B-%25252BWin32%25252B-%25252BStatic%25252BLinked&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25
 253Dtrue%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/org%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253Dorg/%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D-Xms%252B64M%252B-Xmx%252B192M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico
+command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D-Xms%2B64M%2B-Xmx%2B192M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253Dx86%25252B-%25252BWin32%25252B-%25252BStatic%25252BLinked&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25
 253Dtrue%252526pathInEwe%25253D%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D-Xms%252B64M%252B-Xmx%252B192M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico

Modified: branches/r1.2/cw-pda.jnf
===================================================================
--- branches/r1.2/cw-pda.jnf	2011-09-26 09:21:21 UTC (rev 3110)
+++ branches/r1.2/cw-pda.jnf	2011-09-26 10:03:56 UTC (rev 3111)
@@ -1 +1 @@
-command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D/Xmx%2B6M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DPocketPC%25252B-%25252BARM/XScale%252526%25253DPocketPC%25252B-%25252BMIPS%252526%25253DPocketPC%25252B-%25252BSH3&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25
 253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/org%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253Dorg/%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D/Xmx%252B6M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico
+command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D/Xmx%2B6M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DPocketPC%25252B-%25252BARM/XScale%252526%25253DPocketPC%25252B-%25252BMIPS%252526%25253DPocketPC%25252B-%25252BSH3&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25
 253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D/Xmx%252B6M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico

Modified: branches/r1.2/cw-ppc2003.jnf
===================================================================
--- branches/r1.2/cw-ppc2003.jnf	2011-09-26 09:21:21 UTC (rev 3110)
+++ branches/r1.2/cw-ppc2003.jnf	2011-09-26 10:03:56 UTC (rev 3111)
@@ -1 +1 @@
-command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D/Xmx%2B6M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DPocketPC%25252B2003&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%2526ewesoft/apps/jewe
 l/EweDirEntry%253Dpath%25253Dbin/org%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253Dorg/%26addCommandLine%3Dtrue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D/Xmx%252B6M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico
+command=programName%3DCacheWolf%26width%3D0%26height%3D0%26startingClass%3DCacheWolf.CacheWolf%26windowTitle%3DWindow%2BTitle%26ewes%3D%26extra%3D%26pathToEwe%3D%26nativeStack%3D0%26vmStack%3D0%26appletWidth%3D0%26appletHeight%3D0%26appletInFrame%3Dfalse%26locale%3D%26useResources%3Dtrue%26noPopupWindows%3Dfalse%26vmOptions%3D/Xmx%2B6M&eweFiles=&targets=%253DTarget%3Dewe/data/MultiListSelect$SelectedItems%253D%25253DPocketPC%25252B2003&createWithPnf=true&eweInfo=outputFile%3Dwork/CacheWolf.ewe%26entries%3Dewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dbin/CacheWolf/%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253DCacheWolf/%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dresources%252526mask%25253D*.gif;*.png;*.ico%252526includeSubdirectories%25253Dfalse%252526pathInEwe%25253D%2526ewesoft/apps/jewel/EweDirEntry%253Dpath%25253Dlib%252526mask%25253D*.class%252526includeSubdirectories%25253Dtrue%252526pathInEwe%25253D%26addCommandLine%3Dtr
 ue%26commandLine%3DprogramName%253DCacheWolf%2526width%253D0%2526height%253D0%2526startingClass%253DCacheWolf.CacheWolf%2526windowTitle%253DWindow%252BTitle%2526ewes%253D%2526extra%253D%2526pathToEwe%253D%2526nativeStack%253D0%2526vmStack%253D0%2526appletWidth%253D0%2526appletHeight%253D0%2526appletInFrame%253Dfalse%2526locale%253D%2526useResources%253Dtrue%2526noPopupWindows%253Dfalse%2526vmOptions%253D/Xmx%252B6M%26install%3Dtitle%253D%2526category%253DApplications%2526location%253D%2526icon%253D%2526args%253D%2526vmArgs%253D%26addInstallFile%3Dfalse%26usePool%3Dfalse%26useClassPool%3Dfalse&icon=resources/CacheWolf.ico



From mik77 at mail.berlios.de  Wed Sep 28 04:19:06 2011
From: mik77 at mail.berlios.de (mik77 at mail.berlios.de)
Date: Wed, 28 Sep 2011 04:19:06 PM +0200
Subject: [Cachewolf-svn] r3112 - in trunk: res_noewe/attributes
	res_noewe/languages src/CacheWolf
Message-ID: <20110928141906.5491D481359@sheep.berlios.de>

Author: mik77
Date: 2011-09-28 16:19:05 +0200 (Wed, 28 Sep 2011)
New Revision: 3112

Added:
   trunk/res_noewe/attributes/frontyard-no.gif
   trunk/res_noewe/attributes/frontyard-non.gif
   trunk/res_noewe/attributes/frontyard-yes.gif
   trunk/res_noewe/attributes/seasonal-no.gif
   trunk/res_noewe/attributes/seasonal-non.gif
   trunk/res_noewe/attributes/seasonal-yes.gif
   trunk/res_noewe/attributes/teamwork-no.gif
   trunk/res_noewe/attributes/teamwork-non.gif
   trunk/res_noewe/attributes/teamwork-yes.gif
   trunk/res_noewe/attributes/touristOK-no.gif
   trunk/res_noewe/attributes/touristOK-non.gif
   trunk/res_noewe/attributes/touristOK-yes.gif
   trunk/res_noewe/attributes/treeclimbing-no.gif
   trunk/res_noewe/attributes/treeclimbing-non.gif
   trunk/res_noewe/attributes/treeclimbing-yes.gif
Modified:
   trunk/res_noewe/attributes/thorn-yes.gif
   trunk/res_noewe/languages/DE.cfg
   trunk/res_noewe/languages/EN.cfg
   trunk/src/CacheWolf/Attribute.java
Log:
 - attributes update (only English and German translation)

Added: trunk/res_noewe/attributes/frontyard-no.gif
===================================================================
(Binary files differ)


Property changes on: trunk/res_noewe/attributes/frontyard-no.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: trunk/res_noewe/attributes/frontyard-non.gif
===================================================================
(Binary files differ)


Property changes on: trunk/res_noewe/attributes/frontyard-non.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: trunk/res_noewe/attributes/frontyard-yes.gif
===================================================================
(Binary files differ)


Property changes on: trunk/res_noewe/attributes/frontyard-yes.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: trunk/res_noewe/attributes/seasonal-no.gif
===================================================================
(Binary files differ)


Property changes on: trunk/res_noewe/attributes/seasonal-no.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: trunk/res_noewe/attributes/seasonal-non.gif
===================================================================
(Binary files differ)


Property changes on: trunk/res_noewe/attributes/seasonal-non.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: trunk/res_noewe/attributes/seasonal-yes.gif
===================================================================
(Binary files differ)


Property changes on: trunk/res_noewe/attributes/seasonal-yes.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: trunk/res_noewe/attributes/teamwork-no.gif
===================================================================
(Binary files differ)


Property changes on: trunk/res_noewe/attributes/teamwork-no.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: trunk/res_noewe/attributes/teamwork-non.gif
===================================================================
(Binary files differ)


Property changes on: trunk/res_noewe/attributes/teamwork-non.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: trunk/res_noewe/attributes/teamwork-yes.gif
===================================================================
(Binary files differ)


Property changes on: trunk/res_noewe/attributes/teamwork-yes.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Modified: trunk/res_noewe/attributes/thorn-yes.gif
===================================================================
(Binary files differ)

Added: trunk/res_noewe/attributes/touristOK-no.gif
===================================================================
(Binary files differ)


Property changes on: trunk/res_noewe/attributes/touristOK-no.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: trunk/res_noewe/attributes/touristOK-non.gif
===================================================================
(Binary files differ)


Property changes on: trunk/res_noewe/attributes/touristOK-non.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: trunk/res_noewe/attributes/touristOK-yes.gif
===================================================================
(Binary files differ)


Property changes on: trunk/res_noewe/attributes/touristOK-yes.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: trunk/res_noewe/attributes/treeclimbing-no.gif
===================================================================
(Binary files differ)


Property changes on: trunk/res_noewe/attributes/treeclimbing-no.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: trunk/res_noewe/attributes/treeclimbing-non.gif
===================================================================
(Binary files differ)


Property changes on: trunk/res_noewe/attributes/treeclimbing-non.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: trunk/res_noewe/attributes/treeclimbing-yes.gif
===================================================================
(Binary files differ)


Property changes on: trunk/res_noewe/attributes/treeclimbing-yes.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Modified: trunk/res_noewe/languages/DE.cfg
===================================================================
--- trunk/res_noewe/languages/DE.cfg	2011-09-26 10:03:56 UTC (rev 3111)
+++ trunk/res_noewe/languages/DE.cfg	2011-09-28 14:19:05 UTC (rev 3112)
@@ -796,6 +796,16 @@
 2684=Erste Hilfe nahebei
 2685=nicht gesponsert
 2686=gesponsert
+2687=Nicht im Vorgarten
+2688=Im Vorgarten (mit Erlaubnis)
+2689=Ganzj?hrig zug?nglich
+2690=Nur saisonaler Zugang
+2691=Keine Teamarbeit n?tig
+2692=Teamarbeit n?tig
+2693=Nicht f?r Touristen empfohlen
+2694=Empfohlen f?r Touristen
+2695=Kein Baumklettern
+2696=Baumklettern n?tig
 3000=Schlie?en
 4000=Geladene Caches:+
 4001=GPX-Dateien von Opencaching enthalten keine Informationen zu Bildern, sie werden nicht heruntergeladen. Am besten Caches von Opencaching holen per Men? /Anwendung/Import/von Opencaching
@@ -997,7 +1007,7 @@
 5520=Nur das eingestellte Maximum an Caches wurde geladen.\nWiederholen sie das Spidern sp?ter um weitere Caches zu laden.\nEs wurden keine vorhandenen Caches aktualisiert.
 5521=Seite+
 5522=Pr?fen auf ?ltere XML-Dateien ( ohne <CACHE... /> ) ?
-
+
 6000=Guid
 6001=Name
 6002=Track#
@@ -1039,17 +1049,17 @@
 6046=Nur nicht geloggte zeigen
 6047=Ausgew?hlte Zeilen l?schen
 6050=Spalten zeigen
-6051=Spalten verbergen
-6052=Men?
-6053=Travelbug Men?
-6054=Alle anzeigen
-6055=Sortieren...
-6056=Expertenansicht
-6057=zur?ck
-6058=Aufgenommen:
-6059=Datum: 
-6060=Abgelegt:
-6061=Schlie?en
+6051=Spalten verbergen
+6052=Men?
+6053=Travelbug Men?
+6054=Alle anzeigen
+6055=Sortieren...
+6056=Expertenansicht
+6057=zur?ck
+6058=Aufgenommen:
+6059=Datum: 
+6060=Abgelegt:
+6061=Schlie?en
 6062=Track-Nr
 
 6100=Sonne

Modified: trunk/res_noewe/languages/EN.cfg
===================================================================
--- trunk/res_noewe/languages/EN.cfg	2011-09-26 10:03:56 UTC (rev 3111)
+++ trunk/res_noewe/languages/EN.cfg	2011-09-28 14:19:05 UTC (rev 3112)
@@ -796,6 +796,16 @@
 2684 = First Aid nearby
 2685=not sponsored
 2686=sponsored
+2687=Not in front yard
+2688=Front yard (with permission)
+2689=Available all year
+2690=Seasonal access only
+2691=No teamwork required
+2692=Teamwork required
+2693=Not recommended for tourists
+2694=Recommended for tourists
+2695=No tree climbing
+2696=Tree climbing required
 3000=Close
 4000=Loaded caches:+
 4001=GPX files from opencaching don't contain information of images, they cannot be loaded. Best you get caches from opencaching by menu /Application/Import/Download from Opencaching
@@ -958,7 +968,7 @@
 4827=(measured in meters per pixel vertically)
 4828=Coordinate system not supported by Cachewolf:
 4829=getUrlForBoundingBox: Point:
-4830=No matching Gau?-Kr?ger-Stripe in the EPSG-code list in the .wms
+4830=No matching Gau??-Kr??ger-Stripe in the EPSG-code list in the .wms
 4831=getMapInfoObject: Coordinate system not supported by Cachewolf:
 4900=+is not a german Gauss-Krueger coordinate
 4920=EPSG code+
@@ -1038,18 +1048,18 @@
 6046=Show only not logged
 6047=Delete selected Travelbugs
 6050=Show column
-6051=Don't show column
-6052=Menu
-6053=Travelbug Menu
-6054=Show all
-6055=Sort ...
-6056=Expertview
-6057=Back
-6058=Retrieved:
-6059=Date: 
-6060=Dropped off:
-6061=Close
-6062=Track-No
+6051=Don't show column
+6052=Menu
+6053=Travelbug Menu
+6054=Show all
+6055=Sort ...
+6056=Expertview
+6057=Back
+6058=Retrieved:
+6059=Date: 
+6060=Dropped off:
+6061=Close
+6062=Track-No
 
 6100=Sun
 6101=Moon

Modified: trunk/src/CacheWolf/Attribute.java
===================================================================
--- trunk/src/CacheWolf/Attribute.java	2011-09-26 10:03:56 UTC (rev 3111)
+++ trunk/src/CacheWolf/Attribute.java	2011-09-28 14:19:05 UTC (rev 3112)
@@ -259,8 +259,8 @@
 			{ "10", "2522", "danger", "9", "23", "Dangerous area" },// 22 dangerous area
 			{ "11", "2524", "dogs", "0", "1", "Dogs" },// 24 dogs allowed
 			{ "12", "2526", "fee", "36", "2", "Access or parking fee" },// 26 access/parking fees
-			// {"13","2528","hiking","0","9","Significant hike"},//28 significant hike : removed
-			{ "13", "2528", "hiking", "25", "125", "Long walk" }, // OC special
+			{ "13", "2528", "hiking", "25", "9","Significant hike"},//28 significant hike
+			//{ "13", "2528", "hiking", "25", "125", "Long walk" }, // OC special
 			{ "14", "2530", "horses", "0", "37", "Horses" },// 30 horses allowed
 			{ "15", "2532", "hunting", "12", "22", "Hunting" },// 32 hunting area
 			{ "16", "2534", "jeeps", "0", "35", "Off-road vehicles" },// 34 off-road vehicles allowed
@@ -335,9 +335,14 @@
 			{ "84", "2676", "hike_long", "0", "57", "Long Hike" }, // added by araber95 14.8.10
 			{ "85", "2678", "fuel", "0", "58", "Fuel nearby" }, // changed by araber95 14.08.10
 			{ "86", "2680", "food", "0", "59", "Food nearby" }, // changed by araber95 14.08.10
-			{ "87", "2681", "wirelessbeacon", "0", "60", "Wireless Beacon" }, // added by araber95 27.10.10
-			{ "88", "2588", "firstaid", "23", "123", "First aid available" }, // OC special
-			{ "89", "2685", "sponsored", "0", "61", "Sponsored Cache" },
+			{ "87", "2682", "wirelessbeacon", "0", "60", "Wireless Beacon" }, // added by araber95 27.10.10
+			{ "88", "2584", "firstaid", "23", "123", "First aid available" }, // OC special
+			{ "89", "2686", "sponsored", "0", "61", "Sponsored Cache" },
+			{ "90", "2688", "frontyard", "0", "65", "Front Yard (Private Residence)" },
+			{ "91", "2690", "seasonal", "0", "62", "Seasonal Access" },
+			{ "92", "2692", "teamwork", "0", "66", "Teamwork Required" },
+			{ "93", "2694", "touristOK", "0", "63", "Tourist Friendly" },
+			{ "94", "2696", "treeclimbing", "0", "64", "Tree Climbing" },
 	// {"-1","2500","error","0","0",""}, //
 
 	};



